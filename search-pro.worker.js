const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":2898,\"nextId\":2898,\"documentIds\":{\"0\":\"0\",\"1\":\"2\",\"2\":\"2#一、通过脚手架初始化项目\",\"3\":\"2#_1-下载项目\",\"4\":\"2#_2-安装依赖\",\"5\":\"2#_3-运行项目\",\"6\":\"2#二、初始化git\",\"7\":\"2#_1-初始化-git-本地仓库\",\"8\":\"2#_2-添加所有文件\",\"9\":\"2#_3-提交文件\",\"10\":\"2#_4-修改分支名称\",\"11\":\"2#_5-链接到-github\",\"12\":\"2#_6-推送到-github\",\"13\":\"2#三、设置-commit-规范\",\"14\":\"2#_1-安装依赖\",\"15\":\"2#_2-修改-package-json\",\"16\":\"2#_3-创建配置文件\",\"17\":\"2#_4-测试\",\"18\":\"2#四、代码格式化\",\"19\":\"2#_1-eslint\",\"20\":\"2#_2-prettier\",\"21\":\"2#_3-stylelint\",\"22\":\"2#_4-修改package-json\",\"23\":\"2#_5-统一编辑器配置\",\"24\":\"2#五、强制代码格式化\",\"25\":\"2#_1-安装依赖-1\",\"26\":\"2#_2-初始化\",\"27\":\"2#_3-修改配置文件\",\"28\":\"2#六、强制-commit-规范\",\"29\":\"2#_1-安装依赖-2\",\"30\":\"2#_2-创建配置文件\",\"31\":\"2#_3-添加-commit-msg-钩子-执行信息校验\",\"32\":\"2#_4-测试-1\",\"33\":\"2#_5-mac-获取权限\",\"34\":\"2#_6-修改package-json\",\"35\":\"2#七、安装第三方库\",\"36\":\"2#_1-scss\",\"37\":\"2#_2-element-plus\",\"38\":\"2#_3-css初始化\",\"39\":\"2#_3-自动引入依赖\",\"40\":\"2#八、修改-tsconfig-json\",\"41\":\"2#九、github-地址\",\"42\":\"2@0\",\"43\":\"2@1\",\"44\":\"3\",\"45\":\"3#一、通过脚手架初始化项目\",\"46\":\"3#_1-下载脚手架\",\"47\":\"3#_2-创建项目\",\"48\":\"3#_3-运行项目\",\"49\":\"3#二、初始化git\",\"50\":\"3#_1-初始化-git-本地仓库\",\"51\":\"3#_2-添加所有文件\",\"52\":\"3#_3-提交文件\",\"53\":\"3#_4-修改分支名称\",\"54\":\"3#_5-链接到-github\",\"55\":\"3#_6-推送到-github\",\"56\":\"3#三、设置-commit-规范\",\"57\":\"3#_1-安装依赖\",\"58\":\"3#_2-修改-package-json\",\"59\":\"3#_3-创建配置文件\",\"60\":\"3#_4-测试\",\"61\":\"3#四、代码格式化\",\"62\":\"3#_1-eslint\",\"63\":\"3#_2-prettier\",\"64\":\"3#_3-stylelint\",\"65\":\"3#_4-修改package-json\",\"66\":\"3#_5-统一编辑器配置\",\"67\":\"3#五、强制代码格式化\",\"68\":\"3#_1-安装依赖-1\",\"69\":\"3#_2-初始化\",\"70\":\"3#_3-修改配置文件\",\"71\":\"3#六、强制-commit-规范\",\"72\":\"3#_1-安装依赖-2\",\"73\":\"3#_2-创建配置文件\",\"74\":\"3#_3-添加-commit-msg-钩子-执行信息校验\",\"75\":\"3#_4-测试-1\",\"76\":\"3#_5-mac-获取权限\",\"77\":\"3#_6-修改package-json\",\"78\":\"3#七、安装第三方库\",\"79\":\"3#_1-scss\",\"80\":\"3#_2-element\",\"81\":\"3#_3-css初始化\",\"82\":\"3#_4-vue-router\",\"83\":\"3#_5-vuex\",\"84\":\"3@0\",\"85\":\"3@1\",\"86\":\"4\",\"87\":\"4#自定义指令\",\"88\":\"4#注册指令\",\"89\":\"4#使用\",\"90\":\"4@0\",\"91\":\"4@1\",\"92\":\"5\",\"93\":\"5#官网下载ffmeg\",\"94\":\"5#代码\",\"95\":\"5@0\",\"96\":\"5@1\",\"97\":\"6\",\"98\":\"6#代码没有变化-git显示有差异\",\"99\":\"6@0\",\"100\":\"6@1\",\"101\":\"7\",\"102\":\"7#delete-␍eslint-prettier-prettier\",\"103\":\"7#配置-prettierrc文件\",\"104\":\"7#修改git\",\"105\":\"7@0\",\"106\":\"7@1\",\"107\":\"8\",\"108\":\"8#修改package-json文件\",\"109\":\"8#在根目录下创建modifymanifest-js\",\"110\":\"8#修改vue-config-js\",\"111\":\"8#创建config-js来保存全局变量\",\"112\":\"8#运行\",\"113\":\"8@0\",\"114\":\"8@1\",\"115\":\"9\",\"116\":\"9#总体思路\",\"117\":\"9#初始化阶段\",\"118\":\"9#搜索附近设备\",\"119\":\"9#连接设备\",\"120\":\"9#监听\",\"121\":\"9#第一步-获取蓝牙服务\",\"122\":\"9#第二步-获取指定服务的特征值\",\"123\":\"9#第三步-开启消息监听并接收消息监听传来的数据\",\"124\":\"9#发送指令\",\"125\":\"9#uni-writeblecharacteristicvalue\",\"126\":\"9#uni-readblecharacteristicvalue\",\"127\":\"9#完整代码\",\"128\":\"9#封装\",\"129\":\"9@0\",\"130\":\"9@1\",\"131\":\"10\",\"132\":\"10#css-省略号\",\"133\":\"10#单行溢出显示省略号\",\"134\":\"10#多行溢出显示省略号\",\"135\":\"10#省略号显示在文本前\",\"136\":\"10#换行\",\"137\":\"10@0\",\"138\":\"10@1\",\"139\":\"12\",\"140\":\"12#css\",\"141\":\"12#html\",\"142\":\"12#javascript\",\"143\":\"12#网络\",\"144\":\"12#浏览器\",\"145\":\"12#vue\",\"146\":\"14\",\"147\":\"14#什么是bfc\",\"148\":\"14#如何创建bfc\",\"149\":\"14#布局规则\",\"150\":\"14#特性\",\"151\":\"14#bfc会阻止垂直外边距折叠\",\"152\":\"14#bfc不会重叠浮动元素\",\"153\":\"14#清除浮动\",\"154\":\"14@0\",\"155\":\"14@1\",\"156\":\"16\",\"157\":\"16#单列布局\",\"158\":\"16#两列自适应布局\",\"159\":\"16#三栏布局\",\"160\":\"16#等高布局\",\"161\":\"16#粘连布局\",\"162\":\"16@0\",\"163\":\"16@1\",\"164\":\"17\",\"165\":\"17#定位-absolute-负margin\",\"166\":\"17#定位-absolute-margin-auto\",\"167\":\"17#定位-absolute-calc\",\"168\":\"17#定位-absolute-transform\",\"169\":\"17#flex\",\"170\":\"17#flex-margin\",\"171\":\"17#lineheight\",\"172\":\"17#table\",\"173\":\"17#css-table\",\"174\":\"17#grid\",\"175\":\"17@0\",\"176\":\"17@1\",\"177\":\"18\",\"178\":\"18#特点\",\"179\":\"18#缺点\",\"180\":\"18#清理浮动\",\"181\":\"18#给浮动元素的父元素添加高度-扩展性不好\",\"182\":\"18#clear-both\",\"183\":\"18#伪元素清除浮动\",\"184\":\"18#给父元素使用-overflow-hidden\",\"185\":\"18#br-标签清浮动\",\"186\":\"18@0\",\"187\":\"18@1\",\"188\":\"19\",\"189\":\"19#初始化项目\",\"190\":\"19#安装express\",\"191\":\"19#编写代码\",\"192\":\"19#安装cros\",\"193\":\"19#安装body-parser\",\"194\":\"19@0\",\"195\":\"19@1\",\"196\":\"20\",\"197\":\"20@0\",\"198\":\"20@1\",\"199\":\"23\",\"200\":\"23#移动端适配的目的\",\"201\":\"23#viewport-的基本概念\",\"202\":\"23#设置视口\",\"203\":\"23#适配方案\",\"204\":\"23#css3-媒体查询\",\"205\":\"23#百分比布局方案\",\"206\":\"23#rem-方案\",\"207\":\"23#元素的-rem-值计算\",\"208\":\"23#vw、vh-方案\",\"209\":\"23@0\",\"210\":\"23@1\",\"211\":\"24\",\"212\":\"24#语义化\",\"213\":\"24#理解\",\"214\":\"24#优点\",\"215\":\"24#html语义化\",\"216\":\"24#css语义化\",\"217\":\"24#seo\",\"218\":\"24#权重\",\"219\":\"24#优化\",\"220\":\"24@0\",\"221\":\"24@1\",\"222\":\"25\",\"223\":\"25#重绘与回流\",\"224\":\"25#常见引起重排属性和方法\",\"225\":\"25#常见引起重绘属性和方法\",\"226\":\"25#如何减少重排、重绘\",\"227\":\"25@0\",\"228\":\"25@1\",\"229\":\"26\",\"230\":\"26#dom-事件级别\",\"231\":\"26#dom-0-级事件\",\"232\":\"26#dom-2-级事件\",\"233\":\"26#dom-3-级事件\",\"234\":\"26#dom-事件模型和事件流\",\"235\":\"26#事件代理-事件委托\",\"236\":\"26#优点\",\"237\":\"26#如何实现\",\"238\":\"26#event-对象常见的应用\",\"239\":\"26#event-preventdefault\",\"240\":\"26#event-stoppropagation-event-stopimmediatepropagation\",\"241\":\"26#event-target-event-currenttarget\",\"242\":\"26@0\",\"243\":\"26@1\",\"244\":\"27\",\"245\":\"27#一、es6-新特性-2015\",\"246\":\"27#_1-let-和-const\",\"247\":\"27#_1-重新赋值\",\"248\":\"27#_2-块级作用域\",\"249\":\"27#_3-变量提升\",\"250\":\"27#_4-重复声明\",\"251\":\"27#_2-解构赋值\",\"252\":\"27#_1-数组解构\",\"253\":\"27#_2-对象解构\",\"254\":\"27#_3-其他解构赋值\",\"255\":\"27#_3-模板字符串\",\"256\":\"27#_4-函数默认参数\",\"257\":\"27#_1-函数-length-属性值\",\"258\":\"27#_2-参数作用域\",\"259\":\"27#_5-箭头函数\",\"260\":\"27#_1-更加简洁\",\"261\":\"27#_2-不绑定-this\",\"262\":\"27#_3-不可作为构造函数\",\"263\":\"27#_4-不绑定-arguments\",\"264\":\"27#_6-扩展运算符\",\"265\":\"27#_1-将数组转化为用逗号分隔的参数序列\",\"266\":\"27#_2-将一个数组拼接到另一个数组\",\"267\":\"27#_3-将字符串转为逗号分隔的数组\",\"268\":\"27#_7-symbol\",\"269\":\"27#_1-避免常量值重复\",\"270\":\"27#_2-避免对象属性覆盖\",\"271\":\"27#_8-集合-set\",\"272\":\"27#_9-map\",\"273\":\"27#_10-模块化\",\"274\":\"27#_1-export-导出模块\",\"275\":\"27#_2-import-导入模块\",\"276\":\"27#_3-导入导出复合用法\",\"277\":\"27#_4-模块的继承\",\"278\":\"27#_11-字符串方法\",\"279\":\"27#_1-includes\",\"280\":\"27#_2-startswith\",\"281\":\"27#_3-endswith\",\"282\":\"27#_4-repeat\",\"283\":\"27#_12-数组方法\",\"284\":\"27#_1-reduce\",\"285\":\"27#_2-filter\",\"286\":\"27#_3-array-from\",\"287\":\"27#_4-fill\",\"288\":\"27#二、es7-新特性-2016\",\"289\":\"27#_1-array-includes\",\"290\":\"27#_2-指数操作符\",\"291\":\"27#三、es8-新特性-2017\",\"292\":\"27#_1-padstart-和-padend\",\"293\":\"27#_1-padstart\",\"294\":\"27#_2-padend\",\"295\":\"27#_2-object-values-和-object-entries\",\"296\":\"27#_3-函数扩展\",\"297\":\"27#_4-object-values\",\"298\":\"27#四、es9-新特性-2018\",\"299\":\"27#_1-for-await-of\",\"300\":\"27#_2-promise-finally\",\"301\":\"27#_3-对象的扩展运算符\",\"302\":\"27#_1-将元素组织成对象\",\"303\":\"27#_2-将对象扩展为元素\",\"304\":\"27#_3-可以用来合并对象\",\"305\":\"27#_4-对象的-rest\",\"306\":\"27#五、es10-新特性-2019\",\"307\":\"27#_1-trimstart-和-trimend\",\"308\":\"27#_1-trimstart\",\"309\":\"27#_2-trimstart\",\"310\":\"27#_2-flat-和-flatmap\",\"311\":\"27#_1-flat\",\"312\":\"27#_2-flatmap\",\"313\":\"27#_3-object-fromentries\",\"314\":\"27#_1-将数组转成对象\",\"315\":\"27#_2-将-map-转成对象\",\"316\":\"27#_4-symbol-描述\",\"317\":\"27#_5-tostring\",\"318\":\"27#_6-catch\",\"319\":\"27#六、es11-新特性-2020\",\"320\":\"27#_1-bigint\",\"321\":\"27#_2-空值合并运算符\",\"322\":\"27#_3-可选链操作符\",\"323\":\"27#_4-promise-allsettled\",\"324\":\"27#_5-string-matchall\",\"325\":\"27#七、es12-新特性-2021\",\"326\":\"27#_1-string-replaceall\",\"327\":\"27#_2-数字分隔符\",\"328\":\"27#_3-promise-any\",\"329\":\"27#_4-逻辑赋值操作符\",\"330\":\"27#八、es13-新特性-2022\",\"331\":\"27#_1-object-hasown\",\"332\":\"27#_2-at\",\"333\":\"27#_3-error-cause\",\"334\":\"27#_4-top-level-await\",\"335\":\"27@0\",\"336\":\"27@1\",\"337\":\"29\",\"338\":\"29#_1-web-audio-api\",\"339\":\"29#_2-fullscreen-api\",\"340\":\"29#_3-web-speech-api\",\"341\":\"29#_4-web-bluetooth-api\",\"342\":\"29#_5-vibration-api\",\"343\":\"29#_6-broadcast-channel-api\",\"344\":\"29#_7-clipboard-api\",\"345\":\"29#_8-web-share-api\",\"346\":\"29@0\",\"347\":\"29@1\",\"348\":\"30\",\"349\":\"30#_1-执行上下文\",\"350\":\"30#_1-执行上下文概念\",\"351\":\"30#_2-执行上下文栈\",\"352\":\"30#_2-函数的-this-指向\",\"353\":\"30#_1-默认绑定-全局环境\",\"354\":\"30#_2-隐式绑定-上下文对象\",\"355\":\"30#_3-显示绑定-apply、call、bind\",\"356\":\"30#手写call\",\"357\":\"30#手写apply\",\"358\":\"30#手写bind\",\"359\":\"30#_4-new-绑定-构造函数\",\"360\":\"30#_3-this-的优先级\",\"361\":\"30#_4-特殊的-this-指向\",\"362\":\"30#_1-箭头函数\",\"363\":\"30#_2-数组方法\",\"364\":\"30#_3-立即执行函数\",\"365\":\"30#_4-settimeout-和-setinterval\",\"366\":\"30@0\",\"367\":\"30@1\",\"368\":\"31\",\"369\":\"31#_1-异步执行原理\",\"370\":\"31#_1-单线程的javascript\",\"371\":\"31#_2-多线程的浏览器\",\"372\":\"31#_2-浏览器的事件循环\",\"373\":\"31#_1-执行栈与任务队列\",\"374\":\"31#执行栈\",\"375\":\"31#任务队列\",\"376\":\"31#_2-宏任务和微任务\",\"377\":\"31#_3-node-js的事件循环\",\"378\":\"31#_1-事件循环的概念\",\"379\":\"31#_2-事件循环的流程\",\"380\":\"31#_3-宏任务和微任务\",\"381\":\"31#_4-process-nexttick\",\"382\":\"31#_5-setimmediate-和-settimeout\",\"383\":\"31#_4-node与浏览器event-loop差异\",\"384\":\"31@0\",\"385\":\"31@1\",\"386\":\"32\",\"387\":\"32#_1-blob\",\"388\":\"32#_1-blob-创建\",\"389\":\"32#_2-blob-分片\",\"390\":\"32#_2-file\",\"391\":\"32#_1-input\",\"392\":\"32#_2-文件拖放\",\"393\":\"32#_3-filereader\",\"394\":\"32#_1-基本使用\",\"395\":\"32#_2-事件处理\",\"396\":\"32#_4-arraybuffer\",\"397\":\"32#_1-arraybuffer\",\"398\":\"32#new-arraybuffer\",\"399\":\"32#arraybuffer-prototype-bytelength\",\"400\":\"32#arraybuffer-prototype-slice\",\"401\":\"32#arraybuffer-isview\",\"402\":\"32#_2-typedarray\",\"403\":\"32#new-typedarray\",\"404\":\"32#bytes-per-element\",\"405\":\"32#typedarray-prototype-buffer\",\"406\":\"32#typedarray-prototype-slice\",\"407\":\"32#bytelength-和-length\",\"408\":\"32#_3-dataview\",\"409\":\"32#new-dataview\",\"410\":\"32#buffer、bytelength、byteoffset\",\"411\":\"32#读取内存\",\"412\":\"32#写入内存\",\"413\":\"32#_5-object-url\",\"414\":\"32#_6-base64\",\"415\":\"32#_7-格式转化\",\"416\":\"32#_1-arraybuffer-→-blob\",\"417\":\"32#_2-arraybuffer-→-base64\",\"418\":\"32#_3-base64-→-blob\",\"419\":\"32#_4-blob-→-arraybuffer\",\"420\":\"32#_5-blob-→-base64\",\"421\":\"32#_6-blob-→-object-url\",\"422\":\"32@0\",\"423\":\"32@1\",\"424\":\"33\",\"425\":\"33#一、什么是内存泄漏\",\"426\":\"33#二、常见的内存泄漏\",\"427\":\"33#_1-意外全局变量\",\"428\":\"33#_1-为未声明的变量赋值\",\"429\":\"33#_2-使用指向全局对象的-this\",\"430\":\"33#_2-计时器\",\"431\":\"33#_3-闭包\",\"432\":\"33#_4-事件监听器\",\"433\":\"33#_5-缓存\",\"434\":\"33#_6-分离的-dom-元素\",\"435\":\"33#三、识别内存泄漏\",\"436\":\"33#_1-使用性能分析器可视化内存消耗\",\"437\":\"33#_2-识别分离的-dom-节点\",\"438\":\"33@0\",\"439\":\"33@1\",\"440\":\"34\",\"441\":\"34#_1-模块概述\",\"442\":\"34#_1-概念\",\"443\":\"34#_2-模式\",\"444\":\"34#_3-类型\",\"445\":\"34#_2-iife\",\"446\":\"34#_3-commonjs\",\"447\":\"34#_1-概念-1\",\"448\":\"34#定义\",\"449\":\"34#语法\",\"450\":\"34#优缺点\",\"451\":\"34#_2-使用\",\"452\":\"34#模块导出\",\"453\":\"34#模块导入\",\"454\":\"34#加载过程\",\"455\":\"34#_3-示例\",\"456\":\"34#_4-amd\",\"457\":\"34#_1-概念-2\",\"458\":\"34#语法-1\",\"459\":\"34#兼容性\",\"460\":\"34#优缺点-1\",\"461\":\"34#_2-使用-1\",\"462\":\"34#引入-requirejs\",\"463\":\"34#定义-amd-模块\",\"464\":\"34#_5-cmd\",\"465\":\"34#_6-umd\",\"466\":\"34#_7-es-模块\",\"467\":\"34#_1-概念-3\",\"468\":\"34#_2-语法\",\"469\":\"34#导出\",\"470\":\"34#导入\",\"471\":\"34#动态导入\",\"472\":\"34#其他用法\",\"473\":\"34#_3-在浏览器使用\",\"474\":\"34#_4-在-node-js-使用\",\"475\":\"34@0\",\"476\":\"34@1\",\"477\":\"35\",\"478\":\"35#构造函数\",\"479\":\"35#原型\",\"480\":\"35#原型链\",\"481\":\"35#proto和-constructor\",\"482\":\"35#何为原型链\",\"483\":\"35#继承\",\"484\":\"35#_1-原型链继承\",\"485\":\"35#缺点\",\"486\":\"35#_2-构造函数继承-借助-call\",\"487\":\"35#缺点-1\",\"488\":\"35#_3-组合继承-前两种组合\",\"489\":\"35#缺点-2\",\"490\":\"35#_4-原型式继承\",\"491\":\"35#缺点-3\",\"492\":\"35#_5-寄生式继承\",\"493\":\"35#缺点-4\",\"494\":\"35#_6-寄生组合式继承-最优\",\"495\":\"35#_7-es6-中-extends-实现继承\",\"496\":\"35#总结\",\"497\":\"35@0\",\"498\":\"35@1\",\"499\":\"36\",\"500\":\"36#_1-什么变量提升\",\"501\":\"36#_2-为什么会有变量提升\",\"502\":\"36#_1-提高性能\",\"503\":\"36#_2-容错性更好\",\"504\":\"36#_3-变量提升导致的问题\",\"505\":\"36#_1-变量被覆盖\",\"506\":\"36#_2-变量没有被销毁\",\"507\":\"36#_4-禁用变量提升\",\"508\":\"36#_5-js如何支持块级作用域\",\"509\":\"36#_1-创建执行上下文\",\"510\":\"36#_2-执行代码\",\"511\":\"36#_6-暂时性死区\",\"512\":\"36@0\",\"513\":\"36@1\",\"514\":\"37\",\"515\":\"37#_1-获取字符串长度\",\"516\":\"37#_2-获取字符串指定位置的值\",\"517\":\"37#_1-charat\",\"518\":\"37#_2-charcodeat\",\"519\":\"37#_3-检索字符串是否包含特定序列\",\"520\":\"37#_1-indexof\",\"521\":\"37#_2-lastindexof\",\"522\":\"37#_3-includes\",\"523\":\"37#_4-startswith\",\"524\":\"37#_5-endswith\",\"525\":\"37#_4-连接多个字符串\",\"526\":\"37#_5-字符串分割成数组\",\"527\":\"37#_6-截取字符串\",\"528\":\"37#_1-slice\",\"529\":\"37#_2-substr\",\"530\":\"37#_3-substring\",\"531\":\"37#_7-字符串大小写转换\",\"532\":\"37#_1-tolowercase\",\"533\":\"37#_2-touppercase\",\"534\":\"37#_8-字符串模式匹配\",\"535\":\"37#_1-replace\",\"536\":\"37#_2-match\",\"537\":\"37#_3-search\",\"538\":\"37#_9-移除字符串收尾空白符\",\"539\":\"37#_1-trim\",\"540\":\"37#_2-trimstart\",\"541\":\"37#_3-trimend\",\"542\":\"37#_10-获取字符串本身\",\"543\":\"37#_1-valueof\",\"544\":\"37#_2-tostring\",\"545\":\"37#_11-重复一个字符串\",\"546\":\"37#_12-补齐字符串长度\",\"547\":\"37#_1-padstart\",\"548\":\"37#_2-padend\",\"549\":\"37#_13-字符串转为数字\",\"550\":\"37#_1-parseint\",\"551\":\"37#_2-parsefloat\",\"552\":\"37@0\",\"553\":\"37@1\",\"554\":\"38\",\"555\":\"38#一、什么是异步\",\"556\":\"38#二、回调函数\",\"557\":\"38#_1-定时器\",\"558\":\"38#_2-事件监听\",\"559\":\"38#_3-网络请求\",\"560\":\"38#_4-node-中的回调与事件\",\"561\":\"38#三、promise\",\"562\":\"38#_1-promise-的概念\",\"563\":\"38#_1-promise-实例有三个状态\",\"564\":\"38#_2-promise-实例有两个过程\",\"565\":\"38#_2-promise-的特点\",\"566\":\"38#_3-promise-的创建\",\"567\":\"38#_1-promise-resolve\",\"568\":\"38#_2-promise-reject\",\"569\":\"38#_4-promise-的作用\",\"570\":\"38#_5-promise的方法\",\"571\":\"38#_1-then\",\"572\":\"38#_2-catch\",\"573\":\"38#_3-all\",\"574\":\"38#_4-race\",\"575\":\"38#_5-finally\",\"576\":\"38#_6-allsettled\",\"577\":\"38#_7-any\",\"578\":\"38#_6-promise的异常处理\",\"579\":\"38#_7-promise的实现\",\"580\":\"38#_1-promise\",\"581\":\"38#_2-promise-then\",\"582\":\"38#_3-promise-all\",\"583\":\"38#_4-promise-race\",\"584\":\"38#_5-完整\",\"585\":\"38#四、generator\",\"586\":\"38#_1-generator-概述\",\"587\":\"38#_1-generator\",\"588\":\"38#_2-yield\",\"589\":\"38#_3-生成器原理\",\"590\":\"38#_2-generator-和-thunk-结合\",\"591\":\"38#_3-generator-和-promise-结合\",\"592\":\"38#_4-co-函数库\",\"593\":\"38#五、async-await\",\"594\":\"38#_1-async-await-的概念\",\"595\":\"38#_2-await-到底在等啥\",\"596\":\"38#_3-async-await的优势\",\"597\":\"38#_4-async-await-的异常处理\",\"598\":\"38@0\",\"599\":\"38@1\",\"600\":\"39\",\"601\":\"39#一、一元操作符\",\"602\":\"39#_1-递增和递减操作符\",\"603\":\"39#_2-加和减操作符\",\"604\":\"39#_1-一元加运算符\",\"605\":\"39#_2-一元减运算符\",\"606\":\"39#二、位操作符\",\"607\":\"39#_1-按位与操作符\",\"608\":\"39#_2-按位或操作符\",\"609\":\"39#_3-按位非操作符\",\"610\":\"39#_4-按位异或运算符\",\"611\":\"39#_5-左移操作符\",\"612\":\"39#_6-右移运算符\",\"613\":\"39#_1-有符号右移操作符\",\"614\":\"39#_2-无符号右移操作符\",\"615\":\"39#三、加减乘除操作符\",\"616\":\"39#_1-加法操作符\",\"617\":\"39#_2-减法操作符\",\"618\":\"39#_3-乘法操作符\",\"619\":\"39#_4-除法操作符\",\"620\":\"39#_5-取余操作符\",\"621\":\"39#_6-指数操作符\",\"622\":\"39#四、布尔操作符\",\"623\":\"39#_1-逻辑非操作符\",\"624\":\"39#_2-逻辑与操作符\",\"625\":\"39#_3-逻辑或操作符\",\"626\":\"39#五、比较操作符\",\"627\":\"39#_1-相等操作符\",\"628\":\"39#_2-关系操作符\",\"629\":\"39#六、其他操作符\",\"630\":\"39#_1-扩展操作符\",\"631\":\"39#_1-用于展开数组\",\"632\":\"39#_2-将类数组对象变成数组\",\"633\":\"39#_3-用于展开对象\",\"634\":\"39#_4-用于展开字符串\",\"635\":\"39#_5-用于函数传参\",\"636\":\"39#_6-用于具有-iterator-接口的对象\",\"637\":\"39#_2-条件操作符\",\"638\":\"39#_3-赋值操作符\",\"639\":\"39#_4-in操作符-in\",\"640\":\"39#_5-delete操作符-delete\",\"641\":\"39#_6-instanceof操作符-instanceof\",\"642\":\"39#_7-typeof操作符-typeof\",\"643\":\"39#_8-空值合并操作符\",\"644\":\"39#_9-可选链操作符\",\"645\":\"39#_10-逗号操作符\",\"646\":\"39#_11-void操作符-void\",\"647\":\"39@0\",\"648\":\"39@1\",\"649\":\"40\",\"650\":\"40#有哪些数据类型\",\"651\":\"40#区别\",\"652\":\"40#基本数据类型和引用数据类型\",\"653\":\"40#symbol\",\"654\":\"40#null-与-undefind\",\"655\":\"40#数据类型检测\",\"656\":\"40#typeof\",\"657\":\"40#instanceof\",\"658\":\"40#constructor\",\"659\":\"40#object-prototype-tostring-call\",\"660\":\"40#数据类型转换\",\"661\":\"40#强制转换\",\"662\":\"40#其他类型数据转换为-string\",\"663\":\"40#其他类型数据转换为-number\",\"664\":\"40#其他类型数据转换为-boolean\",\"665\":\"40#自动转换\",\"666\":\"40#自动转换为布尔值\",\"667\":\"40#自动转换为数值\",\"668\":\"40#自动转换为字符串\",\"669\":\"40#总结\",\"670\":\"40@0\",\"671\":\"40@1\",\"672\":\"41\",\"673\":\"41#一、数组基础\",\"674\":\"41#_1-数组概述\",\"675\":\"41#_2-数组创建\",\"676\":\"41#_1-字面量\",\"677\":\"41#_2-构造函数\",\"678\":\"41#_3-es6-构造器\",\"679\":\"41#_3-数组空位\",\"680\":\"41#_4-数组索引\",\"681\":\"41#_5-数组判断\",\"682\":\"41#二、数组方法\",\"683\":\"41#_1-复制和填充方法\",\"684\":\"41#_1-fill\",\"685\":\"41#_2-copywithin\",\"686\":\"41#_2-转化方法\",\"687\":\"41#_1-tostring\",\"688\":\"41#_2-valueof\",\"689\":\"41#_3-tolocalestring\",\"690\":\"41#_4-join\",\"691\":\"41#_3-栈方法\",\"692\":\"41#_1-push\",\"693\":\"41#_2-pop\",\"694\":\"41#_4-队列方法\",\"695\":\"41#_1-shift\",\"696\":\"41#_2-unshift\",\"697\":\"41#_5-排序方法\",\"698\":\"41#_1-sort\",\"699\":\"41#_2-reverse\",\"700\":\"41#_6-操作方法\",\"701\":\"41#_1-concat\",\"702\":\"41#_2-slice\",\"703\":\"41#_3-splice\",\"704\":\"41#_7-归并方法\",\"705\":\"41#_1-reduce\",\"706\":\"41#_2-reduceright\",\"707\":\"41#_8-搜索和位置方法\",\"708\":\"41#_1-严格相等\",\"709\":\"41#_2-断言函数\",\"710\":\"41#_9-迭代器方法\",\"711\":\"41#_10-迭代方法\",\"712\":\"41#_1-foreach\",\"713\":\"41#_2-map\",\"714\":\"41#_3-filter\",\"715\":\"41#_4-every\",\"716\":\"41#_5-some\",\"717\":\"41#_11-其他方法\",\"718\":\"41#_1-for-in\",\"719\":\"41#_2-for-of\",\"720\":\"41#_3-flat\",\"721\":\"41#三、类数组对象\",\"722\":\"41#_1-类数组概述\",\"723\":\"41#_1-arguments\",\"724\":\"41#_2-htmlcollection\",\"725\":\"41#_3-nodelist\",\"726\":\"41#_2-类数组应用场景\",\"727\":\"41#_1-遍历参数操作\",\"728\":\"41#_2-定义连接字符串函数\",\"729\":\"41#_3-传递参数\",\"730\":\"41#_3-类数组转为数组\",\"731\":\"41#_1-借用数组方法\",\"732\":\"41#_2-借用-es6-方法\",\"733\":\"41#四、数组常见操作\",\"734\":\"41#_1-数组扁平化\",\"735\":\"41#_1-递归实现\",\"736\":\"41#_2-reduce-函数迭代\",\"737\":\"41#_3-扩展运算符实现\",\"738\":\"41#_4-split-和-tostring\",\"739\":\"41#_5-es6-中的-flat\",\"740\":\"41#_6-正则和-json-方法\",\"741\":\"41#_2-数组去重\",\"742\":\"41#_1-set-实现\",\"743\":\"41#_2-map-实现\",\"744\":\"41#_3-数组求和\",\"745\":\"41#_1-reduce-实现\",\"746\":\"41#_2-递归实现\",\"747\":\"41#_4-数组乱序\",\"748\":\"41#_1-正向遍历\",\"749\":\"41#_2-倒序遍历\",\"750\":\"41@0\",\"751\":\"41@1\",\"752\":\"42\",\"753\":\"42#_1-浅拷贝\",\"754\":\"42#_1-直接赋值\",\"755\":\"42#_2-object-assign\",\"756\":\"42#_3-扩展运算符\",\"757\":\"42#_4-数组方法实现数组浅拷贝\",\"758\":\"42#_1-array-prototype-slice\",\"759\":\"42#_2-array-prototype-concat\",\"760\":\"42#_5-手写实现浅拷贝\",\"761\":\"42#_2-深拷贝\",\"762\":\"42#_1-object-assign\",\"763\":\"42#_2-json-stringify\",\"764\":\"42#_3-函数库-lodash-的-clonedeep-方法\",\"765\":\"42#_4-手写实现深拷贝函数\",\"766\":\"42#_3-解决递归爆栈\",\"767\":\"42#_4-解决循环引用\",\"768\":\"42#_5-总结\",\"769\":\"42@0\",\"770\":\"42@1\",\"771\":\"43\",\"772\":\"43#_1-什么是类型转换\",\"773\":\"43#_1-显示类型转换\",\"774\":\"43#_2-隐式类型转换\",\"775\":\"43#运算符\",\"776\":\"43#、-、-、-、\",\"777\":\"43#、\",\"778\":\"43#、-、-、\",\"779\":\"43#in\",\"780\":\"43#_2-常见类型转换\",\"781\":\"43#_1-字符串转换\",\"782\":\"43#数字-字符串\",\"783\":\"43#布尔值-字符串\",\"784\":\"43#数组-字符串\",\"785\":\"43#对象-字符串\",\"786\":\"43#null-undefined-nan-字符串\",\"787\":\"43#日期-字符串\",\"788\":\"43#隐式转换\",\"789\":\"43#_2-布尔转换\",\"790\":\"43#字符串-布尔值\",\"791\":\"43#数字-布尔值\",\"792\":\"43#数组-对象-布尔值\",\"793\":\"43#null-undefined-布尔值\",\"794\":\"43#隐式转换-1\",\"795\":\"43#逻辑运算符、逻辑上下文\",\"796\":\"43#_3-数字转换\",\"797\":\"43#字符串-数字\",\"798\":\"43#布尔值-数字\",\"799\":\"43#null-数字\",\"800\":\"43#undefined-数组-对象-nan-数字\",\"801\":\"43#数组元素\",\"802\":\"43#特殊规则\",\"803\":\"43#_3-symbol-类型转换\",\"804\":\"43#_4-对象类型转换\",\"805\":\"43#_1-hints\",\"806\":\"43#_2-methods\",\"807\":\"43#_3-特殊情况\",\"808\":\"43@0\",\"809\":\"43@1\",\"810\":\"44\",\"811\":\"44#ajax\",\"812\":\"44#什么是-ajax\",\"813\":\"44#原理\",\"814\":\"44#使用\",\"815\":\"44#_1-创建-ajax-核心对象-xmlhttprequest\",\"816\":\"44#_2-向服务器发送请求\",\"817\":\"44#_3-服务器响应处理-区分同步跟异步两种情况\",\"818\":\"44#fetch\",\"819\":\"44#与-ajax-对比\",\"820\":\"44#请求常见数据格式\",\"821\":\"44#fetch-请求本地文本数据\",\"822\":\"44#fetch-请求本地-json-数据\",\"823\":\"44#fetch-请求网络接口\",\"824\":\"44@0\",\"825\":\"44@1\",\"826\":\"45\",\"827\":\"45#节流\",\"828\":\"45#实现\",\"829\":\"45#应用场景\",\"830\":\"45#防抖\",\"831\":\"45#实现-1\",\"832\":\"45#应用场景-1\",\"833\":\"45@0\",\"834\":\"45@1\",\"835\":\"46\",\"836\":\"46#一、基本概念\",\"837\":\"46#二、解构分类\",\"838\":\"46#_1-对象的解构赋值\",\"839\":\"46#_2-数组的解构赋值\",\"840\":\"46#_1-字符串\",\"841\":\"46#_2-数组\",\"842\":\"46#_3-集合\",\"843\":\"46#_4-map\",\"844\":\"46#三、嵌套解构\",\"845\":\"46#四、使用技巧\",\"846\":\"46#_1-函数解构\",\"847\":\"46#_1-解构函数参数\",\"848\":\"46#_2-循环中的解构\",\"849\":\"46#_3-动态属性解构\",\"850\":\"46#_4-交换变量\",\"851\":\"46#_5-数组拷贝\",\"852\":\"46@0\",\"853\":\"46@1\",\"854\":\"47\",\"855\":\"47#为什么跨域\",\"856\":\"47#跨域的时机\",\"857\":\"47#跨域情况\",\"858\":\"47#解决跨域方案\",\"859\":\"47#jsonp\",\"860\":\"47#cors\",\"861\":\"47#postmessage\",\"862\":\"47#window-name\",\"863\":\"47#hash\",\"864\":\"47#node-接口代理\",\"865\":\"47#websocket\",\"866\":\"47#nginx\",\"867\":\"47#document-domain-iframe\",\"868\":\"47@0\",\"869\":\"47@1\",\"870\":\"48\",\"871\":\"48#一、数组遍历方法\",\"872\":\"48#_1-foreach\",\"873\":\"48#_2-map\",\"874\":\"48#_3-for-of\",\"875\":\"48#_4-filter\",\"876\":\"48#_5-some-、every\",\"877\":\"48#_6-reduce-、reduceright\",\"878\":\"48#_7-find-、findindex\",\"879\":\"48#_8-keys-、values-、entries\",\"880\":\"48#二、对象遍历方法\",\"881\":\"48#_1-for-in\",\"882\":\"48#_2-object-keys-、object-values-、object-entries\",\"883\":\"48#_3-object-getownpropertynames\",\"884\":\"48#_4-object-getownpropertysymbols\",\"885\":\"48#_5-reflect-ownkeys\",\"886\":\"48#总结\",\"887\":\"48#三、其他遍历方法\",\"888\":\"48#_1-for\",\"889\":\"48#_2-while\",\"890\":\"48#_3-do-while\",\"891\":\"48#_4-for-await-of\",\"892\":\"48@0\",\"893\":\"48@1\",\"894\":\"49\",\"895\":\"49#_1-作用域\",\"896\":\"49#_1-全局作用域\",\"897\":\"49#_2-函数作用域\",\"898\":\"49#_3-块级作用域\",\"899\":\"49#_2-闭包\",\"900\":\"49#_1-闭包基本概念\",\"901\":\"49#_2-闭包产生原因\",\"902\":\"49#_3-闭包应用场景\",\"903\":\"49#_4-循环输出问题\",\"904\":\"49@0\",\"905\":\"49@1\",\"906\":\"50\",\"907\":\"50#linux\",\"908\":\"50#版本\",\"909\":\"50#linux-与-windows-的不同\",\"910\":\"50@0\",\"911\":\"50@1\",\"912\":\"51\",\"913\":\"51#目录结构\",\"914\":\"51#命令基本格式\",\"915\":\"51#命令提示符\",\"916\":\"51#命令格式\",\"917\":\"51#关机和重启命令\",\"918\":\"51#shutdown\",\"919\":\"51#语法\",\"920\":\"51#实例\",\"921\":\"51#reboot\",\"922\":\"51#实例-1\",\"923\":\"51#语法-1\",\"924\":\"51#登录与退出\",\"925\":\"51#logout\",\"926\":\"51#语法-2\",\"927\":\"51#login\",\"928\":\"51#语法-3\",\"929\":\"51#who\",\"930\":\"51#语法-4\",\"931\":\"51#实例-2\",\"932\":\"51@0\",\"933\":\"51@1\",\"934\":\"52\",\"935\":\"52#用户和用户组\",\"936\":\"52#配置文件\",\"937\":\"52#ect-group\",\"938\":\"52#etc-gshow\",\"939\":\"52#etc-passwd\",\"940\":\"52#etc-shadow\",\"941\":\"52#用户命令\",\"942\":\"52#用户和用户组操作\",\"943\":\"52#useradd\",\"944\":\"52#语法\",\"945\":\"52#实例\",\"946\":\"52#userdel\",\"947\":\"52#语法-1\",\"948\":\"52#实例-1\",\"949\":\"52#usermod\",\"950\":\"52#语法-2\",\"951\":\"52#实例-2\",\"952\":\"52#groupadd\",\"953\":\"52#语法-3\",\"954\":\"52#实例-3\",\"955\":\"52#groupdel\",\"956\":\"52#语法-4\",\"957\":\"52#实例-4\",\"958\":\"52#groupmod\",\"959\":\"52#语法-5\",\"960\":\"52#实例-5\",\"961\":\"52#newgrp\",\"962\":\"52#语法-6\",\"963\":\"52#实例-6\",\"964\":\"52@0\",\"965\":\"52@1\",\"966\":\"53\",\"967\":\"53#cd\",\"968\":\"53#语法\",\"969\":\"53#pwd\",\"970\":\"53#语法-1\",\"971\":\"53#ls\",\"972\":\"53#语法-2\",\"973\":\"53#实例\",\"974\":\"53#mkdir\",\"975\":\"53#语法-3\",\"976\":\"53#实例-1\",\"977\":\"53#rmdir\",\"978\":\"53#语法-4\",\"979\":\"53#实例-2\",\"980\":\"53#touch\",\"981\":\"53#语法-5\",\"982\":\"53#cat\",\"983\":\"53#语法-6\",\"984\":\"53#实例-3\",\"985\":\"53#more\",\"986\":\"53#语法-7\",\"987\":\"53#实例-4\",\"988\":\"53#less\",\"989\":\"53#语法-8\",\"990\":\"53#实例-5\",\"991\":\"53#tail\",\"992\":\"53#语法-9\",\"993\":\"53#实例-6\",\"994\":\"53#rm\",\"995\":\"53#语法-10\",\"996\":\"53#实例-7\",\"997\":\"53#cp\",\"998\":\"53#语法-11\",\"999\":\"53#实例-8\",\"1000\":\"53#mv\",\"1001\":\"53#语法-12\",\"1002\":\"53#ln\",\"1003\":\"53#语法-13\",\"1004\":\"53#实例-9\",\"1005\":\"53#find\",\"1006\":\"53#语法-14\",\"1007\":\"53#实例-10\",\"1008\":\"53#diff\",\"1009\":\"53#语法-15\",\"1010\":\"53#实例-11\",\"1011\":\"53#file\",\"1012\":\"53#语法-16\",\"1013\":\"53#grep\",\"1014\":\"53#语法-17\",\"1015\":\"53#常用选项\",\"1016\":\"53#实例-12\",\"1017\":\"53#zip\",\"1018\":\"53#语法-18\",\"1019\":\"53#实例-13\",\"1020\":\"53#gzip\",\"1021\":\"53#语法-19\",\"1022\":\"53#实例-14\",\"1023\":\"53#tar\",\"1024\":\"53#语法-20\",\"1025\":\"53#实例-15\",\"1026\":\"53@0\",\"1027\":\"53@1\",\"1028\":\"54\",\"1029\":\"54#文件权限\",\"1030\":\"54#更改文件属性\",\"1031\":\"54#chgrp\",\"1032\":\"54#语法\",\"1033\":\"54#实例\",\"1034\":\"54#chown\",\"1035\":\"54#语法-1\",\"1036\":\"54#实例-1\",\"1037\":\"54#chmod\",\"1038\":\"54#语法-2\",\"1039\":\"54#符号模式\",\"1040\":\"54#八进制语法\",\"1041\":\"54#实例-2\",\"1042\":\"54#默认权限\",\"1043\":\"54#umask\",\"1044\":\"54#文件权限-1\",\"1045\":\"54#目录\",\"1046\":\"54#修改-umask-值\",\"1047\":\"54#临时修改\",\"1048\":\"54#永久修改\",\"1049\":\"54#sudo-权限\",\"1050\":\"54#visudo\",\"1051\":\"54@0\",\"1052\":\"54@1\",\"1053\":\"55\",\"1054\":\"55#vi-编辑器\",\"1055\":\"55#操作模式\",\"1056\":\"55#命令模式\",\"1057\":\"55#输入模式\",\"1058\":\"55#底线命令模式\",\"1059\":\"55#按键说明\",\"1060\":\"55#一般模式可用的光标移动、复制粘贴、搜索替换等\",\"1061\":\"55#移动光标的方法\",\"1062\":\"55#搜索替换\",\"1063\":\"55#删除、复制与贴上\",\"1064\":\"55#一般模式切换到编辑模式的可用的按钮说明\",\"1065\":\"55#进入输入或取代的编辑模式\",\"1066\":\"55#一般模式切换到指令行模式的可用的按钮说明\",\"1067\":\"55#指令行的储存、离开等指令\",\"1068\":\"55#vim-环境的变更\",\"1069\":\"55@0\",\"1070\":\"55@1\",\"1071\":\"56\",\"1072\":\"56#语法\",\"1073\":\"56#常用命令\",\"1074\":\"56@0\",\"1075\":\"56@1\",\"1076\":\"57\",\"1077\":\"57#shell-基础\",\"1078\":\"57#echo\",\"1079\":\"57#编写执行-shell\",\"1080\":\"57#别名\",\"1081\":\"57#命令的生效顺序\",\"1082\":\"57#命令快捷键\",\"1083\":\"57#历史命令\",\"1084\":\"57#调用\",\"1085\":\"57#管道符号\",\"1086\":\"57#多命令顺序执行\",\"1087\":\"57#管道符号-1\",\"1088\":\"57#通配符\",\"1089\":\"57#其他符号\",\"1090\":\"57#变量\",\"1091\":\"57#什么是变量\",\"1092\":\"57#变量的分类\",\"1093\":\"57#用户自定义变量\",\"1094\":\"57#定义变量\",\"1095\":\"57#输出变量值\",\"1096\":\"57#在赋值的时候引用变量\",\"1097\":\"57#set\",\"1098\":\"57#unset\",\"1099\":\"57#环境变量\",\"1100\":\"57#自定义环境变量\",\"1101\":\"57#env\",\"1102\":\"57#常用环境变量\",\"1103\":\"57#path\",\"1104\":\"57#位置参数变量\",\"1105\":\"57#预定义变量\",\"1106\":\"57#read\",\"1107\":\"57#运算符\",\"1108\":\"57#declare-命令\",\"1109\":\"57#declare-命令-1\",\"1110\":\"57#数组\",\"1111\":\"57#声明环境变量\",\"1112\":\"57#数值运算的方法\",\"1113\":\"57#expr-或-let\",\"1114\":\"57#环境变量配置文件\",\"1115\":\"57#source-命令\",\"1116\":\"57#环境变量配置文件简介\",\"1117\":\"57#环境变量配置文件的功能\",\"1118\":\"57#etc-profile\",\"1119\":\"57#bash-profile\",\"1120\":\"57#bashrc\",\"1121\":\"57#etc-bashrc\",\"1122\":\"57#其他配置文件\",\"1123\":\"57#注销时生效的环境变量配置文件\",\"1124\":\"57#脚本历史\",\"1125\":\"57#shell-登陆信息\",\"1126\":\"57@0\",\"1127\":\"57@1\",\"1128\":\"59\",\"1129\":\"59#安装\",\"1130\":\"59#源码安装\",\"1131\":\"59#官网\",\"1132\":\"59#解压-nginx-包\",\"1133\":\"59#安装依赖库\",\"1134\":\"59#编译安装\",\"1135\":\"59#启动\",\"1136\":\"59#关闭防火墙\",\"1137\":\"59#注册为系统服务\",\"1138\":\"59#访问\",\"1139\":\"59#查看-nginx-状态\",\"1140\":\"59#yum-安装\",\"1141\":\"59#nginx-到-yum-源\",\"1142\":\"59#查看是否已经添加成功\",\"1143\":\"59#安装-nginx\",\"1144\":\"59#验证-nginx-安装是否成功\",\"1145\":\"59#nginx启动、设置开机自启、查看运行状态、停止、重启命令\",\"1146\":\"59#查看安装信息\",\"1147\":\"59@0\",\"1148\":\"59@1\",\"1149\":\"60\",\"1150\":\"60#目录结构\",\"1151\":\"60#基本配置文件\",\"1152\":\"60#默认文件\",\"1153\":\"60#注释\",\"1154\":\"60@0\",\"1155\":\"60@1\",\"1156\":\"63\",\"1157\":\"63#index-js\",\"1158\":\"63#store\",\"1159\":\"63#reducers\",\"1160\":\"63#actions\",\"1161\":\"63#vote-jsx\",\"1162\":\"63#votefooter-jsx\",\"1163\":\"63#votemain-jsx\",\"1164\":\"63@0\",\"1165\":\"63@1\",\"1166\":\"64\",\"1167\":\"64#基础流程\",\"1168\":\"64#异步请求\",\"1169\":\"64@0\",\"1170\":\"64@1\",\"1171\":\"65\",\"1172\":\"65#基础\",\"1173\":\"65#index-js\",\"1174\":\"65#themecontext-js\",\"1175\":\"65#在-main-jsx-中导入-store\",\"1176\":\"65#vote-jsx\",\"1177\":\"65#votefooter-jsx\",\"1178\":\"65#votemain-jsx\",\"1179\":\"65#工程化\",\"1180\":\"65#themecontext-js-1\",\"1181\":\"65#index-js-1\",\"1182\":\"65#在-main-jsx-中导入-store-1\",\"1183\":\"65#reducers\",\"1184\":\"65#actions\",\"1185\":\"65#vote-jsx-1\",\"1186\":\"65#votefooter-jsx-1\",\"1187\":\"65#votemain-jsx-1\",\"1188\":\"65#中间件\",\"1189\":\"65@0\",\"1190\":\"65@1\",\"1191\":\"66\",\"1192\":\"66#用法\",\"1193\":\"66#基本用法\",\"1194\":\"66#用函数作为参数\",\"1195\":\"66#setstate-传入第二个参数-callback\",\"1196\":\"66#示例\",\"1197\":\"66#连续更新状态\",\"1198\":\"66#setstate-为什么是异步\",\"1199\":\"66#异步的意义\",\"1200\":\"66#同步可能会产生的问题\",\"1201\":\"66#setstate-一定是异步吗\",\"1202\":\"66#react18-中如何将-setstate-设置为同步\",\"1203\":\"66#flushsync\",\"1204\":\"66#示例-1\",\"1205\":\"66@0\",\"1206\":\"66@1\",\"1207\":\"67\",\"1208\":\"67#定义\",\"1209\":\"67#为什么需要-usecallback\",\"1210\":\"67#如何使用-usecallback\",\"1211\":\"67#usememo-和-usecallback-的差异\",\"1212\":\"67#什么时候使用-usecallback\",\"1213\":\"67@0\",\"1214\":\"67@1\",\"1215\":\"68\",\"1216\":\"68#基础用法\",\"1217\":\"68#创建-context\",\"1218\":\"68#使用-context-provider\",\"1219\":\"68#在组件中访问-context\",\"1220\":\"68#示例\",\"1221\":\"68#进阶技巧\",\"1222\":\"68#动态-context-值\",\"1223\":\"68#覆盖-provider-value\",\"1224\":\"68#高级应用——性能优化\",\"1225\":\"68#为什么会出现性能问题\",\"1226\":\"68#怎样解决\",\"1227\":\"68#粒度化-context\",\"1228\":\"68#使用多个-context-提供者\",\"1229\":\"68#使用-usememo-和-usecallback-优化-value\",\"1230\":\"68@0\",\"1231\":\"68@1\",\"1232\":\"69\",\"1233\":\"69#usetransition-和-usedeferredvalue-的差异\",\"1234\":\"69#基础使用\",\"1235\":\"69#示例分析\",\"1236\":\"69#注意事项\",\"1237\":\"69#和节流、防抖的关系\",\"1238\":\"69@0\",\"1239\":\"69@1\",\"1240\":\"70\",\"1241\":\"70#定义\",\"1242\":\"70#用法详解\",\"1243\":\"70#基础使用\",\"1244\":\"70#不同的依赖数组的区别\",\"1245\":\"70#清除函数的作用\",\"1246\":\"70#应用场景-1-清除定时器\",\"1247\":\"70#应用场景-2-事件监听器\",\"1248\":\"70#应用场景-3-websockets-聊天室\",\"1249\":\"70#应用场景-4-请求的取消\",\"1250\":\"70#应用场景-5-dom-直接操作和第三方-dom-库\",\"1251\":\"70#跳过初始渲染\",\"1252\":\"70@0\",\"1253\":\"70@1\",\"1254\":\"71\",\"1255\":\"71#useeffect-vs-uselayouteffect\",\"1256\":\"71#uselayouteffect-的作用\",\"1257\":\"71#总结\",\"1258\":\"71#何时使用-useeffect\",\"1259\":\"71#何时使用-uselayouteffect\",\"1260\":\"71#使用注意事项\",\"1261\":\"71@0\",\"1262\":\"71@1\",\"1263\":\"72\",\"1264\":\"72#定义\",\"1265\":\"72#基础用法\",\"1266\":\"72#高级用法\",\"1267\":\"72#缓存组件\",\"1268\":\"72#缓存函数\",\"1269\":\"72#反例-过渡优化\",\"1270\":\"72@0\",\"1271\":\"72@1\",\"1272\":\"73\",\"1273\":\"73#基础用法\",\"1274\":\"73#使用-init-函数\",\"1275\":\"73#usereducer-与-redux-的差异\",\"1276\":\"73@0\",\"1277\":\"73@1\",\"1278\":\"74\",\"1279\":\"74#定义\",\"1280\":\"74#常见用途\",\"1281\":\"74#访问-dom-元素\",\"1282\":\"74#保存状态但不触发渲染\",\"1283\":\"74#保存上一次的-props-或-state\",\"1284\":\"74#高级技巧\",\"1285\":\"74#避免在渲染期间读-写-ref\",\"1286\":\"74#避免重复创建-ref\",\"1287\":\"74#与-usereducer-使用\",\"1288\":\"74#与第三方库集成\",\"1289\":\"74#动画处理\",\"1290\":\"74#事件监听\",\"1291\":\"74@0\",\"1292\":\"74@1\",\"1293\":\"75\",\"1294\":\"75#基本用法\",\"1295\":\"75#初始化\",\"1296\":\"75#基础定义\",\"1297\":\"75#惰性初始化函数\",\"1298\":\"75#更新状态\",\"1299\":\"75#直接更新\",\"1300\":\"75#函数式更新\",\"1301\":\"75#对象更新\",\"1302\":\"75#数组更新\",\"1303\":\"75#函数更新\",\"1304\":\"75@0\",\"1305\":\"75@1\",\"1306\":\"76\",\"1307\":\"76#定义\",\"1308\":\"76#工作原理\",\"1309\":\"76#使用范围和注意事项\",\"1310\":\"76#示例\",\"1311\":\"76#有无-usetransition-的对比\",\"1312\":\"76#usetransition-和-suspense-实现路由流畅切换\",\"1313\":\"76@0\",\"1314\":\"76@1\",\"1315\":\"77\",\"1316\":\"77@0\",\"1317\":\"77@1\",\"1318\":\"78\",\"1319\":\"78#类组件\",\"1320\":\"78#父子组件通信\",\"1321\":\"78#上下文通信\",\"1322\":\"78#函数组件\",\"1323\":\"78#父子组件通信-1\",\"1324\":\"78#上下文传值\",\"1325\":\"78@0\",\"1326\":\"78@1\",\"1327\":\"79\",\"1328\":\"79#安装脚手架\",\"1329\":\"79#查看版本\",\"1330\":\"79#创建项目\",\"1331\":\"79#启动项目\",\"1332\":\"79#依赖\",\"1333\":\"79#package-json-配置\",\"1334\":\"79#浏览器兼容\",\"1335\":\"79#跨域\",\"1336\":\"79@0\",\"1337\":\"79@1\",\"1338\":\"81\",\"1339\":\"81#可选-只读属性\",\"1340\":\"81#任意属性\",\"1341\":\"81#接口与类型别名的区别\",\"1342\":\"81#objects-functions\",\"1343\":\"81#other-types\",\"1344\":\"81#接口可以定义多次-类型别名不可以\",\"1345\":\"81#扩展\",\"1346\":\"81#接口扩展接口\",\"1347\":\"81#类型别名扩展类型别名\",\"1348\":\"81#接口扩展类型别名\",\"1349\":\"81#类型别名扩展接口\",\"1350\":\"81@0\",\"1351\":\"81@1\",\"1352\":\"82\",\"1353\":\"82#全局模块\",\"1354\":\"82#文件模块\",\"1355\":\"82#声明文件\",\"1356\":\"82#第三方声明文件\",\"1357\":\"82#查找声明文件\",\"1358\":\"82@0\",\"1359\":\"82@1\",\"1360\":\"83\",\"1361\":\"83#泛型接口\",\"1362\":\"83#泛型类\",\"1363\":\"83#泛型变量\",\"1364\":\"83#泛型工具类型\",\"1365\":\"83#typeof\",\"1366\":\"83#keyof\",\"1367\":\"83#in\",\"1368\":\"83#infer\",\"1369\":\"83#extends\",\"1370\":\"83#索引类型\",\"1371\":\"83#映射类型\",\"1372\":\"83#partial\",\"1373\":\"83#required\",\"1374\":\"83#readonly\",\"1375\":\"83#pick\",\"1376\":\"83#record\",\"1377\":\"83#returntype\",\"1378\":\"83#exclude\",\"1379\":\"83#extract\",\"1380\":\"83#omit\",\"1381\":\"83#nonnullable\",\"1382\":\"83#parameters\",\"1383\":\"83@0\",\"1384\":\"83@1\",\"1385\":\"84\",\"1386\":\"84#类的定义\",\"1387\":\"84#存取器\",\"1388\":\"84#readonly-只读属性\",\"1389\":\"84#继承\",\"1390\":\"84#类里面的修饰符\",\"1391\":\"84#静态属性-静态方法\",\"1392\":\"84#抽象类和抽象方法\",\"1393\":\"84@0\",\"1394\":\"84@1\",\"1395\":\"85\",\"1396\":\"85#基础类型\",\"1397\":\"85#boolean-类型\",\"1398\":\"85#number-类型\",\"1399\":\"85#string-类型\",\"1400\":\"85#null-和-undefined-类型\",\"1401\":\"85#object-类型\",\"1402\":\"85#bigint-类型\",\"1403\":\"85#symbol-类型\",\"1404\":\"85#其他类型\",\"1405\":\"85#array-类型\",\"1406\":\"85#enum-类型\",\"1407\":\"85#数字枚举\",\"1408\":\"85#字符串枚举\",\"1409\":\"85#异构枚举\",\"1410\":\"85#tuple-元组-类型\",\"1411\":\"85#解构赋值\",\"1412\":\"85#可选类型\",\"1413\":\"85#剩余类型\",\"1414\":\"85#只读\",\"1415\":\"85#void-类型\",\"1416\":\"85#never-类型\",\"1417\":\"85#any-类型\",\"1418\":\"85#unknown-类型\",\"1419\":\"85#函数类型\",\"1420\":\"85#函数声明\",\"1421\":\"85#函数表达式\",\"1422\":\"85#用接口定义函数类型\",\"1423\":\"85#可选参数\",\"1424\":\"85#参数默认值\",\"1425\":\"85#剩余参数\",\"1426\":\"85#函数重载\",\"1427\":\"85#字面量类型\",\"1428\":\"85#字符串字面量类型\",\"1429\":\"85#数字字面量类型及布尔字面量类型\",\"1430\":\"85#number、string、boolean、symbol\",\"1431\":\"85#object、object-和\",\"1432\":\"85@0\",\"1433\":\"85@1\",\"1434\":\"86\",\"1435\":\"86#in-关键字\",\"1436\":\"86#typeof-关键字\",\"1437\":\"86#instanceof-关键字\",\"1438\":\"86#自定义类型保护\",\"1439\":\"86@0\",\"1440\":\"86@1\",\"1441\":\"87\",\"1442\":\"87#类型推断\",\"1443\":\"87#类型断言\",\"1444\":\"87#语法\",\"1445\":\"87#尖括号-语法\",\"1446\":\"87#as-语法\",\"1447\":\"87#非空断言\",\"1448\":\"87#确定赋值断言\",\"1449\":\"87@0\",\"1450\":\"87@1\",\"1451\":\"88\",\"1452\":\"88#tsconfig-json-的作用\",\"1453\":\"88#tsconfig-json-重要字段\",\"1454\":\"88#compileroptions-选项\",\"1455\":\"88@0\",\"1456\":\"88@1\",\"1457\":\"89\",\"1458\":\"89#联合类型\",\"1459\":\"89#类型别名\",\"1460\":\"89#交叉类型\",\"1461\":\"89@0\",\"1462\":\"89@1\",\"1463\":\"90\",\"1464\":\"90#装饰器是什么\",\"1465\":\"90#装饰器的分类\",\"1466\":\"90#类装饰器\",\"1467\":\"90#属性装饰器\",\"1468\":\"90#方法装饰器\",\"1469\":\"90#参数装饰器\",\"1470\":\"90@0\",\"1471\":\"90@1\",\"1472\":\"92\",\"1473\":\"92@0\",\"1474\":\"92@1\",\"1475\":\"94\",\"1476\":\"94#一、patch和讯渲染方法改写\",\"1477\":\"94#二、updateproperties更新属性\",\"1478\":\"94#三、更新子节点\",\"1479\":\"94#四、改造原型渲染更新方法-update\",\"1480\":\"94#源码\",\"1481\":\"94@0\",\"1482\":\"94@1\",\"1483\":\"95\",\"1484\":\"95#一、定义全局-mixin-函数\",\"1485\":\"95#二、mergeoptions-方法\",\"1486\":\"95#生命周期\",\"1487\":\"95#源码\",\"1488\":\"95@0\",\"1489\":\"95@1\",\"1490\":\"96\",\"1491\":\"96#一、侦听属性初始化\",\"1492\":\"96#二、-watch\",\"1493\":\"96#三、修改-watcher\",\"1494\":\"96#源码\",\"1495\":\"96@0\",\"1496\":\"96@1\",\"1497\":\"97\",\"1498\":\"97#一、主入口分析\",\"1499\":\"97#package-json\",\"1500\":\"97#scripts-build-js\",\"1501\":\"97#scripts-config-js\",\"1502\":\"97#src-platforms-web-entry-runtime-with-compiler-js\",\"1503\":\"97#src-platforms-web-runtime-index-js\",\"1504\":\"97#src-core-index-js\",\"1505\":\"97#src-core-instance-index-js\",\"1506\":\"97#二、方法\",\"1507\":\"97#initmixin\",\"1508\":\"97#_1-合并-options-配置-并挂载至-vm-options-上\",\"1509\":\"97#_2-initlifecycle\",\"1510\":\"97#_3-initevents\",\"1511\":\"97#_4-initrender\",\"1512\":\"97#_5-调用-beforecreate-钩子\",\"1513\":\"97#_6-initinjections\",\"1514\":\"97#_7-initstate\",\"1515\":\"97#_8-initprovide\",\"1516\":\"97#_9-调用-created-钩子\",\"1517\":\"97#statemixin\",\"1518\":\"97#eventsmixin\",\"1519\":\"97#lifecyclemixin\",\"1520\":\"97#rendermixin\",\"1521\":\"97#三、总结\",\"1522\":\"97@0\",\"1523\":\"97@1\",\"1524\":\"98\",\"1525\":\"98#一、组件挂载入口\",\"1526\":\"98#二、组件挂载核心方法-mountcomponent\",\"1527\":\"98#三、render-函数转化成虚拟-dom-核心方法-render\",\"1528\":\"98#四、虚拟-dom-转化成真实-dom-核心方法-update\",\"1529\":\"98#源码\",\"1530\":\"98@0\",\"1531\":\"98@1\",\"1532\":\"99\",\"1533\":\"99#一、数据初始化\",\"1534\":\"99#二、对象的数据劫持\",\"1535\":\"99#三、数组的观测\",\"1536\":\"99#源码\",\"1537\":\"99@0\",\"1538\":\"99@1\",\"1539\":\"100\",\"1540\":\"100#一、watcher-更新的改写\",\"1541\":\"100#二、queuewatcher-实现队列机制\",\"1542\":\"100#三、nexttick-原理\",\"1543\":\"100#四、挂载原型\",\"1544\":\"100#源码\",\"1545\":\"100@0\",\"1546\":\"100@1\",\"1547\":\"101\",\"1548\":\"101#一、模板编译入口\",\"1549\":\"101#二、模板转化核心方法-compiletofunctions\",\"1550\":\"101#三、解析-html-生成-ast-语法树\",\"1551\":\"101#四、根据-ast-重新生成代码\",\"1552\":\"101#五、字符串生成-render-函数\",\"1553\":\"101#源码\",\"1554\":\"101@0\",\"1555\":\"101@1\",\"1556\":\"102\",\"1557\":\"102#一、定义-watcher\",\"1558\":\"102#二、创建渲染-watcher\",\"1559\":\"102#三、定义-dep\",\"1560\":\"102#四、对象的依赖收集\",\"1561\":\"102#五、完善-watcher\",\"1562\":\"102#六、完善-dep\",\"1563\":\"102#七、数组的依赖收集\",\"1564\":\"102#八、数组的派发更新\",\"1565\":\"102#源码\",\"1566\":\"102@0\",\"1567\":\"102@1\",\"1568\":\"103\",\"1569\":\"103#一、计算属性的初始化\",\"1570\":\"103#二、对计算属性进行属性劫持\",\"1571\":\"103#三、修改watcher\",\"1572\":\"103#源码\",\"1573\":\"103@0\",\"1574\":\"103@1\",\"1575\":\"104\",\"1576\":\"104#一、git-基本概念\",\"1577\":\"104#_1-git-历史\",\"1578\":\"104#_2-版本控制系统\",\"1579\":\"104#_1-集中式版本控制系统\",\"1580\":\"104#_2-分布式版本控制系统\",\"1581\":\"104#_3-svn-vs-git\",\"1582\":\"104#_3-git-安装\",\"1583\":\"104#_4-git-初始化\",\"1584\":\"104#_5-git-结构和状态\",\"1585\":\"104#二、git-入门\",\"1586\":\"104#_1-全局配置\",\"1587\":\"104#_1-设置用户名\",\"1588\":\"104#_2-设置邮箱\",\"1589\":\"104#_3-设置命令颜色\",\"1590\":\"104#_4-查看所有配置\",\"1591\":\"104#_5-设置别名\",\"1592\":\"104#_2-分支操作\",\"1593\":\"104#_1-查看分支\",\"1594\":\"104#_2-创建分支\",\"1595\":\"104#_3-删除分支\",\"1596\":\"104#_4-合并分支\",\"1597\":\"104#_5-重命名分支\",\"1598\":\"104#_3-基础操作\",\"1599\":\"104#_1-暂存文件\",\"1600\":\"104#_2-提交暂存\",\"1601\":\"104#_3-存储更改\",\"1602\":\"104#_4-合并指定提交\",\"1603\":\"104#_5-检查提交\",\"1604\":\"104#_6-查看贡献者\",\"1605\":\"104#_4-远程操作\",\"1606\":\"104#_1-查看远程仓库\",\"1607\":\"104#_2-添加远程仓库\",\"1608\":\"104#_3-移除远程仓库\",\"1609\":\"104#_4-从远程仓库抓取与拉取\",\"1610\":\"104#_5-推送到远程仓库\",\"1611\":\"104#三、git-进阶\",\"1612\":\"104#_1-修改操作\",\"1613\":\"104#_1-删除文件\",\"1614\":\"104#_2-取消修改\",\"1615\":\"104#_3-恢复删除内容\",\"1616\":\"104#_2-标签操作\",\"1617\":\"104#_1-展示标签\",\"1618\":\"104#_2-创建标签\",\"1619\":\"104#_3-推送标签\",\"1620\":\"104#_4-切换标签\",\"1621\":\"104#_5-删除标签\",\"1622\":\"104#_6-拉取标签\",\"1623\":\"104#_7-检出标签\",\"1624\":\"104#_3-日志记录\",\"1625\":\"104#_1-基础日志\",\"1626\":\"104#_2-按作者查看\",\"1627\":\"104#_4-按文件查看\",\"1628\":\"104#_5-按合并查看\",\"1629\":\"104#_6-按分支查看\",\"1630\":\"104#_7-美化日志\",\"1631\":\"104#_8-其他标志\",\"1632\":\"104#_4-差异对比\",\"1633\":\"104#_1-未缓存改动\",\"1634\":\"104#_2-已缓存改动\",\"1635\":\"104#_3-已缓存和未缓存改动\",\"1636\":\"104#_4-不同分支差异\",\"1637\":\"104#_5-定位问题\",\"1638\":\"104@0\",\"1639\":\"104@1\",\"1640\":\"107\",\"1641\":\"107#v8-引擎\",\"1642\":\"107#垃圾回收\",\"1643\":\"107#概念\",\"1644\":\"107#为什么回收\",\"1645\":\"107#回收机制\",\"1646\":\"107#回收策略\",\"1647\":\"107#v8-对-gc-的优化\",\"1648\":\"107#分代式垃圾回收\",\"1649\":\"107#并行回收-parallel\",\"1650\":\"107#增量标记与懒性清理\",\"1651\":\"107#并发回收-concurrent\",\"1652\":\"107#内存泄漏\",\"1653\":\"107#内存泄漏的几种情况\",\"1654\":\"107@0\",\"1655\":\"107@1\",\"1656\":\"108\",\"1657\":\"108#cookie\",\"1658\":\"108#什么是cookie\",\"1659\":\"108#生成方式\",\"1660\":\"108#缺陷\",\"1661\":\"108#cookie与安全\",\"1662\":\"108#localstorage\",\"1663\":\"108#特点\",\"1664\":\"108#存入-读取数据\",\"1665\":\"108#使用场景\",\"1666\":\"108#sessionstorage\",\"1667\":\"108#特点-1\",\"1668\":\"108#使用场景-1\",\"1669\":\"108#indexeddb\",\"1670\":\"108#特点-2\",\"1671\":\"108#常见操作\",\"1672\":\"108#区别\",\"1673\":\"108@0\",\"1674\":\"108@1\",\"1675\":\"109\",\"1676\":\"109#大致流程\",\"1677\":\"109#一、url解析\",\"1678\":\"109#_1、地址解析\",\"1679\":\"109#_2、hsts\",\"1680\":\"109#_3、其他操作\",\"1681\":\"109#_4、检查缓存\",\"1682\":\"109#二、dns查询\",\"1683\":\"109#_1、浏览器缓存\",\"1684\":\"109#_2、操作系统缓存\",\"1685\":\"109#_3、路由器缓存\",\"1686\":\"109#_4、isp-dns-缓存\",\"1687\":\"109#_5、根域名服务器查询\",\"1688\":\"109#三、tcp连接\",\"1689\":\"109#_1、应用层-发送http请求\",\"1690\":\"109#_2、传输层-tcp传输报文\",\"1691\":\"109#_3、网络层-ip协议查询mac地址\",\"1692\":\"109#_4、链路层-以太网协议\",\"1693\":\"109#_5、服务器接受请求\",\"1694\":\"109#四、服务器处理请求\",\"1695\":\"109#_1、httpd\",\"1696\":\"109#_2、处理请求\",\"1697\":\"109#_3、重定向\",\"1698\":\"109#_4、url重写\",\"1699\":\"109#五、浏览器接受响应\",\"1700\":\"109#六、渲染页面\",\"1701\":\"109#_1、html解析\",\"1702\":\"109#_1-1、解码-encoding\",\"1703\":\"109#_1-2、预解析-pre-parsing\",\"1704\":\"109#_1-3、符号化-tokenization\",\"1705\":\"109#_1-4、构建树-tree-construction\",\"1706\":\"109#_2、css解析\",\"1707\":\"109#_3、渲染树\",\"1708\":\"109@0\",\"1709\":\"109@1\",\"1710\":\"111\",\"1711\":\"111#_1-tcp和udp的既念及特点\",\"1712\":\"111#udp\",\"1713\":\"111#tcp\",\"1714\":\"111#_2-tcp与udp的区别\",\"1715\":\"111#_3-tcp和udp的使用场景\",\"1716\":\"111#_4-udp协议为什么不可靠\",\"1717\":\"111#_5-tcp的重传机制\",\"1718\":\"111#_6-tcp的拥塞控制机制\",\"1719\":\"111#_1-慢启动-慢开始\",\"1720\":\"111#_2-拥塞避免\",\"1721\":\"111#_3-快速重传\",\"1722\":\"111#_4-快速恢复\",\"1723\":\"111#_7-tcp的流量控制机制\",\"1724\":\"111#_8-tcp的可靠传输机制\",\"1725\":\"111#_9-tcp的三次握手和四次挥手\",\"1726\":\"111#三次握手\",\"1727\":\"111#那为什么要三次握手呢-两次不行吗\",\"1728\":\"111#四次挥手\",\"1729\":\"111#那为什么需要四次挥手呢\",\"1730\":\"111#_10-tcp粘包是怎么回事-如何处理\",\"1731\":\"111#_11-为什么udp不会粘包\",\"1732\":\"111@0\",\"1733\":\"111@1\",\"1734\":\"112\",\"1735\":\"112#对websocket的理解\",\"1736\":\"112#websocket特点\",\"1737\":\"112#即时通讯的实现-短轮询、长轮询、sse和nwebsocket间的区别\",\"1738\":\"112@0\",\"1739\":\"112@1\",\"1740\":\"113\",\"1741\":\"113@0\",\"1742\":\"113@1\",\"1743\":\"114\",\"1744\":\"114@0\",\"1745\":\"114@1\",\"1746\":\"115\",\"1747\":\"115#定义\",\"1748\":\"115#使用场景\",\"1749\":\"115#优缺点\",\"1750\":\"115#优点\",\"1751\":\"115#缺点\",\"1752\":\"115#实现\",\"1753\":\"115#简单工厂\",\"1754\":\"115#工厂方法\",\"1755\":\"115#抽象工厂模式\",\"1756\":\"115@0\",\"1757\":\"115@1\",\"1758\":\"116\",\"1759\":\"116@0\",\"1760\":\"116@1\",\"1761\":\"117\",\"1762\":\"117#定义\",\"1763\":\"117#使用场景\",\"1764\":\"117#react中的状态管理\",\"1765\":\"117#vuex\",\"1766\":\"117#全局loading\",\"1767\":\"117#全局方法-常量\",\"1768\":\"117#优缺点\",\"1769\":\"117#优点\",\"1770\":\"117#缺点\",\"1771\":\"117#实现\",\"1772\":\"117#构造函数\",\"1773\":\"117#闭包\",\"1774\":\"117#类\",\"1775\":\"117@0\",\"1776\":\"117@1\",\"1777\":\"118\",\"1778\":\"118@0\",\"1779\":\"118@1\",\"1780\":\"119\",\"1781\":\"119@0\",\"1782\":\"119@1\",\"1783\":\"120\",\"1784\":\"120#定义\",\"1785\":\"120#使用场景\",\"1786\":\"120#优缺点\",\"1787\":\"120#优点\",\"1788\":\"120#缺点\",\"1789\":\"120#实现\",\"1790\":\"120@0\",\"1791\":\"120@1\",\"1792\":\"121\",\"1793\":\"121#定义\",\"1794\":\"121#使用场景\",\"1795\":\"121#优缺点\",\"1796\":\"121#优点\",\"1797\":\"121#缺点\",\"1798\":\"121#实现\",\"1799\":\"121@0\",\"1800\":\"121@1\",\"1801\":\"122\",\"1802\":\"122#定义\",\"1803\":\"122#优缺点\",\"1804\":\"122#优点\",\"1805\":\"122#缺点\",\"1806\":\"122#实现\",\"1807\":\"122@0\",\"1808\":\"122@1\",\"1809\":\"123\",\"1810\":\"123#定义\",\"1811\":\"123#优缺点\",\"1812\":\"123#优点\",\"1813\":\"123#缺点\",\"1814\":\"123#实现\",\"1815\":\"123@0\",\"1816\":\"123@1\",\"1817\":\"124\",\"1818\":\"124@0\",\"1819\":\"124@1\",\"1820\":\"125\",\"1821\":\"125@0\",\"1822\":\"125@1\",\"1823\":\"126\",\"1824\":\"126@0\",\"1825\":\"126@1\",\"1826\":\"127\",\"1827\":\"127@0\",\"1828\":\"127@1\",\"1829\":\"128\",\"1830\":\"128@0\",\"1831\":\"128@1\",\"1832\":\"129\",\"1833\":\"129@0\",\"1834\":\"129@1\",\"1835\":\"130\",\"1836\":\"130#优缺点\",\"1837\":\"130#优点\",\"1838\":\"130#缺点\",\"1839\":\"130#实现\",\"1840\":\"130@0\",\"1841\":\"130@1\",\"1842\":\"132\",\"1843\":\"132#概念\",\"1844\":\"132#系统工程方法\",\"1845\":\"132#_1、霍尔三维结构-硬科学-方法论\",\"1846\":\"132#逻辑维-解决问题的逻辑过程\",\"1847\":\"132#时间维-工作进程\",\"1848\":\"132#知识维-专业科学知识\",\"1849\":\"132#_2、切克兰德方法-软科学方法论\",\"1850\":\"132#_3、并行工程方法\",\"1851\":\"132#_4、综合集成法\",\"1852\":\"132#_5、wsr系统方法\",\"1853\":\"132#系统工程生命周期\",\"1854\":\"132#系统工程声明周期阶段\",\"1855\":\"132#系统工程声明周期方法\",\"1856\":\"132#信息系统建设原则\",\"1857\":\"132#信息系统开发方法\",\"1858\":\"132#结构化法\",\"1859\":\"132#面向对象法\",\"1860\":\"132#面向服务的方法\",\"1861\":\"132#原型法【需求阶段】\",\"1862\":\"132#信息系统的分类\",\"1863\":\"132#业务处理系统【tps】\",\"1864\":\"132#管理信息系统【mis】\",\"1865\":\"132#决策支持系统【dss】\",\"1866\":\"132#专家系统【es】\",\"1867\":\"132#办公自动化系统【oas】\",\"1868\":\"132#企业资源计划【erp】\",\"1869\":\"132#政府信息化与电子政务\",\"1870\":\"132#企业信息化与电子商务\",\"1871\":\"132#信息化的概念\",\"1872\":\"132#信息化的目的\",\"1873\":\"132#设计三类创新\",\"1874\":\"132#信息化需求的3个层次\",\"1875\":\"132#企业信息化方法\",\"1876\":\"132#信息系统战略规划\",\"1877\":\"132#企业信息化工程技术核心\",\"1878\":\"132#客户关系管理系统-crm\",\"1879\":\"132#供应链管理-scm\",\"1880\":\"132#商业智能-bi\",\"1881\":\"132#数据仓库\",\"1882\":\"132#数据挖掘\",\"1883\":\"132#数据湖\",\"1884\":\"132#bpr和bpm\",\"1885\":\"132#企业应用集成【eai】\",\"1886\":\"132#企业应用集成\",\"1887\":\"132#企业门户\",\"1888\":\"132#电子商务\",\"1889\":\"132#数字化转型\",\"1890\":\"132#智能制造体系\",\"1891\":\"132@0\",\"1892\":\"132@1\",\"1893\":\"133\",\"1894\":\"133#软件过程模型\",\"1895\":\"133#瀑布模型\",\"1896\":\"133#原型模型\",\"1897\":\"133#v模型\",\"1898\":\"133#螺旋模型\",\"1899\":\"133#构建组装模型\",\"1900\":\"133#基于构件的软件工程-cbse\",\"1901\":\"133#统一过程\",\"1902\":\"133#生命周期\",\"1903\":\"133#敏捷方法\",\"1904\":\"133#敏捷方法-1\",\"1905\":\"133#逆向工程\",\"1906\":\"133#净室软件工程\",\"1907\":\"133#需求工程\",\"1908\":\"133#需求获取\",\"1909\":\"133#需求分析\",\"1910\":\"133#数据流图\",\"1911\":\"133#数据流图平衡原则\",\"1912\":\"133#uml图\",\"1913\":\"133#用例图\",\"1914\":\"133#类图与对象图\",\"1915\":\"133#顺序图\",\"1916\":\"133#通信图-协作图\",\"1917\":\"133#状态图\",\"1918\":\"133#活动图\",\"1919\":\"133#定时图\",\"1920\":\"133#构件图与包图\",\"1921\":\"133#部署图\",\"1922\":\"133#需求开发\",\"1923\":\"133#需求定义\",\"1924\":\"133#需求验证\",\"1925\":\"133#需求跟踪\",\"1926\":\"133#需求变更\",\"1927\":\"133#软件系统建模\",\"1928\":\"133#人机界面设计\",\"1929\":\"133#结构化设计\",\"1930\":\"133#结构化设计原则\",\"1931\":\"133#内聚\",\"1932\":\"133#耦合\",\"1933\":\"133#模块四要素\",\"1934\":\"133#面向对象设计\",\"1935\":\"133#基本过程\",\"1936\":\"133#类的分类\",\"1937\":\"133#设计原则\",\"1938\":\"133#软件测试\",\"1939\":\"133#白盒测试与黑盒测试\",\"1940\":\"133#软件测试阶段\",\"1941\":\"133#集成测试\",\"1942\":\"133#系统测试\",\"1943\":\"133#系统转换计划\",\"1944\":\"133#遗留系统演化策略\",\"1945\":\"133#新旧系统的转换策略\",\"1946\":\"133#数据转换与迁移\",\"1947\":\"133#软件维护\",\"1948\":\"133#影响可维护性的因素\",\"1949\":\"133#软件维护的类型\",\"1950\":\"133@0\",\"1951\":\"133@1\",\"1952\":\"134\",\"1953\":\"134#盈亏平衡分析\",\"1954\":\"134#进度管理\",\"1955\":\"134#关键路径法\",\"1956\":\"134#甘特图\",\"1957\":\"134#质量管理\",\"1958\":\"134#影响软件质量的3组因素\",\"1959\":\"134#软件质量控制与质量保证\",\"1960\":\"134#软件能力成熟度模型集成-cmmi\",\"1961\":\"134#软件配置管理\",\"1962\":\"134#软件工具\",\"1963\":\"134@0\",\"1964\":\"134@1\",\"1965\":\"135\",\"1966\":\"135#软件架构的概念\",\"1967\":\"135#架构的本质\",\"1968\":\"135#架构的作用\",\"1969\":\"135#架构的发展历程\",\"1970\":\"135#架构的4-1视图\",\"1971\":\"135#软件架构风格\",\"1972\":\"135#adl\",\"1973\":\"135#基于架构的软件开发方法\",\"1974\":\"135#概念\",\"1975\":\"135#开发过程\",\"1976\":\"135#软件架构风格-1\",\"1977\":\"135#数据流风格\",\"1978\":\"135#优点\",\"1979\":\"135#缺点\",\"1980\":\"135#典型实例\",\"1981\":\"135#调用-返回风格\",\"1982\":\"135#优点-1\",\"1983\":\"135#缺点-1\",\"1984\":\"135#特点\",\"1985\":\"135#独立构件风格\",\"1986\":\"135#优点-2\",\"1987\":\"135#缺点-2\",\"1988\":\"135#特点-1\",\"1989\":\"135#事件处理器风格\",\"1990\":\"135#虚拟机风格\",\"1991\":\"135#解释器架构风格\",\"1992\":\"135#规则系统体系结构风格\",\"1993\":\"135#仓库风格\",\"1994\":\"135#闭环控制风格-过程控制\",\"1995\":\"135#c2架构风格\",\"1996\":\"135#mda\",\"1997\":\"135#特定领域软件架构-dssa\",\"1998\":\"135#基本概念\",\"1999\":\"135#参与人员\",\"2000\":\"135#建立过程\",\"2001\":\"135#三层次模型\",\"2002\":\"135#软件架构评估\",\"2003\":\"135#质量属性\",\"2004\":\"135#性能\",\"2005\":\"135#可用性\",\"2006\":\"135#安全性\",\"2007\":\"135#可修改性\",\"2008\":\"135#易用性\",\"2009\":\"135#可测试性\",\"2010\":\"135#软件架构评估-1\",\"2011\":\"135#评估方法\",\"2012\":\"135#质量效用树\",\"2013\":\"135#软件产品线\",\"2014\":\"135#概念-1\",\"2015\":\"135#双生命周期模型\",\"2016\":\"135#建立产品线\",\"2017\":\"135#构件与中间件技术\",\"2018\":\"135#构件\",\"2019\":\"135#构件概念\",\"2020\":\"135#构件特征\",\"2021\":\"135#构件标准\",\"2022\":\"135#corba\",\"2023\":\"135#中间件\",\"2024\":\"135#中间件概念\",\"2025\":\"135#中间件优点\",\"2026\":\"135#中间件分类\",\"2027\":\"135#软件复用\",\"2028\":\"135#构件的复用\",\"2029\":\"135#c-s架构与b-s架构\",\"2030\":\"135#常用层次式架构\",\"2031\":\"135#mvc架构风格\",\"2032\":\"135#mvp架构风格\",\"2033\":\"135#mvvm架构风格\",\"2034\":\"135#ria架构风格\",\"2035\":\"135#数据访问层设计\",\"2036\":\"135#物联网分层架构\",\"2037\":\"135#大数据分层架构\",\"2038\":\"135#wen-service-web服务\",\"2039\":\"135#rest-表属性状态转移\",\"2040\":\"135#esb-企业服务总线\",\"2041\":\"135#微服务\",\"2042\":\"135#优点-3\",\"2043\":\"135#模式方案\",\"2044\":\"135#微服务与soa的区别\",\"2045\":\"135#云计算\",\"2046\":\"135#定义\",\"2047\":\"135#优点-4\",\"2048\":\"135#分类\",\"2049\":\"135#按服务类型分类\",\"2050\":\"135#按部署方式分类\",\"2051\":\"135#架构\",\"2052\":\"135#云原生架构\",\"2053\":\"135#设计原则\",\"2054\":\"135#架构模式\",\"2055\":\"135#反模式\",\"2056\":\"135#微服务设计约束\",\"2057\":\"135#边缘计算\",\"2058\":\"135#大型网站系统架构演化\",\"2059\":\"135#第一阶段-单体架构到第二阶段-垂直架构\",\"2060\":\"135#第三阶段-使用缓存改善网站性能\",\"2061\":\"135#常见缓存技术\",\"2062\":\"135#缓存与数据库的数据一致性问题\",\"2063\":\"135#缓存技术对比\",\"2064\":\"135#redis分布式存储方案\",\"2065\":\"135#redis集群切片的常见方式\",\"2066\":\"135#redis数据分片方案\",\"2067\":\"135#redis数据类型\",\"2068\":\"135#redis数据淘汰算法\",\"2069\":\"135#redis的持久化\",\"2070\":\"135#redis常见问题\",\"2071\":\"135#缓存雪崩\",\"2072\":\"135#缓存穿透\",\"2073\":\"135#缓存预热\",\"2074\":\"135#缓存更新\",\"2075\":\"135#缓存降级\",\"2076\":\"135#第四阶段-使用服务集群改善网站并发处理能力\",\"2077\":\"135#负载均衡\",\"2078\":\"135#有状态与无状态\",\"2079\":\"135#session共享机制\",\"2080\":\"135#第五阶段-数据库读写分离\",\"2081\":\"135#第六阶段-使用反向代理和cdn加速网站响应\",\"2082\":\"135#第七阶段-使用分布式文件系统和分布式数据库系统\",\"2083\":\"135#第八阶段-使用nosql和搜索引擎\",\"2084\":\"135#第九阶段-业务拆分\",\"2085\":\"135#第十阶段-分布式服务\",\"2086\":\"135@0\",\"2087\":\"135@1\",\"2088\":\"136\",\"2089\":\"136#可靠性相关概念\",\"2090\":\"136#可靠性指标\",\"2091\":\"136#串联系统与并联系统\",\"2092\":\"136#可靠性设计\",\"2093\":\"136#n版本程序设计\",\"2094\":\"136#恢复块方法\",\"2095\":\"136#防卫式程序设计\",\"2096\":\"136#双机容错\",\"2097\":\"136@0\",\"2098\":\"136@1\",\"2099\":\"137\",\"2100\":\"137#信息安全基础\",\"2101\":\"137#网络安全漏洞\",\"2102\":\"137#网络安全威胁\",\"2103\":\"137#安全措施的目标\",\"2104\":\"137#信息加解密技术\",\"2105\":\"137#访问控制技术\",\"2106\":\"137#访问控制的基本模型\",\"2107\":\"137#访问控制的实现技术\",\"2108\":\"137#数字签名技术\",\"2109\":\"137#密钥管理技术\",\"2110\":\"137#信息安全的保障体系\",\"2111\":\"137#计算机信息系统安全保护等级\",\"2112\":\"137@0\",\"2113\":\"137@1\",\"2114\":\"138\",\"2115\":\"138#概述\",\"2116\":\"138#安全模型\",\"2117\":\"138#blp模型-下读上写\",\"2118\":\"138#bila模型\",\"2119\":\"138#chinese-wall模型\",\"2120\":\"138#整体架构设计\",\"2121\":\"138#wpdrrc模型\",\"2122\":\"138#各类模型安全防范功能\",\"2123\":\"138#开放系统互连安全体系结构\",\"2124\":\"138#安全服务与安全机制的对应关系\",\"2125\":\"138#认证框架\",\"2126\":\"138#访问控制框架\",\"2127\":\"138#机密性框架\",\"2128\":\"138#完整性框架\",\"2129\":\"138#抗抵赖框架\",\"2130\":\"138#区块链技术\",\"2131\":\"138#什么是区块链\",\"2132\":\"138#区块链的特点\",\"2133\":\"138#去中心化\",\"2134\":\"138@0\",\"2135\":\"138@1\",\"2136\":\"139\",\"2137\":\"139#计算机系统概述\",\"2138\":\"139#计算机组成结构\",\"2139\":\"139#存储系统\",\"2140\":\"139#层次化存储结构\",\"2141\":\"139#cache\",\"2142\":\"139#磁盘基本结构与存取过程\",\"2143\":\"139#磁盘移臂调度算法\",\"2144\":\"139#先来先服务-fcfs\",\"2145\":\"139#最短寻道时间优先-sstf\",\"2146\":\"139#扫描算法-scan\",\"2147\":\"139#循环扫描算法-scsan\",\"2148\":\"139#操作系统\",\"2149\":\"139#进程管理\",\"2150\":\"139#概念\",\"2151\":\"139#进程与程序\",\"2152\":\"139#进程与线程\",\"2153\":\"139#状态\",\"2154\":\"139#同步与互斥\",\"2155\":\"139#前趋图\",\"2156\":\"139#死锁\",\"2157\":\"139#银行家算法\",\"2158\":\"139#分配资源的原则\",\"2159\":\"139#存储管理\",\"2160\":\"139#页式存储\",\"2161\":\"139#段式存储\",\"2162\":\"139#段页式存储\",\"2163\":\"139#文件管理\",\"2164\":\"139#索引文件结构\",\"2165\":\"139#位视图\",\"2166\":\"139#性能\",\"2167\":\"139#性能指标\",\"2168\":\"139#性能调整\",\"2169\":\"139#阿姆达尔解决方案\",\"2170\":\"139#性能评价方法\",\"2171\":\"139#性能评估\",\"2172\":\"139#系统监视\",\"2173\":\"139@0\",\"2174\":\"139@1\",\"2175\":\"140\",\"2176\":\"140#基本概念\",\"2177\":\"140#嵌入式软件开发\",\"2178\":\"140#嵌入式硬件\",\"2179\":\"140#嵌入式微处理器\",\"2180\":\"140#人工智能芯片\",\"2181\":\"140#嵌入式微处理器体系结构\",\"2182\":\"140#总线\",\"2183\":\"140#基本概念-1\",\"2184\":\"140#特点\",\"2185\":\"140#串行总线\",\"2186\":\"140#串行总线-1\",\"2187\":\"140#嵌入式操作系统的定义及特点\",\"2188\":\"140#划分\",\"2189\":\"140#嵌入式实时操作系统\",\"2190\":\"140#嵌入式实时操作系统调度算法\",\"2191\":\"140#嵌入式操作系统\",\"2192\":\"140#操作系统内核架构\",\"2193\":\"140#嵌入式数据库\",\"2194\":\"140#分类\",\"2195\":\"140#嵌入式网络数据库\",\"2196\":\"140@0\",\"2197\":\"140@1\",\"2198\":\"141\",\"2199\":\"141#计算机网络概述\",\"2200\":\"141#计算机网络性能指标\",\"2201\":\"141#时延\",\"2202\":\"141#分类\",\"2203\":\"141#按分布范围分\",\"2204\":\"141#按拓扑结构分\",\"2205\":\"141#_5g技术\",\"2206\":\"141#组网技术\",\"2207\":\"141#交换技术\",\"2208\":\"141#基本交换原理\",\"2209\":\"141#tcp-ip协议族\",\"2210\":\"141#dhcp\",\"2211\":\"141#dns\",\"2212\":\"141#网络冗余设计\",\"2213\":\"141#磁盘存储技术-raid\",\"2214\":\"141#ipv6\",\"2215\":\"141#ipv4-ipv6过渡技术\",\"2216\":\"141#网络规划与设计\",\"2217\":\"141#逻辑网络设计\",\"2218\":\"141#物理网络设计\",\"2219\":\"141#层次化网络设计\",\"2220\":\"141#分层设计\",\"2221\":\"141@0\",\"2222\":\"141@1\",\"2223\":\"142\",\"2224\":\"142#数据库模式\",\"2225\":\"142#关系表类型\",\"2226\":\"142#数据库视图\",\"2227\":\"142#视图的优点\",\"2228\":\"142#物化视图\",\"2229\":\"142#分布式数据库\",\"2230\":\"142#组成\",\"2231\":\"142#结构\",\"2232\":\"142#分布透明性\",\"2233\":\"142#两阶段提交协议\",\"2234\":\"142#_2pc事务提交的两个阶段\",\"2235\":\"142#两条全局提交规则\",\"2236\":\"142#数据库设计过程\",\"2237\":\"142#概念结构设计\",\"2238\":\"142#逻辑结构设计\",\"2239\":\"142#数据模型\",\"2240\":\"142#相关概念\",\"2241\":\"142#完整性约束\",\"2242\":\"142#关系代数\",\"2243\":\"142#规范化理论\",\"2244\":\"142#价值与用途\",\"2245\":\"142#键\",\"2246\":\"142#求候选键\",\"2247\":\"142#函数依赖\",\"2248\":\"142#armstrong公理\",\"2249\":\"142#范式判断\",\"2250\":\"142#第一范式\",\"2251\":\"142#第二范式\",\"2252\":\"142#第三范式\",\"2253\":\"142#bc范式\",\"2254\":\"142#模式分解\",\"2255\":\"142#保持函数依赖分解\",\"2256\":\"142#无损分解\",\"2257\":\"142#并发控制\",\"2258\":\"142#事务的acid特性\",\"2259\":\"142#并发产生的问题\",\"2260\":\"142#封锁协议\",\"2261\":\"142#丢失更新加锁\",\"2262\":\"142#读-脏-数数加锁\",\"2263\":\"142#不可重读读加锁\",\"2264\":\"142#数据库的安全性\",\"2265\":\"142#数据库备份与恢复技术\",\"2266\":\"142#数据备份\",\"2267\":\"142#数据库故障与恢复\",\"2268\":\"142@0\",\"2269\":\"142@1\",\"2270\":\"144\",\"2271\":\"144@0\",\"2272\":\"144@1\",\"2273\":\"145\",\"2274\":\"145@0\",\"2275\":\"145@1\",\"2276\":\"146\",\"2277\":\"146#buffergeometry\",\"2278\":\"146#代码示例\",\"2279\":\"146#构造函数\",\"2280\":\"146#buffergeometry-1\",\"2281\":\"146#属性\",\"2282\":\"146#attributes-object\",\"2283\":\"146#boundingbox-box3\",\"2284\":\"146#boundingsphere-sphere\",\"2285\":\"146#drawrange-object\",\"2286\":\"146#groups-array\",\"2287\":\"146#id-integer\",\"2288\":\"146#index-bufferattribute\",\"2289\":\"146#isbuffergeometry-boolean\",\"2290\":\"146#morphattributes-object\",\"2291\":\"146#morphtargetsrelative-boolean\",\"2292\":\"146#name-string\",\"2293\":\"146#userdata-object\",\"2294\":\"146#uuid-string\",\"2295\":\"146#方法\",\"2296\":\"146#setattribute-name-string-attribute-bufferattribute-this\",\"2297\":\"146#addgroup-start-integer-count-integer-materialindex-integer-undefined\",\"2298\":\"146#applymatrix4-matrix-matrix4-this\",\"2299\":\"146#center-this\",\"2300\":\"146#clone-buffergeometry\",\"2301\":\"146#copy-buffergeometry-buffergeometry-this\",\"2302\":\"146#cleargroups-undefined\",\"2303\":\"146#computeboundingbox-undefined\",\"2304\":\"146#computeboundingsphere-undefined\",\"2305\":\"146#computetangents-undefined\",\"2306\":\"146#computevertexnormals-undefined\",\"2307\":\"146#dispose-undefined\",\"2308\":\"146#getattribute-name-string-bufferattribute\",\"2309\":\"146#getindex-bufferattribute\",\"2310\":\"146#hasattribute-name-string-boolean\",\"2311\":\"146#lookat-vector-vector3-this\",\"2312\":\"146#normalizenormals-undefined\",\"2313\":\"146#deleteattribute-name-string-bufferattribute\",\"2314\":\"146#rotatex-radians-float-this\",\"2315\":\"146#rotatey-radians-float-this\",\"2316\":\"146#rotatez-radians-float-this\",\"2317\":\"146#scale-x-float-y-float-z-float-this\",\"2318\":\"146#setindex-index-bufferattribute-this\",\"2319\":\"146#setdrawrange-start-integer-count-integer-undefined\",\"2320\":\"146#setfrompoints-points-array-this\",\"2321\":\"146#tojson-object\",\"2322\":\"146#tononindexed-buffergeometry\",\"2323\":\"146#translate-x-float-y-float-z-float-this\",\"2324\":\"146@0\",\"2325\":\"146@1\",\"2326\":\"147\",\"2327\":\"147#curve\",\"2328\":\"147#构造函数\",\"2329\":\"147#curve-1\",\"2330\":\"147#属性\",\"2331\":\"147#arclengthdivisions-integer\",\"2332\":\"147#方法\",\"2333\":\"147#getpoint-t-float-optionaltarget-vector-vector\",\"2334\":\"147#getpointat-u-float-optionaltarget-vector-vector\",\"2335\":\"147#getpoints-divisions-integer-array\",\"2336\":\"147#getspacedpoints-divisions-integer-array\",\"2337\":\"147#getlength-float\",\"2338\":\"147#getlengths-divisions-integer-array\",\"2339\":\"147#updatearclengths-undefined\",\"2340\":\"147#getutotmapping-u-float-distance-float-float\",\"2341\":\"147#gettangent-t-float-optionaltarget-vector-vector\",\"2342\":\"147#gettangentat-u-float-optionaltarget-vector-vector\",\"2343\":\"147#computefrenetframes-segments-integer-closed-boolean-object\",\"2344\":\"147#clone-curve\",\"2345\":\"147#copy-source-curve-this\",\"2346\":\"147#tojson-object\",\"2347\":\"147#fromjson-json-object-this\",\"2348\":\"147@0\",\"2349\":\"147@1\",\"2350\":\"148\",\"2351\":\"148#icosahedrongeometry\",\"2352\":\"148@0\",\"2353\":\"148@1\",\"2354\":\"149\",\"2355\":\"149#octahedrongeometry\",\"2356\":\"149@0\",\"2357\":\"149@1\",\"2358\":\"150\",\"2359\":\"150#convexgeometry\",\"2360\":\"150@0\",\"2361\":\"150@1\",\"2362\":\"151\",\"2363\":\"151#dodecahedrongeometry\",\"2364\":\"151@0\",\"2365\":\"151@1\",\"2366\":\"152\",\"2367\":\"152#tetrahedrongeometry\",\"2368\":\"152@0\",\"2369\":\"152@1\",\"2370\":\"153\",\"2371\":\"153#circlegeometry\",\"2372\":\"153@0\",\"2373\":\"153@1\",\"2374\":\"154\",\"2375\":\"154#cylindergeometry\",\"2376\":\"154@0\",\"2377\":\"154@1\",\"2378\":\"155\",\"2379\":\"155#torusgeometry\",\"2380\":\"155@0\",\"2381\":\"155@1\",\"2382\":\"156\",\"2383\":\"156#ringgeometry\",\"2384\":\"156@0\",\"2385\":\"156@1\",\"2386\":\"157\",\"2387\":\"157#torusknotgeometry\",\"2388\":\"157@0\",\"2389\":\"157@1\",\"2390\":\"158\",\"2391\":\"158#圆锥缓冲几何体conegeometry\",\"2392\":\"158@0\",\"2393\":\"158@1\",\"2394\":\"159\",\"2395\":\"159#polyhedrongeometry\",\"2396\":\"159@0\",\"2397\":\"159@1\",\"2398\":\"160\",\"2399\":\"160#planegeometry\",\"2400\":\"160@0\",\"2401\":\"160@1\",\"2402\":\"161\",\"2403\":\"161#shapegeometry\",\"2404\":\"161@0\",\"2405\":\"161@1\",\"2406\":\"162\",\"2407\":\"162#extrudegeometry\",\"2408\":\"162@0\",\"2409\":\"162@1\",\"2410\":\"163\",\"2411\":\"163#catmullromcurve3\",\"2412\":\"163@0\",\"2413\":\"163@1\",\"2414\":\"164\",\"2415\":\"164#curepath\",\"2416\":\"164#构造函数\",\"2417\":\"164#curvepath\",\"2418\":\"164#属性\",\"2419\":\"164#curves-array\",\"2420\":\"164#autoclose-boolean\",\"2421\":\"164#方法\",\"2422\":\"164#add-curve-curve-undefined\",\"2423\":\"164#closepath-undefined\",\"2424\":\"164#getcurvelengths-array\",\"2425\":\"164#getpoints-divisions-integer-array\",\"2426\":\"164#getspacedpoints-divisions-integer-array\",\"2427\":\"164@0\",\"2428\":\"164@1\",\"2429\":\"165\",\"2430\":\"165#spheregeometry\",\"2431\":\"165@0\",\"2432\":\"165@1\",\"2433\":\"166\",\"2434\":\"166#boxgeometry\",\"2435\":\"166@0\",\"2436\":\"166@1\",\"2437\":\"167\",\"2438\":\"167#tubegeometry\",\"2439\":\"167@0\",\"2440\":\"167@1\",\"2441\":\"168\",\"2442\":\"168#wireframegeometry\",\"2443\":\"168@0\",\"2444\":\"168@1\",\"2445\":\"169\",\"2446\":\"169#lathegeometry\",\"2447\":\"169@0\",\"2448\":\"169@1\",\"2449\":\"170\",\"2450\":\"170#edgesgeometry\",\"2451\":\"170@0\",\"2452\":\"170@1\",\"2453\":\"171\",\"2454\":\"171#defaultloadingmanager\",\"2455\":\"171#代码示例\",\"2456\":\"171#属性\",\"2457\":\"171#方法\",\"2458\":\"171@0\",\"2459\":\"171@1\",\"2460\":\"172\",\"2461\":\"172#loadingmanager\",\"2462\":\"172#代码示例\",\"2463\":\"172#构造方法\",\"2464\":\"172#onload-function\",\"2465\":\"172#onprogress-function\",\"2466\":\"172#onerror-function\",\"2467\":\"172#属性\",\"2468\":\"172#onstart-function\",\"2469\":\"172#onload-function-1\",\"2470\":\"172#onprogress-function-1\",\"2471\":\"172#onerror-function-1\",\"2472\":\"172#方法\",\"2473\":\"172#addhandler-regex-object-loader-loader-this\",\"2474\":\"172#gethandler-file-string-loader\",\"2475\":\"172#removehandler-regex-object-this\",\"2476\":\"172#resolveurl-url-string-string\",\"2477\":\"172#seturlmodifier-callback-function-this\",\"2478\":\"172#itemstart-url-string-undefined\",\"2479\":\"172#itemend-url-string-undefined\",\"2480\":\"172#itemerror-url-string-undefined\",\"2481\":\"172@0\",\"2482\":\"172@1\",\"2483\":\"173\",\"2484\":\"173#animationaction\",\"2485\":\"173@0\",\"2486\":\"173@1\",\"2487\":\"174\",\"2488\":\"174#animationclip\",\"2489\":\"174@0\",\"2490\":\"174@1\",\"2491\":\"175\",\"2492\":\"175#animationmixer\",\"2493\":\"175@0\",\"2494\":\"175@1\",\"2495\":\"176\",\"2496\":\"176#光线投射-raycaster\",\"2497\":\"176@0\",\"2498\":\"176@1\",\"2499\":\"177\",\"2500\":\"177@0\",\"2501\":\"177@1\",\"2502\":\"178\",\"2503\":\"178@0\",\"2504\":\"178@1\",\"2505\":\"179\",\"2506\":\"179@0\",\"2507\":\"179@1\",\"2508\":\"180\",\"2509\":\"180#构造函数\",\"2510\":\"180#camera\",\"2511\":\"180#属性\",\"2512\":\"180#iscamera-boolean\",\"2513\":\"180#layers-layers\",\"2514\":\"180#matrixworldinverse-matrix4\",\"2515\":\"180#projectionmatrix-matrix4\",\"2516\":\"180#projectionmatrixinverse-matrix4\",\"2517\":\"180#方法\",\"2518\":\"180#clone-camera\",\"2519\":\"180#copy-source-camera-recursive-boolean-this\",\"2520\":\"180#getworlddirection-target-vector3-vector3\",\"2521\":\"180@0\",\"2522\":\"180@1\",\"2523\":\"181\",\"2524\":\"181#arraycamera\",\"2525\":\"181@0\",\"2526\":\"181@1\",\"2527\":\"182\",\"2528\":\"182#perspectivecamera\",\"2529\":\"182#构造器\",\"2530\":\"182#orthographiccamera-left-number-right-number-top-number-bottom-number-near-number-far-number\",\"2531\":\"182#属性\",\"2532\":\"182#bottom-float\",\"2533\":\"182#far-float\",\"2534\":\"182#isorthographiccamera-boolean\",\"2535\":\"182#left-float\",\"2536\":\"182#near-float\",\"2537\":\"182#right-float\",\"2538\":\"182#top-float\",\"2539\":\"182#view-object\",\"2540\":\"182#zoom-number\",\"2541\":\"182#方法\",\"2542\":\"182#setviewoffset-fullwidth-float-fullheight-float-x-float-y-float-width-float-height-float-undefined\",\"2543\":\"182#clearviewoffset-undefined\",\"2544\":\"182#updateprojectionmatrix-undefined\",\"2545\":\"182#tojson-meta-object-object\",\"2546\":\"182@0\",\"2547\":\"182@1\",\"2548\":\"183\",\"2549\":\"183#stereocamera\",\"2550\":\"183#构造器\",\"2551\":\"183#stereocamera-1\",\"2552\":\"183#属性\",\"2553\":\"183#aspect-float\",\"2554\":\"183#eyesep-float\",\"2555\":\"183#cameral-perspectivecamera\",\"2556\":\"183#camerar-perspectivecamera\",\"2557\":\"183#方法\",\"2558\":\"183#update-camera-perspectivecamera-undefined\",\"2559\":\"183@0\",\"2560\":\"183@1\",\"2561\":\"184\",\"2562\":\"184#cubecamera\",\"2563\":\"184@0\",\"2564\":\"184@1\",\"2565\":\"185\",\"2566\":\"185#perspectivecamera\",\"2567\":\"185#构造器\",\"2568\":\"185#perspectivecamera-fov-number-aspect-number-near-number-far-number\",\"2569\":\"185#属性\",\"2570\":\"185#aspect-float\",\"2571\":\"185#far-float\",\"2572\":\"185#filmgauge-float\",\"2573\":\"185#filmoffset-float\",\"2574\":\"185#focus-float\",\"2575\":\"185#fov-float\",\"2576\":\"185#isperspectivecamera-boolean\",\"2577\":\"185#near-float\",\"2578\":\"185#view-object\",\"2579\":\"185#zoom-number\",\"2580\":\"185#方法\",\"2581\":\"185#clearviewoffset-undefined\",\"2582\":\"185#geteffectivefov-float\",\"2583\":\"185#getfilmheight-float\",\"2584\":\"185#getfilmwidth-float\",\"2585\":\"185#getfocallength-float\",\"2586\":\"185#setfocallength-focallength-float-undefined\",\"2587\":\"185#setviewoffset-fullwidth-float-fullheight-float-x-float-y-float-width-float-height-float-undefined\",\"2588\":\"185#updateprojectionmatrix-undefined\",\"2589\":\"185#tojson-meta-object-object\",\"2590\":\"185@0\",\"2591\":\"185@1\",\"2592\":\"186\",\"2593\":\"186#meshlambertmaterial\",\"2594\":\"186@0\",\"2595\":\"186@1\",\"2596\":\"187\",\"2597\":\"187#meshdistancematerial\",\"2598\":\"187#构造器\",\"2599\":\"187#parameters-object\",\"2600\":\"187#属性\",\"2601\":\"187#alphamap-texture\",\"2602\":\"187#displacementmap-texture\",\"2603\":\"187#displacementscale-float\",\"2604\":\"187#displacementbias-float\",\"2605\":\"187#fardistance-float\",\"2606\":\"187#map-texture\",\"2607\":\"187#neardistance-float\",\"2608\":\"187#referenceposition-vector3\",\"2609\":\"187#方法\",\"2610\":\"187@0\",\"2611\":\"187@1\",\"2612\":\"188\",\"2613\":\"188#meshphongmaterial\",\"2614\":\"188@0\",\"2615\":\"188@1\",\"2616\":\"189\",\"2617\":\"189#rawshadermaterial\",\"2618\":\"189#构造器\",\"2619\":\"189#parameters-object\",\"2620\":\"189#属性\",\"2621\":\"189#方法\",\"2622\":\"189@0\",\"2623\":\"189@1\",\"2624\":\"190\",\"2625\":\"190#linebasicmaterial\",\"2626\":\"190@0\",\"2627\":\"190@1\",\"2628\":\"191\",\"2629\":\"191#meshbasicmaterial\",\"2630\":\"191@0\",\"2631\":\"191@1\",\"2632\":\"192\",\"2633\":\"192#material\",\"2634\":\"192#构造函数\",\"2635\":\"192#material-1\",\"2636\":\"192#属性\",\"2637\":\"192#alphatest-float\",\"2638\":\"192#alphatocoverage-boolean\",\"2639\":\"192#blenddst-integer\",\"2640\":\"192#blenddstalpha-integer\",\"2641\":\"192#blendequation-integer\",\"2642\":\"192#blendequationalpha-integer\",\"2643\":\"192#blending-blending\",\"2644\":\"192#blendsrc-integer\",\"2645\":\"192#blendsrcalpha-integer\",\"2646\":\"192#clipintersection-boolean\",\"2647\":\"192#clippingplanes-array\",\"2648\":\"192#clipshadows-boolean\",\"2649\":\"192#colorwrite-boolean\",\"2650\":\"192#defines-object\",\"2651\":\"192#depthfunc-integer\",\"2652\":\"192#depthtest-boolean\",\"2653\":\"192#depthwrite-boolean\",\"2654\":\"192#forcesinglepass-boolean\",\"2655\":\"192#ismaterial-boolean\",\"2656\":\"192#stencilwrite-boolean\",\"2657\":\"192#stencilwritemask-integer\",\"2658\":\"192#stencilfunc-integer\",\"2659\":\"192#stencilref-integer\",\"2660\":\"192#stencilfuncmask-integer\",\"2661\":\"192#stencilfail-integer\",\"2662\":\"192#stencilzfail-integer\",\"2663\":\"192#stencilzpass-integer\",\"2664\":\"192#id-integer\",\"2665\":\"192#name-string\",\"2666\":\"192#needsupdate-boolean\",\"2667\":\"192#opacity-float\",\"2668\":\"192#polygonoffset-boolean\",\"2669\":\"192#polygonoffsetfactor-integer\",\"2670\":\"192#polygonoffsetunits-integer\",\"2671\":\"192#precision-string\",\"2672\":\"192#premultipliedalpha-boolean\",\"2673\":\"192#dithering-boolean\",\"2674\":\"192#shadowside-integer\",\"2675\":\"192#side-integer\",\"2676\":\"192#tonemapped-boolean\",\"2677\":\"192#transparent-boolean\",\"2678\":\"192#type-string\",\"2679\":\"192#uuid-string\",\"2680\":\"192#version-integer\",\"2681\":\"192#vertexcolors-boolean\",\"2682\":\"192#visible-boolean\",\"2683\":\"192#userdata-object\",\"2684\":\"192#方法\",\"2685\":\"192#clone-material\",\"2686\":\"192#copy-material-material-this\",\"2687\":\"192#dispose-undefined\",\"2688\":\"192#onbeforecompile-shader-shader-renderer-webglrenderer-undefined\",\"2689\":\"192#customprogramcachekey-string\",\"2690\":\"192#setvalues-values-object-undefined\",\"2691\":\"192#tojson-meta-object-object\",\"2692\":\"192@0\",\"2693\":\"192@1\",\"2694\":\"193\",\"2695\":\"193#meshmatcapmaterial\",\"2696\":\"193#构造器\",\"2697\":\"193#parameters-object\",\"2698\":\"193#属性\",\"2699\":\"193#alphamap-texture\",\"2700\":\"193#bumpmap-texture\",\"2701\":\"193#bumpscale-float\",\"2702\":\"193#color-color\",\"2703\":\"193#displacementmap-texture\",\"2704\":\"193#displacementscale-float\",\"2705\":\"193#displacementbias-float\",\"2706\":\"193#flatshading-boolean\",\"2707\":\"193#fog-boolean\",\"2708\":\"193#map-texture\",\"2709\":\"193#matcap-texture\",\"2710\":\"193#normalmap-texture\",\"2711\":\"193#normalmaptype-integer\",\"2712\":\"193#normalscale-vector2\",\"2713\":\"193#方法\",\"2714\":\"193@0\",\"2715\":\"193@1\",\"2716\":\"194\",\"2717\":\"194#meshstandardmaterial\",\"2718\":\"194@0\",\"2719\":\"194@1\",\"2720\":\"195\",\"2721\":\"195#meshnormalmaterial\",\"2722\":\"195@0\",\"2723\":\"195@1\",\"2724\":\"196\",\"2725\":\"196#meshdepthmaterial\",\"2726\":\"196@0\",\"2727\":\"196@1\",\"2728\":\"197\",\"2729\":\"197#pointsmaterial\",\"2730\":\"197@0\",\"2731\":\"197@1\",\"2732\":\"198\",\"2733\":\"198#spritematerial\",\"2734\":\"198@0\",\"2735\":\"198@1\",\"2736\":\"199\",\"2737\":\"199#meshphysicalmaterial\",\"2738\":\"199@0\",\"2739\":\"199@1\",\"2740\":\"200\",\"2741\":\"200#shadermaterial\",\"2742\":\"200#顶点着色器和片元着色器\",\"2743\":\"200#内置-attributes-和-uniforms\",\"2744\":\"200#自定义-attributes-和-uniforms\",\"2745\":\"200#构造器\",\"2746\":\"200#parameters-object\",\"2747\":\"200#属性\",\"2748\":\"200#clipping-boolean\",\"2749\":\"200#defaultattributevalues-object\",\"2750\":\"200#defines-object\",\"2751\":\"200#extensions-object\",\"2752\":\"200#fog-boolean\",\"2753\":\"200#fragmentshader-string\",\"2754\":\"200#glslversion-string\",\"2755\":\"200#index0attributename-string\",\"2756\":\"200#isshadermaterial-boolean\",\"2757\":\"200#lights-boolean\",\"2758\":\"200#linewidth-float\",\"2759\":\"200#flatshading-boolean\",\"2760\":\"200#uniforms-object\",\"2761\":\"200#uniformsneedupdate-boolean\",\"2762\":\"200#vertexcolors-boolean\",\"2763\":\"200#vertexshader-string\",\"2764\":\"200#wireframe-boolean\",\"2765\":\"200#wireframelinewidth-float\",\"2766\":\"200#方法\",\"2767\":\"200#clone-shadermaterial-this-shadermaterial\",\"2768\":\"200@0\",\"2769\":\"200@1\",\"2770\":\"201\",\"2771\":\"201#linedashedmaterial\",\"2772\":\"201@0\",\"2773\":\"201@1\",\"2774\":\"202\",\"2775\":\"202#shadowmaterial\",\"2776\":\"202#构造器\",\"2777\":\"202#parameters-object\",\"2778\":\"202#属性\",\"2779\":\"202#color-color\",\"2780\":\"202#fog-boolean\",\"2781\":\"202#transparent-boolean\",\"2782\":\"202#方法\",\"2783\":\"202@0\",\"2784\":\"202@1\",\"2785\":\"203\",\"2786\":\"203#webglrenderer\",\"2787\":\"203#构造器\",\"2788\":\"203#webglrenderer-parameters-object\",\"2789\":\"203#属性\",\"2790\":\"203#autoclear-boolean\",\"2791\":\"203#autoclearcolor-boolean\",\"2792\":\"203#autocleardepth-boolean\",\"2793\":\"203#autoclearstencil-boolean\",\"2794\":\"203#debug-object\",\"2795\":\"203#capabilities-object\",\"2796\":\"203#clippingplanes-array\",\"2797\":\"203#domelement-domelement\",\"2798\":\"203#extensions-object\",\"2799\":\"203#outputencoding-number\",\"2800\":\"203#info-object\",\"2801\":\"203#localclippingenabled-boolean\",\"2802\":\"203#physicallycorrectlights-boolean\",\"2803\":\"203#properties-object\",\"2804\":\"203#renderlists-webglrenderlists\",\"2805\":\"203#shadowmap-webglshadowmap\",\"2806\":\"203#sortobjects-boolean\",\"2807\":\"203#state-object\",\"2808\":\"203#tonemapping-constant\",\"2809\":\"203#tonemappingexposure-number\",\"2810\":\"203#xr-webxrmanager\",\"2811\":\"203#方法\",\"2812\":\"203#clear-color-boolean-depth-boolean-stencil-boolean-undefined\",\"2813\":\"203#clearcolor-undefined\",\"2814\":\"203#cleardepth-undefined\",\"2815\":\"203#clearstencil-undefined\",\"2816\":\"203#compile-scene-object3d-camera-camera-undefined\",\"2817\":\"203#copyframebuffertotexture-position-vector2-texture-framebuffertexture-level-number-undefined\",\"2818\":\"203#copytexturetotexture-position-vector2-srctexture-texture-dsttexture-texture-level-number-undefined\",\"2819\":\"203#dispose-undefined\",\"2820\":\"203#forcecontextloss-undefined\",\"2821\":\"203#forcecontextrestore-undefined\",\"2822\":\"203#getclearalpha-float\",\"2823\":\"203#getclearcolor-target-color-color\",\"2824\":\"203#getcontext-webgl2renderingcontext\",\"2825\":\"203#getcontextattributes-webglcontextattributes\",\"2826\":\"203#getactivecubeface-integer\",\"2827\":\"203#getactivemipmaplevel-integer\",\"2828\":\"203#getrendertarget-rendertarget\",\"2829\":\"203#getcurrentviewport-rendertarget\",\"2830\":\"203#getdrawingbuffersize-object\",\"2831\":\"203#getpixelratio-number\",\"2832\":\"203#getsize-target-vector2-vector2\",\"2833\":\"203#inittexture-texture-texture-undefined\",\"2834\":\"203#resetglstate-undefined\",\"2835\":\"203#readrendertargetpixels-rendertarget-webglrendertarget-x-float-y-float-width-float-height-float-buffer-typedarray-activecubefaceindex-integer-undefined\",\"2836\":\"203#render-scene-object3d-camera-camera-undefined\",\"2837\":\"203#resetstate-undefined\",\"2838\":\"203#setanimationloop-callback-function-undefined\",\"2839\":\"203#setclearalpha-alpha-float-undefined\",\"2840\":\"203#setclearcolor-color-color-alpha-float-undefined\",\"2841\":\"203#setpixelratio-value-number-undefined\",\"2842\":\"203#setrendertarget-rendertarget-webglrendertarget-activecubeface-integer-activemipmaplevel-integer-undefined\",\"2843\":\"203#setscissor-x-integer-y-integer-width-integer-height-integer-undefined\",\"2844\":\"203#setscissortest-boolean-boolean-undefined\",\"2845\":\"203#setsize-width-integer-height-integer-updatestyle-boolean-undefined\",\"2846\":\"203#setviewport-x-integer-y-integer-width-integer-height-integer-undefined\",\"2847\":\"203@0\",\"2848\":\"203@1\",\"2849\":\"204\",\"2850\":\"204#light\",\"2851\":\"204#构造器\",\"2852\":\"204#color-integer\",\"2853\":\"204#intensity-float\",\"2854\":\"204#属性\",\"2855\":\"204#color-color\",\"2856\":\"204#intensity-float-1\",\"2857\":\"204#islight-boolean\",\"2858\":\"204#methods\",\"2859\":\"204#copy-source-light-this\",\"2860\":\"204#tojson-meta-object-object\",\"2861\":\"204@0\",\"2862\":\"204@1\",\"2863\":\"205\",\"2864\":\"205#hemispherelight\",\"2865\":\"205@0\",\"2866\":\"205@1\",\"2867\":\"206\",\"2868\":\"206#directionallight\",\"2869\":\"206@0\",\"2870\":\"206@1\",\"2871\":\"207\",\"2872\":\"207#rectarealight\",\"2873\":\"207@0\",\"2874\":\"207@1\",\"2875\":\"208\",\"2876\":\"208#pointlight\",\"2877\":\"208@0\",\"2878\":\"208@1\",\"2879\":\"209\",\"2880\":\"209#ambientlight\",\"2881\":\"209@0\",\"2882\":\"209@1\",\"2883\":\"210\",\"2884\":\"210#spotlight\",\"2885\":\"210@0\",\"2886\":\"210@1\",\"2887\":\"211\",\"2888\":\"212\",\"2889\":\"213\",\"2890\":\"214\",\"2891\":\"215\",\"2892\":\"216\",\"2893\":\"217\",\"2894\":\"218\",\"2895\":\"219\",\"2896\":\"220\",\"2897\":\"221\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1],\"2\":[2],\"3\":[2,4],\"4\":[2,2],\"5\":[2,3],\"6\":[2],\"7\":[4,2],\"8\":[2,3],\"9\":[2,5],\"10\":[2,4],\"11\":[3,10],\"12\":[3,5],\"13\":[4],\"14\":[2,9],\"15\":[4,13],\"16\":[2,63],\"17\":[2,3],\"18\":[2],\"19\":[2,102],\"20\":[2,110],\"21\":[2,210],\"22\":[3,33],\"23\":[2,48],\"24\":[2],\"25\":[2,7],\"26\":[2,4],\"27\":[2,38],\"28\":[4],\"29\":[2,7],\"30\":[2,51],\"31\":[6,13],\"32\":[2,3],\"33\":[3,16],\"34\":[3,7],\"35\":[2],\"36\":[2,4],\"37\":[3,10],\"38\":[2,9],\"39\":[2,81],\"40\":[4,12],\"41\":[3,6],\"42\":[null,null,1],\"43\":[null,null,1],\"44\":[1],\"45\":[2],\"46\":[2,5],\"47\":[2,4],\"48\":[2,3],\"49\":[2],\"50\":[4,2],\"51\":[2,3],\"52\":[2,5],\"53\":[2,4],\"54\":[3,10],\"55\":[3,5],\"56\":[4],\"57\":[2,9],\"58\":[4,10],\"59\":[2,63],\"60\":[2,3],\"61\":[2],\"62\":[2,94],\"63\":[2,121],\"64\":[2,210],\"65\":[3,33],\"66\":[2,48],\"67\":[2],\"68\":[2,7],\"69\":[2,4],\"70\":[2,38],\"71\":[4],\"72\":[2,7],\"73\":[2,51],\"74\":[6,13],\"75\":[2,3],\"76\":[3,16],\"77\":[3,7],\"78\":[2],\"79\":[2,5],\"80\":[2,28],\"81\":[2,9],\"82\":[3,38],\"83\":[2,139],\"84\":[null,null,1],\"85\":[null,null,1],\"86\":[1],\"87\":[1,26],\"88\":[1,30],\"89\":[1,6],\"90\":[null,null,1],\"91\":[null,null,1],\"92\":[1],\"93\":[1,1],\"94\":[1,104],\"95\":[null,null,1],\"96\":[null,null,1],\"97\":[1],\"98\":[2,7],\"99\":[null,null,1],\"100\":[null,null,1],\"101\":[1],\"102\":[4,15],\"103\":[2,3],\"104\":[1,14],\"105\":[null,null,1],\"106\":[null,null,1],\"107\":[1],\"108\":[2,25],\"109\":[2,76],\"110\":[3,6],\"111\":[2,14],\"112\":[1,5],\"113\":[null,null,1],\"114\":[null,null,1],\"115\":[1],\"116\":[1,12],\"117\":[1,38],\"118\":[1,148],\"119\":[1,121],\"120\":[1,19],\"121\":[2,38],\"122\":[2,76],\"123\":[2,123],\"124\":[1,26],\"125\":[2,91],\"126\":[2,52],\"127\":[1,237],\"128\":[1,223],\"129\":[null,null,1],\"130\":[null,null,1],\"131\":[1],\"132\":[2],\"133\":[1],\"134\":[1],\"135\":[1],\"136\":[1,4],\"137\":[null,null,1],\"138\":[null,null,1],\"139\":[1],\"140\":[1],\"141\":[1],\"142\":[1],\"143\":[1],\"144\":[1],\"145\":[1],\"146\":[1],\"147\":[1,33],\"148\":[1,13],\"149\":[1,20],\"150\":[1],\"151\":[1,37],\"152\":[1,9],\"153\":[1,10],\"154\":[null,null,1],\"155\":[null,null,1],\"156\":[1],\"157\":[1],\"158\":[1,2],\"159\":[1,12],\"160\":[1,1],\"161\":[1,8],\"162\":[null,null,1],\"163\":[null,null,1],\"164\":[1],\"165\":[4,11],\"166\":[5,13],\"167\":[4,11],\"168\":[4,11],\"169\":[1,9],\"170\":[3,7],\"171\":[1,21],\"172\":[1,23],\"173\":[2,13],\"174\":[1,9],\"175\":[null,null,1],\"176\":[null,null,1],\"177\":[1],\"178\":[1,63],\"179\":[1,4],\"180\":[1],\"181\":[3,16],\"182\":[2,9],\"183\":[1,12],\"184\":[3,41],\"185\":[2,10],\"186\":[null,null,1],\"187\":[null,null,1],\"188\":[1],\"189\":[1,3],\"190\":[1,3],\"191\":[1,21],\"192\":[1,12],\"193\":[2,19],\"194\":[null,null,1],\"195\":[null,null,1],\"196\":[1],\"197\":[null,null,1],\"198\":[null,null,1],\"199\":[1],\"200\":[1,24],\"201\":[2,50],\"202\":[1,75],\"203\":[1],\"204\":[2,28],\"205\":[1,43],\"206\":[2,85],\"207\":[3,66],\"208\":[3,95],\"209\":[null,null,1],\"210\":[null,null,1],\"211\":[1],\"212\":[1],\"213\":[1,15],\"214\":[1,7],\"215\":[1,82],\"216\":[1,9],\"217\":[1,51],\"218\":[1,19],\"219\":[1,8],\"220\":[null,null,1],\"221\":[null,null,1],\"222\":[1],\"223\":[1,32],\"224\":[1,22],\"225\":[1],\"226\":[2,50],\"227\":[null,null,1],\"228\":[null,null,1],\"229\":[1],\"230\":[2,22],\"231\":[3,27],\"232\":[3,54],\"233\":[3,42],\"234\":[2,51],\"235\":[3,6],\"236\":[1,43],\"237\":[1,32],\"238\":[2],\"239\":[3,94],\"240\":[4,60],\"241\":[3,38],\"242\":[null,null,1],\"243\":[null,null,1],\"244\":[2],\"245\":[5],\"246\":[4,17],\"247\":[3,20],\"248\":[3,34],\"249\":[3,50],\"250\":[3,36],\"251\":[2,22],\"252\":[3,36],\"253\":[3,53],\"254\":[3,64],\"255\":[2,58],\"256\":[2,19],\"257\":[5,19],\"258\":[3,21],\"259\":[2,13],\"260\":[3,37],\"261\":[4,51],\"262\":[3,22],\"263\":[4,7],\"264\":[2,9],\"265\":[3,14],\"266\":[3,13],\"267\":[3,17],\"268\":[2,33],\"269\":[3,38],\"270\":[3,24],\"271\":[3,74],\"272\":[2,111],\"273\":[2,12],\"274\":[4,35],\"275\":[4,39],\"276\":[3,21],\"277\":[3,17],\"278\":[2],\"279\":[3,27],\"280\":[3,18],\"281\":[3,30],\"282\":[3,37],\"283\":[2],\"284\":[3,69],\"285\":[3,32],\"286\":[4,76],\"287\":[3,38],\"288\":[5],\"289\":[4,52],\"290\":[2,10],\"291\":[5],\"292\":[5,7],\"293\":[3,34],\"294\":[3,12],\"295\":[6,48],\"296\":[2,11],\"297\":[3,24],\"298\":[5],\"299\":[4,39],\"300\":[3,32],\"301\":[2,7],\"302\":[3,15],\"303\":[3,16],\"304\":[3,17],\"305\":[3,39],\"306\":[5],\"307\":[5,20],\"308\":[3,11],\"309\":[3,17],\"310\":[5],\"311\":[3,26],\"312\":[3,25],\"313\":[4,19],\"314\":[3,10],\"315\":[5,12],\"316\":[3,20],\"317\":[3,17],\"318\":[2,13],\"319\":[5],\"320\":[2,68],\"321\":[3,33],\"322\":[3,51],\"323\":[3,45],\"324\":[4,35],\"325\":[5],\"326\":[4,26],\"327\":[2,17],\"328\":[3,50],\"329\":[2,13],\"330\":[5],\"331\":[4,20],\"332\":[3,27],\"333\":[3,24],\"334\":[4,107],\"335\":[null,null,1],\"336\":[null,null,2],\"337\":[2,19],\"338\":[4,139],\"339\":[3,92],\"340\":[4,146],\"341\":[4,101],\"342\":[3,77],\"343\":[4,159],\"344\":[3,35],\"345\":[4,81],\"346\":[null,null,1],\"347\":[null,null,2],\"348\":[1],\"349\":[2,12],\"350\":[3,36],\"351\":[3,22],\"352\":[4,36],\"353\":[4,48],\"354\":[4,74],\"355\":[6,79],\"356\":[1,28],\"357\":[1,29],\"358\":[1,33],\"359\":[5,66],\"360\":[3,76],\"361\":[4,8],\"362\":[3,50],\"363\":[3,53],\"364\":[3,26],\"365\":[5,32],\"366\":[null,null,1],\"367\":[null,null,1],\"368\":[1],\"369\":[2],\"370\":[3,35],\"371\":[3,46],\"372\":[2,14],\"373\":[3],\"374\":[1,34],\"375\":[1,23],\"376\":[3,134],\"377\":[3],\"378\":[3,58],\"379\":[3,83],\"380\":[3,21],\"381\":[4,22],\"382\":[5,34],\"383\":[3,54],\"384\":[null,null,1],\"385\":[null,null,1],\"386\":[1,14],\"387\":[2,25],\"388\":[4,113],\"389\":[4,53],\"390\":[2,27],\"391\":[3,76],\"392\":[3,60],\"393\":[2,13],\"394\":[3,58],\"395\":[3,121],\"396\":[2],\"397\":[3,41],\"398\":[3,17],\"399\":[3,20],\"400\":[4,34],\"401\":[3,25],\"402\":[3,74],\"403\":[3,67],\"404\":[3,28],\"405\":[3,18],\"406\":[4,17],\"407\":[3,8],\"408\":[3,22],\"409\":[3,32],\"410\":[3,16],\"411\":[1,42],\"412\":[1,22],\"413\":[3,96],\"414\":[2,81],\"415\":[2,3],\"416\":[5,10],\"417\":[5,12],\"418\":[5,33],\"419\":[5,18],\"420\":[5,16],\"421\":[6,7],\"422\":[null,null,1],\"423\":[null,null,1],\"424\":[1,12],\"425\":[3,52],\"426\":[2,5],\"427\":[2,9],\"428\":[3,18],\"429\":[4,34],\"430\":[2,54],\"431\":[2,48],\"432\":[2,54],\"433\":[2,59],\"434\":[4,44],\"435\":[2,11],\"436\":[2,89],\"437\":[4,47],\"438\":[null,null,1],\"439\":[null,null,1],\"440\":[1],\"441\":[2],\"442\":[3,39],\"443\":[3,22],\"444\":[3,27],\"445\":[2,96],\"446\":[2],\"447\":[3],\"448\":[1,25],\"449\":[1,54],\"450\":[1,23],\"451\":[3,15],\"452\":[1,38],\"453\":[1,16],\"454\":[1,21],\"455\":[3,77],\"456\":[2],\"457\":[3,21],\"458\":[1,35],\"459\":[1],\"460\":[1,13],\"461\":[3,16],\"462\":[2,60],\"463\":[3,105],\"464\":[2,94],\"465\":[2,76],\"466\":[3],\"467\":[3,90],\"468\":[3],\"469\":[1,51],\"470\":[1,61],\"471\":[1,40],\"472\":[1,40],\"473\":[3,45],\"474\":[6,42],\"475\":[null,null,1],\"476\":[null,null,1],\"477\":[1],\"478\":[1,56],\"479\":[1,17],\"480\":[1],\"481\":[2,24],\"482\":[1,82],\"483\":[1],\"484\":[2,59],\"485\":[1,5],\"486\":[5,32],\"487\":[1,1],\"488\":[4,43],\"489\":[1,7],\"490\":[2,46],\"491\":[1,1],\"492\":[2,36],\"493\":[1,8],\"494\":[3,49],\"495\":[5,83],\"496\":[1],\"497\":[null,null,1],\"498\":[null,null,1],\"499\":[1,16],\"500\":[3,94],\"501\":[3,57],\"502\":[3,24],\"503\":[3,27],\"504\":[2,7],\"505\":[3,52],\"506\":[3,28],\"507\":[2,94],\"508\":[2,33],\"509\":[3,11],\"510\":[3,55],\"511\":[2,74],\"512\":[null,null,1],\"513\":[null,null,1],\"514\":[1],\"515\":[2,11],\"516\":[2,9],\"517\":[3,33],\"518\":[3,34],\"519\":[2,8],\"520\":[3,32],\"521\":[3,22],\"522\":[3,27],\"523\":[3,17],\"524\":[3,28],\"525\":[2,28],\"526\":[2,46],\"527\":[2,6],\"528\":[3,44],\"529\":[3,36],\"530\":[3,45],\"531\":[2,5],\"532\":[3,9],\"533\":[3,19],\"534\":[2,5],\"535\":[3,48],\"536\":[3,39],\"537\":[3,35],\"538\":[2,10],\"539\":[3,13],\"540\":[3,10],\"541\":[3,10],\"542\":[2,5],\"543\":[3,13],\"544\":[3,9],\"545\":[2,35],\"546\":[2,6],\"547\":[3,33],\"548\":[3,12],\"549\":[2,4],\"550\":[3,54],\"551\":[3,38],\"552\":[null,null,1],\"553\":[null,null,1],\"554\":[1,13],\"555\":[2,57],\"556\":[2,8],\"557\":[2,15],\"558\":[2,32],\"559\":[2,46],\"560\":[3,39],\"561\":[2],\"562\":[3,34],\"563\":[4,14],\"564\":[4,9],\"565\":[3,85],\"566\":[3,32],\"567\":[4,24],\"568\":[4,46],\"569\":[3,119],\"570\":[2,9],\"571\":[3,38],\"572\":[3,18],\"573\":[3,34],\"574\":[3,41],\"575\":[3,46],\"576\":[3,47],\"577\":[3,42],\"578\":[2,103],\"579\":[2,2],\"580\":[3,64],\"581\":[4,95],\"582\":[4,55],\"583\":[4,36],\"584\":[3,88],\"585\":[2],\"586\":[3],\"587\":[3,59],\"588\":[3,53],\"589\":[3,54],\"590\":[5,97],\"591\":[5,53],\"592\":[3,60],\"593\":[3],\"594\":[4,72],\"595\":[4,78],\"596\":[3,109],\"597\":[4,57],\"598\":[null,null,1],\"599\":[null,null,1],\"600\":[1],\"601\":[2,18],\"602\":[4,53],\"603\":[2,4],\"604\":[4,24],\"605\":[3,18],\"606\":[2,91],\"607\":[3,39],\"608\":[4,22],\"609\":[4,36],\"610\":[4,40],\"611\":[4,28],\"612\":[2],\"613\":[4,18],\"614\":[4,11],\"615\":[2],\"616\":[4,64],\"617\":[3,33],\"618\":[3,17],\"619\":[3,18],\"620\":[3,12],\"621\":[3,24],\"622\":[2,7],\"623\":[3,26],\"624\":[3,35],\"625\":[4,34],\"626\":[2],\"627\":[2,63],\"628\":[2,26],\"629\":[2,3],\"630\":[3,8],\"631\":[3,14],\"632\":[3,8],\"633\":[3,17],\"634\":[3,9],\"635\":[3,20],\"636\":[5,31],\"637\":[3,21],\"638\":[2,19],\"639\":[4,20],\"640\":[4,24],\"641\":[4,43],\"642\":[4,63],\"643\":[3,33],\"644\":[3,47],\"645\":[3,23],\"646\":[4,44],\"647\":[null,null,1],\"648\":[null,null,1],\"649\":[1],\"650\":[1,34],\"651\":[1,20],\"652\":[1,29],\"653\":[1,53],\"654\":[3,26],\"655\":[1],\"656\":[1,51],\"657\":[1,86],\"658\":[1,44],\"659\":[5,34],\"660\":[1],\"661\":[1],\"662\":[2,57],\"663\":[2,79],\"664\":[2,19],\"665\":[1],\"666\":[1,24],\"667\":[1,22],\"668\":[1,22],\"669\":[1,21],\"670\":[null,null,1],\"671\":[null,null,1],\"672\":[1],\"673\":[2],\"674\":[2,34],\"675\":[2,2],\"676\":[3,12],\"677\":[3,66],\"678\":[4,103],\"679\":[2,41],\"680\":[2,35],\"681\":[2,51],\"682\":[2,31],\"683\":[2,12],\"684\":[3,37],\"685\":[3,32],\"686\":[2,9],\"687\":[3,14],\"688\":[3,12],\"689\":[3,42],\"690\":[3,27],\"691\":[2,17],\"692\":[3,21],\"693\":[3,17],\"694\":[2,13],\"695\":[3,26],\"696\":[3,20],\"697\":[2,6],\"698\":[3,77],\"699\":[3,19],\"700\":[2,8],\"701\":[3,31],\"702\":[3,45],\"703\":[3,56],\"704\":[2,7],\"705\":[3,69],\"706\":[3,30],\"707\":[2,4],\"708\":[3,32],\"709\":[3,37],\"710\":[2,33],\"711\":[2,21],\"712\":[3,32],\"713\":[3,42],\"714\":[3,32],\"715\":[3,20],\"716\":[3,19],\"717\":[2,8],\"718\":[4,37],\"719\":[4,73],\"720\":[3,19],\"721\":[2,20],\"722\":[2],\"723\":[3,48],\"724\":[3,44],\"725\":[3,35],\"726\":[2],\"727\":[3,33],\"728\":[3,38],\"729\":[3,32],\"730\":[2],\"731\":[3,75],\"732\":[5,38],\"733\":[2],\"734\":[2,27],\"735\":[3,39],\"736\":[4,34],\"737\":[3,37],\"738\":[5,27],\"739\":[5,43],\"740\":[5,43],\"741\":[2,2],\"742\":[4,17],\"743\":[4,30],\"744\":[2],\"745\":[4,19],\"746\":[3,21],\"747\":[2],\"748\":[3,38],\"749\":[3,26],\"750\":[null,null,1],\"751\":[null,null,1],\"752\":[1],\"753\":[2,9],\"754\":[3,13],\"755\":[4,53],\"756\":[3,25],\"757\":[3],\"758\":[5,25],\"759\":[5,19],\"760\":[3,30],\"761\":[2,10],\"762\":[4,20],\"763\":[4,50],\"764\":[7,23],\"765\":[3,51],\"766\":[2,44],\"767\":[2,66],\"768\":[2,53],\"769\":[null,null,1],\"770\":[null,null,1],\"771\":[1],\"772\":[3,58],\"773\":[3,26],\"774\":[3,48],\"775\":[2,37],\"776\":[2,4],\"777\":[2,29],\"778\":[4,16],\"779\":[1,8],\"780\":[2],\"781\":[3,9],\"782\":[3,16],\"783\":[3,7],\"784\":[3,14],\"785\":[3,9],\"786\":[5,8],\"787\":[3,12],\"788\":[1,20],\"789\":[3,11],\"790\":[3,8],\"791\":[3,12],\"792\":[4,11],\"793\":[4,7],\"794\":[1,10],\"795\":[2,34],\"796\":[3,9],\"797\":[3,33],\"798\":[3,8],\"799\":[3,9],\"800\":[6,12],\"801\":[1,12],\"802\":[1,34],\"803\":[3,48],\"804\":[2,29],\"805\":[3,62],\"806\":[3,137],\"807\":[3,42],\"808\":[null,null,1],\"809\":[null,null,1],\"810\":[1],\"811\":[1],\"812\":[2,12],\"813\":[1,26],\"814\":[1],\"815\":[5,21],\"816\":[2,35],\"817\":[4,160],\"818\":[1],\"819\":[3,52],\"820\":[1],\"821\":[2,26],\"822\":[4,36],\"823\":[2,38],\"824\":[null,null,1],\"825\":[null,null,1],\"826\":[1],\"827\":[1,8],\"828\":[1,30],\"829\":[1,25],\"830\":[1,5],\"831\":[1,26],\"832\":[1,10],\"833\":[null,null,1],\"834\":[null,null,1],\"835\":[1],\"836\":[2,45],\"837\":[2,6],\"838\":[2,55],\"839\":[2,12],\"840\":[3,16],\"841\":[3,11],\"842\":[3,12],\"843\":[3,57],\"844\":[2,35],\"845\":[2],\"846\":[2],\"847\":[3,31],\"848\":[2,19],\"849\":[2,26],\"850\":[2,15],\"851\":[2,12],\"852\":[null,null,1],\"853\":[null,null,1],\"854\":[1],\"855\":[1,23],\"856\":[1,3],\"857\":[1],\"858\":[1],\"859\":[1,103],\"860\":[1,101],\"861\":[1,60],\"862\":[2,57],\"863\":[1,56],\"864\":[2,137],\"865\":[1,62],\"866\":[1,98],\"867\":[3,51],\"868\":[null,null,1],\"869\":[null,null,1],\"870\":[1],\"871\":[2],\"872\":[3,59],\"873\":[3,52],\"874\":[3,56],\"875\":[3,57],\"876\":[4,47],\"877\":[4,79],\"878\":[4,50],\"879\":[5,70],\"880\":[2],\"881\":[3,32],\"882\":[6,35],\"883\":[4,24],\"884\":[4,26],\"885\":[4,38],\"886\":[1,16],\"887\":[2],\"888\":[2,36],\"889\":[2,35],\"890\":[3,17],\"891\":[4,39],\"892\":[null,null,1],\"893\":[null,null,1],\"894\":[1],\"895\":[2,114],\"896\":[3,49],\"897\":[3,32],\"898\":[3,87],\"899\":[2],\"900\":[3,47],\"901\":[3,71],\"902\":[3,105],\"903\":[3,92],\"904\":[null,null,1],\"905\":[null,null,1],\"906\":[1],\"907\":[1,5],\"908\":[1,7],\"909\":[4,30],\"910\":[null,null,1],\"911\":[null,null,1],\"912\":[1],\"913\":[1,65],\"914\":[1],\"915\":[1,10],\"916\":[1,6],\"917\":[1],\"918\":[1,7],\"919\":[1,32],\"920\":[1,9],\"921\":[1,21],\"922\":[1,2],\"923\":[1],\"924\":[1],\"925\":[1,2],\"926\":[1,1],\"927\":[1,1],\"928\":[1,1],\"929\":[1,13],\"930\":[1,39],\"931\":[1,22],\"932\":[null,null,1],\"933\":[null,null,1],\"934\":[1],\"935\":[1,2],\"936\":[1],\"937\":[3,24],\"938\":[3,14],\"939\":[3,17],\"940\":[2,34],\"941\":[1,11],\"942\":[1],\"943\":[1,16],\"944\":[1,48],\"945\":[1,16],\"946\":[1,2],\"947\":[1,5],\"948\":[1,3],\"949\":[1,2],\"950\":[1,44],\"951\":[1,9],\"952\":[1,3],\"953\":[1,34],\"954\":[1,9],\"955\":[1,2],\"956\":[1,3],\"957\":[1,3],\"958\":[1,2],\"959\":[1,13],\"960\":[1,5],\"961\":[1,2],\"962\":[1,3],\"963\":[1,3],\"964\":[null,null,1],\"965\":[null,null,1],\"966\":[1],\"967\":[1,14],\"968\":[1,5],\"969\":[1,3],\"970\":[1,6],\"971\":[1,3],\"972\":[1,33],\"973\":[1,30],\"974\":[1,2],\"975\":[1,6],\"976\":[1,16],\"977\":[1,2],\"978\":[1,6],\"979\":[1,12],\"980\":[1,5],\"981\":[1,27],\"982\":[1,2],\"983\":[1,44],\"984\":[1,49],\"985\":[1,8],\"986\":[1,76],\"987\":[1,9],\"988\":[1,4],\"989\":[1,108],\"990\":[1,8],\"991\":[1,1],\"992\":[1,31],\"993\":[1,31],\"994\":[1,2],\"995\":[1,12],\"996\":[1,5],\"997\":[1,2],\"998\":[1,50],\"999\":[1,24],\"1000\":[1,3],\"1001\":[1,39],\"1002\":[1,32],\"1003\":[1,37],\"1004\":[1,5],\"1005\":[1,2],\"1006\":[1,81],\"1007\":[1,59],\"1008\":[1,9],\"1009\":[1,176],\"1010\":[1,7],\"1011\":[1,2],\"1012\":[1,33],\"1013\":[1],\"1014\":[1,23],\"1015\":[1,14],\"1016\":[1,49],\"1017\":[1,2],\"1018\":[1,108],\"1019\":[1,16],\"1020\":[1,2],\"1021\":[1,76],\"1022\":[1,2],\"1023\":[1],\"1024\":[1,5],\"1025\":[1,66],\"1026\":[null,null,1],\"1027\":[null,null,1],\"1028\":[1],\"1029\":[1,65],\"1030\":[1],\"1031\":[1,2],\"1032\":[1,34],\"1033\":[1,21],\"1034\":[1,2],\"1035\":[1,23],\"1036\":[1,24],\"1037\":[1,16],\"1038\":[1,37],\"1039\":[1,62],\"1040\":[1,65],\"1041\":[1,27],\"1042\":[1],\"1043\":[1,7],\"1044\":[1,11],\"1045\":[1,7],\"1046\":[3],\"1047\":[1,2],\"1048\":[1,2],\"1049\":[2,4],\"1050\":[1,5],\"1051\":[null,null,1],\"1052\":[null,null,1],\"1053\":[1],\"1054\":[2,14],\"1055\":[1],\"1056\":[1,58],\"1057\":[1,41],\"1058\":[1,20],\"1059\":[1],\"1060\":[3],\"1061\":[1,68],\"1062\":[1,45],\"1063\":[2,74],\"1064\":[1],\"1065\":[1,31],\"1066\":[1],\"1067\":[2,42],\"1068\":[2,10],\"1069\":[null,null,1],\"1070\":[null,null,1],\"1071\":[1,28],\"1072\":[1,17],\"1073\":[1,27],\"1074\":[null,null,1],\"1075\":[null,null,1],\"1076\":[1],\"1077\":[2,18],\"1078\":[1,8],\"1079\":[2,9],\"1080\":[1,11],\"1081\":[1,5],\"1082\":[1,12],\"1083\":[1,16],\"1084\":[1,7],\"1085\":[1],\"1086\":[1,19],\"1087\":[1,10],\"1088\":[1,12],\"1089\":[1,20],\"1090\":[1],\"1091\":[1,9],\"1092\":[1,4],\"1093\":[1,3],\"1094\":[1,3],\"1095\":[1,2],\"1096\":[1,8],\"1097\":[1,7],\"1098\":[1,3],\"1099\":[1,10],\"1100\":[1,2],\"1101\":[1,6],\"1102\":[1,30],\"1103\":[1,3],\"1104\":[1,22],\"1105\":[1,14],\"1106\":[1,20],\"1107\":[1,1],\"1108\":[2],\"1109\":[2,18],\"1110\":[1,13],\"1111\":[1,5],\"1112\":[1,3],\"1113\":[3,11],\"1114\":[1],\"1115\":[2,6],\"1116\":[1,14],\"1117\":[1],\"1118\":[3,15],\"1119\":[3,5],\"1120\":[2,6],\"1121\":[3,9],\"1122\":[1],\"1123\":[1,3],\"1124\":[1,4],\"1125\":[2,29],\"1126\":[null,null,1],\"1127\":[null,null,1],\"1128\":[1],\"1129\":[1],\"1130\":[1],\"1131\":[1,6],\"1132\":[3,10],\"1133\":[1,7],\"1134\":[1,12],\"1135\":[1,16],\"1136\":[1,4],\"1137\":[1,55],\"1138\":[1],\"1139\":[3,5],\"1140\":[2],\"1141\":[4,15],\"1142\":[1,3],\"1143\":[2,4],\"1144\":[3,10],\"1145\":[5,7],\"1146\":[1,43],\"1147\":[null,null,1],\"1148\":[null,null,1],\"1149\":[1],\"1150\":[1,61],\"1151\":[1],\"1152\":[1,141],\"1153\":[1,208],\"1154\":[null,null,1],\"1155\":[null,null,1],\"1156\":[2],\"1157\":[2,40],\"1158\":[1,17],\"1159\":[1,44],\"1160\":[1,26],\"1161\":[2,42],\"1162\":[2,41],\"1163\":[2,34],\"1164\":[null,null,1],\"1165\":[null,null,1],\"1166\":[2],\"1167\":[1,120],\"1168\":[1,150],\"1169\":[null,null,1],\"1170\":[null,null,1],\"1171\":[1],\"1172\":[1],\"1173\":[2,40],\"1174\":[2,15],\"1175\":[5,36],\"1176\":[2,49],\"1177\":[2,36],\"1178\":[2,38],\"1179\":[1],\"1180\":[2,15],\"1181\":[2,18],\"1182\":[5,36],\"1183\":[1,45],\"1184\":[1,28],\"1185\":[2,49],\"1186\":[2,37],\"1187\":[2,39],\"1188\":[1,47],\"1189\":[null,null,1],\"1190\":[null,null,1],\"1191\":[1],\"1192\":[1],\"1193\":[1,5],\"1194\":[1,29],\"1195\":[3,11],\"1196\":[1,62],\"1197\":[1,65],\"1198\":[2],\"1199\":[1,30],\"1200\":[1,61],\"1201\":[2,52],\"1202\":[4],\"1203\":[1,55],\"1204\":[1,55],\"1205\":[null,null,1],\"1206\":[null,null,1],\"1207\":[1],\"1208\":[1,11],\"1209\":[2,33],\"1210\":[2,67],\"1211\":[4,75],\"1212\":[2,110],\"1213\":[null,null,1],\"1214\":[null,null,1],\"1215\":[1],\"1216\":[1],\"1217\":[2,24],\"1218\":[3,16],\"1219\":[2,23],\"1220\":[1,50],\"1221\":[1],\"1222\":[3,70],\"1223\":[3,15],\"1224\":[2,9],\"1225\":[2,13],\"1226\":[2],\"1227\":[2,51],\"1228\":[3,6],\"1229\":[6,38],\"1230\":[null,null,1],\"1231\":[null,null,1],\"1232\":[1],\"1233\":[4,14],\"1234\":[1,25],\"1235\":[1,74],\"1236\":[1,72],\"1237\":[2,32],\"1238\":[null,null,1],\"1239\":[null,null,1],\"1240\":[1],\"1241\":[1,22],\"1242\":[1],\"1243\":[1,41],\"1244\":[1,79],\"1245\":[1,5],\"1246\":[3,25],\"1247\":[3,22],\"1248\":[4,23],\"1249\":[3,38],\"1250\":[5,20],\"1251\":[1,51],\"1252\":[null,null,1],\"1253\":[null,null,1],\"1254\":[1],\"1255\":[3,79],\"1256\":[2,151],\"1257\":[1],\"1258\":[2,18],\"1259\":[2,20],\"1260\":[1,15],\"1261\":[null,null,1],\"1262\":[null,null,1],\"1263\":[1],\"1264\":[1,24],\"1265\":[1,91],\"1266\":[1],\"1267\":[1,86],\"1268\":[1,19],\"1269\":[2,62],\"1270\":[null,null,1],\"1271\":[null,null,1],\"1272\":[1],\"1273\":[1,107],\"1274\":[3,104],\"1275\":[4,26],\"1276\":[null,null,1],\"1277\":[null,null,1],\"1278\":[1],\"1279\":[1,43],\"1280\":[1],\"1281\":[3,48],\"1282\":[1,36],\"1283\":[4,52],\"1284\":[1],\"1285\":[3,52],\"1286\":[2,51],\"1287\":[3,50],\"1288\":[1,36],\"1289\":[1,50],\"1290\":[1,37],\"1291\":[null,null,1],\"1292\":[null,null,1],\"1293\":[1],\"1294\":[1,7],\"1295\":[1],\"1296\":[1,7],\"1297\":[1,18],\"1298\":[1],\"1299\":[1,37],\"1300\":[1,39],\"1301\":[1,9],\"1302\":[1,10],\"1303\":[1,50],\"1304\":[null,null,1],\"1305\":[null,null,1],\"1306\":[1],\"1307\":[1,14],\"1308\":[1,29],\"1309\":[1,42],\"1310\":[1],\"1311\":[3,91],\"1312\":[4,78],\"1313\":[null,null,1],\"1314\":[null,null,1],\"1315\":[1,92],\"1316\":[null,null,1],\"1317\":[null,null,1],\"1318\":[1],\"1319\":[1],\"1320\":[1,95],\"1321\":[1,89],\"1322\":[1],\"1323\":[1,95],\"1324\":[1,90],\"1325\":[null,null,1],\"1326\":[null,null,1],\"1327\":[1],\"1328\":[1,6],\"1329\":[1,4],\"1330\":[1,4],\"1331\":[1,5],\"1332\":[1,49],\"1333\":[3],\"1334\":[1,45],\"1335\":[1,24],\"1336\":[null,null,1],\"1337\":[null,null,1],\"1338\":[1,69],\"1339\":[3,35],\"1340\":[1,58],\"1341\":[1,19],\"1342\":[2,14],\"1343\":[2,29],\"1344\":[2,14],\"1345\":[1],\"1346\":[1,8],\"1347\":[1,8],\"1348\":[1,10],\"1349\":[1,9],\"1350\":[null,null,1],\"1351\":[null,null,1],\"1352\":[1],\"1353\":[1,15],\"1354\":[1,27],\"1355\":[1,19],\"1356\":[1,23],\"1357\":[1,36],\"1358\":[null,null,1],\"1359\":[null,null,1],\"1360\":[1,9],\"1361\":[1,5],\"1362\":[1,18],\"1363\":[1,31],\"1364\":[1],\"1365\":[1,37],\"1366\":[1,128],\"1367\":[1,14],\"1368\":[1,17],\"1369\":[1,32],\"1370\":[1,62],\"1371\":[1,26],\"1372\":[1,62],\"1373\":[1,24],\"1374\":[1,26],\"1375\":[1,29],\"1376\":[1,28],\"1377\":[1,26],\"1378\":[1,33],\"1379\":[1,25],\"1380\":[1,31],\"1381\":[1,19],\"1382\":[1,30],\"1383\":[null,null,1],\"1384\":[null,null,1],\"1385\":[1],\"1386\":[1,33],\"1387\":[1,24],\"1388\":[2,23],\"1389\":[1,40],\"1390\":[1,43],\"1391\":[2,21],\"1392\":[1,33],\"1393\":[null,null,1],\"1394\":[null,null,1],\"1395\":[1],\"1396\":[1],\"1397\":[2,5],\"1398\":[2,5],\"1399\":[2,6],\"1400\":[4,21],\"1401\":[2,7],\"1402\":[2,12],\"1403\":[2,7],\"1404\":[1],\"1405\":[2,23],\"1406\":[2],\"1407\":[1,22],\"1408\":[1,9],\"1409\":[1,11],\"1410\":[3,16],\"1411\":[1,32],\"1412\":[1,14],\"1413\":[1,16],\"1414\":[1,29],\"1415\":[2,33],\"1416\":[2,79],\"1417\":[2,40],\"1418\":[2,75],\"1419\":[1],\"1420\":[1,8],\"1421\":[1,11],\"1422\":[1,12],\"1423\":[1,16],\"1424\":[1,14],\"1425\":[1,14],\"1426\":[1,23],\"1427\":[1,43],\"1428\":[1,49],\"1429\":[1,27],\"1430\":[4,41],\"1431\":[4,73],\"1432\":[null,null,1],\"1433\":[null,null,1],\"1434\":[1],\"1435\":[2,24],\"1436\":[2,37],\"1437\":[2,28],\"1438\":[1,12],\"1439\":[null,null,1],\"1440\":[null,null,1],\"1441\":[1],\"1442\":[1,68],\"1443\":[1,61],\"1444\":[1],\"1445\":[3,12],\"1446\":[2,12],\"1447\":[1,16],\"1448\":[1,31],\"1449\":[null,null,1],\"1450\":[null,null,1],\"1451\":[1],\"1452\":[3,7],\"1453\":[3,10],\"1454\":[2,153],\"1455\":[null,null,1],\"1456\":[null,null,1],\"1457\":[3],\"1458\":[1,28],\"1459\":[1,12],\"1460\":[1,47],\"1461\":[null,null,1],\"1462\":[null,null,3],\"1463\":[1],\"1464\":[1,12],\"1465\":[1,10],\"1466\":[1,45],\"1467\":[1,64],\"1468\":[1,62],\"1469\":[1,51],\"1470\":[null,null,1],\"1471\":[null,null,1],\"1472\":[1,40],\"1473\":[null,null,1],\"1474\":[null,null,1],\"1475\":[1,40],\"1476\":[2,99],\"1477\":[2,42],\"1478\":[2,133],\"1479\":[3,23],\"1480\":[1,10],\"1481\":[null,null,1],\"1482\":[null,null,1],\"1483\":[1,32],\"1484\":[4,39],\"1485\":[3,54],\"1486\":[1,66],\"1487\":[1,10],\"1488\":[null,null,1],\"1489\":[null,null,1],\"1490\":[1,38],\"1491\":[2,50],\"1492\":[2,51],\"1493\":[3,103],\"1494\":[1,10],\"1495\":[null,null,1],\"1496\":[null,null,1],\"1497\":[1],\"1498\":[2],\"1499\":[2,5],\"1500\":[3,8],\"1501\":[3,35],\"1502\":[8,15],\"1503\":[6,7],\"1504\":[4,10],\"1505\":[5,40],\"1506\":[2],\"1507\":[1,13],\"1508\":[8],\"1509\":[2,7],\"1510\":[2,9],\"1511\":[2,21],\"1512\":[4],\"1513\":[2,12],\"1514\":[2,32],\"1515\":[2,2],\"1516\":[4],\"1517\":[1,17],\"1518\":[1,10],\"1519\":[1,8],\"1520\":[1,22],\"1521\":[2,44],\"1522\":[null,null,1],\"1523\":[null,null,1],\"1524\":[1],\"1525\":[2,70],\"1526\":[3,33],\"1527\":[5,78],\"1528\":[6,115],\"1529\":[1,10],\"1530\":[null,null,1],\"1531\":[null,null,1],\"1532\":[1],\"1533\":[2,120],\"1534\":[2,88],\"1535\":[2,112],\"1536\":[1,10],\"1537\":[null,null,1],\"1538\":[null,null,1],\"1539\":[1,33],\"1540\":[3,25],\"1541\":[3,51],\"1542\":[3,68],\"1543\":[2,32],\"1544\":[1,10],\"1545\":[null,null,1],\"1546\":[null,null,1],\"1547\":[1,32],\"1548\":[2,54],\"1549\":[3,75],\"1550\":[6,164],\"1551\":[4,107],\"1552\":[4,19],\"1553\":[1,10],\"1554\":[null,null,1],\"1555\":[null,null,1],\"1556\":[1,31],\"1557\":[3,50],\"1558\":[3,33],\"1559\":[3,37],\"1560\":[2,55],\"1561\":[3,77],\"1562\":[3,52],\"1563\":[2,96],\"1564\":[2,54],\"1565\":[1,10],\"1566\":[null,null,1],\"1567\":[null,null,1],\"1568\":[1,43],\"1569\":[2,32],\"1570\":[2,42],\"1571\":[2,124],\"1572\":[1,10],\"1573\":[null,null,1],\"1574\":[null,null,1],\"1575\":[1],\"1576\":[3],\"1577\":[3,43],\"1578\":[2,10],\"1579\":[3,23],\"1580\":[3,20],\"1581\":[5,27],\"1582\":[3,13],\"1583\":[3,53],\"1584\":[3,50],\"1585\":[3],\"1586\":[2,22],\"1587\":[3,9],\"1588\":[3,9],\"1589\":[3,9],\"1590\":[3,7],\"1591\":[3,15],\"1592\":[2,6],\"1593\":[3,7],\"1594\":[3,17],\"1595\":[3,20],\"1596\":[3,12],\"1597\":[3,12],\"1598\":[2,3],\"1599\":[3,8],\"1600\":[3,25],\"1601\":[3,36],\"1602\":[3,25],\"1603\":[3,15],\"1604\":[3,23],\"1605\":[2],\"1606\":[3,8],\"1607\":[3,18],\"1608\":[3,10],\"1609\":[3,30],\"1610\":[3,25],\"1611\":[3],\"1612\":[2,11],\"1613\":[3,22],\"1614\":[3,50],\"1615\":[3,23],\"1616\":[2,21],\"1617\":[3,13],\"1618\":[3,38],\"1619\":[3,9],\"1620\":[3,4],\"1621\":[3,12],\"1622\":[3,6],\"1623\":[3,10],\"1624\":[2],\"1625\":[3,6],\"1626\":[3,38],\"1627\":[3,6],\"1628\":[3,8],\"1629\":[3,9],\"1630\":[3,10],\"1631\":[3,15],\"1632\":[2,5],\"1633\":[3,6],\"1634\":[3,7],\"1635\":[3,6],\"1636\":[3,13],\"1637\":[2,48],\"1638\":[null,null,1],\"1639\":[null,null,1],\"1640\":[1],\"1641\":[2,48],\"1642\":[1],\"1643\":[1,7],\"1644\":[1,32],\"1645\":[1,25],\"1646\":[1,215],\"1647\":[4],\"1648\":[1,98],\"1649\":[3,81],\"1650\":[1,145],\"1651\":[3,15],\"1652\":[1],\"1653\":[1,80],\"1654\":[null,null,1],\"1655\":[null,null,1],\"1656\":[1],\"1657\":[1],\"1658\":[1,23],\"1659\":[1,76],\"1660\":[1,48],\"1661\":[1,23],\"1662\":[1],\"1663\":[1,13],\"1664\":[2,22],\"1665\":[1,16],\"1666\":[1,16],\"1667\":[1,11],\"1668\":[1,8],\"1669\":[1,18],\"1670\":[1,52],\"1671\":[1,54],\"1672\":[1],\"1673\":[null,null,1],\"1674\":[null,null,1],\"1675\":[1],\"1676\":[1,6],\"1677\":[2,43],\"1678\":[2,4],\"1679\":[2,7],\"1680\":[2,7],\"1681\":[2],\"1682\":[2,1],\"1683\":[2,3],\"1684\":[2,10],\"1685\":[2,2],\"1686\":[4,6],\"1687\":[2,6],\"1688\":[2,6],\"1689\":[3,21],\"1690\":[3,12],\"1691\":[3,13],\"1692\":[3,32],\"1693\":[2,3],\"1694\":[2],\"1695\":[2,15],\"1696\":[2,17],\"1697\":[2,10],\"1698\":[2,13],\"1699\":[2,20],\"1700\":[2],\"1701\":[2,3],\"1702\":[4,8],\"1703\":[6,6],\"1704\":[5,11],\"1705\":[6,34],\"1706\":[2,25],\"1707\":[2,99],\"1708\":[null,null,1],\"1709\":[null,null,1],\"1710\":[2],\"1711\":[2,4],\"1712\":[1,77],\"1713\":[1,49],\"1714\":[2],\"1715\":[2,27],\"1716\":[3,17],\"1717\":[2,18],\"1718\":[2,6],\"1719\":[4,19],\"1720\":[3,18],\"1721\":[3,7],\"1722\":[3,12],\"1723\":[2,24],\"1724\":[2,56],\"1725\":[2],\"1726\":[1,69],\"1727\":[3,59],\"1728\":[1,81],\"1729\":[2,69],\"1730\":[4,89],\"1731\":[3,18],\"1732\":[null,null,1],\"1733\":[null,null,2],\"1734\":[1],\"1735\":[1,23],\"1736\":[1,21],\"1737\":[4,81],\"1738\":[null,null,1],\"1739\":[null,null,1],\"1740\":[1,19],\"1741\":[null,null,1],\"1742\":[null,null,1],\"1743\":[1,22],\"1744\":[null,null,1],\"1745\":[null,null,1],\"1746\":[1],\"1747\":[1,55],\"1748\":[1,4],\"1749\":[1],\"1750\":[1,13],\"1751\":[1,13],\"1752\":[1,51],\"1753\":[1,55],\"1754\":[1,45],\"1755\":[1,70],\"1756\":[null,null,1],\"1757\":[null,null,1],\"1758\":[1,44],\"1759\":[null,null,1],\"1760\":[null,null,1],\"1761\":[1],\"1762\":[1,27],\"1763\":[1,8],\"1764\":[1,34],\"1765\":[1,19],\"1766\":[1,22],\"1767\":[2,16],\"1768\":[1],\"1769\":[1,24],\"1770\":[1,10],\"1771\":[1],\"1772\":[1,19],\"1773\":[1,16],\"1774\":[1,19],\"1775\":[null,null,1],\"1776\":[null,null,1],\"1777\":[1,29],\"1778\":[null,null,1],\"1779\":[null,null,1],\"1780\":[1,21],\"1781\":[null,null,1],\"1782\":[null,null,1],\"1783\":[1],\"1784\":[1,23],\"1785\":[1,11],\"1786\":[1],\"1787\":[1,11],\"1788\":[1,10],\"1789\":[1,61],\"1790\":[null,null,1],\"1791\":[null,null,1],\"1792\":[1],\"1793\":[1,13],\"1794\":[1,47],\"1795\":[1],\"1796\":[1,18],\"1797\":[1,16],\"1798\":[1,39],\"1799\":[null,null,1],\"1800\":[null,null,1],\"1801\":[1],\"1802\":[1,31],\"1803\":[1],\"1804\":[1,15],\"1805\":[1,13],\"1806\":[1,45],\"1807\":[null,null,1],\"1808\":[null,null,1],\"1809\":[1],\"1810\":[1,14],\"1811\":[1],\"1812\":[1,20],\"1813\":[1,18],\"1814\":[1,30],\"1815\":[null,null,1],\"1816\":[null,null,1],\"1817\":[1,33],\"1818\":[null,null,1],\"1819\":[null,null,1],\"1820\":[1,40],\"1821\":[null,null,1],\"1822\":[null,null,1],\"1823\":[1,41],\"1824\":[null,null,1],\"1825\":[null,null,1],\"1826\":[1,36],\"1827\":[null,null,1],\"1828\":[null,null,1],\"1829\":[1,43],\"1830\":[null,null,1],\"1831\":[null,null,1],\"1832\":[1,39],\"1833\":[null,null,1],\"1834\":[null,null,1],\"1835\":[1,18],\"1836\":[1],\"1837\":[1,18],\"1838\":[1,13],\"1839\":[1,89],\"1840\":[null,null,1],\"1841\":[null,null,1],\"1842\":[1],\"1843\":[1,21],\"1844\":[1],\"1845\":[4],\"1846\":[2,10],\"1847\":[2,18],\"1848\":[2,8],\"1849\":[4,14],\"1850\":[2,10],\"1851\":[2,9],\"1852\":[2,5],\"1853\":[1],\"1854\":[1,7],\"1855\":[1,15],\"1856\":[1,16],\"1857\":[1],\"1858\":[1,7],\"1859\":[1,5],\"1860\":[1,11],\"1861\":[3,9],\"1862\":[1],\"1863\":[3,15],\"1864\":[3,13],\"1865\":[3,10],\"1866\":[3,19],\"1867\":[3,4],\"1868\":[3,6],\"1869\":[1,41],\"1870\":[1],\"1871\":[1,14],\"1872\":[1,6],\"1873\":[1,26],\"1874\":[1,16],\"1875\":[1,21],\"1876\":[1,27],\"1877\":[1,5],\"1878\":[3,12],\"1879\":[3,20],\"1880\":[3,4],\"1881\":[1],\"1882\":[1,9],\"1883\":[1,7],\"1884\":[1,8],\"1885\":[3,6],\"1886\":[1,17],\"1887\":[1,14],\"1888\":[1,2],\"1889\":[1,31],\"1890\":[1,16],\"1891\":[null,null,1],\"1892\":[null,null,1],\"1893\":[1],\"1894\":[1],\"1895\":[1,12],\"1896\":[1,4],\"1897\":[1,3],\"1898\":[1,2],\"1899\":[1,15],\"1900\":[3,29],\"1901\":[1,17],\"1902\":[1,9],\"1903\":[1,5],\"1904\":[1,42],\"1905\":[1,39],\"1906\":[1,34],\"1907\":[1,20],\"1908\":[1],\"1909\":[1],\"1910\":[1],\"1911\":[1],\"1912\":[1],\"1913\":[1,3],\"1914\":[1,8],\"1915\":[1],\"1916\":[3],\"1917\":[1],\"1918\":[1],\"1919\":[1],\"1920\":[1],\"1921\":[1],\"1922\":[1],\"1923\":[1,14],\"1924\":[1],\"1925\":[1],\"1926\":[1,5],\"1927\":[1],\"1928\":[1,18],\"1929\":[1,8],\"1930\":[1,7],\"1931\":[1],\"1932\":[1],\"1933\":[1,10],\"1934\":[1],\"1935\":[1],\"1936\":[1,9],\"1937\":[1,21],\"1938\":[1,27],\"1939\":[1,31],\"1940\":[1,23],\"1941\":[1],\"1942\":[1],\"1943\":[1],\"1944\":[1],\"1945\":[1,3],\"1946\":[1],\"1947\":[1],\"1948\":[1,20],\"1949\":[1,25],\"1950\":[null,null,1],\"1951\":[null,null,1],\"1952\":[1],\"1953\":[1,5],\"1954\":[1,9],\"1955\":[1,20],\"1956\":[1,15],\"1957\":[1],\"1958\":[1,16],\"1959\":[1,24],\"1960\":[3],\"1961\":[1,23],\"1962\":[1,17],\"1963\":[null,null,1],\"1964\":[null,null,1],\"1965\":[1],\"1966\":[1,5],\"1967\":[1,4],\"1968\":[1,6],\"1969\":[1,8],\"1970\":[1],\"1971\":[1],\"1972\":[1,14],\"1973\":[1],\"1974\":[1,14],\"1975\":[1],\"1976\":[1,1],\"1977\":[1,7],\"1978\":[1,9],\"1979\":[1,5],\"1980\":[1,2],\"1981\":[2],\"1982\":[1,5],\"1983\":[1,4],\"1984\":[1,3],\"1985\":[1],\"1986\":[1,4],\"1987\":[1,8],\"1988\":[1,4],\"1989\":[1],\"1990\":[1],\"1991\":[1],\"1992\":[1,9],\"1993\":[1],\"1994\":[3,5],\"1995\":[1,8],\"1996\":[1,11],\"1997\":[3],\"1998\":[1,6],\"1999\":[1],\"2000\":[1],\"2001\":[1],\"2002\":[1],\"2003\":[1],\"2004\":[1,7],\"2005\":[1,9],\"2006\":[1,16],\"2007\":[1,8],\"2008\":[1,4],\"2009\":[1,4],\"2010\":[1,25],\"2011\":[1,35],\"2012\":[1],\"2013\":[1],\"2014\":[1],\"2015\":[1],\"2016\":[1,18],\"2017\":[1],\"2018\":[1],\"2019\":[1,11],\"2020\":[1,24],\"2021\":[1],\"2022\":[1],\"2023\":[1],\"2024\":[1],\"2025\":[1,28],\"2026\":[1],\"2027\":[1,5],\"2028\":[1,72],\"2029\":[3],\"2030\":[1],\"2031\":[1,26],\"2032\":[1,14],\"2033\":[1],\"2034\":[1,4],\"2035\":[1,2],\"2036\":[1],\"2037\":[1],\"2038\":[4],\"2039\":[3,22],\"2040\":[3,6],\"2041\":[1,3],\"2042\":[1],\"2043\":[1],\"2044\":[1,10],\"2045\":[1],\"2046\":[1,3],\"2047\":[1,9],\"2048\":[1],\"2049\":[1,12],\"2050\":[1,7],\"2051\":[1,20],\"2052\":[1,4],\"2053\":[1,17],\"2054\":[1,24],\"2055\":[1,16],\"2056\":[1,12],\"2057\":[1,10],\"2058\":[1],\"2059\":[3],\"2060\":[2],\"2061\":[1,21],\"2062\":[1],\"2063\":[1],\"2064\":[1],\"2065\":[1],\"2066\":[1],\"2067\":[1],\"2068\":[1],\"2069\":[1,10],\"2070\":[1],\"2071\":[1,11],\"2072\":[1,13],\"2073\":[1,8],\"2074\":[1,6],\"2075\":[1,7],\"2076\":[2,10],\"2077\":[1,69],\"2078\":[1,11],\"2079\":[1],\"2080\":[2,17],\"2081\":[2,7],\"2082\":[2],\"2083\":[2],\"2084\":[2],\"2085\":[2],\"2086\":[null,null,1],\"2087\":[null,null,1],\"2088\":[1],\"2089\":[1,19],\"2090\":[1],\"2091\":[1],\"2092\":[1,5],\"2093\":[1],\"2094\":[1],\"2095\":[1,9],\"2096\":[1],\"2097\":[null,null,1],\"2098\":[null,null,1],\"2099\":[1],\"2100\":[1,4],\"2101\":[1,4],\"2102\":[1,5],\"2103\":[1,5],\"2104\":[1],\"2105\":[1],\"2106\":[1,14],\"2107\":[1,4],\"2108\":[1,8],\"2109\":[1,16],\"2110\":[1],\"2111\":[1,34],\"2112\":[null,null,1],\"2113\":[null,null,1],\"2114\":[1],\"2115\":[1,12],\"2116\":[1],\"2117\":[3,12],\"2118\":[1,14],\"2119\":[2,13],\"2120\":[1],\"2121\":[1,14],\"2122\":[1],\"2123\":[1],\"2124\":[1],\"2125\":[1,9],\"2126\":[1,2],\"2127\":[1,4],\"2128\":[1,5],\"2129\":[1,9],\"2130\":[1],\"2131\":[1,7],\"2132\":[1,39],\"2133\":[1,40],\"2134\":[null,null,1],\"2135\":[null,null,1],\"2136\":[1],\"2137\":[1],\"2138\":[1],\"2139\":[1],\"2140\":[1],\"2141\":[1,20],\"2142\":[1,14],\"2143\":[1],\"2144\":[3],\"2145\":[3],\"2146\":[3],\"2147\":[3],\"2148\":[1],\"2149\":[1],\"2150\":[1,15],\"2151\":[1,9],\"2152\":[1,3],\"2153\":[1],\"2154\":[1,8],\"2155\":[1],\"2156\":[1,7],\"2157\":[1],\"2158\":[1,6],\"2159\":[1],\"2160\":[1,9],\"2161\":[1,9],\"2162\":[1,17],\"2163\":[1],\"2164\":[1],\"2165\":[1],\"2166\":[1],\"2167\":[1],\"2168\":[1],\"2169\":[1],\"2170\":[1,22],\"2171\":[1,6],\"2172\":[1,11],\"2173\":[null,null,1],\"2174\":[null,null,1],\"2175\":[1],\"2176\":[1,44],\"2177\":[1,32],\"2178\":[1,17],\"2179\":[1,77],\"2180\":[1,31],\"2181\":[1],\"2182\":[1],\"2183\":[1,4],\"2184\":[1,7],\"2185\":[1,3],\"2186\":[1,7],\"2187\":[1,13],\"2188\":[1,2],\"2189\":[1,16],\"2190\":[1,13],\"2191\":[1],\"2192\":[1,6],\"2193\":[1,6],\"2194\":[1,3],\"2195\":[1,14],\"2196\":[null,null,1],\"2197\":[null,null,1],\"2198\":[1],\"2199\":[1,11],\"2200\":[1,3],\"2201\":[1,18],\"2202\":[1],\"2203\":[1,12],\"2204\":[1,4],\"2205\":[1,9],\"2206\":[1],\"2207\":[1,6],\"2208\":[1,27],\"2209\":[2],\"2210\":[1,22],\"2211\":[1,9],\"2212\":[1,33],\"2213\":[2,29],\"2214\":[1,42],\"2215\":[2,16],\"2216\":[1],\"2217\":[1,7],\"2218\":[1,17],\"2219\":[1],\"2220\":[1,19],\"2221\":[null,null,1],\"2222\":[null,null,1],\"2223\":[1],\"2224\":[1],\"2225\":[1,11],\"2226\":[1,9],\"2227\":[1,4],\"2228\":[1,6],\"2229\":[1,24],\"2230\":[1,4],\"2231\":[1,3],\"2232\":[1,25],\"2233\":[1],\"2234\":[1,4],\"2235\":[1,4],\"2236\":[1],\"2237\":[1],\"2238\":[1],\"2239\":[1,4],\"2240\":[1,15],\"2241\":[1,7],\"2242\":[1],\"2243\":[1],\"2244\":[1,7],\"2245\":[1,3],\"2246\":[1,15],\"2247\":[1],\"2248\":[1],\"2249\":[1],\"2250\":[1,7],\"2251\":[1,6],\"2252\":[1,4],\"2253\":[1,3],\"2254\":[1],\"2255\":[1,14],\"2256\":[1,7],\"2257\":[1],\"2258\":[1,17],\"2259\":[1,4],\"2260\":[1,19],\"2261\":[1],\"2262\":[3],\"2263\":[1],\"2264\":[1],\"2265\":[1,10],\"2266\":[1,10],\"2267\":[1,6],\"2268\":[null,null,1],\"2269\":[null,null,1],\"2270\":[1],\"2271\":[null,null,1],\"2272\":[null,null,1],\"2273\":[1],\"2274\":[null,null,1],\"2275\":[null,null,1],\"2276\":[1],\"2277\":[1,14],\"2278\":[1,27],\"2279\":[1],\"2280\":[2,4],\"2281\":[1],\"2282\":[3,16],\"2283\":[3,9],\"2284\":[3,9],\"2285\":[3,11],\"2286\":[3,27],\"2287\":[3,4],\"2288\":[3,17],\"2289\":[3,4],\"2290\":[3,9],\"2291\":[3,7],\"2292\":[3,5],\"2293\":[3,6],\"2294\":[3,5],\"2295\":[1],\"2296\":[7,17],\"2297\":[7,6],\"2298\":[5,2],\"2299\":[3,2],\"2300\":[3,3],\"2301\":[5,5],\"2302\":[3,3],\"2303\":[3,9],\"2304\":[3,9],\"2305\":[3,2],\"2306\":[3,2],\"2307\":[3,5],\"2308\":[5,3],\"2309\":[3,3],\"2310\":[5,3],\"2311\":[5,12],\"2312\":[3,4],\"2313\":[5,3],\"2314\":[5,10],\"2315\":[5,10],\"2316\":[5,10],\"2317\":[7,8],\"2318\":[5,3],\"2319\":[6,4],\"2320\":[5,5],\"2321\":[3,6],\"2322\":[3,4],\"2323\":[7,8],\"2324\":[null,null,1],\"2325\":[null,null,1],\"2326\":[1],\"2327\":[1,4],\"2328\":[1],\"2329\":[2,3],\"2330\":[1],\"2331\":[3,8],\"2332\":[1],\"2333\":[6,13],\"2334\":[6,13],\"2335\":[5,7],\"2336\":[5,8],\"2337\":[3,2],\"2338\":[5,2],\"2339\":[3,2],\"2340\":[5,9],\"2341\":[6,14],\"2342\":[6,13],\"2343\":[7,4],\"2344\":[3,2],\"2345\":[5,2],\"2346\":[3,2],\"2347\":[5,2],\"2348\":[null,null,1],\"2349\":[null,null,1],\"2350\":[3],\"2351\":[1],\"2352\":[null,null,1],\"2353\":[null,null,1],\"2354\":[3],\"2355\":[1],\"2356\":[null,null,1],\"2357\":[null,null,1],\"2358\":[3],\"2359\":[1,22],\"2360\":[null,null,1],\"2361\":[null,null,1],\"2362\":[3],\"2363\":[1],\"2364\":[null,null,1],\"2365\":[null,null,1],\"2366\":[3],\"2367\":[1],\"2368\":[null,null,1],\"2369\":[null,null,1],\"2370\":[3],\"2371\":[1,17],\"2372\":[null,null,1],\"2373\":[null,null,1],\"2374\":[3],\"2375\":[1,18],\"2376\":[null,null,1],\"2377\":[null,null,1],\"2378\":[3],\"2379\":[1,19],\"2380\":[null,null,1],\"2381\":[null,null,1],\"2382\":[3],\"2383\":[1,20],\"2384\":[null,null,1],\"2385\":[null,null,1],\"2386\":[3],\"2387\":[1,19],\"2388\":[null,null,1],\"2389\":[null,null,1],\"2390\":[3],\"2391\":[1,18],\"2392\":[null,null,1],\"2393\":[null,null,1],\"2394\":[3],\"2395\":[1,17],\"2396\":[null,null,1],\"2397\":[null,null,1],\"2398\":[3],\"2399\":[1,18],\"2400\":[null,null,1],\"2401\":[null,null,1],\"2402\":[3],\"2403\":[1,34],\"2404\":[null,null,1],\"2405\":[null,null,1],\"2406\":[3],\"2407\":[1,36],\"2408\":[null,null,1],\"2409\":[null,null,1],\"2410\":[3],\"2411\":[1,26],\"2412\":[null,null,1],\"2413\":[null,null,1],\"2414\":[3],\"2415\":[1,4],\"2416\":[1],\"2417\":[2,2],\"2418\":[1,2],\"2419\":[3,2],\"2420\":[3,2],\"2421\":[1,2],\"2422\":[5,3],\"2423\":[3,2],\"2424\":[3,11],\"2425\":[5,9],\"2426\":[5,9],\"2427\":[null,null,1],\"2428\":[null,null,1],\"2429\":[3],\"2430\":[1,18],\"2431\":[null,null,1],\"2432\":[null,null,1],\"2433\":[3],\"2434\":[1,16],\"2435\":[null,null,1],\"2436\":[null,null,1],\"2437\":[3],\"2438\":[1,46],\"2439\":[null,null,1],\"2440\":[null,null,1],\"2441\":[3],\"2442\":[1,22],\"2443\":[null,null,1],\"2444\":[null,null,1],\"2445\":[3],\"2446\":[1,30],\"2447\":[null,null,1],\"2448\":[null,null,1],\"2449\":[3],\"2450\":[1,17],\"2451\":[null,null,1],\"2452\":[null,null,1],\"2453\":[1],\"2454\":[1,8],\"2455\":[1,36],\"2456\":[1,3],\"2457\":[1,3],\"2458\":[null,null,1],\"2459\":[null,null,1],\"2460\":[1],\"2461\":[1,10],\"2462\":[1,73],\"2463\":[1],\"2464\":[2,5],\"2465\":[2,5],\"2466\":[2,5],\"2467\":[1],\"2468\":[3,10],\"2469\":[3,5],\"2470\":[3,13],\"2471\":[3,9],\"2472\":[1],\"2473\":[7,16],\"2474\":[5,5],\"2475\":[5,6],\"2476\":[4,9],\"2477\":[5,13],\"2478\":[5,5],\"2479\":[5,5],\"2480\":[5,5],\"2481\":[null,null,1],\"2482\":[null,null,1],\"2483\":[1],\"2484\":[1,4],\"2485\":[null,null,1],\"2486\":[null,null,1],\"2487\":[1],\"2488\":[1,5],\"2489\":[null,null,1],\"2490\":[null,null,1],\"2491\":[1],\"2492\":[1,4],\"2493\":[null,null,1],\"2494\":[null,null,1],\"2495\":[1],\"2496\":[2,6],\"2497\":[null,null,1],\"2498\":[null,null,1],\"2499\":[1],\"2500\":[null,null,1],\"2501\":[null,null,1],\"2502\":[1],\"2503\":[null,null,1],\"2504\":[null,null,1],\"2505\":[3],\"2506\":[null,null,1],\"2507\":[null,null,1],\"2508\":[3],\"2509\":[1],\"2510\":[2,11],\"2511\":[1,1],\"2512\":[3,4],\"2513\":[3,5],\"2514\":[3,3],\"2515\":[3,2],\"2516\":[3,2],\"2517\":[1,2],\"2518\":[3,2],\"2519\":[7,2],\"2520\":[4,7],\"2521\":[null,null,1],\"2522\":[null,null,1],\"2523\":[3],\"2524\":[1],\"2525\":[null,null,1],\"2526\":[null,null,1],\"2527\":[3],\"2528\":[1,14],\"2529\":[1],\"2530\":[9,16],\"2531\":[1,6],\"2532\":[3,2],\"2533\":[3,7],\"2534\":[3,4],\"2535\":[3,2],\"2536\":[3,10],\"2537\":[3,2],\"2538\":[3,2],\"2539\":[3,3],\"2540\":[3,3],\"2541\":[1,2],\"2542\":[10,20],\"2543\":[3,3],\"2544\":[3,3],\"2545\":[4,13],\"2546\":[null,null,1],\"2547\":[null,null,1],\"2548\":[3],\"2549\":[1],\"2550\":[1],\"2551\":[2],\"2552\":[1],\"2553\":[3,2],\"2554\":[3,3],\"2555\":[3,5],\"2556\":[3,5],\"2557\":[1],\"2558\":[5,3],\"2559\":[null,null,1],\"2560\":[null,null,1],\"2561\":[3],\"2562\":[1,41],\"2563\":[null,null,1],\"2564\":[null,null,1],\"2565\":[3],\"2566\":[1,14],\"2567\":[1],\"2568\":[7,12],\"2569\":[1,7],\"2570\":[3,6],\"2571\":[3,7],\"2572\":[3,7],\"2573\":[3,5],\"2574\":[3,5],\"2575\":[3,5],\"2576\":[3,4],\"2577\":[3,11],\"2578\":[3,10],\"2579\":[3,3],\"2580\":[1,2],\"2581\":[3,3],\"2582\":[3,5],\"2583\":[3,8],\"2584\":[3,8],\"2585\":[3,8],\"2586\":[5,8],\"2587\":[10,12],\"2588\":[3,3],\"2589\":[4,13],\"2590\":[null,null,1],\"2591\":[null,null,1],\"2592\":[3],\"2593\":[1,13],\"2594\":[null,null,1],\"2595\":[null,null,1],\"2596\":[1],\"2597\":[1,8],\"2598\":[1],\"2599\":[2,7],\"2600\":[1,1],\"2601\":[3,18],\"2602\":[3,10],\"2603\":[3,7],\"2604\":[3,5],\"2605\":[3,2],\"2606\":[3,8],\"2607\":[3,2],\"2608\":[3,2],\"2609\":[1,1],\"2610\":[null,null,1],\"2611\":[null,null,1],\"2612\":[3],\"2613\":[1,10],\"2614\":[null,null,1],\"2615\":[null,null,1],\"2616\":[3],\"2617\":[1,4],\"2618\":[1],\"2619\":[2,7],\"2620\":[1,2],\"2621\":[1,3],\"2622\":[null,null,1],\"2623\":[null,null,1],\"2624\":[3],\"2625\":[1,1],\"2626\":[null,null,1],\"2627\":[null,null,1],\"2628\":[3],\"2629\":[1,5],\"2630\":[null,null,1],\"2631\":[null,null,1],\"2632\":[3],\"2633\":[1,9],\"2634\":[1],\"2635\":[2,2],\"2636\":[1],\"2637\":[3,5],\"2638\":[3,9],\"2639\":[3,5],\"2640\":[3,4],\"2641\":[3,5],\"2642\":[3,5],\"2643\":[3,10],\"2644\":[3,5],\"2645\":[3,4],\"2646\":[3,6],\"2647\":[3,14],\"2648\":[3,4],\"2649\":[3,5],\"2650\":[3,12],\"2651\":[3,4],\"2652\":[3,4],\"2653\":[3,7],\"2654\":[3,3],\"2655\":[3,2],\"2656\":[3,5],\"2657\":[3,3],\"2658\":[3,5],\"2659\":[3,3],\"2660\":[3,2],\"2661\":[3,6],\"2662\":[3,6],\"2663\":[3,5],\"2664\":[3,2],\"2665\":[3,4],\"2666\":[3,2],\"2667\":[3,13],\"2668\":[3,7],\"2669\":[3,3],\"2670\":[3,3],\"2671\":[3,8],\"2672\":[3,10],\"2673\":[3,4],\"2674\":[3,15],\"2675\":[3,11],\"2676\":[3,4],\"2677\":[3,8],\"2678\":[3,5],\"2679\":[3,4],\"2680\":[3,5],\"2681\":[3,3],\"2682\":[3,3],\"2683\":[3,5],\"2684\":[1],\"2685\":[3,2],\"2686\":[4,2],\"2687\":[3,4],\"2688\":[7,11],\"2689\":[3,5],\"2690\":[5,4],\"2691\":[4,13],\"2692\":[null,null,1],\"2693\":[null,null,1],\"2694\":[3],\"2695\":[1,18],\"2696\":[1],\"2697\":[2,15],\"2698\":[1,1],\"2699\":[3,18],\"2700\":[3,7],\"2701\":[3,5],\"2702\":[3,5],\"2703\":[3,10],\"2704\":[3,7],\"2705\":[3,5],\"2706\":[3,3],\"2707\":[3,3],\"2708\":[3,10],\"2709\":[3,3],\"2710\":[3,31],\"2711\":[3,7],\"2712\":[3,5],\"2713\":[1,1],\"2714\":[null,null,1],\"2715\":[null,null,1],\"2716\":[3],\"2717\":[1,30],\"2718\":[null,null,1],\"2719\":[null,null,1],\"2720\":[3],\"2721\":[1,2],\"2722\":[null,null,1],\"2723\":[null,null,1],\"2724\":[3],\"2725\":[1,5],\"2726\":[null,null,1],\"2727\":[null,null,1],\"2728\":[3],\"2729\":[1,2],\"2730\":[null,null,1],\"2731\":[null,null,1],\"2732\":[3],\"2733\":[1,2],\"2734\":[null,null,1],\"2735\":[null,null,1],\"2736\":[3],\"2737\":[1,38],\"2738\":[null,null,1],\"2739\":[null,null,1],\"2740\":[3],\"2741\":[1,80],\"2742\":[1,48],\"2743\":[4,32],\"2744\":[4,109],\"2745\":[1],\"2746\":[2,9],\"2747\":[1,3],\"2748\":[3,6],\"2749\":[3,12],\"2750\":[3,11],\"2751\":[3,21],\"2752\":[3,6],\"2753\":[3,11],\"2754\":[3,33],\"2755\":[3,6],\"2756\":[3,14],\"2757\":[3,7],\"2758\":[3,8],\"2759\":[3,3],\"2760\":[3,21],\"2761\":[3,18],\"2762\":[3,3],\"2763\":[3,11],\"2764\":[3,7],\"2765\":[3,8],\"2766\":[1,2],\"2767\":[4,12],\"2768\":[null,null,1],\"2769\":[null,null,1],\"2770\":[3],\"2771\":[1,1],\"2772\":[null,null,1],\"2773\":[null,null,1],\"2774\":[3],\"2775\":[1,3],\"2776\":[1],\"2777\":[2,7],\"2778\":[1,1],\"2779\":[3,11],\"2780\":[3,3],\"2781\":[3,4],\"2782\":[1,1],\"2783\":[null,null,1],\"2784\":[null,null,1],\"2785\":[1],\"2786\":[1],\"2787\":[1],\"2788\":[4,71],\"2789\":[1],\"2790\":[3,2],\"2791\":[3,3],\"2792\":[3,3],\"2793\":[3,3],\"2794\":[3,10],\"2795\":[3,84],\"2796\":[3,7],\"2797\":[3,11],\"2798\":[3,17],\"2799\":[3,10],\"2800\":[3,30],\"2801\":[3,3],\"2802\":[3,5],\"2803\":[3,3],\"2804\":[3,2],\"2805\":[3,35],\"2806\":[3,11],\"2807\":[3,3],\"2808\":[3,3],\"2809\":[3,2],\"2810\":[3,1],\"2811\":[1],\"2812\":[7,4],\"2813\":[3,6],\"2814\":[3,6],\"2815\":[3,6],\"2816\":[7,3],\"2817\":[9,4],\"2818\":[10,4],\"2819\":[3,1],\"2820\":[3,7],\"2821\":[3,7],\"2822\":[3,2],\"2823\":[4,2],\"2824\":[3,1],\"2825\":[3,2],\"2826\":[3,7],\"2827\":[3,7],\"2828\":[3,4],\"2829\":[3,1],\"2830\":[3,4],\"2831\":[3,1],\"2832\":[4,4],\"2833\":[5,6],\"2834\":[3,2],\"2835\":[14,48],\"2836\":[7,16],\"2837\":[3,7],\"2838\":[5,9],\"2839\":[5,5],\"2840\":[7,1],\"2841\":[5,2],\"2842\":[8,45],\"2843\":[8,12],\"2844\":[5,4],\"2845\":[8,9],\"2846\":[8,8],\"2847\":[null,null,1],\"2848\":[null,null,1],\"2849\":[1],\"2850\":[1,3],\"2851\":[1],\"2852\":[2,7],\"2853\":[2,6],\"2854\":[1,2],\"2855\":[3,6],\"2856\":[3,14],\"2857\":[3,3],\"2858\":[1,3],\"2859\":[5,5],\"2860\":[4,15],\"2861\":[null,null,1],\"2862\":[null,null,1],\"2863\":[3],\"2864\":[1,15],\"2865\":[null,null,1],\"2866\":[null,null,1],\"2867\":[3],\"2868\":[1,20],\"2869\":[null,null,1],\"2870\":[null,null,1],\"2871\":[3],\"2872\":[1,34],\"2873\":[null,null,1],\"2874\":[null,null,1],\"2875\":[3],\"2876\":[1,17],\"2877\":[null,null,1],\"2878\":[null,null,1],\"2879\":[3],\"2880\":[1,11],\"2881\":[null,null,1],\"2882\":[null,null,1],\"2883\":[3],\"2884\":[1,36],\"2885\":[null,null,1],\"2886\":[null,null,1],\"2887\":[1,3],\"2888\":[1],\"2889\":[1],\"2890\":[1],\"2891\":[1],\"2892\":[1],\"2893\":[1],\"2894\":[1],\"2895\":[1],\"2896\":[1],\"2897\":[1]},\"averageFieldLength\":[2.100026681558008,27.702835032312905,0.4271291962158017],\"storedFields\":{\"0\":{\"h\":\"博客主页\"},\"1\":{\"h\":\"vue3+vite基础模板\"},\"2\":{\"h\":\"一、通过脚手架初始化项目\"},\"3\":{\"h\":\"1.下载项目\",\"t\":[\"npm create vue@3\"]},\"4\":{\"h\":\"2.安装依赖\",\"t\":[\"pnpm install\"]},\"5\":{\"h\":\"3.运行项目\",\"t\":[\"npm run dev\"]},\"6\":{\"h\":\"二、初始化git\"},\"7\":{\"h\":\"1.初始化 git 本地仓库\",\"t\":[\"git init\"]},\"8\":{\"h\":\"2.添加所有文件\",\"t\":[\"git add .\"]},\"9\":{\"h\":\"3.提交文件\",\"t\":[\"git commit -m '你的提交信息'\"]},\"10\":{\"h\":\"4.修改分支名称\",\"t\":[\"git branch -M main\"]},\"11\":{\"h\":\"5.链接到 github\",\"t\":[\"git remote add origin https://github.com/xxxxxxxx/vue3-base.git\"]},\"12\":{\"h\":\"6.推送到 github\",\"t\":[\"git push -u origin main\"]},\"13\":{\"h\":\"三、设置 commit 规范\"},\"14\":{\"h\":\"1.安装依赖\",\"t\":[\"npm install -g commitizen pnpm add cz-customizable -D\"]},\"15\":{\"h\":\"2.修改 package.json\",\"t\":[\"在package.json中进行新增\",\"\\\"config\\\": { \\\"commitizen\\\": { \\\"path\\\": \\\"node_modules/cz-customizable\\\" } }\",\"删除\\\"type\\\": \\\"module\\\"\"]},\"16\":{\"h\":\"3.创建配置文件\",\"t\":[\"在根目录下新建.cz-config.js文件并写入配置 之后就可以用git cz来代替git commit\",\"module.exports = { // 可选类型 types: [ { value: 'feat', name: 'feat: 新功能' }, { value: 'fix', name: 'fix: 修复' }, { value: 'docs', name: 'docs: 文档变更' }, { value: 'style', name: 'style: 代码格式(不影响代码运行的变动)' }, { value: 'refactor', name: 'refactor: 重构(既不是增加feature，也不是修复bug)', }, { value: 'perf', name: 'perf: 性能优化' }, { value: 'test', name: 'test: 增加测试' }, { value: 'chore', name: 'chore: 构建过程或辅助工具的变动' }, { value: 'revert', name: 'revert: 回退' }, { value: 'build', name: 'build: 打包' }, ], // 消息步骤 messages: { type: '请选择提交类型:', customScope: '请输入修改范围(可选):', subject: '请简要描述提交(必填):', body: '请输入详细描述(可选):', footer: '请输入要关闭的issue(可选):', confirmCommit: '确认使用以上信息提交？(y/n/e/h)', }, // 跳过问题 skipQuestions: ['body', 'footer'], // subject文字长度默认是72 subjectLimit: 72, }\"]},\"17\":{\"h\":\"4.测试\",\"t\":[\"现在就可以用git cz来代替git commit\"]},\"18\":{\"h\":\"四、代码格式化\"},\"19\":{\"h\":\"1.eslint\",\"t\":[\"修改.eslintrc.cjs文件\",\"require('@rushstack/eslint-patch/modern-module-resolution') module.exports = { root: true, env: { node: true }, extends: [ 'plugin:vue/vue3-essential', 'eslint:recommended', '@vue/eslint-config-typescript', '@vue/eslint-config-prettier/skip-formatting' ], parserOptions: { ecmaVersion: 'latest' }, rules: { 'vue/multi-word-component-names': 'off', // 文件命名必须改成驼峰规范 // eslint (http://eslint.cn/docs/rules) 'no-var': 'error', // 要求使用 let 或 const 而不是 var 'no-multiple-empty-lines': ['error', { max: 1 }], // 不允许多个空行 'no-use-before-define': 'off', // 禁止在 函数/类/变量 定义之前使用它们 'no-irregular-whitespace': 'off', // 禁止不规则的空白 // vue (https://eslint.vuejs.org/rules) 'vue/attributes-order': 'off', // vue api使用顺序，强制执行属性顺序 'vue/one-component-per-file': 'off', // 强制每个组件都应该在自己的文件中 'vue/html-closing-bracket-newline': 'off', // 在标签的右括号之前要求或禁止换行 'vue/max-attributes-per-line': 'off', // 强制每行的最大属性数 'vue/multiline-html-element-content-newline': 'off', // 在多行元素的内容之前和之后需要换行符 'vue/singleline-html-element-content-newline': 'off', // 在单行元素的内容之前和之后需要换行符 'vue/require-default-prop': 'off', // 此规则要求为每个 prop 为必填时，必须提供默认值 eqeqeq: 'error' // 要求使用 === 和 !== } }\",\"创建.eslintignore文件\",\"dist node_modules\"]},\"20\":{\"h\":\"2.prettier\",\"t\":[\"修改 .prettierrc.json 为 .prettierrc.js\",\"// @see: https://www.prettier.cn module.exports = { // 超过最大值换行 printWidth: 130, // 缩进字节数 tabWidth: 2, // 使用制表符而不是空格缩进行 useTabs: true, // 结尾不用分号(true有，false没有) semi: false, // 使用单引号(true单双引号，false双引号) singleQuote: false, // 更改引用对象属性的时间 可选值\\\"<as-needed|consistent|preserve>\\\" quoteProps: \\\"as-needed\\\", // 在对象，数组括号与文字之间加空格 \\\"{ foo: bar }\\\" bracketSpacing: true, // 多行时尽可能打印尾随逗号。（例如，单行数组永远不会出现逗号结尾。） 可选值\\\"<none|es5|all>\\\"，默认none trailingComma: \\\"none\\\", // 在JSX中使用单引号而不是双引号 jsxSingleQuote: false, // (x) => {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号 ,always：不省略括号 arrowParens: \\\"avoid\\\", // 如果文件顶部已经有一个 doclock，这个选项将新建一行注释，并打上@format标记。 insertPragma: false, // 指定要使用的解析器，不需要写文件开头的 @prettier requirePragma: false, // 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行 proseWrap: \\\"preserve\\\", // 在html中空格是否是敏感的 \\\"css\\\" - 遵守CSS显示属性的默认值， \\\"strict\\\" - 空格被认为是敏感的 ，\\\"ignore\\\" - 空格被认为是不敏感的 htmlWhitespaceSensitivity: \\\"css\\\", // 换行符使用 lf 结尾是 可选值\\\"<auto|lf|crlf|cr>\\\" endOfLine: \\\"auto\\\", // 这两个选项可用于格式化以给定字符偏移量（分别包括和不包括）开始和结束的代码 rangeStart: 0, rangeEnd: Infinity, // Vue文件脚本和样式标签缩进 vueIndentScriptAndStyle: false }\",\"新建 .prettierignore\",\"/dist/* .local .output.js /node_modules/** **/*.svg **/*.sh /public/*\"]},\"21\":{\"h\":\"3.stylelint\",\"t\":[\"安装依赖\",\"pnpm install stylelint@13.13.1 stylelint-config-prettier@9.0.3 stylelint-config-standard@22.0.0 stylelint-order@4.1.0 stylelint-scss@3.20.1 -D\",\"新建.stylelintrc.cjs文件\",\"module.exports = { root: true, plugins: [\\\"stylelint-order\\\", \\\"stylelint-scss\\\"], extends: [\\\"stylelint-config-standard\\\", \\\"stylelint-config-prettier\\\"], rules: { \\\"selector-pseudo-class-no-unknown\\\": [ true, { ignorePseudoClasses: [\\\"global\\\", \\\"v-deep\\\", \\\"deep\\\"] } ], \\\"selector-pseudo-element-no-unknown\\\": [ true, { ignorePseudoElements: [\\\"v-deep\\\", \\\"deep\\\"] } ], \\\"at-rule-no-unknown\\\": [ true, { ignoreAtRules: [\\\"function\\\", \\\"if\\\", \\\"each\\\", \\\"include\\\", \\\"mixin\\\", \\\"for\\\"] } ], \\\"no-empty-source\\\": null, \\\"named-grid-areas-no-invalid\\\": null, \\\"unicode-bom\\\": \\\"never\\\", \\\"no-descending-specificity\\\": null, \\\"font-family-no-missing-generic-family-keyword\\\": null, \\\"declaration-colon-space-after\\\": \\\"always-single-line\\\", \\\"declaration-colon-space-before\\\": \\\"never\\\", \\\"declaration-block-trailing-semicolon\\\": [\\\"always\\\", { ignore: [\\\"single-declaration\\\"] }], \\\"rule-empty-line-before\\\": [ \\\"always\\\", { ignore: [\\\"after-comment\\\", \\\"first-nested\\\"] } ], \\\"unit-no-unknown\\\": [true, { ignoreUnits: [\\\"rpx\\\"] }], \\\"order/order\\\": [ [ \\\"dollar-variables\\\", \\\"custom-properties\\\", \\\"at-rules\\\", \\\"declarations\\\", { type: \\\"at-rule\\\", name: \\\"supports\\\" }, { type: \\\"at-rule\\\", name: \\\"media\\\" }, \\\"rules\\\" ], { severity: \\\"warning\\\" } ], // Specify the alphabetical order of the attributes in the declaration block \\\"order/properties-order\\\": [ \\\"position\\\", \\\"top\\\", \\\"right\\\", \\\"bottom\\\", \\\"left\\\", \\\"z-index\\\", \\\"display\\\", \\\"float\\\", \\\"width\\\", \\\"height\\\", \\\"max-width\\\", \\\"max-height\\\", \\\"min-width\\\", \\\"min-height\\\", \\\"padding\\\", \\\"padding-top\\\", \\\"padding-right\\\", \\\"padding-bottom\\\", \\\"padding-left\\\", \\\"margin\\\", \\\"margin-top\\\", \\\"margin-right\\\", \\\"margin-bottom\\\", \\\"margin-left\\\", \\\"margin-collapse\\\", \\\"margin-top-collapse\\\", \\\"margin-right-collapse\\\", \\\"margin-bottom-collapse\\\", \\\"margin-left-collapse\\\", \\\"overflow\\\", \\\"overflow-x\\\", \\\"overflow-y\\\", \\\"clip\\\", \\\"clear\\\", \\\"font\\\", \\\"font-family\\\", \\\"font-size\\\", \\\"font-smoothing\\\", \\\"osx-font-smoothing\\\", \\\"font-style\\\", \\\"font-weight\\\", \\\"hyphens\\\", \\\"src\\\", \\\"line-height\\\", \\\"letter-spacing\\\", \\\"word-spacing\\\", \\\"color\\\", \\\"text-align\\\", \\\"text-decoration\\\", \\\"text-indent\\\", \\\"text-overflow\\\", \\\"text-rendering\\\", \\\"text-size-adjust\\\", \\\"text-shadow\\\", \\\"text-transform\\\", \\\"word-break\\\", \\\"word-wrap\\\", \\\"white-space\\\", \\\"vertical-align\\\", \\\"list-style\\\", \\\"list-style-type\\\", \\\"list-style-position\\\", \\\"list-style-image\\\", \\\"pointer-events\\\", \\\"cursor\\\", \\\"background\\\", \\\"background-attachment\\\", \\\"background-color\\\", \\\"background-image\\\", \\\"background-position\\\", \\\"background-repeat\\\", \\\"background-size\\\", \\\"border\\\", \\\"border-collapse\\\", \\\"border-top\\\", \\\"border-right\\\", \\\"border-bottom\\\", \\\"border-left\\\", \\\"border-color\\\", \\\"border-image\\\", \\\"border-top-color\\\", \\\"border-right-color\\\", \\\"border-bottom-color\\\", \\\"border-left-color\\\", \\\"border-spacing\\\", \\\"border-style\\\", \\\"border-top-style\\\", \\\"border-right-style\\\", \\\"border-bottom-style\\\", \\\"border-left-style\\\", \\\"border-width\\\", \\\"border-top-width\\\", \\\"border-right-width\\\", \\\"border-bottom-width\\\", \\\"border-left-width\\\", \\\"border-radius\\\", \\\"border-top-right-radius\\\", \\\"border-bottom-right-radius\\\", \\\"border-bottom-left-radius\\\", \\\"border-top-left-radius\\\", \\\"border-radius-topright\\\", \\\"border-radius-bottomright\\\", \\\"border-radius-bottomleft\\\", \\\"border-radius-topleft\\\", \\\"content\\\", \\\"quotes\\\", \\\"outline\\\", \\\"outline-offset\\\", \\\"opacity\\\", \\\"filter\\\", \\\"visibility\\\", \\\"size\\\", \\\"zoom\\\", \\\"transform\\\", \\\"box-align\\\", \\\"box-flex\\\", \\\"box-orient\\\", \\\"box-pack\\\", \\\"box-shadow\\\", \\\"box-sizing\\\", \\\"table-layout\\\", \\\"animation\\\", \\\"animation-delay\\\", \\\"animation-duration\\\", \\\"animation-iteration-count\\\", \\\"animation-name\\\", \\\"animation-play-state\\\", \\\"animation-timing-function\\\", \\\"animation-fill-mode\\\", \\\"transition\\\", \\\"transition-delay\\\", \\\"transition-duration\\\", \\\"transition-property\\\", \\\"transition-timing-function\\\", \\\"background-clip\\\", \\\"backface-visibility\\\", \\\"resize\\\", \\\"appearance\\\", \\\"user-select\\\", \\\"interpolation-mode\\\", \\\"direction\\\", \\\"marks\\\", \\\"page\\\", \\\"set-link-source\\\", \\\"unicode-bidi\\\", \\\"speak\\\" ] }, ignoreFiles: [\\\"**/*.js\\\", \\\"**/*.jsx\\\", \\\"**/*.tsx\\\", \\\"**/*.ts\\\"] }\",\"新建.stylelintignore文件\",\"/dist/* /public/* public/* node_modules/*\"]},\"22\":{\"h\":\"4.修改package.json\",\"t\":[\"新增命令\",\"\\\"lint:eslint\\\": \\\"eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore\\\", \\\"lint:prettier\\\": \\\"prettier --write \\\\\\\"src/**/*.{js,ts,json,tsx,css,less,scss,vue,html,md}\\\\\\\"\\\", \\\"lint:stylelint\\\": \\\"stylelint --fix \\\\\\\"**/*.{vue,less,postcss,css,scss}\\\\\\\" --cache --cache-location node_modules/.cache/stylelint/\\\",\"]},\"23\":{\"h\":\"5.统一编辑器配置\",\"t\":[\"根目录下新增.editorconfig文件\",\"# @see: http://editorconfig.org root = true [*] # 表示所有文件适用 charset = utf-8 # 设置文件字符集为 utf-8 end_of_line = lf # 控制换行类型(lf | cr | crlf) insert_final_newline = true # 始终在文件末尾插入一个新行 indent_style = space # 缩进风格（tab | space） indent_size = 2 # 缩进大小 max_line_length = 130 # 最大行长度 [*.md] # 表示仅 md 文件适用以下规则 max_line_length = off # 关闭最大行长度限制 trim_trailing_whitespace = false # 关闭末尾空格修剪\"]},\"24\":{\"h\":\"五、强制代码格式化\"},\"25\":{\"h\":\"1.安装依赖\",\"t\":[\"pnpm add husky lint-staged --save-dev\"]},\"26\":{\"h\":\"2.初始化\",\"t\":[\"pnpm exec husky init\"]},\"27\":{\"h\":\"3.修改配置文件\",\"t\":[\"将.husky/pre-commit文件钟的 pnpm test 改为npx lint-staged\",\"新建lint-staged.config.cjs\",\"module.exports = { \\\"*.{js,jsx,ts,tsx}\\\": [\\\"eslint --fix\\\", \\\"prettier --write\\\"], \\\"{!(package)*.json,*.code-snippets,.!(browserslist)*rc}\\\": [\\\"prettier --write--parser json\\\"], \\\"package.json\\\": [\\\"prettier --write\\\"], \\\"*.vue\\\": [\\\"eslint --fix\\\", \\\"prettier --write\\\", \\\"stylelint --fix\\\"], \\\"*.{scss,less,styl,html}\\\": [\\\"stylelint --fix\\\", \\\"prettier --write\\\"], \\\"*.md\\\": [\\\"prettier --write\\\"] };\"]},\"28\":{\"h\":\"六、强制 commit 规范\"},\"29\":{\"h\":\"1.安装依赖\",\"t\":[\"pnpm add @commitlint/config-conventional @commitlint/cli -D\"]},\"30\":{\"h\":\"2.创建配置文件\",\"t\":[\"在根目录下新建commitlint.config.js文件并写入配置\",\"module.exports = { // 继承的规则 extends: ['@commitlint/config-conventional'], // 定义规则类型 rules: { // type 类型定义，表示 git 提交的 type 必须在以下类型范围内 'type-enum': [ 2, 'always', [ 'feat', // 新功能 feature 'fix', // 修复 bug 'docs', // 文档注释 'style', // 代码格式(不影响代码运行的变动) 'refactor', // 重构(既不增加新功能，也不是修复bug) 'perf', // 性能优化 'test', // 增加测试 'chore', // 构建过程或辅助工具的变动 'revert', // 回退 'build', // 打包 ], ], // subject 大小写不做校验 'subject-case': [0], }, }\"]},\"31\":{\"h\":\"3.添加 commit-msg 钩子,执行信息校验\",\"t\":[\"复制.husky文件下pre-commit文件，并重命名为commit-msg。修改内容为：\",\"npx --no -- commitlint --edit ${1}\"]},\"32\":{\"h\":\"4.测试\",\"t\":[\" 不符合规则 \",\" 符合规则 \"]},\"33\":{\"h\":\"5.mac 获取权限\",\"t\":[\"对于 liux 或者 macos 系统中，可能会出现 因为没有将钩子 '.husky/pre-commit' 设置为可执行 钩子被忽略的错误。\",\"执行\",\"chmod +x .husky/pre-commit\",\"chmod +x .husky/commit-msg\"]},\"34\":{\"h\":\"6.修改package.json\",\"t\":[\"\\\"commit\\\": \\\"git-cz & git push\\\", \\\"commit-all\\\": \\\"git add . & git-cz & git push\\\",\"]},\"35\":{\"h\":\"七、安装第三方库\"},\"36\":{\"h\":\"1.scss\",\"t\":[\"pnpm install sass -D\"]},\"37\":{\"h\":\"2.element-plus\",\"t\":[\"pnpm i element-plus\",\"// tsconfig.json { \\\"compilerOptions\\\": { // ... \\\"types\\\": [\\\"element-plus/global\\\"] } }\"]},\"38\":{\"h\":\"3.css初始化\",\"t\":[\"pnpm add normalize.css -D\",\"修改main.ts\",\"import \\\"normalize.css/normalize.css\\\"\"]},\"39\":{\"h\":\"3.自动引入依赖\",\"t\":[\"pnpm install unplugin-vue-components unplugin-auto-import vite-plugin-style-import consola -D\",\"// vite.config.ts import AutoImport from \\\"unplugin-auto-import/vite\\\" import Components from \\\"unplugin-vue-components/vite\\\" import { ElementPlusResolver } from \\\"unplugin-vue-components/resolvers\\\" import { createStyleImportPlugin, ElementPlusResolve } from \\\"vite-plugin-style-import\\\" export default defineConfig({ plugins: [ // ... AutoImport({ resolvers: [ElementPlusResolver()], imports: [\\\"vue\\\", \\\"vue-router\\\", \\\"pinia\\\"], dts: \\\"src/types/auto-imports.d.ts\\\", eslintrc: { enabled: false, // Default `false` filepath: \\\"./.eslintrc-auto-import.json\\\", // Default `./.eslintrc-auto-import.json` globalsPropValue: true // Default `true`, (true | false | 'readonly' | 'readable' | 'writable' | 'writeable') } }), Components({ resolvers: [ElementPlusResolver()], dts: \\\"src/types/components.d.ts\\\" }), // 自动引入element-plus样式 createStyleImportPlugin({ resolves: [ElementPlusResolve()], libs: [ { libraryName: \\\"element-plus\\\", esModule: true, resolveStyle: name => { return `element-plus/theme-chalk/${name}.css` } } ] }) ], })\",\"AutoImport 中 enabled 配置有新引入的依赖改为true，其他时间为false\",\"修改.eslintrc.cjs\",\" extends: [ \\\"plugin:vue/vue3-essential\\\", \\\"eslint:recommended\\\", \\\"@vue/eslint-config-typescript\\\", \\\"@vue/eslint-config-prettier/skip-formatting\\\", \\\"./.eslintrc-auto-import.json\\\" ],\"]},\"40\":{\"h\":\"八、修改 tsconfig.json\",\"t\":[\"{ \\\"files\\\": [], \\\"references\\\": [ { \\\"path\\\": \\\"./tsconfig.node.json\\\" }, { \\\"path\\\": \\\"./tsconfig.app.json\\\" } ], \\\"compilerOptions\\\": { \\\"paths\\\": { \\\"@/*\\\": [\\\"./src/*\\\"], \\\"@assets/*\\\": [\\\"./src/assets/*\\\"] } } }\"]},\"41\":{\"h\":\"九、github 地址\",\"t\":[\"https://github.com/luotianxu1/vue3-base\"]},\"42\":{\"c\":[\"项目\"]},\"43\":{\"c\":[\"vue3\"]},\"44\":{\"h\":\"vue2+webpack基础模板\"},\"45\":{\"h\":\"一、通过脚手架初始化项目\"},\"46\":{\"h\":\"1.下载脚手架\",\"t\":[\"npm install -g @vue/cli\"]},\"47\":{\"h\":\"2.创建项目\",\"t\":[\"vue create base-vue2\"]},\"48\":{\"h\":\"3.运行项目\",\"t\":[\"npm run dev\"]},\"49\":{\"h\":\"二、初始化git\"},\"50\":{\"h\":\"1.初始化 git 本地仓库\",\"t\":[\"git init\"]},\"51\":{\"h\":\"2.添加所有文件\",\"t\":[\"git add .\"]},\"52\":{\"h\":\"3.提交文件\",\"t\":[\"git commit -m '你的提交信息'\"]},\"53\":{\"h\":\"4.修改分支名称\",\"t\":[\"git branch -M main\"]},\"54\":{\"h\":\"5.链接到 github\",\"t\":[\"git remote add origin https://github.com/xxxxxxxx/vue3-base.git\"]},\"55\":{\"h\":\"6.推送到 github\",\"t\":[\"git push -u origin main\"]},\"56\":{\"h\":\"三、设置 commit 规范\"},\"57\":{\"h\":\"1.安装依赖\",\"t\":[\"npm install -g commitizen pnpm add cz-customizable -D\"]},\"58\":{\"h\":\"2.修改 package.json\",\"t\":[\"在package.json中进行新增\",\"\\\"config\\\": { \\\"commitizen\\\": { \\\"path\\\": \\\"node_modules/cz-customizable\\\" } }\"]},\"59\":{\"h\":\"3.创建配置文件\",\"t\":[\"在根目录下新建.cz-config.js文件并写入配置 之后就可以用git cz来代替git commit\",\"module.exports = { // 可选类型 types: [ { value: 'feat', name: 'feat: 新功能' }, { value: 'fix', name: 'fix: 修复' }, { value: 'docs', name: 'docs: 文档变更' }, { value: 'style', name: 'style: 代码格式(不影响代码运行的变动)' }, { value: 'refactor', name: 'refactor: 重构(既不是增加feature，也不是修复bug)', }, { value: 'perf', name: 'perf: 性能优化' }, { value: 'test', name: 'test: 增加测试' }, { value: 'chore', name: 'chore: 构建过程或辅助工具的变动' }, { value: 'revert', name: 'revert: 回退' }, { value: 'build', name: 'build: 打包' }, ], // 消息步骤 messages: { type: '请选择提交类型:', customScope: '请输入修改范围(可选):', subject: '请简要描述提交(必填):', body: '请输入详细描述(可选):', footer: '请输入要关闭的issue(可选):', confirmCommit: '确认使用以上信息提交？(y/n/e/h)', }, // 跳过问题 skipQuestions: ['body', 'footer'], // subject文字长度默认是72 subjectLimit: 72, }\"]},\"60\":{\"h\":\"4.测试\",\"t\":[\"现在就可以用git cz来代替git commit\"]},\"61\":{\"h\":\"四、代码格式化\"},\"62\":{\"h\":\"1.eslint\",\"t\":[\"新建.eslintrc.cjs文件\",\"// .eslintrc.js module.exports = { root: true, env: { es6: true, node: true, }, extends: ['plugin:vue/essential', 'eslint:recommended'], parserOptions: { parser: '@babel/eslint-parser', }, rules: { 'vue/multi-word-component-names': 'off', // 文件命名必须改成驼峰规范 // eslint (http://eslint.cn/docs/rules) 'no-var': 'error', // 要求使用 let 或 const 而不是 var 'no-multiple-empty-lines': ['error', { max: 1 }], // 不允许多个空行 'no-use-before-define': 'off', // 禁止在 函数/类/变量 定义之前使用它们 'no-irregular-whitespace': 'off', // 禁止不规则的空白 // vue (https://eslint.vuejs.org/rules) 'vue/attributes-order': 'off', // vue api使用顺序，强制执行属性顺序 'vue/one-component-per-file': 'off', // 强制每个组件都应该在自己的文件中 'vue/html-closing-bracket-newline': 'off', // 在标签的右括号之前要求或禁止换行 'vue/max-attributes-per-line': 'off', // 强制每行的最大属性数 'vue/multiline-html-element-content-newline': 'off', // 在多行元素的内容之前和之后需要换行符 'vue/singleline-html-element-content-newline': 'off', // 在单行元素的内容之前和之后需要换行符 'vue/require-default-prop': 'off', // 此规则要求为每个 prop 为必填时，必须提供默认值 eqeqeq: 'error', // 要求使用 === 和 !== }, }\",\"创建.eslintignore文件\",\"dist node_modules\"]},\"63\":{\"h\":\"2.prettier\",\"t\":[\" pnpm add prettier@2 -D\",\"新建 .prettierrc.js\",\"// @see: https://www.prettier.cn module.exports = { // 超过最大值换行 printWidth: 130, // 缩进字节数 tabWidth: 2, // 使用制表符而不是空格缩进行 useTabs: true, // 结尾不用分号(true有，false没有) semi: false, // 使用单引号(true单双引号，false双引号) singleQuote: false, // 更改引用对象属性的时间 可选值\\\"<as-needed|consistent|preserve>\\\" quoteProps: \\\"as-needed\\\", // 在对象，数组括号与文字之间加空格 \\\"{ foo: bar }\\\" bracketSpacing: true, // 多行时尽可能打印尾随逗号。（例如，单行数组永远不会出现逗号结尾。） 可选值\\\"<none|es5|all>\\\"，默认none trailingComma: \\\"none\\\", // 在JSX中使用单引号而不是双引号 jsxSingleQuote: false, // (x) => {} 箭头函数参数只有一个时是否要有小括号。avoid：省略括号 ,always：不省略括号 arrowParens: \\\"avoid\\\", // 如果文件顶部已经有一个 doclock，这个选项将新建一行注释，并打上@format标记。 insertPragma: false, // 指定要使用的解析器，不需要写文件开头的 @prettier requirePragma: false, // 默认值。因为使用了一些折行敏感型的渲染器（如GitHub comment）而按照markdown文本样式进行折行 proseWrap: \\\"preserve\\\", // 在html中空格是否是敏感的 \\\"css\\\" - 遵守CSS显示属性的默认值， \\\"strict\\\" - 空格被认为是敏感的 ，\\\"ignore\\\" - 空格被认为是不敏感的 htmlWhitespaceSensitivity: \\\"css\\\", // 换行符使用 lf 结尾是 可选值\\\"<auto|lf|crlf|cr>\\\" endOfLine: \\\"auto\\\", // 这两个选项可用于格式化以给定字符偏移量（分别包括和不包括）开始和结束的代码 rangeStart: 0, rangeEnd: Infinity, // Vue文件脚本和样式标签缩进 vueIndentScriptAndStyle: false }\",\"新建 .prettierignore\",\"/dist/* .local .output.js /node_modules/** **/*.svg **/*.sh /public/*\",\"pnpm add @vue/eslint-config-prettier@7 eslint-plugin-prettier@4 -D\",\"修改.eslintrc.js\",\"extends: [\\\"plugin:vue/essential\\\", \\\"eslint:recommended\\\", \\\"plugin:prettier/recommended\\\"],\"]},\"64\":{\"h\":\"3.stylelint\",\"t\":[\"安装依赖\",\"pnpm install stylelint@13.13.1 stylelint-config-prettier@9.0.3 stylelint-config-standard@22.0.0 stylelint-order@4.1.0 stylelint-scss@3.20.1 -D\",\"新建.stylelintrc.cjs文件\",\"module.exports = { root: true, plugins: [\\\"stylelint-order\\\", \\\"stylelint-scss\\\"], extends: [\\\"stylelint-config-standard\\\", \\\"stylelint-config-prettier\\\"], rules: { \\\"selector-pseudo-class-no-unknown\\\": [ true, { ignorePseudoClasses: [\\\"global\\\", \\\"v-deep\\\", \\\"deep\\\"] } ], \\\"selector-pseudo-element-no-unknown\\\": [ true, { ignorePseudoElements: [\\\"v-deep\\\", \\\"deep\\\"] } ], \\\"at-rule-no-unknown\\\": [ true, { ignoreAtRules: [\\\"function\\\", \\\"if\\\", \\\"each\\\", \\\"include\\\", \\\"mixin\\\", \\\"for\\\"] } ], \\\"no-empty-source\\\": null, \\\"named-grid-areas-no-invalid\\\": null, \\\"unicode-bom\\\": \\\"never\\\", \\\"no-descending-specificity\\\": null, \\\"font-family-no-missing-generic-family-keyword\\\": null, \\\"declaration-colon-space-after\\\": \\\"always-single-line\\\", \\\"declaration-colon-space-before\\\": \\\"never\\\", \\\"declaration-block-trailing-semicolon\\\": [\\\"always\\\", { ignore: [\\\"single-declaration\\\"] }], \\\"rule-empty-line-before\\\": [ \\\"always\\\", { ignore: [\\\"after-comment\\\", \\\"first-nested\\\"] } ], \\\"unit-no-unknown\\\": [true, { ignoreUnits: [\\\"rpx\\\"] }], \\\"order/order\\\": [ [ \\\"dollar-variables\\\", \\\"custom-properties\\\", \\\"at-rules\\\", \\\"declarations\\\", { type: \\\"at-rule\\\", name: \\\"supports\\\" }, { type: \\\"at-rule\\\", name: \\\"media\\\" }, \\\"rules\\\" ], { severity: \\\"warning\\\" } ], // Specify the alphabetical order of the attributes in the declaration block \\\"order/properties-order\\\": [ \\\"position\\\", \\\"top\\\", \\\"right\\\", \\\"bottom\\\", \\\"left\\\", \\\"z-index\\\", \\\"display\\\", \\\"float\\\", \\\"width\\\", \\\"height\\\", \\\"max-width\\\", \\\"max-height\\\", \\\"min-width\\\", \\\"min-height\\\", \\\"padding\\\", \\\"padding-top\\\", \\\"padding-right\\\", \\\"padding-bottom\\\", \\\"padding-left\\\", \\\"margin\\\", \\\"margin-top\\\", \\\"margin-right\\\", \\\"margin-bottom\\\", \\\"margin-left\\\", \\\"margin-collapse\\\", \\\"margin-top-collapse\\\", \\\"margin-right-collapse\\\", \\\"margin-bottom-collapse\\\", \\\"margin-left-collapse\\\", \\\"overflow\\\", \\\"overflow-x\\\", \\\"overflow-y\\\", \\\"clip\\\", \\\"clear\\\", \\\"font\\\", \\\"font-family\\\", \\\"font-size\\\", \\\"font-smoothing\\\", \\\"osx-font-smoothing\\\", \\\"font-style\\\", \\\"font-weight\\\", \\\"hyphens\\\", \\\"src\\\", \\\"line-height\\\", \\\"letter-spacing\\\", \\\"word-spacing\\\", \\\"color\\\", \\\"text-align\\\", \\\"text-decoration\\\", \\\"text-indent\\\", \\\"text-overflow\\\", \\\"text-rendering\\\", \\\"text-size-adjust\\\", \\\"text-shadow\\\", \\\"text-transform\\\", \\\"word-break\\\", \\\"word-wrap\\\", \\\"white-space\\\", \\\"vertical-align\\\", \\\"list-style\\\", \\\"list-style-type\\\", \\\"list-style-position\\\", \\\"list-style-image\\\", \\\"pointer-events\\\", \\\"cursor\\\", \\\"background\\\", \\\"background-attachment\\\", \\\"background-color\\\", \\\"background-image\\\", \\\"background-position\\\", \\\"background-repeat\\\", \\\"background-size\\\", \\\"border\\\", \\\"border-collapse\\\", \\\"border-top\\\", \\\"border-right\\\", \\\"border-bottom\\\", \\\"border-left\\\", \\\"border-color\\\", \\\"border-image\\\", \\\"border-top-color\\\", \\\"border-right-color\\\", \\\"border-bottom-color\\\", \\\"border-left-color\\\", \\\"border-spacing\\\", \\\"border-style\\\", \\\"border-top-style\\\", \\\"border-right-style\\\", \\\"border-bottom-style\\\", \\\"border-left-style\\\", \\\"border-width\\\", \\\"border-top-width\\\", \\\"border-right-width\\\", \\\"border-bottom-width\\\", \\\"border-left-width\\\", \\\"border-radius\\\", \\\"border-top-right-radius\\\", \\\"border-bottom-right-radius\\\", \\\"border-bottom-left-radius\\\", \\\"border-top-left-radius\\\", \\\"border-radius-topright\\\", \\\"border-radius-bottomright\\\", \\\"border-radius-bottomleft\\\", \\\"border-radius-topleft\\\", \\\"content\\\", \\\"quotes\\\", \\\"outline\\\", \\\"outline-offset\\\", \\\"opacity\\\", \\\"filter\\\", \\\"visibility\\\", \\\"size\\\", \\\"zoom\\\", \\\"transform\\\", \\\"box-align\\\", \\\"box-flex\\\", \\\"box-orient\\\", \\\"box-pack\\\", \\\"box-shadow\\\", \\\"box-sizing\\\", \\\"table-layout\\\", \\\"animation\\\", \\\"animation-delay\\\", \\\"animation-duration\\\", \\\"animation-iteration-count\\\", \\\"animation-name\\\", \\\"animation-play-state\\\", \\\"animation-timing-function\\\", \\\"animation-fill-mode\\\", \\\"transition\\\", \\\"transition-delay\\\", \\\"transition-duration\\\", \\\"transition-property\\\", \\\"transition-timing-function\\\", \\\"background-clip\\\", \\\"backface-visibility\\\", \\\"resize\\\", \\\"appearance\\\", \\\"user-select\\\", \\\"interpolation-mode\\\", \\\"direction\\\", \\\"marks\\\", \\\"page\\\", \\\"set-link-source\\\", \\\"unicode-bidi\\\", \\\"speak\\\" ] }, ignoreFiles: [\\\"**/*.js\\\", \\\"**/*.jsx\\\", \\\"**/*.tsx\\\", \\\"**/*.ts\\\"] }\",\"新建.stylelintignore文件\",\"/dist/* /public/* public/* node_modules/*\"]},\"65\":{\"h\":\"4.修改package.json\",\"t\":[\"新增命令\",\"\\\"lint:eslint\\\": \\\"eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore\\\", \\\"lint:prettier\\\": \\\"prettier --write \\\\\\\"src/**/*.{js,ts,json,tsx,css,less,scss,vue,html,md}\\\\\\\"\\\", \\\"lint:stylelint\\\": \\\"stylelint --fix \\\\\\\"**/*.{vue,less,postcss,css,scss}\\\\\\\" --cache --cache-location node_modules/.cache/stylelint/\\\",\"]},\"66\":{\"h\":\"5.统一编辑器配置\",\"t\":[\"根目录下新增.editorconfig文件\",\"# @see: http://editorconfig.org root = true [*] # 表示所有文件适用 charset = utf-8 # 设置文件字符集为 utf-8 end_of_line = lf # 控制换行类型(lf | cr | crlf) insert_final_newline = true # 始终在文件末尾插入一个新行 indent_style = space # 缩进风格（tab | space） indent_size = 2 # 缩进大小 max_line_length = 130 # 最大行长度 [*.md] # 表示仅 md 文件适用以下规则 max_line_length = off # 关闭最大行长度限制 trim_trailing_whitespace = false # 关闭末尾空格修剪\"]},\"67\":{\"h\":\"五、强制代码格式化\"},\"68\":{\"h\":\"1.安装依赖\",\"t\":[\"pnpm add husky lint-staged --save-dev\"]},\"69\":{\"h\":\"2.初始化\",\"t\":[\"pnpm exec husky init\"]},\"70\":{\"h\":\"3.修改配置文件\",\"t\":[\"将.husky/pre-commit文件钟的 pnpm test 改为npx lint-staged\",\"新建lint-staged.config.cjs\",\"module.exports = { \\\"*.{js,jsx,ts,tsx}\\\": [\\\"eslint --fix\\\", \\\"prettier --write\\\"], \\\"{!(package)*.json,*.code-snippets,.!(browserslist)*rc}\\\": [\\\"prettier --write--parser json\\\"], \\\"package.json\\\": [\\\"prettier --write\\\"], \\\"*.vue\\\": [\\\"eslint --fix\\\", \\\"prettier --write\\\", \\\"stylelint --fix\\\"], \\\"*.{scss,less,styl,html}\\\": [\\\"stylelint --fix\\\", \\\"prettier --write\\\"], \\\"*.md\\\": [\\\"prettier --write\\\"] };\"]},\"71\":{\"h\":\"六、强制 commit 规范\"},\"72\":{\"h\":\"1.安装依赖\",\"t\":[\"pnpm add @commitlint/config-conventional @commitlint/cli -D\"]},\"73\":{\"h\":\"2.创建配置文件\",\"t\":[\"在根目录下新建commitlint.config.js文件并写入配置\",\"module.exports = { // 继承的规则 extends: ['@commitlint/config-conventional'], // 定义规则类型 rules: { // type 类型定义，表示 git 提交的 type 必须在以下类型范围内 'type-enum': [ 2, 'always', [ 'feat', // 新功能 feature 'fix', // 修复 bug 'docs', // 文档注释 'style', // 代码格式(不影响代码运行的变动) 'refactor', // 重构(既不增加新功能，也不是修复bug) 'perf', // 性能优化 'test', // 增加测试 'chore', // 构建过程或辅助工具的变动 'revert', // 回退 'build', // 打包 ], ], // subject 大小写不做校验 'subject-case': [0], }, }\"]},\"74\":{\"h\":\"3.添加 commit-msg 钩子,执行信息校验\",\"t\":[\"复制.husky文件下pre-commit文件，并重命名为commit-msg。修改内容为：\",\"npx --no -- commitlint --edit ${1}\"]},\"75\":{\"h\":\"4.测试\",\"t\":[\" 不符合规则 \",\" 符合规则 \"]},\"76\":{\"h\":\"5.mac 获取权限\",\"t\":[\"对于 liux 或者 macos 系统中，可能会出现 因为没有将钩子 '.husky/pre-commit' 设置为可执行 钩子被忽略的错误。\",\"执行\",\"chmod +x .husky/pre-commit\",\"chmod +x .husky/commit-msg\"]},\"77\":{\"h\":\"6.修改package.json\",\"t\":[\"\\\"commit\\\": \\\"git-cz & git push\\\", \\\"commit-all\\\": \\\"git add . & git-cz & git push\\\",\"]},\"78\":{\"h\":\"七、安装第三方库\"},\"79\":{\"h\":\"1.scss\",\"t\":[\"pnpm install sass sass-loader -D\"]},\"80\":{\"h\":\"2.element\",\"t\":[\"pnpm install element -D\",\"在 main.js 中写入以下内容：\",\"import Vue from 'vue'; import ElementUI from 'element-ui'; import 'element-ui/lib/theme-chalk/index.css'; import App from './App.vue'; Vue.use(ElementUI); new Vue({ el: '#app', render: h => h(App) });\"]},\"81\":{\"h\":\"3.css初始化\",\"t\":[\"pnpm add normalize.css -D\",\"修改main.ts\",\"import \\\"normalize.css/normalize.css\\\"\"]},\"82\":{\"h\":\"4.vue-router\",\"t\":[\"pnpm add vue-router@3.5.2\",\"新建router文件夹，并新建index.js文件\",\"import Vue from \\\"vue\\\" import VueRouter from \\\"vue-router\\\" Vue.use(VueRouter) export default new VueRouter({ routes: [ { path: \\\"/\\\", name: \\\"Home\\\", component: () => import(\\\"../views/Home.vue\\\") }, { path: \\\"/test\\\", name: \\\"Test\\\", component: () => import(\\\"../views/Test.vue\\\") } ] })\",\"修改main.js\",\"import router from \\\"./router\\\" new Vue({ router, render: h => h(App) }).$mount(\\\"#app\\\")\",\"修改App.vue\",\"<router-view></router-view>\"]},\"83\":{\"h\":\"5.vuex\",\"t\":[\"pnpm add vuex@3\",\"新建文件夹sotre,并新建文件index.js\",\"import Vue from \\\"vue\\\" import Vuex from \\\"vuex\\\" //引入插件并使用插件 import countAbout from \\\"./Count\\\" import personAbout from \\\"./Person\\\" Vue.use(Vuex) //创建并导出store export default new Vuex.Store({ modules: { countAbout: countAbout, personAbout } })\",\"新建Count.js\",\"export default { namespaced: true, state: { sum: 0, school: \\\"HNUST\\\", subject: \\\"前端\\\" }, mutations: { JIA(state, value) { console.log(\\\"mutations中的JIA被调用了 \\\", state, value) state.sum += value }, JIAN(state, value) { state.sum -= value } }, actions: { oddAdd(context, value) { context.commit(\\\"JIA\\\", value) }, waitAdd(context, value) { setTimeout(() => { context.commit(\\\"JIA\\\", value) }, 1000) } }, getters: { bigSum(state) { return state.sum * 10 } } }\",\"新建Person.js\",\"export default { namespaced: true, state: { personList: [{ id: 1, name: \\\"zzy\\\" }] }, getters: { firstPersonName(state) { return state.personList[0].name } }, actions: { addPersonHan(context, value) { if (value.name.indexOf(\\\"韩\\\") === 0) { context.commit(\\\"ADD_PERSON\\\", value) } else { alert(\\\"添加的人不姓韩！\\\") } } }, mutations: { ADD_PERSON(state, value) { state.personList.unshift(value) } } }\",\"<template> <div> <h1>当前求和为：{{ sum }}</h1> <h2>当前求和放大十倍后为：{{ bigSum }}</h2> <h3>我在{{ school }}学习{{ subject }}</h3> <select v-model.number=\\\"addnum\\\"> <option value=\\\"1\\\" checked>1</option> <option value=\\\"2\\\">2</option> <option value=\\\"3\\\">3</option> </select> <button @click=\\\"JIA(addnum)\\\">+</button> <button @click=\\\"JIAN(addnum)\\\">-</button> <button @click=\\\"oddAdd(addnum)\\\">当前求和为奇数再加</button> <button @click=\\\"waitAdd(addnum)\\\">等1秒再加</button> <h2 style=\\\"color: red\\\">Count里边读personList</h2> <ul style=\\\"color: red\\\"> <li v-for=\\\"p in personList\\\" :key=\\\"p.id\\\">{{ p.name }}</li> </ul> </div> </template> <script> import { mapState, mapGetters, mapActions, mapMutations } from \\\"vuex\\\" export default { name: \\\"Count\\\", data() { return { addnum: 1 } }, computed: { personList() { return this.$store.state.personAbout.personList }, ...mapState(\\\"countAbout\\\", [\\\"sum\\\", \\\"school\\\", \\\"subject\\\"]), ...mapGetters(\\\"countAbout\\\", { bigSum: \\\"bigSum\\\" }) }, methods: { ...mapMutations(\\\"countAbout\\\", [\\\"JIA\\\", \\\"JIAN\\\"]), ...mapActions(\\\"countAbout\\\", { oddAdd: \\\"oddAdd\\\", waitAdd: \\\"waitAdd\\\" }) }, mounted() { console.log(this.$store) } } </script>\",\"修改main.js\",\"import store from \\\"./store\\\" new Vue({ router, store, render: h => h(App) }).$mount(\\\"#app\\\")\"]},\"84\":{\"c\":[\"项目\"]},\"85\":{\"c\":[\"vue2\"]},\"86\":{\"h\":\"图片懒加载\"},\"87\":{\"h\":\"自定义指令\",\"t\":[\"/** * v-lazy * 图片懒加载 */ const copy: Directive = { mounted(el: HTMLImageElement) { const imgSrc = el.src el.src = '' const observer = new IntersectionObserver(([{ isIntersecting }]) => { // 元素出现在可视区域和离开可视区域触发 if (isIntersecting) { // 加载图片 el.src = imgSrc // 停止观察 observer.unobserve(el) } }) observer.observe(el) }, } export default copy\"]},\"88\":{\"h\":\"注册指令\",\"t\":[\"import type { App } from \\\"vue\\\" import lazy from \\\"./modules/lazy\\\" const directivesList: any = { lazy } const directives = { install: function (app: App<Element>) { Object.keys(directivesList).forEach(key => { // 注册自定义指令 app.directive(key, directivesList[key]) }) } } export default directives\",\"main.ts\",\"import directives from \\\"./directives/index\\\" app.use(directives)\"]},\"89\":{\"h\":\"使用\",\"t\":[\"<img :src=\\\"img\\\" v-lazy />\"]},\"90\":{\"c\":[\"项目\"]},\"91\":{\"c\":[\"懒加载\"]},\"92\":{\"h\":\"python实现webm转mp4\"},\"93\":{\"h\":\"官网下载ffmeg\",\"t\":[\"ffmpeg\"]},\"94\":{\"h\":\"代码\",\"t\":[\"import tkinter as tk import os wind=tk.Tk() wind.geometry(\\\"800x400\\\") wind.title(\\\"视频转码\\\") title_lab=tk.Label(wind,text=\\\"视频转码\\\",font=\\\"仿宋 20 bold\\\") title_lab.place(x=350,y=30) textlab=tk.Label(wind, text=\\\"请输入视频地址:\\\", font=\\\"仿宋 20 bold\\\", fg=\\\"blue\\\", width=20) textlab.place(x=0,y=100) text_entry=tk.Entry(wind, width=30,font=\\\"仿宋 20 bold\\\") text_entry.place(x=300,y=100) mzlab=tk.Label(wind, text=\\\"请输入新视频名称:\\\", font=\\\"仿宋 20 bold\\\",fg=\\\"blue\\\", width=18) mzlab.place(x=0,y=200) mz_entry=tk.Entry(wind, width=30,bg=\\\"white\\\",font=\\\"仿宋 20 bold\\\") mz_entry.place(x=300,y=200) #下面是引用了一个执行转码的方法，并声明执行结果 def getTextInput(): lianjie = text_entry.get() mz = mz_entry.get() mz = mz + '.mp4' ff = '/ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe' ff1 = os.getcwd() ff = ff1+ff result = eval(repr(ff).replace('\\\\\\\\','/')) ff = result.replace('//','/') cmd = ff +' -i '+lianjie+' -c:v libx264 -c:a aac -strict experimental '+mz if os.system(cmd) == 0: #判断执行结果并进行转码 test1=tk.Tk() test1.geometry(\\\"200x100\\\") test1.title(\\\"\\\") title_lab=tk.Label(test1,text=\\\"视频转码成功\\\",font=\\\"仿宋 20 bold\\\") title_lab.place(x=0,y=0) test1.mainloop() else: test2=tk.Tk() test2.geometry(\\\"200x100\\\") test2.title(\\\"\\\") title_lab=tk.Label(test2,text=\\\"视频转码失败\\\",font=\\\"仿宋 20 bold\\\") title_lab.place(x=0,y=0) test2.mainloop() btn=tk.Button(wind,text=\\\"提交\\\", font=\\\"仿宋 20 bold\\\", fg=\\\"blue\\\", width=8,command=getTextInput) #将信息提交给上面的getTextInput方法 btn.place(x=350,y=300) wind.mainloop()\"]},\"95\":{\"c\":[\"其他\"]},\"96\":{\"c\":[\"其他\"]},\"97\":{\"h\":\"Git相关\"},\"98\":{\"h\":\"代码没有变化 git显示有差异\",\"t\":[\"切到源码的根目录下\",\"git config --add core.filemode false\"]},\"99\":{\"c\":[\"git\"]},\"100\":{\"c\":[\"git\"]},\"101\":{\"h\":\"Eslint\"},\"102\":{\"h\":\"Delete eslint(prettier/prettier)\",\"t\":[\"罪魁祸首是git的一个配置属性：core.autocrlf\",\"由于历史原因，windows下和linux下的文本文件的换行符不一致。\",\"Windows在换行的时候，同时使用了回车符CR(carriage-return character)和换行符LF(linefeed character) 而Mac和Linux系统，仅仅使用了换行符LF 老版本的Mac系统使用的是回车符CR\"]},\"103\":{\"h\":\"配置.prettierrc文件\",\"t\":[\"\\\"endOfLine\\\": \\\"auto\\\"\"]},\"104\":{\"h\":\"修改git\",\"t\":[\"如果你用的是windows，文件编码是UTF-8且包含中文，最好全局将autocrlf设置为false。\",\"git config --global core.autocrlf false\",\"注意：git全局配置之后，你需要重新拉取代码。\"]},\"105\":{\"c\":[\"eslint\"]},\"106\":{\"c\":[\"eslint\"]},\"107\":{\"h\":\"uniapp分环境打包\"},\"108\":{\"h\":\"修改package.json文件\",\"t\":[\"{ \\\"uni-app\\\" : { \\\"scripts\\\": { \\\"prewx\\\": { \\\"title\\\": \\\"测试版小程序\\\", \\\"env\\\": { \\\"UNI_PLATFORM\\\": \\\"mp-weixin\\\", \\\"UNI_BASE_URL\\\": \\\"https://xxx.xxxx.com\\\", \\\"UNI_BASE_APPID\\\": \\\"xxxx\\\", \\\"UNI_BASE_NAME\\\": \\\"xxxxx\\\" } }, \\\"prodwx\\\": { \\\"title\\\": \\\"正式版小程序\\\", \\\"env\\\": { \\\"UNI_PLATFORM\\\": \\\"mp-weixin\\\", \\\"UNI_BASE_URL\\\": \\\"https://xxx.xxxx.com\\\", \\\"UNI_BASE_APPID\\\": \\\"自定义appid，可以是不同的小程序id\\\", \\\"UNI_BASE_NAME\\\": \\\"自定义appid，可以是不同的小程序id\\\" } } } } }\"]},\"109\":{\"h\":\"在根目录下创建modifyManifest.js\",\"t\":[\"const fs = require('fs') //process.env.UNI_INPUT_DIR为项目所在的绝对路径，经测试，相对路径会找不到文件 const manifestPath = process.env.UNI_INPUT_DIR + '/manifest.json' let Manifest = fs.readFileSync(manifestPath, { encoding: 'utf-8' }) function replaceManifest(path, value) { const arr = path.split('.') const len = arr.length const lastItem = arr[len - 1] let i = 0 let ManifestArr = Manifest.split(/\\\\n/) for (let index = 0; index < ManifestArr.length; index++) { const item = ManifestArr[index] if (new RegExp(`\\\"${arr[i]}\\\"`).test(item)) ++i; if (i === len) { const hasComma = /,/.test(item) ManifestArr[index] = item.replace(new RegExp(`\\\"${lastItem}\\\"[\\\\\\\\s\\\\\\\\S]*:[\\\\\\\\s\\\\\\\\S]*`), `\\\"${lastItem}\\\": ${value}${hasComma ? ',' : ''}`) break; } } Manifest = ManifestArr.join('\\\\n') } //动态配置 appid和名称 ,这部分的代码可根据自己的需要写，需要改什么，按照manifest.json对应的路径写好即可 replaceManifest('mp-weixin.appid', `\\\"${process.UNI_SCRIPT_ENV.UNI_BASE_APPID}\\\"`) replaceManifest('name', `\\\"${process.UNI_SCRIPT_ENV.UNI_BASE_NAME}\\\"`) // console.log(process) fs.writeFileSync(manifestPath, Manifest, { \\\"flag\\\": \\\"w\\\" })\"]},\"110\":{\"h\":\"修改vue.config.js\",\"t\":[\"let reWriteManifest = require('./modifyManifest')\"]},\"111\":{\"h\":\"创建config.js来保存全局变量\",\"t\":[\"module.exports = { baseUrl: process.env.UNI_BASE_URL, baseName: process.env.UNI_BASE_NAME, baseAppId: process.env.UNI_BASE_APPID, }\"]},\"112\":{\"h\":\"运行\",\"t\":[\"npm run dev:custom prewx\"]},\"113\":{\"c\":[\"uniapp\"]},\"114\":{\"c\":[\"uniapp\"]},\"115\":{\"h\":\"uniapp蓝牙\"},\"116\":{\"h\":\"总体思路\",\"t\":[\"初始化：打开蓝牙模块\",\"搜寻：检测附近存在的设备\",\"连接：找到目标设备进行\",\"监听：开启监听功能，接收其他设备传过来的数据\",\"发送指令：不管发送数据还是读取数据，都可以理解为向外发送指令\"]},\"117\":{\"h\":\"初始化阶段\",\"t\":[\"使用uni.openBluetoothAdapter这个 api 就可以初始化蓝牙模块。其他蓝牙相关 API 必须在 uni.openBluetoothAdapter 调用之后使用。否则 API 会返回错误（ errCode=10000 ）。\",\"<template> <view> <button @click=\\\"initBlue\\\">初始化蓝牙</button> </view> </template> <script setup> // 【1】初始化蓝牙 function initBlue() { uni.openBluetoothAdapter({ success(res) { console.log('初始化蓝牙成功') console.log(res) }, fail(err) { console.log('初始化蓝牙失败') console.error(err) }, }) } </script>\"]},\"118\":{\"h\":\"搜索附近设备\",\"t\":[\"这一步需要 2 个 api 配合完成。所以可以分解成以下 2 步：\",\"开启搜寻功能：uni.startBluetoothDevicesDiscovery\",\"监听搜寻到新设备：uni.onBluetoothDeviceFound\",\"开发蓝牙相关功能时，操作逻辑更像是推送，所以“开启搜索”和“监听新设备”是分开操作的。\",\"uni.startBluetoothDevicesDiscovery 可以让设备开始搜索附近蓝牙设备，但这个方法比较耗费系统资源，建议在连接到设备之后就使用 uni.stopBluetoothDevicesDiscovery 停止继续搜索。\",\"uni.startBluetoothDevicesDiscovery 方法里可以传入一个对象，该对象接收几个参数，但初学的话我们只关注 success 和 fail。如果你的项目中硬件佬有提供 service 的 uuid 给你的话，你也可以在 services 里传入。\",\"在使用 uni.startBluetoothDevicesDiscovery （开始搜索）后，可以使用 uni.onBluetoothDeviceFound 进行监听，这个方法里面接收一个回调函数。\",\"<template> <view> <scroll-view scroll-y class=\\\"box\\\"> <view class=\\\"item\\\" v-for=\\\"item in blueDeviceList\\\"> <view> <text>id: {{ item.deviceId }}</text> </view> <view> <text>name: {{ item.name }}</text> </view> </view> </scroll-view> <button @click=\\\"initBlue\\\">初始化蓝牙</button> <button @click=\\\"discovery\\\">搜索附近蓝牙设备</button> </view> </template> <script setup> import { ref } from 'vue' // 搜索到的蓝牙设备列表 const blueDeviceList = ref([]) // 【1】初始化蓝牙 function initBlue() { uni.openBluetoothAdapter({ success(res) { console.log('初始化蓝牙成功') console.log(res) }, fail(err) { console.log('初始化蓝牙失败') console.error(err) }, }) } // 【2】开始搜寻附近设备 function discovery() { uni.startBluetoothDevicesDiscovery({ success(res) { console.log('开始搜索') // 开启监听回调 uni.onBluetoothDeviceFound(found) }, fail(err) { console.log('搜索失败') console.error(err) }, }) } // 【3】找到新设备就触发该方法 function found(res) { console.log(res) blueDeviceList.value.push(res.devices[0]) } </script> <style> .box { width: 100%; height: 400rpx; box-sizing: border-box; margin-bottom: 20rpx; border: 2px solid dodgerblue; } .item { box-sizing: border-box; padding: 10rpx; border-bottom: 1px solid #ccc; } button { margin-bottom: 20rpx; } </style>\",\"上面代码的逻辑是，如果开启 “寻找附近设备” 功能成功，接着就开启 “监听寻找到新设备的事件” 。\",\"搜索到的设备会返回以下数据：\",\"{ \\\"devices\\\": [ { \\\"deviceId\\\": \\\"B4:10:7B:C4:83:14\\\", \\\"name\\\": \\\"蓝牙设备名\\\", \\\"RSSI\\\": -58, \\\"localName\\\": \\\"\\\", \\\"advertisServiceUUIDs\\\": [\\\"0000FFF0-0000-1000-8000-00805F9B34FB\\\"], \\\"advertisData\\\": {} } ] }\"]},\"119\":{\"h\":\"连接设备\",\"t\":[\"连接目标设备只需要 1 个 api 就能完成。但根据文档提示，我们连接后还需要关闭 “搜索附近设备” 的功能，这个很好理解，既然找到了，再继续找就是浪费资源。\",\"流程如下：\",\"获取设备 ID：根据 uni.onBluetoothDeviceFound 回调，拿到设备 ID\",\"连接设备：使用设备 ID 进行连接 uni.createBLEConnection\",\"停止搜索：uni.stopBluetoothDevicesDiscovery\",\"<template> <view> <scroll-view scroll-y class=\\\"box\\\"> <view class=\\\"item\\\" v-for=\\\"item in blueDeviceList\\\" @click=\\\"connect(item)\\\" > <view> <text>id: {{ item.deviceId }}</text> </view> <view> <text>name: {{ item.name }}</text> </view> </view> </scroll-view> <button @click=\\\"initBlue\\\">初始化蓝牙</button> <button @click=\\\"discovery\\\">搜索附近蓝牙设备</button> ​ </view> </template> ​ <script setup> import { ref } from 'vue' ​ // 搜索到的蓝牙设备列表 const blueDeviceList = ref([]) ​ // 【1】初始化蓝牙 function initBlue() { uni.openBluetoothAdapter({ success(res) { console.log('初始化蓝牙成功') console.log(res) }, fail(err) { console.log('初始化蓝牙失败') console.error(err) } }) } ​ // 【2】开始搜寻附近设备 function discovery() { uni.startBluetoothDevicesDiscovery({ success(res) { console.log('开始搜索') // 开启监听回调 uni.onBluetoothDeviceFound(found) }, fail(err) { console.log('搜索失败') console.error(err) } }) } ​ // 【3】找到新设备就触发该方法 function found(res) { console.log(res) blueDeviceList.value.push(res.devices[0]) } ​ // 蓝牙设备的id const deviceId = ref('') ​ // 【4】连接设备 function connect(data) { console.log(data) ​ deviceId.value = data.deviceId ​ uni.createBLEConnection({ deviceId: deviceId.value, success(res) { console.log('连接成功') console.log(res) // 停止搜索 stopDiscovery() }, fail(err) { console.log('连接失败') console.error(err) } }) } ​ // 【5】停止搜索 function stopDiscovery() { uni.stopBluetoothDevicesDiscovery({ success(res) { console.log('停止成功') console.log(res) }, fail(err) { console.log('停止失败') console.error(err) } }) } </script> ​ <style> .box { width: 100%; height: 400rpx; box-sizing: border-box; margin-bottom: 20rpx; border: 2px solid dodgerblue; } .item { box-sizing: border-box; padding: 10rpx; border-bottom: 1px solid #ccc; } button { margin-bottom: 20rpx; } </style>\"]},\"120\":{\"h\":\"监听\",\"t\":[\"在连接完设备后，就要先开启监听数据的功能。这样才能接收到发送读写指令后设备给你回调的信息。\",\"要开启监听，首先需要知道蓝牙设备提供了那些服务，然后通过服务获取特征值，特征值会告诉你哪个可读，哪个可写。最后根据特征值进行消息监听。\",\"步骤如下：\",\"获取蓝牙设备服务：uni.getBLEDeviceServices\",\"获取特征值：uni.getBLEDeviceCharacteristics\",\"开启消息监听：uni.notifyBLECharacteristicValueChange\",\"接收消息监听传来的数据：uni.onBLECharacteristicValueChange\"]},\"121\":{\"h\":\"第一步，获取蓝牙服务\",\"t\":[\"<template> <view> <!-- 省略上一步的代码 --> <button @click=\\\"getServices\\\">获取蓝牙服务</button> </view> </template> ​ <script setup> import { ref } from 'vue' ​ // 省略上一步的代码…… ​ // 【6】获取服务 function getServices() { uni.getBLEDeviceServices({ deviceId: deviceId.value, // 设备ID，在上一步【4】里获取 success(res) { console.log(res) }, fail(err) { console.error(err) } }) } </script>\"]},\"122\":{\"h\":\"第二步，获取指定服务的特征值\",\"t\":[\"获取特征值，需要传 设备 ID 和 服务 ID。\",\"<template> <view> <!-- 省略前面几步代码 --> <button @click=\\\"getCharacteristics\\\">获取特征值</button> </view> </template> ​ <script setup> import { ref } from 'vue' ​ // 省略前面几步代码 ​ // 【7】获取特征值 function getCharacteristics() { uni.getBLEDeviceCharacteristics({ deviceId: deviceId.value, // 设备ID，在【4】里获取到 serviceId: '0000FFE0-0000-1000-8000-00805F9B34FB', // 服务UUID，在【6】里能获取到 success(res) { console.log(res) }, fail(err) { console.error(err) } }) } </script>\",\"成功输出\",\"{ \\\"characteristics\\\": [ { \\\"uuid\\\": \\\"0000FFE1-0000-1000-8000-00805F9B34FB\\\", \\\"properties\\\": { \\\"read\\\": true, \\\"write\\\": true, \\\"notify\\\": true, \\\"indicate\\\": false } } ], \\\"errMsg\\\": \\\"getBLEDeviceCharacteristics:ok\\\" }\",\"characteristics 字段里保存了该服务的所有特征值，我的设备这个服务只有 1 个特征值，并且读、写、消息推送都为 true。\",\"你的设备可能不止一条特征值，需要监听那条特征值这需要你和硬件佬协商的（通常也是硬件佬直接和你说要监听哪条）。\"]},\"123\":{\"h\":\"第三步，开启消息监听并接收消息监听传来的数据\",\"t\":[\"根据已经拿到的 设备 ID、服务 ID、特征值，就可以开启对应的监听功能。\",\"使用 uni.notifyBLECharacteristicValueChange 开启消息监听。\",\"使用 uni.onBLECharacteristicValueChange 方法触发监听到的消息。\",\"<template> <view> <!-- 省略前面几步代码 --> <button @click=\\\"notify\\\">开启消息监听</button> </view> </template> ​ <script setup> import { ref } from 'vue' ​ // 省略前面几步代码 ​ // 【8】开启消息监听 function notify() { uni.notifyBLECharacteristicValueChange({ deviceId: deviceId.value, // 设备ID，在【4】里获取到 serviceId: '0000FFE0-0000-1000-8000-00805F9B34FB', // 服务UUID，在【6】里能获取到 characteristicId: '0000FFE1-0000-1000-8000-00805F9B34FB', // 特征值，在【7】里能获取到 success(res) { console.log(res) // 接受消息的方法 listenValueChange() }, fail(err) { console.error(err) } }) } ​ // ArrayBuffer转16进度字符串示例 function ab2hex(buffer) { const hexArr = Array.prototype.map.call( new Uint8Array(buffer), function (bit) { return ('00' + bit.toString(16)).slice(-2) } ) return hexArr.join('') } ​ // 将16进制的内容转成我们看得懂的字符串内容 function hexCharCodeToStr(hexCharCodeStr) { var trimedStr = hexCharCodeStr.trim(); var rawStr = trimedStr.substr(0, 2).toLowerCase() === \\\"0x\\\" ? trimedStr.substr(2) : trimedStr; var len = rawStr.length; if (len % 2 !== 0) { alert(\\\"存在非法字符!\\\"); return \\\"\\\"; } var curCharCode; var resultStr = []; for (var i = 0; i < len; i = i + 2) { curCharCode = parseInt(rawStr.substr(i, 2), 16); resultStr.push(String.fromCharCode(curCharCode)); } return resultStr.join(\\\"\\\"); } ​ // 【9】监听消息变化 function listenValueChange() { uni.onBLECharacteristicValueChange(res => { // 结果 console.log(res) // 结果里有个value值，该值为 ArrayBuffer 类型，所以在控制台无法用肉眼观察到，必须将该值转换为16进制 let resHex = ab2hex(res.value) console.log(resHex) ​ // 最后将16进制转换为ascii码，就能看到对应的结果 let result = hexCharCodeToStr(resHex) console.log(result) }) } </script>\"]},\"124\":{\"h\":\"发送指令\",\"t\":[\"从 uni-app 和 微信小程序 提供的蓝牙 api 来看，发送指令只要有 2 个方法：\",\"uni.writeBLECharacteristicValue：向低功耗蓝牙设备特征值中写入二进制数据。\",\"uni.readBLECharacteristicValue：读取低功耗蓝牙设备的特征值的二进制数据值。\",\"这里需要理清一个概念，本节的内容为 “发送指令” ，也就是说，从你的 app 或小程序向其他蓝牙设备发送指令，而这个指令分 2 种情况，一种是你要发送一些数据给蓝牙设备，另一种情况是你叫蓝牙设备给你发点信息。\"]},\"125\":{\"h\":\"uni.writeBLECharacteristicValue\",\"t\":[\"uni.writeBLECharacteristicValue 从文档可以看出，这个 api 是可以发送一些数据给蓝牙设备，但发送的值要转成 ArrayBuffer 。\",\"<template> <view> <!-- 省略前面几步代码 --> <button @click=\\\"send\\\">发送数据</button> </view> </template> ​ <script setup> import { ref } from 'vue' ​ // 省略前面几步代码 ​ // 【10】发送数据 function send() { // 向蓝牙设备发送一个0x00的16进制数据 let msg = 'hello' const buffer = new ArrayBuffer(msg.length) const dataView = new DataView(buffer) // dataView.setUint8(0, 0) for (var i = 0; i < msg.length; i++) { dataView.setUint8(i, msg.charAt(i).charCodeAt()) } uni.writeBLECharacteristicValue({ deviceId: deviceId.value, // 设备ID，在【4】里获取到 serviceId: '0000FFE0-0000-1000-8000-00805F9B34FB', // 服务UUID，在【6】里能获取到 characteristicId: '0000FFE1-0000-1000-8000-00805F9B34FB', // 特征值，在【7】里能获取到 value: buffer, success(res) { console.log(res) }, fail(err) { console.error(err) } }) } </script>\",\"此时，如果 uni.writeBLECharacteristicValue 走 success ，证明你已经把数据向外成功发送了，但不代表设备一定就收到了。通常设备收到你发送过去的信息，会返回一条消息给你，而这个回调消息会在 uni.onBLECharacteristicValueChange。但这是蓝牙设备那边控制的，你作为前端佬，人家“已读不回”你也拿人家没办法。\"]},\"126\":{\"h\":\"uni.readBLECharacteristicValue\",\"t\":[\"在 “监听” 部分，我们使用了 uni.getBLEDeviceCharacteristics 获取设备的特征值，我的设备提供的特征值支持 read ，所以可以使用 uni.readBLECharacteristicValue 向蓝牙设备发送一条 “读取” 指令。然后在 uni.onBLECharacteristicValueChange 里可以接收设备发送过来的数据。\",\"<template> <view> <!-- 省略前面几步代码 --> <button @click=\\\"read\\\">读取数据</button> </view> </template> ​ <script setup> import { ref } from 'vue' ​ // 省略前面几步代码 ​ // 【11】读取数据 function read() { uni.readBLECharacteristicValue({ deviceId: deviceId.value, serviceId: serviceId.value, characteristicId: characteristicId.value, success(res) { console.log('读取指令发送成功') console.log(res) }, fail(err) { console.log('读取指令发送失败') console.error(err) } }) } </script>\"]},\"127\":{\"h\":\"完整代码\",\"t\":[\"<template> <view> <scroll-view scroll-y class=\\\"box\\\"> <view class=\\\"item\\\" v-for=\\\"item in blueDeviceList\\\" @click=\\\"connect(item)\\\" > <view> <text>id: {{ item.deviceId }}</text> </view> <view> <text>name: {{ item.name }}</text> </view> </view> </scroll-view> <button @click=\\\"initBlue\\\">1 初始化蓝牙</button> <button @click=\\\"discovery\\\">2 搜索附近蓝牙设备</button> <button @click=\\\"getServices\\\">3 获取蓝牙服务</button> <button @click=\\\"getCharacteristics\\\">4 获取特征值</button> <button @click=\\\"notify\\\">5 开启消息监听</button> <button @click=\\\"send\\\">6 发送数据</button> <button @click=\\\"read\\\">7 读取数据</button> <view class=\\\"msg_x\\\"> <view class=\\\"msg_txt\\\"> 监听到的内容：{{ message }} </view> <view class=\\\"msg_hex\\\"> 监听到的内容（十六进制）：{{ messageHex }} </view> </view> </view> </template> ​ <script setup> import { ref } from 'vue' ​ // 搜索到的蓝牙设备列表 const blueDeviceList = ref([]) ​ // 【1】初始化蓝牙 function initBlue() { uni.openBluetoothAdapter({ success(res) { console.log('初始化蓝牙成功') console.log(res) }, fail(err) { console.log('初始化蓝牙失败') console.error(err) } }) } ​ // 【2】开始搜寻附近设备 function discovery() { uni.startBluetoothDevicesDiscovery({ success(res) { console.log('开始搜索') // 开启监听回调 uni.onBluetoothDeviceFound(found) }, fail(err) { console.log('搜索失败') console.error(err) } }) } ​ // 【3】找到新设备就触发该方法 function found(res) { console.log(res) blueDeviceList.value.push(res.devices[0]) } ​ // 蓝牙设备的id const deviceId = ref('') ​ // 【4】连接设备 function connect(data) { console.log(data) deviceId.value = data.deviceId // 将获取到的设备ID存起来 uni.createBLEConnection({ deviceId: deviceId.value, success(res) { console.log('连接成功') console.log(res) // 停止搜索 stopDiscovery() uni.showToast({ title: '连接成功' }) }, fail(err) { console.log('连接失败') console.error(err) uni.showToast({ title: '连接成功', icon: 'error' }) } }) } ​ // 【5】停止搜索 function stopDiscovery() { uni.stopBluetoothDevicesDiscovery({ success(res) { console.log('停止成功') console.log(res) }, fail(err) { console.log('停止失败') console.error(err) } }) } ​ // 【6】获取服务 function getServices() { // 如果是自动链接的话，uni.getBLEDeviceServices方法建议使用setTimeout延迟1秒后再执行 uni.getBLEDeviceServices({ deviceId: deviceId.value, success(res) { console.log(res) // 可以在res里判断有没有硬件佬给你的服务 uni.showToast({ title: '获取服务成功' }) }, fail(err) { console.error(err) uni.showToast({ title: '获取服务失败', icon: 'error' }) } }) } ​ // 硬件提供的服务id，开发中需要问硬件佬获取该id const serviceId = ref('0000FFE0-0000-1000-8000-00805F9B34FB') ​ // 【7】获取特征值 function getCharacteristics() { // 如果是自动链接的话，uni.getBLEDeviceCharacteristics方法建议使用setTimeout延迟1秒后再执行 uni.getBLEDeviceCharacteristics({ deviceId: deviceId.value, serviceId: serviceId.value, success(res) { console.log(res) // 可以在此判断特征值是否支持读写等操作，特征值其实也需要提前向硬件佬索取的 uni.showToast({ title: '获取特征值成功' }) }, fail(err) { console.error(err) uni.showToast({ title: '获取特征值失败', icon: 'error' }) } }) } ​ const characteristicId = ref('0000FFE1-0000-1000-8000-00805F9B34FB') ​ // 【8】开启消息监听 function notify() { uni.notifyBLECharacteristicValueChange({ deviceId: deviceId.value, // 设备id serviceId: serviceId.value, // 监听指定的服务 characteristicId: characteristicId.value, // 监听对应的特征值 success(res) { console.log(res) listenValueChange() uni.showToast({ title: '已开启监听' }) }, fail(err) { console.error(err) uni.showToast({ title: '监听失败', icon: 'error' }) } }) } ​ // ArrayBuffer转16进度字符串示例 function ab2hex(buffer) { const hexArr = Array.prototype.map.call( new Uint8Array(buffer), function (bit) { return ('00' + bit.toString(16)).slice(-2) } ) return hexArr.join('') } ​ // 将16进制的内容转成我们看得懂的字符串内容 function hexCharCodeToStr(hexCharCodeStr) { var trimedStr = hexCharCodeStr.trim(); var rawStr = trimedStr.substr(0, 2).toLowerCase() === \\\"0x\\\" ? trimedStr.substr(2) : trimedStr; var len = rawStr.length; if (len % 2 !== 0) { alert(\\\"存在非法字符!\\\"); return \\\"\\\"; } var curCharCode; var resultStr = []; for (var i = 0; i < len; i = i + 2) { curCharCode = parseInt(rawStr.substr(i, 2), 16); resultStr.push(String.fromCharCode(curCharCode)); } return resultStr.join(\\\"\\\"); } ​ // 监听到的内容 const message = ref('') const messageHex = ref('') // 十六进制 ​ // 【9】监听消息变化 function listenValueChange() { uni.onBLECharacteristicValueChange(res => { console.log(res) let resHex = ab2hex(res.value) console.log(resHex) messageHex.value = resHex let result = hexCharCodeToStr(resHex) console.log(String(result)) message.value = String(result) }) } ​ // 【10】发送数据 function send() { // 向蓝牙设备发送一个0x00的16进制数据 let msg = 'hello' const buffer = new ArrayBuffer(msg.length) const dataView = new DataView(buffer) // dataView.setUint8(0, 0) for (var i = 0; i < msg.length; i++) { dataView.setUint8(i, msg.charAt(i).charCodeAt()) } uni.writeBLECharacteristicValue({ deviceId: deviceId.value, serviceId: serviceId.value, characteristicId: characteristicId.value, value: buffer, success(res) { console.log('writeBLECharacteristicValue success', res.errMsg) uni.showToast({ title: 'write指令发送成功' }) }, fail(err) { console.error(err) uni.showToast({ title: 'write指令发送失败', icon: 'error' }) } }) } ​ // 【11】读取数据 function read() { uni.readBLECharacteristicValue({ deviceId: deviceId.value, serviceId: serviceId.value, characteristicId: characteristicId.value, success(res) { console.log(res) uni.showToast({ title: 'read指令发送成功' }) }, fail(err) { console.error(err) uni.showToast({ title: 'read指令发送失败', icon: 'error' }) } }) } </script> ​ <style> .box { width: 98%; height: 400rpx; box-sizing: border-box; margin: 0 auto 20rpx; border: 2px solid dodgerblue; } .item { box-sizing: border-box; padding: 10rpx; border-bottom: 1px solid #ccc; } button { margin-bottom: 20rpx; } ​ .msg_x { border: 2px solid seagreen; width: 98%; margin: 10rpx auto; box-sizing: border-box; padding: 20rpx; } ​ .msg_x .msg_txt { margin-bottom: 20rpx; } </style>\"]},\"128\":{\"h\":\"封装\",\"t\":[\"import { duplicateRemoval } from '../../utils/common.js' let bluetoothData // 写入蓝牙需要的其他数据 const Buffer = require('buffer/').Buffer export default class Bluetooth { constructor() { this.autocConnenction = false this.isOpenBle = false // 是否开启蓝牙 this.deviceList = [] // 搜索到的所有设备 this.deviceName = null // 设备名称 this.deviceId = null // 设备id this.sericeId = null // 服务id this.notifyId = null this.writeId = null this.sericeList = [] // 连接设备的所有服务 this.openBluetoothAdapter() this.type = null // 连接蓝牙后写入数据类型 this.getLockBytes = [] this.deviceHistoryList = [] // 连接蓝牙的历史记录 this.isWriteSuccess = null // 写入数据是否成功 this.startFoundDeviceTimeout = null } showToast(title, type) { uni.hideLoading() uni.showToast({ title: title, icon: type, }) } // 打开蓝牙 openBluetoothAdapter() { return new Promise((resolve, reject) => { uni.openBluetoothAdapter({ success: (res) => { console.log('初始化蓝牙成功', res) this.showToast('初始化蓝牙成功', 'success') this.isOpenBle = true resolve(res) }, fail: (err) => { console.log('初始化蓝牙失败', err) this.showToast('请打开蓝牙', 'error') if (err.errCode === 10001) { //监听蓝牙适配器状态变化事件 uni.onBluetoothAdapterStateChange(function (res) { if (res.available) { resolve(res) } else { reject(err) } }) } }, }) }) } /** * 开始搜索附近蓝牙 * @param {*} deviceName 设备名称 * @param {*} type 自动连接设备后要执行的操作 * @param {*} data 发送数据时需要的数据 * @returns */ startBluetoothDevicesDiscovery(deviceName, type = '', data = {}) { if (!this.isOpenBle) { return this.showToast('请检查蓝牙是否打开！', 'error') } this.isWriteSuccess = null // 获取连接蓝牙的历史数据，如果连过这个设备就跳过搜索的步骤 this.deviceHistoryList = uni.getStorageSync('deviceHistoryList') || [] console.log(this.deviceHistoryList, '历史记录') console.log('正在搜索设备') // 如果传入设备名称，自动连接设备 if (deviceName) { this.autocConnenction = true this.deviceName = deviceName this.type = type bluetoothData = data uni.showLoading({ title: '搜索中...', }) } // 有历史连接数据 if (this.deviceHistoryList.length !== 0) { let historyList = this.deviceHistoryList.map( (item) => item.deviceName ) if (historyList.includes(deviceName)) { const blueData = this.deviceHistoryList.find( (item) => item.deviceName === deviceName ) console.log('已连接过此设备，跳过搜索', blueData) this.sericeId = blueData.sericed this.deviceId = blueData.deviceId this.createBLEConnenction(blueData) return new Promise((resolve, reject) => { resolve(blueData) }) } } // 无历史连接数据，开始搜索蓝牙 this.deviceList = [] return new Promise((resolve, reject) => { setTimeout(() => { uni.startBluetoothDevicesDiscovery({ success: (res) => { console.log('开始搜素附近设备成功', res) // 如果有自动连接的设备，20s超时 if (this.autocConnenction) { this.startFoundDeviceTimeout = setTimeout(() => { this.stopBluetoothDevicesDiscovery() clearTimeout(this.startFoundDeviceTimeout) this.showToast(`搜索超时`, 'error') }, 20000) } this.startFoundDevice(deviceName) resolve(res) }, fail: (err) => { console.log('开始搜素附近设备失败', err) this.showToast(`搜索设备失败`, 'error') this.isWriteSuccess = 'error' reject(err) }, }) }, 500) }) } // 处理搜索结果 startFoundDevice(deviceName) { uni.onBluetoothDeviceFound((res) => { const devices = this.deviceList.map((item) => item.deviceName) res.devices.forEach((device) => { if (!devices.includes(device.deviceName) && device.name) { this.deviceList.push(device) } // 如果有自动连接的设备，并且发现设备，清除定时器，自动连接 if (this.autocConnenction && device.name == deviceName) { console.log('找到设备', device) this.showToast('找到设备', 'success') this.stopBluetoothDevicesDiscovery() clearTimeout(this.startFoundDeviceTimeout) this.startFoundDeviceTimeout = null this.createBLEConnenction(device) } }) }) } // 关闭搜索附近蓝牙 stopBluetoothDevicesDiscovery() { return new Promise((resolve, reject) => { uni.stopBluetoothDevicesDiscovery({ success: (res) => { console.log('停止搜索设备成功', res) resolve(res) }, fail: (err) => { console.log('停止搜索设备失败', err) reject(err) }, }) }) } // 连接设备 createBLEConnenction(device) { console.log('正在连接设备', device) uni.showLoading({ title: '设备连接中...', }) return new Promise((resolve, reject) => { setTimeout(() => { uni.createBLEConnection({ deviceId: device.deviceId, success: (res) => { console.log('设备连接成功', res) this.showToast('设备连接成功', 'success') this.deviceId = device.deviceId if (this.autocConnenction) { this.getBLEDeviceServices() } resolve(res) }, fail: (err) => { console.log('设备连接失败', err) this.showToast('设备连接失败', 'error') if (err.errCode == 10003) { setTimeout(() => { this.startBluetoothDevicesDiscovery( this.deviceName, this.type, bluetoothData ) }, 400) } else { this.isWriteSuccess = 'error' reject(err) } }, complete: () => { this.stopBluetoothDevicesDiscovery() }, }) }, 500) }) } // 获取设备所有服务 getBLEDeviceServices() { uni.showLoading({ title: '获取设备服务中...', }) console.log('获取设备服务中') this.sericeList = [] return new Promise((resolve, reject) => { setTimeout(() => { uni.getBLEDeviceServices({ deviceId: this.deviceId, success: (res) => { console.log('获取设备服务成功', res) this.showToast('获取设备服务成功', 'success') for (let service of res.services) { if (service.isPrimary) { this.sericeList.push(service.uuid) } } switch (this.type) { case 'openBluetoothClock': { this.sericeId = this.sericeList[1] break } default: { this.sericeId = this.sericeList[0] } } // 去重并保存连接记录 let blue = { deviceName: this.deviceName, deviceId: this.deviceId, sericed: this.sericeId, } this.deviceHistoryList.push(blue) this.deviceHistoryList = duplicateRemoval( this.deviceHistoryList, 'deviceId' ) uni.setStorageSync( 'deviceHistoryList', this.deviceHistoryList ) if (this.autocConnenction) { this.getBLEDeviceCharacteristics(this.sericeId) } resolve(this.sericeList) }, fail: (err) => { console.log('获取设备服务失败', err) this.showToast('获取设备服务失败', 'error') this.isWriteSuccess = 'error' this.closeBLEConnection() reject(err) }, }) }, 500) }) } // 获取设备特征值 getBLEDeviceCharacteristics(id) { uni.showLoading({ title: '获取设备特征值中...', }) const sericeId = id || this.sericeId console.log('获取设备特征值中', this.deviceId, sericeId) return new Promise((resolve, reject) => { setTimeout(() => { uni.getBLEDeviceCharacteristics({ deviceId: this.deviceId, serviceId: sericeId, success: (res) => { console.log('获取设备特征值成功', res) this.showToast('获取设备特征值成功', 'success') console.log( '读取低功耗设备特征值中', res.characteristics ) for (let character of res.characteristics) { if (character.properties.notify) { this.notifyId = character.uuid this.notifyBLECharacteristicValueChange() } if (character.properties.write) { this.writeId = character.uuid } } let result = { notifyId: this.notifyId, writeId: this.writeId, } console.log('读取低功耗设备特征值成功', result) resolve(result) }, fail: (err) => { console.log('获取设备特征值失败', err) this.showToast('获取设备特征值失败', 'error') this.isWriteSuccess = 'error' this.closeBLEConnection() reject(err) }, }) }, 500) }) } // 消息监听 notifyBLECharacteristicValueChange() { uni.notifyBLECharacteristicValueChange({ deviceId: this.deviceId, serviceId: this.sericeId, characteristicId: this.notifyId, state: true, success: (res) => { console.log('消息监听成功', res) this.getLockBytes = [] this.onBLECharacteristicValueChange() this.wirteData() }, fail: (err) => { console.log('消息监听失败', err) this.isWriteSuccess = 'error' this.closeBLEConnection() }, }) } // 开始监听 onBLECharacteristicValueChange() { console.log('开始监听') uni.onBLECharacteristicValueChange((characteristic) => { // 接收消息 this.closeBLEConnection() }) } // 写入数据 wirteData() { let olebuffer switch (this.type) { case 'openBluetoothClock': { // 需要发送的数据 olebuffer = sealLock('open') break } } let step = Math.ceil(olebuffer.byteLength / 20.0) let buffer let str = '' for (var i = 0; i < step; i++) { if (i == step - 1) { buffer = olebuffer.slice( 20 * i, 20 * i + (olebuffer.byteLength % 20) ) } else { buffer = olebuffer.slice(i * 20, (i + 1) * 20) } str += Uint8ArrayToHex(buffer) this.writeBLECharacteristicValue(buffer.buffer) sleep(100) } } writeBLECharacteristicValue(buffer) { console.log('写入数据中', buffer) uni.writeBLECharacteristicValue({ deviceId: this.deviceId, serviceId: this.sericeId, characteristicId: this.writeId, value: buffer, success: (res) => { console.log('写入数据成功') }, fail: (err) => { this.showToast('写入数据失败', 'error') this.isWriteSuccess = 'error' this.closeBLEConnection() }, }) } // 关闭连接 closeBLEConnection() { uni.closeBLEConnection({ deviceId: this.deviceId, success: (res) => { console.log('关闭设备连接成功', res) }, fail: (err) => { console.log('关闭设备连接失败', err) }, }) } }\"]},\"129\":{\"c\":[\"uniapp\"]},\"130\":{\"c\":[\"蓝牙\"]},\"131\":{\"h\":\"HTML\"},\"132\":{\"h\":\"css 省略号\"},\"133\":{\"h\":\"单行溢出显示省略号\"},\"134\":{\"h\":\"多行溢出显示省略号\"},\"135\":{\"h\":\"省略号显示在文本前\"},\"136\":{\"h\":\"换行\",\"t\":[\"wordBreak:\\\"break-all\\\";\"]},\"137\":{\"c\":[\"html\"]},\"138\":{\"c\":[\"html\"]},\"139\":{\"h\":\"基础\"},\"140\":{\"h\":\"\"},\"141\":{\"h\":\"\"},\"142\":{\"h\":\"\"},\"143\":{\"h\":\"\"},\"144\":{\"h\":\"\"},\"145\":{\"h\":\"\"},\"146\":{\"h\":\"BFC\"},\"147\":{\"h\":\"什么是BFC\",\"t\":[\"Formatting context 是 W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block fomatting context (简称BFC)和 Inline formatting context (简称IFC)。Block formatting context直译为\\\"块级格式化上下文\\\"。它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。通俗地讲，BFC是一个容器，用于管理块级元素。\"]},\"148\":{\"h\":\"如何创建BFC\",\"t\":[\"float为 left|right\",\"overflow为 hidden|auto|scroll\",\"display为 table-cell|table-caption|inline-block|inline-flex|flex\",\"position为 absolute|fixed\",\"根元素\"]},\"149\":{\"h\":\"布局规则\",\"t\":[\"内部的Box会在垂直方向，一个接一个地放置(即块级元素独占一行)。\",\"BFC的区域不会与float box重叠(利用这点可以实现自适应两栏布局)。\",\"内部的Box垂直方向的距离由margin决定。属于同一个BFC的两个相邻Box的margin会发生重叠(margin重叠三个条件:同属于一个BFC;相邻;块级元素)。\",\"计算BFC的高度时，浮动元素也参与计算。（清除浮动 haslayout）\",\"BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。\"]},\"150\":{\"h\":\"特性\"},\"151\":{\"h\":\"BFC会阻止垂直外边距折叠\",\"t\":[\"按照BFC的定义，只有同属于一个BFC时，两个元素才有可能发生垂直margin的重叠，这个包括相邻元素或者嵌套元素，只要他们之间没有阻挡（比如边框、非空内容、padding等）就会发生margin重叠。\",\"相邻兄弟元素margin重叠问题\",\"上面例中两个P元素之间距离本该为200px,然而实际上只有100px,发生了margin重叠。遇到这种情形，我们如何处理？ 只需要在p外面包裹一层容器，并触发该容器生成一个BFC。那么两个P便不属于同一个BFC，就不会发生margin重叠了。\",\"父子元素margin重叠问题\",\"上图wrap元素与h1元素之间理论上本该有个40px的上下margin值,然而实际上父子元素并没有存在margin值，与此同时，两个div元素的间距为40px。遇到这种情形，我们如何处理？\",\"处理方法其实有很多，在wrap元素中添加:overflow:hidden;或者overflow：auto；使其父元素形成一个BFC；也可以在wrap元素中添加border：1px solid；或是padding：1px；这些都可以有效解决父子元素margin重叠问题。\"]},\"152\":{\"h\":\"BFC不会重叠浮动元素\",\"t\":[\"文字围绕着浮动元素排列，不过在这里，这显然不是我们想要的。此时我们可以为.box2元素的样式加上overflow:hidden；使其建立一个BFC,让其内容消除对外界浮动元素的影响。\"]},\"153\":{\"h\":\"清除浮动\",\"t\":[\"由于容器内两个div元素浮动，脱离了文档流，父容器内容宽度为零（即发生高度塌陷），未能将子元素包裹住。解决这个问题，只需要把把父元素变成一个BFC就行了。常用的办法是给父元素设置overflow:hidden。\"]},\"154\":{\"c\":[\"CSS\"]},\"155\":{\"c\":[\"BFC\"]},\"156\":{\"h\":\"常见布局\"},\"157\":{\"h\":\"单列布局\"},\"158\":{\"h\":\"两列自适应布局\",\"t\":[\"两列自适应布局是指一列由内容撑开，另一列撑满剩余宽度的布局方式\"]},\"159\":{\"h\":\"三栏布局\",\"t\":[\"中间列自适应宽度，旁边两侧固定宽度\",\"缺点\",\"center 部分的最小宽度不能小于 left 部分的宽度，否则会 left 部分掉到下一行\",\"如果其中一列内容高度拉长，其他两列的背景并不会自动填充。\"]},\"160\":{\"h\":\"等高布局\",\"t\":[\"等高布局是指子元素在父元素中高度相等的布局方式\"]},\"161\":{\"h\":\"粘连布局\",\"t\":[\"有一块内容<main>，当<main>的高康足够长的时候，紧跟在<main>后面的元素<footer>会跟在<main>元素的后面。\",\"当<main>元素比较短的时候(比如小于屏幕的高度),我们期望这个<footer>元素能够“粘连”在屏幕的底部\"]},\"162\":{\"c\":[\"CSS\"]},\"163\":{\"c\":[\"布局\"]},\"164\":{\"h\":\"水平垂直居中\"},\"165\":{\"h\":\"定位(absolute) + 负margin\",\"t\":[\".wp { position: relative; } .box { position: absolute;; top: 50%; left: 50%; margin-left: -50px; margin-top: -50px; }\"]},\"166\":{\"h\":\"定位(absolute) + margin auto\",\"t\":[\".wp { position: relative; } .box { position: absolute;; top: 0; left: 0; right: 0; bottom: 0; margin: auto; }\"]},\"167\":{\"h\":\"定位(absolute) + calc\",\"t\":[\".wp { position: relative; } .box { position: absolute;; top: calc(50% - 50px); left: calc(50% - 50px); }\"]},\"168\":{\"h\":\"定位(absolute) + transform\",\"t\":[\".wp { position: relative; } .box { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); }\"]},\"169\":{\"h\":\"flex\",\"t\":[\".wp { display: flex; justify-content: center; align-items: center; }\"]},\"170\":{\"h\":\"flex + margin\",\"t\":[\".wp { display: flex; } .box { margin: auto; }\"]},\"171\":{\"h\":\"lineheight\",\"t\":[\".wp { line-height: 300px; text-align: center; font-size: 0px; } .box { font-size: 16px; display: inline-block; vertical-align: middle; line-height: initial; text-align: left; /* 修正文字 */ }\"]},\"172\":{\"h\":\"table\",\"t\":[\"<table> <tbody> <tr> <td class=\\\"wp\\\"> <div class=\\\"box\\\">123123</div> </td> </tr> </tbody> </table>\",\".wp { text-align: center; } .box { display: inline-block; }\"]},\"173\":{\"h\":\"css-table\",\"t\":[\".wp { display: table-cell; text-align: center; vertical-align: middle; } .box { display: inline-block; }\"]},\"174\":{\"h\":\"grid\",\"t\":[\".wp { display: grid; } .box { align-self: center; justify-self: center; }\"]},\"175\":{\"c\":[\"CSS\"]},\"176\":{\"c\":[\"布局\"]},\"177\":{\"h\":\"清除浮动\"},\"178\":{\"h\":\"特点\",\"t\":[\"浮动的特点，可以用八个字总结：脱标、贴边、字围和收缩。\",\"为了更好说明，请看下图： 当框 1 向左浮动时，它脱离文档流（脱标）并且向左移动（贴边），直到它的左边缘碰到包含框的左边缘。因为它不再处于文档流中，所以它不占据空间，实际上覆盖住了框 2，使框 2 从视图中消失。如果框 2 中有文字，就会围着框 1 排开（字围）。\",\"如果把所有三个框都向左浮动，那么框 1 向左浮动直到碰到包含框，另外两个框向左浮动直到碰到前一个浮动框。\",\"下面着重讲解下第四个特点--收缩\",\"一个浮动的内联元素（比如 span img 标签）不需要设置 display：block 就可以设置宽度。\",\"<style> div{ float: left; background-color: greenyellow; } </style> </head> <body> <div> 这是一段文字 </div> </body>\",\"我们都知道 div 标签是块级元素，会独占一行，然而上面的例子中将 div 设置为左浮后，其宽度不再是占满一行，而是收紧为内部元素的宽度，这就是浮动第四个特征的含义。\"]},\"179\":{\"h\":\"缺点\",\"t\":[\"这就是浮动带来副作用----父容器高度塌陷，于是清理浮动就显着至关重要。\"]},\"180\":{\"h\":\"清理浮动\"},\"181\":{\"h\":\"给浮动元素的父元素添加高度（扩展性不好）\",\"t\":[\"如果一个元素要浮动，那么它的父元素一定要有高度。高度的盒子，才能关住浮动。可以通过直接给父元素设置 height，实际应用中我们不大可能给所有的盒子加高度，不仅麻烦，并且不能适应页面的快速变化；另外一种，父容器的高度可以通过内容撑开（比如 img 图片），实际当中此方法用的比较多。\"]},\"182\":{\"h\":\"clear:both\",\"t\":[\"在最后一个子元素新添加最后一个冗余元素，然后将其设置 clear:both,这样就可以清除浮动。这里强调一点，即在父级元素末尾添加的元素必须是一个块级元素，否则无法撑起父级元素高度。\"]},\"183\":{\"h\":\"伪元素清除浮动\",\"t\":[\"上面那种办法固然可以清除浮动，但是我们不想在页面中添加这些没有意义的冗余元素，此时如何清除浮动吗？ 结合 :after 伪元素和 IEhack ，可以完美兼容当前主流的各大浏览器，这里的 IEhack 指的是触发 hasLayout。\"]},\"184\":{\"h\":\"给父元素使用 overflow:hidden\",\"t\":[\"这种方案让父容器形成了 BFC（块级格式上下文），而 BFC 可以包含浮动，通常用来解决浮动父元素高度坍塌的问题。\",\"BFC 的触发方式\",\"float 为 left | right\",\"overflow 为 hidden | auto | scorll\",\"display 为 table-cell | table-caption | inline-block\",\"position 为 absolute | fixed\",\"这里可以给父元素设置 overflow:auto，但是为了兼容 IE 最好使用 overflow:hidden。\",\"但这种办法有个缺陷：如果有内容出了盒子，用这种方法就会把多的部分裁切掉，所以这时候不能使用。\",\"BFC 的主要特征:\",\"BFC 容器是一个隔离的容器，和其他元素互不干扰；所以我们可以用触发两个元素的 BFC 来解决垂直边距折叠问题。\",\"BFC 不会重叠浮动元素\",\"BFC 可以包含浮动,这可以清除浮动。\"]},\"185\":{\"h\":\"br 标签清浮动\",\"t\":[\"br 标签存在一个属性：clear。这个属性就是能够清除浮动的利器，在 br 标签中设置属性 clear，并赋值 all。即能清除掉浮动。\"]},\"186\":{\"c\":[\"CSS\"]},\"187\":{\"c\":[\"清除浮动\"]},\"188\":{\"h\":\"入门\"},\"189\":{\"h\":\"初始化项目\",\"t\":[\"npm init -y\"]},\"190\":{\"h\":\"安装express\",\"t\":[\"npm i express\"]},\"191\":{\"h\":\"编写代码\",\"t\":[\"// 导入express框架 const express = require('express') const app = express() // 绑定和监听指定主机的端口 app.listen(3007, () => { console.log('Server is running at http://127.0.0.1:3007') })\"]},\"192\":{\"h\":\"安装cros\",\"t\":[\"npm i cors\",\"配置cros\",\"// 导入cros模块 const cors = require('cors') // 配置cros中间件 app.use(cors())\"]},\"193\":{\"h\":\"安装body-parser\",\"t\":[\"npm i body-parser\",\"配置body-parser\",\"// 导入body-parser模块 const bodyParser = require('body-parser') // 配置body-parser中间件 app.use(bodyParser.urlencoded({ extended: false })) app.use(bodyParser.json())\"]},\"194\":{\"c\":[\"Vue\"]},\"195\":{\"c\":[\"express\"]},\"196\":{\"h\":\"数据库\"},\"197\":{\"c\":[\"Vue\"]},\"198\":{\"c\":[\"express\"]},\"199\":{\"h\":\"移动端适配\"},\"200\":{\"h\":\"移动端适配的目的\",\"t\":[\"通常我们在 pc 上看到的页面都是比较大的，在 pc 上访问页面是正常显示的，默认是不会被缩放的，除非是手动进行了缩放，页面才会被放大比例或者是缩小比例显示。但是在移动端是不一样的，如果将一个 pc 端的页面放到手机端进行访问，那么可能出现页面挤到一起、布局错乱或者出现横向滚动条的情况，我们给用户带来不好的体验。还有在屏幕尺寸大小不同的手机上进行访问页面时，页面显示的效果不能合理的展示，我们期望的是在手机屏幕较大时显示的内容比较大一些，手机屏幕小的时候页面的内容也会缩小进行自适应。\",\"因此，移动端适配的目的是在不同尺寸的设备上，页面达到合理的展示（自适应）或者说是能够保持统一效果。\"]},\"201\":{\"h\":\"viewport 的基本概念\",\"t\":[\"通常 viewport 是指视窗、视口，浏览器上(也可能是一个 app 中的 webview)用来显示网页的那部分区域。在移动端和 pc 端视口是不同的，pc 端的视口是浏览器窗口区域，而在移动端有三个不同的视口概念：布局视口、视觉视口、理想视口\",\"布局视口：在浏览器窗口 css 的布局区域，布局视口的宽度限制 css 布局的宽。为了能在移动设备上正常显示那些为 pc 端浏览器设计的网站，移动设备上的浏览器都会把自己默认的 viewport 设为 980px 或其他值，一般都比移动端浏览器可视区域大很多，所以就会出现浏览器出现横向滚动条的情况\",\"视觉视口：用户通过屏幕看到的页面区域，通过缩放查看显示内容的区域，在移动端缩放不会改变布局视口的宽度，当缩小的时候，屏幕覆盖的 css 像素变多，视觉视口变大，当放大的时候，屏幕覆盖的 css 像素变少，视觉视口变小。\",\"理想视口：一般来讲，这个视口其实不是真是存在的，它对设备来说是一个最理想布局视口尺寸，在用户不进行手动缩放的情况下，可以将页面理想地展示。那么所谓的理想宽度就是浏览器（屏幕）的宽度了。\"]},\"202\":{\"h\":\"设置视口\",\"t\":[\"<meta name=\\\"viewport\\\" content=\\\"width=device-width,user-scalable=no,initial-scale=1.0, maximum-scale=1.0,minimum-scale=1.0\\\" />\",\"这行代码大家应该都不陌生，或者说是知道加了这行代码，然后页面的宽度就会跟我的设备宽度一致。，实际上，它就是设置了理想视口，将布局视口的宽度设置成了理想视口（浏览器/设备屏幕的宽度）。\",\"上面说到的视口宽度等均是 css 像素，所以需要简单了解一下几个基本的概念：\",\"css 像素：代码中使用的逻辑像素，衡量页面上的内容大小\",\"设备像素：即物理像素，控制设备显示的单位，与设备、硬件有关\",\"设备独立像素：与设备无关的逻辑像素，不同于设备像素（物理像素），不是真实存在的。\",\"设备像素比：定义设备像素与设备独立像素比的关系 window.devicePixelRatio）设备像素比=物理像素/设备独立像素\",\"分辨率：指的是屏幕上垂直和水平的总物理像素\",\"在 meta 标签中，除了 viewport 这个很重要的属性，用来设置视口的一些行为,还有几个与其搭配一起使用的属性：\",\"属性\",\"含义\",\"取值\",\"width\",\"定义视口的宽度，单位为像素\",\"正整数或设备宽度 device-width\",\"height\",\"定义视口的高度，单位为像素\",\"正整数或 device-height\",\"initial-scale\",\"定义初始缩放值\",\"整数或小数\",\"minimum-scale\",\"定义缩小最小比例，它必须小于或等于 maximum-scale 设置\",\"整数或小数\",\"maximum-scale\",\"定义放大最大比例，它必须大于或等于 minimum-scale 设置\",\"整数或小数\",\"user-scalable\",\"定义是否允许用户手动缩放页面，默认值 yes\",\"yes/no\"]},\"203\":{\"h\":\"适配方案\"},\"204\":{\"h\":\"css3 媒体查询\",\"t\":[\"通过媒体查询的方式，编写适应不同分辨率设备的的 css 样式\",\"@media screen and (max-width: 320px) { /* ....适配iphone4的css样式 */ } @media screen and (max-width: 375px) { /* ....适配iphone6/7/8的css样式 */ } @media screen and (max-width: 414px) { /* ....适配iphone6/7/8 plus的css样式 */ }\",\"优点\",\"方法简单，只需修改 css 文件\",\"调整屏幕宽度时不用刷新页面就可以响应页面布局\",\"缺点\",\"代码量大，不方便维护\",\"不能够完全适配所有的屏幕尺寸，需要编写多套 css 样式\"]},\"205\":{\"h\":\"百分比布局方案\",\"t\":[\"给元素设置百分比，例如 2 个 div 想占满宽度 100%，那么一个 div 设置宽度为 50%，这样不固定宽度，使得在不同的分辨率下都能达到适配\",\"那么需要清楚一个问题，各个子元素或属性的百分比是根据谁来设定呢？\",\"子元素 width、height 的百分比:子元素的 width 或 height 中使用百分比，是相对于子元素的直接父元素\",\"margin 和 padding 的百分比：在垂直方向和水平方向都是相对于直接父亲元素的 width，而与父元素的 height 无关\",\"border-radius 的百分比：border-radius 的百分比是相对于自身宽度，与父元素无关\",\"优点\",\"宽度自适应，在不同的分辨率下都能达到适配\",\"缺点\",\"百分比的值不好计算\",\"需要确定父级的大小，因为要根据父级的大小进行计算\",\"各个属性中如果使用百分比，相对父元素的属性并不是唯一的\",\"高度不好设置，一般需要固定高度\"]},\"206\":{\"h\":\"rem 方案\",\"t\":[\"rem 单位：rem 是一个只相对于浏览器的根元素（HTML 元素）的 font-size 的来确定的单位。默认情况下，html 元素的 font-size 为 12px\",\"通过 rem 来实现适配：rem 单位都是相对于根元素 html 的 font-size 来决定大小的,根元素的 font-size 相当于提供了一个基准，当页面的宽度发生变化时，只需要改变 font-size 的值，那么以 rem 为固定单位的元素的大小也会发生响应的变化。需要先动态设置 html 根元素的 font-size,再计算出其他页面元素以 rem 为固定单位的值\",\"控制 font-size 的 js 代码\",\"<script type=\\\"text/javascript\\\"> ;(function () { var deviceWidth = document.documentElement.clientWidth deviceWidth = deviceWidth < 320 ? 320 : deviceWidth > 640 ? 640 : deviceWidth document.documentElement.style.fontSize = deviceWidth / 7.5 + 'px' })() </script>\",\"上面的 js 代码中 deviceWidth/7.5，表示 font-size 用 deviceWidth/7.5 的值来表示，1rem 的值就是 deviceWidth/7.5，当视口容器发生变化时就可以动态设置 font-size 的大小，不论页面宽度变大还是缩小，视口宽度都会被等分为 7.5 份，每一份就是 1rem,从而 1rem 在不同的视觉容器中表示不同的大小，但在视口总宽度中的占比是不变的，实现了等比适配。\",\"这个 7.5 在这里并不是一个固定的值，也可以设置为其他值，因为设计稿一般是根据 iphone6/7/8 的宽度来设计，一般为 375 或者 750,所以为了方便计算，在这里取 7.5，能够被整除方便后面的计算。\"]},\"207\":{\"h\":\"元素的 rem 值计算\",\"t\":[\".div { display: flex; align-items: center; justify-content: center; width: 2rem; height: 0.96rem; background: #aaa; font-size: 0.24rem; }\",\"假定一个 div 的宽度为 100px,那么在计算时，根据设置的 1rem = 50px，所以 100px=2rem，其他所有的属性值都可以类似这样计算。font-size 一般情况下还是使用 px,因为在 rem 中，只要使用了 rem 单位都会被转换，那么在转换的时候，会出现不能被整除或者出现小数的情况比如 10.333333px，那么在显示时就可能出现一些偏差。而且如果期望在小屏幕下面显示跟大屏幕同等量的字体，但是由于 rem 的等比缩放，在小屏幕下就会存在小屏幕字体更小的情况，所以对于字体的适配更好的做法就是使用 px 和媒体查询来进行适配。\",\"优点\",\"rem 单位是根据根元素 font-size 决定大小，只要改变 font-size 的值，以 rem 为固定单位的元素大小也会发生响应式的改变\",\"缺点\",\"必须通过一段 js 代码控制 font-size 的大小\",\"控制 font-size 的 js 代码必须放在在页面第一次加载完成之前，并且放在引入的 css 样式代码之前。\"]},\"208\":{\"h\":\"vw、vh 方案\",\"t\":[\"css3 中引入与视口有关的新的单位 vw 和 vh，vw 表示相对于视口的宽度，vh 表示相对于视口高度\",\"单位\",\"含义\",\"vw\",\"相对于视口的宽度，视口宽度是 100vw\",\"vh\",\"相对于视口的高度，视口宽度是 100vh\",\"vmin\",\"vw 和 vh 中较小的值\",\"vmax\",\"vw 和 vh 中较大的值\",\"vw 单位换算： 视口宽度为 100vw 占满整个视口区域，那么 1vw 相当于占整个视口宽度的 1%，所以 1px= 1/375*100 vw 所有的页面元素都可以直接进行计算换算成 vw 单位，但是这样计算和百分比方案计算比较类似，都会比较麻烦。\",\"但是有一个比较厉害的插件—— postcss-px-to-viewport，可以预处理 css,将 px 单位转换为 vw 单位，但是需要进行一些相关的 webpack 配置\",\"{ loader: 'postcss-loader', options: { plugins: ()=>[ require('autoprefixer')({ browsers: ['last 5 versions'] }), require('postcss-px-to-viewport')({ viewportWidth: 375, viewportHeight: 1334, unitPrecision: 3, viewportUnit: 'vw', selectorBlackList: ['.ignore', '.hairlines'], minPixelValue: 1, mediaQuery: false }) ] }\",\"接下来是对 postcss-px-to-viewport 配置中的属性的介绍：\",\"单位\",\"含义\",\"viewportWidth\",\"视口宽度（数字）\",\"viewportHeight\",\"视口高度（数字）\",\"unitPrecision\",\"设置的保留小数位数（数字）\",\"viewportUnit\",\"设置要转换的单位（字符串）\",\"selectorBlackList\",\"不需要进行转换的类名（数组）\",\"minPixelValue\",\"设置要替换的最小像素值（数字）\",\"mediaQuery\",\"允许在媒体查询中转换 px（true/false）\",\"优点\",\"指定vw\\\\vh相对与视口的宽高，由px换算单位成vw单位比较简单\",\"通过postcss-px-to-viewport插件进行单位转换比较方便\",\"缺点\",\"直接进行单位换算时百分比可能出现小数,计算不方便\",\"兼容性- 大多数浏览器都支持、ie11不支持 少数低版本手机系统 ios8、android4.4以下不支持\"]},\"209\":{\"c\":[\"HTML\"]},\"210\":{\"c\":[\"移动端\"]},\"211\":{\"h\":\"语义化与SEO\"},\"212\":{\"h\":\"语义化\"},\"213\":{\"h\":\"理解\",\"t\":[\"Web语义化是指使用恰当语义的html标签、class类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。语义化的web页面一方面可以让机器在更少的人类干预情况下收集并研究网页的信息，从而可以读懂网页的内容，然后将收集汇总的信息进行分析，结果为人类所用；另一方面它可以让开发人员读懂结构和用户以及屏幕阅读器（如果访客有视障）能够读懂内容。 简单来说就是利于 SEO，便于阅读维护理解。\"]},\"214\":{\"h\":\"优点\",\"t\":[\"有利于开发者的维护和理解；\",\"有利于机器对文档内容进行正确的解读；\",\"有利于搜索引擎爬虫正确的读取内容，优化SEO；\",\"有利于即使样式表丢失，网页仍能维持基本的内容供给用户阅读；\"]},\"215\":{\"h\":\"html语义化\",\"t\":[\"HTML为网页文档内容提供上下文结构和含义。对于HTML体系而言，Web语义化是指使用语义恰当的标签，使页面有良好的结构，让页面元素有含义，便于被浏览器、搜索引擎解析、利于SEO。通常我们所说的HTML应该是完全脱离表现信息的，其中的标签应该都是语义化地定义了文档的结构。 代码示例：\",\"<html> <body> <article> <header> <h1>h1 - WEB 语义化</h1> </header> <nav> <ul> <li>nav1 - HTML语义化</li> <li>nav2 - CSS语义化</li> </ul> </nav> <section> section1 - HTML语义化 </section> <section> section2 - CSS语义化 </section> <time datetime=\\\"2018-03-23\\\" pubdate>time - 2018年03月23日</time> <footer> footer - by 小维</footer> </article> </body> </html>\",\"标签\",\"描述\",\"<article>\",\"定义文章。\",\"<aside>\",\"定义页面内容以外的内容。\",\"<details>\",\"定义用户能够查看或隐藏的额外细节。\",\"<figcaption>\",\"定义<figure>元素的标题。\",\"<figure>\",\"规定自包含内容，比如图示、图表、照片、代码清单等。\",\"<footer>\",\"定义文档或节的页脚。\",\"<header>\",\"规定文档或节的页眉。\",\"<main>\",\"规定文档的主内容。\",\"<mark>\",\"定义重要的或强调的文本。\",\"<nav>\",\"定义导航链接。\",\"<section>\",\"定义文档中的节。\",\"<summary>\",\"定义 <details> 元素的可见标题。\",\"<time>\",\"定义日期/时间。\"]},\"216\":{\"h\":\"CSS语义化\",\"t\":[\"CSS语义就是class和ID命名的语义。class属性作为HTML与CSS衔接的纽带，其本意是用来描述元素内容的。指用易于理解的名称对html标签附加的class或id命名。如果说HTML语义化标签是给机器看的，那么CSS命名的语义化就是给人看的。良好的CSS命名方式减少沟通调试成本，易于理解。\"]},\"217\":{\"h\":\"SEO\",\"t\":[\"SEO（Search Engine Optimization），搜索引擎优化。百度百科对其的解释是一种方式：利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名。目的是让其在行业内占据领先地位，获得品牌收益。很大程度上是网站经营者的一种商业行为，将自己或自己公司的排名前移。\",\"搜索引擎是怎么工作的呢？主要分为以下三个步骤：\",\"爬行抓取，网络爬虫通过特定规则跟踪网页的链接，从一个链接爬到另一个链接，把爬行的数据存入本地数据库\",\"使用索引器对数据库中重要信息进行处理，如标题、关键字、摘要，或者进行全文索引，在索引数据库中，网页文字内容，关键词出现的位置、字体、颜色、加粗、斜体等相关信息都有相应记录。\",\"索引器将用户提交的搜索词与数据中的信息进行匹配，从索引数据库中找出所有包含搜索词的网页，并且根据排名算法计算出哪些网页应该排在前面，然后按照一定格式返回给用户\",\"从图中，可以看到，爬虫的爬取首先选取一部分精心挑选的种子URL，将这些URL放入待抓取URL队列，从待抓取URL队列中取出待抓取在URL，解析DNS，并且得到主机的ip，并将URL对应的网页下载下来，存储进已下载网页库中。此外，将这些URL放进已抓取URL队列。分析已抓取URL队列中的URL，分析其中的其他URL，并且将URL放入待抓取URL队列，从而进入下一个循环。这就需要让我们考虑，怎样才能让爬虫更多的爬取到我们的网站。\"]},\"218\":{\"h\":\"权重\",\"t\":[\"网页内容\",\"权重分数\",\"内部链接文字\",\"10\",\"标题title\",\"10\",\"域名\",\"7\",\"H1，H2字号标题\",\"5\",\"路径或文件名\",\"4\",\"title属性：（不是<title>，是A标签中title属性）\",\"1\",\"加粗或斜体\",\"1\",\"alt标记\",\"0.5\"]},\"219\":{\"h\":\"优化\",\"t\":[\"突出重要内容---合理的设计title、description和keywords\",\"语义化书写HTML代码，符合W3C标准\",\"图片img标签添加alt和title属性\",\"链接<a>页内标签添加title属性\",\"使用h1标签自带权重\"]},\"220\":{\"c\":[\"HTML\"]},\"221\":{\"c\":[\"语义化\"]},\"222\":{\"h\":\"重绘与重排\"},\"223\":{\"h\":\"重绘与回流\",\"t\":[\"重绘：当我们对 DOM 的修改导致了样式的变化、却并未影响其几何属性（比如修改了颜色或背景色）时，浏览器不需重新计算元素的几何属性、直接为该元素绘制新的样式（跳过了上图所示的回流环节）。\",\"重排：当我们对 DOM 的修改引发了 DOM 几何尺寸的变化（比如修改元素的宽、高或隐藏元素等）时，浏览器需要重新计算元素的几何属性（其他元素的几何属性和位置也会因此受到影响），然后再将计算的结果绘制出来。这个过程就是重排\",\"我们知道，当网页生成的时候，至少会渲染一次。在用户访问的过程中，还会不断重新渲染。重新渲染会重复重排+重绘或者只有重绘。 重排必定会发生重绘，重绘不一定会引发重排。重绘和重排会在我们设置节点样式时频繁出现，同时也会很大程度上影响性能。重排所需的成本比重绘高的多，改变父节点里的子节点很可能会导致父节点的一系列回流。\"]},\"224\":{\"h\":\"常见引起重排属性和方法\",\"t\":[\"任何会改变元素几何信息(元素的位置和尺寸大小)的操作，都会触发重排，\",\"添加或者删除可见的DOM元素；\",\"元素尺寸改变——边距、填充、边框、宽度和高度\",\"内容变化，比如用户在input框中输入文字\",\"浏览器窗口尺寸改变——resize事件发生时\",\"计算 offsetWidth 和 offsetHeight 属性\",\"设置 style 属性的值\"]},\"225\":{\"h\":\"常见引起重绘属性和方法\"},\"226\":{\"h\":\"如何减少重排、重绘\",\"t\":[\"使用 transform 替代 top\",\"使用 visibility 替换 display: none ，因为前者只会引起重绘，后者会引发回流（改变了布局）\",\"不要把节点的属性值放在一个循环里当成循环里的变量。\",\"for(let i = 0; i < 1000; i++) { // 获取 offsetTop 会导致回流，因为需要去获取正确的值 console.log(document.querySelector('.test').style.offsetTop) }\",\"不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局\",\"动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用 requestAnimationFrame\",\"CSS 选择符从右往左匹配查找，避免节点层级过多\",\"将频繁重绘或者回流的节点设置为图层，图层能够阻止该节点的渲染行为影响别的节点。比如对于 video 标签来说，浏览器会自动将该节点变为图层。\"]},\"227\":{\"c\":[\"HTML\"]},\"228\":{\"c\":[\"页面渲染\"]},\"229\":{\"h\":\"DOM事件机制\"},\"230\":{\"h\":\"DOM 事件级别\",\"t\":[\"DOM 级别一共可以分为四个级别：DOM0 级、DOM1 级、DOM2 级和 DOM3 级。而 DOM 事件分为 3 个级别：DOM 0 级事件处理，DOM 2 级事件处理和 DOM 3 级事件处理。由于 DOM 1 级中没有事件的相关内容，所以没有 DOM 1 级事件。\"]},\"231\":{\"h\":\"DOM 0 级事件\",\"t\":[\"el.onclick=function(){}\",\"// 例1 var btn = document.getElementById('btn') btn.onclick = function () { alert(this.innerHTML) }\",\"当希望为同一个元素/标签绑定多个同类型事件的时候（如给上面的这个 btn 元素绑定 3 个点击事件），是不被允许的。DOM0 事件绑定，给元素的事件行为绑定方法，这些方法都是在当前元素事件行为的冒泡阶段(或者目标阶段)执行的。\"]},\"232\":{\"h\":\"DOM 2 级事件\",\"t\":[\"el.addEventListener(event-name, callback, useCapture)\",\"event-name: 事件名称，可以是标准的 DOM 事件\",\"callback: 回调函数，当事件触发时，函数会被注入一个参数为当前的事件对象 event\",\"useCapture: 默认是 false，代表事件句柄在冒泡阶段执行\",\"// 例2 var btn = document.getElementById('btn') btn.addEventListener('click', test, false) function test(e) { e = e || window.event alert((e.target || e.srcElement).innerHTML) btn.removeEventListener('click', test) } //IE9-:attachEvent()与detachEvent()。 //IE9+/chrom/FF:addEventListener()和removeEventListener()\",\"IE9 以下的 IE 浏览器不支持 addEventListener()和 removeEventListener()，使用 attachEvent()与 detachEvent() 代替，因为 IE9 以下是不支持事件捕获的，所以也没有第三个参数，第一个事件名称前要加 on。\"]},\"233\":{\"h\":\"DOM 3 级事件\",\"t\":[\"在 DOM 2 级事件的基础上添加了更多的事件类型。\",\"UI 事件，当用户与页面上的元素交互时触发，如：load、scroll\",\"焦点事件，当元素获得或失去焦点时触发，如：blur、focus\",\"鼠标事件，当用户通过鼠标在页面执行操作时触发如：dblclick、mouseup\",\"滚轮事件，当使用鼠标滚轮或类似设备时触发，如：mousewheel\",\"文本事件，当在文档中输入文本时触发，如：textInput\",\"键盘事件，当用户通过键盘在页面上执行操作时触发，如：keydown、keypress\",\"合成事件，当为 IME（输入法编辑器）输入字符时触发，如：compositionstart\",\"变动事件，当底层 DOM 结构发生变化时触发，如：DOMsubtreeModified\",\"同时 DOM3 级事件也允许使用者自定义一些事件。\"]},\"234\":{\"h\":\"DOM 事件模型和事件流\",\"t\":[\"DOM 事件模型分为捕获和冒泡。一个事件发生后，会在子元素和父元素之间传播（propagation）。这种传播分成三个阶段。\",\"（1）捕获阶段：事件从 window 对象自上而下向目标节点传播的阶段；\",\"（2）目标阶段：真正的目标节点正在处理事件的阶段；\",\"（3）冒泡阶段：事件从目标节点自下而上向 window 对象传播的阶段。\",\"DOM 事件捕获的具体流程\",\"捕获是从上到下，事件先从 window 对象，然后再到 document（对象），然后是 html 标签（通过 document.documentElement 获取 html 标签），然后是 body 标签（通过 document.body 获取 body 标签），然后按照普通的 html 结构一层一层往下传，最后到达目标元素。\",\"而事件冒泡的流程刚好是事件捕获的逆过程。 接下来我们看个事件冒泡的例子：\",\"// 例3 <div id=\\\"outer\\\"> <div id=\\\"inner\\\"></div> </div>\",\"...... window.onclick = function() { console.log('window'); }; document.onclick = function() { console.log('document'); }; document.documentElement.onclick = function() { console.log('html'); }; document.body.onclick = function() { console.log('body'); } outer.onclick = function(ev) { console.log('outer'); }; inner.onclick = function(ev) { console.log('inner'); }; // inner // outer // body // html // document // window\"]},\"235\":{\"h\":\"事件代理(事件委托)\",\"t\":[\"由于事件会在冒泡阶段向上传播到父节点，因此可以把子节点的监听函数定义在父节点上，由父节点的监听函数统一处理多个子元素的事件。这种方法叫做事件的代理（delegation）。\"]},\"236\":{\"h\":\"优点\",\"t\":[\"减少内存消耗，提高性能\",\"假设有一个列表，列表之中有大量的列表项，我们需要在点击每个列表项的时候响应一个事件\",\"// 例4 <ul id=\\\"list\\\"> <li>item 1</li> <li>item 2</li> <li>item 3</li> <li>item n</li> </ul>\",\"如果给每个列表项一一都绑定一个函数，那对于内存消耗是非常大的，效率上需要消耗很多性能。借助事件代理，我们只需要给父容器 ul 绑定方法即可，这样不管点击的是哪一个后代元素，都会根据冒泡传播的传递机制，把容器的 click 行为触发，然后把对应的方法执行，根据事件源，我们可以知道点击的是谁，从而完成不同的事。\",\"动态绑定事件\",\"在很多时候，我们需要通过用户操作动态的增删列表项元素，如果一开始给每个子元素绑定事件，那么在列表发生变化时，就需要重新给新增的元素绑定事件，给即将删去的元素解绑事件，如果用事件代理就会省去很多这样麻烦。\"]},\"237\":{\"h\":\"如何实现\",\"t\":[\"接下来我们来实现上例中父层元素 #list 下的 li 元素的事件委托到它的父层元素上：\",\"// 给父层元素绑定事件 document.getElementById('list').addEventListener('click', function (e) { // 兼容性处理 var event = e || window.event var target = event.target || event.srcElement // 判断是否匹配目标元素 if (target.nodeName.toLocaleLowerCase === 'li') { console.log('the content is: ', target.innerHTML) } })\"]},\"238\":{\"h\":\"Event 对象常见的应用\"},\"239\":{\"h\":\"event.preventDefault()\",\"t\":[\"如果调用这个方法，默认事件行为将不再触发。什么是默认事件呢？例如表单一点击提交按钮(submit)跳转页面、a 标签默认页面跳转或是锚点定位等。\",\"很多时候我们使用 a 标签仅仅是想当做一个普通的按钮，点击实现一个功能，不想页面跳转，也不想锚点定位。\",\"<!-- 方法一 --> <a href=\\\"javascript:;\\\">链接</a>\",\"也可以通过 JS 方法来阻止，给其 click 事件绑定方法，当我们点击 A 标签的时候，先触发 click 事件，其次才会执行自己的默认行为\",\"//方法二: <a id=\\\"test\\\" href=\\\"http://www.cnblogs.com\\\">链接</a> <script> test.onclick = function (e) { e = e || window.event return false } </script>\",\"//方法三： <a id=\\\"test\\\" href=\\\"http://www.cnblogs.com\\\">链接</a> <script> test.onclick = function (e) { e = e || window.event e.preventDefault() } </script>\",\"接下来我们看个例子：输入框最多只能输入六个字符，如何实现？\",\"// 例5 <input type=\\\"text\\\" id=\\\"tempInp\\\" /> <script> tempInp.onkeydown = function (ev) { ev = ev || window.event let val = this.value.trim() //trim去除字符串首位空格（不兼容） // this.value=this.value.replace(/^ +| +$/g,'') 兼容写法 let len = val.length if (len >= 6) { this.value = val.substr(0, 6) //阻止默认行为去除特殊按键（DELETE\\\\BACK-SPACE\\\\方向键...） let code = ev.which || ev.keyCode if (!/^(46|8|37|38|39|40)$/.test(code)) { ev.preventDefault() } } } </script>\"]},\"240\":{\"h\":\"event.stopPropagation() & event.stopImmediatePropagation()\",\"t\":[\"event.stopPropagation() 方法阻止事件冒泡到父元素，阻止任何父事件处理程序被执行。上面提到事件冒泡阶段是指事件从目标节点自下而上向 window 对象传播的阶段。 我们在例 4 的 inner 元素 click 事件上，添加 event.stopPropagation()这句话后，就阻止了父事件的执行，最后只打印了'inner'。\",\"inner.onclick = function (ev) { console.log('inner') ev.stopPropagation() }\",\"stopImmediatePropagation 既能阻止事件向父元素冒泡，也能阻止元素同事件类型的其它监听器被触发。而 stopPropagation 只能实现前者的效果。我们来看个例子：\",\"<body> <button id=\\\"btn\\\">click me to stop propagation</button> </body> <script> const btn = document.querySelector('#btn') btn.addEventListener('click', (event) => { console.log('btn click 1') event.stopImmediatePropagation() }) btn.addEventListener('click', (event) => { console.log('btn click 2') }) document.body.addEventListener('click', () => { console.log('body click') }) </script> // btn click 1\",\"如上所示，使用 stopImmediatePropagation 后，点击按钮时，不仅 body 绑定事件不会触发，与此同时按钮的另一个点击事件也不触发。\"]},\"241\":{\"h\":\"event.target & event.currentTarget\",\"t\":[\"<div id=\\\"a\\\"> <div id=\\\"b\\\"> <div id=\\\"c\\\"> <div id=\\\"d\\\"></div> </div> </div> </div> <script> document.getElementById('a').addEventListener('click', function (e) { console.log( 'target:' + e.target.id + '&currentTarget:' + e.currentTarget.id ) }) document.getElementById('b').addEventListener('click', function (e) { console.log( 'target:' + e.target.id + '&currentTarget:' + e.currentTarget.id ) }) document.getElementById('c').addEventListener('click', function (e) { console.log( 'target:' + e.target.id + '&currentTarget:' + e.currentTarget.id ) }) document.getElementById('d').addEventListener('click', function (e) { console.log( 'target:' + e.target.id + '&currentTarget:' + e.currentTarget.id ) }) </script>\",\"当我们点击最里层的元素 d 的时候，会依次输出:\",\"target:d&currentTarget:d target:d&currentTarget:c target:d&currentTarget:b target:d&currentTarget:a\",\"从输出中我们可以看到，event.target指向引起触发事件的元素，而event.currentTarget则是事件绑定的元素，只有被点击的那个目标元素的event.target才会等于event.currentTarget。也就是说，event.currentTarget始终是监听事件者，而event.target是事件的真正发出者。\"]},\"242\":{\"c\":[\"Javascript\"]},\"243\":{\"c\":[\"事件机制\"]},\"244\":{\"h\":\"ES6-ES11\"},\"245\":{\"h\":\"一、ES6 新特性（2015）\"},\"246\":{\"h\":\"1. let 和 const\",\"t\":[\"在 ES6 中，新增了 let 和 const 关键字，其中 let 主要用来声明变量，而 const 通常用来声明常量。let、const 相对于 var 关键字有以下特点：\",\"这里主要介绍其中的四点：\"]},\"247\":{\"h\":\"（1）重新赋值\",\"t\":[\"const 关键字声明的变量是“不可修改”的。其实，const 保证的并不是变量的值不能改动，而是变量指向的那个内存地址不能改动。对于基本类型的数据（数值、字符串、布尔值），其值就保存在变量指向的那个内存地址，因此等同于常量。但对于引用类型的数据（主要是对象和数组），变量指向数据的内存地址，保存的只是一个指针，const 只能保证这个指针是不变的，至于它指向的数据结构就不可控制了。\"]},\"248\":{\"h\":\"（2）块级作用域\",\"t\":[\"在引入 let 和 const 之前是不存在块级作用域的说法的，这也就导致了很多问题，比如内层变量会覆盖外层的同名变量：\",\"var a = 1 if (true) { var a = 2 } console.log(a) // 输出结果：2\",\"循环变量会泄漏为全局变量：\",\"var arr = [1, 2, 3] for (var i = 0; i < arr.length; i++) { console.log(arr[i]) // 输出结果：1 2 3 } console.log(i) // 输出结果：3\",\"而通过 let 和 const 定义的变量存在块级作用域，就不会产生上述问题：\",\"let a = 1 if (true) { let a = 2 } console.log(a) // 输出结果：1 const arr = [1, 2, 3] for (let i = 0; i < arr.length; i++) { console.log(arr[i]) // 输出结果：1 2 3 } console.log(i) // Uncaught ReferenceError: i is not defined\"]},\"249\":{\"h\":\"（3）变量提升\",\"t\":[\"我们知道，在 ES6 之前是存在变量提升的，所谓的变量提升就是变量可以在声明之前使用：\",\"console.log(a) // 输出结果：undefined var a = 1\",\"变量提升的本质是 JavaScript 引擎在执行代码之前会对代码进行编译分析，这个阶段会将检测到的变量和函数声明添加到 JavaScript 引擎中名为 Lexical Environment 的内存中，并赋予一个初始化值 undefined。然后再进入代码执行阶段。所以在代码执行之前，JS 引擎就已经知道声明的变量和函数。\",\"这种现象就不太符合我们的直觉，所以在 ES6 中，let 和 const 关键字限制了变量提升，let 定义的变量添加到 Lexical Environment 后不再进行初始化为 undefined 操作，JS 引擎只会在执行到词法声明和赋值时才进行初始化。而在变量创建到真正初始化之间的时间跨度内，它们无法访问或使用，ES6 将其称之为暂时性死区：\",\"// 暂时性死区 开始 a = 'hello' // Uncaught ReferenceError: Cannot access 'a' before initialization let a // 暂时性死区 结束 console.log(a) // undefined\"]},\"250\":{\"h\":\"（4）重复声明\",\"t\":[\"在 ES6 之前，var 关键字声明的变量对于一个作用域内变量的重复声明是没有限制的，甚至可以声明与参数同名变量，以下两个函数都不会报错：\",\"function funcA() { var a = 1 var a = 2 } function funcB(args) { var args = 1 }\",\"而 let 修复了这种不严谨的设计：\",\"function funcA() { let a = 1 let a = 2 // Uncaught SyntaxError: Identifier 'a' has already been declared } function funcB(args) { let args = 1 // Uncaught SyntaxError: Identifier 'args' has already been declared }\",\"现在我们项目中已经完全放弃了 var，而使用 let 来定义变量，使用 const 来定义常量。在 ESlint 开启了如下规则：\",\"\\\"no-var\\\": 0;\"]},\"251\":{\"h\":\"2. 解构赋值\",\"t\":[\"ES6 中还引入了解构赋值的概念，解构赋值遵循“模式匹配”，即只要等号两边的模式相等，左边的变量就会被赋予对应的值。不同类型数据的解构方式不同，下面就分别来看看不同类型数据的解构方式。\",\"平时在开发中，我主要会用到对象的解构赋值，比如在 React 中解构 porps 值等，使用解构赋值来获取父组件传来的值；在 React Hooks 中的 useState 使用到了数组的解构赋值；\"]},\"252\":{\"h\":\"（1）数组解构\",\"t\":[\"具有 Iterator 接口的数据结构，都可以采用数组形式的解构赋值。\",\"const [foo, [[bar], baz]] = [1, [[2], 3]] console.log(foo, bar, baz) // 输出结果：1 2 3\",\"这里，ES6 实现了对数组的结构，并依次赋值变量 foo、bar、baz。数组的解构赋值按照位置将值与变量对应。\",\"数组还可以实现不完全解构，只解构部分内容：\",\"const [x, y] = [1, 2, 3] // 提取前两个值 const [, y, z] = [1, 2, 3] // 提取后两个值 const [x, , z] = [1, 2, 3] // 提取第一三个值\",\"如果解构时对应的位置没有值就会将变量赋值为 undefined：\",\"const [x, y, z] = [1, 2]; console.log(z） // 输出结果：undefined\",\"数组解构赋值可以使用 rest 操作符来捕获剩余项：\",\"const [x, ...y] = [1, 2, 3] console.log(x) // 输出结果：1 console.log(y) // 输出结果：[2, 3]\",\"在解构时还支持使用默认值，当对应的值为 undefined 时才会使用默认值：\",\"const [x, y, z = 3] = [1, 2]; console.log(z） // 输出结果：3\"]},\"253\":{\"h\":\"（2）对象解构\",\"t\":[\"对象的解构赋值的本质其实是先找到同名的属性，在赋值给对应的变量：\",\"let { foo, bar } = { foo: 'aaa', bar: 'bbb' } console.log(foo, bar) // 输出结果：aaa bbb\",\"需要注意的是，在 JavaScript 中，对象的属性是没有顺序的。所以，在解构赋值时，变量必须与属性同名才能去取到值。\",\"对象的解构赋值也是支持默认值的，当定义的变量在对象中不存在时，其默认值才会生效：\",\"let { foo, bar, baz = 'ccc' } = { foo: 'aaa', bar: 'bbb', baz: null } console.log(foo, bar, baz) // 输出结果：aaa bbb null let { foo, bar, baz = 'ccc' } = { foo: 'aaa', bar: 'bbb' } console.log(foo, bar, baz) // 输出结果：aaa bbb ccc\",\"可以看到，只有定义的变量是严格的===undefined 时，它的默认值才会生效。\",\"除此之外，我们还需要注意，不能给已声明的变量进行赋值，因为当缺少 let、const、var 关键词时，将会把 {baz} 理解为代码块从而导致语法错误，所以下面代码会报错：\",\"let baz; { baz } = { foo: 'aaa', bar: 'bbb', baz: 'ccc' };\",\"可以使用括号包裹整个解构赋值语句来解决上述问题：\",\"let baz ;({ baz } = { foo: 'aaa', bar: 'bbb', baz: 'ccc' }) console.log(baz)\",\"在对象的解构赋值中，可以将现有对象的方法赋值给某个变量，比如：\",\"let { log, sin, cos } = Math log(12) // 输出结果：2.4849066497880004 sin(1) // 输出结果：0.8414709848078965 cos(1) // 输出结果：0.5403023058681398\"]},\"254\":{\"h\":\"（3）其他解构赋值\",\"t\":[\"剩下的几种解构赋值，目前我在项目中应用的较少，来简单看一下。\",\"字符串解构 字符串解构规则：只要等号右边的值不是对象或数组，就先将其转为类数组对象，在进行解构：\",\"const [a, b, c, d, e] = 'hello' console.log(a, b, c, d, e) // 输出结果：h e l l o\",\"类数组对象有 length 属性，因此可以给这个属性进行解构赋值：\",\"let { length } = 'hello' // 输出结果： 5\",\"数值和布尔值解构赋值 对数值和布尔值进行解构时，它们将会先被转为对象，然后再应用解构语法：\",\"let { toString: s } = 123 s === Number.prototype.toString // 输出结果：true let { toString: s } = true s === Boolean.prototype.toString // 输出结果：true\",\"注意 null 和 undefined 不能转换为对象，所以如果右边是这两个值，就会报错。\",\"函数参数解构赋值 函数参数表面上是一个数组，在传入参数的那一刻，就会被解构为 x 和 y。\",\"function add([x, y]) { return x + y } add([1, 2]) // 3\",\"除此之外，我们还可以解构函数的返回值：\",\"function example() { return [1, 2, 3] } let [a, b, c] = example()\"]},\"255\":{\"h\":\"3. 模板字符串\",\"t\":[\"传统的 JavaScript 语言中，输出模板经常使用的是字符串拼接的形式，这样写相当繁琐，在 ES6 中引入了模板字符串的概念来解决以上问题。\",\"模板字符串是增强版的字符串，用反引号``来标识，他可以用来定义单行字符串，也可以定义多行字符串，或者在字符串中嵌入变量。\",\"// 字符串中嵌入变量 let name = \\\"Bob\\\", time = \\\"today\\\"; `Hello ${name}, how are you ${time}?` // 字符串中调用函数 ` ${fn()}\",\"在平时的开发中，除了上面代码中的应用，很多地方会用到模板字符串，比如拼接一个 DOM 串，在 Emotion/styled 中定义 DOM 结构等，都会用到模板字符串。不过在模板字符串中定义 DOM 元素就不会有代码提示了。\",\"在使用模板字符串时，需要注意以下几点：\",\"如果在字符串中使用反引号，需要使用\\\\来转义；\",\"如果在多行字符串中有空格和缩进，那么它们都会被保留在输出中；\",\"模板字符串中嵌入变量，需要将变量名写在${}之中；\",\"模板字符串中可以放任意的表达式，也可以进行运算，以及引用对象的属性，甚至可以调用函数；\",\"如果模板字符中的变量没有声明，会报错。\"]},\"256\":{\"h\":\"4. 函数默认参数\",\"t\":[\"在 ES6 之前，函数是不支持默认参数的，ES6 实现了对此的支持，并且只有不传入参数时才会触发默认值：\",\"function getPoint(x = 0, y = 0) { console.log(x, y) } getPoint(1, 2) // 1 2 getPoint() // 0 0 getPoint(1) // 1 0\",\"当使用函数默认值时，需要注意以下几点：\"]},\"257\":{\"h\":\"（1）函数 length 属性值\",\"t\":[\"函数 length 属性通常用来表示函数参数的个数，当引入函数默认值之后，length 表示的就是第一个有默认值参数之前的普通参数个数：\",\"const funcA = function (x, y) {} console.log(funcA.length) // 输出结果：2 const funcB = function (x, y = 1) {} console.log(funcB.length) // 输出结果：1 const funcC = function (x = 1, y) {} console.log(funcC.length) // 输出结果 0\"]},\"258\":{\"h\":\"（2）参数作用域\",\"t\":[\"当给函数的参数设置了默认值之后，参数在被初始化时将形成一个独立作用域，初始化完成后作用域消解：\",\"let x = 1 function func(x, y = x) { console.log(y) } func(2)\",\"这里最终会打印出 2。在函数调用时，参数 x, y 将形成一个独立的作用域，所以参数中的 y 会等于第一个参数中的 x，而不是上面定义的 1。\"]},\"259\":{\"h\":\"5. 箭头函数\",\"t\":[\"ES6 中引入了箭头函数，用来简化函数的定义：\",\"const counter = (x, y) => x + y\",\"相对于普通函数，箭头函数有以下特点：\"]},\"260\":{\"h\":\"（1）更加简洁\",\"t\":[\"如果没有参数，就直接写一个空括号即可\",\"如果只有一个参数，可以省去参数的括号\",\"如果有多个参数，用逗号分割\",\"如果函数体的返回值只有一句，可以省略大括号\",\"// 1. 不传入参数 const funcA = () => console.log('funcA') // 等价于 const funcA = function () { console.log('funcA') } // 2. 传入参数 const funcB = (x, y) => x + y // 等价于 const funcB = function (x, y) { return x + y } // 3. 单个参数的简化 const funcC = (x) => x // 对于单个参数，可以去掉 ()，简化为 const funcC = (x) => x // 等价于 const funcC = function (x) { return x } // 4. 上述代码函数体只有单条语句，如果有多条，需要使用 {} const funcD = (x, y) => { console.log(x, y) return x + y } // 等价于 const funcD = function (x, y) { console.log(x, y) return x + y }\"]},\"261\":{\"h\":\"（2）不绑定 this\",\"t\":[\"箭头函数不会创建自己的 this， 所以它没有自己的 this，它只会在自己作用域的上一层继承 this。所以箭头函数中 this 的指向在它在定义时已经确定了，之后不会改变。\",\"var id = 'GLOBAL' var obj = { id: 'OBJ', a: function () { console.log(this.id) }, b: () => { console.log(this.id) }, } obj.a() // 'OBJ' obj.b() // 'GLOBAL' new obj.a() // undefined new obj.b() // Uncaught TypeError: obj.b is not a constructor\",\"对象 obj 的方法 b 是使用箭头函数定义的，这个函数中的 this 就永远指向它定义时所处的全局执行环境中的 this，即便这个函数是作为对象 obj 的方法调用，this 依旧指向 Window 对象。需要注意，定义对象的大括号{}是无法形成一个单独的执行环境的，它依旧是处于全局执行环境中。\",\"同样，使用 call()、apply()、bind()等方法也不能改变箭头函数中 this 的指向：\",\"var id = 'Global' let fun1 = () => { console.log(this.id) } fun1() // 'Global' fun1.call({ id: 'Obj' }) // 'Global' fun1.apply({ id: 'Obj' }) // 'Global' fun1.bind({ id: 'Obj' })() // 'Global'\"]},\"262\":{\"h\":\"（3）不可作为构造函数\",\"t\":[\"构造函数 new 操作符的执行步骤如下：\",\"创建一个对象\",\"将构造函数的作用域赋给新对象（也就是将对象的proto属性指向构造函数的 prototype 属性）\",\"指向构造函数中的代码，构造函数中的 this 指向该对象（也就是为这个对象添加属性和方法）\",\"返回新的对象\",\"实际上第二步就是将函数中的 this 指向该对象。 但是由于箭头函数时没有自己的 this 的，且 this 指向外层的执行环境，且不能改变指向，所以不能当做构造函数使用。\"]},\"263\":{\"h\":\"（4）不绑定 arguments\",\"t\":[\"箭头函数没有自己的 arguments 对象。在箭头函数中访问 arguments 实际上获得的是它外层函数的 arguments 值。\"]},\"264\":{\"h\":\"6. 扩展运算符\",\"t\":[\"扩展运算符：... 就像是 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列，对数组进行解包。\",\"spread 扩展运算符有以下用途：\"]},\"265\":{\"h\":\"（1）将数组转化为用逗号分隔的参数序列\",\"t\":[\"function test(a, b, c) { console.log(a) // 1 console.log(b) // 2 console.log(c) // 3 } var arr = [1, 2, 3] test(...arr)\"]},\"266\":{\"h\":\"（2）将一个数组拼接到另一个数组\",\"t\":[\"var arr1 = [1, 2, 3, 4] var arr2 = [...arr1, 4, 5, 6] console.log(arr2) // [1, 2, 3, 4, 4, 5, 6]\"]},\"267\":{\"h\":\"（3）将字符串转为逗号分隔的数组\",\"t\":[\"var str = 'JavaScript' var arr = [...str] console.log(arr) // [\\\"J\\\", \\\"a\\\", \\\"v\\\", \\\"a\\\", \\\"S\\\", \\\"c\\\", \\\"r\\\", \\\"i\\\", \\\"p\\\", \\\"t\\\"]\"]},\"268\":{\"h\":\"7. Symbol\",\"t\":[\"ES6 中引入了一个新的基本数据类型 Symbol，表示独一无二的值。它是一种类似于字符串的数据类型，它的特点如下：\",\"Symbol 的值是唯一的，用来解决命名冲突的问题\",\"Symbol 值不能与其他类型数据进行运算\",\"Symbol 定义的对象属性不能使用 for...in 遍历循环，但是可以使用 Reflect.ownKeys 来获取对象的所有键名\",\"let s1 = Symbol() console.log(typeof s1) // \\\"symbol\\\" let s2 = Symbol('hello') let s3 = Symbol('hello') console.log(s2 === s3) // false\",\"基于以上特性，Symbol 属性类型比较适合用于两类场景中：常量值和对象属性。\"]},\"269\":{\"h\":\"（1）避免常量值重复\",\"t\":[\"getValue 函数会根据传入字符串参数 key 执行对应代码逻辑：\",\"function getValue(key) { switch(key){ case 'A': ... case 'B': ... } } getValue('B');\",\"这段代码对调用者而言非常不友好，因为代码中使用了魔术字符串（Magic string，指的是在代码之中多次出现、与代码形成强耦合的某一个具体的字符串或者数值），导致调用 getValue 函数时需要查看函数代码才能找到参数 key 的可选值。所以可以将参数 key 的值以常量的方式声明：\",\"const KEY = { alibaba: 'A', baidu: 'B', } function getValue(key) { switch(key){ case KEY.alibaba: ... case KEY.baidu: ... } } getValue(KEY.baidu);\",\"但这样也并非完美，假设现在要在 KEY 常量中加入一个 key，根据对应的规则，很有可能会出现值重复的情况：\",\"const KEY = { alibaba: 'A', baidu: 'B', tencent: 'B', }\",\"这就会出现问题：\",\"getValue(KEY.baidu) // 等同于 getValue(KEY.tencent)\",\"所以在这种场景下更适合使用 Symbol，不需要关心值本身，只关心值的唯一性：\",\"const KEY = { alibaba: Symbol(), baidu: Symbol(), tencent: Symbol(), }\"]},\"270\":{\"h\":\"（2）避免对象属性覆盖\",\"t\":[\"函数 fn 需要对传入的对象参数添加一个临时属性 user，但可能该对象参数中已经有这个属性了，如果直接赋值就会覆盖之前的值。此时就可以使用 Symbol 来避免这个问题。创建一个 Symbol 数据类型的变量，然后将该变量作为对象参数的属性进行赋值和读取，这样就能避免覆盖的情况：\",\"function fn(o) { // {user: {id: xx, name: yy}} const s = Symbol() o[s] = 'zzz' }\"]},\"271\":{\"h\":\"8. 集合 Set\",\"t\":[\"ES6 提供了新的数据结构 Set（集合）。它类似于数组，但是成员的值都是唯一的，集合实现了 iterator 接口，所以可以使用扩展运算符和 for…of 进行遍历。\",\"Set 的属性和方法：\",\"属性和方法\",\"概述\",\"size\",\"返回集合的元素个数\",\"add\",\"增加一个新的元素，返回当前的集合\",\"delete\",\"删除元素，返回布尔值\",\"has\",\"检查集合中是否包含某元素，返回布尔值\",\"clear\",\"清空集合，返回 undefined\",\"//创建一个空集合 let s = new Set() //创建一个非空集合 let s1 = new Set([1, 2, 3, 1, 2, 3]) //返回集合的元素个数 console.log(s1.size) // 3 //添加新元素 console.log(s1.add(4)) // {1,2,3,4} //删除元素 console.log(s1.delete(1)) //true //检测是否存在某个值 console.log(s1.has(2)) // true //清空集合 console.log(s1.clear()) //undefined\",\"由于集合中元素的唯一性，所以在实际应用中，可以使用 set 来实现数组去重：\",\"let arr = [1, 2, 3, 2, 1] Array.from(new Set(arr)) // {1, 2, 3}\",\"这里使用了 Array.form()方法来将数组集合转化为数组。\",\"可以通过 set 来求两个数组的交集和并集：\",\"// 模拟求交集 let intersection = new Set([...set1].filter((x) => set2.has(x))) // 模拟求差集 let difference = new Set([...set1].filter((x) => !set2.has(x)))\",\"用以下方法可以进行数组与集合的相互转化：\",\"// Set集合转化为数组 const arr = [...mySet] const arr = Array.from(mySet) // 数组转化为Set集合 const mySet = new Set(arr)\"]},\"272\":{\"h\":\"9. Map\",\"t\":[\"ES6 提供了 Map 数据结构，它类似于对象，也是键值队的集合，但是它的键值的范围不限于字符串，可以是任何类型（包括对象）的值，也就是说， Object 结构提供了“ 字符串—值” 的对应， Map 结构提供了“ 值—值” 的对应， 是一种更完善的 Hash 结构实现。 如果需要“ 键值对” 的数据结构， Map 比 Object 更合适。Map 也实现了 iterator 接口，所以可以使用扩展运算符和 for…of 进行遍历。\",\"Map 的属性和方法：\",\"属性和方法\",\"概述\",\"size\",\"返回 Map 的元素个数\",\"set\",\"增加一个新的元素，返回当前的 Map\",\"get\",\"返回键名对象的键值\",\"has\",\"检查 Map 中是否包含某元素，返回布尔值\",\"clear\",\"清空 Map，返回 undefined\",\"//创建一个空 map let m = new Map() //创建一个非空 map let m2 = new Map([['name', 'hello']]) //获取映射元素的个数 console.log(m2.size) // 1 //添加映射值 console.log(m2.set('age', 6)) // {\\\"name\\\" => \\\"hello\\\", \\\"age\\\" => 6} //获取映射值 console.log(m2.get('age')) // 6 //检测是否有该映射 console.log(m2.has('age')) // true //清除 console.log(m2.clear()) // undefined\",\"需要注意， 只有对同一个对象的引用， Map 结构才将其视为同一个键：\",\"let map = new Map() map.set(['a'], 555) map.get(['a']) // undefined\",\"上面代码的 set 和 get 方法， 表面是针对同一个键， 但实际上这是两个值， 内存地址是不一样的， 因此 get 方法无法读取该键， 所以会返回 undefined。\",\"由上可知， Map 的键实际上是跟内存地址绑定的， 只要内存地址不一样， 就视为两个键。 这就解决了同名属性碰撞（ clash） 的问题，在扩展库时， 如果使用对象作为键名， 就不用担心自己的属性与原来的属性同名。\",\"如果 Map 的键是一个简单类型的值（ 数字、 字符串、 布尔值）， 则只要两个值严格相等， Map 将其视为一个键， 包括 0 和 - 0。 另外， 虽然 NaN 不严格相等于自身， 但 Map 将其视为同一个键。\",\"let map = new Map() map.set(NaN, 123) map.get(NaN) // 123 map.set(-0, 123) map.get(+0) // 123\"]},\"273\":{\"h\":\"10. 模块化\",\"t\":[\"ES6 中首次引入模块化开发规范 ES Module，让 Javascript 首次支持原生模块化开发。ES Module 把一个文件当作一个模块，每个模块有自己的独立作用域，那如何把每个模块联系起来呢？核心点就是模块的导入与导出。\"]},\"274\":{\"h\":\"（1）export 导出模块\",\"t\":[\"正常导出：\",\"// 方式一 export var first = 'test' export function func() { return true } // 方式二 var first = 'test' var second = 'test' function func() { return true } export { first, second, func }\",\"as 关键字:\",\"var first = 'test' export { first as second }\",\"as 关键字可以重命名暴露出的变量或方法，经过重命名后同一变量可以多次暴露出去。\",\"export default export default 会导出默认输出，即用户不需要知道模块中输出的名字，在导入的时候为其指定任意名字。\",\"// 导出 export default function () { console.log('foo') } // 导入 import customName from './export-default'\",\"注意：导入默认模块时不需要大括号，导出默认的变量或方法可以有名字，但是对外无效。export default 只能使用一次。\"]},\"275\":{\"h\":\"（2）import 导入模块\",\"t\":[\"正常导入：\",\"import { firstName, lastName, year } from './profile' 复制代码\",\"导入模块位置可以是相对路径也可以是绝对路径，.js 可以省略，如果不带路径只是模块名，则需要通过配置文件告诉引擎查找的位置。\",\"as 关键字：\",\"import { lastName as surname } from './profile'\",\"import 命令会被提升到模块头部，所以写的位置不是那么重要，但是不能使用表达式和变量来进行导入。\",\"加载整个模块（无输出）\",\"import 'lodash' //仅仅是加载而已，无法使用\",\"加载整个模块（有输出）\",\"import * as circle from './circle' console.log('圆面积：' + circle.area(4)) console.log('圆周长：' + circle.circumference(14))\",\"注意：import * 会忽略 default 输出\"]},\"276\":{\"h\":\"（3）导入导出复合用法\",\"t\":[\"先导入后导出\",\"export { foo, bar } from 'my_module' // 等同于 import { foo, bar } from 'my_module' export { foo, boo }\",\"整体先导入再输出以及 default\",\"// 整体输出 export * from 'my_module'; // 导出default，正如前面所说，export default 其实导出的是default变量 export { default } from 'foo'; // 具名接口改default export { es6 as default } from './someModule';\"]},\"277\":{\"h\":\"（4）模块的继承\",\"t\":[\"export * from 'circle' export var e = 2.71828182846 export default function (x) { return Math.exp(x) }\",\"注意：export * 会忽略 default。\"]},\"278\":{\"h\":\"11. 字符串方法\"},\"279\":{\"h\":\"（1）includes()\",\"t\":[\"includes()：该方法用于判断字符串是否包含指定的子字符串。如果找到匹配的字符串则返回 true，否则返回 false。该方法的语法如下：\",\"string.includes(searchvalue, start)\",\"该方法有两个参数：\",\"searchvalue：必需，要查找的字符串；\",\"start：可选，设置从那个位置开始查找，默认为 0。\",\"let str = 'Hello world!' str.includes('o') // 输出结果：true str.includes('z') // 输出结果：false str.includes('e', 2) // 输出结果：false\"]},\"280\":{\"h\":\"（2）startsWith()\",\"t\":[\"startsWith()：该方法用于检测字符串是否以指定的子字符串开始。如果是以指定的子字符串开头返回 true，否则 false。其语法和上面的 includes()方法一样。\",\"let str = 'Hello world!' str.startsWith('Hello') // 输出结果：true str.startsWith('Helle') // 输出结果：false str.startsWith('wo', 6) // 输出结果：true\"]},\"281\":{\"h\":\"（3）endsWith()\",\"t\":[\"endsWith()：该方法用来判断当前字符串是否是以指定的子字符串结尾。如果传入的子字符串在搜索字符串的末尾则返回 true，否则将返回 false。其语法如下：\",\"string.endsWith(searchvalue, length)\",\"该方法有两个参数：\",\"searchvalue：必需，要搜索的子字符串；\",\"length： 设置字符串的长度，默认值为原始字符串长度 string.length。\",\"let str = 'Hello world!' str.endsWith('!') // 输出结果：true str.endsWith('llo') // 输出结果：false str.endsWith('llo', 5) // 输出结果：true\",\"可以看到，当第二个参数设置为 5 时，就会从字符串的前 5 个字符中进行检索，所以会返回 true。\"]},\"282\":{\"h\":\"（4）repeat()\",\"t\":[\"repeat() 方法返回一个新字符串，表示将原字符串重复 n 次：\",\"'x'.repeat(3) // 输出结果：\\\"xxx\\\" 'hello'.repeat(2) // 输出结果：\\\"hellohello\\\" 'na'.repeat(0) // 输出结果：\\\"\\\"\",\"如果参数是小数，会向下取整：\",\"'na'.repeat(2.9) // 输出结果：\\\"nana\\\"\",\"如果参数是负数或者 Infinity，会报错：\",\"'na'.repeat(Infinity) // RangeError 'na'.repeat(-1) // RangeError\",\"如果参数是 0 到-1 之间的小数，则等同于 0，这是因为会先进行取整运算。0 到-1 之间的小数，取整以后等于-0，repeat 视同为 0。\",\"'na'.repeat(-0.9) // 输出结果：\\\"\\\"\",\"如果参数是 NaN，就等同于 0：\",\"'na'.repeat(NaN) // 输出结果：\\\"\\\"\",\"如果 repeat 的参数是字符串，则会先转换成数字。\",\"'na'.repeat('na') // 输出结果：\\\"\\\" 'na'.repeat('3') // 输出结果：\\\"nanana\\\"\"]},\"283\":{\"h\":\"12. 数组方法\"},\"284\":{\"h\":\"（1）reduce()\",\"t\":[\"reduce() 方法对数组中的每个元素执行一个 reducer 函数(升序执行)，将其结果汇总为单个返回值。其使用语法如下：\",\"arr.reduce(callback, [initialValue])\",\"reduce 为数组中的每一个元素依次执行回调函数，不包括数组中被删除或从未被赋值的元素，接受四个参数：初始值（或者上一次回调函数的返回值），当前元素值，当前索引，调用 reduce 的数组。\",\"(1) callback （执行数组中每个值的函数，包含四个参数） \",\"previousValue （上一次调用回调返回的值，或者是提供的初始值（initialValue））\",\"currentValue （数组中当前被处理的元素）\",\"index （当前元素在数组中的索引）\",\"array （调用 reduce 的数组）\",\"(2) initialValue （作为第一次调用 callback 的第一个参数。）\",\"let arr = [1, 2, 3, 4] let sum = arr.reduce((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }) console.log(arr, sum)\",\"输出结果如下：\",\"1 2 1 3 3 2 6 4 3 [1, 2, 3, 4] 10\",\"再来加一个初始值看看：\",\"let arr = [1, 2, 3, 4] let sum = arr.reduce((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }, 5) console.log(arr, sum)\",\"输出结果如下：\",\"5 1 0 6 2 1 8 3 2 11 4 3 [1, 2, 3, 4] 15\",\"通过上面例子，可以得出结论：如果没有提供 initialValue，reduce 会从索引 1 的地方开始执行 callback 方法，跳过第一个索引。如果提供 initialValue，从索引 0 开始。\",\"注意，该方法如果添加初始值，就会改变原数组，将这个初始值放在数组的最后一位。\"]},\"285\":{\"h\":\"（2）filter()\",\"t\":[\"filter()方法用于过滤数组，满足条件的元素会被返回。它的参数是一个回调函数，所有数组元素依次执行该函数，返回结果为 true 的元素会被返回。该方法会返回一个新的数组，不会改变原数组。\",\"let arr = [1, 2, 3, 4, 5] arr.filter((item) => item > 2) // 结果：[3, 4, 5]\",\"可以使用 filter()方法来移除数组中的 undefined、null、NAN 等值\",\"let arr = [1, undefined, 2, null, 3, false, '', 4, 0] arr.filter(Boolean) // 结果：[1, 2, 3, 4]\"]},\"286\":{\"h\":\"（3）Array.from\",\"t\":[\"Array.from 的设计初衷是快速基于其他对象创建新数组，准确来说就是从一个类似数组的可迭代对象中创建一个新的数组实例。其实，只要一个对象有迭代器，Array.from 就能把它变成一个数组（注意：该方法会返回一个的数组，不会改变原对象）。\",\"从语法上看，Array.from 有 3 个参数：\",\"类似数组的对象，必选；\",\"加工函数，新生成的数组会经过该函数的加工再返回；\",\"this 作用域，表示加工函数执行时 this 的值。\",\"这三个参数里面第一个参数是必选的，后两个参数都是可选的：\",\"var obj = { 0: 'a', 1: 'b', 2: 'c', length: 3 } Array.from( obj, function (value, index) { console.log(value, index, this, arguments.length) return value.repeat(3) //必须指定返回值，否则返回 undefined }, obj )\",\"以上结果表明，通过 Array.from 这个方法可以自定义加工函数的处理方式，从而返回想要得到的值；如果不确定返回值，则会返回 undefined，最终生成的是一个包含若干个 undefined 元素的空数组。\",\"实际上，如果这里不指定 this，加工函数就可以是一个箭头函数。上述代码可以简写为以下形式。\",\"Array.from(obj, (value) => value.repeat(3)) // 控制台打印 (3) [\\\"aaa\\\", \\\"bbb\\\", \\\"ccc\\\"]\",\"除了上述 obj 对象以外，拥有迭代器的对象还包括 String、Set、Map 等，Array.from 都可以进行处理：\",\"// String Array.from('abc') // [\\\"a\\\", \\\"b\\\", \\\"c\\\"] // Set Array.from(new Set(['abc', 'def'])) // [\\\"abc\\\", \\\"def\\\"] // Map Array.from( new Map([ [1, 'ab'], [2, 'de'], ]) ) // [[1, 'ab'], [2, 'de']]\"]},\"287\":{\"h\":\"（4）fill()\",\"t\":[\"使用 fill()方法可以向一个已有数组中插入全部或部分相同的值，开始索引用于指定开始填充的位置，它是可选的。如果不提供结束索引，则一直填充到数组末尾。如果是负值，则将从负值加上数组的长度而得到的值开始。该方法的语法如下：\",\"array.fill(value, start, end)\",\"其参数如下：\",\"value：必需。填充的值；\",\"start：可选。开始填充位置；\",\"end：可选。停止填充位置 (默认为 array.length)。\",\"使用示例如下：\",\"const arr = [0, 0, 0, 0, 0] // 用5填充整个数组 arr.fill(5) console.log(arr) // [5, 5, 5, 5, 5] arr.fill(0) // 重置 // 用5填充索引大于等于3的元素 arr.fill(5, 3) console.log(arr) // [0, 0, 0, 5, 5] arr.fill(0) // 重置 // 用5填充索引大于等于1且小于等于3的元素 arr.fill(5, 3) console.log(arr) // [0, 5, 5, 0, 0] arr.fill(0) // 重置 // 用5填充索引大于等于-1的元素 arr.fill(5, -1) console.log(arr) // [0, 0, 0, 0, 5] arr.fill(0) // 重置\"]},\"288\":{\"h\":\"二、ES7 新特性（2016）\"},\"289\":{\"h\":\"1. Array.includes()\",\"t\":[\"includes() 方法用来判断一个数组是否包含一个指定的值，如果包含则返回 true，否则返回 false。该方法不会改变原数组。其语法如下：\",\"arr.includes(searchElement, fromIndex)\",\"该方法有两个参数：\",\"searchElement：必须，需要查找的元素值。\",\"fromIndex：可选，从 fromIndex 索引处开始查找目标值。如果为负值，则按升序从 array.length + fromIndex 的索引开始搜 （即使从末尾开始往前跳 fromIndex 的绝对值个索引，然后往后搜寻）。默认为 0。\",\";[1, 2, 3].includes(2) // true ;[1, 2, 3].includes(4) // false ;[1, 2, 3].includes(3, 3) // false ;[1, 2, 3].includes(3, -1) // true\",\"在 ES7 之前，通常使用 indexOf 来判断数组中是否包含某个指定值。但 indexOf 在语义上不够明确直观，同时 indexOf 内部使用 === 来判等，所以存在对 NaN 的误判，includes 则修复了这个问题：\",\";[1, 2, NaN].indexOf(NaN) // -1 ;[1, 2, NaN].includes(NaN) // true\",\"注意：使用 includes()比较字符串和字符时是区分大小写。\"]},\"290\":{\"h\":\"2. 指数操作符\",\"t\":[\"ES7 还引入了指数操作符 **，用来更为方便的进行指数计算，它与 Math.pow() 等效：\",\"Math.pow(2, 10)); // 1024 2**10; // 1024\"]},\"291\":{\"h\":\"三、ES8 新特性（2017）\"},\"292\":{\"h\":\"1. padStart()和 padEnd()\",\"t\":[\"padStart()和 padEnd()方法用于补齐字符串的长度。如果某个字符串不够指定长度，会在头部或尾部补全。\"]},\"293\":{\"h\":\"（1）padStart()\",\"t\":[\"padStart()用于头部补全。该方法有两个参数，其中第一个参数是一个数字，表示字符串补齐之后的长度；第二个参数是用来补全的字符串。\",\"如果原字符串的长度，等于或大于指定的最小长度，则返回原字符串：\",\"'x'.padStart(1, 'ab') // 'x'\",\"如果用来补全的字符串与原字符串，两者的长度之和超过了指定的最小长度，则会截去超出位数的补全字符串：\",\"'x'.padStart(5, 'ab') // 'ababx' 'x'.padStart(4, 'ab') // 'abax'\",\"如果省略第二个参数，默认使用空格补全长度：\",\"'x'.padStart(4, 'ab') // 'a '\",\"padStart()的常见用途是为数值补全指定位数，笔者最近做的一个需求就是将返回的页数补齐为三位，比如第 1 页就显示为 001，就可以使用该方法来操作：\",\"'1'.padStart(3, '0') // 输出结果： '001' '15'.padStart(3, '0') // 输出结果： '015'\"]},\"294\":{\"h\":\"（2）padEnd()\",\"t\":[\"padEnd()用于尾部补全。该方法也是接收两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串：\",\"'x'.padEnd(5, 'ab') // 'xabab' 'x'.padEnd(4, 'ab') // 'xaba'\"]},\"295\":{\"h\":\"2. Object.values()和 Object.entries()\",\"t\":[\"在 ES5 中就引入了 Object.keys 方法，在 ES8 中引入了跟 Object.keys 配套的 Object.values 和 Object.entries，作为遍历一个对象的补充手段，供 for...of 循环使用。它们都用来遍历对象，它会返回一个由给定对象的自身可枚举属性（不含继承的和 Symbol 属性）组成的数组，数组元素的排列顺序和正常循环遍历该对象时返回的顺序一致，这个三个元素返回的值分别如下：\",\"Object.keys()：返回包含对象键名的数组；\",\"Object.values()：返回包含对象键值的数组；\",\"Object.entries()：返回包含对象键名和键值的数组。\",\"let obj = { id: 1, name: 'hello', age: 18, } console.log(Object.keys(obj)) // 输出结果: ['id', 'name', 'age'] console.log(Object.values(obj)) // 输出结果: [1, 'hello', 18] console.log(Object.entries(obj)) // 输出结果: [['id', 1], ['name', 'hello'], ['age', 18]\",\"注意\",\"Object.keys()方法返回的数组中的值都是字符串，也就是说不是字符串的 key 值会转化为字符串。\",\"结果数组中的属性值都是对象本身可枚举的属性，不包括继承来的属性。\"]},\"296\":{\"h\":\"3. 函数扩展\",\"t\":[\"ES2017 规定函数的参数列表的结尾可以为逗号：\",\"function person(name, age, sex) {}\",\"该特性的主要作用是方便使用 git 进行多人协作开发时修改同一个函数减少不必要的行变更。\"]},\"297\":{\"h\":\"4. Object.values\",\"t\":[\"之前可以通过 Object.keys 来获取一个对象所有的 key。在 ES8 中提供了 Object.values 来获取对象所有的 value 值：\",\"const person = { name: 'zhangsan', age: 18, height: 188, } console.log(Object.values(person)) // ['zhangsan', 18, 188]\"]},\"298\":{\"h\":\"四、ES9 新特性（2018）\"},\"299\":{\"h\":\"1. for await…of\",\"t\":[\"for await...of 方法被称为异步迭代器，该方法是主要用来遍历异步对象。\",\"for await...of 语句会在异步或者同步可迭代对象上创建一个迭代循环，包括 String，Array，类数组，Map， Set 和自定义的异步或者同步可迭代对象。这个语句只能在 async function 内使用：\",\"function Gen(time) { return new Promise((resolve, reject) => { setTimeout(function () { resolve(time) }, time) }) } async function test() { let arr = [Gen(2000), Gen(100), Gen(3000)] for await (let item of arr) { console.log(Date.now(), item) } } test()\"]},\"300\":{\"h\":\"2. Promise.finally\",\"t\":[\"ES2018 为 Promise 添加了 finally() 方法，表示无论 Promise 实例最终成功或失败都会执行的方法：\",\"const promise = new Promise((resolve, reject) => { setTimeout(() => { const one = '1' reject(one) }, 1000) }) promise .then(() => console.log('success')) .catch(() => console.log('fail')) .finally(() => console.log('finally'))\",\"finally() 函数不接受参数，finally() 内部通常不知道 promise 实例的执行结果，所以通常在 finally() 方法内执行的是与 promise 状态无关的操作。\"]},\"301\":{\"h\":\"3. 对象的扩展运算符\",\"t\":[\"在 ES6 中就引入了扩展运算符，但是它只能作用于数组，ES2018 中的扩展运算符可以作用于对象：\"]},\"302\":{\"h\":\"（1）将元素组织成对象\",\"t\":[\"const obj = { a: 1, b: 2, c: 3 } const { a, ...rest } = obj console.log(rest) // 输出 {b: 2, c: 3} ;(function ({ a, ...obj }) { console.log(obj) // 输出 {b: 2, c: 3} })({ a: 1, b: 2, c: 3 })\"]},\"303\":{\"h\":\"（2）将对象扩展为元素\",\"t\":[\"const obj = { a: 1, b: 2, c: 3 } const newObj = { ...obj, d: 4 } console.log(newObj) // 输出 {a: 1, b: 2, c: 3, d: 4}\"]},\"304\":{\"h\":\"（3）可以用来合并对象\",\"t\":[\"const obj1 = { a: 1, b: 2 } const obj2 = { c: 3, d: 4 } const mergedObj = { ...obj1, ...obj2 } console.log(mergedObj) // 输出 {a: 1, b: 2, c: 3, d: 4}\"]},\"305\":{\"h\":\"4. 对象的 Rest\",\"t\":[\"在对象的解构中，除了已经指定的属性之外，rest 将会拷贝对象其他的所有可枚举属性：\",\"const obj = { foo: 1, bar: 2, baz: 3 } const { foo, ...rest } = obj console.log(rest) // {bar: 2, baz: 3}\",\"如果用在函数参数中，rest 表示所有剩下的参数：\",\"function func({ param1, ...rest }) { return rest } console.log(func({ param1: 1, b: 2, c: 3, d: 4 })) // {b: 2, c: 3, d: 4}\",\"注意，在对象字面量中，rest 运算符只能放在对象的最顶层，并且只能使用一次，要放在最后：\",\"const {...rest, foo} = obj; // Uncaught SyntaxError: Rest element must be last element const {foo, ...rest1, ...rest2} = obj; // Uncaught SyntaxError: Rest element must be last element\"]},\"306\":{\"h\":\"五、ES10 新特性（2019）\"},\"307\":{\"h\":\"1. trimStart() 和 trimEnd()\",\"t\":[\"在 ES10 之前，JavaScript 提供了 trim()方法，用于移除字符串首尾空白符。在 ES9 中提出了 trimStart()和 trimEnd() 方法用于移除字符串首尾的头尾空白符，空白符包括：空格、制表符 tab、换行符等其他空白符等。\"]},\"308\":{\"h\":\"（1）trimStart()\",\"t\":[\"trimStart() 方法的的行为与 trim()一致，不过会返回一个从原始字符串的开头删除了空白的新字符串，不会修改原始字符串：\",\"const s = ' abc ' s.trimStart() // \\\"abc \\\"\"]},\"309\":{\"h\":\"（2）trimStart()\",\"t\":[\"trimEnd() 方法的的行为与 trim()一致，不过会返回一个从原始字符串的结尾删除了空白的新字符串，不会修改原始字符串：\",\"const s = ' abc ' s.trimEnd() // \\\" abc\\\"\",\"注意，这两个方法都不适用于 null、undefined、Number 类型。\"]},\"310\":{\"h\":\"2. flat()和 flatMap()\"},\"311\":{\"h\":\"（1）flat()\",\"t\":[\"在 ES2019 中，flat()方法用于创建并返回一个新数组，这个新数组包含与它调用 flat()的数组相同的元素，只不过其中任何本身也是数组的元素会被打平填充到返回的数组中：\",\";[1, [2, 3]] .flat() // [1, 2, 3] [(1, [2, [3, 4]])].flat() // [1, 2, [3, 4]]\",\"在不传参数时，flat()默认只会打平一级嵌套，如果想要打平更多的层级，就需要传给 flat()一个数值参数，这个参数表示要打平的层级数：\",\";[1, [2, [3, 4]]].flat(2) // [1, 2, 3, 4]\",\"如果数组中存在空项，会直接跳过：\",\"[1, [2, , 3]].flat()); // [1, 2, 3]\",\"如果传入的参数小于等于 0，就会返回原数组：\",\";[1, [2, [3, [4, 5]]]].flat(0) // [1, [2, [3, [4, 5]]]] ;[1, [2, [3, [4, 5]]]].flat(-10) // [1, [2, [3, [4, 5]]]]\"]},\"312\":{\"h\":\"（2）flatMap()\",\"t\":[\"flatMap()方法使用映射函数映射每个元素，然后将结果压缩成一个新数组。它与 map 和连着深度值为 1 的 flat 几乎相同，但 flatMap 通常在合并成一种方法的效率稍微高一些。该方法会返回一个新的数组，其中每个元素都是回调函数的结果，并且结构深度 depth 值为 1。\",\";[1, 2, 3, 4].flatMap((x) => x * 2) // [2, 4, 6, 8] ;[1, 2, 3, 4].flatMap((x) => [x * 2]) // [2, 4, 6, 8] ;[1, 2, 3, 4].flatMap((x) => [[x * 2]]) // [[2], [4], [6], [8]] ;[1, 2, 3, 4].map((x) => [x * 2]) // [[2], [4], [6], [8]]\"]},\"313\":{\"h\":\"3. Object.fromEntries()\",\"t\":[\"Object.fromEntries()方法可以把键值对列表转换为一个对象。该方法相当于 Object.entries() 方法的逆过程。 Object.entries()方法返回一个给定对象自身可枚举属性的键值对数组，而 Object.fromEntries() 方法把键值对列表转换为一个对象。\",\"const object = { key1: 'value1', key2: 'value2' } const array = Object.entries(object) // [ [\\\"key1\\\", \\\"value1\\\"], [\\\"key2\\\", \\\"value2\\\"] ] Object.fromEntries(array) // { key1: 'value1', key2: 'value2' }\",\"使用该方法主要有以下两个用途：\"]},\"314\":{\"h\":\"（1）将数组转成对象\",\"t\":[\"const entries = [ ['foo', 'bar'], ['baz', 42], ] Object.fromEntries(entries) // { foo: \\\"bar\\\", baz: 42 }\"]},\"315\":{\"h\":\"（2）将 Map 转成对象\",\"t\":[\"const entries = new Map([ ['foo', 'bar'], ['baz', 42], ]) Object.fromEntries(entries) // { foo: \\\"bar\\\", baz: 42 }\"]},\"316\":{\"h\":\"4. Symbol 描述\",\"t\":[\"通过 Symbol() 创建符号时，可以通过参数提供字符串作为描述：\",\"let dog = Symbol('dog') // dog 为描述\",\"在 ES2019 之前，获取一个 Symbol 值的描述需要通过 String 方法 或 toString 方法：\",\"String(dog) // \\\"Symbol(dog)\\\" dog.toString() // \\\"Symbol(dog)\\\"\",\"ES2019 补充了属性 description，用来直接访问描述：\",\"dog.description // dog\"]},\"317\":{\"h\":\"5. toString()\",\"t\":[\"ES2019 对函数的 toString() 方法进行了扩展，以前这个方法只会输出函数代码，但会省略注释和空格。ES2019 的 toString()则会保留注释、空格等，即输出的是原始代码：\",\"function sayHi() { /* dog */ console.log('wangwang') } sayHi.toString() // 将输出和上面一样的原始代码\"]},\"318\":{\"h\":\"6. catch\",\"t\":[\"在 ES2019 以前，catch 会带有参数，但是很多时候 catch 块是多余的。而现在可以不带参数：\",\"// ES2019 之前 try { ... } catch(error) { ... } // ES2019 之后 try { ... } catch { ... }\"]},\"319\":{\"h\":\"六、ES11 新特性（2020）\"},\"320\":{\"h\":\"1. BigInt\",\"t\":[\"在 JavaScript 中，数值类型 Number 是 64 位浮点数，所以计算精度和表示范围都有一定限制。ES2020 新增了 BigInt 数据类型，这也是 JavaScript 引入的第八种基本类型。BigInt 可以表示任意大的整数。其语法如下：\",\"BigInt(value)\",\"其中 value 是创建对象的数值。可以是字符串或者整数。\",\"在 JavaScript 中，Number 基本类型可以精确表示的最大整数是 253。因此早期会有这样的问题：\",\"let max = Number.MAX_SAFE_INTEGER // 最大安全整数 let max1 = max + 1 let max2 = max + 2 max1 === max2 // true\",\"有了 BigInt 之后，这个问题就不复存在了：\",\"let max = BigInt(Number.MAX_SAFE_INTEGER) let max1 = max + 1n let max2 = max + 2n max1 === max2 // false\",\"可以通过 typeof 操作符来判断变量是否为 BigInt 类型（返回字符串\\\"bigint\\\"）：\",\"typeof 1n === 'bigint' // true typeof BigInt('1') === 'bigint' // true\",\"还可以通过 Object.prototype.toString 方法来判断变量是否为 BigInt 类型（返回字符串\\\"[object BigInt]\\\"）：\",\"Object.prototype.toString.call(10n) === '[object BigInt]' // true\",\"注意，BigInt 和 Number 不是严格相等的，但是宽松相等：\",\"10n === 10 // false 10n == 10 // true\",\"Number 和 BigInt 可以进行比较：\",\"1n < 2 // true 2n > 1 // true 2 > 2 // false 2n > 2 // false 2n >= 2 // true\"]},\"321\":{\"h\":\"2. 空值合并运算符（??）\",\"t\":[\"在编写代码时，如果某个属性不为 null 和 undefined，那么就获取该属性，如果该属性为 null 或 undefined，则取一个默认值：\",\"const name = dogName ? dogName : 'default'\",\"可以通过 || 来简化：\",\"const name = dogName || 'default'\",\"但是 || 的写法存在一定的缺陷，当 dogName 为 0 或 false 的时候也会走到 default 的逻辑。所以 ES2020 引入了 ?? 运算符。只有 ?? 左边为 null 或 undefined 时才返回右边的值：\",\"const dogName = false const name = dogName ?? 'default' // name = false;\"]},\"322\":{\"h\":\"3. 可选链操作符（?.）\",\"t\":[\"在开发过程中，我们经常需要获取深层次属性，例如 system.user.addr.province.name。但在获取 name 这个属性前需要一步步的判断前面的属性是否存在，否则并会报错：\",\"const name = (system && system.user && system.user.addr && system.user.addr.province && system.user.addr.province.name) || 'default'\",\"为了简化上述过程，ES2020 引入了「链判断运算符」?.，可选链操作符( ?. )允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用是否有效。?. 操作符的功能类似于 . 链式操作符，不同之处在于，在引用为 null 或 undefined 的情况下不会引起错误，该表达式短路返回值是 undefined。与函数调用一起使用时，如果给定的函数不存在，则返回 undefined。\",\"const name = system?.user?.addr?.province?.name || 'default'\",\"当尝试访问可能不存在的对象属性时，可选链操作符将会使表达式更短、更简明。在探索一个对象的内容时，如果不能确定哪些属性必定存在，可选链操作符也是很有帮助的。\",\"可选链有以下三种形式：\",\"a?.[x] // 等同于 a == null ? undefined : a[x] a?.b() // 等同于 a == null ? undefined : a.b() a?.() // 等同于 a == null ? undefined : a()\",\"在使用 TypeScript 开发时，这个操作符可以解决很多问题。\"]},\"323\":{\"h\":\"4. Promise.allSettled\",\"t\":[\"Promise.allSettled 的参数接受一个 Promise 的数组，返回一个新的 Promise。唯一的不同在于，执行完之后不会失败，也就是说当 Promise.allSettled 全部处理完成后，我们可以拿到每个 Promise 的状态，而不管其是否处理成功。\",\"下面使用 allSettled 实现的一段代码：\",\"const resolved = Promise.resolve(2) const rejected = Promise.reject(-1) const allSettledPromise = Promise.allSettled([resolved, rejected]) allSettledPromise.then(function (results) { console.log(results) }) // 返回结果： // [ // { status: 'fulfilled', value: 2 }, // { status: 'rejected', reason: -1 } // ]\",\"可以看到，Promise.allSettled 最后返回的是一个数组，记录传进来的参数中每个 Promise 的返回值，这就是和 all 方法不太一样的地方。你也可以根据 all 方法提供的业务场景的代码进行改造，其实也能知道多个请求发出去之后，Promise 最后返回的是每个参数的最终状态。\"]},\"324\":{\"h\":\"5. String.matchAll()\",\"t\":[\"matchAll() 是新增的字符串方法，它返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器。因为返回的是遍历器，所以通常使用 for...of 循环取出。\",\"for (const match of 'abcabc'.matchAll(/a/g)) { console.log(match) } //[\\\"a\\\", index: 0, input: \\\"abcabc\\\", groups: undefined] //[\\\"a\\\", index: 3, input: \\\"abcabc\\\", groups: undefined]\",\"需要注意，该方法的第一个参数是一个正则表达式对象，如果传的参数不是一个正则表达式对象，则会隐式地使用 new RegExp(obj) 将其转换为一个 RegExp 。另外，RegExp 必须是设置了全局模式 g 的形式，否则会抛出异常 TypeError。\"]},\"325\":{\"h\":\"七、ES12 新特性（2021）\"},\"326\":{\"h\":\"1. String.replaceAll()\",\"t\":[\"replaceAll()方法会返回一个全新的字符串，所有符合匹配规则的字符都将被替换掉，替换规则可以是字符串或者正则表达式。\",\"let string = 'hello world, hello ES12' string.replace(/hello/g, 'hi') // hi world, hi ES12 string.replaceAll('hello', 'hi') // hi world, hi ES12\",\"注意的是，replaceAll 在使用正则表达式的时候，如果非全局匹配（/g），会抛出异常：\",\"let string = 'hello world, hello ES12' string.replaceAll(/hello/, 'hi') // Uncaught TypeError: String.prototype.replaceAll called with a non-global\"]},\"327\":{\"h\":\"2. 数字分隔符\",\"t\":[\"数字分隔符可以在数字之间创建可视化分隔符，通过 _下划线来分割数字，使数字更具可读性，可以放在数字内的任何地方：\",\"const money = 1_000_000_000 //等价于 const money = 1000000000\",\"该新特性同样支持在八进制数中使用：\",\"const number = 0o123_456 //等价于 const number = 0o123456\"]},\"328\":{\"h\":\"3. Promise.any\",\"t\":[\"Promise.any 是是 ES2021 新增的特性，它接收一个 Promise 可迭代对象（例如数组），只要其中的一个 promise 成功，就返回那个已经成功的 promise 如果可迭代对象中没有一个 promise 成功（即所有的 promises 都失败/拒绝），就返回一个失败的 promise 和 AggregateError 类型的实例，它是 Error 的一个子类，用于把单一的错误集合在一起\",\"const promises = [ Promise.reject('ERROR A'), Promise.reject('ERROR B'), Promise.resolve('result'), ] Promise.any(promises) .then((value) => { console.log('value: ', value) }) .catch((err) => { console.log('err: ', err) }) // 输出结果：value: result\",\"如果所有传入的 promises 都失败：\",\"const promises = [ Promise.reject('ERROR A'), Promise.reject('ERROR B'), Promise.reject('ERROR C'), ] Promise.any(promises) .then((value) => { console.log('value：', value) }) .catch((err) => { console.log('err：', err) console.log(err.message) console.log(err.name) console.log(err.errors) })\",\"输出结果：\",\"err：AggregateError: All promises were rejected All promises were rejected AggregateError [\\\"ERROR A\\\", \\\"ERROR B\\\", \\\"ERROR C\\\"]\"]},\"329\":{\"h\":\"4. 逻辑赋值操作符\",\"t\":[\"ES12 中新增了几个逻辑赋值操作符，可以用来简化一些表达式：\",\"// 等同于 a = a || b a ||= b // 等同于 c = c && d c &&= d // 等同于 e = e ?? f e ??= f\"]},\"330\":{\"h\":\"八、ES13 新特性（2022）\"},\"331\":{\"h\":\"1. Object.hasOwn()\",\"t\":[\"在 ES2022 之前，可以使用 Object.prototype.hasOwnProperty() 来检查一个属性是否属于对象。\",\"Object.hasOwn 特性是一种更简洁、更可靠的检查属性是否直接设置在对象上的方法：\",\"const example = { property: '123', } console.log(Object.prototype.hasOwnProperty.call(example, 'property')) console.log(Object.hasOwn(example, 'property'))\"]},\"332\":{\"h\":\"2. at()\",\"t\":[\"at() 是一个数组方法，用于通过给定索引来获取数组元素。当给定索引为正时，这种新方法与使用括号表示法访问具有相同的行为。当给出负整数索引时，就会从数组的最后一项开始检索：\",\"const array = [0, 1, 2, 3, 4, 5] console.log(array[array.length - 1]) // 5 console.log(array.at(-1)) // 5 console.log(array[array.lenght - 2]) // 4 console.log(array.at(-2)) // 4\",\"除了数组，字符串也可以使用 at()方法进行索引：\",\"const str = 'hello world' console.log(str[str.length - 1]) // d console.log(str.at(-1)) // d\"]},\"333\":{\"h\":\"3. error.cause\",\"t\":[\"在 ECMAScript 2022 规范中，new Error() 中可以指定导致它的原因：\",\"function readFiles(filePaths) { return filePaths.map((filePath) => { try { // ··· } catch (error) { throw new Error(`While processing ${filePath}`, { cause: error }) } }) }\"]},\"334\":{\"h\":\"4. Top-level Await\",\"t\":[\"在 ES2017 中，引入了 async 函数和 await 关键字，以简化 Promise 的使用，但是 await 关键字只能在 async 函数内部使用。尝试在异步函数之外使用 await 就会报错：SyntaxError - SyntaxError: await is only valid in async function。\",\"顶层 await 允许我们在 async 函数外面使用 await 关键字。它允许模块充当大型异步函数，通过顶层 await，这些 ECMAScript 模块可以等待资源加载。这样其他导入这些模块的模块在执行代码之前要等待资源加载完再去执行。\",\"由于 await 仅在 async 函数中可用，因此模块可以通过将代码包装在 async 函数中来在代码中包含 await：\",\"// a.js import fetch from 'node-fetch' let users export const fetchUsers = async () => { const resp = await fetch('https://jsonplaceholder.typicode.com/users') users = resp.json() } fetchUsers() export { users } // usingAwait.js import { users } from './a.js' console.log('users: ', users) console.log('usingAwait module')\",\"我们还可以立即调用顶层 async 函数（IIAFE）：\",\"import fetch from 'node-fetch' ;(async () => { const resp = await fetch('https://jsonplaceholder.typicode.com/users') users = resp.json() })() export { users }\",\"这样会有一个缺点，直接导入的 users 是 undefined，需要在异步执行完成之后才能访问它：\",\"// usingAwait.js import { users } from './a.js' console.log('users:', users) // undefined setTimeout(() => { console.log('users:', users) }, 100) console.log('usingAwait module')\",\"当然，这种方法并不安全，因为如果异步函数执行花费的时间超过 100 毫秒， 它就不会起作用了，users 仍然是 undefined。\",\"另一个方法是导出一个 promise，让导入模块知道数据已经准备好了：\",\"//a.js import fetch from 'node-fetch' export default (async () => { const resp = await fetch('https://jsonplaceholder.typicode.com/users') users = resp.json() })() export { users } //usingAwait.js import promise, { users } from './a.js' promise.then(() => { console.log('usingAwait module') setTimeout(() => console.log('users:', users), 100) })\",\"虽然这种方法似乎是给出了预期的结果，但是有一定的局限性：导入模块必须了解这种模式才能正确使用它。\",\"而顶层 await 就可以解决这些问题：\",\"// a.js const resp = await fetch('https://jsonplaceholder.typicode.com/users') const users = resp.json() export { users } // usingAwait.js import { users } from './a.mjs' console.log(users) console.log('usingAwait module')\",\"顶级 await 在以下场景中将非常有用：\",\"动态加载模块：\",\"const strings = await import(`/i18n/${navigator.language}`);\",\"资源初始化：\",\"const connection = await dbConnector();\",\"依赖回退：\",\"let translations; try { translations = await import('https://app.fr.json'); } catch { translations = await import('https://fallback.en.json'); }\"]},\"335\":{\"c\":[\"Javascript\"]},\"336\":{\"c\":[\"ES6-ES11\"]},\"337\":{\"h\":\"Web API\",\"t\":[\"在 Web API 中，有非常有用的对象、属性和函数可用于执行小到访问 DOM 这样的小任务，大到处理音频、视频这样的复杂任务。常见的 API 有 Canvas、Web Worker、History、Fetch 等。下面就来看一些不常见但很实用的 Web API！\"]},\"338\":{\"h\":\"1. Web Audio API\",\"t\":[\"Audio API 允许我们在 Web 上操作音频流，它可以用于 Web 上的音频源添加效果和过滤器。音频源可以来自<audio>、视频/音频源文件或音频网络流。\",\"下面来看一个例子：\",\"<body> <header> <h2>Web APIs<h2> </header> <div class=\\\"web-api-cnt\\\"> <div class=\\\"web-api-card\\\"> <div class=\\\"web-api-card-head\\\"> Demo - Audio </div> <div class=\\\"web-api-card-body\\\"> <div id=\\\"error\\\" class=\\\"close\\\"></div> <div> <audio controls src=\\\"./audio.mp3\\\" id=\\\"audio\\\"></audio> </div> <div> <button onclick=\\\"audioFromAudioFile.init()\\\">Init</button> <button onclick=\\\"audioFromAudioFile.play()\\\">Play</button> <button onclick=\\\"audioFromAudioFile.pause()\\\">Pause</button> <button onclick=\\\"audioFromAudioFile.stop()\\\">Stop</button> </div> <div> <span>Vol: <input onchange=\\\"audioFromAudioFile.changeVolume()\\\" type=\\\"range\\\" id=\\\"vol\\\" min=\\\"1\\\" max=\\\"2\\\" step=\\\"0.01\\\" value=\\\"1\\\" /></span> <span>Pan: <input onchange=\\\"audioFromAudioFile.changePan()\\\" type=\\\"range\\\" id=\\\"panner\\\" min=\\\"-1\\\" max=\\\"1\\\" step=\\\"0.01\\\" value=\\\"0\\\" /></span> </div> </div> </div> </div> </body> <script> const l = console.log let audioFromAudioFile = (function() { var audioContext var volNode var pannerNode var mediaSource function init() { l(\\\"Init\\\") try { audioContext = new AudioContext() mediaSource = audioContext.createMediaElementSource(audio) volNode = audioContext.createGain() volNode.gain.value = 1 pannerNode = new StereoPannerNode(audioContext, { pan:0 }) mediaSource.connect(volNode).connect(pannerNode).connect(audioContext.destination) } catch(e) { error.innerHTML = \\\"此设备不支持 Web Audio API\\\" error.classList.remove(\\\"close\\\") } } function play() { audio.play() } function pause() { audio.pause() } function stop() { audio.stop() } function changeVolume() { volNode.gain.value = this.value l(\\\"Vol Range:\\\",this.value) } function changePan() { pannerNode.gain.value = this.value l(\\\"Pan Range:\\\",this.value) } return { init, play, pause, stop, changePan, changeVolume } })() </script>\",\"这个例子中将音频从<audio> 元素传输到 AudioContext，声音效果（如平移）在被输出到音频输出（扬声器）之前被添加到音频源。\",\"按钮 Init 在单击时调用 init 函数。 这将创建一个 AudioContext 实例并将其设置为 audioContext。 接下来，它创建一个媒体源 createMediaElementSource(audio)，将音频元素作为音频源传递。音量节点 volNode 由 createGain 创建，可以用来调节音量。接下来使用 StereoPannerNode 设置平移效果，最后将节点连接至媒体源。\",\"点击按钮（Play、Pause、Stop）可以播放、暂停和停止音频。页面有一个音量和平移的范围滑块，滑动滑块就可以调节音频的音量和平移效果。\"]},\"339\":{\"h\":\"2. Fullscreen API\",\"t\":[\"Fullscreen API 用于在 Web 应用程序中开启全屏模式，使用它就可以在全屏模式下查看页面/元素。在安卓手机中，它会溢出浏览器窗口和安卓顶部的状态栏（显示网络状态、电池状态等的地方）。\",\"Fullscreen API 方法：\",\"requestFullscreen：系统上以全屏模式显示所选元素，会关闭其他应用程序以及浏览器和系统 UI 元素。\",\"exitFullscreen：退出全屏模式并切换到正常模式。\",\"下面来看一个常见的例子，使用全屏模式观看视频：：\",\"<body> <header> <h2>Web APIs<h2> </header> <div class=\\\"web-api-cnt\\\"> <div class=\\\"web-api-card\\\"> <div class=\\\"web-api-card-body\\\"> <div class=\\\"video-stage\\\"> <video id=\\\"video\\\" src=\\\"./video.mp4\\\"></video> <button onclick=\\\"toggle()\\\">Toogle Fullscreen</button> </div> </div> </div> </div> </body> <script> function toggle() { const videoStageEl = document.querySelector(\\\".video-stage\\\") if(videoStageEl.requestFullscreen) { if(!document.fullscreenElement){ videoStageEl.requestFullscreen() } else { document.exitFullscreen() } } else { error.innerHTML = \\\"此设备不支持 Fullscreen API\\\" error.classList.remove(\\\"close\\\") } } </script>\",\"这里通过 querySelector 查找 div#video-stage 元素并将其 HTMLDivElement 实例保存在 videoStageEl 上。\",\"然后，使用 document.fullsreenElement 属性来确定 document 是否是全屏的，所以可以在 videoStageEl 上调用 requestFullscreen()。 这将使 div#video-stage 占据整个设备的视图。\",\"如果在全屏模式下点击 Toggle Fullscreen 按钮，就会在 document 上调用 exitFullcreen，这样 UI 视图就会返回到普通视图（退出全屏）。\"]},\"340\":{\"h\":\"3. Web Speech API\",\"t\":[\"Web Speech API 提供了将语音合成和语音识别添加到 Web 应用程序的功能。使用此 API，我们将能够向 Web 应用程序发出语音命令，就像在 Android 上通过其 Google Speech 或在 Windows 中使用 Cortana 一样。\",\"下面来看一个简单的例子，使用 Web Speech API 实现文字转语音和语音转文字：\",\"<body> <header> <h2>Web APIs<h2> </header> <div class=\\\"web-api-cnt\\\"> <div id=\\\"error\\\" class=\\\"close\\\"></div> <div class=\\\"web-api-card\\\"> <div class=\\\"web-api-card-head\\\"> Demo - Text to Speech </div> <div class=\\\"web-api-card-body\\\"> <div> <input placeholder=\\\"Enter text here\\\" type=\\\"text\\\" id=\\\"textToSpeech\\\" /> </div> <div> <button onclick=\\\"speak()\\\">Tap to Speak</button> </div> </div> </div> <div class=\\\"web-api-card\\\"> <div class=\\\"web-api-card-head\\\"> Demo - Speech to Text </div> <div class=\\\"web-api-card-body\\\"> <div> <textarea placeholder=\\\"Text will appear here when you start speeaking.\\\" id=\\\"speechToText\\\"></textarea> </div> <div> <button onclick=\\\"tapToSpeak()\\\">Tap and Speak into Mic</button> </div> </div> </div> </div> </body> <script> try { var speech = new SpeechSynthesisUtterance() var SpeechRecognition = SpeechRecognition; var recognition = new SpeechRecognition() } catch(e) { error.innerHTML = \\\"此设备不支持 Web Speech API\\\" error.classList.remove(\\\"close\\\") } function speak() { speech.text = textToSpeech.value speech.volume = 1 speech.rate=1 speech.pitch=1 window.speechSynthesis.speak(speech) } function tapToSpeak() { recognition.onstart = function() { } recognition.onresult = function(event) { const curr = event.resultIndex const transcript = event.results[curr][0].transcript speechToText.value = transcript } recognition.onerror = function(ev) { console.error(ev) } recognition.start() } </script>\",\"第一个演示 Demo - Text to Speech 演示了使用这个 API 和一个简单的输入字段，接收输入文本和一个按钮来执行语音操作。\",\"function speak() { const speech = new SpeechSynthesisUtterance() speech.text = textToSpeech.value speech.volume = 1 speech.rate = 1 speech.pitch = 1 window.speechSynthesis.speak(speech) }\",\"它实例化了 SpeechSynthesisUtterance() 对象，将文本设置为从输入框中输入的文本中朗读。 然后，使用 speech 对象调用 SpeechSynthesis#speak 函数，在扬声器中说出输入框中的文本。\",\"第二个演示 Demo - Speech to Text 将语音识别为文字。 点击 Tap and Speak into Mic 按钮并对着麦克风说话，我们说的话会被翻译成文本输入框中的内容。\",\"点击 Tap and Speak into Mic 按钮会调用 tapToSpeak 函数：\",\"function tapToSpeak() { var SpeechRecognition = SpeechRecognition const recognition = new SpeechRecognition() recognition.onstart = function () {} recognition.onresult = function (event) { const curr = event.resultIndex const transcript = event.results[curr][0].transcript speechToText.value = transcript } recognition.onerror = function (ev) { console.error(ev) } recognition.start() }\",\"这里实例化了 SpeechRecognition，然后注册事件处理程序和回调。语音识别开始时调用 onstart，发生错误时调用 onerror。 每当语音识别捕获一条线时，就会调用 onresult。\",\"在 onresult 回调中，提取内容并将它们设置到 textarea 中。 因此，当我们对着麦克风说话时，文字会出现在 textarea 内容中。\"]},\"341\":{\"h\":\"4. Web Bluetooth API\",\"t\":[\"Bluetooth API 让我们可以访问手机上的低功耗蓝牙设备，并使用它将网页上的数据共享到另一台设备。\",\"基本 API 是 navigator.bluetooth.requestDevice。 调用它将使浏览器提示用户使用设备选择器，用户可以在其中选择一个设备或取消请求。navigator.bluetooth.requestDevice 需要一个强制对象。 此对象定义过滤器，用于返回与过滤器匹配的蓝牙设备。\",\"下面来看一个简单的例子，使用 navigator.bluetooth.requestDevice API 从 BLE 设备检索基本设备信息：\",\"<body> <header> <h2>Web APIs<h2> </header> <div class=\\\"web-api-cnt\\\"> <div class=\\\"web-api-card\\\"> <div class=\\\"web-api-card-head\\\"> Demo - Bluetooth </div> <div class=\\\"web-api-card-body\\\"> <div id=\\\"error\\\" class=\\\"close\\\"></div> <div> <div>Device Name: <span id=\\\"dname\\\"></span></div> <div>Device ID: <span id=\\\"did\\\"></span></div> <div>Device Connected: <span id=\\\"dconnected\\\"></span></div> </div> <div> <button onclick=\\\"bluetoothAction()\\\">Get BLE Device</button> </div> </div> </div> </div> </body> <script> function bluetoothAction(){ if(navigator.bluetooth) { navigator.bluetooth.requestDevice({ acceptAllDevices: true }).then(device => { dname.innerHTML = device.name did.innerHTML = device.id dconnected.innerHTML = device.connected }).catch(err => { error.innerHTML = \\\"Oh my!! Something went wrong.\\\" error.classList.remove(\\\"close\\\") }) } else { error.innerHTML = \\\"Bluetooth is not supported.\\\" error.classList.remove(\\\"close\\\") } } </script>\",\"这里会显示设备信息。 单击 Get BLE Device 按钮会调用 bluetoothAction 函数：\",\"function bluetoothAction() { navigator.bluetooth .requestDevice({ acceptAllDevices: true, }) .then((device) => { dname.innerHTML = device.name did.innerHTML = device.id dconnected.innerHTML = device.connected }) .catch((err) => { console.error('Oh my!! Something went wrong.') }) }\",\"bluetoothAction 函数调用带有 acceptAllDevices：true 选项的 navigator.bluetooth.requestDevice API，这将使其扫描并列出所有附近的蓝牙活动设备。 它返回了一个 promise，所以将它解析为从回调函数中获取一个参数 device，这个 device 参数将保存列出的蓝牙设备的信息。这是我们使用其属性在设备上显示信息的地方。\"]},\"342\":{\"h\":\"5. Vibration API\",\"t\":[\"Vibration API 可以使我们的设备振动，作为对我们应该响应的新数据或信息的通知或物理反馈的一种方式。\",\"执行振动的方法是 navigator.vibrate(pattern)。pattern 是描述振动模式的单个数字或数字数组。\",\"这将使设备振动在 200 毫秒之后停止：\",\"navigator.vibrate(200) navigator.vibrate([200])\",\"这将使设备先振动 200 毫秒，再暂停 300 毫秒，最后振动 400 毫秒并停止：\",\"navigator.vibrate([200, 300, 400])\",\"可以通过传递 0、[]、[0,0,0] 来消除振动。\",\"下面来看一个简单的例子：\",\"<body> <header> <h2>Web APIs<h2> </header> <div class=\\\"web-api-cnt\\\"> <div class=\\\"web-api-card\\\"> <div class=\\\"web-api-card-head\\\"> Demo - Vibration </div> <div class=\\\"web-api-card-body\\\"> <div id=\\\"error\\\" class=\\\"close\\\"></div> <div> <input id=\\\"vibTime\\\" type=\\\"number\\\" placeholder=\\\"Vibration time\\\" /> </div> <div> <button onclick=\\\"vibrate()\\\">Vibrate</button> </div> </div> </div> </div> </body> <script> if(navigator.vibrate) { function vibrate() { const time = vibTime.value if(time != \\\"\\\") navigator.vibrate(time) } } else { error.innerHTML = \\\"Vibrate API not supported in this device.\\\" error.classList.remove(\\\"close\\\") } </script>\",\"这里有一个输入框和一个按钮。 在输入框中输入振动的持续时间并按下按钮。我们的设备将在输入的时间内振动。\"]},\"343\":{\"h\":\"6. Broadcast Channel API\",\"t\":[\"Broadcast Channel API 允许从同源的不同浏览上下文进行消息或数据的通信。其中，浏览上下文指的是窗口、选项卡、iframe、worker 等。\",\"BroadcastChannel 类用于创建或加入频道：\",\"const politicsChannel = new BroadcastChannel('politics')\",\"politics 是频道的名称，任何使用 politics 始化 BroadcastChannel 构造函数的上下文都将加入 politics 频道，它将接收在频道上发送的任何消息，并可以将消息发送到频道中。\",\"如果它是第一个具有 politics 的 BroadcastChannel 构造函数，则将创建该频道。可以使用 BroadcastChannel.postMessage API 来将消息发布到频道。使用 BroadcastChannel.onmessage API 要订阅频道消息。\",\"下面来看一个简单的聊天应用：\",\"<body> <header> <h2>Web APIs<h2> </header> <div class=\\\"web-api-cnt\\\"> <div class=\\\"web-api-card\\\"> <div class=\\\"web-api-card-head\\\"> Demo - BroadcastChannel </div> <div class=\\\"web-api-card-body\\\"> <div class=\\\"page-info\\\">Open this page in another <i>tab</i>, <i>window</i> or <i>iframe</i> to chat with them.</div> <div id=\\\"error\\\" class=\\\"close\\\"></div> <div id=\\\"displayMsg\\\" style=\\\"font-size:19px;text-align:left;\\\"> </div> <div class=\\\"chatArea\\\"> <input id=\\\"input\\\" type=\\\"text\\\" placeholder=\\\"Type your message\\\" /> <button onclick=\\\"sendMsg()\\\">Send Msg to Channel</button> </div> </div> </div> </div> </body> <script> const l = console.log; try { var politicsChannel = new BroadcastChannel(\\\"politics\\\") politicsChannel.onmessage = onMessage var userId = Date.now() } catch(e) { error.innerHTML = \\\"BroadcastChannel API not supported in this device.\\\" error.classList.remove(\\\"close\\\") } input.addEventListener(\\\"keydown\\\", (e) => { if(e.keyCode === 13 && e.target.value.trim().length > 0) { sendMsg() } }) function onMessage(e) { const {msg,id}=e.data const newHTML = \\\"<div class='chat-msg'><span><i>\\\"+id+\\\"</i>: \\\"+msg+\\\"</span></div>\\\" displayMsg.innerHTML = displayMsg.innerHTML + newHTML displayMsg.scrollTop = displayMsg.scrollHeight } function sendMsg() { politicsChannel.postMessage({msg:input.value,id:userId}) const newHTML = \\\"<div class='chat-msg'><span><i>Me</i>: \\\"+input.value+\\\"</span></div>\\\" displayMsg.innerHTML = displayMsg.innerHTML + newHTML input.value = \\\"\\\" displayMsg.scrollTop = displayMsg.scrollHeight } </script>\",\"这里有一个简单的文本和按钮。 输入消息，然后按按钮发送消息。下面初始化了politicalChannel，并在 politicalChannel 上设置了一个 onmessage 事件监听器，这样它就可以接收和显示消息。\",\"点击按钮就会调用sendMsg 函数。 它通过 BroadcastChannel#postMessage API 将消息发送到 politics 频道。任何初始化此脚本的选项卡、iframe 或工作程序都将接收从此处发送的消息，因此此页面将接收从其他上下文发送的消息。\"]},\"344\":{\"h\":\"7. Clipboard API\",\"t\":[\"复制、剪切和粘贴等剪贴板操作是应用程序中最常见的一些功能。 Clipboard API 使 Web 用户能够访问系统剪贴板并执行基本的剪贴板操作。\",\"以前，可以使用 document.execCommand 与系统剪贴板进行交互。 现代异步剪贴板 API 提供了直接读取和写入剪贴板内容的访问权限。\",\"从剪贴板读取内容：\",\"navigator.clipboard.readText().then(clipText => document.getElementById(\\\"outbox\\\").innerText = clipText );\",\"将内容写入剪贴板：\",\"function updateClipboard(newClip) { navigator.clipboard.writeText(newClip).then(function() { /* clipboard successfully set */ }, function() { /* clipboard write failed */ }); }\"]},\"345\":{\"h\":\"8. Web Share API\",\"t\":[\"Share API 可帮助我们在 web 应用上实现共享功能。它给人以移动原生共享的感觉。它使共享文本、文件和指向设备上其他应用程序的链接成为可能。\",\"可通过 navigator.share 方法访问 Web Share API：\",\"if (navigator.share) { navigator.share({ title: '百度', text: '百度一下', url: '<https://www.baidu.com/>', }) .then(() => console.log('分享成功')) .catch((error) => console.log('分享失败', error)); }\",\"上面的代码使用原生 JavaScript 实现了文本共享。需要注意，我们只能使用 onclick 事件调用此操作：\",\"function Share({ label, text, title }) { const shareDetails = { title, text }; const handleSharing = async () => { if (navigator.share) { try { await navigator.share(shareDetails).then(() => console.log(\\\"Sent\\\")); } catch (error) { console.log(`Oops! I couldn't share to the world because: ${error}`); } } else { // fallback code console.log( \\\"Web share is currently not supported on this browser. Please provide a callback\\\" ); } }; return ( <button onClick={handleSharing}> <span>{label}</span> </button> ); }\"]},\"346\":{\"c\":[\"Javascript\"]},\"347\":{\"c\":[\"Web API\"]},\"348\":{\"h\":\"this\"},\"349\":{\"h\":\"1. 执行上下文\",\"t\":[\"关于 this，还得从执行上下文说起。在执行上下文中，包含了变量环境、词法环境、外部环境、this：\",\"实际上，this 是和执行上下文绑定的，也就是说每个执行上下文都有一个 this，下面就来看看执行上下文的相关概念。\"]},\"350\":{\"h\":\"（1）执行上下文概念\",\"t\":[\"执行上下文是评估和执行 JavaScript 代码的环境的抽象概念，当 JavaSciprt 代码在运行时，其运行在执行上下文中。JavaScript 中有三种执行上下文类型:\",\"全局执行上下文：任何不在函数内部的都是全局执行上下文，它首先会创建一个全局的 window 对象，并且设置 this 的值等于这个全局对象，一个程序中只有一个全局执行上下文。\",\"函数执行上下文：当一个函数被调用时，就会为该函数创建一个新的执行上下文，函数的上下文可以有任意多个。\",\"eval 函数执行上下文：执行在 eval 函数中的代码会有属于它自己的执行上下文。\",\"由于 eval 函数执行上下文用的不多，所以这里只介绍全局执行上下文和函数执行上下文：\",\"在全局执行上下文中，this 是指向 window 对象的；\",\"在函数执行上下文中，默认情况下调用一个函数，其执行上下文的 this 也是指向 window 的。\"]},\"351\":{\"h\":\"（2）执⾏上下⽂栈\",\"t\":[\"我们知道，浏览器中的 JavaScript 解释器是单线程的，也就是说浏览器同⼀时间只能做⼀个事情。代码中只有⼀个全局执⾏上下⽂和⽆数个函数执⾏上下⽂，这些组成了执⾏上下⽂栈（Execution Stack）。 ⼀个函数的执⾏上下⽂，在函数执⾏完毕后，会被移出执⾏上下⽂栈。看下面的例子：\",\"function c() { console.log('ok') } function a() { function b() { c() } b() } a()\",\"这段代码的执⾏上下⽂栈是这样的：\"]},\"352\":{\"h\":\"2. 函数的 this 指向\",\"t\":[\"this 是 JavaScript 的一个关键字，多数情况下 this 指向调用它的对象。\",\"这句话有两个意思，首先 this 指向的应该是一个对象（函数执行上下文对象）。其次，这个对象指向的是调用它的对象，如果调用它的不是对象或对象不存在，则会指向全局对象（严格模式下为 undefined）。\",\"其实，this 是在函数被调用时确定的，它的指向取决于函数调用的地方，而不是它被声明的地方（除箭头函数外）。当函数被调用时，会创建一个执行上下文，它包含函数在哪里被调用（调用栈）、函数的调用方式、传入的参数等信息，this 就是这个记录的一个属性，它会在函数执行的过程中被用到。\",\"this 在函数的指向绑定形式有四种：默认绑定、隐式绑定、显式绑定、new 绑定。\"]},\"353\":{\"h\":\"（1）默认绑定（全局环境）\",\"t\":[\"函数在浏览器全局环境中直接使用不带任何修饰的函数引用进行调用，非严格模式下 this 指向 window；在 use strict 指明严格模式的情况下就是 undefined（严格模式不允许 this 指向全局对象）。\",\"注意：在浏览器环境下，全局对象是 window；在 Node.js 环境下，全局对象是 global。\",\"function fn1() { console.log(this) } function fn2() { 'use strict' console.log(this) } fn1() // window fn2() // undefined\",\"需要注意一种情况，来看代码：\",\"var num = 1 var foo = { num: 10, fn: function () { console.log(this) console.log(this.num) }, } var fn1 = foo.fn fn1()\",\"这里会输出 Window 和 1。这里 this 仍然指向 window。虽然 fn 函数在 foo 对象中作为方法被引用，但是在赋值给 fn1 之后，fn1 的执行仍然是在 window 全局环境中。因此输出 window 和 1，它们相当于：\",\"console.log(window) console.log(window.num)\"]},\"354\":{\"h\":\"（2）隐式绑定（上下文对象）\",\"t\":[\"如果函数在某个上下文对象中调用，那么 this 绑定的是那个上下文对象。来看一个例子：\",\"var a = 'hello' var obj = { a: 'world', fn: function () { console.log(this.a) }, } obj.fn()\",\"在上述代码中，最后会输出\\\"world\\\"。这里 fn 方法是作为对象的属性调用的，此时 fn 方法执行时，this 会指向 obj 对象。也就是说，此时 this 指向的是调用这个方法的对象。\",\"那如果嵌套了多层对象，this 的指向又是怎样的呢？下面来看一个例子：\",\"const obj1 = { text: 1, fn: function () { return this.text }, } const obj2 = { text: 2, fn: function () { return obj1.fn() }, } const obj3 = { text: 3, fn: function () { var fn = obj1.fn return fn() }, } console.log(obj1.fn()) console.log(obj2.fn()) console.log(obj3.fn())\",\"对于这段代码，最终的三个输出结果：\",\"第一个 console 输出 1 ，这时 this 指向了调用 fn 方法的对象 obj1，所以会输出 obj1 中的属性 text 的值 1；\",\"第二个 console 输出 1，这里调用了 obj2.fn()，最终还是调用 o1.fn()，因此仍然会输出 1。\",\"第二个 console 输出 undefined，在进行 var fn = o1.fn 赋值之后，是直接调用的，因此这里的 this 指向 window，答案是 undefined。\",\"根据上面例子就可以得出结论：如果嵌套了多个对象，那么指向最后一个调用这个方法的对象。\",\"那如何让 console.log(obj2.fn()) 输出 2 呢？可以这样：\",\"const obj1 = { text: 1, fn: function () { return this.text }, } const obj2 = { text: 2, fn: o1.fn, } console.log(obj2.fn())\",\"还是上面的结论：this 指向最后调用它的对象，在 fn 执行时，挂到 obj2 对象上即可，就相当于提前进行了赋值操作。\"]},\"355\":{\"h\":\"（3）显示绑定（apply、call、bind）\",\"t\":[\"显式绑定是指需要引用一个对象时进行强制绑定调用，显式绑定可以使用 apply、call、bind 方法来绑定 this 值，使其指向我们指定的对象。\",\"call、apply 和 bind 三个方法都可以改变函数 this 指向，但是 call 和 apply 是直接进行函数调用；bind 不会执行函数，而是返回一个新的函数，这个新的函数已经自动绑定了新的 this 指向，需要我们手动调用。call 和 apply 的区别： call 方法接受的是参数列表，而 apply 方法接受的是一个参数数组。\",\"这三个方法的使用形式如下：\",\"const target = {} fn.call(target, 'arg1', 'arg2') fn.apply(target, ['arg1', 'arg2']) fn.bind(target, 'arg1', 'arg2')()\",\"需要注意，如果把 null 或 undefined 作为 this 的绑定对象传入 call、apply、bind，这些值在调用时会被忽略，实际应用的是默认绑定规则：\",\"var a = 'hello' function fn() { console.log(this.a) } fn.call(null)\",\"这里会输出 hello，因为将 null 作为 this 传给了 call 方法，这时 this 会使用默认的绑定规则，this 指向了全局对象 window，所以输出 window 中 a 的值 hello。\",\"再来看一个例子：\",\"const foo = { name: 'hello', logName: function () { console.log(this.name) }, } const bar = { name: 'world', } console.log(foo.logName.call(bar))\",\"这里将会输出：world。\",\"那如果对一个函数进行多次 bind，那么上下文会是什么呢？\",\"let a = {} let fn = function () { console.log(this) } fn.bind().bind(a)()\",\"这里会输出 a 吗？可以把上述代码转换成另一种形式：\",\"// fn.bind().bind(a) 等于 let fn2 = function fn1() { return function () { return fn.apply() }.apply(a) } fn2()\",\"可以发现，不管给函数 bind 几次，fn 中的 this 永远由第一次 bind 决定，所以结果永远是 window。\",\"let a = { name: 'CUGGZ', } function fn() { console.log(this.name) } fn.bind(a)() // CUGGZ\"]},\"356\":{\"h\":\"手写call\",\"t\":[\" Function.prototype.myCall = function (context, ...arguments) { context = context || window let key = Symbol('key') context[key]=this return context[key](...arguments) } function Person(name, age) { console.log(name) //'我是参数传进来的name' console.log(age) //'我是参数传进来的age' console.log(this) //构造函数this指向实例对象 } Person.call({name:'a'},'zhangsan',18) Person.myCall({name:'a'},'zhangsan',18)\"]},\"357\":{\"h\":\"手写apply\",\"t\":[\"Function.prototype.myApply = function (context, arg=[]) { context = context || window let key = Symbol('key') context[key]=this return context[key]([...arg]) } function Person(arr) { console.log(arr) //'我是参数传进来的arr' console.log(this) //构造函数this指向实例对象 } Person.call({name:'a'},['zhangsan',18]) Person.myCall({name:'a'},['zhangsan',18])\"]},\"358\":{\"h\":\"手写bind\",\"t\":[\"Function.prototype.bind = function (context, ...args) { if (typeof this !== \\\"function\\\") { throw new Error(\\\"this must be a function\\\"); } var self = this; var fbound = function () { self.apply(this instanceof self ? this : context, args.concat(Array.prototype.slice.call(arguments))); //把bind方法传入的参数与return 的函数的传参进行合并 } if(this.prototype) { fbound.prototype = Object.create(this.prototype); } return fbound; }\"]},\"359\":{\"h\":\"（4）new 绑定（构造函数）\",\"t\":[\"函数作为构造函数使用 new 调用时， this 绑定的是新创建的构造函数的实例：\",\"function Person(name，age){ this.name = name; this.age = age; this.say = function(){ console.log(this.name + \\\":\\\" + this.age); } } var person = new Person(\\\"CUGGZ\\\",18); console.log(person.name); // CUGGZ console.log(person.age); // 18 person.say(); // CUGGZ:18\",\"可以看到，在上面代码中，this 就指向了构造函数 Person 的新对象 person，所以使用 this 可以获取到 person 对象的属性和方法。\",\"实际上，在使用 new 调用构造函数时，会执行以下操作：\",\"创建一个新对象；\",\"构造函数的 prototype 被赋值给这个新对象的 __proto__；\",\"将新对象赋给当前的 this；\",\"判断函数的返回值类型，如果是值类型，返回新创建的对象，如果是引用类型，则返回引用类型的对象\",\"function createNew() { let newObj = null let constructor = Array.prototype.shift.call(arguments) if(typeof constructor !=='function'){ return } newObj = Object.create(constructor.prototype) let result = constructor.apply(newObj, arguments) if(result && (typeof result === 'object' || typeof result === 'function')){ return result } else { return newObj } } function Person(name, play) { this.name = name this.play = play } let p1 = createNew(Person, '拉拉', '爱玩球') console.log(p1)\"]},\"360\":{\"h\":\"3. this 的优先级\",\"t\":[\"this 存在很多使用场景，当多个场景同时出现时，就要根据优先级来判断 this 的指向。优先级：new 绑定 > 显示绑定 > 隐式绑定 > 默认绑定\",\"下面来看例子：\",\"function foo(a) { console.log(this.a) } const obj1 = { a: 1, foo: foo, } const obj2 = { a: 2, foo: foo, } obj1.foo.call(obj2) obj2.foo.call(obj1)\",\"这里会输出：2 和 1，也就是说 call、apply、bind 的显式绑定相对于隐式绑定优先级更高。\",\"function foo(a) { this.a = a } const obj1 = {} var bar = foo.bind(obj1) bar(2) console.log(obj1.a)\",\"这里将会输出 2。通过 bind 将 bar 函数中的 this 绑定为 obj1 对象。执行 bar(2) 后，obj1.a 值为 2。即经过 bar(2) 执行后，obj1 对象为：{a: 2}。\",\"当再使用 bar 作为构造函数时：\",\"var baz = new bar(3) console.log(baz.a)\",\"这里将会输出 3。bar 函数本身是通过 bind 方法构造的函数，其内部已经对将 this 绑定为 obj1，它再作为构造函数，通过 new 调用时，返回的实例已经与 obj1 解绑。 也就是说：new 绑定修改了 bind 绑定中的 this，因此 new 绑定的优先级比显式 bind 绑定更高。\",\"所以，new 的方式优先级最高，接下来是 bind 这些函数，然后是 obj.foo() 这种调用方式，最后是 foo 这种调用方式，同时，箭头函数的 this 一旦被绑定，就不会再被任何方式所改变。\",\"下面是判断 this 指向的流程图：\"]},\"361\":{\"h\":\"4. 特殊的 this 指向\",\"t\":[\"除了上面几种 this 指向的规则之外，还有一些特殊的情况，他们的 this 指向与上述情况有所不同，下面就来看看这些情况。\"]},\"362\":{\"h\":\"（1）箭头函数\",\"t\":[\"箭头函数会根据其声明的地方来决定 this：\",\"const foo = { fn: function () { setTimeout(function () { console.log(this) }) }, } console.log(foo.fn()) // window\",\"这里，this 出现在 setTimeout() 中的回调函数里，因此 this 指向 window 对象。如果需要 this 指向 foo 这个 object 对象，可以使用箭头函数解决：\",\"const foo = { fn: function () { setTimeout(() => { console.log(this) }) }, } console.log(foo.fn()) // {fn: ƒ}\",\"在箭头函数中，如果多层的嵌套，像下面这种情况：\",\"function a() { return () => { return () => { console.log(this) } } } console.log(a()()())\",\"由于箭头函数没有 this ，箭头函数中的 this 只取决包裹箭头函数的第一个普通函数的 this。在这个例子中，因为包裹箭头函数的第一个普通函数是 a，所以此时的 this 是 window。\",\"需要注意，箭头函数的 this 绑定是无法通过 call、apply、bind 方法修改的。且因为箭头函数没有构造函数 constructor，所以也不可以使用 new 调用，即不能作为构造函数，否则会报错。\"]},\"363\":{\"h\":\"（2）数组方法\",\"t\":[\"来看下面的代码，在属性 arr 的 forEach 回调函数中输出 this，指向的是什么呢？\",\"var obj = { arr: [1], } obj.arr.forEach(function () { console.log(this) })\",\"其实输出的仍然是全局对象。\",\"forEach 方法语法如下：\",\"array.forEach(function(currentValue, index, arr), thisValue)\",\"其参数如下：\",\"function(currentValue, index, arr)：必需。 数组中每个元素需要调用的函数。 \",\"currentValue：必需，当前元素\",\"index：可选，当前元素的索引值\",\"arr：可选，当前元素所属的数组对象\",\"thisValue：可选，传递给函数的值一般用 \\\"this\\\" 值。如果这个参数为空， \\\"undefined\\\" 会传递给 \\\"this\\\" 值\",\"可以看到，forEach 方法有两个参数，第一个是回调函数，第二个是 this 指向的对象，这里只传入了回调函数，第二个参数没有传入，默认为 undefined，所以会输出全局对象。\",\"除了 forEach 方法，需要传入 this 指向的函数还有：every()、find()、findIndex()、map()、some()，在使用的时候需要注意。\"]},\"364\":{\"h\":\"（3）立即执行函数\",\"t\":[\"立即执行函数就是定义后立刻调用的匿名函数：\",\"var name = 'hello' var obj = { name: 'world', sayHello: function () { console.log(this.name) }, hello: function () { ;(function (cb) { cb() })(this.sayHello) }, } obj.hello() // hello\",\"执行结果是 hello，是 window.name 的值。立即执行函数作为一个匿名函数，通常就是直接调用，而不会通过属性访问器（obj.fn）的形式来给它指定一个所在对象，所以它的 this 是确定的，就是默认的全局对象 window。\"]},\"365\":{\"h\":\"（4）setTimeout 和 setInterval\",\"t\":[\"setTimeout 和 setInterval 中函数的 this 指向规则是一样的：\",\"var name = 'hello' var obj = { name: 'world', hello: function () { setTimeout(function () { console.log(this.name) }) }, } obj.hello() // hello\",\"this.name 是在 obj.hello () 里被调用的，结果却输出了 window.name。其实，延时效果（setTimeout）和定时效果（setInterval）都是在全局作用域下实现的。无论是 setTimeout 还是 setInterval 里传入的函数，都会首先被交到全局对象手上。因此，函数中 this 的值，会被自动指向 window。\"]},\"366\":{\"c\":[\"Javascript\"]},\"367\":{\"c\":[\"this\"]},\"368\":{\"h\":\"事件循环\"},\"369\":{\"h\":\"1. 异步执行原理\"},\"370\":{\"h\":\"（1）单线程的JavaScript\",\"t\":[\"我们知道，JavaScript是一种单线程语言，它主要用来与用户互动，以及操作DOM。\",\"JavaScript 有同步和异步的概念，这就解决了代码阻塞的问题：\",\"同步：如果在一个函数返回的时候，调用者就能够得到预期结果，那么这个函数就是同步的；\",\"异步：如果在函数返回的时候，调用者还不能够得到预期结果，而是需要在将来通过一定的手段得到，那么这个函数就是异步的。\",\"那单线程有什么好处呢？\",\"在 JS 运行的时候可能会阻止 UI 渲染，这说明了两个线程是互斥的。这是因为 JS 可以修改 DOM，如果在 JS 执行的时候 UI 线程还在工作，就可能导致不能安全的渲染 UI。\",\"得益于 JS 是单线程运行的，可以达到节省内存，节约上下文切换时间的好处。\"]},\"371\":{\"h\":\"（2）多线程的浏览器\",\"t\":[\"JS 是单线程的，在同一个时间只能做一件事情，那为什么浏览器可以同时执行异步任务呢？\",\"这是因为浏览器是多线程的，当 JS 需要执行异步任务时，浏览器会另外启动一个线程去执行该任务。也就是说，JavaScript是单线程的指的是执行JavaScript代码的线程只有一个，是浏览器提供的JavaScript引擎线程（主线程）。除此之外，浏览器中还有定时器线程、 HTTP 请求线程等线程，这些线程主要不是来执行 JS 代码的。\",\"比如主线程中需要发送数据请求，就会把这个任务交给异步 HTTP 请求线程去执行，等请求数据返回之后，再将 callback 里需要执行的 JS 回调交给 JS 引擎线程去执行。也就是说，浏览器才是真正执行发送请求这个任务的角色，而 JS 只是负责执行最后的回调处理。所以这里的异步不是 JS 自身实现的，而是浏览器为其提供的能力。\",\"下图是Chrome浏览器的架构图：\",\"可以看到，Chrome不仅拥有多个进程，还有多个线程。以渲染进程为例，就包含GUI渲染线程、JS引擎线程、事件触发线程、定时器触发线程、异步HTTP请求线程。这些线程为 JS 在浏览器中完成异步任务提供了基础。\"]},\"372\":{\"h\":\"2. 浏览器的事件循环\",\"t\":[\"JavaScript的任务分为两种同步和异步：\",\"同步任务：在主线程上排队执行的任务，只有一个任务执行完毕，才能执行下一个任务，\",\"异步任务：不进入主线程，而是放在任务队列中，若有多个异步任务则需要在任务队列中排队等待，任务队列类似于缓冲区，任务下一步会被移到执行栈然后主线程执行调用栈的任务。\",\"上面提到了任务队列和执行栈，下面就先来看看这两个概念。\"]},\"373\":{\"h\":\"（1）执行栈与任务队列\"},\"374\":{\"h\":\"执行栈\",\"t\":[\"执行栈：从名字可以看出，执行栈使用到的是数据结构中的栈结构， 它是一个存储函数调用的栈结构，遵循先进后出的原则。它主要负责跟踪所有要执行的代码。每当一个函数执行完成时，就会从堆栈中弹出（pop）该执行完成函数；如果有代码需要进去执行的话，就进行 push 操作。\",\"当执行这段代码时，首先会执行一个 main 函数，然后执行我们的代码。根据先进后出的原则，后执行的函数会先弹出栈，在图中也可以发现，foo 函数后执行，当执行完毕后就从栈中弹出了。\",\"JavaScript在按顺序执行执行栈中的方法时，每次执行一个方法，都会为它生成独有的执行环境（上下文)，当这个方法执行完成后，就会销毁当前的执行环境，并从栈中弹出此方法，然后继续执行下一个方法。\"]},\"375\":{\"h\":\"任务队列\",\"t\":[\"任务队列：从名字中可以看出，任务队列使用到的是数据结构中的队列结构，它用来保存异步任务，遵循先进先出的原则。它主要负责将新的任务发送到队列中进行处理。\",\"JavaScript在执行代码时，会将同步的代码按照顺序排在执行栈中，然后依次执行里面的函数。当遇到异步任务时，就将其放入任务队列中，等待当前执行栈所有同步代码执行完成之后，就会从异步任务队列中取出已完成的异步任务的回调并将其放入执行栈中继续执行，如此循环往复，直到执行完所有任务。\",\"JavaScript任务的执行顺序如下：\",\"在事件驱动的模式下，至少包含了一个执行循环来检测任务队列中是否有新任务。通过不断循环，去取出异步任务的回调来执行，这个过程就是事件循环，每一次循环就是一个事件周期。\"]},\"376\":{\"h\":\"（2）宏任务和微任务\",\"t\":[\"任务队列其实不止一种，根据任务种类的不同，可以分为微任务（micro task）队列和宏任务（macro task）队列。常见的任务如下：\",\"宏任务： script( 整体代码)、setTimeout、setInterval、I/O、UI 交互事件、setImmediate(Node.js 环境)\",\"微任务： Promise、MutaionObserver、process.nextTick(Node.js 环境)；\",\"任务队列执行顺序如下：\",\" 可以看到，Eventloop 在处理宏任务和微任务的逻辑时的执行情况如下：\",\"JavaScript 引擎首先从宏任务队列中取出第一个任务；\",\"执行完毕后，再将微任务中的所有任务取出，按照顺序分别全部执行（这里包括不仅指开始执行时队列里的微任务），如果在这一步过程中产生新的微任务，也需要执行，也就是说在执行微任务过程中产生的新的微任务并不会推迟到下一个循环中执行，而是在当前的循环中继续执行。\",\"然后再从宏任务队列中取下一个，执行完毕后，再次将 microtask queue 中的全部取出，循环往复，直到两个 queue 中的任务都取完。\",\"也是就是说，一次 Eventloop 循环会处理一个宏任务和所有这次循环中产生的微任务。\",\"下面来通过一个例子来体会事件循环：\",\"console.log('同步代码1'); setTimeout(() => { console.log('setTimeout') }, 0) new Promise((resolve) => { console.log('同步代码2') resolve() }).then(() => { console.log('promise.then') }) console.log('同步代码3');\",\"代码输出结果如下：\",\"\\\"同步代码1\\\" \\\"同步代码2\\\" \\\"同步代码3\\\" \\\"promise.then\\\" \\\"setTimeout\\\"\",\"那这段代码执行过程是怎么的呢？\",\"遇到第一个console，它是同步代码，加入执行栈，执行并出栈，打印出\\\"同步代码1\\\"；\",\"遇到setTimeout，它是一个宏任务，加入宏任务队列；\",\"遇到new Promise 中的console，它是同步代码，加入执行栈，执行并出栈，打印出\\\"同步代码2\\\"；\",\"遇到Promise then，它是一个微任务，加入微任务队列；\",\"遇到第三个console，它是同步代码，加入执行栈，执行并出栈，打印出\\\"同步代码3\\\"；\",\"此时执行栈为空，去执行微任务队列中所有任务，打印出\\\"promise.then\\\"；\",\"执行完微任务队列中的任务，就去执行宏任务队列中的一个任务，打印出\\\"setTimeout\\\"\",\"从上面的宏任务和微任务的工作流程中，可以得出以下结论：\",\"微任务和宏任务是绑定的，每个宏任务在执行时，会创建自己的微任务队列。\",\"微任务的执行时长会影响当前宏任务的时长。比如一个宏任务在执行过程中，产生了 10 个微任务，执行每个微任务的时间是 10ms，那么执行这 10 个微任务的时间就是 100ms，也可以说这 10 个微任务让宏任务的执行时间延长了 100ms。\",\"在一个宏任务中，分别创建一个用于回调的宏任务和微任务，无论什么情况下，微任务都早于宏任务执行（优先级更高）。\",\"那么问题来了，为什么要将任务队列分为微任务和宏任务呢，他们之间的本质区别是什么呢？\",\"JavaScript在遇到异步任务时，会将此任务交给其他线程来执行（比如遇到setTimeout任务，会交给定时器触发线程去执行，待计时结束，就会将定时器回调任务放入任务队列等待主线程来取出执行），主线程会继续执行后面的同步任务。\",\"对于微任务，比如promise.then，当执行promise.then时，浏览器引擎不会将异步任务交给其他浏览器的线程去执行，而是将任务回调存在一个队列中，当执行栈中的任务执行完之后，就去执行promise.then所在的微任务队列。\",\"所以，宏任务和微任务的本质区别如下：\",\"微任务：不需要特定的异步线程去执行，没有明确的异步任务去执行，只有回调；\",\"宏任务：需要特定的异步线程去执行，有明确的异步任务去执行，有回调；\",\"事件队列为空时渲染dom\"]},\"377\":{\"h\":\"3. Node.js的事件循环\"},\"378\":{\"h\":\"（1）事件循环的概念\",\"t\":[\"JavaScript和Node.js是基于V8 引擎的，浏览器中包含的异步方式在 NodeJS 中也是一样的。除此之外，Node.js中还有一些其他的异步形式：\",\"文件 I/O：异步加载本地文件。\",\"setImmediate()：与 setTimeout 设置 0ms 类似，在某些同步任务完成后立马执行。\",\"process.nextTick()：在某些同步任务完成后立马执行。\",\"server.close、socket.on('close',...）等：关闭回调。\",\"这些异步任务的执行就需要依靠Node.js的事件循环机制了。\",\"Node.js 中的 Event Loop 和浏览器中的是完全不相同的东西。Node.js使用V8作为js的解析引擎，而I/O处理方面使用了自己设计的libuv，libuv是一个基于事件驱动的跨平台抽象层，封装了不同操作系统一些底层特性，对外提供统一的API，事件循环机制也是它里面的实现的，如下图所示：\",\"根据上图，可以看到Node.js的运行机制如下:\",\"V8引擎负责解析JavaScript脚本；\",\"解析后的代码，调用Node API；\",\"libuv库负责Node API的执行。它将不同的任务分配给不同的线程，形成一个Event Loop（事件循环），以异步的方式将任务的执行结果返回给V8引擎；\",\"V8引擎将结果返回给用户；\"]},\"379\":{\"h\":\"（2）事件循环的流程\",\"t\":[\"其中libuv引擎中的事件循环分为 6 个阶段，它们会按照顺序反复运行。每当进入某一个阶段的时候，都会从对应的回调队列中取出函数去执行。当队列为空或者执行的回调函数数量到达系统设定的阈值，就会进入下一阶段。下面 是Eventloop 事件循环的流程：\",\"整个流程分为六个阶段，当这六个阶段执行完一次之后，才可以算得上执行了一次 Eventloop 的循环过程。下面来看下这六个阶段都做了哪些事：\",\"timers 阶段：执行timer（setTimeout、setInterval）的回调，由 poll 阶段控制；\",\"I/O callbacks 阶段：主要执行系统级别的回调函数，比如 TCP 连接失败的回调；\",\"idle, prepare 阶段：仅Node.js内部使用，可以忽略；\",\"poll 阶段：轮询等待新的链接和请求等事件，执行 I/O 回调等；\",\"check 阶段：执行 setImmediate() 的回调；\",\"close callbacks 阶段：执行关闭请求的回调函数，比如socket.on('close', ...)\",\"注意：上面每个阶段都会去执行完当前阶段的任务队列，然后继续执行当前阶段的微任务队列，只有当前阶段所有微任务都执行完了，才会进入下个阶段，这里也是与浏览器中逻辑差异较大的地方。\",\"其中，这里面比较重要的就是第四阶段：poll，这一阶段中，系统主要做两件事：\",\"回到 timer 阶段执行回调\",\"执行 I/O 回调\",\"在进入该阶段时如果没有设定了 timer 的话，会出现以下情况：\",\"如果 poll 队列不为空，会遍历回调队列并同步执行，直到队列为空或者达到系统限制；\",\"如果 poll 队列为空时，会出现以下情况：\",\"如果有 setImmediate 回调需要执行，poll 阶段会停止并且进入到 check 阶段执行回调；\",\"如果没有 setImmediate 回调需要执行，会等待回调被加入到队列中并立即执行回调，这里同样会有个超时时间设置防止一直等待下去；\",\"当设定了 timer 且 poll 队列为空，则会判断是否有 timer 超时，如果有的就会回到 timer 阶段执行回调。\",\"这一过程的具体执行流程如下图所示：\"]},\"380\":{\"h\":\"（3）宏任务和微任务\",\"t\":[\"Node.js事件循环的异步队列也分为两种：宏任务队列和微任务队列。\",\"常见的宏任务：setTimeout、setInterval、 setImmediate、script（整体代码）、 I/O 操作等。\",\"常见的微任务：process.nextTick、new Promise().then(回调)等。\"]},\"381\":{\"h\":\"（4）process.nextTick()\",\"t\":[\"上面提到了process.nextTick()，它是node中新引入的一个任务队列，它会在上述各个阶段结束时，在进入下一个阶段之前立即执行。\",\"例如下面的代码：\",\"setTimeout(() => { console.log('timeout'); }, 0); Promise.resolve().then(() => { console.error('promise') }) process.nextTick(() => { console.error('nextTick') })\",\"输出结果如下：\",\"nextTick promise timeout\",\"可以看到，process.nextTick()是优先于promise的回调执行。\"]},\"382\":{\"h\":\"（5）setImmediate 和 setTimeout\",\"t\":[\"上面还提到了setImmediate 和 setTimeout，这两者很相似，主要区别在于调用时机的不同：\",\"setImmediate：在poll阶段完成时执行，即check阶段；\",\"setTimeout：在poll阶段为空闲时，且设定时间到达后执行，但它在timer阶段执行；\",\"例如下面的代码：\",\"setTimeout(() => { console.log('timeout'); }, 0); setImmediate(() => { console.log('setImmediate'); });\",\"输出结果如下：\",\"timeout setImmediate\",\"在上面代码的执行过程中，第一轮循环后，分别将 setTimeout 和 setImmediate 加入了各自阶段的任务队列。第二轮循环首先进入timers 阶段，执行定时器队列回调，然后 pending callbacks和poll 阶段没有任务，因此进入check 阶段执行 setImmediate 回调。所以最后输出为timeout、setImmediate。\"]},\"383\":{\"h\":\"4. Node与浏览器Event Loop差异\",\"t\":[\"Node.js与浏览器的 Event Loop 差异如下：\",\"Node.js：microtask 在事件循环的各个阶段之间执行；\",\"浏览器：microtask 在事件循环的 macrotask 执行完之后执行；\",\"Nodejs和浏览器的事件循环流程对比如下：\",\"执行全局的 Script 代码（与浏览器无差）；\",\"把微任务队列清空：注意，Node 清空微任务队列的手法比较特别。在浏览器中，我们只有一个微任务队列需要接受处理；但在 Node 中，有两类微任务队列：next-tick 队列和其它队列。其中这个 next-tick 队列，专门用来收敛 process.nextTick 派发的异步任务。在清空队列时，优先清空 next-tick 队列中的任务，随后才会清空其它微任务；\",\"开始执行 macro-task（宏任务）。注意，Node 执行宏任务的方式与浏览器不同：在浏览器中，我们每次出队并执行一个宏任务；而在 Node 中，我们每次会尝试清空当前阶段对应宏任务队列里的所有任务（除非达到了系统限制）；\",\"步骤3开始，会进入 3 -> 2 -> 3 -> 2…的循环。\"]},\"384\":{\"c\":[\"Javascript\"]},\"385\":{\"c\":[\"事件循环\"]},\"386\":{\"h\":\"二进制\",\"t\":[\"JavaScript 提供了一些 API 来处理文件或原始文件数据，例如：File、Blob、FileReader、ArrayBuffer、base64 等。下面就来看看它们都是如何使用的，它们之间又有何区别和联系。\"]},\"387\":{\"h\":\"1. Blob\",\"t\":[\"Blob 全称为 binary large object ，即二进制大对象，它是 JavaScript 中的一个对象，表示原始的类似文件的数据。下面是 MDN 中对 Blob 的解释：\",\"Blob 对象表示一个不可变、原始数据的类文件对象。它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream 来用于数据操作。\",\"实际上，Blob 对象是包含有只读原始数据的类文件对象。简单来说，Blob 对象就是一个不可修改的二进制文件。\"]},\"388\":{\"h\":\"（1）Blob 创建\",\"t\":[\"可以使用 Blob() 构造函数来创建一个 Blob：\",\"new Blob(array, options)\",\"其有两个参数：\",\"array：由 ArrayBuffer、ArrayBufferView、Blob、DOMString 等对象构成的，将会被放进 Blob；\",\"options：可选的 BlobPropertyBag 字典，它可能会指定如下两个属性 \",\"type：默认值为 \\\"\\\"，表示将会被放入到 blob 中的数组内容的 MIME 类型。\",\"endings：默认值为\\\"transparent\\\"，用于指定包含行结束符\\\\n 的字符串如何被写入，不常用。\",\"常见的 MIME 类型如下：\",\"MIME 类型\",\"描述\",\"text/plain\",\"纯文本文档\",\"text/html\",\"HTML 文档\",\"text/javascript\",\"JavaScript 文件\",\"text/css\",\"CSS 文件\",\"application/json\",\"JSON 文件\",\"application/pdf\",\"PDF 文件\",\"application/xml\",\"XML 文件\",\"image/jpeg\",\"JPEG 图像\",\"image/png\",\"PNG 图像\",\"image/gif\",\"GIF 图像\",\"image/svg+xml\",\"SVG 图像\",\"audio/mpeg\",\"MP3 文件\",\"video/mpeg\",\"MP4 文件\",\"下面来看一个简单的例子：\",\"const blob = new Blob(['Hello World'], { type: 'text/plain' })\",\"这里可以成为动态文件创建，其正在创建一个类似文件的对象。这个 blob 对象上有两个属性：\",\"size：Blob 对象中所包含数据的大小（字节）；\",\"type：字符串，认为该 Blob 对象所包含的 MIME 类型。如果类型未知，则为空字符串。\",\"下面来看打印结果：\",\"const blob = new Blob(['Hello World'], { type: 'text/plain' }) console.log(blob.size) // 11 console.log(blob.type) // \\\"text/plain\\\"\",\"注意，字符串\\\"Hello World\\\"是 UTF-8 编码的，因此它的每个字符占用 1 个字节。\",\"到现在，Blob 对象看起来似乎我们还是没有啥用。那该如何使用 Blob 对象呢？可以使用 URL.createObjectURL() 方法将将其转化为一个 URL，并在 Iframe 中加载：\",\";<iframe></iframe> const iframe = document.getElementsByTagName('iframe')[0] const blob = new Blob(['Hello World'], { type: 'text/plain' }) iframe.src = URL.createObjectURL(blob)\"]},\"389\":{\"h\":\"（2）Blob 分片\",\"t\":[\"除了使用 Blob()构造函数来创建 blob 对象之外，还可以从 blob 对象中创建 blob，也就是将 blob 对象切片。Blob 对象内置了 slice() 方法用来将 blob 对象分片，其语法如下：\",\"const blob = instanceOfBlob.slice([start [, end [, contentType]]]};\",\"其有三个参数：\",\"start：设置切片的起点，即切片开始位置。默认值为 0，这意味着切片应该从第一个字节开始；\",\"end：设置切片的结束点，会对该位置之前的数据进行切片。默认值为 blob.size；\",\"contentType：设置新 blob 的 MIME 类型。如果省略 type，则默认为 blob 的原始值。\",\"下面来看例子：\",\"const iframe = document.getElementsByTagName('iframe')[0] const blob = new Blob(['Hello World'], { type: 'text/plain' }) const subBlob = blob.slice(0, 5) iframe.src = URL.createObjectURL(subBlob)\",\"此时页面会显示\\\"Hello\\\"。\"]},\"390\":{\"h\":\"2. File\",\"t\":[\"文件（File）接口提供有关文件的信息，并允许网页中的 JavaScript 访问其内容。实际上，File 对象是特殊类型的 Blob，且可以用在任意的 Blob 类型的 context 中。Blob 的属性和方法都可以用于 File 对象。 注意：File 对象中只存在于浏览器环境中，在 Node.js 环境中不存在。\",\"在 JavaScript 中，主要有两种方法来获取 File 对象：\",\"<input>元素上选择文件后返回的 FileList 对象；\",\"文件拖放操作生成的 DataTransfer 对象；\"]},\"391\":{\"h\":\"（1）input\",\"t\":[\"首先定义一个输入类型为 file 的 input 标签：\",\"<input type=\\\"file\\\" id=\\\"fileInput\\\" multiple=\\\"multiple\\\">\",\"这里给 input 标签添加了三个属性：\",\"type=\\\"file\\\"：指定 input 的输入类型为文件；\",\"id=\\\"fileInput\\\"：指定 input 的唯一 id；\",\"multiple=\\\"multiple\\\"：指定 input 可以同时上传多个文件；\",\"下面来给 input 标签添加 onchange 事件，当选择文件并上传之后触发：\",\"const fileInput = document.getElementById('fileInput') fileInput.onchange = (e) => { console.log(e.target.files) }\",\"当点击上传文件时，控制台就会输出一个 FileList 数组，这个数组的每个元素都是一个 File 对象，一个上传的文件就对应一个 File 对象：\",\"每个 File 对象都包含文件的一些属性，这些属性都继承自 Blob 对象：\",\"lastModified：引用文件最后修改日期，为自 1970 年 1 月 1 日 0:00 以来的毫秒数；\",\"lastModifiedDate：引用文件的最后修改日期；\",\"name：引用文件的文件名；\",\"size：引用文件的文件大小；\",\"type：文件的媒体类型（MIME）；\",\"webkitRelativePath：文件的路径或 URL。\",\"通常，我们在上传文件时，可以通过对比 size 属性来限制文件大小，通过对比 type 来限制上传文件的格式等。\"]},\"392\":{\"h\":\"（2）文件拖放\",\"t\":[\"另一种获取 File 对象的方式就是拖放 API，这个 API 很简单，就是将浏览器之外的文件拖到浏览器窗口中，并将它放在一个成为拖放区域的特殊区域中。拖放区域用于响应放置操作并从放置的项目中提取信息。这些是通过 ondrop 和 ondragover 两个 API 实现的。\",\"下面来看一个简单的例子，首先定义一个拖放区域：\",\"<div id='drop-zone'></div>\",\"然后给这个元素添加 ondragover 和 ondrop 事件处理程序：\",\"const dropZone = document.getElementById('drop-zone') dropZone.ondragover = (e) => { e.preventDefault() } dropZone.ondrop = (e) => { e.preventDefault() const files = e.dataTransfer.files console.log(files) }\",\"注意：这里给两个 API 都添加了 e.preventDefault()，用来阻止默认事件。它是非常重要的，可以用来阻止浏览器的一些默认行为，比如放置文件将显示在浏览器窗口中。\",\"当拖放文件到拖放区域时，控制台就会输出一个 FileList 数组，该数组的每一个元素都是一个 File 对象。这个 FileList 数组是从事件参数的 dataTransfer 属性的 files 获取的：\",\"可以看到，这里得到的 File 对象和通过 input 标签获得的 File 对象是完全一样的。\"]},\"393\":{\"h\":\"3. FileReader\",\"t\":[\"FileReader 是一个异步 API，用于读取文件并提取其内容以供进一步使用。FileReader 可以将 Blob 读取为不同的格式。\",\"注意：FileReader 仅用于以安全的方式从用户（远程）系统读取文件内容，不能用于从文件系统中按路径名简单地读取文件。\"]},\"394\":{\"h\":\"（1）基本使用\",\"t\":[\"可以使用 FileReader 构造函数来创建一个 FileReader 对象：\",\"const reader = new FileReader()\",\"这个对象常用属性如下：\",\"error：表示在读取文件时发生的错误；\",\"result：文件内容。该属性仅在读取操作完成后才有效，数据的格式取决于使用哪个方法来启动读取操作。\",\"readyState：表示 FileReader 状态的数字。取值如下：\",\"常量名\",\"值\",\"描述\",\"EMPTY\",\"0\",\"还没有加载任何数据。\",\"LOADING\",\"1\",\"数据正在被加载。\",\"DONE\",\"2\",\"已完成全部的读取请求。\",\"FileReader 对象提供了以下方法来加载文件：\",\"readAsArrayBuffer()：读取指定 Blob 中的内容，完成之后，result 属性中保存的将是被读取文件的 ArrayBuffer 数据对象；\",\"FileReader.readAsBinaryString()：读取指定 Blob 中的内容，完成之后，result 属性中将包含所读取文件的原始二进制数据；\",\"FileReader.readAsDataURL()：读取指定 Blob 中的内容，完成之后，result 属性中将包含一个 data: URL 格式的 Base64 字符串以表示所读取文件的内容。\",\"FileReader.readAsText()：读取指定 Blob 中的内容，完成之后，result 属性中将包含一个字符串以表示所读取的文件内容。\",\"可以看到，上面这些方法都接受一个要读取的 blob 对象作为参数，读取完之后会将读取的结果放入对象的 result 属性中。\"]},\"395\":{\"h\":\"（2）事件处理\",\"t\":[\"FileReader 对象常用的事件如下：\",\"abort：该事件在读取操作被中断时触发；\",\"error：该事件在读取操作发生错误时触发；\",\"load：该事件在读取操作完成时触发；\",\"progress：该事件在读取 Blob 时触发。\",\"当然，这些方法可以加上前置 on 后在 HTML 元素上使用，比如 onload、onerror、onabort、onprogress。除此之外，由于 FileReader 对象继承自 EventTarget，因此还可以使用 addEventListener() 监听上述事件。\",\"下面来看一个简单的例子，首先定义一个 input 输入框用于上传文件：\",\"<input type=\\\"file\\\" id=\\\"fileInput\\\">\",\"接下来定义 input 标签的 onchange 事件处理函数和 FileReader 对象的 onload 事件处理函数：\",\"const fileInput = document.getElementById('fileInput') const reader = new FileReader() fileInput.onchange = (e) => { reader.readAsText(e.target.files[0]) } reader.onload = (e) => { console.log(e.target.result) }\",\"这里，首先创建了一个 FileReader 对象，当文件上传成功时，使用 readAsText() 方法读取 File 对象，当读取操作完成时打印读取结果。\",\"使用上述例子读取文本文件时，就是比较正常的。如果读取二进制文件，比如 png 格式的图片，往往会产生乱码，如下：\",\"那该如何处理这种二进制数据呢？readAsDataURL() 是一个不错的选择，它可以将读取的文件的内容转换为 base64 数据的 URL 表示。这样，就可以直接将 URL 用在需要源链接的地方，比如 img 标签的 src 属性。\",\"对于上述例子，将 readAsText 方法改为 readAsDataURL()：\",\"const fileInput = document.getElementById('fileInput') const reader = new FileReader() fileInput.onchange = (e) => { reader.readAsDataURL(e.target.files[0]) } reader.onload = (e) => { console.log(e.target.result) }\",\"这时，再次上传二进制图片时，就会在控制台打印一个 base64 编码的 URL，如下：\",\"下面来修改一下这个例子，将上传的图片通过以上方式显示在页面上：\",\"<input type=\\\"file\\\" id=\\\"fileInput\\\" /><br /> <img id=\\\"preview\\\" />\",\"const fileInput = document.getElementById('fileInput') const preview = document.getElementById('preview') const reader = new FileReader() fileInput.onchange = (e) => { reader.readAsDataURL(e.target.files[0]) } reader.onload = (e) => { preview.src = e.target.result console.log(e.target.result) }\",\"当上传大文件时，可以通过 progress 事件来监控文件的读取进度：\",\"const reader = new FileReader(); reader.onprogress = (e) => { if (e.loaded && e.total) { const percent = (event.loaded / event.total) * 100; console.log(`上传进度: ${Math.round(percent)} %`); } });\",\"progress 事件提供了两个属性：loaded（已读取量）和 total（需读取总量）。\"]},\"396\":{\"h\":\"4. ArrayBuffer\"},\"397\":{\"h\":\"（1）ArrayBuffer\",\"t\":[\"ArrayBuffer 对象用来表示通用的、固定长度的原始二进制数据缓冲区。ArrayBuffer 的内容不能直接操作，只能通过 DataView 对象或 TypedArrray 对象来访问。这些对象用于读取和写入缓冲区内容。\",\"ArrayBuffer 本身就是一个黑盒，不能直接读写所存储的数据，需要借助以下视图对象来读写：\",\"TypedArray：用来生成内存的视图，通过 9 个构造函数，可以生成 9 种数据格式的视图。\",\"DataViews：用来生成内存的视图，可以自定义格式和字节序。\",\"TypedArray 视图和 DataView 视图的区别主要是字节序，前者的数组成员都是同一个数据类型，后者的数组成员可以是不同的数据类型。\",\"那 ArrayBuffer 与 Blob 有啥区别呢？根据 ArrayBuffer 和 Blob 的特性，Blob 作为一个整体文件，适合用于传输；当需要对二进制数据进行操作时（比如要修改某一段数据时），就可以使用 ArrayBuffer。\",\"下面来看看 ArrayBuffer 有哪些常用的方法和属性。\"]},\"398\":{\"h\":\"new ArrayBuffer()\",\"t\":[\"ArrayBuffer 可以通过以下方式生成：\",\"new ArrayBuffer(bytelength)\",\"ArrayBuffer()构造函数可以分配指定字节数量的缓冲区，其参数和返回值如下：\",\"参数：它接受一个参数，即 bytelength，表示要创建数组缓冲区的大小（以字节为单位。）；\",\"返回值：返回一个新的指定大小的 ArrayBuffer 对象，内容初始化为 0。\"]},\"399\":{\"h\":\"ArrayBuffer.prototype.byteLength\",\"t\":[\"ArrayBuffer 实例上有一个 byteLength 属性，它是一个只读属性，表示 ArrayBuffer 的 byte 的大小，在 ArrayBuffer 构造完成时生成，不可改变。来看例子：\",\"const buffer = new ArrayBuffer(16) console.log(buffer.byteLength) // 16\"]},\"400\":{\"h\":\"ArrayBuffer.prototype.slice()\",\"t\":[\"ArrayBuffer 实例上还有一个 slice 方法，该方法可以用来截取 ArrayBuffer 实例，它返回一个新的 ArrayBuffer ，它的内容是这个 ArrayBuffer 的字节副本，从 begin（包括），到 end（不包括）。来看例子：\",\"const buffer = new ArrayBuffer(16) console.log(buffer.slice(0, 8)) // 16\",\"这里会从 buffer 对象上将前 8 个字节生成一个新的 ArrayBuffer 对象。这个方法实际上有两步操作，首先会分配一段指定长度的内存，然后拷贝原来 ArrayBuffer 对象的置顶部分。\"]},\"401\":{\"h\":\"ArrayBuffer.isView()\",\"t\":[\"ArrayBuffer 上有一个 isView()方法，它的返回值是一个布尔值，如果参数是 ArrayBuffer 的视图实例则返回 true，例如类型数组对象或 DataView 对象；否则返回 false。简单来说，这个方法就是用来判断参数是否是 TypedArray 实例或者 DataView 实例：\",\"const buffer = new ArrayBuffer(16) ArrayBuffer.isView(buffer) // false const view = new Uint32Array(buffer) ArrayBuffer.isView(view) // true\"]},\"402\":{\"h\":\"（2）TypedArray\",\"t\":[\"TypedArray 对象一共提供 9 种类型的视图，每一种视图都是一种构造函数。如下：\",\"元素\",\"类型化数组\",\"字节\",\"描述\",\"Int8\",\"Int8Array\",\"1\",\"8 位有符号整数\",\"Uint8\",\"Uint8Array\",\"1\",\"8 位无符号整数\",\"Uint8C\",\"Uint8ClampedArray\",\"1\",\"8 位无符号整数\",\"Int16\",\"Int16Array\",\"2\",\"16 位有符号整数\",\"Uint16\",\"Uint16Array\",\"2\",\"16 位无符号整数\",\"Int32\",\"Int32Array\",\"4\",\"32 位有符号整数\",\"Uint32\",\"Uint32Array\",\"4\",\"32 位无符号整数\",\"Float32\",\"Float32Array\",\"4\",\"32 位浮点\",\"Float64\",\"Float64Array\",\"8\",\"64 位浮点\",\"来看看这些都是什么意思：\",\"Uint8Array：将 ArrayBuffer 中的每个字节视为一个整数，可能的值从 0 到 255 （一个字节等于 8 位）。 这样的值称为“8 位无符号整数”。\",\"Uint16Array：将 ArrayBuffer 中任意两个字节视为一个整数，可能的值从 0 到 65535。 这样的值称为“16 位无符号整数”。\",\"Uint32Array：将 ArrayBuffer 中任何四个字节视为一个整数，可能值从 0 到 4294967295，这样的值称为“32 位无符号整数”。\",\"这些构造函数生成的对象统称为 TypedArray 对象。它们和正常的数组很类似，都有 length 属性，都能用索引获取数组元素，所有数组的方法都可以在类型化数组上面使用。\",\"那类型化数组和数组有什么区别呢？\",\"类型化数组的元素都是连续的，不会为空；\",\"类型化数组的所有成员的类型和格式相同；\",\"类型化数组元素默认值为 0；\",\"类型化数组本质上只是一个视图层，不会存储数据，数据都存储在更底层的 ArrayBuffer 对象中。\",\"下面来看看 TypedArray 都有哪些常用的方法和属性。\"]},\"403\":{\"h\":\"new TypedArray()\",\"t\":[\"TypedArray 的语法如下（TypedArray 只是一个概念，实际使用的是那 9 个对象）：\",\"new Int8Array(length); new Int8Array(typedArray); new Int8Array(object); new Int8Array(buffer [, byteOffset [, length]]);\",\"可以看到，TypedArray 有多种用法，下面来分别看一下。\",\"TypedArray(length)：通过分配指定长度内容进行分配\",\"let view = new Int8Array(16) view[0] = 10 view[10] = 6 console.log(view)\",\"这里就生成了一个 16 个元素的 Int8Array 数组，除了手动赋值的元素，其他元素的初始值都是 0。\",\"TypedArray(typeArray)：接收一个视图实例作为参数\",\"const view = new Int8Array(new Uint8Array(6)) view[0] = 10 view[3] = 6 console.log(view)\",\"输出结果如下：\",\"TypedArray(object)：参数可以是一个普通数组\",\"const view = new Int8Array([1, 2, 3, 4, 5]) view[0] = 10 view[3] = 6 console.log(view)\",\"输出结果如下：\",\"需要注意，TypedArray 视图会开辟一段新的内存，不会在原数组上建立内存。当然，这里创建的类型化数组也能转换回普通数组：\",\"Array.prototype.slice.call(view) // [10, 2, 3, 6, 5]\",\"TypeArray(buffer [, byteOffset [, length]])：\",\"这种方式有三个参数，其中第一个参数是一个 ArrayBuffer 对象；第二个参数是视图开始的字节序号，默认从 0 开始，可选；第三个参数是视图包含的数据个数，默认直到本段内存区域结束。\",\"const buffer = new ArrayBuffer(8) const view1 = new Int32Array(buffer) const view2 = new Int32Array(buffer, 4) console.log(view1, view2)\",\"输出结果如下：\"]},\"404\":{\"h\":\"BYTES_PER_ELEMENT\",\"t\":[\"每种视图的构造函数都有一个 BYTES_PER_ELEMENT 属性，表示这种数据类型占据的字节数：\",\"Int8Array.BYTES_PER_ELEMENT // 1 Uint8Array.BYTES_PER_ELEMENT // 1 Int16Array.BYTES_PER_ELEMENT // 2 Uint16Array.BYTES_PER_ELEMENT // 2 Int32Array.BYTES_PER_ELEMENT // 4 Uint32Array.BYTES_PER_ELEMENT // 4 Float32Array.BYTES_PER_ELEMENT // 4 Float64Array.BYTES_PER_ELEMENT // 8\",\"BYTES_PER_ELEMENT 属性也可以在类型化数组的实例上获取：\",\"const buffer = new ArrayBuffer(16); const view = new Uint32Array(buffer); console.log(Uint32Array.BYTES_PER_ELEMENT); // 4\"]},\"405\":{\"h\":\"TypedArray.prototype.buffer\",\"t\":[\"TypedArray 实例的 buffer 属性会返回内存中对应的 ArrayBuffer对象，只读属性。\",\"const a = new Uint32Array(8); const b = new Int32Array(a.buffer); console.log(a, b);\",\"输出结果如下：\"]},\"406\":{\"h\":\"TypedArray.prototype.slice()\",\"t\":[\"TypeArray 实例的 slice方法可以返回一个指定位置的新的 TypedArray实例。\",\"const view = new Int16Array(8); console.log(view.slice(0 ,5));\",\"输出结果如下：\"]},\"407\":{\"h\":\"byteLength 和 length\",\"t\":[\"byteLength：返回 TypedArray 占据的内存长度，单位为字节；\",\"length：返回 TypedArray 元素个数；\"]},\"408\":{\"h\":\"（3）DataView\",\"t\":[\"说完 ArrayBuffer，下面来看看另一种操作 ArrayBuffer 的方式：DataView。DataView 视图是一个可以从 二进制 ArrayBuffer 对象中读写多种数值类型的底层接口，使用它时，不用考虑不同平台的字节序问题。\",\"DataView视图提供更多操作选项，而且支持设定字节序。本来，在设计目的上，ArrayBuffer对象的各种TypedArray视图，是用来向网卡、声卡之类的本机设备传送数据，所以使用本机的字节序就可以了；而DataView视图的设计目的，是用来处理网络设备传来的数据，所以大端字节序或小端字节序是可以自行设定的。\"]},\"409\":{\"h\":\"new DataView()\",\"t\":[\"DataView视图可以通过构造函数来创建，它的参数是一个ArrayBuffer对象，生成视图。其语法如下：\",\"new DataView(buffer [, byteOffset [, byteLength]])\",\"其有三个参数：\",\"buffer：一个已经存在的 ArrayBuffer 对象，DataView 对象的数据源。\",\"byteOffset：可选，此 DataView 对象的第一个字节在 buffer 中的字节偏移。如果未指定，则默认从第一个字节开始。\",\"byteLength：可选，此 DataView 对象的字节长度。如果未指定，这个视图的长度将匹配 buffer 的长度。\",\"来看一个例子：\",\"const buffer = new ArrayBuffer(16); const view = new DataView(buffer); console.log(view);\",\"打印结果如下：\"]},\"410\":{\"h\":\"buffer、byteLength、byteOffset\",\"t\":[\"DataView实例有以下常用属性：\",\"buffer：返回对应的ArrayBuffer对象；\",\"byteLength：返回占据的内存字节长度；\",\"byteOffset：返回当前视图从对应的ArrayBuffer对象的哪个字节开始。\",\"const buffer = new ArrayBuffer(16); const view = new DataView(buffer); view.buffer; view.byteLength; view.byteOffset;\",\"打印结果如下：\"]},\"411\":{\"h\":\"读取内存\",\"t\":[\"DataView 实例提供了以下方法来读取内存，它们的参数都是一个字节序号，表示开始读取的字节位置：\",\"getInt8：读取1个字节，返回一个8位整数。\",\"getUint8：读取1个字节，返回一个无符号的8位整数。\",\"getInt16：读取2个字节，返回一个16位整数。\",\"getUint16：读取2个字节，返回一个无符号的16位整数。\",\"getInt32：读取4个字节，返回一个32位整数。\",\"getUint32：读取4个字节，返回一个无符号的32位整数。\",\"getFloat32：读取4个字节，返回一个32位浮点数。\",\"getFloat64：读取8个字节，返回一个64位浮点数。\",\"下面来看一个例子：\",\"const buffer = new ArrayBuffer(24); const view = new DataView(buffer); // 从第1个字节读取一个8位无符号整数 const view1 = view.getUint8(0); // 从第2个字节读取一个16位无符号整数 const view2 = view.getUint16(1); // 从第4个字节读取一个16位无符号整数 const view3 = view.getUint16(3);\"]},\"412\":{\"h\":\"写入内存\",\"t\":[\"DataView 实例提供了以下方法来写入内存，它们都接受两个参数，第一个参数表示开始写入数据的字节序号，第二个参数为写入的数据：\",\"setInt8：写入1个字节的8位整数。\",\"setUint8：写入1个字节的8位无符号整数。\",\"setInt16：写入2个字节的16位整数。\",\"setUint16：写入2个字节的16位无符号整数。\",\"setInt32：写入4个字节的32位整数。\",\"setUint32：写入4个字节的32位无符号整数。\",\"setFloat32：写入4个字节的32位浮点数。\",\"setFloat64：写入8个字节的64位浮点数。\"]},\"413\":{\"h\":\"5. Object URL\",\"t\":[\"Object URL（MDN定义名称）又称Blob URL（W3C定义名称），是HTML5中的新标准。它是一个用来表示File Object 或Blob Object 的URL。在网页中，我们可能会看到过这种形式的 Blob URL：\",\"其实Blob URL/Object URL 是一种伪协议，允许将 Blob 和 File 对象用作图像、二进制数据下载链接等的 URL 源。\",\"对于 Blob/File 对象，可以使用 URL构造函数的 createObjectURL() 方法创建将给出的对象的 URL。这个 URL 对象表示指定的 File 对象或 Blob 对象。我们可以在<img>、<script> 标签中或者<a>和 <link> 标签的 href 属性中使用这个 URL。\",\"来看一个简单的例子，首先定义一个文件上传的 input 和一个 图片预览的 img：\",\"<input type=\\\"file\\\" id=\\\"fileInput\\\" /><br /> <img id=\\\"preview\\\" />\",\"再来使用 URL.createObjectURL() 将File 对象转化为一个 URL：\",\"const fileInput = document.getElementById(\\\"fileInput\\\"); const preview = document.getElementById(\\\"preview\\\"); fileInput.onchange = (e) => { preview.src = URL.createObjectURL(e.target.files[0]); console.log(preview.src); };\",\"可以看到，上传的图片转化成了一个 URL，并显示在了屏幕上：\",\"那这个 API 有什么意义呢？可以将Blob/File对象转化为URL，通过这个URL 就可以实现文件下载或者图片显示等。\",\"当我们使用createObjectURL()方法创建一个data URL 时，就需要使用revokeObjectURL()方法从内存中清除它来释放内存。虽然浏览器会在文档卸载时自动释放 Data URL，但为了提高性能，我们应该使用createObjectURL()来手动释放它。revokeObjectURL()方法接受一个Data URL 作为其参数，返回undefined。下面来看一个例子：\",\"const objUrl = URL.createObjectURL(new File([\\\"\\\"], \\\"filename\\\")); console.log(objUrl); URL.revokeObjectURL(objUrl);\"]},\"414\":{\"h\":\"6. Base64\",\"t\":[\"Base64 是一种基于64个可打印字符来表示二进制数据的表示方法。Base64 编码普遍应用于需要通过被设计为处理文本数据的媒介上储存和传输二进制数据而需要编码该二进制数据的场景。这样是为了保证数据的完整并且不用在传输过程中修改这些数据。\",\"在 JavaScript 中，有两个函数被分别用来处理解码和编码 base64 字符串：\",\"atob()：解码，解码一个 Base64 字符串；\",\"btoa()：编码，从一个字符串或者二进制数据编码一个 Base64 字符串。\",\"btoa(\\\"JavaScript\\\") // 'SmF2YVNjcmlwdA==' atob('SmF2YVNjcmlwdA==') // 'JavaScript'\",\"那 base64 的实际应用场景有哪些呢？其实多数场景就是基于Data URL的。比如，使用toDataURL()方法把 canvas 画布内容生成 base64 编码格式的图片：\",\"const canvas = document.getElementById('canvas'); const ctx = canvas.getContext(\\\"2d\\\"); const dataUrl = canvas.toDataURL();\",\"除此之外，还可以使用readAsDataURL()方法把上传的文件转为base64格式的data URI，比如上传头像展示或者编辑：\",\"<input type=\\\"file\\\" id=\\\"fileInput\\\" /><br /> <img id=\\\"preview\\\" />\",\"const fileInput = document.getElementById(\\\"fileInput\\\"); const preview = document.getElementById(\\\"preview\\\"); const reader = new FileReader(); fileInput.onchange = (e) => { reader.readAsDataURL(e.target.files[0]); }; reader.onload = (e) => { preview.src = e.target.result; console.log(e.target.result); };\",\"效果如下，将图片（二进制数据）转化为可打印的字符，也便于数据的传输：\",\"另外，一些小的图片都可以使用 base64 格式进行展示，img标签和background的 url 属性都支持使用base64 格式的图片，这样做也可以减少 HTTP 请求。\"]},\"415\":{\"h\":\"7. 格式转化\",\"t\":[\"看完这些基本的概念和使用，下面就来看看常用的格式之间是如何转换的。\"]},\"416\":{\"h\":\"（1）ArrayBuffer → blob\",\"t\":[\"const blob = new Blob([new Uint8Array(buffer, byteOffset, length)]);\"]},\"417\":{\"h\":\"（2）ArrayBuffer → base64\",\"t\":[\"const base64 = btoa(String.fromCharCode.apply(null, new Uint8Array(arrayBuffer)));\"]},\"418\":{\"h\":\"（3）base64 → blob\",\"t\":[\"const base64toBlob = (base64Data, contentType, sliceSize) => { const byteCharacters = atob(base64Data); const byteArrays = []; for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) { const slice = byteCharacters.slice(offset, offset + sliceSize); const byteNumbers = new Array(slice.length); for (let i = 0; i < slice.length; i++) { byteNumbers[i] = slice.charCodeAt(i); } const byteArray = new Uint8Array(byteNumbers); byteArrays.push(byteArray); } const blob = new Blob(byteArrays, {type: contentType}); return blob; }\"]},\"419\":{\"h\":\"（4）blob → ArrayBuffer\",\"t\":[\"function blobToArrayBuffer(blob) { return new Promise((resolve, reject) => { const reader = new FileReader(); reader.onload = () => resolve(reader.result); reader.onerror = () => reject; reader.readAsArrayBuffer(blob); }); }\"]},\"420\":{\"h\":\"（5）blob → base64\",\"t\":[\"function blobToBase64(blob) { return new Promise((resolve) => { const reader = new FileReader(); reader.onloadend = () => resolve(reader.result); reader.readAsDataURL(blob); }); }\"]},\"421\":{\"h\":\"（6）blob → Object URL\",\"t\":[\"const objectUrl = URL.createObjectURL(blob);\"]},\"422\":{\"c\":[\"Javascript\"]},\"423\":{\"c\":[\"二进制\"]},\"424\":{\"h\":\"内存泄漏\",\"t\":[\"SPA（单页应用程序）的兴起，促使我们更加关注与内存相关的 JavaScript 编码实践。如果应用使用的内存越来越多，就会严重影响性能，甚至导致浏览器的崩溃。下面就来看看 JavaScript 中常见的内存泄漏以及如何避免内存泄漏。\"]},\"425\":{\"h\":\"一、什么是内存泄漏？\",\"t\":[\"JavaScript 就是所谓的垃圾回收语言之一，垃圾回收语言通过定期检查哪些先前分配的内存仍然可以从应用程序的其他部分“访问”来帮助开发人员管理内存。垃圾回收语言中泄漏的主要原因是不需要的引用。如果你的 JavaScript 应用程序经常发生崩溃、高延迟和性能差，那么一个潜在的原因可能是内存泄漏。\",\"在 JavaScript 中，内存是有生命周期的：\",\"分配内存：内存由操作系统分配，允许程序使用它。在 JavaScript 中，分配内存是自动完成的。\",\"使用内存：这是程序实际使用先前分配的内存的空间。当在代码中使用分配的变量时，会发生读取和写入操作。\",\"释放内存：释放不需要的内存，这样内存就会空闲并可以再次利用。在 JavaScript 中，释放内存是自动完成的。\",\"在 JavaScript 中，对象会保存在堆内存中，可以根据引用链从根访问它们。垃圾收集器是 JavaScript 引擎中的一个后台进程，用于识别无法访问的对象、删除它们并回收内存。\",\"下面是垃圾收集器根到对象的引用链示例：\",\"当内存中应该在垃圾回收周期中清理的对象，通过另一个对象的无意引用从根保持可访问时，就会发生内存泄漏。将冗余对象保留在内存中会导致应用程序内部使用过多的内存，并可能导致性能下降。\",\"那该如何判断代码正在泄漏内存呢？通常，内存泄漏是很难被发现的，并且浏览器在运行它时不会抛出任何错误。如果注意到页面的性能越来越差，浏览器的内置工具可以帮助我们确定是否存在内存泄漏以及导致内存泄漏的对象。\",\"内存使用检查最快的方法就是查看浏览器的任务管理器。它们提供了当前在浏览器中运行的所有选项卡和进程的概览。在任务管理器中查看每个选项卡的 JavaScript 内存占用情况。如果网站什么都不做，但是 JavaScript 内存使用量却在逐渐增加，那们很有可能发生了内存泄漏。\"]},\"426\":{\"h\":\"二、常见的内存泄漏\",\"t\":[\"我们可以通过了解在 JavaScript 中如何创建不需要的引用来防止内存泄漏。以下情况就会导致不需要的引用。\"]},\"427\":{\"h\":\"1. 意外全局变量\",\"t\":[\"全局变量始终可以从全局对象（在浏览器中，全局对象是 window）中获得，并且永远不会被垃圾回收。在非严格模式下，以下行为会导致变量从局部范围泄露到全局范围：\"]},\"428\":{\"h\":\"（1）为未声明的变量赋值\",\"t\":[\"这里我们给函数中一个未声明的变量 bar 赋值，这时就会使 bar 成为一个全局变量：\",\"function foo(arg) { bar = 'hello world' }\",\"这就等价于：\",\"function foo(arg) { window.bar = 'hello world' }\",\"这样就会创建一个多余的全局变量，当执行完 foo 函数之后，变量 bar 仍然会存在于全局对象中：\",\"foo() window.bar // hello world\"]},\"429\":{\"h\":\"（2）使用指向全局对象的 this\",\"t\":[\"使用以下方式也会创建一个以外的全局变量：\",\"function foo() { this.bar = 'hello world' } foo()\",\"这里 foo 是在全局对象中调用的，所以其 this 是指向全局对象的（这里是 window）:\",\"window.bar // hello world\",\"我们可以通过使用严格模式“use strict”来避免这一切。在 JavaScript 文件的开头，它将开启更严格的 JavaScript 解析模式，从而防止意外的创建全局变量。\",\"需要特别注意那些用于临时存储和处理大量信息的全局变量。如果必须使用全局变量存储数据，就使用全局变量存储数据，但在不再使用时，就手动将其设置为 null，或者在处理完后重新分配。否则的话，请尽可能的使用局部变量。\"]},\"430\":{\"h\":\"2. 计时器\",\"t\":[\"使用 setTimeout 或 setInterval 引用回调中的某个对象是防止对象被垃圾收集的最常见方法。如果我们在代码中设置了循环计时器，只要回调是可调用的，计时器回调中对对象的引用就会保持活动状态。\",\"在下面的示例中，只有在清除计时器后，才能对数据对象进行垃圾收集。由于我们没有对 setInterval 的引用，所以它永远无法被清除和删除数据。hugeString 会一直保存在内存中，直到应用程序停止，尽管从未使用过。\",\"function setCallback() { const data = { counter: 0, hugeString: new Array(100000).join('x'), } return function cb() { data.counter++ // data对象是回调范围的一部分 console.log(data.counter) } } setInterval(setCallback(), 1000)\",\"当执行这段代码时，就会每秒输出一个数字：\",\"那我们如何去阻止他呢？尤其是在回调的寿命未定义或不确定的情况下：\",\"修改计时器回调中引用的对象；\",\"必要时使用从计时器返回的句柄（定时器的标识符）取消它。\",\"function setCallback() { // 将数据对象解包 let counter = 0 const hugeString = new Array(100000).join('x') // 在setCallback返回时被删除 return function cb() { counter++ // 只有计数器counter是回调范围的一部分 console.log(counter) } } const timerId = setInterval(setCallback(), 1000) // 保存定时器的ID // 合适的时机清除定时器 clearInterval(timerId)\"]},\"431\":{\"h\":\"3. 闭包\",\"t\":[\"我们知道，函数范围内的变量在函数退出调用堆栈后，如果函数外部没有任何指向它们的引用，则会被清除。尽管函数已经完成执行，其执行上下文和变量环境早已消失，但闭包将保持变量的引用和活动状态。\",\"function outer() { const potentiallyHugeArray = [] return function inner() { potentiallyHugeArray.push('Hello') console.log('Hello') } } const sayHello = outer() function repeat(fn, num) { for (let i = 0; i < num; i++) { fn() } } repeat(sayHello, 10)\",\"显而易见，这里就形成了一个闭包。其输出结果如下：\",\" 这里，potentiallyHugeArray 永远不会从任何函数返回，也无法访问，但它的大小可能会无限增长，这取决于调用函数 inner() 的次数。\",\"那该如何防止这个问题呢？闭包是不可避免的，也是 JavaScript 不可或缺的一部分，因此重要的是：\",\"了解何时创建闭包以及闭包保留了哪些对象；\",\"了解闭包的预期寿命和用法（尤其是用作回调时）。\"]},\"432\":{\"h\":\"4. 事件监听器\",\"t\":[\"活动事件侦听器将防止在其范围内捕获的所有变量被垃圾收集。添加后，事件侦听器将一直有效，直到：\",\"使用 removeEventListener() 显式删除\",\"关联的 DOM 元素被移除。\",\"对于某些类型的事件，它会一直保留到用户离开页面，就像应该多次单击的按钮一样。但是，有时我们希望事件侦听器执行一定次数。\",\"const hugeString = new Array(100000).join('x') document.addEventListener('keyup', function () { // 匿名内联函数，无法删除它 doSomething(hugeString) // hugeString 将永远保留在回调的范围内 })\",\"在上面的示例中，匿名内联函数用作事件侦听器，这意味着不能使用 removeEventListener() 删除它。同样，document 不能被删除，因此只能使用 listener 函数以及它在其范围内保留的内容，即使只需要启动一次。\",\"那该如何防止这个问题呢？一旦不再需要，我们应该通过创建指向事件侦听器的引用并将其传递给 removeEventListener() 来注销事件侦听器。\",\"function listener() { doSomething(hugeString) } document.addEventListener('keyup', listener) document.removeEventListener('keyup', listener)\",\"如果事件侦听器只能执行一次，addEventListener() 可以接受第三个参数，这是一个提供附加选项的对象。假定将 {once:true} 作为第三个参数传递给 addEventListener() ，则侦听器函数将在处理一次事件后自动删除。\",\"document.addEventListener( 'keyup', function listener() { doSomething(hugeString) }, { once: true } )\"]},\"433\":{\"h\":\"5. 缓存\",\"t\":[\"如果我们不断地将内存添加到缓存中，而不删除未使用的对象，并且没有一些限制大小的逻辑，那么缓存可以无限增长。\",\"let user_1 = { name: 'Peter', id: 12345 } let user_2 = { name: 'Mark', id: 54321 } const mapCache = new Map() function cache(obj) { if (!mapCache.has(obj)) { const value = `${obj.name} has an id of ${obj.id}` mapCache.set(obj, value) return [value, 'computed'] } return [mapCache.get(obj), 'cached'] } cache(user_1) // ['Peter has an id of 12345', 'computed'] cache(user_1) // ['Peter has an id of 12345', 'cached'] cache(user_2) // ['Mark has an id of 54321', 'computed'] console.log(mapCache) // {{…} => 'Peter has an id of 12345', {…} => 'Mark has an id of 54321'} user_1 = null console.log(mapCache) // {{…} => 'Peter has an id of 12345', {…} => 'Mark has an id of 54321'}\",\"在上面的示例中，缓存仍然保留 user_1 对象。因此，我们需要将那些永远不会被重用的变量从缓存中清除。\",\"可以使用 WeakMap 来解决此问题。它是一种具有弱键引用的数据结构，仅接受对象作为键。如果我们使用一个对象作为键，并且它是对该对象的唯一引用——相关变量将从缓存中删除并被垃圾收集。在以下示例中，将 user_1 对象清空后，相关变量会在下一次垃圾回收后自动从 WeakMap 中删除。\",\"let user_1 = { name: 'Peter', id: 12345 } let user_2 = { name: 'Mark', id: 54321 } const weakMapCache = new WeakMap() function cache(obj) { // ... return [weakMapCache.get(obj), 'cached'] } cache(user_1) // ['Peter has an id of 12345', 'computed'] cache(user_2) // ['Mark has an id of 54321', 'computed'] console.log(weakMapCache) // {(…) => \\\"Peter has an id of 12345\\\", (…) => \\\"Mark has an id of 54321\\\"} user_1 = null console.log(weakMapCache) // {(…) => \\\"Mark has an id of 54321\\\"}\"]},\"434\":{\"h\":\"6. 分离的 DOM 元素\",\"t\":[\"如果 DOM 节点具有来自 JavaScript 的直接引用，它将防止对其进行垃圾收集，即使在从 DOM 树中删除该节点之后也是如此。\",\"在下面的示例中，创建了一个 div 元素并将其附加到 document.body 中。removeChild() 就无法按预期工作，堆快照将显示分离的 HTMLDivElement，因为仍有一个变量指向 div。\",\"function createElement() { const div = document.createElement('div') div.id = 'detached' return div } // 即使在调用deleteElement() 之后，它仍将继续引用DOM元素 const detachedDiv = createElement() document.body.appendChild(detachedDiv) function deleteElement() { document.body.removeChild(document.getElementById('detached')) } deleteElement()\",\"要解决此问题，可以将 DOM 引用移动到本地范围。在下面的示例中，在函数 appendElement() 完成后，将删除指向 DOM 元素的变量。\",\"function createElement() {...} // DOM引用在函数范围内 function appendElement() { const detachedDiv = createElement(); document.body.appendChild(detachedDiv); } appendElement(); function deleteElement() { document.body.removeChild(document.getElementById('detached')); } deleteElement();\"]},\"435\":{\"h\":\"三、识别内存泄漏\",\"t\":[\"调试内存问题是一项复杂的工作，我们可以使用 Chrome DevTools 来识别内存图和一些内存泄漏，我们需要关注以下两个方面：\",\"使用性能分析器可视化内存消耗；\",\"识别分离的 DOM 节点。\"]},\"436\":{\"h\":\"1. 使用性能分析器可视化内存消耗\",\"t\":[\"以下面的代码为例，有两个按钮：打印和清除。点击“打印”按钮，通过创建 paragraph 节点并将大字符串设置到全局，将 1 到 10000 的数字追加到 DOM 中。\",\"“清除”按钮会清除全局变量并覆盖 body 的正文，但不会删除单击“打印”时创建的节点：\",\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <title>Memory leaks</title> </head> <body> <button id=\\\"print\\\">打印</button> <button id=\\\"clear\\\">清除</button> </body> </html> <script> var longArray = [] function print() { for (var i = 0; i < 10000; i++) { let paragraph = document.createElement('p') paragraph.innerHTML = i document.body.appendChild(paragraph) } longArray.push(new Array(1000000).join('y')) } document.getElementById('print').addEventListener('click', print) document.getElementById('clear').addEventListener('click', () => { window.longArray = null document.body.innerHTML = 'Cleared' }) </script>\",\"当每次点击打印按钮时，JavaScript Heap都会出现蓝色的峰值，并逐渐增加，这是因为JavaScript正在创建DOM节点并字符串添加到全局数组。当点击清除按钮时，JavaScript Heap就变得正常了。 除此之外，可以看到节点的数量（绿色的线）一直在增加，因为我们并没有删除这些节点。\",\"在实际的场景中，如果观察到内存持续出现峰值，并且内存消耗一直没有减少，那可能存在内存泄露。\"]},\"437\":{\"h\":\"2. 识别分离的 DOM 节点\",\"t\":[\"当一个节点从 DOM 树中移除时，它被称为分离，但一些 JavaScript 代码仍然在引用它。让我们使用下面的代码片段检查分离的 DOM 节点。通过单击按钮，可以将列表元素添加到其父级中并将父级分配给全局变量。简单来说，全局变量保存着 DOM 引用：\",\" var detachedElement; function createList(){ let ul = document.createElement(\\\"ul\\\"); for(let i = 0; i < 5; i++){ ul.appendChild(document.createElement(\\\"li\\\")); } detachedElement = ul; } document.getElementById(\\\"createList\\\").addEventListener(\\\"click\\\", createList);\",\"我们可以使用 heap snapshot 来检查分离的DOM节点，可以在Chrome DevTools 的Memory面板中打开Heap snapshots选项：\",\"点击页面的按钮后，点击下面蓝色的Take snapshot按钮，我们可以在中间的搜索栏目输入Detached来过滤结果以找到分离的DOM节点。\"]},\"438\":{\"c\":[\"Javascript\"]},\"439\":{\"c\":[\"内存泄漏\"]},\"440\":{\"h\":\"前端模块化\"},\"441\":{\"h\":\"1. 模块概述\"},\"442\":{\"h\":\"（1）概念\",\"t\":[\"由于代码之间会发生大量交互，如果结构不合理，这些代码就会变得难以维护、难以测试、难以调试。而使用模块化就解决了这些问题，模块化的特点如下：\",\"可重用性：当应用被组织成模块时，可以方便的在其他地方重用这些模块，避免编写重复代码，从而加快开发流程；\",\"可读性：当应用变得越来越复杂时，如果在一个文件中编写所有功能，代码会变得难以阅读。如果使用模块设计应用，每个功能都分布在各自的模块中，代码就会更加清晰、易读；\",\"可维护性：软件的美妙之处在于进化，从长远来看，我们需要不断为应用增加新的功能。当应用被结构化为模块时，可以轻松添加或删除功能。除此之外，修复错误也是软件维护的一部分，使用模块就可以更快速地定位问题。\",\"模块化是一种将系统分离成独立功能部分的方法，可以将系统分割成独立的功能部分，严格定义模块接口，模块间具有透明性。通过将代码进行模块化分隔，每个文件彼此独立，开发者更容易开发和维护代码，模块之间又能够互相调用和通信，这就是现代化开发的基本模式。\"]},\"443\":{\"h\":\"（2）模式\",\"t\":[\"JavaScript 模块包含三个部分：\",\"导入：在使用模块时，需要将所需模块作为依赖项导入。例如，如果想要创建一个 React 组件，就需导入 react 模块。要使用像 Lodash 这样的工具库，就需要安装并导入它作为依赖项；\",\"代码：这一部分指的是模块的实际代码；\",\"导出：这一部分是模块的接口，从模块中导出的内容可供导入模块的任何地方使用。\"]},\"444\":{\"h\":\"（3）类型\",\"t\":[\"模块化的贯彻执行离不开相应的约定，即规范。这是能够进行模块化工作的重中之重。实现模块化的规范有很多，比如：AMD、RequireJS、CMD、SeaJS、UMD、CommonJS、ES6 Module。除此之外，IIFE（立即执行函数）也是实现模块化的一种方案。\",\"本文将介绍其中的六个：\",\"IIFE：立即执行函数\",\"AMD：异步模块加载机制\",\"CMD：通用模块定义\",\"UMD：统一模块定义\",\"CommonJS：Node.js 采用该规范\",\"ES6 Module：内置的 JavaScript 模块系统\"]},\"445\":{\"h\":\"2. IIFE\",\"t\":[\"在 ECMAScript 6 之前，模块并没有被内置到 JavaScript 中，因为 JavaScript 最初是为小型浏览器脚本设计的。这种模块化的缺乏，导致在代码的不同部分使用了共享全局变量。\",\"比如，对于以下代码：\",\"var name = 'JavaScript' var age = 20\",\"当上面的代码运行时，name 和 age 变量会被添加到全局对象中。因此，应用中的所有 JavaScript 脚本都可以访问全局变量 name 和 age，这就很容易导致代码错误，因为在其他不相关的单元中也可以访问和修改这些全局变量。除此之外，向全局对象添加变量会使全局命名空间变得混乱并增加了命名冲突的机会。\",\"所以，我们就需要一种封装变量和函数的方法，并且只对外公开定义的接口。因此，为了实现模块化并避免使用全局变量，可以使用如下方式来创建模块：\",\"function () { // 声明私有变量和函数 return { // 声明公共变量和函数 } })();\",\"上面的代码就是一个返回对象的闭包，这就是我们常说的 IIFE（Immediately Invoked Function Expression），即立即执行函数。在该函数中，就创建了一个局部范围。这样就避免了使用全局变量（IIFE 是匿名函数），并且代码单元被封装和隔离。\",\"可以这样来使用 IIFE 作为一个模块：\",\"var module = (function () { var age = 20 var name = 'JavaScript' var fn1 = function () { console.log(name, age) } var fn2 = function (a, b) { console.log(a + b) } return { age, fn1, fn2, } })() module.age // 20 module.fn1() // JavaScript 20 module.fn2(128, 64) // 192\",\"在这段代码中，module 就是我们定义的一个模块，它里面定义了两个私有变量 age 和 name，同时定义了两个方法 fn1 和 fn2，其中 fn1 中使用 module 中定义的私有变量，fn2 接收外部传入参数。最后，module 向外部暴露了 age、fn1、fn2。这样就形成了一个模块。\",\"当试图在 module 外部直接调用 fn1 时，就会报错：\",\"fn1() // Uncaught ReferenceError: fn1 is not defined\",\"当试图在 module 外部打印其内部的私有变量 name 时，得到的结果是 undefined：\",\"module.name // undefined\",\"上面的 IIFE 的例子是遵循模块模式的，具备其中的三部分，其中 age、name、fn1、fn2 就是模块内部的代码实现，返回的 age、fn1、fn2 就是导出的内容，即接口。调用 module 方法和变量就是导入使用。\"]},\"446\":{\"h\":\"3. CommonJS\"},\"447\":{\"h\":\"（1）概念\"},\"448\":{\"h\":\"定义\",\"t\":[\"CommonJS 是社区提出的一种 JavaScript 模块化规范，它是为浏览器之外的 JavaScript 运行环境提供的模块规范，Node.js 就采用了这个规范。\",\"注意：\",\"浏览器不支持使用 CommonJS 规范；\",\"Node.js 不仅支持使用 CommonJS 来实现模块，还支持最新的 ES 模块。\",\"CommonJS 规范加载模块是同步的，只有加载完成才能继续执行后面的操作。不过由于 Node.js 主要运行在服务端，而所需加载的模块文件一般保存在本地硬盘，所以加载比较快，而无需考虑使用异步的方式。\"]},\"449\":{\"h\":\"语法\",\"t\":[\"CommonJS 规范规定每个文件就是一个模块，有独立的作用域，对于其他模块不可见，这样就不会污染全局作用域。在 CommonJS 中，可以分别使用 export 和 require 来导出和导入模块。在每个模块内部，都有一个 module 对象，表示当前模块。通过它来导出 API，它有以下属性：\",\"exports：模块导出值。\",\"filename：模块文件名，使用绝对路径；\",\"id：模块识别符，通常是使用绝对路径的模块文件名；\",\"loaded：布尔值，表示模块是否已经完成加载；\",\"parent：对象，表示调用该模块的模块；\",\"children：数组，表示该模块要用到的其他模块；\",\"特点 CommonJS 规范具有以下特点：\",\"文件即模块，文件内所有代码都运行在独立的作用域，因此不会污染全局空间；\",\"模块可以被多次引用、加载。第一次被加载时，会被缓存，之后都从缓存中直接读取结果。\",\"加载某个模块，就是引入该模块的 module.exports 属性，该属性输出的是值拷贝，一旦这个值被输出，模块内再发生变化不会影响到输出的值。\",\"模块加载顺序按照代码引入的顺序。\"]},\"450\":{\"h\":\"优缺点\",\"t\":[\"CommonJS 的优点：\",\"使用简单\",\"很多工具系统和包都是使用 CommonJS 构建的；\",\"在 Node.js 中使用，Node.js 是流行的 JavaScript 运行时环境。\",\"CommonJS 的缺点\",\"可以在 JavaScript 文件中包含一个模块；\",\"如果想在 Web 浏览器中使用它，则需要额外的工具；\",\"本质上是同步的，在某些情况下不适合在 Web 浏览器中使用。\"]},\"451\":{\"h\":\"（2）使用\",\"t\":[\"在 CommonJS 中，可以通过 require 函数来导入模块，它会读取、执行 JavaScript 文件，并返回该模块的 exports 对象，该对象只有在模块脚本运行完才会生成。\"]},\"452\":{\"h\":\"模块导出\",\"t\":[\"可以通过以下两种方式来导出模块内容：\",\"module.exports.TestModule = function () { console.log('exports') } exports.TestModule = function () { console.log('exports') }\",\"则合两种方式的导出结果是一样的，module.exports 和 exports 的区别可以理解为：exports 是 module.exports 的引用，如果在 exports 调用之前调用了 exports=...，那么就无法再通过 exports 来导出模块内容，除非通过 exports=module.exports 重新设置 exports 的引用指向。\",\"当然，可以先定义函数，再导出：\",\"function testModule() { console.log('exports') } module.exports = testModule\",\"这是仅导出一个函数的情况，使用时就是这样的：\",\"testModule = require('./MyModule') testModule()\",\"如果是导出多个函数，就可以这样：\",\"function testModule1() { console.log('exports1') } function testModule2() { console.log('exports2') }\",\"导入多个函数并使用：\",\";({ testModule1, testModule2 } = require('./MyModule')) testModule1() testModule2()\"]},\"453\":{\"h\":\"模块导入\",\"t\":[\"可以通过以下方式来导入模块：\",\"const module = require('./MyModule')\",\"注意，如果 require 的路径没有后缀，会自动按照.js、.json 和.node 的顺序进行补齐查找。\"]},\"454\":{\"h\":\"加载过程\",\"t\":[\"在 CommonJS 中，require 的加载过程如下：\",\"优先从缓存中加载；\",\"如果缓存中没有，检查是否是核心模块，如果是直接加载；\",\"如果不是核心模块，检查是否是文件模块，解析路径，根据解析出的路径定位文件，然后执行并加载；\",\"如果以上都不是，沿当前路径向上逐级递归，直到根目录的 node_modules 目录。\"]},\"455\":{\"h\":\"（3）示例\",\"t\":[\"下面来看一个购物车的例子，主要功能是将商品添加到购物车，并计算购物车商品总价格：\",\"// cart.js var items = []; function addItem (name, price) item.push({ name: name, price: price }); } exports.total = function () { return items.reduce(function (a, b) { return a + b.price; }, 0); }; exports.addItem = addItem;\",\"这里通过两种方式在 exports 对象上定义了两个方法：addItem 和 total，分别用来添加购物车和计算总价。\",\"下面在控制台测试一下上面定义的模块：\",\"let cart = require('./cart')\",\"这里使用相对路径来导入 cart 模块，打印 cart 模块，结果如下：\",\"cart // { total: [Function], addItem: [Function: addItem] }\",\"向购物车添加一些商品，并计算当前购物车商品的总价格：\",\"cart.addItem('book', 60) cart.total() // 60 cart.addItem('pen', 6) cart.total() // 66\",\"这就是创建模块的基本方法，我们可以创建一些方法，并且只公开希望其他文件使用的部分代码。该部分成为 API，即应用程序接口。\",\"这里有一个问题，只有一个购物车，即只有一个模块实例。下面来在控制台执行以下代码：\",\"second_cart = require('./cart')\",\"那这时会创建一个新的购物车吗？事实并非如此，打印当前购物车的商品总金额，它仍然是 66：\",\"second_cart.total() // 66\",\"当我们㤇创建多个实例时，就需要再模块内创建一个构造函数，下面来重写 cart.js 文件：\",\"// cart.js function Cart() { this.items = [] } Cart.prototype.addItem = function (name, price) { this.items.push({ name: name, price: price, }) } Cart.prototype.total = function () { return this.items.reduce(function (a, b) { return a + b.price }, 0) } module.export = Cart\",\"现在，当需要使用此模块时，返回的是 Cart 构造函数，而不是具有 cart 函数作为一个属性的对象。下面来导入这个模块，并创建两个购物车实例：\",\"Cart = require('./second_cart') cart1 = new Cart() cart2 = new Cart() cart1.addItem('book', 50) cart1.total() // 50 cart2.total() // 50\"]},\"456\":{\"h\":\"4. AMD\"},\"457\":{\"h\":\"（1）概念\",\"t\":[\"CommonJS 的缺点之一是它是同步的，AMD 旨在通过规范中定义的 API 异步加载模块及其依赖项来解决这个问题。AMD 全称为 Asynchronous Module Definition，即异步模块加载机制。它规定了如何定义模块，如何对外输出，如何引入依赖。\",\"AMD 规范重要特性就是异步加载。所谓异步加载，就是指同时并发加载所依赖的模块，当所有依赖模块都加载完成之后，再执行当前模块的回调函数。这种加载方式和浏览器环境的性能需求刚好吻合。\"]},\"458\":{\"h\":\"语法\",\"t\":[\"AMD 规范定义了一个全局函数 define，通过它就可以定义和引用模块，它有 3 个参数：\",\"define(id?, dependencies?, factory);\",\"其包含三个参数：\",\"id：可选，指模块路径。如果没有提供该参数，模块名称默认为模块加载器请求的指定脚本的路径。\",\"dependencies：可选，指模块数组。它定义了所依赖的模块。依赖模块必须根据模块的工厂函数优先级执行，并且执行的结果应该按照依赖数组中的位置顺序以参数的形式传入工厂函数中。\",\"factory：为模块初始化要执行的函数或对象。如果是函数，那么该函数是单例模式，只会被执行一次；如果是对象，此对象应该为模块的输出值。\",\"除此之外，要想使用此模块，就需要使用规范中定义的 require 函数：\",\"require(dependencies?, callback);\",\"其包含两个参数：\",\"dependencies：依赖项数组；\",\"callback：加载模块时执行的回调函数。\"]},\"459\":{\"h\":\"兼容性\"},\"460\":{\"h\":\"优缺点\",\"t\":[\"AMD 的优点：\",\"异步加载导致更好的启动时间；\",\"能够将模块拆分为多个文件；\",\"支持构造函数；\",\"无需额外工具即可在浏览器中工作。\",\"AMD 的缺点：\",\"语法很复杂，学习成本高；\",\"需要一个像 RequireJS 这样的加载器库来使用 AMD。\"]},\"461\":{\"h\":\"（2）使用\",\"t\":[\"当然，上面只是 AMD 规范的理论，要想理解这个理论在代码中是如何工作的，就需要来看看 AMD 的实际实现。RequireJS 就是 AMD 规范的一种实现，它被描述为“JavaScript 文件和模块加载器”。下面就来看看 RequireJS 是如何使用的。\"]},\"462\":{\"h\":\"引入 RequireJS\",\"t\":[\"可以通过 npm 来安装 RequireJS：\",\"npm i requirejs\",\"也可以在 html 文件引入 require.js 文件：\",\"<script data-main=\\\"js/config\\\" src=\\\"js/require.js\\\"></script>\",\"这里 script 标签有两个属性：\",\"data-main=\\\"js/config\\\"：这是 RequireJS 的入口，也是配置它的地方；\",\"src=\\\"js/require.js\\\"：加载脚本的正常方式，会加载 require.js 文件。\",\"在 script 标签下添加以下代码来初始化 RequireJS：\",\"<script> require(['config'], function () { //... }) </script>\",\"当页面加载完配置文件之后， require() 中的代码就会运行。这个 script 标签是一个异步调用，这意味着当 RequireJS 通过 src=\\\"js/require.js 加载时，它将异步加载 data-main 属性中指定的配置文件。因此，该标签下的任何 JavaScript 代码都可以在 RequireJS 获取时执行配置文件。\",\"那 AMD 中的 require() 和 CommonJS 中的 require() 有什么区别呢？\",\"AMD require() 接受一个依赖数组和一个回调函数，CommonJS require() 接受一个模块 ID；\",\"AMD require() 是异步的，而 CommonJS require() 是同步的。\"]},\"463\":{\"h\":\"定义 AMD 模块\",\"t\":[\"下面是 AMD 中的一个基本模块定义：\",\"define(['dependency1', 'dependency2'], function () { // 模块内容 })\",\"这个模块定义清楚地显示了其包含两个依赖项和一个函数。\",\"下面来定义一个名为 addition.js 的文件，其包含一个执行加法操作的函数，但是没有依赖项：\",\"// addition.js define(function () { return function (a, b) { alert(a + b) } })\",\"再来定义一个名为 calculator.js 的文件：\",\"define(['addition'], function (addition) { addition(7, 9) })\",\"当 RequireJS 看到上面的代码块时，它会去寻找依赖项，并通过将它们作为参数传递给函数来自动将其注入到模块中。\",\"RequireJS 会自动为 addition.js 和 calculator.js 文件创建一个 <script> 标签，并将其放在 HTML <head> 元素中，等待它们加载，然后运行函数，这类似于 require() 的行为。\",\"下面来更新一下 index.html 文件：\",\"// index.html require(['config'], function () { require(['calculator']) })\",\"当浏览器加载 index.html 文件时，RequireJS 会尝试查找 calculator.js 模块，但是没有找到，所以浏览器也不会有任何反应。那该如何解决这个问题呢？我们必须提供配置文件来告诉 RequireJS 在哪里可以找到 calculator.js（和其他模块），因为它是引用的入口。\",\"requirejs.config({ baseURL: 'string', paths: {}, shim: {}, })\",\"这里有三个属性值：\",\"baseURL：告诉 RequireJS 在哪里可以找到模块；\",\"path：这些是与 define() 一起使用的模块的名称。 在路径中，可以使用文件的 CDN，这时 RequireJS 将尝试在本地可用的模块之前加载模块的 CDN 版本；\",\"shim：允许加载未编写为 AMD 模块的库，并允许以正确的顺序加载它们\",\"我们的配置文件如下：\",\"requirejs.config({ baseURL: 'js', paths: { // 这种情况下，模块位于 customScripts 文件中 addition: 'customScripts/addition', calculator: 'customScripts/calculator', }, })\",\"这就是在 AMD 中使用 RequireJS 定义模块的方法之一。我们还可以通过指定其路径名来定义模块，该路径名是模块文件在项目目录中的位置。 下面给出一个例子：\",\"define('path/to/module', function () { // 模块内容 })\",\"当然，RequireJS 并不鼓励这种方法，因为当我们将模块移动到项目中的另一个位置时，就需要手动更改模块中的路径名。\",\"在使用 AMD 定义模块时需要注意：\",\"在依赖项数组中列出的任何内容都必须与工厂函数中的分配相匹配；\",\"尽量不要将异步代码与同步代码混用。当在 index.html 上编写其他 JavaScript 代码时就是这种情况。\"]},\"464\":{\"h\":\"5. CMD\",\"t\":[\"CMD 全称为 Common Module Definition，即通用模块定义。CMD 规范整合了 CommonJS 和 AMD 规范的特点。sea.js 是 CMD 规范的一个实现 。\",\"CMD 定义模块也是通过一个全局函数 define 来实现的，但只有一个参数，该参数既可以是函数也可以是对象：\",\"efine(factory)\",\"如果这个参数是对象，那么模块导出的就是对象；如果这个参数为函数，那么这个函数会被传入 3 个参数：\",\"define(function (require, exports, module) { //... })\",\"这三个参数分别如下：\",\"（1）require：一个函数，通过调用它可以引用其他模块，也可以调用 require.async 函数来异步调用模块；\",\"（2）exports：一个对象，当定义模块的时候，需要通过向参数 exports 添加属性来导出模块 API；\",\"（3）module 是一个对象，它包含 3 个属性： \",\"uri：模块完整的 URI 路径；\",\"dependencies：模块依赖；\",\"exports：模块需要被导出的 API，作用同第二个参数 exports。\",\"下面来看一个例子，定义一个 increment 模块，引用 math 模块的 add 函数，经过封装后导出成 increment 函数：\",\"define(function (require, exports, module) { var add = require('math').add exports.increment = function (val) { return add(val, 1) } module.id = 'increment' })\",\"CMD 最大的特点就是懒加载，不需要在定义模块的时候声明依赖，可以在模块执行时动态加载依赖。除此之外，CMD 同时支持同步加载模块和异步加载模块。\",\"AMD 和 CMD 的两个主要区别如下：\",\"AMD 需要异步加载模块，而 CMD 在加载模块时，可以同步加载（require），也可以异步加载（require.async）。\",\"CMD 遵循依赖就近原则，AMD 遵循依赖前置原则。也就是说，在 AMD 中，需要把模块所需要的依赖都提前在依赖数组中声明。而在 CMD 中，只需要在具体代码逻辑内，使用依赖前，把依赖的模块 require 进来。\"]},\"465\":{\"h\":\"6. UMD\",\"t\":[\"UMD 全程为 Universal Module Definition，即统一模块定义。其实 UMD 并不是一个模块管理规范，而是带有前后端同构思想的模块封装工具。\",\"UMD 是一组同时支持 AMD 和 CommonJS 的模式，它旨在使代码无论执行代码的环境如何都能正常工作，通过 UMD 可以在合适的环境选择对应的模块规范。比如在 Node.js 环境中采用 CommonJS 模块管理，在浏览器环境且支持 AMD 的情况下采用 AMD 模块，否则导出为全局函数。\",\"一个 UMD 模块由两部分组成：\",\"立即调用函数表达式 (IIFE)：它会检查使用模块的环境。其有两个参数：root 和 factory。 root 是对全局范围的 this 引用，而 factory 是定义模块的函数。\",\"匿名函数：创建模块，此匿名函数被传递任意数量的参数以指定模块的依赖关系。\",\"UMD 的代码实现如下：\",\";(function (root, factory) { if (typeof define === 'function' && define.amd) { define([], factory) } else if (typeof exports === 'object') { module.exports, (module.exports = factory()) } else { root.returnExports = factory() } })(this, function () { // 模块内容定义 return {} })\",\"它的执行过程如下：\",\"先判断是否支持 Node.js 模块格式（exports 是否存在），存在则使用 Node.js 模块格式；\",\"再判断是否支持 AMD（define 是否存在），存在则使用 AMD 方式加载模块；\",\"若两个都不存在，则将模块公开到全局（Window 或 Global）。\",\"UMD 的特点如下：\",\"UMD 的优点： \",\"小而简洁；\",\"适用于服务器端和客户端。\",\"UMD 的缺点： \",\"不容易正确配置。\"]},\"466\":{\"h\":\"7. ES 模块\"},\"467\":{\"h\":\"（1）概念\",\"t\":[\"通过上面的例子，你可能会发现，使用 UMD、AMD、CMD 的代码会变得难以编写和理解。于是在 2015 年，负责 ECMAScript 规范的 TC39 委员会将模块添加为 JavaScript 的内置功能，这些模块称为 ECMAScript 模块，简称 ES 模块。\",\"模块和经典 JavaScript 脚本略有不同：\",\"模块默认启用严格模式，比如分配给未声明的变量会报错：\",\"<script type='module'>a = 5;</script>\",\"模块有一个词法顶级作用域。 这意味着，例如，运行 var foo = 42; 在模块内不会创建名为 foo 的全局变量，可通过浏览器中的 window.foo 访问，尽管在经典 JavaScript 脚本中会出现这种情况；\",\"<script type=\\\"module\\\"> let person = \\\"Alok\\\"; </script> <script type=\\\"module\\\"> alert(person);{/* Error: person is not defined */} </script>\",\"模块中的 this 并不引用全局 this，而是 undefined。 （如果需要访问全局 this，可以使用 globalThis）；\",\"<script> alert(this); {/* 全局对象 */} </script> <script type=\\\"module\\\"> alert(this); {/* undefined */} </script>\",\"新的静态导入和导出语法仅在模块中可用，并不适用于经典脚本。\",\"顶层 await 在模块中可用，但在经典 JavaScript 脚本中不可用；\",\"await 不能在模块中的任何地方用作变量名，经典脚本中的变量可以在异步函数之外命名为 await；\",\"JavaScript 会提升 import 语句。因此，可以在模块中的任何位置定义它们。\",\"CommonJS 和 AMD 都是在运行时确定依赖关系，即运行时加载，CommonJS 加载的是拷贝。而 ES 模块是在编译时就确定依赖关系，所有加载的其实都是引用，这样做的好处是可以执行静态分析和类型检查。\"]},\"468\":{\"h\":\"（2）语法\"},\"469\":{\"h\":\"导出\",\"t\":[\"当导出模块代码时，需要在其前面添加 export 关键词。导出内容可以是变量、函数或类。任何未导出的代码都是模块私有的，无法在该模块之被外访问。ES 模块支持两种类型的导出：\",\"命名导出：\",\"export const first = 'JavaScript' export function func() { return true }\",\"当然，我们也可以先定义需要导出的变量/函数，最后统一导出这些变量/函数：\",\"const first = 'JavaScript' const second = 'TypeScript' function func() { return true } export { first, second, func }\",\"默认导出：\",\"function func() { return true } export default func\",\"当然，也可以直接默认导出：\",\"export default function func() { return true }\",\"默认导出可以省略变量/函数/类名，在导入时可以为其指定任意名称：\",\"// 导出 export default function () { console.log('foo') } // 导入 import customName from './module'\",\"注意：导入默认模块时不需要大括号，导出默认的变量或方法可以有名字，但是对外是无效的。export default 在一个模块文件中只能使用一次。\",\"可以使用 as 关键字来重命名需要暴露出的变量或方法，经过重命名后同一变量可以多次暴露出去：\",\"const first = 'test' export { first as second }\"]},\"470\":{\"h\":\"导入\",\"t\":[\"使用命名导出的模块，可以通过以下方式来导入：\",\"import { first, second, func } from './module'\",\"使用默认导出的模块，可以通过以下方式来引入，导入名称可以自定义，无论导出的名称是什么：\",\"import customName from './module.js'\",\"导入模块位置可以是相对路径也可以是绝对路径，.js 扩展名是可以省略的，如果不带路径而只是模块名，则需要通过配置文件告诉引擎查找的位置：\",\"import { firstName, lastName } from './module'\",\"可以使用 as 关键字来将导入的变量/函数重命名：\",\"import { fn as fn1 } from './profile'\",\"在 ES 模块中，默认导入和命名导入是可以同时使用的，比如在 React 组件中：\",\"import React, { usestate, useEffect } from 'react' const Comp = () => { return <React.Fragment>...</React.Fragment> } export default Comp\",\"可以使用 as 关键字来加载整个模块，用于从另一个模块中导入所有命名导出，会忽略默认导出：\",\"import * as circle from './circle'; console.log('圆面积：' + circle.area(4)); console.log('圆周长：' + circle.circumference(14));\"]},\"471\":{\"h\":\"动态导入\",\"t\":[\"上面我们介绍的都是静态导入，使用静态 import 时，整个模块需要先下载并执行，然后主代码才能执行。有时我们不想预先加载模块，而是按需加载，仅在需要时才加载。这可以提高初始加载时的性能，动态 import 使这成为可能：\",\"<script type=\\\"module\\\"> (async () => { const moduleSpecifier = './lib.mjs'; const {repeat, shout} = await import(moduleSpecifier); repeat('hello'); // → 'hello hello' shout('Dynamic import in action'); // → 'DYNAMIC IMPORT IN ACTION!' })(); </script>\",\"与静态导入不同，动态导入可以在常规脚本中使用。\"]},\"472\":{\"h\":\"其他用法\",\"t\":[\"可以使用以下方式来先导入后导出模块内容：\",\"export { foo, bar } from './module';\",\"上面的代码就等同于：\",\"import { foo, bar } from './module'; export { foo, boo};\",\"另一个与模块相关的新功能是import.meta，它是一个给 JavaScript 模块暴露特定上下文的元数据属性的对象。它包含了这个模块的信息，比如说这个模块的 URL。\",\"默认情况下，图像是相对于 HTML 文档中的当前 URL 加载的。import.meta.url可以改为加载相对于当前模块的图像：\",\"function loadThumbnail(relativePath) { const url = new URL(relativePath, import.meta.url); const image = new Image(); image.src = url; return image; } const thumbnail = loadThumbnail('../img/thumbnail.png'); container.append(thumbnail);\"]},\"473\":{\"h\":\"（3）在浏览器使用\",\"t\":[\"目前主流浏览器都支持 ES 模块：\",\"如果想在浏览器中使用原生 ES 模块方案，只需要在 script 标签上添加 type=\\\"module\\\" 属性。通过该属性，浏览器知道这个文件是以模块化的方式运行的。而对于不支持的浏览器，需要通过 nomodule 属性来指定某脚本为 fallback 方案：\",\"<script type=\\\"module\\\"> import module1 from './module1' </script> <script nomodule src=\\\"fallback.js\\\"></script>\",\"支持 type=\\\"module\\\" 的浏览器会忽略带有 nomodule 属性的脚本。使用 type=\\\"module\\\" 的另一个作用就是进行 ES Next 兼容性的嗅探。因为支持 ES 模块化的浏览器，都支持 ES Promise 等特性。\",\"由于默认情况下模块是延迟的，因此可能还希望以延迟方式加载 nomodule 脚本：\",\"<script nomodule defer src=\\\"fallback.js\\\"></script>\"]},\"474\":{\"h\":\"（4）在 Node.js 使用\",\"t\":[\"上面提到，Node.js 使用的是 CommonJS 模块规范，它也是支持 ES 模块的。在 Node.js 13 之前，ES 模块是一项实验性技术，因此，可以通过使用 .mjs 扩展名保存模块并通过标志访问它来使用模块。\",\"从 Node.js 13 开始，可以通过以下两种方式使用模块:\",\"使用 .mjs 扩展名保存模块；\",\"在最近的文件夹中创建一个 type=\\\"module\\\" 的 package.json 文件。\",\"那如何在小于等于 12 版本的 Node.js 中使用 ES 模块呢？可以在执行脚本启动时加上 --experimental-modules，不过这一用法要求相应的文件后缀名必须为 .mjs：\",\"node --experimental-modules module1.mjs import module1 from './module1.mjs' module1\"]},\"475\":{\"c\":[\"Javascript\"]},\"476\":{\"c\":[\"前端模块化\"]},\"477\":{\"h\":\"原型链与继承\"},\"478\":{\"h\":\"构造函数\",\"t\":[\"构造函数模式的目的就是为了创建一个自定义类，并且创建这个类的实例。构造函数模式中拥有了类和实例的概念，并且实例和实例之间是相互独立的，即实例识别。\",\"构造函数就是一个普通的函数，创建方式和普通函数没有区别，不同的是构造函数习惯上首字母大写。另外就是调用方式的不同，普通函数是直接调用，而构造函数需要使用 new 关键字来调用。\",\"function Person(name, age, gender) { this.name = name this.age = age this.gender = gender this.sayName = function () { alert(this.name) } } var per = new Person('孙悟空', 18, '男') function Dog(name, age, gender) { this.name = name this.age = age this.gender = gender } var dog = new Dog('旺财', 4, '雄') console.log(per) //当我们直接在页面中打印一个对象时，事件上是输出的对象的toString()方法的返回值 console.log(dog)\",\"每创建一个 Person 构造函数，在 Person 构造函数中，为每一个对象都添加了一个 sayName 方法，也就是说构造函数每执行一次就会创建一个新的 sayName 方法。这样就导致了构造函数执行一次就会创建一个新的方法，执行 10000 次就会创建 10000 个新的方法，而 10000 个方法都是一摸一样的，为什么不把这个方法单独放到一个地方，并让所有的实例都可以访问到呢?这就需要原型(prototype)\"]},\"479\":{\"h\":\"原型\",\"t\":[\"在 JavaScript 中，每当定义一个函数数据类型(普通函数、类)时候，都会天生自带一个 prototype 属性，这个属性指向函数的原型对象，并且这个属性是一个对象数据类型的值。\",\"原型对象就相当于一个公共的区域，所有同一个类的实例都可以访问到这个原型对象，我们可以将对象中共有的内容，统一设置到原型对象中。\"]},\"480\":{\"h\":\"原型链\"},\"481\":{\"h\":\"和 constructor\",\"t\":[\"每一个对象数据类型(普通的对象、实例、prototype......)也天生自带一个属性proto，属性值是当前实例所属类的原型(prototype)。原型对象中有一个属性 constructor, 它指向函数对象。\",\"function Person() {} var person = new Person() console.log(person.__proto__ === Person.prototype) //true console.log(Person.prototype.constructor === Person) //true //顺便学习一个ES5的方法,可以获得对象的原型 console.log(Object.getPrototypeOf(person) === Person.prototype) // true\"]},\"482\":{\"h\":\"何为原型链\",\"t\":[\"在 JavaScript 中万物都是对象，对象和对象之间也有关系，并不是孤立存在的。对象之间的继承关系，在 JavaScript 中是通过 prototype 对象指向父类对象，直到指向 Object 对象为止，这样就形成了一个原型指向的链条，专业术语称之为原型链。\",\"举例说明:person → Person → Object ，普通人继承人类，人类继承对象类\",\"当我们访问对象的一个属性或方法时，它会先在对象自身中寻找，如果有则直接使用，如果没有则会去原型对象中寻找，如果找到则直接使用。如果没有则去原型的原型中寻找,直到找到 Object 对象的原型，Object 对象的原型没有原型，如果在 Object 原型中依然没有找到，则返回 undefined。\",\"我们可以使用对象的 hasOwnProperty()来检查对象自身中是否含有该属性；使用 in 检查对象中是否含有某个属性时，如果对象中没有但是原型中有，也会返回 true\",\"function Person() {} Person.prototype.a = 123 Person.prototype.sayHello = function () { alert('hello') } var person = new Person() console.log(person.a) //123 console.log(person.hasOwnProperty('a')) //false console.log('a' in person) //true\",\"person 实例中没有 a 这个属性，从 person 对象中找不到 a 属性就会从 person 的原型也就是 person.__proto__ ，也就是 Person.prototype 中查找，很幸运地得到 a 的值为 123。那假如 person.__proto__中也没有该属性，又该如何查找？\",\"当读取实例的属性时，如果找不到，就会查找与对象关联的原型中的属性，如果还查不到，就去找原型的原型，一直找到最顶层 Object 为止。Object 是 JS 中所有对象数据类型的基类(最顶层的类)在 Object.prototype 上没有proto这个属性。\",\"console.log(Object.prototype.__proto__ === null) // true\"]},\"483\":{\"h\":\"继承\"},\"484\":{\"h\":\"1.原型链继承\",\"t\":[\"原型链继承涉及的是构造函数、原型、实例化对象，这三者之前存在一定的关系：\",\"每一个构造函数都有一个原型对象（prototype），\",\"原型对象中包含一个指向构造函数的指针（constructor），指向对应的构造函数\",\"实例中包含一个原型对象的指针（[[Prototype]],这个内部属性无法直接访问，在 FF,Chrome 等浏览器可以通过proto得到）\",\"function Person() { this.name = '张三' this.arr = [1, 2, 3] } function Teacher() { this.teach = 'chinese' } Teacher.prototype = new Person() console.log(new Teacher())\",\"如果构造函数创建多个对象，属性被多个对象共享，如果属性是引用类型，那个修改一个对象的属性，会导致其他对象的这个属性也会被修改（如果是直接赋值对象的属性，则不会触发其他对象上该属性的修改）\",\"//原型链继承 function Person() { this.name = '张三' this.arr = [1, 2, 3] } function Teacher() { this.teach = 'chinese' } Teacher.prototype = new Person() // console.log(new Teacher()) //原型继承缺点：构造函数创建多个对象，对象的属性如果为引用类型，修改了该属性，其他对象的属性也会改变 let p1 = new Teacher() // console.log(p1) // {name:\\\"张三\\\",arr:[1,2,3]} let p2 = new Teacher() p2.arr.push(4) console.log(p1.arr) // [1,2,3,4] console.log(p2.arr) // [1,2,3,4]\",\"修改了 p1 的 arr 属性，为什么导致了 p2 的 arr 属性的改变？ 因为两个实例使用的是同一个原型对象（Teacher.prototype），它们的内存空间是共享的，当一个发生变化的时候，另外一个也随之进行了变化\"]},\"485\":{\"h\":\"缺点\",\"t\":[\"原型对象如果有引用类型的属性，会被所有的示例对象所共享，容易引起数据修改混乱\",\"创建实例化对象的时候，不能向父类构造函数不能传递参数\"]},\"486\":{\"h\":\"2.构造函数继承（借助 call）\",\"t\":[\"function Person() { this.name = '张三' this.arr = [1, 2, 3] } Person.prototype.eating = function () { console.log('吃东西') } function Student() { Person.call(this) this.study = { subject: 'chinese' } } let s1 = new Student() let s2 = new Student() s1.study.subject = 'english' console.log(s1.study) console.log(s2.study) s1.eating()\",\"这种方式实现了不同实例间数据的隔离，子类虽然能够拿到父类的属性值，解决了第一种继承方式的弊端，但问题是，父类原型对象中一旦存在父类之前自己定义的方法，那么子类将无法继承这些方法。\"]},\"487\":{\"h\":\"缺点\",\"t\":[\"无法使用父类原型链上的方法\"]},\"488\":{\"h\":\"3.组合继承（前两种组合）\",\"t\":[\"function Person() { this.name = '张三' this.arr = [1, 2, 3] } Person.prototype.eating = function () { console.log('吃东西') } function Student() { //第二次调用Person() Person.call(this) this.study = { subject: 'chinese' } } //第一次调用Person() Student.prototype = new Person() console.log(Student.prototype.constructor) //Person //需要手动指定constructor为指向自己的构造函数,不然Student.prototype.constructor就为Person了，这样是错误的 Student.prototype.constructor = Student console.log(Student.prototype.constructor) let s1 = new Student() let s2 = new Student() s1.study.subject = 'english' console.log(s1.study) console.log(s1.name) console.log(s2.study) console.log(s1) s1.eating()\",\"但是这里又增加了一个新问题：通过注释我们可以看到 Person 执行了两次，第一次是改变 Student 的 prototype 的时候，第二次是通过 call 方法调用 Person 的时候，那么 Person 多构造一次就多进行了一次性能开销，这显然也是不太好的\"]},\"489\":{\"h\":\"缺点\",\"t\":[\"构造函数会被调用两次（一次在创建子类型原型对象的时候, 一次在创建子类型实例的时候. ），造成了资源的浪费\",\"父类型中的属性会有两份: 一份在原型对象中, 一份在子类型实例中\"]},\"490\":{\"h\":\"4.原型式继承\",\"t\":[\"原型式继承是使用 ES5 里面的 Object.create 方法来实现继承.\",\"Object.create 这个方法接收两个参数：一是用作新对象原型的对象、二是为新对象定义额外属性的对象（可选参数）。\",\"let people = { name: '拉拉', friends: ['丁丁', '迪西', '小波'], getName: function () { return this.name }, } let p1 = Object.create(people, { property1: { value: true, writable: true, configurable: true, enumerable: true, }, }) let p2 = Object.create(people) p1.name = 'jerry' console.log(p1.name) //jerry console.log(p1.getName()) //jerry console.log(p2.name) //拉拉 p1.friends.push('jerry') console.log(p1.friends) // ['丁丁', '迪西', '小波', 'jerry'] console.log(p2.friends) //['丁丁', '迪西', '小波', 'jerry']\",\"通过上面代码，可以看到 Object.create 可以实现对象的继承，除了可以继承 people 的属性外，还可以使用继承的对象的方法(getName),但是也会出现引用数据类型“共享”的问题：多个实例的引用类型属性指向相同的内存，存在篡改的可能\"]},\"491\":{\"h\":\"缺点\",\"t\":[\"实例化对象数据共享问题\"]},\"492\":{\"h\":\"5.寄生式继承\",\"t\":[\"使用原型式继承可以获得目标对象的浅拷贝，利用浅拷贝的能力进行一些方法的增加，这样的继承方式叫做寄生式继承，缺点其实和原型式继承一样，优点是在父类的继承上增加了更多的方法。\",\"let people = { name: '拉拉', friends: ['丁丁', '迪西', '小波'], getName: function () { return this.name }, } function clone(obj) { //第二次调用people let cloneObj = Object.create(obj) cloneObj.getFriends = function () { return this.friends } return cloneObj } //第一次调用people let p1 = clone(people) let p2 = Object.create(people) p1.name = 'jerry' console.log(p1.name) //jerry console.log(p1.getName()) //jerry console.log(p1.getFriends()) //['丁丁', '迪西', '小波'] console.log(p2.name) //拉拉 p1.friends.push('jerry') console.log(p1.friends) // ['丁丁', '迪西', '小波', 'jerry'] console.log(p2.friends) //['丁丁', '迪西', '小波', 'jerry']\",\"在上面代码上，就会发现 p1 可以直接使用 getFriends 方法\"]},\"493\":{\"h\":\"缺点\",\"t\":[\"引用数据类型“共享”的问题：p1.friends 改变导致 p2.friends 改变\"]},\"494\":{\"h\":\"6.寄生组合式继承--最优\",\"t\":[\"结合第四种中提及的继承方式（ Object.create 实现），解决普通对象的继承问题的 Object.create 方法，把前面的继承有点结合，得出了寄生组合式的继承方式，这也是所有继承方式里面相对最优的继承方式\",\"function Person() { this.name = '张三' this.arr = [1, 2, 3] } Person.prototype.eating = function () { console.log('吃东西') } function Student() { Person.call(this) //第一次执行Person()进行构造 this.study = { subject: 'chinese' } } Student.prototype.play = function () { console.log('玩游戏') } function clone(child, parent) { //这里改用 Object.create 就可以减少组合继承中多进行一次构造的过程 child.prototype = Object.create(parent.prototype) child.prototype.constructor = child } clone(Student, Person) let s1 = new Student() let s2 = new Student() console.log(s1.name) console.log(s1.eating()) s1.arr.push(4) console.log(s1.arr) console.log(s2.arr)\",\"解决了多次调用构造函数构造的问题，也解决了引用数据“共享的问题”\"]},\"495\":{\"h\":\"7.ES6 中 extends 实现继承\",\"t\":[\"class People { //constructor 是类的构造函数，他是方法，在new实例化的时候，会自动调用这个函数，所以在其中定义属性或者方法要写this； constructor(name, age) { this.name = name this.age = 18 } // People.prototype.getName = function(){} 简写为以下方式 getName() { return this.name } } class Student extends People { constructor(name, age, num) { super(name, age) // 子类中存在构造函数，则需要在使用“this”之前首先调用 super(),因为子类本身并没有自己的this对象，他必须从父类继承；如果不使用construct，会自动调用父类的construct this.num = num } // 对父类方法的重写，以及复用父类方法的逻辑，必须使用super eat() { let stuName = super.getName() return stuName + '在吃饭' } } let s1 = new Student('拉拉', 2) console.log(s1.getName()) //拉拉 console.log(s1.eat()) //拉拉在吃饭\",\"ES6 中 extends 其实就是一个语法糖，实现的继承方式其实是寄生组合式继承，以下是 babel 转换的代码\",\"function _possibleConstructorReturn(self, call) { // ... return call && (typeof call === 'object' || typeof call === 'function') ? call : self } function _inherits(subClass, superClass) { // 这里可以看到 subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true, }, }) if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : (subClass.__proto__ = superClass) } var Parent = function Parent() { // 验证是否是 Parent 构造出来的 this _classCallCheck(this, Parent) } var Child = (function (_Parent) { _inherits(Child, _Parent) function Child() { _classCallCheck(this, Child) return _possibleConstructorReturn( this, (Child.__proto__ || Object.getPrototypeOf(Child)).apply( this, arguments ) ) } return Child })(Parent)\"]},\"496\":{\"h\":\"总结\"},\"497\":{\"c\":[\"Javascript\"]},\"498\":{\"c\":[\"原型\"]},\"499\":{\"h\":\"变量提升\",\"t\":[\"在 ECMAScript6 中，新增了 let 和 const 关键字用来声明变量。在前端面试中也常被问到 let、const和 var 的区别，这就涉及到了变量提升、暂时性死区等知识点。下面就来看看什么是变量提升和暂时性死区。\"]},\"500\":{\"h\":\"1. 什么变量提升？\",\"t\":[\"先来看看MDN中对变量提升的描述：\",\"变量提升（Hoisting）被认为是， Javascript中执行上下文 （特别是创建和执行阶段）工作方式的一种认识。在 ECMAScript® 2015 Language Specification 之前的JavaScript文档中找不到变量提升（Hoisting）这个词。\",\"从概念的字面意义上说，“变量提升”意味着变量和函数的声明会在物理层面移动到代码的最前面，但这么说并不准确。实际上变量和函数声明在代码里的位置是不会动的，而是在编译阶段被放入内存中。\",\"通俗来说，变量提升是指在 JavaScript 代码执行过程中，JavaScript 引擎把变量的声明部分和函数的声明部分提升到代码开头的行为。变量被提升后，会给变量设置默认值为 undefined。正是由于 JavaScript 存在变量提升这种特性，导致了很多与直觉不太相符的代码，这也是 JavaScript 的一个设计缺陷。虽然 ECMAScript6 已经通过引入块级作用域并配合使用 let、const 关键字，避开了这种设计缺陷，但是由于 JavaScript 需要向下兼容，所以变量提升在很长时间内还会继续存在。\",\"在 ECMAScript6 之前，JS 引擎用 var 关键字声明变量。在 var 时代，不管变量声明是写在哪里，最后都会被提到作用域的顶端。下面在全局作用域中声明一个num 变量，并在声明之前打印它：\",\"console.log(num) var num = 1\",\"这里会输出 undefined，因为变量的声明被提升了，它等价于：\",\"var num console.log(num) num = 1\",\"可以看到，num 作为全局变量会被提升到全局作用域的顶端。\",\"除此之外，在函数作用域中也存在变量提升：\",\"function getNum() { console.log(num) var num = 1 } getNum()\",\"这里也会输出 undefined，因为函数内部的变量声明会被提升至函数作用域的顶端。它等价于：\",\"function getNum() { var num console.log(num) num = 1 } getNum()\",\"除了变量提升，函数实际上也是存在提升的。JavaScript中具名的函数的声明形式有两种：\",\"//函数声明式： function foo () {} //变量形式声明： var fn = function () {}\",\"当使用变量形式声明函数时，和普通的变量一样会存在提升的现象，而函数声明式会提升到作用域最前边，并且将声明内容一起提升到最上边。如下：\",\"fn() var fn = function () { console.log(1) } // 输出结果：Uncaught TypeError: fn is not a function foo() function foo () { console.log(2) } // 输出结果：2\",\"可以看到，使用变量形式声明fn并在其前面执行时，会报错fn不是一个函数，因为此时fn只是一个变量，还没有赋值为一个函数，所以是不能执行fn方法的。\"]},\"501\":{\"h\":\"2. 为什么会有变量提升？\",\"t\":[\"变量提升和 JavaScript 的编译过程密切相关：JavaScript 和其他语言一样，都要经历编译和执行阶段。在这个短暂的编译阶段，JS 引擎会搜集所有的变量声明，并且提前让声明生效。而剩下的语句需要等到执行阶段、等到执行到具体的某一句时才会生效。这就是变量提升背后的机制。\",\"那为什么 JavaScript 中会存在变量提升这个特性呢？\",\"首先要从作用域说起。作用域是指在程序中定义变量的区域，该位置决定了变量的生命周期。通俗理解，作用域就是变量与函数的可访问范围，即作用域控制着变量和函数的可见性和生命周期。\",\"在 ES6 之前，作用域分为两种：\",\"全局作用域中的对象在代码中的任何地方都可以访问，其生命周期伴随着页面的生命周期。\",\"函数作用域是在函数内部定义的变量或者函数，并且定义的变量或者函数只能在函数内部被访问。函数执行结束之后，函数内部定义的变量会被销毁。\",\"相较而言，其他语言则普遍支持块级作用域。块级作用域就是使用一对大括号包裹的一段代码，比如函数、判断语句、循环语句，甚至一个单独的{}都可以被看作是一个块级作用域（注意，对象声明中的{}不是块级作用域）。简单来说，如果一种语言支持块级作用域，那么其代码块内部定义的变量在代码块外部是访问不到的，并且等该代码块中的代码执行完成之后，代码块中定义的变量会被销毁。\",\"ES6 之前是不支持块级作用域的，没有块级作用域，将作用域内部的变量统一提升无疑是最快速、最简单的设计，不过这也直接导致了函数中的变量无论是在哪里声明的，在编译阶段都会被提取到执行上下文的变量环境中，所以这些变量在整个函数体内部的任何地方都是能被访问的，这也就是 JavaScript 中的变量提升。\",\"使用变量提升有如下两个好处：\"]},\"502\":{\"h\":\"（1）提高性能\",\"t\":[\"在JS代码执行之前，会进行语法检查和预编译，并且这一操作只进行一次。这么做就是为了提高性能，如果没有这一步，那么每次执行代码前都必须重新解析一遍该变量（函数），这是没有必要的，因为变量（函数）的代码并不会改变，解析一遍就够了。\",\"在解析的过程中，还会为函数生成预编译代码。在预编译时，会统计声明了哪些变量、创建了哪些函数，并对函数的代码进行压缩，去除注释、不必要的空白等。这样做的好处就是每次执行函数时都可以直接为该函数分配栈空间（不需要再解析一遍去获取代码中声明了哪些变量，创建了哪些函数），并且因为代码压缩的原因，代码执行也更快了。\"]},\"503\":{\"h\":\"（2）容错性更好\",\"t\":[\"变量提升可以在一定程度上提高JS的容错性，看下面的代码：\",\"a = 1; var a; console.log(a); // 1\",\"如果没有变量提升，这两行代码就会报错，但是因为有了变量提升，这段代码就可以正常执行。\",\"虽然在可以开发过程中，可以完全避免这样写，但是有时代码很复杂，可能因为疏忽而先使用后定义了，而由于变量提升的存在，代码会正常运行。当然，在开发过程中，还是尽量要避免变量先使用后声明的写法。\",\"总结：\",\"解析和预编译过程中的声明提升可以提高性能，让函数可以在执行时预先为变量分配栈空间；\",\"声明提升还可以提高JS代码的容错性，使一些不规范的代码也可以正常执行。\"]},\"504\":{\"h\":\"3. 变量提升导致的问题\",\"t\":[\"由于变量提升的存在，使用 JavaScript 来编写和其他语言相同逻辑的代码，都有可能会导致不一样的执行结果。主要有以下两种情况。\"]},\"505\":{\"h\":\"（1）变量被覆盖\",\"t\":[\"来看下面的代码：\",\"var name = \\\"JavaScript\\\" function showName(){ console.log(name); if(0){ var name = \\\"CSS\\\" } } showName()\",\"这里会输出 undefined，而并没有输出“JavaScript”，为什么呢？\",\"首先，当刚执行 showName 函数调用时，会创建 showName 函数的执行上下文。之后，JavaScript 引擎便开始执行 showName 函数内部的代码。首先执行的是：\",\"console.log(name);\",\"执行这段代码需要使用变量 name，代码中有两个 name 变量：一个在全局执行上下文中，其值是JavaScript；另外一个在 showName 函数的执行上下文中，由于if(0)永远不成立，所以 name 值是 CSS。那该使用哪个呢？应该先使用函数执行上下文中的变量。因为在函数执行过程中，JavaScript 会优先从当前的执行上下文中查找变量，由于变量提升的存在，当前的执行上下文中就包含了if(0)中的变量 name，其值是 undefined，所以获取到的 name 的值就是 undefined。\",\"这里输出的结果和其他支持块级作用域的语言不太一样，比如 C 语言输出的就是全局变量，所以这里会很容易造成误解。\"]},\"506\":{\"h\":\"（2）变量没有被销毁\",\"t\":[\"function foo(){ for (var i = 0; i < 5; i++) { } console.log(i); } foo()\",\"使用其他的大部分语言实现类似代码时，在 for 循环结束之后，i 就已经被销毁了，但是在 JavaScript 代码中，i 的值并未被销毁，所以最后打印出来的是 5。这也是由变量提升而导致的，在创建执行上下文阶段，变量 i 就已经被提升了，所以当 for 循环结束之后，变量 i 并没有被销毁。\"]},\"507\":{\"h\":\"4. 禁用变量提升\",\"t\":[\"为了解决上述问题，ES6 引入了 let 和 const 关键字，从而使 JavaScript 也能像其他语言一样拥有块级作用域。let 和 const 是不存在变量提升的。下面用 let 来声明变量：\",\"console.log(num) let num = 1 // 输出结果：Uncaught ReferenceError: num is not defined\",\"如果改成 const 声明，也会是一样的结果——用 let 和 const 声明的变量，它们的声明生效时机和具体代码的执行时机保持一致。\",\"变量提升机制会导致很多误操作：那些忘记被声明的变量无法在开发阶段被明显地察觉出来，而是以 undefined 的形式藏在代码中。为了减少运行时错误，防止 undefined 带来不可预知的问题，ES6 特意将声明前不可用做了强约束。不过，let 和 const 还是有区别的，使用 let 关键字声明的变量是可以被改变的，而使用 const 声明的变量其值是不可以被改变的。\",\"下面来看看 ES6 是如何通过块级作用域来解决上面的问题：\",\"function fn() { var num = 1; if (true) { var num = 2; console.log(num); // 2 } console.log(num); // 2 } fn()\",\"在这段代码中，有两个地方都定义了变量 num，函数块的顶部和 if 的内部，由于 var 的作用范围是整个函数，所以在编译阶段，会生成如下执行上下文：\",\"从执行上下文的变量环境中可以看出，最终只生成了一个变量 num，函数体内所有对 num 的赋值操作都会直接改变变量环境中的 num 的值。所以上述代码最后输出的是 2，而对于相同逻辑的代码，其他语言最后一步输出的值应该是 1，因为在 if 里面的声明不应该影响到块外面的变量。\",\"下面来把 var 关键字替换为 let 关键字，看看效果：\",\"function fn() { let num = 1; if (true) { let num = 2; console.log(num); // 2 } console.log(num); // 1 } fn()\",\"执行这段代码，其输出结果就和预期是一致的。这是因为 let 关键字是支持块级作用域的，所以，在编译阶段 JavaScript 引擎并不会把 if 中通过 let 声明的变量存放到变量环境中，这也就意味着在 if 中通过 let 声明的关键字，并不会提升到全函数可见。所以在 if 之内打印出来的值是 2，跳出语块之后，打印出来的值就是 1 了。这就符合我们的习惯了：作用块内声明的变量不影响块外面的变量。\"]},\"508\":{\"h\":\"5. JS如何支持块级作用域\",\"t\":[\"那么问题来了，ES6 是如何做到既要支持变量提升的特性，又要支持块级作用域的呢？下面从执行上下文的角度来看看原因。\",\"JavaScript 引擎是通过变量环境实现函数级作用域的，那么 ES6 又是如何在函数级作用域的基础之上，实现对块级作用域的支持呢？先看下面这段代码：\",\"function fn(){ var a = 1 let b = 2 { let b = 3 var c = 4 let d = 5 console.log(a) console.log(b) console.log(d) } console.log(b) console.log(c) } fn()\",\"当这段代码执行时，JavaScript 引擎会先对其进行编译并创建执行上下文，然后再按照顺序执行代码。let 关键字会创建块级作用域，那么 let 关键字是如何影响执行上下文的呢？\"]},\"509\":{\"h\":\"（1）创建执行上下文\",\"t\":[\"创建的执行上下文如图所示：\",\"通过上图可知：\",\"通过 var 声明的变量，在编译阶段会被存放到变量环境中。\",\"通过 let 声明的变量，在编译阶段会被存放到词法环境中。\",\"在函数作用域内部，通过 let 声明的变量并没有被存放到词法环境中。\"]},\"510\":{\"h\":\"（2）执行代码\",\"t\":[\"当执行到代码块中时，变量环境中 a 的值已经被设置成了 1，词法环境中 b 的值已经被设置成了 2，这时函数的执行上下文如图所示：\",\"可以看到，当进入函数的作用域块时，作用域块中通过 let 声明的变量，会被存放在词法环境的一个单独的区域中，这个区域中的变量并不影响作用域块外面的变量，比如在作用域外面声明了变量 b，在该作用域块内部也声明了变量 b，当执行到作用域内部时，它们都是独立的存在。\",\"其实，在词法环境内部，维护了一个栈结构，栈底是函数最外层的变量，进入一个作用域块后，就会把该作用域块内部的变量压到栈顶；当作用域执行完成之后，该作用域的信息就会从栈顶弹出，这就是词法环境的结构。这里的变量是指通过 let 或者 const 声明的变量。\",\"接下来，当执行到作用域块中的console.log(a)时，就需要在词法环境和变量环境中查找变量 a 的值了，查找方式：沿着词法环境的栈顶向下查询，如果在词法环境中的某个块中查找到了，就直接返回给 JavaScript 引擎，如果没有查找到，那么继续在变量环境中查找。这样变量查找就完成了：\",\"当作用域块执行结束之后，其内部定义的变量就会从词法环境的栈顶弹出，最终执行上下文如图所示：\",\"块级作用域就是通过词法环境的栈结构来实现的，而变量提升是通过变量环境来实现，通过这两者的结合，JavaScript 引擎就同时支持了变量提升和块级作用域。\"]},\"511\":{\"h\":\"6. 暂时性死区\",\"t\":[\"最后再来看看暂时性死区的概念：\",\"var name = 'JavaScript'; { name = 'CSS'; let name; } // 输出结果：Uncaught ReferenceError: Cannot access 'name' before initialization\",\"ES6 规定：如果区块中存在 let 和 const，这个区块对这两个关键字声明的变量，从一开始就形成了封闭作用域。假如尝试在声明前去使用这类变量，就会报错。这一段会报错的区域就是暂时性死区。上面代码的第4行上方的区域就是暂时性死区。\",\"如果想成功引用全局的 name 变量，需要把 let 声明给去掉：\",\"var name = 'JavaScript'; { name = 'CSS'; }\",\"这时程序就能正常运行了。其实，这并不意味着引擎感知不到 name 变量的存在，恰恰相反，它感知到了，而且它清楚地知道 name 是用 let 声明在当前块里的。正因如此，它才会给这个变量加上暂时性死区的限制。一旦去掉 let 关键字，它也就不起作用了。\",\"其实这也就是暂时性死区的本质：当程序的控制流程在新的作用域进行实例化时，在此作用域中用 let 或者 const 声明的变量会先在作用域中被创建出来，但此时还未进行词法绑定，所以是不能被访问的，如果访问就会抛出错误。因此，在这运行流程进入作用域创建变量，到变量可以被访问之间的这段时间，就称之为暂时死区。\",\"在 let 和 const关键字出现之前，typeof运算符是百分之百安全的，现在也会引发暂时性死区的发生，像import关键字引入公共模块、使用new class创建类的方式，也会引发暂时性死区，究其原因还是变量的声明先与使用。\",\"typeof a // Uncaught ReferenceError: a is not defined let a = 1\",\"可以看到，在a声明之前使用typeof关键字报错了，这就是暂时性死区导致的。\"]},\"512\":{\"c\":[\"Javascript\"]},\"513\":{\"c\":[\"变量提升\"]},\"514\":{\"h\":\"字符串\"},\"515\":{\"h\":\"1. 获取字符串长度\",\"t\":[\"JavaScript 中的字符串有一个 length 属性，该属性可以用来获取字符串的长度：\",\"const str = 'hello' str.length // 输出结果：5\"]},\"516\":{\"h\":\"2. 获取字符串指定位置的值\",\"t\":[\"charAt()和 charCodeAt()方法都可以通过索引来获取指定位置的值：\",\"charAt() 方法获取到的是指定位置的字符；\",\"charCodeAt()方法获取的是指定为值得字符的 Unicode 值。\"]},\"517\":{\"h\":\"（1）charAt()\",\"t\":[\"charAt() 方法可以返回指定位置的字符。其语法如下：\",\"string.charAt(index)\",\"index 表示字符在字符串中的索引值：\",\"const str = 'hello' str.charAt(1) // 输出结果：e\",\"我们知道，字符串也可以通过索引值来直接获取对应字符，那它和 charAt()有什么区别呢？来看例子：\",\"const str = 'hello' str.charAt(1) // 输出结果：e str[1] // 输出结果：e str.charAt(5) // 输出结果：'' str[5] // 输出结果：undefined\",\"可以看到，当 index 的取值不在 str 的长度范围内时，str[index]会返回 undefined，而 charAt(index)会返回空字符串；除此之外，str[index]不兼容 ie6-ie8，charAt(index)可以兼容。\"]},\"518\":{\"h\":\"（2）charCodeAt()\",\"t\":[\"charCodeAt()：该方法会返回指定索引位置字符的 Unicode 值，返回值是 0 - 65535 之间的整数，表示给定索引处的 UTF-16 代码单元，如果指定位置没有字符，将返回 NaN：\",\"let str = \\\"abcdefg\\\"; console.log(str.charCodeAt(1)); // \\\"b\\\" --> 98\",\"通过这个方法，可以获取字符串中指定Unicode编码值范围的字符。比如，数字0～9的Unicode编码范围是: 48～57，可以通过这个方法来筛选字符串中的数字，当然如果你更熟悉正则表达式，会更方便。\"]},\"519\":{\"h\":\"3. 检索字符串是否包含特定序列\",\"t\":[\"这5个方法都可以用来检索一个字符串中是否包含特定的序列。其中前两个方法得到的指定元素的索引值，并且只会返回第一次匹配到的值的位置。后三个方法返回的是布尔值，表示是否匹配到指定的值。\",\"注意：这5个方法都对大小写敏感！\"]},\"520\":{\"h\":\"（1）indexOf()\",\"t\":[\"indexOf()：查找某个字符，有则返回第一次匹配到的位置，否则返回-1，其语法如下：\",\"string.indexOf(searchvalue,fromindex)\",\"该方法有两个参数：\",\"searchvalue：必需，规定需检索的字符串值；\",\"fromindex：可选的整数参数，规定在字符串中开始检索的位置。它的合法取值是 0 到 string.length - 1。如省略该，则从字符串的首字符开始检索。\",\"let str = \\\"abcdefgabc\\\"; console.log(str.indexOf(\\\"a\\\")); // 输出结果：0 console.log(str.indexOf(\\\"z\\\")); // 输出结果：-1 console.log(str.indexOf(\\\"c\\\", 4)) // 输出结果：9\"]},\"521\":{\"h\":\"（2）lastIndexOf()\",\"t\":[\"lastIndexOf()：查找某个字符，有则返回最后一次匹配到的位置，否则返回-1\",\"let str = \\\"abcabc\\\"; console.log(str.lastIndexOf(\\\"a\\\")); // 输出结果：3 console.log(str.lastIndexOf(\\\"z\\\")); // 输出结果：-1\",\"该方法和indexOf()类似，只是查找的顺序不一样，indexOf()是正序查找，lastIndexOf()是逆序查找。\"]},\"522\":{\"h\":\"（3）includes()\",\"t\":[\"includes()：该方法用于判断字符串是否包含指定的子字符串。如果找到匹配的字符串则返回 true，否则返回 false。该方法的语法如下：\",\"string.includes(searchvalue, start)\",\"该方法有两个参数：\",\"searchvalue：必需，要查找的字符串；\",\"start：可选，设置从那个位置开始查找，默认为 0。\",\"let str = 'Hello world!'; str.includes('o') // 输出结果：true str.includes('z') // 输出结果：false str.includes('e', 2) // 输出结果：false\"]},\"523\":{\"h\":\"（4）startsWith()\",\"t\":[\"startsWith()：该方法用于检测字符串是否以指定的子字符串开始。如果是以指定的子字符串开头返回 true，否则 false。其语法和上面的includes()方法一样。\",\"let str = 'Hello world!'; str.startsWith('Hello') // 输出结果：true str.startsWith('Helle') // 输出结果：false str.startsWith('wo', 6) // 输出结果：true\"]},\"524\":{\"h\":\"（5）endsWith()\",\"t\":[\"endsWith()：该方法用来判断当前字符串是否是以指定的子字符串结尾。如果传入的子字符串在搜索字符串的末尾则返回 true，否则将返回 false。其语法如下：\",\"string.endsWith(searchvalue, length)\",\"该方法有两个参数：\",\"searchvalue：必需，要搜索的子字符串；\",\"length： 设置字符串的长度，默认值为原始字符串长度 string.length。\",\"let str = 'Hello world!'; str.endsWith('!') // 输出结果：true str.endsWith('llo') // 输出结果：false str.endsWith('llo', 5) // 输出结果：true\",\"可以看到，当第二个参数设置为5时，就会从字符串的前5个字符中进行检索，所以会返回true。\"]},\"525\":{\"h\":\"4. 连接多个字符串\",\"t\":[\"concat() 方法用于连接两个或多个字符串。该方法不会改变原有字符串，会返回连接两个或多个字符串的新字符串。其语法如下：\",\"string.concat(string1, string2, ..., stringX)\",\"其中参数 string1, string2, ..., stringX 是必须的，他们将被连接为一个字符串的一个或多个字符串对象。\",\"let str = \\\"abc\\\"; console.log(str.concat(\\\"efg\\\")); //输出结果：\\\"abcefg\\\" console.log(str.concat(\\\"efg\\\",\\\"hijk\\\")); //输出结果：\\\"abcefghijk\\\"\",\"虽然concat()方法是专门用来拼接字符串的，但是在开发中使用最多的还是加操作符+，因为其更加简单。\"]},\"526\":{\"h\":\"5. 字符串分割成数组\",\"t\":[\"split() 方法用于把一个字符串分割成字符串数组。该方法不会改变原始字符串。其语法如下：\",\"string.split(separator,limit)\",\"该方法有两个参数：\",\"separator：必需。字符串或正则表达式，从该参数指定的地方分割 string。\",\"limit：可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。\",\"let str = \\\"abcdef\\\"; str.split(\\\"c\\\"); // 输出结果：[\\\"ab\\\", \\\"def\\\"] str.split(\\\"\\\", 4) // 输出结果：['a', 'b', 'c', 'd']\",\"如果把空字符串用作 separator，那么字符串中的每个字符之间都会被分割。\",\"str.split(\\\"\\\"); // 输出结果：[\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\"]\",\"其实在将字符串分割成数组时，可以同时拆分多个分割符，使用正则表达式即可实现：\",\"const list = \\\"apples,bananas;cherries\\\" const fruits = list.split(/[,;]/) console.log(fruits); // 输出结果：[\\\"apples\\\", \\\"bananas\\\", \\\"cherries\\\"]\"]},\"527\":{\"h\":\"6. 截取字符串\",\"t\":[\"substr()、substring()和 slice() 方法都可以用来截取字符串。\"]},\"528\":{\"h\":\"（1） slice()\",\"t\":[\"slice() 方法用于提取字符串的某个部分，并以新的字符串返回被提取的部分。其语法如下：\",\"string.slice(start,end)\",\"该方法有两个参数：\",\"start：必须。 要截取的片断的起始下标，第一个字符位置为 0。如果为负数，则从尾部开始截取。\",\"end：可选。 要截取的片段结尾的下标。若未指定此参数，则要提取的子串包括 start 到原字符串结尾的字符串。如果该参数是负数，那么它规定的是从字符串的尾部开始算起的位置。\",\"上面说了，如果start是负数，则该参数规定的是从字符串的尾部开始算起的位置。也就是说，-1 指字符串的最后一个字符，-2 指倒数第二个字符，以此类推：\",\"let str = \\\"abcdef\\\"; str.slice(1,6); // 输出结果：\\\"bcdef\\\" str.slice(1); // 输出结果：\\\"bcdefg\\\" str.slice(); // 输出结果：\\\"abcdefg\\\" str.slice(-2); // 输出结果：\\\"fg\\\" str.slice(6, 1); // 输出结果：\\\"\\\"\",\"注意，该方法返回的子串包括开始处的字符，但不包括结束处的字符。\"]},\"529\":{\"h\":\"（2） substr()\",\"t\":[\"substr() 方法用于在字符串中抽取从开始下标开始的指定数目的字符。其语法如下：\",\"string.substr(start,length)\",\"该方法有两个参数：\",\"start 必需。要抽取的子串的起始下标。必须是数值。如果是负数，那么该参数声明从字符串的尾部开始算起的位置。也就是说，-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。\",\"length：可选。子串中的字符数。必须是数值。如果省略了该参数，那么返回从 stringObject 的开始位置到结尾的字串。\",\"let str = \\\"abcdef\\\"; str.substr(1,6); // 输出结果：\\\"bcdefg\\\" str.substr(1); // 输出结果：\\\"bcdefg\\\" 相当于截取[1,str.length-1] str.substr(); // 输出结果：\\\"abcdefg\\\" 相当于截取[0,str.length-1] str.substr(-1); // 输出结果：\\\"g\\\"\"]},\"530\":{\"h\":\"（3） substring()\",\"t\":[\"substring() 方法用于提取字符串中介于两个指定下标之间的字符。其语法如下：\",\"string.substring(from, to)\",\"该方法有两个参数：\",\"from：必需。一个非负的整数，规定要提取的子串的第一个字符在 string 中的位置。\",\"to：可选。一个非负的整数，比要提取的子串的最后一个字符在 string 中的位置多 1。如果省略该参数，那么返回的子串会一直到字符串的结尾。\",\"注意： 如果参数 from 和 to 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。如果 from 比 to 大，那么该方法在提取子串之前会先交换这两个参数。并且该方法不接受负的参数，如果参数是个负数，就会返回这个字符串。\",\"let str = \\\"abcdef\\\"; str.substring(1,6); // 输出结果：\\\"bcdef\\\" [1,6) str.substring(1); // 输出结果：\\\"bcdefg\\\" [1,str.length-1] str.substring(); // 输出结果：\\\"abcdefg\\\" [0,str.length-1] str.substring(6,1); // 输出结果 \\\"bcdef\\\" [1,6) str.substring(-1); // 输出结果：\\\"abcdefg\\\"\",\"注意，该方法返回的子串包括开始处的字符，但不包括结束处的字符。\"]},\"531\":{\"h\":\"7. 字符串大小写转换\",\"t\":[\"toLowerCase() 和 toUpperCase()方法可以用于字符串的大小写转换。\"]},\"532\":{\"h\":\"（1）toLowerCase()\",\"t\":[\"toLowerCase()：该方法用于把字符串转换为小写。\",\"let str = \\\"adABDndj\\\"; str.toLowerCase(); // 输出结果：\\\"adabdndj\\\"\"]},\"533\":{\"h\":\"（2）toUpperCase()\",\"t\":[\"toUpperCase()：该方法用于把字符串转换为大写。\",\"let str = \\\"adABDndj\\\"; str.toUpperCase(); // 输出结果：\\\"ADABDNDJ\\\"\",\"我们可以用这个方法来将字符串中第一个字母变成大写：\",\"let word = 'apple' word = word[0].toUpperCase() + word.substr(1) console.log(word) // 输出结果：\\\"Apple\\\"\"]},\"534\":{\"h\":\"8. 字符串模式匹配\",\"t\":[\"replace()、match()和search()方法可以用来匹配或者替换字符。\"]},\"535\":{\"h\":\"（1）replace()\",\"t\":[\"replace()：该方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。其语法如下：\",\"string.replace(searchvalue, newvalue)\",\"该方法有两个参数：\",\"searchvalue：必需。规定子字符串或要替换的模式的 RegExp 对象。如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。\",\"newvalue：必需。一个字符串值。规定了替换文本或生成替换文本的函数。\",\"let str = \\\"abcdef\\\"; str.replace(\\\"c\\\", \\\"z\\\") // 输出结果：abzdef\",\"执行一个全局替换, 忽略大小写:\",\"let str=\\\"Mr Blue has a blue house and a blue car\\\"; str.replace(/blue/gi, \\\"red\\\"); // 输出结果：'Mr red has a red house and a red car'\",\"注意： 如果 regexp 具有全局标志 g，那么 replace() 方法将替换所有匹配的子串。否则，它只替换第一个匹配子串。\"]},\"536\":{\"h\":\"（2）match()\",\"t\":[\"match()：该方法用于在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。该方法类似 indexOf() 和 lastIndexOf()，但是它返回指定的值，而不是字符串的位置。其语法如下：\",\"string.match(regexp)\",\"该方法的参数 regexp 是必需的，规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象。\",\"注意： 该方法返回存放匹配结果的数组。该数组的内容依赖于 regexp 是否具有全局标志 g。\",\"let str = \\\"abcdef\\\"; console.log(str.match(\\\"c\\\")) // [\\\"c\\\", index: 2, input: \\\"abcdef\\\", groups: undefined]\"]},\"537\":{\"h\":\"（3）search()\",\"t\":[\"search()方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串。其语法如下：\",\"string.search(searchvalue)\",\"该方法的参数 regex 可以是需要在 string 中检索的子串，也可以是需要检索的 RegExp 对象。\",\"注意： 要执行忽略大小写的检索，请追加标志 i。该方法不执行全局匹配，它将忽略标志 g，也就是只会返回第一次匹配成功的结果。如果没有找到任何匹配的子串，则返回 -1。\",\"返回值： 返回 str 中第一个与 regexp 相匹配的子串的起始位置。\",\"let str = \\\"abcdef\\\"; str.search(/bcd/) // 输出结果：1\"]},\"538\":{\"h\":\"9. 移除字符串收尾空白符\",\"t\":[\"trim()、trimStart()和trimEnd()这三个方法可以用于移除字符串首尾的头尾空白符，空白符包括：空格、制表符 tab、换行符等其他空白符等。\"]},\"539\":{\"h\":\"（1）trim()\",\"t\":[\"trim() 方法用于移除字符串首尾空白符，该方法不会改变原始字符串：\",\"let str = \\\" abcdef \\\" str.trim() // 输出结果：\\\"abcdef\\\"\",\"注意，该方法不适用于null、undefined、Number类型。\"]},\"540\":{\"h\":\"（2）trimStart()\",\"t\":[\"trimStart() 方法的的行为与trim()一致，不过会返回一个从原始字符串的开头删除了空白的新字符串，不会修改原始字符串：\",\"const s = ' abc '; s.trimStart() // \\\"abc \\\"\"]},\"541\":{\"h\":\"（3）trimEnd()\",\"t\":[\"trimEnd() 方法的的行为与trim()一致，不过会返回一个从原始字符串的结尾删除了空白的新字符串，不会修改原始字符串：\",\"const s = ' abc '; s.trimEnd() // \\\" abc\\\"\"]},\"542\":{\"h\":\"10. 获取字符串本身\",\"t\":[\"valueOf()和toString()方法都会返回字符串本身的值，感觉用处不大。\"]},\"543\":{\"h\":\"（1）valueOf()\",\"t\":[\"valueOf()：返回某个字符串对象的原始值，该方法通常由 JavaScript 自动进行调用，而不是显式地处于代码中。\",\"let str = \\\"abcdef\\\" console.log(str.valueOf()) // \\\"abcdef\\\"\"]},\"544\":{\"h\":\"（2）toString()\",\"t\":[\"toString()：返回字符串对象本身\",\"let str = \\\"abcdef\\\" console.log(str.toString()) // \\\"abcdef\\\"\"]},\"545\":{\"h\":\"11. 重复一个字符串\",\"t\":[\"repeat() 方法返回一个新字符串，表示将原字符串重复n次：\",\"'x'.repeat(3) // 输出结果：\\\"xxx\\\" 'hello'.repeat(2) // 输出结果：\\\"hellohello\\\" 'na'.repeat(0) // 输出结果：\\\"\\\"\",\"如果参数是小数，会向下取整：\",\"'na'.repeat(2.9) // 输出结果：\\\"nana\\\"\",\"如果参数是负数或者Infinity，会报错：\",\"'na'.repeat(Infinity) // RangeError 'na'.repeat(-1) // RangeError\",\"如果参数是 0 到-1 之间的小数，则等同于 0，这是因为会先进行取整运算。0 到-1 之间的小数，取整以后等于-0，repeat视同为 0。\",\"'na'.repeat(-0.9) // 输出结果：\\\"\\\"\",\"如果参数是NaN，就等同于 0：\",\"'na'.repeat(NaN) // 输出结果：\\\"\\\"\",\"如果repeat的参数是字符串，则会先转换成数字。\",\"'na'.repeat('na') // 输出结果：\\\"\\\" 'na'.repeat('3') // 输出结果：\\\"nanana\\\"\"]},\"546\":{\"h\":\"12. 补齐字符串长度\",\"t\":[\"padStart()和padEnd()方法用于补齐字符串的长度。如果某个字符串不够指定长度，会在头部或尾部补全。\"]},\"547\":{\"h\":\"（1）padStart()\",\"t\":[\"padStart()用于头部补全。该方法有两个参数，其中第一个参数是一个数字，表示字符串补齐之后的长度；第二个参数是用来补全的字符串。\",\"如果原字符串的长度，等于或大于指定的最小长度，则返回原字符串：\",\"'x'.padStart(1, 'ab') // 'x'\",\"如果用来补全的字符串与原字符串，两者的长度之和超过了指定的最小长度，则会截去超出位数的补全字符串：\",\"'x'.padStart(5, 'ab') // 'ababx' 'x'.padStart(4, 'ab') // 'abax'\",\"如果省略第二个参数，默认使用空格补全长度：\",\"'x'.padStart(4, 'ab') // 'a '\",\"padStart()的常见用途是为数值补全指定位数，笔者最近做的一个需求就是将返回的页数补齐为三位，比如第1页就显示为001，就可以使用该方法来操作：\",\"\\\"1\\\".padStart(3, '0') // 输出结果： '001' \\\"15\\\".padStart(3, '0') // 输出结果： '015'\"]},\"548\":{\"h\":\"（2）padEnd()\",\"t\":[\"padEnd()用于尾部补全。该方法也是接收两个参数，第一个参数是字符串补全生效的最大长度，第二个参数是用来补全的字符串：\",\"'x'.padEnd(5, 'ab') // 'xabab' 'x'.padEnd(4, 'ab') // 'xaba'\"]},\"549\":{\"h\":\"13. 字符串转为数字\",\"t\":[\"parseInt()和parseFloat()方法都用于将字符串转为数字。\"]},\"550\":{\"h\":\"（1）parseInt()\",\"t\":[\"parseInt() 方法用于可解析一个字符串，并返回一个整数。其语法如下：\",\"parseInt(string, radix)\",\"该方法有两个参数：\",\"string：必需。要被解析的字符串。\",\"radix：可选。表示要解析的数字的基数。该值介于 2 ~ 36 之间。\",\"当参数 radix 的值为 0，或没有设置该参数时，parseInt() 会根据 string 来判断数字的基数。\",\"parseInt(\\\"10\\\"); // 输出结果：10 parseInt(\\\"17\\\",8); // 输出结果：15 (8+7) parseInt(\\\"010\\\"); // 输出结果：10 或 8\",\"当参数 radix 的值以 “0x” 或 “0X” 开头，将以 16 为基数：\",\"parseInt(\\\"0x10\\\") // 输出结果：16\",\"如果该参数小于 2 或者大于 36，则 parseInt() 将返回 NaN：\",\"parseInt(\\\"50\\\", 1) // 输出结果：NaN parseInt(\\\"50\\\", 40) // 输出结果：NaN\",\"只有字符串中的第一个数字会被返回，当遇到第一个不是数字的字符为止:\",\"parseInt(\\\"40 4years\\\") // 输出结果：40\",\"如果字符串的第一个字符不能被转换为数字，就会返回 NaN：\",\"parseInt(\\\"new100\\\") // 输出结果：NaN\",\"字符串开头和结尾的空格是允许的：\",\"parseInt(\\\" 60 \\\") // 输出结果： 60\"]},\"551\":{\"h\":\"（2）parseFloat()\",\"t\":[\"parseFloat() 方法可解析一个字符串，并返回一个浮点数。该方法指定字符串中的首个字符是否是数字。如果是，则对字符串进行解析，直到到达数字的末端为止，然后以数字返回该数字，而不是作为字符串。其语法如下：\",\"parseFloat(string)\",\"parseFloat 将它的字符串参数解析成为浮点数并返回。如果在解析过程中遇到了正负号（+ 或 -）、数字 (0-9)、小数点，或者科学记数法中的指数（e 或 E）以外的字符，则它会忽略该字符以及之后的所有字符，返回当前已经解析到的浮点数。同时参数字符串首位的空白符会被忽略。\",\"parseFloat(\\\"10.00\\\") // 输出结果：10.00 parseFloat(\\\"10.01\\\") // 输出结果：10.01 parseFloat(\\\"-10.01\\\") // 输出结果：-10.01 parseFloat(\\\"40.5 years\\\") // 输出结果：40.5\",\"如果参数字符串的第一个字符不能被解析成为数字，则 parseFloat 返回 NaN。\",\"parseFloat(\\\"new40.5\\\") // 输出结果：NaN\"]},\"552\":{\"c\":[\"Javascript\"]},\"553\":{\"c\":[\"字符串\"]},\"554\":{\"h\":\"异步编程\",\"t\":[\"浏览器中的 JavaScript 程序是典型的事件驱动型程序，即它们会等待用户触发后才真正的执行，而基于的 JavaScript 的服务器通常要等待客户端通过网络发送请求，然后才能执行。这种异步编程在 JavaScript 是很常见的，下面就来介绍几个异步编程的重要特性，它们可以使编写异步代码更容易。\",\"本文将按照异步编程的出现时间来归纳整理：\"]},\"555\":{\"h\":\"一、什么是异步\",\"t\":[\"下面先来看看同步和异步的概念：\",\"同步：在执行某段代码时，在没有得到返回结果之前，其他代码暂时是无法执行的，但是一旦执行完成拿到返回值，即可执行其他代码。也就是说，在此段代码执行完未返回结果之前，会阻塞之后的代码执行，这样的情况称为同步。\",\"异步：当某一代码执行异步过程调用发出后，这段代码不会立刻得到返回结果。而是在异步调用发出之后，一般通过回调函数处理这个调用之后拿到结果。异步调用发出后，不会影响阻塞后面的代码执行，这样的情况称为异步。\",\"下面来看一个例子：\",\"// 同步 function syncAdd(a, b) { return a + b } syncAdd(1, 2) // 立即得到结果：3 // 异步 function asyncAdd(a, b) { setTimeout(function () { console.log(a + b) }, 1000) } asyncAdd(1, 2) // 1s后打印结果：3\",\"这里定义了同步函数 syncAdd 和异步函数 asyncAdd，调用 syncAdd(1, 2) 函数时会等待得到结果之后再执行后面的代码。而调用 asyncAdd(1, 2) 时则会在得到结果之前继续执行，直到 1 秒后得到结果并打印。\",\"我们知道，JavaScript 是单线程的，如果代码同步执行，就可能会造成阻塞；而如果使用异步则不会阻塞，不需要等待异步代码执行的返回结果，可以继续执行该异步任务之后的代码逻辑。因此，在 JavaScript 编程中，会大量使用异步。\"]},\"556\":{\"h\":\"二、回调函数\",\"t\":[\"在最基本的层面上，JavaScript 的异步编程式通过回调实现的。回调的是函数，可以传给其他函数，而其他函数会在满足某个条件时调用这个函数。下面就来看看常见的不同形式的基于回调的异步编程。\"]},\"557\":{\"h\":\"1. 定时器\",\"t\":[\"一种最简单的异步操作就是在一定时间之后运行某些代码。如下面代码：\",\"setTimeout(asyncAdd(1, 2), 8000)\",\"setTimeout()方法的第一个参数是一个函数，第二个参数是以毫秒为单位的时间间隔。asyncAdd()方法可能是一个回调函数，而 setTimeout()方法就是注册回调函数的函数。它还代指在什么异步条件下调用回调函数。setTimeout()方法只会调用一次回调函数。\"]},\"558\":{\"h\":\"2. 事件监听\",\"t\":[\"给目标 DOM 绑定一个监听函数，用的最多的是 addEventListener：\",\"document.getElementById('#myDiv').addEventListener( 'click', (e) => { console.log('我被点击了') }, false )\",\"通过给 id 为 myDiv 的一个元素绑定了点击事件的监听函数，把任务的执行时机推迟到了点击这个动作发生时。此时，任务的执行顺序与代码的编写顺序无关，只与点击事件有没有被触发有关。\",\"这里使用 addEventListener 注册了回调函数，这个方法的第一个参数是一个字符串，指定要注册的事件类型，如果用户点击了指定的元素，浏览器就会调用回调函数，并给他传入一个对象，其中包含着事件的详细信息。\"]},\"559\":{\"h\":\"3. 网络请求\",\"t\":[\"JavaScript 中另外一种常见的异步操作就是网络请求：\",\"const SERVER_URL = '/server' let xhr = new XMLHttpRequest() // 创建 Http 请求 xhr.open('GET', SERVER_URL, true) // 设置状态监听函数 xhr.onreadystatechange = function () { if (this.readyState !== 4) return // 当请求成功时 if (this.status === 200) { handle(this.response) } else { console.error(this.statusText) } } // 设置请求失败时的监听函数 xhr.onerror = function () { console.error(this.statusText) } // 发送 Http 请求 xhr.send(null)\",\"这里使用 XMLHttpRequest 类及回调函数来发送 HTTP 请求并异步处理服务器返回的响应。\"]},\"560\":{\"h\":\"4. Node 中的回调与事件\",\"t\":[\"Node.js 服务端 JavaScript 环境底层就是异步的，定义了很多使用回调和事件的 API。例如读取文件默认的 API 就是异步的，它会在读取文件内容之后调用一个回调函数：\",\"const fs = require('fs') let options = {} // 读取配置文件，调用回调函数 fs.readFile('config.json', 'utf8', (err, data) => { if (err) { throw err } else { Object.assign(options, JSON.parse(data)) } startProgram(options) })\",\"fs.readFile()方法以接收两个参数的回调作为最后一个参数。它会异步读取指定文件，如果读取成功就会将第二个参数传递给回调的第二个参数，如果发生错误，就会将错误传递给回调的第一个参数。\"]},\"561\":{\"h\":\"三、Promise\"},\"562\":{\"h\":\"1. Promise 的概念\",\"t\":[\"Promise 是一种为简化异步编程而设计的核心语言特性，它是一个对象，表示异步操作的结果。在最简单的情况下，Promise 就是一种处理回调的不同方式。不过，使用 Promise 也有实际的用处，基于回调的异步编程会有一个很现实的问题，那就是经常出现回调多层嵌套的情况，会造成代码难以理解。Promise 可以让这种嵌套回调以一种更线性的链式形式表达出来，因此更容易阅读和理解。\",\"回调的另一个问题就是难以处理错误，如果一个异步函数抛出异常，则该异常没有办法传播到异步操作的发起者。异步编程的一个基本事实就是它破坏了异常处理。而 Promise 则标准化了异步错误处理，通过 Promise 链提供一种让错误正确传播的途经。\",\"实际上，Promise 就是一个容器，里面保存着某个未来才会结束的事件（通常是异步操作）的结果。从语法上说，Promise 是一个对象，它可以获取异步操作的消息。Promise 提供了统一的 API，各种异步操作都可以用同样的方法进行处理。\"]},\"563\":{\"h\":\"（1）Promise 实例有三个状态\",\"t\":[\"pending 状态：表示进行中。Promise 实例创建后的初始态；\",\"fulfilled 状态：表示成功完成。在执行器中调用 resolve 后达成的状态；\",\"rejected 状态：表示操作失败。在执行器中调用 reject 后达成的状态。\"]},\"564\":{\"h\":\"（2）Promise 实例有两个过程\",\"t\":[\"pending -> fulfilled : Resolved（已完成）；\",\"pending -> rejected：Rejected（已拒绝）。\"]},\"565\":{\"h\":\"2. Promise 的特点\",\"t\":[\"一旦状态改变就不会再变，promise 对象的状态改变，只有两种可能：从 pending 变为 fulfilled，从 pending 变为 rejected。当 Promise 实例被创建时，内部的代码就会立即被执行，而且无法从外部停止。比如无法取消超时或消耗性能的异步调用，容易导致资源的浪费；\",\"如果不设置回调函数，Promise 内部抛出的错误，不会反映到外部；\",\"Promise 处理的问题都是“一次性”的，因为一个 Promise 实例只能 resolve 或 reject 一次，所以面对某些需要持续响应的场景时就会变得力不从心。比如上传文件获取进度时，默认采用的就是事件监听的方式来实现。\",\"下面来看一个例子：\",\"const https = require('https') function httpPromise(url) { return new Promise((resolve, reject) => { https .get(url, (res) => { resolve(data) }) .on('error', (err) => { reject(error) }) }) } httpPromise() .then((data) => { console.log(data) }) .catch((error) => { console.log(error) })\",\"可以看到，Promise 会接收一个执行器，在这个执行器里，需要把目标异步任务给放进去。在 Promise 实例创建后，执行器里的逻辑会立刻执行，在执行的过程中，根据异步返回的结果，决定如何使用 resolve 或 reject 来改变 Promise 实例的状态。\",\"在这个例子里，当用 resolve 切换到了成功态后，Promise 的逻辑就会走到 then 中传入的方法里去；用 reject 切换到失败态后，Promise 的逻辑就会走到 catch 传入的方法中。\",\"这样的逻辑，本质上与回调函数中的成功回调和失败回调没有差异。但这种写法大大地提高了代码的质量。当我们进行大量的异步链式调用时，回调地狱不复存在了。取而代之的是层级简单、赏心悦目的 Promise 调用链：\",\"httpPromise(url1) .then((res) => { console.log(res) return httpPromise(url2) }) .then((res) => { console.log(res) return httpPromise(url3) }) .then((res) => { console.log(res) return httpPromise(url4) }) .then((res) => console.log(res))\"]},\"566\":{\"h\":\"3. Promise 的创建\",\"t\":[\"Promise 对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled（已成功）和 rejected（已失败）。\",\"Promise 构造函数接受一个函数作为参数，该函数的两个参数分别是 resolve 和 reject。\",\"const promise = new Promise((resolve, reject) => { if (/* 异步操作成功 */){ resolve(value); } else { reject(error); } });\",\"一般情况下，我们会用 new Promise()来创建 Promise 对象。除此之外，还也可以使用 promise.resolve 和 promise.reject 这两个方法来创建：\"]},\"567\":{\"h\":\"（1）Promise.resolve\",\"t\":[\"Promise.resolve(value)的返回值是一个 promise 对象，我们可以对返回值进行.then 调用，如下代码：\",\"Promise.resolve(11).then(function (value) { console.log(value) // 打印出11 })\",\"resolve(11)会让 promise 对象进入确定(resolve 状态)，并将参数 11 传递给后面 then 中指定的 onFulfilled 函数；\"]},\"568\":{\"h\":\"（2）Promise.reject\",\"t\":[\"Promise.reject 的返回值也是一个 promise 对象，如下代码：\",\"Promise.reject(new Error('我错了！'))\",\"上面是以下代码的简单形式：\",\"new Promise((resolve, reject) => { reject(new Error('我错了！')) })\",\"下面来综合看看 resolve 方法和 reject 方法：\",\"function testPromise(ready) { return new Promise(resolve,reject) => { if(ready) { resolve(\\\"hello world\\\"); }else { reject(\\\"No thanks\\\"); } }); }; testPromise(true).then((msg) => { console.log(msg); },(error) => { console.log(error); });\",\"上面的代码给 testPromise 方法传递一个参数，返回一个 promise 对象，如果为 true，那么调用 Promise 对象中的 resolve()方法，并且把其中的参数传递给后面的 then 第一个函数内，因此打印出 “hello world”, 如果为 false，会调用 promise 对象中的 reject()方法，则会进入 then 的第二个函数内，会打印 No thanks。\"]},\"569\":{\"h\":\"4. Promise 的作用\",\"t\":[\"在开发中可能会碰到这样的需求：使用 ajax 发送 A 请求，成功后拿到数据，需要把数据传给 B 请求，那么需要这样编写代码：\",\"let fs = require('fs') fs.readFile('./a.txt', 'utf8', function (err, data) { fs.readFile(data, 'utf8', function (err, data) { fs.readFile(data, 'utf8', function (err, data) { console.log(data) }) }) })\",\"这段代码之所以看上去很乱，归结其原因有两点：\",\"第一是嵌套调用，下面的任务依赖上个任务的请求结果，并在上个任务的回调函数内部执行新的业务逻辑，这样当嵌套层次多了之后，代码的可读性就变得非常差了。\",\"第二是任务的不确定性，执行每个任务都有两种可能的结果（成功或者失败），所以体现在代码中就需要对每个任务的执行结果做两次判断，这种对每个任务都要进行一次额外的错误处理的方式，明显增加了代码的混乱程度。\",\"既然原因分析出来了，那么问题的解决思路就很清晰了：\",\"消灭嵌套调用；\",\"合并多个任务的错误处理。\",\"这么说可能有点抽象，不过 Promise 解决了这两个问题。接下来就看看 Promise 是怎么消灭嵌套调用和合并多个任务的错误处理的。\",\"Promise 出现之后，代码可以这样写：\",\"let fs = require('fs') function read(url) { return new Promise((resolve, reject) => { fs.readFile(url, 'utf8', function (error, data) { error && reject(error) resolve(data) }) }) } read('./a.txt') .then((data) => { return read(data) }) .then((data) => { return read(data) }) .then((data) => { console.log(data) })\",\"通过引入 Promise，上面这段代码看起来就非常线性了，也非常符合人的直觉。Promise 利用了三大技术手段来解决回调地狱：回调函数延迟绑定、返回值穿透、错误冒泡。\",\"下面来看一段代码：\",\"let readFilePromise = (filename) => { fs.readFile(filename, (err, data) => { if(err) { reject(err); }else { resolve(data); } }) } readFilePromise('1.json').then(data => { return readFilePromise('2.json') });\",\"可以看到，回调函数不是直接声明的，而是通过后面的 then 方法传入的，即延迟传入，这就是回调函数延迟绑定。接下来针对上面的代码做一下调整，如下：\",\"let x = readFilePromise('1.json').then(data => { return readFilePromise('2.json') //这是返回的Promise }); x.then()\",\"根据 then 中回调函数的传入值创建不同类型的 Promise，然后把返回的 Promise 穿透到外层，以供后续的调用。这里的 x 指的就是内部返回的 Promise，然后在 x 后面可以依次完成链式调用。这便是返回值穿透的效果，这两种技术一起作用便可以将深层的嵌套回调写成下面的形式。\",\"readFilePromise('1.json').then(data => { return readFilePromise('2.json'); }).then(data => { return readFilePromise('3.json'); }).then(data => { return readFilePromise('4.json'); });\",\"这样就显得清爽许多，更重要的是，它更符合人的线性思维模式，开发体验更好，两种技术结合产生了链式调用的效果。\",\"这样解决了多层嵌套的问题，那另外一个问题，即每次任务执行结束后分别处理成功和失败的情况怎么解决的呢？Promise 采用了错误冒泡的方式。下面来看效果：\",\"readFilePromise('1.json').then(data => { return readFilePromise('2.json'); }).then(data => { return readFilePromise('3.json'); }).then(data => { return readFilePromise('4.json'); }).catch(err => { // xxx })\",\"这样前面产生的错误会一直向后传递，被 catch 接收到，就不用频繁地检查错误了。从上面的这些代码中可以看到，Promise 解决效果也比较明显：实现链式调用，解决多层嵌套问题；实现错误冒泡后一站式处理，解决每次任务中判断错误、增加代码混乱度的问题。\"]},\"570\":{\"h\":\"5. Promise的方法\",\"t\":[\"Promise常用的方法：then()、catch()、all()、race()、finally()、allSettled()、any()。\"]},\"571\":{\"h\":\"（1）then()\",\"t\":[\"当Promise执行的内容符合成功条件时，调用resolve函数，失败就调用reject函数。那Promise创建完了，该如何调用呢？这时就该then出场了：\",\"promise.then(function(value) { // success }, function(error) { // failure });\",\"then方法接受两个回调函数作为参数。第一个回调函数是Promise对象的状态变为resolved时调用，第二个回调函数是Promise对象的状态变为rejected时调用。其中第二个参数可以省略。\",\"then方法返回的是一个新的Promise实例。因此可以采用链式写法，即then方法后面再调用另一个then方法。当写有顺序的异步事件时，需要串行时，可以这样写：\",\"let promise = new Promise((resolve,reject)=>{ ajax('first').success(function(res){ resolve(res); }) }) promise.then(res=>{ return new Promise((resovle,reject)=>{ ajax('second').success(function(res){ resolve(res) }) }) }).then(res=>{ return new Promise((resovle,reject)=>{ ajax('second').success(function(res){ resolve(res) }) }) }).then(res=>{ })\"]},\"572\":{\"h\":\"（2）catch()\",\"t\":[\"Promise对象的catch方法相当于then方法的第二个参数，指向reject的回调函数。\",\"不过catch方法还有一个作用，就是在执行resolve回调函数时，如果出现错误，抛出异常，不会停止运行，而是进入catch方法中：\",\"p.then((data) => { console.log('resolved',data); },(err) => { console.log('rejected',err); });\"]},\"573\":{\"h\":\"（3）all()\",\"t\":[\"all方法可以完成并行任务， 它接收一个数组，数组的每一项都是一个promise对象。当数组中所有的promise的状态都达到resolved时，all方法的状态就会变成resolved，如果有一个状态变成了rejected，那么all方法的状态就会变成rejected：\",\"let promise1 = new Promise((resolve,reject)=>{ setTimeout(()=>{ resolve(1); },2000) }); let promise2 = new Promise((resolve,reject)=>{ setTimeout(()=>{ resolve(2); },1000) }); let promise3 = new Promise((resolve,reject)=>{ setTimeout(()=>{ resolve(3); },3000) }); Promise.all([promise1,promise2,promise3]).then(res=>{ console.log(res); //结果为：[1,2,3] })\",\"调用all方法时的结果成功的时候是回调函数的参数也是一个数组，这个数组按顺序保存着每一个promise对象resolve执行时的值。\"]},\"574\":{\"h\":\"（4）race()\",\"t\":[\"race方法和all一样，接受的参数是一个每项都是promise的数组，但与all不同的是，当最先执行完的事件执行完之后，就直接返回该promise对象的值。\",\"如果第一个promise对象状态变成resolved，那自身的状态变成了resolved；反之，第一个promise变成rejected，那自身状态就会变成rejected。\",\"let promise1 = new Promise((resolve,reject) => { setTimeout(() => { reject(1); },2000) }); let promise2 = new Promise((resolve,reject) => { setTimeout(() => { resolve(2); },1000) }); let promise3 = new Promise((resolve,reject) => { setTimeout(() => { resolve(3); },3000) }); Promise.race([promise1,promise2,promise3]).then(res => { console.log(res); //结果：2 },rej => { console.log(rej)}; )\",\"那么race方法有什么实际作用呢？当需要执行一个任务，超过多长时间就不做了，就可以用这个方法来解决：\",\"Promise.race([promise1, timeOutPromise(5000)]).then(res => console.log(res))\"]},\"575\":{\"h\":\"（5）finally()\",\"t\":[\"finally方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。该方法是 ES2018 引入标准的。\",\"promise.then(result => {···}) .catch(error => {···}) .finally(() => {···});\",\"上面代码中，不管promise最后的状态如何，在执行完then或catch指定的回调函数以后，都会执行finally方法指定的回调函数。\",\"下面来看例子，服务器使用 Promise 处理请求，然后使用finally方法关掉服务器。\",\"server.listen(port) .then(function () { // ... }) .finally(server.stop);\",\"finally方法的回调函数不接受任何参数，这意味着没有办法知道，前面的 Promise 状态到底是fulfilled还是rejected。这表明，finally方法里面的操作，应该是与状态无关的，不依赖于 Promise 的执行结果。\",\"finally本质上是then方法的特例：\",\"promise .finally(() => { // 语句 }); // 等同于 promise .then( result => { // 语句 return result; }, error => { // 语句 throw error; } );\",\"上面代码中，如果不使用finally方法，同样的语句需要为成功和失败两种情况各写一次。有了finally方法，则只需要写一次。\"]},\"576\":{\"h\":\"（6）allSettled()\",\"t\":[\"Promise.allSettled 的语法及参数跟 Promise.all 类似，其参数接受一个 Promise 的数组，返回一个新的 Promise。唯一的不同在于，执行完之后不会失败，也就是说当 Promise.allSettled 全部处理完成后，我们可以拿到每个 Promise 的状态，而不管其是否处理成功。\",\"下面使用 allSettled 实现的一段代码：\",\"const resolved = Promise.resolve(2); const rejected = Promise.reject(-1); const allSettledPromise = Promise.allSettled([resolved, rejected]); allSettledPromise.then(function (results) { console.log(results); }); // 返回结果： // [ // { status: 'fulfilled', value: 2 }, // { status: 'rejected', reason: -1 } // ]\",\"可以看到，Promise.allSettled 最后返回的是一个数组，记录传进来的参数中每个 Promise 的返回值，这就是和 all 方法不太一样的地方。你也可以根据 all 方法提供的业务场景的代码进行改造，其实也能知道多个请求发出去之后，Promise 最后返回的是每个参数的最终状态。\"]},\"577\":{\"h\":\"（7）any()\",\"t\":[\"any 方法返回一个 Promise，只要参数 Promise 实例有一个变成 fullfilled 状态，最后 any 返回的实例就会变成 fullfilled 状态；如果所有参数 Promise 实例都变成 rejected 状态，包装实例就会变成 rejected 状态。\",\"下面对上面 allSettled 这段代码进行改造，来看下改造完的代码和执行结果：\",\"const resolved = Promise.resolve(2); const rejected = Promise.reject(-1); const allSettledPromise = Promise.any([resolved, rejected]); allSettledPromise.then(function (results) { console.log(results); }); // 返回结果：2\",\"可以看出，只要其中一个 Promise 变成 fullfilled 状态，那么 any 最后就返回这个 Promise。由于上面 resolved 这个 Promise 已经是 resolve 的了，故最后返回结果为 2。\"]},\"578\":{\"h\":\"6. Promise的异常处理\",\"t\":[\"错误处理是所有编程范型都必须要考虑的问题，在使用 JavaScript 进行异步编程时，也不例外。如果我们不做特殊处理，会怎样呢？来看下面的代码，先定义一个必定会失败的方法\",\"let fail = () => { setTimeout(() => { throw new Error(\\\"fail\\\"); }, 1000); };\",\"调用：\",\"console.log(1); try { fail(); } catch (e) { console.log(\\\"captured\\\"); } console.log(2);\",\"可以看到打印出了 1 和 2，并在 1 秒后，获得一个“Uncaught Error”的错误打印，注意观察这个错误的堆栈：\",\"Uncaught Error: fail at <anonymous>:3:9\",\"可以看到，其中的 setTimeout (async) 这样的字样，表示着这是一个异步调用抛出的堆栈。但是，captured”这样的字样也并未打印，因为母方法 fail() 本身的原始顺序执行并没有失败，这个异常的抛出是在回调行为里发生的。 从上面的例子可以看出，对于异步编程来说，我们需要使用一种更好的机制来捕获并处理可能发生的异常。\",\"Promise 除了支持 resolve 回调以外，还支持 reject 回调，前者用于表示异步调用顺利结束，而后者则表示有异常发生，中断调用链并将异常抛出：\",\"const exe = (flag) => () => new Promise((resolve, reject) => { console.log(flag); setTimeout(() => { flag ? resolve(\\\"yes\\\") : reject(\\\"no\\\"); }, 1000); });\",\"上面的代码中，flag 参数用来控制流程是顺利执行还是发生错误。在错误发生的时候，no 字符串会被传递给 reject 函数，进一步传递给调用链：\",\"Promise.resolve() .then(exe(false)) .then(exe(true));\",\"上面的调用链，在执行的时候，第二行就传入了参数 false，它就已经失败了，异常抛出了，因此第三行的 exe 实际没有得到执行，执行结果如下：\",\"false Uncaught (in promise) no\",\"这就说明，通过这种方式，调用链被中断了，下一个正常逻辑 exe(true) 没有被执行。 但是，有时候需要捕获错误，而继续执行后面的逻辑，该怎样做？这种情况下就要在调用链中使用 catch 了：\",\"Promise.resolve() .then(exe(false)) .catch((info) => { console.log(info); }) .then(exe(true));\",\"这种方式下，异常信息被捕获并打印，而调用链的下一步，也就是第四行的 exe(true) 可以继续被执行。将看到这样的输出：\",\"false no true\"]},\"579\":{\"h\":\"7. Promise的实现\",\"t\":[\"这一部分就来简单实现一下Promise及其常用的方法。\"]},\"580\":{\"h\":\"（1）Promise\",\"t\":[\"const PENDING = \\\"pending\\\"; // 状态转变为 resolved 方法 function resolve(value) { // 判断传入元素是否为 Promise 值，如果是，则状态改变必须等待前一个状态改变后再进行改变 if (value instanceof MyPromise) { return value.then(resolve, reject); } // 保证代码的执行顺序为本轮事件循环的末尾 setTimeout(() => { // 只有状态为 pending 时才能转变， if (self.state === PENDING) { // 修改状态 self.state = RESOLVED; // 设置传入的值 self.value = value; // 执行回调函数 self.resolvedCallbacks.forEach(callback => { callback(value); }); } }, 0); } // 状态转变为 rejected 方法 function reject(value) { // 保证代码的执行顺序为本轮事件循环的末尾 setTimeout(() => { // 只有状态为 pending 时才能转变 if (self.state === PENDING) { // 修改状态 self.state = REJECTED; // 设置传入的值 self.value = value; // 执行回调函数 self.rejectedCallbacks.forEach(callback => { callback(value); }); } }, 0); } // 将两个方法传入函数执行 try { fn(resolve, reject); } catch (e) { // 遇到错误时，捕获错误，执行 reject 函数 reject(e); } } MyPromise.prototype.then = function(onResolved, onRejected) { // 首先判断两个参数是否为函数类型，因为这两个参数是可选参数 onResolved = typeof onResolved === \\\"function\\\" ? onResolved : function(value) { return value; }; onRejected = typeof onRejected === \\\"function\\\" ? onRejected : function(error) { throw error; }; // 如果是等待状态，则将函数加入对应列表中 if (this.state === PENDING) { this.resolvedCallbacks.push(onResolved); this.rejectedCallbacks.push(onRejected); } // 如果状态已经凝固，则直接执行对应状态的函数 if (this.state === RESOLVED) { onResolved(this.value); } if (this.state === REJECTED) { onRejected(this.value); } };\"]},\"581\":{\"h\":\"（2）Promise.then\",\"t\":[\"then 方法返回一个新的 promise 实例，为了在 promise 状态发生变化时（resolve / reject 被调用时）再执行 then 里的函数，我们使用一个 callbacks 数组先把传给then的函数暂存起来，等状态改变时再调用。\",\"那么，怎么保证后一个 then 里的方法在前一个 then（可能是异步）结束之后再执行呢？\",\"可以将传给 then 的函数和新 promise 的 resolve 一起 push 到前一个 promise 的 callbacks 数组中，达到承前启后的效果：\",\"承前：当前一个 promise 完成后，调用其 resolve 变更状态，在这个 resolve 里会依次调用 callbacks 里的回调，这样就执行了 then 里的方法了\",\"启后：上一步中，当 then 里的方法执行完成后，返回一个结果，如果这个结果是个简单的值，就直接调用新 promise 的 resolve，让其状态变更，这又会依次调用新 promise 的 callbacks 数组里的方法，循环往复。。如果返回的结果是个 promise，则需要等它完成之后再触发新 promise 的 resolve，所以可以在其结果的 then 里调用新 promise 的 resolve\",\"then(onFulfilled, onReject){ // 保存前一个promise的this const self = this; return new MyPromise((resolve, reject) => { // 封装前一个promise成功时执行的函数 let fulfilled = () => { try{ const result = onFulfilled(self.value); // 承前 return result instanceof MyPromise? result.then(resolve, reject) : resolve(result); //启后 }catch(err){ reject(err) } } // 封装前一个promise失败时执行的函数 let rejected = () => { try{ const result = onReject(self.reason); return result instanceof MyPromise? result.then(resolve, reject) : reject(result); }catch(err){ reject(err) } } switch(self.status){ case PENDING: self.onFulfilledCallbacks.push(fulfilled); self.onRejectedCallbacks.push(rejected); break; case FULFILLED: fulfilled(); break; case REJECT: rejected(); break; } }) }\",\"注意：\",\"连续多个 then 里的回调方法是同步注册的，但注册到了不同的 callbacks 数组中，因为每次 then 都返回新的 promise 实例（参考上面的例子和图）\",\"注册完成后开始执行构造函数中的异步事件，异步完成之后依次调用 callbacks 数组中提前注册的回调\"]},\"582\":{\"h\":\"（3）Promise.all\",\"t\":[\"该方法的参数是 Promise 的实例数组, 然后注册一个 then 方法。 待数组中的 Promise 实例的状态都转为 fulfilled 之后则执行 then 方法.，这里主要就是一个计数逻辑, 每当一个 Promise 的状态变为 fulfilled 之后就保存该实例返回的数据, 然后将计数减一, 当计数器变为 0 时, 代表数组中所有 Promise 实例都执行完毕.\",\"Promise.all = function (arr) { let args = Array.prototype.slice.call(arr) return new Promise(function (resolve, reject) { if (args.length === 0) return resolve([]) let remaining = args.length function res(i, val) { try { if (val && (typeof val === 'object' || typeof val === 'function')) { let then = val.then if (typeof then === 'function') { then.call(val, function (val) { // 这里如果传入参数是 promise的话需要将结果传入 args, 而不是 promise实例 res(i, val) }, reject) return } } args[i] = val if (--remaining === 0) { resolve(args) } } catch (ex) { reject(ex) } } for (let i = 0; i < args.length; i++) { res(i, args[i]) } }) }\"]},\"583\":{\"h\":\"（4）Promise.race\",\"t\":[\"该方法的参数是 Promise 实例数组, 然后其 then 注册的回调方法是数组中的某一个 Promise 的状态变为 fulfilled 的时候就执行. 因为 Promise 的状态只能改变一次, 那么我们只需要把 Promise.race 中产生的 Promise 对象的 resolve 方法, 注入到数组中的每一个 Promise 实例中的回调函数中即可：\",\"oPromise.race = function (args) { return new oPromise((resolve, reject) => { for (let i = 0, len = args.length; i < len; i++) { args[i].then(resolve, reject) } }) }\"]},\"584\":{\"h\":\"(5) 完整\",\"t\":[\"const PROMISE_STATUS_PENDING = 'pending' const PROMISE_STATUS_FULFILLED = 'fulfilled' const PROMISE_STATUS_REJECTED = 'rejected' // help fun function execFunctionWithCatchError(execFun, value, resolve, reject) { try { const result = execFun(value) resolve(result) } catch (error) { reject(error) } } class MyPromise { constructor(executor) { this.status = PROMISE_STATUS_PENDING // 记录promise状态 this.value = undefined // resolve返回值 this.reason = undefined // reject返回值 this.onFulfilledFns = [] // 存放成功回调 this.onRejectedFns = [] // 存放失败回调 const resolve = (value) => { if (this.status === PROMISE_STATUS_PENDING) { queueMicrotask(() => { if (this.status !== PROMISE_STATUS_PENDING) return this.status = PROMISE_STATUS_FULFILLED this.value = value this.onFulfilledFns.forEach((fn) => { fn(this.value) }) }) } } const reject = (reason) => { if (this.status === PROMISE_STATUS_PENDING) { queueMicrotask(() => { if (this.status !== PROMISE_STATUS_PENDING) return this.status = PROMISE_STATUS_REJECTED this.reason = reason this.onRejectedFns.forEach((fn) => { fn(this.reason) }) }) } } try { executor(resolve, reject) } catch (error) { reject(error) } } then(onFulfilled, onRejected) { onFulfilled = onFulfilled || ((value) => { return value }) onRejected = onRejected || ((err) => { throw err }) return new MyPromise((resolve, reject) => { // 1、 when operate then, status have confirmed if (this.status === PROMISE_STATUS_FULFILLED && onFulfilled) { execFunctionWithCatchError( onFulfilled, this.value, resolve, reject ) } if (this.status === PROMISE_STATUS_REJECTED && onRejected) { execFunctionWithCatchError( onRejected, this.reason, resolve, reject ) } if (this.status === PROMISE_STATUS_PENDING) { // this.onFulfilledFns.push(onFulfilled); if (onFulfilled) { this.onFulfilledFns.push(() => { execFunctionWithCatchError( onFulfilled, this.value, resolve, reject ) }) } // this.onRejectedFns.push(onRejected); if (onRejected) { this.onRejectedFns.push(() => { execFunctionWithCatchError( onRejected, this.reason, resolve, reject ) }) } } }) } catch(onRejected) { return this.then(undefined, onRejected) } finally(onFinally) { this.then( () => { onFinally() }, () => { onFinally() } ) } static resolve(value) { return new MyPromise((resolve) => resolve(value)) } static reject(reason) { return new MyPromise((resolve, reject) => reject(reason)) } static all(promises) { return new MyPromise((resolve, reject) => { const values = [] promises.forEach((promise) => { promise.then( (res) => { values.push(res) if (values.length === promises.length) { resolve(values) } }, (err) => { reject(err) } ) }) }) } static allSettled(promises) { return new MyPromise((resolve) => { const results = [] promises.forEach((promise) => { promise.then( (res) => { results.push({ status: PROMISE_STATUS_FULFILLED, value: res, }) if (results.length === promises.length) { resolve(results) } }, (err) => { results.push({ status: PROMISE_STATUS_REJECTED, value: err, }) if (results.length === promises.length) { resolve(results) } } ) }) }) } static race(promises) { return new MyPromise((resolve, reject) => { promises.forEach((promise) => { promise.then( (res) => { resolve(res) }, (err) => { reject(err) } ) }) }) } static any(promises) { return new MyPromise((resolve, reject) => { const reasons = [] promises.forEach((promise) => { promise.then( (res) => { resolve(res) }, (err) => { reasons.push(err) if (reasons.length === promise.length) { // reject(new AggreagateError(reasons)); reject(reasons) } } ) }) }) } } const p1 = new MyPromise((resolve, reject) => { setTimeout(() => { console.log('--- 1 ---') resolve(111) }) }).then((res) => { console.log('p1 res :>> ', res) }) const p2 = new MyPromise((resolve, reject) => { console.log('--- 2 ---') resolve(222) }) const p3 = new MyPromise((resolve, reject) => { console.log('--- 3 ---') resolve(333) }) const p4 = new MyPromise((resolve, reject) => { console.log('--- 4 ---') reject(444) }) MyPromise.all([p2, p3]).then((res) => { console.log('p2&p3 res :>> ', res) }) MyPromise.all([p2, p4]) .then((res) => { console.log('p2&p4 res :>> ', res) }) .catch((err) => { console.log('err :>> ', err) }) // --- 2 --- // --- 3 --- // --- 4 --- // p2&p3 res :>> [ 222, 333 ] // err :>> 444 // --- 1 --- // p1 res :>> 111\"]},\"585\":{\"h\":\"四、Generator\"},\"586\":{\"h\":\"1. Generator 概述\"},\"587\":{\"h\":\"（1）Generator\",\"t\":[\"Generator（生成器）是 ES6 中的关键词，通俗来讲 Generator 是一个带星号的函数（它并不是真正的函数），可以配合 yield 关键字来暂停或者执行函数。先来看一个例子：\",\"function* gen() { console.log(\\\"enter\\\"); let a = yield 1; let b = yield (function () {return 2})(); return 3; } var g = gen() // 阻塞，不会执行任何语句 console.log(typeof g) // 返回 object 这里不是 \\\"function\\\" console.log(g.next()) console.log(g.next()) console.log(g.next()) console.log(g.next())\",\"输出结果如下：\",\"object enter { value: 1, done: false } { value: 2, done: false } { value: 3, done: true } { value: undefined, done: true }\",\"Generator 中配合使用 yield 关键词可以控制函数执行的顺序，每当执行一次 next 方法，Generator 函数会执行到下一个存在 yield 关键词的位置。\",\"总结，Generator 的执行的关键点如下：\",\"调用 gen() 后，程序会阻塞，不会执行任何语句；\",\"调用 g.next() 后，程序继续执行，直到遇到 yield 关键词时执行暂停；\",\"一直执行 next 方法，最后返回一个对象，其存在两个属性：value 和 done。\"]},\"588\":{\"h\":\"（2）yield\",\"t\":[\"yield 同样也是 ES6 的关键词，配合 Generator 执行以及暂停。yield 关键词最后返回一个迭代器对象，该对象有 value 和 done 两个属性，其中 done 属性代表返回值以及是否完成。yield 配合着 Generator，再同时使用 next 方法，可以主动控制 Generator 执行进度。\",\"下面来看看多个 Generator 配合 yield 使用的情况：\",\"function* gen1() { yield 1; yield* gen2(); yield 4; } function* gen2() { yield 2; yield 3; } var g = gen1(); console.log(g.next()) console.log(g.next()) console.log(g.next()) console.log(g.next())\",\"执行结果如下：\",\"{ value: 1, done: false } { value: 2, done: false } { value: 3, done: false } { value: 4, done: false } {value: undefined, done: true}\",\"可以看到，使用 yield 关键词的话还可以配合着 Generator 函数嵌套使用，从而控制函数执行进度。这样对于 Generator 的使用，以及最终函数的执行进度都可以很好地控制，从而形成符合你设想的执行顺序。即便 Generator 函数相互嵌套，也能通过调用 next 方法来按照进度一步步执行。\"]},\"589\":{\"h\":\"（3）生成器原理\",\"t\":[\"其实，在生成器内部，如果遇到 yield 关键字，那么 V8 引擎将返回关键字后面的内容给外部，并暂停该生成器函数的执行。生成器暂停执行后，外部的代码便开始执行，外部代码如果想要恢复生成器的执行，可以使用 result.next 方法。\",\"那 V8 是怎么实现生成器函数的暂停执行和恢复执行的呢？\",\"它用到的就是协程，协程是—种比线程更加轻量级的存在。我们可以把协程看成是跑在线程上的任务，一个线程上可以存在多个协程，但是在线程上同时只能执行一个协程。比如，当前执行的是 A 协程，要启动 B 协程，那么 A 协程就需要将主线程的控制权交给 B 协程，这就体现在 A 协程暂停执行，B 协程恢复执行; 同样，也可以从 B 协程中启动 A 协程。通常，如果从 A 协程启动 B 协程，我们就把 A 协程称为 B 协程的父协程。\",\"正如一个进程可以拥有多个线程一样，一个线程也可以拥有多个协程。每一时刻，该线程只能执行其中某一个协程。最重要的是，协程不是被操作系统内核所管理，而完全是由程序所控制（也就是在用户态执行）。这样带来的好处就是性能得到了很大的提升，不会像线程切换那样消耗资源。\"]},\"590\":{\"h\":\"2. Generator 和 thunk 结合\",\"t\":[\"下面先来了解一下什么是 thunk 函数，以判断数据类型为例：\",\"let isString = (obj) => { return Object.prototype.toString.call(obj) === '[object String]'; }; let isFunction = (obj) => { return Object.prototype.toString.call(obj) === '[object Function]'; }; let isArray = (obj) => { return Object.prototype.toString.call(obj) === '[object Array]'; }; ....\",\"可以看到，这里出现了很多重复的判断逻辑，平常在开发中类似的重复逻辑的场景也同样会有很多。下面来进行封装：\",\"let isType = (type) => { return (obj) => { return Object.prototype.toString.call(obj) === `[object ${type}]`; } }\",\"封装之后就可以这样使用，从而来减少重复的逻辑代码：\",\"let isString = isType('String'); let isArray = isType('Array'); isString(\\\"123\\\"); // true isArray([1,2,3]); // true\",\"相应的 isString 和 isArray 是由 isType 方法生产出来的函数，通过上面的方式来改造代码，明显简洁了不少。像 isType 这样的函数称为 thunk 函数，它的基本思路都是接收一定的参数，会生产出定制化的函数，最后使用定制化的函数去完成想要实现的功能。\",\"这样的函数在 JS 的编程过程中会遇到很多，抽象度比较高的 JS 代码往往都会采用这样的方式。那 Generator 和 thunk 函数的结合是否能带来一定的便捷性呢？\",\"下面以文件操作的代码为例，看一下 Generator 和 thunk 的结合能够对异步操作产生的效果：\",\"const readFileThunk = (filename) => { return (callback) => { fs.readFile(filename, callback); } } const gen = function* () { const data1 = yield readFileThunk('1.txt') console.log(data1.toString()) const data2 = yield readFileThunk('2.txt') console.log(data2.toString) } let g = gen(); g.next().value((err, data1) => { g.next(data1).value((err, data2) => { g.next(data2); }) })\",\"readFileThunk 就是一个 thunk 函数，上面的这种编程方式就让 Generator 和异步操作关联起来了。上面第三段代码执行起来嵌套的情况还算简单，如果任务多起来，就会产生很多层的嵌套，可读性不强，因此有必要把执行的代码进行封装优化：\",\"function run(gen){ const next = (err, data) => { let res = gen.next(data); if(res.done) return; res.value(next); } next(); } run(g);\",\"可以看到， run 函数和上面的执行效果其实是一样的。代码虽然只有几行，但其包含了递归的过程，解决了多层嵌套的问题，并且完成了异步操作的一次性的执行效果。这就是通过 thunk 函数完成异步操作的情况。\"]},\"591\":{\"h\":\"3. Generator 和 Promise 结合\",\"t\":[\"其实 Promise 也可以和 Generator 配合来实现上面的效果。还是利用上面的输出文件的例子，对代码进行改造，如下所示：\",\"const readFilePromise = (filename) => { return new Promise((resolve, reject) => { fs.readFile(filename, (err, data) => { if(err) { reject(err); }else { resolve(data); } }) }).then(res => res); } // 这块和上面 thunk 的方式一样 const gen = function* () { const data1 = yield readFilePromise('1.txt') console.log(data1.toString()) const data2 = yield readFilePromise('2.txt') console.log(data2.toString) } // 这里和上面 thunk 的方式一样 function run(gen){ const next = (err, data) => { let res = gen.next(data); if(res.done) return; res.value(next); } next(); } run(g);\",\"可以看到，thunk 函数的方式和通过 Promise 方式执行效果本质上是一样的，只不过通过 Promise 的方式也可以配合 Generator 函数实现同样的异步操作。\"]},\"592\":{\"h\":\"4. co 函数库\",\"t\":[\"co 函数库用于处理 Generator 函数的自动执行。核心原理其实就是通过和 thunk 函数以及 Promise 对象进行配合，包装成一个库。它使用起来非常简单，比如还是用上面那段代码，第三段代码就可以省略了，直接引用 co 函数，包装起来就可以使用了，代码如下：\",\"const co = require('co'); let g = gen(); co(g).then(res =>{ console.log(res); })\",\"这段代码比较简单，几行就完成了之前写的递归的那些操作。那么为什么 co 函数库可以自动执行 Generator 函数，它的处理原理如下：\",\"因为 Generator 函数就是一个异步操作的容器，它需要一种自动执行机制，co 函数接受 Generator 函数作为参数，并最后返回一个 Promise 对象。\",\"在返回的 Promise 对象里面，co 先检查参数 gen 是否为 Generator 函数。如果是，就执行该函数；如果不是就返回，并将 Promise 对象的状态改为 resolved。\",\"co 将 Generator 函数的内部指针对象的 next 方法，包装成 onFulfilled 函数。这主要是为了能够捕捉抛出的错误。\",\"关键的是 next 函数，它会反复调用自身。\"]},\"593\":{\"h\":\"五、Async/Await\"},\"594\":{\"h\":\"1. async/await 的概念\",\"t\":[\"ES7 新增了两个关键字： async和await，代表异步JavaScript编程范式的迁移。它改进了生成器的缺点，提供了在不阻塞主线程的情况下使用同步代码实现异步访问资源的能力。其实 async/await 是 Generator 的语法糖，它能实现的效果都能用then链来实现，它是为优化then链而开发出来的。\",\"从字面上来看，async是“异步”的简写，await则为等待，所以 async 用来声明异步函数，这个关键字可以用在函数声明、函数表达式、箭头函数和方法上。因为异步函数主要针对不会马上完成的任务，所以自然需要一种暂停和恢复执行的能力，使用await关键字可以暂停异步代码的执行，等待Promise解决。async 关键字可以让函数具有异步特征，但总体上代码仍然是同步求值的。\",\"它们的用法很简单，首先用 async 关键字声明一个异步函数：\",\"async function httpRequest() { }\",\"然后就可以在这个函数内部使用 await 关键字了：\",\"async function httpRequest() { let res1 = await httpPromise(url1) console.log(res1) }\",\"这里，await关键字会接收一个期约并将其转化为一个返回值或一个抛出的异常。通过情况下，我们不会使用await来接收一个保存期约的变量，更多的是把他放在一个会返回期约的函数调用面前，比如上述例子。这里的关键就是，await关键字并不会导致程序阻塞，代码仍然是异步的，而await只是掩盖了这个事实，这就意味着任何使用await的代码本身都是异步的。\",\"下面来看看async函数返回了什么：\",\"async function testAsy(){ return 'hello world'; } let result = testAsy(); console.log(result)\",\"可以看到，async 函数返回的是 Promise 对象。如果异步函数使用return关键字返回了值（如果没有return则会返回undefined），这个值则会被 Promise.resolve() 包装成 Promise 对象。异步函数始终返回Promise对象。\"]},\"595\":{\"h\":\"2. await 到底在等啥？\",\"t\":[\"那await到底在等待什么呢？\",\"一般我们认为 await 是在等待一个 async 函数完成。不过按语法说明，await 等待的是一个表达式，这个表达式的结果是 Promise 对象或其它值。\",\"因为 async 函数返回一个 Promise 对象，所以 await 可以用于等待一个 async 函数的返回值——这也可以说是 await 在等 async 函数。但要清楚，它等的实际是一个返回值。注意，await 不仅用于等 Promise 对象，它可以等任意表达式的结果。所以，await 后面实际是可以接普通函数调用或者直接量的。所以下面这个示例完全可以正确运行：\",\"function getSomething() { return \\\"something\\\"; } async function testAsync() { return Promise.resolve(\\\"hello async\\\"); } async function test() { const v1 = await getSomething(); const v2 = await testAsync(); console.log(v1, v2); } test(); // something hello async\",\"await 表达式的运算结果取决于它等的是什么：\",\"如果它等到的不是一个 Promise 对象，那 await 表达式的运算结果就是它等到的内容；\",\"如果它等到的是一个 Promise 对象，await 就就会阻塞后面的代码，等着 Promise 对象 resolve，然后将得到的值作为 await 表达式的运算结果。\",\"下面来看一个例子：\",\"function testAsy(x){ return new Promise(resolve=>{setTimeout(() => { resolve(x); }, 3000) } ) } async function testAwt(){ let result = await testAsy('hello world'); console.log(result); // 3秒钟之后出现hello world console.log('cuger') // 3秒钟之后出现cug } testAwt(); console.log('cug') //立即输出cug\",\"这就是 await 必须用在 async 函数中的原因。async 函数调用不会造成阻塞，它内部所有的阻塞都被封装在一个 Promise 对象中异步执行。await暂停当前async的执行，所以'cug''最先输出，hello world'和 cuger 是3秒钟后同时出现的。\"]},\"596\":{\"h\":\"3. async/await的优势\",\"t\":[\"单一的 Promise 链并不能凸显 async/await 的优势。但是，如果处理流程比较复杂，那么整段代码将充斥着 then，语义化不明显，代码不能很好地表示执行流程，这时async/await的优势就能体现出来了。\",\"假设一个业务，分多个步骤完成，每个步骤都是异步的，而且依赖于上一个步骤的结果。首先用 setTimeout 来模拟异步操作：\",\"/** * 传入参数 n，表示这个函数执行的时间（毫秒） * 执行的结果是 n + 200，这个值将用于下一步骤 */ function takeLongTime(n) { return new Promise(resolve => { setTimeout(() => resolve(n + 200), n); }); } function step1(n) { console.log(`step1 with ${n}`); return takeLongTime(n); } function step2(n) { console.log(`step2 with ${n}`); return takeLongTime(n); } function step3(n) { console.log(`step3 with ${n}`); return takeLongTime(n); }\",\"现在用 Promise 方式来实现这三个步骤的处理：\",\"function doIt() { console.time(\\\"doIt\\\"); const time1 = 300; step1(time1) .then(time2 => step2(time2)) .then(time3 => step3(time3)) .then(result => { console.log(`result is ${result}`); console.timeEnd(\\\"doIt\\\"); }); } doIt(); // c:\\\\var\\\\test>node --harmony_async_await . // step1 with 300 // step2 with 500 // step3 with 700 // result is 900 // doIt: 1507.251ms\",\"输出结果 result 是 step3() 的参数 700 + 200 = 900。doIt() 顺序执行了三个步骤，一共用了 300 + 500 + 700 = 1500 毫秒，和 console.time()/console.timeEnd() 计算的结果一致。\",\"如果用 async/await 来实现呢，会是这样：\",\"async function doIt() { console.time(\\\"doIt\\\"); const time1 = 300; const time2 = await step1(time1); const time3 = await step2(time2); const result = await step3(time3); console.log(`result is ${result}`); console.timeEnd(\\\"doIt\\\"); } doIt();\",\"结果和之前的 Promise 实现是一样的，但是这个代码看起来会清晰得多，几乎和同步代码一样。\",\"async/await对比Promise的优势就显而易见了：\",\"代码读起来更加同步，Promise虽然摆脱了回调地狱，但是then的链式调⽤也会带来额外的理解负担；\",\"Promise传递中间值很麻烦，⽽async/await⼏乎是同步的写法，⾮常优雅；\",\"错误处理友好，async/await可以⽤成熟的try/catch，Promise的错误捕获比较冗余；\",\"调试友好，Promise的调试很差，由于没有代码块，不能在⼀个返回表达式的箭头函数中设置断点，如果在⼀个.then代码块中使⽤调试器的步进(step-over)功能，调试器并不会进⼊后续的.then代码块，因为调试器只能跟踪同步代码的每⼀步。\"]},\"597\":{\"h\":\"4. async/await 的异常处理\",\"t\":[\"利用 async/await 的语法糖，可以像处理同步代码的异常一样，来处理异步代码，这里还用上面的示例：\",\"const exe = (flag) => () => new Promise((resolve, reject) => { console.log(flag); setTimeout(() => { flag ? resolve(\\\"yes\\\") : reject(\\\"no\\\"); }, 1000); });\",\"const run = async () => { try { await exe(false)(); await exe(true)(); } catch (e) { console.log(e); } } run();\",\"这里定义一个异步方法 run，由于 await 后面需要直接跟 Promise 对象，因此通过额外的一个方法调用符号 () 把原有的 exe 方法内部的 Thunk 包装拆掉，即执行 exe(false)() 或 exe(true)() 返回的就是 Promise 对象。在 try 块之后，使用 catch 来捕捉。运行代码会得到这样的输出：\",\"false no\",\"这个 false 就是 exe 方法对入参的输出，而这个 no 就是 setTimeout 方法 reject 的回调返回，它通过异常捕获并最终在 catch 块中输出。就像我们所认识的同步代码一样，第四行的 exe(true) 并未得到执行。\"]},\"598\":{\"c\":[\"Javascript\"]},\"599\":{\"c\":[\"异步编程\"]},\"600\":{\"h\":\"操作符\"},\"601\":{\"h\":\"一、一元操作符\",\"t\":[\"操作符可以根据他们期待的操作符个数来分类，多数的 JavaScript 操作符都是二元操作符，二元操作符可以将两个表达式合成一个更复杂的表达式。JavaScript 也支持一元操作符，这些操作符可以将一个表达式转化为另一个更复杂的表达式。同时，JavaScript 中也有一个三元操作符，就是条件操作符（?:），它用于将三个表达式组成一个表达式。下面就先来看看一元操作符。\",\"一元操作符具有以下特点：\",\"最简单的操作符，用来操作一个表达式；\",\"具有高优先级和右结合性；\",\"在必要时将操作数自动转化为数值。\"]},\"602\":{\"h\":\"1. 递增和递减操作符（++ --）\",\"t\":[\"递增和递减操作符在大学的计算机语言课（我学的第一门是 C++🤣）大家应该就已经学过了。JavaScript 的递增和递减操作符和其他语言基本一致。递增操作符顾名思义就是递增其操作数，递减操作符就是递减其操作数。它们都有两个版本：\",\"前缀版（++i）：操作符位于变量的前面，表示先递增(递减)，后执行语句；\",\"后缀版（i++）：操作符位于变量的后面，表示先执行语句，后递增(递减)；\",\"简单看两个例子：\",\"// 前置递增操作符： let num1 = 1, num2 = 2 console.log(++num1 + num2) // 4 // 后置递增操作符： let num1 = 1, num2 = 2 console.log(num1++ + num2) // 3\",\"可以看到，两种类型的结果是不一样的，原因就在于后置递增递减操作是在包含它们的语句被求值之后才执行的。\",\"这四个操作符可以作用于任何类型的数据。对于这些类型，JavaScript 会将他们转化为数值，再在这个数值上进行加一或减一操作。如果不能转化为一个数字，那么递增或递减的结果就是 NaN：\",\"let str = 'hello' console.log(str++) // NaN\",\"递增和递减操作符主要用于 for 循环中控制计算器递增或递减。\"]},\"603\":{\"h\":\"2. 加和减操作符\",\"t\":[\"加和减操作符既是一元操作符，也是二元操作符。这里我们先来看一元加和减操作符。\"]},\"604\":{\"h\":\"（1）一元加运算符（+）\",\"t\":[\"一元加操作符会将其操作数转化为数值，并返回转化后的值。需要注意：\",\"如果操作数是数值，那它什么都不做；\",\"如果操作数不能转化为数值，那么会返回 NaN；\",\"由于 BigInt 值不能转化为数值，因此这个操作符不能用于 BigInt。\",\"let a = -1 let b = 'hello' let c = BigInt console.log(+a) // -1 console.log(+b) // NaN console.log(+c) // NaN\"]},\"605\":{\"h\":\"（2）一元减运算符（-）\",\"t\":[\"一元减操作符和一元加操作符类似，会先将操作数转化为数值，然后会改变结果的符号：\",\"let a = -1 let b = 2 console.log(-a) // 1 console.log(-b) // 2\",\"一元加和减操作符主要用于基本的算术运算，也可以用于数据类型的转换，将不同类型的数据转化为数字类型，像 Number()方法一样。\"]},\"606\":{\"h\":\"二、位操作符\",\"t\":[\"现代计算机中数据都是以二进制的形式存储的，即 0、1 两种状态，计算机对二进制数据进行的运算加减乘除等都是叫位运算，即将符号位共同参与运算的运算。\",\"JavaScript 中所有的数字都是以 IEEE 754 64 位格式存储，但是位操作并不直接应用到 64 位，而是先将值转化为 32 位整数，再进行位操作。之后再把运算结果转化为 64 位，所以我们只需要考虑 32 位整数即可。位操作是在数值的底层完成的，所以运算速度会相对于其他运算符快很多。\",\"常见的位运算有以下几种：\",\"运算符\",\"描述\",\"运算规则\",\"&\",\"与\",\"两个位都为 1 时，结果才为 1\",\"或\",\"^\",\"异或\",\"两个位相同为 0，相异为 1\",\"~\",\"取反\",\"0 变 1，1 变 0\",\"<<\",\"左移\",\"各二进制位全部左移若干位，高位丢弃，低位补 0\",\">>\",\"右移\",\"各二进制位全部右移若干位，正数左补 0，负数左补 1，右边丢弃\",\"在说这些操作符之前，先来看几个相关的概念。计算机中的有符号数有三种表示方法，即原码、反码和补码。三种表示方法均有符号位和数值位两部分，符号位都是用 0 表示“正”，用 1 表示“负”，而数值位，三种表示方法各不相同。\",\"（1）原码 原码就是一个数的二进制数。例如：10 的原码为 0000 1010\",\"（2）反码 \",\"正数的反码与原码相同，如：10 反码为 0000 1010\",\"负数的反码为除符号位，按位取反，即 0 变 1，1 变 0。\",\"例如，-10 的反码如下：\",\"原码：1000 1010 反码：1111 0101\",\"（3）补码 \",\"正数的补码与原码相同，如：10 补码为 0000 1010\",\"负数的补码是原码除符号位外的所有位取反即 0 变 1，1 变 0，然后加 1，也就是反码加 1。\",\"例如，-10 的补码如下：\",\"原码：1000 1010 反码：1111 0101 补码：1111 0110\"]},\"607\":{\"h\":\"1. 按位与操作符（&）\",\"t\":[\"按位与操作符（&）会对参加运算的两个数据按二进制位进行与运算，即两位同时为 1 时，结果才为 1，否则结果为 0。运算规则如下：\",\"0 & 0 = 0 0 & 1 = 0 1 & 0 = 0 1 & 1 = 1\",\"例如，3 & 5 的运算结果如下：\",\" 0000 0011 0000 0101 = 0000 0001\",\"因此 3 & 5 的值为 1。需要注意：负数按补码形式参加按位与运算。\",\"用途：\",\"（1）判断奇偶 只要根据最未位是0还是1来决定，为0就是偶数，为1就是奇数。因此可以用if ((i & 1) === 0)代替if (i % 2 === 0)来判断a是不是偶数。\",\"（2）清零 如果想将一个单元清零，即使其全部二进制位为0，只要与一个各位都为零的数值相与，结果为零。\"]},\"608\":{\"h\":\"2. 按位或操作符（|）\",\"t\":[\"按位或操作符（|）会对参加运算的两个对象按二进制位进行或运算，即参加运算的两个对象只要有一个为1，其值为1。运算规则如下：\",\"0 | 0 = 0 0 | 1 = 1 1 | 0 = 1 1 | 1 = 1\",\"例如，3 | 5 的运算结果如下：\",\" 0000 0011 0000 0101 = 0000 0111\",\"因此，3 | 5的值为7。需要注意：负数按补码形式参加按位或运算。\"]},\"609\":{\"h\":\"3. 按位非操作符 (~)\",\"t\":[\"按位非操作符 (~)会对参加运算的一个数据按二进制进行取反运算。即将0变成1，1变成0。运算规则如下：\",\"~ 1 = 0 ~ 0 = 1\",\"例如：~6 的运算结果如下：\",\" 0000 0110 = 1111 1001\",\"在计算机中，正数用原码表示，负数使用补码存储，首先看最高位，最高位1表示负数，0表示正数。此计算机二进制码为负数，最高位为符号位。\",\"当按位取反为负数时，就直接取其补码，变为十进制：\",\" 0000 0110 = 1111 1001 反码：1000 0110 补码：1000 0111\",\"因此，~6的值为-7。按位非的操作结果实际上是对数值进行取反并减1，\"]},\"610\":{\"h\":\"4. 按位异或运算符（^）\",\"t\":[\"按位异或运算符（^）会对参加运算的两个数据按二进制位进行“异或”运算，即如果两个相应位相同则为0，相异则为1。运算规则如下：\",\"0 ^ 0 = 0 0 ^ 1 = 1 1 ^ 0 = 1 1 ^ 1 = 0\",\"例如， 3 ^ 5的运算结果如下：\",\" 0000 0011 0000 0101 = 0000 0110\",\"因此，3^5的值为6。\",\"异或运算具有以下性质:\",\"交换律：(ab)c == a(bc)\",\"结合律：(a + b)^c == a^b + b^c\",\"对于任何数x，都有 xx=0，x0=x\",\"自反性: abb=a^0=a;\"]},\"611\":{\"h\":\"5. 左移操作符（<<）\",\"t\":[\"左移操作符（<<）会将运算对象的各二进制位全部左移若干位，左边的二进制位丢弃，右边补0。若左移时舍弃的高位不包含1，则每左移一位，相当于该数乘以2。\",\"例如：\",\"a = 1010 1110 a = a << 2\",\"这里将a的二进制位左移2位、右补0，即得 a = 1011 1000。\",\"需要注意，左移会保留他所操作数值的符号。比如，将-2左移5位，会得到-64，而不是64。\"]},\"612\":{\"h\":\"6. 右移运算符\"},\"613\":{\"h\":\"（1）有符号右移操作符（>>）\",\"t\":[\"有符号右移操作符（>>）会将数值的32位全部右移若干位（同时会保留正负号）。正数左补0，负数左补1，右边丢弃。操作数每右移一位，相当于该数除以2。\",\"例如：a = a >>2 就是将a的二进制位右移2位，左补0 或者 左补1得看被移数是正还是负。\"]},\"614\":{\"h\":\"（2）无符号右移操作符（>>>）\",\"t\":[\"无符号右移操作符（>>>）会将数值的32位全部右移。对于正数，有符号右移操作符和无符号右移操作符的结果是一样的。对于负数的操作，两者就会有较大的差异。\",\"无符号右移操作符将负数的二进制表示当成正数的二进制表示来处理。所以，对负数进行无符号右移操作之后就会变的特别大。\"]},\"615\":{\"h\":\"三、加减乘除操作符\"},\"616\":{\"h\":\"1. 加法操作符（+）\",\"t\":[\"这里说的加法操作符就是二元的加操作符了。二元加操作符用于计算数值操作或者拼接字符串操作。\",\"1 + 1 // 2 \\\"1\\\" + \\\"2\\\" // \\\"12\\\" \\\"hello\\\" + \\\"world\\\" // \\\"helloworld\\\"\",\"在进行加操作时，如果两个操作数都是数值或者都是字符串，那么执行结果就分别是计算出来的数值和拼接好的字符串。除此之外，执行结果都取决于类型转化的结果：它会优先进行字符串拼接，只有操作数是字符串或者是可以转化为字符串的对象，另一个操作数也会被转化为字符串，并执行拼接操作。只有任何操作数都不是字符串时才会执行加法操作。\",\"1 + 2 // 3 \\\"1\\\" + \\\"2\\\" // \\\"12\\\" \\\"1\\\" + 2 // \\\"12\\\" 1 + {} // \\\"1[object Object]\\\" true + false // 1 布尔值会先转为数字，再进行运算 1 + null // 1 null会转化为0，再进行计算 1 + undefined // NaN undefined转化为数字是NaN\",\"需要注意加操作的顺序：\",\"let a = 1; let b = 2; let c = \\\"hello\\\" + a + b; // \\\"hello12\\\"\",\"这里，由于每次加法操作都是独立完成的，第一次是字符串hello和数字a做加法操作，得到的结果是\\\"hello1\\\"，第二次加法操作仍然是一个字符串加一个数字，所以最终结果是一个字符串。如果想让a和b两个数字相加，就需要加上括号。\",\"除此之外，还需要注意以下特殊情况：\",\"如果有一个操作数是NaN，则结果是NaN；\",\"如果是Infinity加Infinity，则结果是Infinity；\",\"如果是-Infinity加-Infinity，则结果是-Infinity；\",\"如果是Infinity加-Infinity，则结果是NaN；\",\"如果是+0加+0，则结果是+0；\",\"如果是-0加-0，则结果是-0；\",\"如果是+0加-0，则结果是+0。\"]},\"617\":{\"h\":\"2. 减法操作符（-）\",\"t\":[\"减法操作和加法操作符类似， 但是减法操作符只能用于数值的计算，不能用于字符串的拼接。当进行减法操作时，如果两个操作数都是数值，就会直接进行减法操作，如果有一个操作数是非数值，就会将其转化为数值，再进行减法操作。如果转化结果为NaN，则运算结果也是NaN。\",\"3 - 1 // 2 3 - true // 2 3 - \\\"\\\" // 3 3 - null // 3 NaN - 1 // NaN\",\"需要注意以下特殊情况：\",\"如果是Infinity减Infinity，则结果是NaN；\",\"如果是-Infinity减-Infinity，则结果是NaN；\",\"如果是Infinity减-Infinity，则结果是Infinity；\",\"如果是-Infinity减Infinity，则结果是-Infinity；\",\"如果是+0减+0，则结果是+0；\",\"如果是-0减+0，则结果是-0；\",\"如果是-0减-0，则结果是+0。\"]},\"618\":{\"h\":\"3. 乘法操作符（*）\",\"t\":[\"乘法操作符用于计算两个数的乘积。如果两个操作数都是数值，则会执行常规的乘法运算。如果不是数值，会将其转化为数值，在进行乘法操作。\",\"需要注意以下特殊情况：\",\"如果有一个操作数是NaN，则结果是NaN；\",\"如果Infinity与0相乘，则结果是NaN；\",\"如果Infinity与非0数值相乘，则结果是Infinity或-Infinity，取决于有符号操作数的符号；\",\"如果Infinity与Infinity相乘，则结果是Infinity。\"]},\"619\":{\"h\":\"4. 除法操作符（/）\",\"t\":[\"除法操作符用于计算一个操作数除以第二个操作数的商。如果两个操作数都是数值，则会执行常规的除法运算。如果不是数值，会将其转化为数值，在进行除法操作。\",\"需要注意以下特殊情况：\",\"如果有一个操作数是NaN，则结果是NaN；\",\"如果0除以0，则结果是NaN；\",\"如果Infinity除以Infinity，则结果是Infinity。\",\"如果是非零的有限数被零除，则结果是Infinity或-Infinity，取决于有符号操作数的符号；\",\"如果是Infinity被任何非零数值除，则结果是Infinity或-Infinity，取决于有符号操作数的符号。\"]},\"620\":{\"h\":\"5. 取余操作符（%）\",\"t\":[\"取余操作符用于计算一个数除以第二个数的余数。计算规则和上述运算符类似。\",\"需要注意以下特殊情况：\",\"如果被除数是无穷大值而除数是有限大的数值，则结果是NaN；\",\"如果被除数是有限大的数值而除数是零，则结果是NaN；\",\"如果是Infinity被Infinity除，则结果是NaN；\",\"如果被除数是有限大的数值而除数是无穷大的数值，则结果是被除数；\",\"如果被除数是零，则结果是零。\"]},\"621\":{\"h\":\"6. 指数操作符（**）\",\"t\":[\"在ECMAScript 7中新增了指数操作符（**），它的计算效果是Math.pow()是一样的：\",\"Math.pow(2, 10); // 1024 2 ** 10; // 1024\",\"指数运算符和上面的加减乘除运算符都有对应的赋值操作运算符：\",\"let a = 2; a **= 10; console.log(a); // 1024\",\"let a = 1; let b = 2; let c = 3; let d = 4; a += 1; // 2 b -= 2; // 0 c *= 3; // 9 d /= 4; // 1\"]},\"622\":{\"h\":\"四、布尔操作符\",\"t\":[\"在开发时，布尔操作符是很有用的，可以精简很多代码，干掉很多多余的id-else语句，下面来看看常见的三种布尔操作符。\"]},\"623\":{\"h\":\"1. 逻辑非操作符（!）\",\"t\":[\"逻辑非操作符可以用于JavaScript中的任何值，这个操作符使用返回布尔值。逻辑非操作符首先会将操作数转化为布尔值，然后在对其取反。\",\"逻辑非操作规则如下：\",\"如果操作数是对象，则返回 false；\",\"如果操作数是空字符串，则返回 true；\",\"如果操作数是非空字符串，则返回 false；\",\"如果操作数是数值0，则返回 true；\",\"如果操作数是非0数值（包括 Infinity)，则返回 false；\",\"如果操作数是 null，则返回 true；\",\"如果操作数是 NaN，则返回 true；\",\"如果操作数是 undefined， 则返回 true.\",\"逻辑非操作符也可以用于将任何值转化为布尔值，同时使用两个!，相当于调用了Boolean()方法：\",\"!!\\\"blue\\\" // true !!0; // false !!NaN // false !!\\\"\\\" // false !!12345 // true\"]},\"624\":{\"h\":\"2. 逻辑与操作符（&&）\",\"t\":[\"逻辑与操作符的两个操作数都为真时，最终结果才会返回真。该运算符可以用于任何类型的数据。如果有操作数不是布尔值，则结果并一定会返回布尔值，会遵循以下规则：\",\"如果第一个操作数是对象，则返回第二个操作数；\",\"如果第二个操作数是对象，则只有在第一个操作数的求值结果为true的情况下才会返回该对象；\",\"如果两个操作数都是对象，则返回第二个操作数；\",\"如果第一个操作数是null，则返回null；\",\"如果第一个操作数是NaN，则返回NaN；\",\"如果第一个操作数是undefined，则返回undefined；\",\"根据第二条规则，我们可以对我们项目代码中的代码进行优化：\",\"if(data) { setData(data); } // 改写后： data && setData(data);\",\"这里当data为真时，也就是存在时，才会执行setData方法，代码就精简了很多。\",\"逻辑与操作符是一种短路操作符，只要第一个操作数为false，就不会继续执行运算符后面的表达式，直接返回false。上面的data如果是不存在的，就会直接发生短路，不会继续执行后面的方法。\"]},\"625\":{\"h\":\"3. 逻辑或操作符（||）\",\"t\":[\"逻辑或操作符和逻辑与操作符类似，不过只要两个操作数中的一个为真，最终的结果就为真。该运算符可以用于任何类型的数据。如果有操作数不是布尔值，则结果并一定会返回布尔值，会遵循以下规则：\",\"如果第一个操作数是对象，则返回第一个操作对象；\",\"如果第一个操作数的求值结果是false，则返回第二个操作数；\",\"如果两个操作数都是对象，则返回第一个操作数；\",\"如果两个操作数都是null，则返回null；\",\"如果两个数都是NaN，则返回NaN；\",\"如果两个数都是undefined，则返回undefined。\",\"逻辑或操作符也是具有短路特性，如果第一个操作数为真，那么第二个操作数就不需要在进行判断了，会直接返回true。\",\"可以利用这个特性给变量设置默认值：\",\"let datas = data || {};\",\"这里，如果data不存在，就会将datas赋值为第二个操作数（默认值）。\"]},\"626\":{\"h\":\"五、比较操作符\"},\"627\":{\"h\":\"1. 相等操作符\",\"t\":[\"相等操作符包括四种：\",\"等于（==）\",\"不等于（!=）\",\"全等（===）\",\"不全等（!==）\",\"JavaScript中的等于用两个等号（==）表示，如果两个操作数相等，那么就返回true。不等于和等于相反。在进行比较时，两个操作数都会进行强制类型转换，在确实是否相等。其判断规则如下：\",\"首先会判断两者类型是否相同，相同的话就比较两者的大小；\",\"类型不相同的话，就会进行类型转换；\",\"会先判断是否在对比 null 和 undefined，是的话就会返回 true\",\"判断两者类型是否为 string 和 number，是的话就会将字符串转换为 number\",\"1 == '1' ↓ 1 == 1\",\"判断其中一方是否为 boolean，是的话就会把 boolean 转为 number 再进行判断\",\"'1' == true ↓ '1' == 1 ↓ 1 == 1\",\"判断其中一方是否为 object 且另一方为 string、number 或者 symbol，是的话就会把 object 转为原始类型再进行判断\",\"'1' == { name: 'js' } ↓ '1' == '[object Object]'\",\"需要注意，如果其中一个操作数是NaN，相等运算符会返回false，不相等运算符会返回true。\",\"对于不等于运算符（!=），只有在强制类型转化后不相等才会返回true。\",\"对于全等运算符（===），只有当两个操作数的数据类型和值都相等时，才会返回true。它并不会进行数据类型的转化。\",\"对于不全等运算符（!==），只有两个操作数在不进行类型转化的情况下是不相等的，才会返回true。\",\"在平时的开发中，建议使用全等和不全等在做比较，这样会更加严谨，避免出现意料之外的结果。\"]},\"628\":{\"h\":\"2. 关系操作符\",\"t\":[\"关系操作符包括四种：\",\"小于（<）\",\"大于（>）\",\"小于等于（<=）\",\"大于等于（>=）\",\"这几个操作符都会返回一个布尔值，他们操作时会遵循以下规则：\",\"如果这两个操作数都是数值，则执行数值比较；\",\"如果两个操作数都是字符串，则比较两个字符串对应的字符编码值；\",\"如果一个操作数是数值，则将另一个操作数转换为一个数值，然后执行数值比较；\",\"如果一个操作数是对象，则调用这个对象的valueOf()方法，并用得到的结果根据前面的规则执行比较；\",\"如果一个操作数是布尔值，则先将其转换为数值，然后再执行比较。\"]},\"629\":{\"h\":\"六、其他操作符\",\"t\":[\"最后这一部分的一些操作符在平时的开发中就很实用了，下面来看看它们的用法吧。\"]},\"630\":{\"h\":\"1. 扩展操作符（...）\",\"t\":[\"扩展操作符(Spread operator)可以用来扩展一个数组对象和字符串。它用三个点（…）表示，可以将可迭代对象转为用逗号分隔的参数序列。\"]},\"631\":{\"h\":\"（1）用于展开数组\",\"t\":[\"const a = [1, 2, 3], b = [4, 5, 6]; const c = [...a] // [1, 2, 3] const d = [...a, ...b] // [1, 2, 3, 4, 5, 6] const e = [...a, 4, 5] // [1, 2, 3, 4, 5]\"]},\"632\":{\"h\":\"（2）将类数组对象变成数组\",\"t\":[\"const list = document.getElementsByTagName('a'); const arr = [..list];\"]},\"633\":{\"h\":\"（3）用于展开对象\",\"t\":[\"const obj1 = { a: 1, b: 2 }; const obj2 = { c: 3, d: 4 }; const merged = { ...obj1, ...obj2 }; // { a: 1, b: 2, c: 3, d: 4 }\",\"需要注意，如果合并时的多个对象有相同属性，则后面的对象的会覆盖前面对象的属性。\"]},\"634\":{\"h\":\"（4）用于展开字符串\",\"t\":[\"const str = \\\"hello\\\"; [...str] // [\\\"h\\\", \\\"e\\\", \\\"l\\\", \\\"l\\\", \\\"o\\\"]\"]},\"635\":{\"h\":\"（5）用于函数传参\",\"t\":[\"const f = (foo, bar) => {} const a = [1, 2] f(...a) const numbers = [1, 2, 3, 4, 5] const sum = (a, b, c, d, e) => a + b + c + d + e const sum = sum(...numbers)\"]},\"636\":{\"h\":\"（6）用于具有 Iterator 接口的对象\",\"t\":[\"具有 Iterator 接口的对象Map 和 Set 结构，Generator 函数，可以使用展开操作符:\",\" const s = new Set(); s.add(1); s.add(2); const arr = [...s]// [1,2] function * gen() { yield 1; yield 2; yield 3; } const arr = [...gen()] // 1，2，3\",\"如果是map，会把每个key 和 value 转成一个数组：\",\"const m = new Map(); m.set(1,1) m.set(2,2) const arr = [...m] // [[1,1],[2,2]]\",\"注意 ，对象不是一个Iterator对象。\"]},\"637\":{\"h\":\"2. 条件操作符（?:）\",\"t\":[\"这里的条件运算符实际上就是我们常说的三元表达式。看一个例子：\",\"let res = num1 > num2 ? num1 : num2;\",\"这里，将num1和num2中的最大值赋值给了res。\",\"使用条件表达式可以代替很多if-else，使得代码很简洁。在React的项目中，我个人就经常使用条件操作符来做组件的条件渲染。当然如果判断的层数过多，感觉代码就有些难读懂了。（React-Router源码中就有嵌套了六七层条件操作符的地方，很难理解...）\"]},\"638\":{\"h\":\"3. 赋值操作符\",\"t\":[\"其实赋值操作符有很多种，包括简单的赋值操作符（=），以及一些复合赋值操作符：\",\"乘赋值操作符：*=\",\"除赋值操作符：/=\",\"模赋值操作符：%=\",\"加赋值操作符：+=\",\"减赋值操作符：-=\",\"左移操作符: <<=\",\"有符号右移赋值操作符：>>=\",\"无符号右移赋值操作符：>>>=\",\"这些仅仅是他们对应的简写形式，并不会产生其他影响。\"]},\"639\":{\"h\":\"4. in操作符（in）\",\"t\":[\"in操作符可以用来判断一个属性是否属于一个对象，它的返回值是一个布尔值：\",\"const author = { name: \\\"CUGGZ\\\", age: 18 } \\\"height\\\" in author; // false \\\"age\\\" in author; // true\",\"还可以用来判断一个属性是否属于对象原型链的一部分：\",\"let arr = [\\\"hello\\\", \\\"jue\\\", \\\"jin\\\"]; \\\"length\\\" in arr; // true\"]},\"640\":{\"h\":\"5. delete操作符（delete）\",\"t\":[\"delete 操作符用于删除对象的某个属性或者数组元素。对于引用类型的值，它也是删除对象属性的本身，不会删除属性指向的对象。\",\"const o = {}; const a = { x: 10 }; o.a = a; delete o.a; // o.a属性被删除 console.log(o.a); // undefined console.log(a.x); // 10, 因为{ x: 10 } 对象依然被 a 引用，所以不会被回收\",\"需要注意：\",\"原型中声明的属性和对象自带的属性无法被删除；\",\"通过var声明的变量和通过function声明的函数拥有dontdelete特性，是不能被删除。\"]},\"641\":{\"h\":\"6. instanceof操作符（instanceof）\",\"t\":[\"instanceof运算符用来判断一个构造函数的prototype属性所指向的对象是否存在另外一个要检测对象的原型链上。\",\"console.log(2 instanceof Number); // false console.log(true instanceof Boolean); // false console.log('str' instanceof String); // false console.log([] instanceof Array); // true console.log(function(){} instanceof Function); // true console.log({} instanceof Object); // true\",\"可以看到，instanceof只能正确判断引用数据类型，而不能判断基本数据类型。instanceof运算符可以用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。\",\"可以简单来实现一下 instanceof 操作符：\",\"function myInstanceof(left, right) { // 获取对象的原型 let proto = Object.getPrototypeOf(left) // 获取构造函数的 prototype 对象 let prototype = right.prototype; // 判断构造函数的 prototype 对象是否在对象的原型链上 while (true) { if (!proto) return false; if (proto === prototype) return true; // 如果没有找到，就继续从其原型上找，Object.getPrototypeOf方法用来获取指定对象的原型 proto = Object.getPrototypeOf(proto); } }\"]},\"642\":{\"h\":\"7. typeof操作符（typeof）\",\"t\":[\"typeof是一元运算符，它的返回值是一个字符串，它是操作数的类型，JavaScript常见数据对应的类型如下：\",\"typeof 2 // number typeof true // boolean typeof 'str' // string typeof [] // object typeof function(){} // function typeof {} // object typeof undefined // undefined typeof null // object\",\"那这里为什么 typeof null 的结果是Object呢？\",\"在 JavaScript 第一个版本中，所有值都存储在 32 位的单元中，每个单元包含一个小的 类型标签(1-3 bits) 以及当前要存储值的真实数据。类型标签存储在每个单元的低位中，共有五种数据类型：\",\"000: object - 当前存储的数据指向一个对象。 1: int - 当前存储的数据是一个 31 位的有符号整数。 010: double - 当前存储的数据指向一个双精度的浮点数。 100: string - 当前存储的数据指向一个字符串。 110: boolean - 当前存储的数据是布尔值。\",\"如果最低位是 1，则类型标签标志位的长度只有一位；如果最低位是 0，则类型标签标志位的长度占三位，为存储其他四种数据类型提供了额外两个 bit 的长度。\",\"有两种特殊数据类型：\",\"undefined的值是 (-2)30(一个超出整数范围的数字)；\",\"null 的值是机器码 NULL 指针(null 指针的值全是 0)\",\"那也就是说null的类型标签也是000，和Object的类型标签一样，所以会被判定为Object。\"]},\"643\":{\"h\":\"8. 空值合并操作符（??）\",\"t\":[\"在编写代码时，如果某个属性不为 null 和 undefined，那么就获取该属性，如果该属性为 null 或 undefined，则取一个默认值：\",\"const name = dogName ? dogName : 'default';\",\"可以通过 || 来简化：\",\"const name = dogName || 'default';\",\"但是 || 的写法存在一定的缺陷，当 dogName 为 0 或 false 的时候也会走到 default 的逻辑。所以 ES2020 引入了 ?? 运算符。只有 ?? 左边为 null 或 undefined时才返回右边的值：\",\"const dogName = false; const name = dogName ?? 'default'; // name = false;\"]},\"644\":{\"h\":\"9. 可选链操作符（?.）\",\"t\":[\"在开发过程中，我们可能需要获取深层次属性，例如 system.user.addr.province.name。但在获取 name 这个属性前需要一步步的判断前面的属性是否存在，否则并会报错：\",\"const name = (system && system.user && system.user.addr && system.user.addr.province && system.user.addr.province.name) || 'default';\",\"为了简化上述过程，ES2020 引入了「链判断运算符」?.，可选链操作符( ?. )允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用是否有效。?. 操作符的功能类似于 . 链式操作符，不同之处在于，在引用为null 或 undefined 的情况下不会引起错误，该表达式短路返回值是 undefined。与函数调用一起使用时，如果给定的函数不存在，则返回 undefined。\",\"const name = system?.user?.addr?.province?.name || 'default';\",\"当尝试访问可能不存在的对象属性时，可选链操作符将会使表达式更短、更简明。在探索一个对象的内容时，如果不能确定哪些属性必定存在，可选链操作符也是很有帮助的。\",\"可选链有以下三种形式：\",\"a?.[x] // 等同于 a == null ? undefined : a[x] a?.b() // 等同于 a == null ? undefined : a.b() a?.() // 等同于 a == null ? undefined : a()\"]},\"645\":{\"h\":\"10. 逗号操作符（,）\",\"t\":[\"逗号操作符也没啥好说的，当同时声明多个变量时会用到：\",\"let a = 1, b = 2, c = 3;\",\"还有一种使用场景就是有多个循环变量的 for 循环中：\",\"for(let i = 0, j = 10; i < j; i++, j--){ console.log(i + j); }\"]},\"646\":{\"h\":\"11. void操作符（void）\",\"t\":[\"void 是一元运算符，它可以出现在任意类型的操作数之前执行操作数，会忽略操作数的返回值，返回一个 undefined。void 常用于 HTML 脚本中执行 JavaScript 表达式，但不需要返回表达式的计算结果。比如对于链接标签，我们并不想让它发生跳转，就可以设置href=\\\"javascript:void(0)。\",\"在下面代码中，使用 void 运算符让表达式返回 undefined：\",\"let a = b = c = 2; // 定义并初始化变量的值 d = void (a -= (b *= (c += 5))); // 执行void运算符，并把返回值赋予变量d console.log(a); // -12 console.log(b); // 14 console.log(c); // 7 console.log(d); // undefined\",\"由于 void 运算符的优先级比较高，高于普通运算符的优先级，所以在使用时应该使用小括号明确 void 运算符操作的操作数，避免引发错误。\"]},\"647\":{\"c\":[\"Javascript\"]},\"648\":{\"c\":[\"操作符\"]},\"649\":{\"h\":\"数据类型\"},\"650\":{\"h\":\"有哪些数据类型\",\"t\":[\"JavaScript 共有八种数据类型，分别是 Undefined、Nul、Boolean、Number、String、Object、Symbol、Biglnt\",\"其中 Symbol 和 Biglnt 是 ES6 中新增的数据类型：\",\"Symbol 代表创建后独一无二且不可变的数据类型，它主要是为了解决可能出现的全局变量冲突的问题。\",\"Biglnt 是一种数字类型的数据，它可以表示任意精度格式的整数，使用 BigInt 可以安全地存储和操作大整数，即使这个数已经超出了 Number 能够表示的安全整数范围。\",\"这些数据可以分为原始数据类型和引用数据类型：\",\"栈：原始数据类型(Undefined、Null、Boolean、Number、.String)\",\"堆：引用数据类型（对象、数组和函数）\"]},\"651\":{\"h\":\"区别\",\"t\":[\"原始数据类型直接存储在栈(sack)中的简单数据段，占据空间小、大小固定，属于被频繁使用数据，所以放入栈中存储\",\"引用数据类型存储在堆(hap)中的对象，占据空间大、大小不固定。如果存储在栈中，将会影响程序运行的性能，引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。\"]},\"652\":{\"h\":\"基本数据类型和引用数据类型\",\"t\":[\"基本数据类型： String Number Boolean undefined null Bigint Symbol，基本数据类型保存在内存中，保存的就是一个具体的值\",\"引用数据类型（复杂数据类型）：Object Function Array，引用数据类型保存在堆内存中，声明一个引用类型的变量，它保存的是引用类型数据的地址。假如声明两个引用类型同时指向了一个地址的时候，修改其中一个那么另外一个也会改变。\",\"let obj = { name: '张三', } let obj1 = obj obj1.name = '李四' console.log(obj.name) //李四\"]},\"653\":{\"h\":\"Symbol\",\"t\":[\"Symbol 是 ES6 中引入的一种新的基本数据类型，用于表示一个独一无二的值。它是 JavaScript 中的第七种数据类型，与 undefined、null、Number（数值）、String（字符串）、Boolean（布尔值）、Object（对象）并列。\",\"不能与其他的数据进行比较以及运算（唯一性）\",\"let a1 = Symbol('11') let a2 = Symbol('11') console.log(a1 === a2) // flase\",\"不能与其他数据进行运算\",\"let result = a2 + 100 //报错 let result = a2 > 100 //报错 let result = a1 + a1 //报错\",\"隐藏性，for···in 不能访问,使用 Object.getOwnPropertySymbols 方法可以进行访问\",\"let a = Symbol('Nan') let obj = { [a]: 'Chen', } console.log(obj) //{Symbol(Nan): \\\"Chen\\\"} for (const option in obj) { console.log(obj[option]) //啥都没有 } let array = Object.getOwnPropertySymbols(obj) console.log(array) //[Symbol(Nan)] console.log(obj[array[0]]) //Chen\"]},\"654\":{\"h\":\"null 与 undefind\",\"t\":[\"undefined\",\"已声明，为赋值\",\"对象某个属性不存在\",\"函数调用缺少参数\",\"函数默认的返回值\",\"// 1、已声明，为赋值 let o console.log(o) // undefined // 2、对象某个属性不存在 let obj = {} console.log(obj.a) // undefined // 3、函数调用缺少参数 function fn(a, b) { console.log(a, b) } fn(4) // 4,undefined // 4、函数默认的返回值 function abc() {} console.log(abc())\",\"null\",\"手动释放内存\",\"作为函数的参数（此参数不是对象）\",\"原型链的顶端\"]},\"655\":{\"h\":\"数据类型检测\"},\"656\":{\"h\":\"typeof\",\"t\":[\"返回一个表示数据类型的字符串，返回结果包括：number、boolean、string、symbol、object、undefined、function 等 7 种数据类型。其中数组、对象、null 都会被判断为 object,其他判断都正确。\",\"typeof Symbol() // symbol 有效 typeof '' // string 有效 typeof 1 // number 有效 typeof true //boolean 有效 typeof undefined //undefined 有效 typeof new Function() // function 有效 typeof null //object 无效 typeof [] //object 无效 typeof new Date() //object 无效 typeof new RegExp() //object 无效\",\"typeof NaN\",\"NaN指“不是一个数字”(not a number),NaN是一个“警戒值”(sentinel value,有特殊用途的常规值)，用于指出数字类型中的错误情况，即“执行数学运算没有成功，这是失败后返回的结果”。\",\"typeof NaN;//\\\"number\\\"\",\"NaN是一个特殊值，它和自身不相等，是唯一个非自反（自反，reflexive,即x==X不成应）的值。而NaN!==NaN为true。\"]},\"657\":{\"h\":\"instanceof\",\"t\":[\"instanceof 是用来判断 A 是否为 B 的实例，表达式为：A instanceof B，如果 A 是 B 的实例，则返回 true,否则返回 false。instanceof 运算符用来测试一个对象在其原型链中是否存在一个构造函数的 prototype 属性。\",\"[] instanceof Array; //true {} instanceof Object;//true new Date() instanceof Date;//true new RegExp() instanceof RegExp//true\",\"关于数组的类型判断，还可以用 ES6 新增 Array.isArray()\",\"Array.isArray([]) // true\",\"三个弊端\",\"对于基本数据类型来说，字面量方式创建出来的结果和实例方式创建的是有一定的区别的\",\"console.log(1 instanceof Number) //false console.log(new Number(1) instanceof Number) //true\",\"从严格意义上来讲，只有实例创建出来的结果才是标准的对象数据类型值，也是标准的 Number 这个类的一个实例；对于字面量方式创建出来的结果是基本的数据类型值，不是严谨的实例，但是由于 JS 的松散特点，导致了可以使用 Number.prototype 上提供的方法。\",\"只要在当前实例的原型链上，我们用其检测出来的结果都是 true。在类的原型继承中，我们最后检测出来的结果未必准确。\",\"var arr = [1, 2, 3] console.log(arr instanceof Array) // true console.log(arr instanceof Object) // true function fn() {} console.log(fn instanceof Function) // true console.log(fn instanceof Object) // true\",\"不能检测 null 和 undefined\",\"对于特殊的数据类型 null 和 undefined，他们的所属类是 Null 和 Undefined，但是浏览器把这两个类保护起来了，不允许我们在外面访问使用。\",\"实现原理\",\"instanceof 运算符用于判断构造函数的 prototype 属性是否出现在对象的原型链中的任何位置。\",\"function myInstanceof(left, right) { //获取对象的原型 let proto = Object.getPrototypeOf(left) //获取构造函数的prototype对象 let prototype = right.prototype //判断构造函数的prototype对象是否在对象的原型链上 while (true) { if (!proto) return false if (proto == prototype) return true //如果没有找到，就继续从其原型上找，Object.getPrototypeof方法用来获取指定对象的原型 proto = Object.getPrototypeOf(proto) } }\"]},\"658\":{\"h\":\"constructor\",\"t\":[\"constructor 作用和 instanceof 非常相似。但 constructor 检测 Object 与 instanceof 不一样，还可以处理基本数据类型的检测。\",\"var aa = [1, 2] console.log(aa.constructor === Array) //true console.log(aa.constructor === RegExp) //false console.log((1).constructor === Number) //true var reg = /^$/ console.log(reg.constructor === RegExp) //true console.log(reg.constructor === Object) //false\",\"弊端\",\"null 和 undefined 是无效的对象，因此是不会有 constructor 存在的，这两种类型的数据需要通过其他方式来判断。\",\"函数的 constructor 是不稳定的，这个主要体现在把类的原型进行重写，在重写的过程中很有可能出现把之前的 constructor 给覆盖了，这样检测出来的结果就是不准确的\",\"function Fn() {} Fn.prototype = new Array() var f = new Fn() console.log(f.constructor) //Array\"]},\"659\":{\"h\":\"Object.prototype.toString.call()\",\"t\":[\"Object.prototype.toString.call() 最准确最常用的方式。首先获取 Object 原型上的 toString 方法，让方法执行，让 toString 方法中的 this 指向第一个参数的值。\",\"Object.prototype.toString.call('') // [object String] Object.prototype.toString.call(1) // [object Number] Object.prototype.toString.call(true) // [object Boolean] Object.prototype.toString.call(undefined) // [object Undefined] Object.prototype.toString.call(null) // [object Null] Object.prototype.toString.call(new Function()) // [object Function] Object.prototype.toString.call(new Date()) // [object Date] Object.prototype.toString.call([]) // [object Array] Object.prototype.toString.call(new RegExp()) // [object RegExp] Object.prototype.toString.call(new Error()) // [object Error] Object.prototype.toString.call(document) // [object HTMLDocument] Object.prototype.toString.call(window) //[object global] window是全局对象global的引用\"]},\"660\":{\"h\":\"数据类型转换\"},\"661\":{\"h\":\"强制转换\"},\"662\":{\"h\":\"其他类型数据转换为 String\",\"t\":[\"toString()\",\"调用被转换数据类型的 toString()方法,该方法不会影响到原变量，它会将转换的结果返回，但是注意：null 和 undefined 这两个值没有 toString，如果调用他们的方法，会报错。\",\"var a = 123 a.toString() //\\\"123\\\" var b = null b.toString() //\\\"报错\\\" var c = undefined c.toString() //\\\"报错\\\"\",\"采用 Number 类型的 toString() 方法的基模式，可以用不同的基输出数字，例如二进制的基是 2，八进制的基是 8，十六进制的基是 16\",\"var iNum = 10 alert(iNum.toString(2)) //输出 \\\"1010\\\" alert(iNum.toString(8)) //输出 \\\"12\\\" alert(iNum.toString(16)) //输出 \\\"A\\\"\",\"String()\",\"使用 String()函数做强制类型转换时，对于 Number 和 Boolean 实际上就是调用的 toString()方法,但是对于 null 和 undefined，就不会调用 toString()方法,它会将 null 直接转换为\\\"null\\\",将 undefined 直接转换为\\\"undefined\\\"\",\"var a = null String(a) //\\\"null\\\" var b = undefined String(b) //\\\"undefined\\\"\",\"String 方法的参数如果是对象，返回一个类型字符串；如果是数组，返回该数组的字符串形式\",\"String({ a: 1 }) // \\\"[object Object]\\\" String([1, 2, 3]) // \\\"1,2,3\\\"\"]},\"663\":{\"h\":\"其他类型数据转换为 Number\",\"t\":[\"Number()\",\"字符串转数字\",\"如果是纯数字的字符串，则直接将其转换为数字\",\"如果字符串中有非数字的内容，则转换为 NaN\",\"如果字符串是一个空串或者是一个全是空格的字符串，则转换为 0\",\"Number('324') // 324 Number('324abc') // NaN Number('') // 0\",\"布尔值转数字:true 转成 1,false 转成 0\",\"Number(true) // 1 Number(false) // 0\",\"undefined 转数字:转成 NaN\",\"Number(undefined) // NaN\",\"null 转数字：转成 0\",\"Number(null) // 0\",\"Number() 接受数值作为参数，此时它既能识别负的十六进制，也能识别 0 开头的八进制，返回值永远是十进制值\",\"Number(3.15) //3.15 Number(023) //19 Number(0x12) //18 Number(-0x12) //-18\",\"对象\",\"Number({ a: 1 }) // NaN Number([1, 2, 3]) // NaN Number([5]) // 5\",\"parseInt() & parseFloat()\",\"这种方式专门用来对付字符串，parseInt()一个字符串转换为一个整数,可以将一个字符串中的有效的整数内容取出来，然后转换为 Number。parseFloat()把一个字符串转换为一个浮点数。parseFloat()作用和 parseInt()类似，不同的是它可以获得有效的小数。\",\"console.log(parseInt('.21')) //NaN console.log(parseInt('10.3')) //10 console.log(parseFloat('.21')) //0.21 console.log(parseFloat('.d1')) //NaN console.log(parseFloat('10.11.33')) //10.11 console.log(parseFloat('4.3years')) //4.3 console.log(parseFloat('He40.3')) //NaN\",\"parseInt()在没有第二个参数时默认以十进制转换数值，有第二个参数时，以第二个参数为基数转换数值，如果基数有误返回 NaN\",\"console.log(parseInt('13')) //13 console.log(parseInt('11', 2)) //3 console.log(parseInt('17', 8)) //15 console.log(parseInt('1f', 16)) //31\",\"两者的区别：Number 函数将字符串转为数值，要比 parseInt 函数严格很多。基本上，只要有一个字符无法转成数值，整个字符串就会被转为 NaN。\",\"parseInt('42 cats') // 42 Number('42 cats') // NaN\",\"上面代码中，parseInt 逐个解析字符，而 Number 函数整体转换字符串的类型。 另外，对空字符串的处理也不一样\",\"Number(' ') //0 parseInt(' ') //NaN\"]},\"664\":{\"h\":\"其他类型数据转换为 Boolean\",\"t\":[\"它的转换规则相对简单：只有空字符串(\\\"\\\")、null、undefined、+0、-0 和 NaN 转为布尔型是 false，其他的都是 true，空数组、空对象转换为布尔类型也是 true,甚至连 false 对应的布尔对象 new Boolean(false)也是 true\",\"Boolean(undefined) // false Boolean(null) // false Boolean(0) // false Boolean(NaN) // false Boolean('') // false Boolean({}) // true Boolean([]) // true Boolean(new Boolean(false)) // true\"]},\"665\":{\"h\":\"自动转换\"},\"666\":{\"h\":\"自动转换为布尔值\",\"t\":[\"JavaScript 遇到预期为布尔值的地方(比如 if 语句的条件部分),就会将非布尔值的参数自动转换为布尔值。系统内部会自动调用 Boolean 函数。\",\"逻辑运算符!如果对非布尔值进行运算，则会将其转换为布尔值，然后再取反。 所以我们可以利用该特点，来将一个其他的数据类型转换为布尔值， 可以为一个任意数据类型取两次反，来将其转换为布尔值，原理和 Boolean()函数一样。\",\"if ('abc') { console.log('hello') } // \\\"hello\\\"\"]},\"667\":{\"h\":\"自动转换为数值\",\"t\":[\"算数运算符(+ - * /)跟非 Number 类型的值进行运算时，会将这些值转换为 Number，然后在运算，除了字符串的加法运算\",\"true + 1 // 2 2 + null // 2 undefined + 1 // NaN 2 + NaN // NaN 任何值和NaN做运算都得NaN '5' - '2' // 3 '5' * '2' // 10 true - 1 // 0 '1' - 1 // 0 '5' * [] // 0 false / '5' // 0 'abc' - 1 // NaN\",\"一元运算符也会把运算子转成数值。\",\";+'abc' - // NaN 'abc' + // NaN true - // 1 false // 0\"]},\"668\":{\"h\":\"自动转换为字符串\",\"t\":[\"字符串的自动转换，主要发生在字符串的加法运算时。当一个值为字符串，另一个值为非字符串，则后者转为字符串。\",\"'5' + 1 // '51' '5' + true // \\\"5true\\\" '5' + false // \\\"5false\\\" '5' + {} // \\\"5[object Object]\\\" '5' + [] // \\\"5\\\" '5' + function () {} // \\\"5function (){}\\\" '5' + undefined // \\\"5undefined\\\" '5' + null // \\\"5null\\\"\"]},\"669\":{\"h\":\"总结\",\"t\":[\"强制转换\",\"自动转换\",\"只有空字符串(\\\"\\\")、null、undefined、+0、-0 和 NaN 转为布尔型是 false，其他的都是 true\",\"除了加法运算符（+）有可能把运算子转为字符串，其他运算符都会把运算子自动转成数值。一元运算符也会把运算子转成数值。\",\"字符串的自动转换，主要发生在字符串的加法运算时。\"]},\"670\":{\"c\":[\"Javascript\"]},\"671\":{\"c\":[\"数据类型\"]},\"672\":{\"h\":\"数组\"},\"673\":{\"h\":\"一、数组基础\"},\"674\":{\"h\":\"1. 数组概述\",\"t\":[\"数组是我们最常用的数据类型之一，ECMAScript 数组跟其他语言的数组一样，都是一组有序的数据，但跟其他语言不同的是，数组中每个槽位可以存储任意类型的数据。除此之外，ECMAScript 数组的长度也是动态的，会随着数据的增删而改变。\",\"数组是被等分为许多小块的连续内存段，每个小块都和一个整数关联，可以通过这个整数快速访问对应的小块。除此之外，数组拥有一个 length 属性，该属性表示的并不是数组元素的数量，而是指数组元素的最高序号加 1。\",\"let a = [1, 2, 3] a.length === 3 // true\",\"在 ES6 中，可以使用扩展运算符（...）来获取数组元素：\",\"let a = [1, 2, 3] let b = [0, ...a, 4] // [0, 1, 2, 3, 4]\"]},\"675\":{\"h\":\"2. 数组创建\",\"t\":[\"数组的创建方式有以下两种。\"]},\"676\":{\"h\":\"（1）字面量\",\"t\":[\"最常用的创建数组的方式就是数组字面量，数组元素的类型可以是任意的，如下：\",\"let colors = ['red', [1, 2, 3], true]\"]},\"677\":{\"h\":\"（2）构造函数\",\"t\":[\"使用构造函数创建数组的形式如下：\",\"let array = new Array()\",\"如果已知数组元素数量，那么就可以给构造函数传入一个数值，然后 length 属性就会被自动创建并保存这个值，比如创建一个长度为 10 的数组：\",\"let array = new Array() // [undefined × 10]\",\"这样，就可以创建一个长度为 10 的数组，数组每个元素的值都是 undefined。\",\"还可以给 Array 构造函数传入要保存的元素，比如：\",\"let colors = new Array('red', 'blue', 'green')\",\"这就出现问题了，当我们创建数组时，如果给数组传入一个值，如果传入的值是数字，那么就会创建一个长度为指定数字的数组；如果这个值是其他类型，就会创建一个质保函该特定制度额数组。这样我们就无法直接创建一个只包含一个数字的数组了。\",\"Array 构造函数根据参数长度的不同，有如下两种不同的处理方式：\",\"new Array(arg1, arg2,…)：参数长度为 0 或长度大于等于 2 时，传入的参数将按照顺序依次成为新数组的第 0 至第 N 项（参数长度为 0 时，返回空数组）\",\"new Array(length)：当 length 不是数值时，返回一个只包含 length 元素一项的数组；当 length 为数值时，length 最大不能超过 32 位无符号整型，即需要小于 232，否则将抛出 RangeError\",\"在使用 Array 构造函数时，也可以省略 new 操作符，结果是一样的：\",\"let array = Array()\"]},\"678\":{\"h\":\"（3）ES6 构造器\",\"t\":[\"鉴于数组的常用性，ES6 专门扩展了数组构造器 Array ，新增了 2 个方法：Array.of 和 Array.from。Array.of 用得比较少，Array.from 具有很强的灵活性。\",\"Array.of\",\"Array.of 用于将参数依次转化为数组项，然后返回这个新数组。它基本上与 Array 构造器功能一致，唯一的区别就在单个数字参数的处理上。\",\"比如，在下面的代码中，可以看到：当参数为 2 个时，返回的结果是一致的；当参数是一个时，Array.of 会把参数变成数组里的一项，而构造器则会生成长度和第一个参数相同的空数组：\",\"Array.of(8.0) // [8] Array(8.0) // [empty × 8] Array.of(8.0, 5) // [8, 5] Array(8.0, 5) // [8, 5] Array.of('8') // [\\\"8\\\"] Array('8') // [\\\"8\\\"]\",\"Array.from Array.from 的设计初衷是快速基于其他对象创建新数组，准确来说就是从一个类似数组的可迭代对象中创建一个新的数组实例。其实，只要一个对象有迭代器，Array.from 就能把它变成一个数组（注意：该方法会返回一个的数组，不会改变原对象）。\",\"从语法上看，Array.from 有 3 个参数：\",\"类似数组的对象，必选；\",\"加工函数，新生成的数组会经过该函数的加工再返回；\",\"this 作用域，表示加工函数执行时 this 的值。\",\"这三个参数里面第一个参数是必选的，后两个参数都是可选的：\",\"var obj = { 0: 'a', 1: 'b', 2: 'c', length: 3 } Array.from( obj, function (value, index) { console.log(value, index, this, arguments.length) return value.repeat(3) //必须指定返回值，否则返回 undefined }, obj )\",\"以上结果表明，通过 Array.from 这个方法可以自定义加工函数的处理方式，从而返回想要得到的值；如果不确定返回值，则会返回 undefined，最终生成的是一个包含若干个 undefined 元素的空数组。\",\"实际上，如果这里不指定 this，加工函数就可以是一个箭头函数。上述代码可以简写为以下形式。\",\"Array.from(obj, (value) => value.repeat(3)) // 控制台打印 (3) [\\\"aaa\\\", \\\"bbb\\\", \\\"ccc\\\"]\",\"除了上述 obj 对象以外，拥有迭代器的对象还包括 String、Set、Map 等，Array.from 都可以进行处理：\",\"// String Array.from('abc') // [\\\"a\\\", \\\"b\\\", \\\"c\\\"] // Set Array.from(new Set(['abc', 'def'])) // [\\\"abc\\\", \\\"def\\\"] // Map Array.from( new Map([ [1, 'ab'], [2, 'de'], ]) ) // [[1, 'ab'], [2, 'de']]\"]},\"679\":{\"h\":\"3. 数组空位\",\"t\":[\"当我们使用数组字面量初始化数组时，可以使用一串逗号来创建空位，ECMAScript 会将逗号之间相应索引位置的值当成空位，ES6 重新定义了该如何处理这些空位。\",\"我们可以这样来创建一个空位数组：\",\"let array = [, , , , ,] console.log(array.length) console.log(array)\",\"ES6 新增的方法和迭代器与早期版本中存在的方法的行为不同，ES6 新增方法普遍将这些空位当成存在的元素，只不过值为 undefined，使用字面量形式创建如下数组：\",\"let array = [1, , , 5] for (let i of array) { console.log(i === undefined) } // 输出结果：false true true false\",\"使用 ES6 的 Array.form 创建数组：\",\"let array = Array.from([1, , , 5]) for (let i of array) { console.log(i === undefined) } // 输出结果：false true true false\",\"而 ES6 之前的方法则会忽略这个空位：\",\"let array = [1, , , 5] console.log(array.map(() => 10)) // 输出结果：[10, undefined, undefined, 10]\",\"由于不同方法对空位数组的处理方式不同，因此尽量避免使用空位数组。\"]},\"680\":{\"h\":\"4. 数组索引\",\"t\":[\"在数组中，我们可以通过使用数组的索引来获取数组的值：\",\"let colors = new Array('red', 'blue', 'green') console.log(array[1]) // blue\",\"如果指定的索引值小于数组的元素数，就会返回存储在相应位置的元素，也可以通过这种方式来设置一个数组元素的值。如果设置的索引值大于数组的长度，那么就会将数组长度扩充至该索引值加一。\",\"数组长度 length 的独特之处在于，他不是只读的。通过 length 属性，可以在数组末尾增加删除元素：\",\"let colors = new Array('red', 'blue', 'green') colors.length = 2 console.log(colors[2]) // undefined colors.length = 4 console.log(colors[3]) // undefined\",\"数组长度始终比数组最后一个值的索引大 1，这是因为索引值都是从 0 开始的。\"]},\"681\":{\"h\":\"5. 数组判断\",\"t\":[\"一个很经典的 ECMASript 问题就是如何判断一个对象是不是数组，下面来看常用的数据类型检测的方法。\",\"在 ES6 之前，至少有如下 5 种方式去判断一个对象是否为数组。\",\"通过 Object.prototype.toString.call()做判断：\",\"Object.prototype.toString.call(obj).slice(8, -1) === 'Array'\",\"通过 constructor 做判断：\",\"obj.constructor === Array\",\"通过 instanceof 做判断：\",\"obj instanceof Array\",\"通过 Array.prototype.isPrototypeOf 做判断：\",\"Array.prototype.isPrototypeOf(obj)\",\"通过基于 getPrototypeOf 做判断：\",\"Object.getPrototypeOf(obj) === Array.prototype\",\"如果 obj 是一个数组，那么上面这 5 个判断全部为 true，推荐通过 Object.prototype.toString 去判断一个值的类型。\",\"ES6 新增了 Array.isArray 方法，可以直接判断数据类型是否为数组：\",\"Array.isArrray(obj)\",\"如果 isArray 不存在，那么 Array.isArray 的 polyfill 通常可以这样写：\",\"if (!Array.isArray) { Array.isArray = function (arg) { return Object.prototype.toString.call(arg) === '[object Array]' } }\"]},\"682\":{\"h\":\"二、数组方法\",\"t\":[\"数字就像是一个森林，里面有很多函“树”，有些方法纯净如水，并不会改变原数组，有些则会改变原数组。\",\"改变原数组的方法：fill()、pop()、push()、shift()、splice()、unshift()、reverse()、sort()；\",\"不改变原数组的方法：concat()、every()、filter()、find()、findIndex()、forEach()、indexOf()、join()、lastIndexOf()、map()、reduce()、reduceRight()、slice()、some。\"]},\"683\":{\"h\":\"1. 复制和填充方法\",\"t\":[\"ES 提供了两个方法：批量复制方法 copeWithin()，以及填充数组方法 fill()。这两个方法的签名类似，都需要指定已有数组实例上的一个范围，包含开始索引，不包含结束索引。下面就分别来看一下这两个方法。\"]},\"684\":{\"h\":\"（1）fill()\",\"t\":[\"使用 fill()方法可以向一个已有数组中插入全部或部分相同的值，开始索引用于指定开始填充的位置，它是可选的。如果不提供结束索引，则一直填充到数组末尾。如果是负值，则将从负值加上数组的长度而得到的值开始。该方法的语法如下：\",\"array.fill(value, start, end)\",\"其参数如下：\",\"value：必需。填充的值；\",\"start：可选。开始填充位置；\",\"end：可选。停止填充位置 (默认为 array.length)。\",\"const arr = [0, 0, 0, 0, 0] // 用5填充整个数组 arr.fill(5) console.log(arr) // [5, 5, 5, 5, 5] arr.fill(0) // 重置 // 用5填充索引大于等于3的元素 arr.fill(5, 3) console.log(arr) // [0, 0, 0, 5, 5] arr.fill(0) // 重置 // 用5填充索引大于等于1且小于等于3的元素 arr.fill(5, 3) console.log(arr) // [0, 5, 5, 0, 0] arr.fill(0) // 重置 // 用5填充索引大于等于-1的元素 arr.fill(5, -1) console.log(arr) // [0, 0, 0, 0, 5] arr.fill(0) // 重置\"]},\"685\":{\"h\":\"（2）copyWithin()\",\"t\":[\"copyWithin()方法会按照指定范围来浅复制数组中的部分内容，然后将它插入到指定索引开始的位置，开始与结束索引的计算方法和 fill 方法一样。该方法的语法如下：\",\"array.copyWithin(target, start, end)\",\"其参数如下：\",\"target'：必需。复制到指定目标索引位置；\",\"start：可选。元素复制的起始位置；\",\"end：可选。停止复制的索引位置 (默认为 array.length)。如果为负值，表示倒数。\",\"const array = [1, 2, 3, 4, 5] console.log(array.copyWithin(0, 3)) // [4, 5, 3, 4, 5]\"]},\"686\":{\"h\":\"2. 转化方法\",\"t\":[\"数组的转化方法主要有四个：toLocaleString()、toString()、valueOf()、join()。下面就分别来看一下这 4 个方法。\"]},\"687\":{\"h\":\"（1）toString()\",\"t\":[\"toString()方法返回的是由数组中每个值的等效字符串拼接而成的一个逗号分隔的字符串，也就是说，对数组的每个值都会调用 toString()方法，以得到最终的字符串：\",\"let colors = ['red', 'blue', 'green'] console.log(colors.toString()) // red,blue,green\"]},\"688\":{\"h\":\"（2）valueOf()\",\"t\":[\"valueOf()方法返回的是数组本身，如下面代码：\",\"let colors = ['red', 'blue', 'green'] console.log(colors.valueOf()) // [\\\"red\\\", \\\"blue\\\", \\\"green\\\"]\"]},\"689\":{\"h\":\"（3）toLocaleString()\",\"t\":[\"toLocaleString()方法可能会返回和 toString()方法相同的结果，但也不一定。在调用 toLocaleString()方法时会得到一个逗号分隔的数组值的字符串，它与 toString()方法的区别是，为了得到最终的字符串，会调用每个值的 toLocaleString()方法，而不是 toString()方法，看下面的例子：\",\"let array = [{ name: 'zz' }, 123, 'abc', new Date()] let str = array.toLocaleString() console.log(str) // [object Object],123,abc,2016/1/5 下午1:06:23\",\"需要注意，如果数组中的某一项是 null 或者 undefined，则在调用上述三个方法后，返回的结果中会以空字符串来表示。\"]},\"690\":{\"h\":\"（4）join()\",\"t\":[\"join() 方法用于把数组中的所有元素放入一个字符串。元素是通过指定的分隔符进行分隔的。其使用语法如下：\",\"arrayObject.join(separator)\",\"其中参数 separator 是可选的，用来指定要使用的分隔符。如果省略该参数，则使用逗号作为分隔符。\",\"该方法返回一个字符串。该字符串是通过把 arrayObject 的每个元素转换为字符串，然后把这些字符串连接起来，在两个元素之间插入 separator 字符串而生成的。\",\"let array = ['one', 'two', 'three', 'four', 'five'] console.log(array.join()) // one,two,three,four,five console.log(array.join('-')) // one-two-three-four-five\"]},\"691\":{\"h\":\"3. 栈方法\",\"t\":[\"ECMAScript 给数组添加了几个方法来使它像栈一样。众所周知，栈是一种后进先出的结构，也就是最近添加的项先被删除。数据项的插入（称为推入，push），和删除（称为弹出，pop）只在栈顶发生。数组提高了 push()和 pop()来实现类似栈的行为。下面就分别来看看这两个方法。\"]},\"692\":{\"h\":\"（1）push()\",\"t\":[\"push()方法可以接收任意数量的参数，并将它们添加了数组末尾，并返回数组新的长度。该方法会改变原数组。其语法形式如下：\",\"arrayObject.push(newelement1,newelement2,....,newelementX)\",\"let array = ['football', 'basketball', 'badminton'] let i = array.push('golfball') console.log(array) // [\\\"football\\\", \\\"basketball\\\", \\\"badminton\\\", \\\"golfball\\\"] console.log(i) // 4\"]},\"693\":{\"h\":\"（2）pop()\",\"t\":[\"pop() 方法用于删除并返回数组的最后一个元素。它没有参数。该方法会改变原数组。其语法形式如下：\",\"arrayObject.pop()\",\"let array = ['cat', 'dog', 'cow', 'chicken', 'mouse'] let item = array.pop() console.log(array) // [\\\"cat\\\", \\\"dog\\\", \\\"cow\\\", \\\"chicken\\\"] console.log(item) // mouse\"]},\"694\":{\"h\":\"4. 队列方法\",\"t\":[\"队列是一种先进先出的数据结构，队列在队尾添加元素，在对头删除元素。上面我们已经说了在结果添加数据的方法 push()，下面就再来看看从数组开头删除和添加元素的方法：shift()和 unshift()。实际上 unshift()并不属于操作队列的方法，不过这里也一起说了。\"]},\"695\":{\"h\":\"（1）shift()\",\"t\":[\"shift()方法会删除数组的第一项，并返回它，然后数组长度减一，该方法会改变原数组。语法形式如下：\",\"arrayObject.shift()\",\"let array = [1, 2, 3, 4, 5] let item = array.shift() console.log(array) // [2,3,4,5] console.log(item) // 1\",\"注意：如果数组是空的，那么 shift() 方法将不进行任何操作，返回 undefined 值。\"]},\"696\":{\"h\":\"（2）unshift()\",\"t\":[\"unshift()方法可向数组的开头添加一个或更多元素，并返回新的长度。该方法会改变原数组。其语法形式如下：\",\"arrayObject.unshift(newelement1,newelement2,....,newelementX)\",\"let array = ['red', 'green', 'blue'] let length = array.unshift('yellow') console.log(array) // [\\\"yellow\\\", \\\"red\\\", \\\"green\\\", \\\"blue\\\"] console.log(length) // 4\"]},\"697\":{\"h\":\"5. 排序方法\",\"t\":[\"数组有两个方法可以对数组进行重新排序：sort()和 reverse()。下面就分别来看看这两个方法。\"]},\"698\":{\"h\":\"（1）sort()\",\"t\":[\"sort()方法是我们常用给的数组排序方法，该方法会在原数组上进行排序，会改变原数组，其使用语法如下：\",\"arrayObject.sort(sortby)\",\"其中参数 sortby 是可选参数，用来规定排序顺序，它是一个比较函数，用来判断哪个值应该排在前面。默认情况下，sort()方法会按照升序重新排列数组元素。为此，sort()方法会在每一个元素上调用 String 转型函数，然后比较字符串来决定顺序，即使数组的元素都是数值，也会将数组元素先转化为字符串在进行比较、排序。这就造成了排序不准确的情况，如下代码：\",\"let array = [5, 4, 3, 2, 1] let array2 = array.sort() console.log(array2) // [1, 2, 3, 4, 5] let array = [0, 1, 5, 10, 15] let array2 = array.sort() console.log(array2) // [0, 1, 10, 15, 5]\",\"可以看到，上面第二段代码就出现了问题，虽然 5 是小于 10 的，但是字符串 10 在 5 的前面，所以 10 还是会排在 5 前面，因此可知，在很多情况下，不添加参数是不行的。\",\"对于 sort()方法的参数，它是一个比较函数，它接收两个参数，如果第一个参数应该排在第二个参数前面，就返回-1；如果两个参数相等，就返回 0；如果第一个参数应该排在第二个参数后面，就返回 1。一个比较函数的形式可以如下：\",\"function compare(value1, value2) { if (value1 < value2) { return -1 } else if (value1 > value2) { return 1 } else { return 0 } } let array = [0, 1, 5, 10, 15] let array2 = array.sort(compare) console.log(array2) // [0, 1, 5, 10, 15]\",\"我们使用箭头函数来定义：\",\"let array = [0, 1, 5, 10, 15] let array2 = array.sort((a, b) => a - b) // 正序排序 console.log(array2) // [0, 1, 5, 10, 15] let array3 = array.sort((a, b) => b - a) // 倒序排序 console.log(array3) // [15, 10, 5, 1, 0]\"]},\"699\":{\"h\":\"（2）reverse()\",\"t\":[\"reverse() 方法用于颠倒数组中元素的顺序。该方法会改变原来的数组，而不会创建新的数组。其使用语法如下：\",\"arrayObject.reverse()\",\"let array = [1, 2, 3, 4, 5] let array2 = array.reverse() console.log(array) // [5,4,3,2,1] console.log(array2 === array) // true\"]},\"700\":{\"h\":\"6. 操作方法\",\"t\":[\"对于数组，还有很多操作方法，下面我们就来看看常用的 concat()、slice()、splice()方法。\"]},\"701\":{\"h\":\"（1）concat()\",\"t\":[\"concat() 方法用于连接两个或多个数组。该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。其适用语法如下：\",\"arrayObject.concat(arrayX,arrayX,......,arrayX)\",\"其中参数 arrayX 是必需的。该参数可以是具体的值，也可以是数组对象。可以是任意多个。\",\"let array = [1, 2, 3] let array2 = array.concat(4, [5, 6], [7, 8, 9]) console.log(array2) // [1, 2, 3, 4, 5, 6, 7, 8, 9] console.log(array) // [1, 2, 3], 可见原数组并未被修改\",\"该方法还可以用于数组扁平化，后面会介绍。\"]},\"702\":{\"h\":\"（2）slice()\",\"t\":[\"slice() 方法可从已有的数组中返回选定的元素。返回一个新的数组，包含从 start 到 end （不包括该元素）的数组元素。方法并不会修改数组，而是返回一个子数组。其使用语法如下：\",\"arrayObject.slice(start, end)\",\"其参数如下：\",\"start：必需。规定从何处开始选取。如果是负数，那么它规定从数组尾部开始算起的位置。也就是说，-1 指最后一个元素，-2 指倒数第二个元素，以此类推；\",\"end：可选。规定从何处结束选取。该参数是数组片断结束处的数组下标。如果没有指定该参数，那么切分的数组包含从 start 到数组结束的所有元素。如果这个参数是负数，那么它规定的是从数组尾部开始算起的元素。\",\"let array = ['one', 'two', 'three', 'four', 'five'] console.log(array.slice(0)) // [\\\"one\\\", \\\"two\\\", \\\"three\\\",\\\"four\\\", \\\"five\\\"] console.log(array.slice(2, 3)) // [\\\"three\\\"]\"]},\"703\":{\"h\":\"（3）splice()\",\"t\":[\"splice()方法可能是数组中的最强大的方法之一了，使用它的形式有很多种，它会向/从数组中添加/删除项目，然后返回被删除的项目。该方法会改变原始数组。其使用语法如下：\",\"arrayObject.splice(index, howmany, item1,.....,itemX)\",\"其参数如下：\",\"index：必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。\",\"howmany：必需。要删除的项目数量。如果设置为 0，则不会删除项目。\",\"item1, ..., itemX：可选。向数组添加的新项目。\",\"从上面参数可知，splice 主要有三种使用形式：\",\"删除：需要给 splice()传递两个参数，即要删除的第一个元素的位置和要删除的元素的数量；\",\"插入：需要给 splice()传递至少三个参数，即开始位置、0（要删除的元素数量）、要插入的元素。\",\"替换：splice()方法可以在删除元素的同事在指定位置插入新的元素。同样需要传入至少三个参数，即开始位置、要删除的元素数量、要插入的元素。要插入的元素数量是任意的，不一定和删除的元素数量相等。\",\"let array = ['one', 'two', 'three', 'four', 'five'] console.log(array.splice(1, 2)) // 删除：[\\\"two\\\", \\\"three\\\"] let array = ['one', 'two', 'three', 'four', 'five'] console.log(array.splice(2, 0, 996)) // 插入：[] let array = ['one', 'two', 'three', 'four', 'five'] console.log(array.splice(2, 1, 996)) // 替换：[\\\"three\\\"]\"]},\"704\":{\"h\":\"7. 归并方法\",\"t\":[\"ECMAScript 为数组提供了两个归并方法：reduce()和 reduceRight()。下面就分别来看看这两个方法。\"]},\"705\":{\"h\":\"（1）reduce()\",\"t\":[\"reduce() 方法对数组中的每个元素执行一个 reducer 函数(升序执行)，将其结果汇总为单个返回值。其使用语法如下：\",\"arr.reduce(callback, [initialValue])\",\"reduce 为数组中的每一个元素依次执行回调函数，不包括数组中被删除或从未被赋值的元素，接受四个参数：初始值（或者上一次回调函数的返回值），当前元素值，当前索引，调用 reduce 的数组。\",\"(1) callback （执行数组中每个值的函数，包含四个参数） \",\"previousValue （上一次调用回调返回的值，或者是提供的初始值（initialValue））\",\"currentValue （数组中当前被处理的元素）\",\"index （当前元素在数组中的索引）\",\"array （调用 reduce 的数组）\",\"(2) initialValue （作为第一次调用 callback 的第一个参数。）\",\"let arr = [1, 2, 3, 4] let sum = arr.reduce((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }) console.log(arr, sum)\",\"输出结果如下：\",\"1 2 1 3 3 2 6 4 3 [1, 2, 3, 4] 10\",\"再来加一个初始值看看：\",\"let arr = [1, 2, 3, 4] let sum = arr.reduce((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }, 5) console.log(arr, sum)\",\"输出结果如下：\",\"5 1 0 6 2 1 8 3 2 11 4 3 [1, 2, 3, 4] 15\",\"通过上面例子，可以得出结论：如果没有提供 initialValue，reduce 会从索引 1 的地方开始执行 callback 方法，跳过第一个索引。如果提供 initialValue，从索引 0 开始。\",\"注意，该方法如果添加初始值，就会改变原数组，将这个初始值放在数组的最后一位。\"]},\"706\":{\"h\":\"（2）reduceRight()\",\"t\":[\"该方法和的上面的 reduce()用法几乎一致，只是该方法是对数组进行倒序查找的。而 reduce()方法是正序执行的。\",\"let arr = [1, 2, 3, 4] let sum = arr.reduceRight((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }, 5) console.log(arr, sum)\",\"输出结果如下：\",\"5 4 3 9 3 2 12 2 1 14 1 0 [1, 2, 3, 4] 15\"]},\"707\":{\"h\":\"8. 搜索和位置方法\",\"t\":[\"ECMAScript 提供了两类搜索数组的方法：按照严格相等搜索和按照断言函数搜索。\"]},\"708\":{\"h\":\"（1）严格相等\",\"t\":[\"ECMAScript 通过了 3 个严格相等的搜索方法：indexOf()、lastIndexOf()、includes()。这些方法都接收两个参数：要查找的元素和可选的其实搜索位置。lastIndexOf()方法会从数组结尾元素开始向前搜索，其他两个方法则会从数组开始元素向后进行搜索。indexOf()和 lastIndexOf()返回的是查找元素在数组中的索引值，如果没有找到，则返回-1。includes()方法会返回布尔值，表示是否找到至少一个与指定元素匹配的项。在比较第一个参数和数组的每一项时，会使用全等（===）比较，也就是说两项必须严格相等。\",\"let arr = [1, 2, 3, 4, 5] console.log(arr.indexOf(2)) // 1 console.log(arr.lastIndexOf(3)) // 2 console.log(arr.includes(4)) // true\"]},\"709\":{\"h\":\"（2）断言函数\",\"t\":[\"ECMAScript 也允许按照定义的断言函数搜索数组，每个索引都会调用这个函数，断言函数的返回值决定了相应索引的元素是否被认为匹配。使用断言函数的方法有两个，分别是 find()和 findIndex()方法。这两个方法对于空数组，函数是不会执行的。并且没有改变数组的原始值。他们的都有三个参数：元素、索引、元素所属的数组对象，其中元素是数组中当前搜索的元素，索引是当前元素的索引，而数组是当前正在搜索的数组。\",\"这两个方法都从数组的开始进行搜索，find()返回的是第一个匹配的元素，如果没有符合条件的元素返回 undefined；findIndex()返回的是第一个匹配的元素的索引，如果没有符合条件的元素返回 -1。\",\"let arr = [1, 2, 3, 4, 5] arr.find((item) => item > 2) // 结果： 3 arr.findIndex((item) => item > 2) // 结果： 2\"]},\"710\":{\"h\":\"9. 迭代器方法\",\"t\":[\"在 ES6 中，Array 的原型上暴露了 3 个用于检索数组内容的方法：keys()、values()、entries()。keys()方法返回数组索引的迭代器，values()方法返回数组元素的迭代器，entries()方法返回索引值对的迭代器。\",\"使用示例如下（因为这些方法返回的都是迭代器，所以可以将他们的内容通过 Array.from 直接转化为数组实例）：\",\"let array = ['one', 'two', 'three', 'four', 'five'] console.log(Array.from(array.keys())) // [0, 1, 2, 3, 4] console.log(Array.from(array.values())) // [\\\"one\\\", \\\"two\\\", \\\"three\\\", \\\"four\\\", \\\"five\\\"] console.log(Array.from(array.entries())) // [[0, \\\"one\\\"], [1, \\\"two\\\"], [2, \\\"three\\\"], [3, \\\"four\\\"], [4, \\\"five\\\"]]\"]},\"711\":{\"h\":\"10. 迭代方法\",\"t\":[\"ECMAScript 为数组定义了 5 个迭代方法，分别是 every()、filter()、forEach()、map()、some()。这些方法都不会改变原数组。这五个方法都接收两个参数：以每一项为参数运行的函数和可选的作为函数运行上下文的作用域对象（影响函数中的 this 值）。传给每个方法的函数接收三个参数，分别是当前元素、当前元素的索引值、当前元素所属的数对象。\"]},\"712\":{\"h\":\"（1）forEach()\",\"t\":[\"forEach 方法用于调用数组的每个元素，并将元素传递给回调函数。该方法没有返回值，使用示例如下：\",\"let arr = [1, 2, 3, 4, 5] arr.forEach((item, index, arr) => { console.log(index + ':' + item) })\",\"该方法还可以有第二个参数，用来绑定回调函数内部 this 变量（回调函数不能是箭头函数，因为箭头函数没有 this）：\",\"let arr = [1, 2, 3, 4, 5] let arr1 = [9, 8, 7, 6, 5] arr.forEach(function (item, index, arr) { console.log(this[index]) // 9 8 7 6 5 }, arr1)\"]},\"713\":{\"h\":\"（2）map()\",\"t\":[\"map() 方法会返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。该方法按照原始数组元素顺序依次处理元素。该方法不会对空数组进行检测，它会返回一个新数组，不会改变原始数组。使用示例如下：\",\"let arr = [1, 2, 3] arr.map((item) => { return item + 1 }) // 结果： [2, 3, 4]\",\"第二个参数用来绑定参数函数内部的 this 变量：\",\"var arr = ['a', 'b', 'c'] ;[1, 2].map(function (e) { return this[e] }, arr) // 结果： ['b', 'c']\",\"该方法可以进行链式调用：\",\"let arr = [1, 2, 3] arr.map((item) => item + 1).map((item) => item + 1) // 结果： [3, 4, 5]\",\"forEach 和 map 区别如下：\",\"forEach()方法：会针对每一个元素执行提供的函数，对数据的操作会改变原数组，该方法没有返回值；\",\"map()方法：不会改变原数组的值，返回一个新数组，新数组中的值为原数组调用函数处理之后的值；\"]},\"714\":{\"h\":\"（3）filter()\",\"t\":[\"filter()方法用于过滤数组，满足条件的元素会被返回。它的参数是一个回调函数，所有数组元素依次执行该函数，返回结果为 true 的元素会被返回。该方法会返回一个新的数组，不会改变原数组。\",\"let arr = [1, 2, 3, 4, 5] arr.filter((item) => item > 2) // 结果：[3, 4, 5]\",\"可以使用 filter()方法来移除数组中的 undefined、null、NAN 等值\",\"let arr = [1, undefined, 2, null, 3, false, '', 4, 0] arr.filter(Boolean) // 结果：[1, 2, 3, 4]\"]},\"715\":{\"h\":\"（4）every()\",\"t\":[\"该方法会对数组中的每一项进行遍历，只有所有元素都符合条件时，才返回 true，否则就返回 false。\",\"let arr = [1, 2, 3, 4, 5] arr.every((item) => item > 0) // 结果： true\"]},\"716\":{\"h\":\"（5）some()\",\"t\":[\"该方法会对数组中的每一项进行遍历，只要有一个元素符合条件，就返回 true，否则就返回 false。\",\"let arr = [1, 2, 3, 4, 5] arr.some((item) => item > 4) // 结果： true\"]},\"717\":{\"h\":\"11. 其他方法\",\"t\":[\"除了上述方法，遍历数组的方法还有 for...in 和 for...of。下面就来简单看一下。\"]},\"718\":{\"h\":\"（1）for…in\",\"t\":[\"for…in 主要用于对数组或者对象的属性进行循环操作。循环中的代码每执行一次，就会对对象的属性进行一次操作。其使用语法如下：\",\"for (var item in object) { 执行的代码块 }\",\"其中两个参数：\",\"item：必须。指定的变量可以是数组元素，也可以是对象的属性。\",\"object：必须。指定迭代的的对象。\",\"const arr = [1, 2, 3] for (var i in arr) { console.log('键名：', i) console.log('键值：', arr[i]) }\",\"输出结果如下：\",\"键名： 0 键值： 1 键名： 1 键值： 2 键名： 2 键值： 3\",\"需要注意，该方法不仅会遍历当前的对象所有的可枚举属性，还会遍历其原型链上的属性。除此之外，该方法遍历数组时候，遍历出来的是数组的索引值，遍历对象的时候，遍历出来的是键值名。\"]},\"719\":{\"h\":\"（2）for...of\",\"t\":[\"for...of 语句创建一个循环来迭代可迭代的对象。在 ES6 中引入的 for...of 循环，以替代 for...in 和 forEach() ，并支持新的迭代协议。for...of 允许遍历 Arrays（数组）, Strings（字符串）, Maps（映射）, Sets（集合）等可迭代的数据结构等。\",\"for (var item of iterable) { 执行的代码块 }\",\"其中两个参数：\",\"item：每个迭代的属性值被分配给该变量。\",\"iterable：一个具有可枚举属性并且可以迭代的对象。\",\"该方法允许获取对象的键值：\",\"var arr = ['a', 'b', 'c', 'd'] for (let a in arr) { console.log(a) // 0 1 2 3 } for (let a of arr) { console.log(a) // a b c d }\",\"该方法只会遍历当前对象的属性，不会遍历其原型链上的属性。\",\"注意：\",\"for...of 适用遍历 数组/ 类数组/字符串/map/set 等拥有迭代器对象的集合；\",\"它可以正确响应 break、continue 和 return 语句；\",\"for...of 循环不支持遍历普通对象，因为没有迭代器对象。如果想要遍历一个对象的属性，可以用 for-in 循环。\",\"总结，for…of 和 for…in 的区别如下：\",\"for…of 遍历获取的是对象的键值，for…in 获取的是对象的键名；\",\"for… in 会遍历对象的整个原型链，性能非常差不推荐使用，而 for … of 只遍历当前对象不会遍历原型链；\",\"对于数组的遍历，for…in 会返回数组中所有可枚举的属性(包括原型链上可枚举的属性)，for…of 只返回数组的下标对应的属性值；\"]},\"720\":{\"h\":\"（3）flat()\",\"t\":[\"在 ES2019 中，flat()方法用于创建并返回一个新数组，这个新数组包含与它调用 flat()的数组相同的元素，只不过其中任何本身也是数组的元素会被打平填充到返回的数组中：\",\";[1, [2, 3]] .flat() // [1, 2, 3] [(1, [2, [3, 4]])].flat() // [1, 2, [3, 4]]\",\"在不传参数时，flat()默认只会打平一级嵌套，如果想要打平更多的层级，就需要传给 flat()一个数值参数，这个参数表示要打平的层级数：\",\";[1, [2, [3, 4]]].flat(2) // [1, 2, 3, 4]\"]},\"721\":{\"h\":\"三、类数组对象\",\"t\":[\"JavaScript 中一直存在一种类数组的对象，它们不能直接调用数组的方法，但是又和数组比较类似，在某些特定的编程场景中会出现，下面就来看一下什么是类数组。\",\"在 JavaScript 中，主要有以下情况中的对象是类数组：\",\"函数里面的参数对象 arguments；\",\"用 getElementsByTagName/ClassName/Name 获得的 HTMLCollection；\",\"用 querySelector 获得的 NodeList。\"]},\"722\":{\"h\":\"1. 类数组概述\"},\"723\":{\"h\":\"（1）arguments\",\"t\":[\"在日常开发中经常会遇到各种类数组对象，最常见的就是在函数中使用的 arguments，它的对象只定义在函数体中，包括了函数的参数和其他属性。先来看下 arguments 的使用方法：\",\"function foo(name, age, sex) { console.log(arguments) console.log(typeof arguments) console.log(Object.prototype.toString.call(arguments)) } foo('jack', '18', 'male')\",\"可以看到，typeof 这个 arguments 返回的是 object，通过 Object.prototype.toString.call 返回的结果是 [object arguments]，而不是 [object array]，说明 arguments 和数组还是有区别的。\",\"length 属性就是函数参数的长度。另外 arguments 还有一个 callee 属性，下面看看这个 callee 是干什么的：\",\"function foo(name, age, sex) { console.log(arguments.callee) } foo('jack', '18', 'male')\",\"打印结果如下：\",\"ƒ foo(name, age, sex) { console.log(arguments.callee); }\",\"可以看出，输出的就是函数自身，如果在函数内部直接执行调用 callee，那它就会不停地执行当前函数，直到执行到内存溢出。\"]},\"724\":{\"h\":\"（2）HTMLCollection\",\"t\":[\"HTMLCollection 简单来说是 HTML DOM 对象的一个接口，这个接口包含了获取到的 DOM 元素集合，返回的类型是类数组对象，如果用 typeof 来判断的话，它返回的是 object。它是及时更新的，当文档中的 DOM 变化时，它也会随之变化。\",\"下面来 HTMLCollection 最后返回的是什么，在一个有 form 表单的页面中，在控制台中执行下述代码：\",\"var elem1, elem2 // document.forms 是一个 HTMLCollection elem1 = document.forms[0] elem2 = document.forms.item(0) console.log(elem1) console.log(elem2) console.log(typeof elem1) console.log(Object.prototype.toString.call(elem1))\",\"注意：HTML DOM 中的 HTMLCollection 是即时更新的，当其所包含的文档结构发生改变时，它会自动更新。\"]},\"725\":{\"h\":\"（3）NodeList\",\"t\":[\"NodeList 对象是节点的集合，通常是由 querySlector 返回的。NodeList 不是一个数组，也是一种类数组。虽然 NodeList 不是一个数组，但是可以使用 for...of 来迭代。在一些情况下，NodeList 是一个实时集合，也就是说，如果文档中的节点树发生变化，NodeList 也会随之变化。\",\"var list = document.querySelectorAll('input[type=checkbox]') for (var checkbox of list) { checkbox.checked = true } console.log(list) console.log(typeof list) console.log(Object.prototype.toString.call(list))\"]},\"726\":{\"h\":\"2. 类数组应用场景\"},\"727\":{\"h\":\"（1）遍历参数操作\",\"t\":[\"在函数内部可以直接获取 arguments 这个类数组的值，那么也可以对于参数进行一些操作，比如下面这段代码可以将函数的参数默认进行求和操作：\",\"function add() { var sum =0, len = arguments.length; for(var i = 0; i < len; i++){ sum += arguments[i]; } return sum; } add() // 0 add(1) // 1 add(1，2) // 3 add(1,2,3,4); // 10\",\"结合上面这段代码，在函数内部可以将参数直接进行累加操作，以达到预期的效果，参数多少也可以不受限制，根据长度直接计算，返回出最后函数的参数的累加结果，其他操作也类似。\"]},\"728\":{\"h\":\"（2）定义连接字符串函数\",\"t\":[\"可以通过 arguments 这个例子定义一个函数来连接字符串。这个函数唯一正式声明了的参数是一个字符串，该参数指定一个字符作为衔接点来连接字符串。该函数定义如下：\",\"function myConcat(separa) { var args = Array.prototype.slice.call(arguments, 1) return args.join(separa) } myConcat(', ', 'red', 'orange', 'blue') // \\\"red, orange, blue\\\" myConcat('; ', 'elephant', 'lion', 'snake') // \\\"elephant; lion; snake\\\" myConcat('. ', 'one', 'two', 'three', 'four', 'five') // \\\"one. two. three. four. five\\\"\",\"这段代码说明可以传递任意数量的参数到该函数，并使用每个参数作为列表中的项创建列表进行拼接。从这个例子中也可以看出，可以在日常编码中采用这样的代码抽象方式，把需要解决的这一类问题，都抽象成通用的方法，来提升代码的可复用性。\"]},\"729\":{\"h\":\"（3）传递参数\",\"t\":[\"可以借助 apply 或 call 与 arguments 相结合，将参数从一个函数传递到另一个函数：\",\"// 使用 apply 将 foo 的参数传递给 bar function foo() { bar.apply(this, arguments) } function bar(a, b, c) { console.log(a, b, c) } foo(1, 2, 3) //1 2 3\",\"上述代码中，通过在 foo 函数内部调用 apply 方法，用 foo 函数的参数传递给 bar 函数，这样就实现了借用参数的妙用。\"]},\"730\":{\"h\":\"3. 类数组转为数组\"},\"731\":{\"h\":\"（1）借用数组方法\",\"t\":[\"类数组因为不是真正的数组，所以没有数组类型上自带的那些方法，所以就需要利用下面这几个方法去借用数组的方法。比如借用数组的 push 方法，代码如下：\",\"var arrayLike = { 0: 'java', 1: 'script', length: 2, } Array.prototype.push.call(arrayLike, 'jack', 'lily') console.log(typeof arrayLike) // 'object' console.log(arrayLike) // {0: \\\"java\\\", 1: \\\"script\\\", 2: \\\"jack\\\", 3: \\\"lily\\\", length: 4}\",\"可以看到，arrayLike 其实是一个对象，模拟数组的一个类数组，从数据类型上说它是一个对象，新增了一个 length 的属性。还可以看出，用 typeof 来判断输出的是 object，它自身是不会有数组的 push 方法的，这里用 call 的方法来借用 Array 原型链上的 push 方法，可以实现一个类数组的 push 方法，给 arrayLike 添加新的元素。\",\"从打印结果可以看出，数组的 push 方法满足了我们想要实现添加元素的诉求。再来看下 arguments 如何转换成数组：\",\"function sum(a, b) { let args = Array.prototype.slice.call(arguments) // let args = [].slice.call(arguments); // 这样写也是一样效果 console.log(args.reduce((sum, cur) => sum + cur)) } sum(1, 2) // 3 function sum(a, b) { let args = Array.prototype.concat.apply([], arguments) console.log(args.reduce((sum, cur) => sum + cur)) } sum(1, 2) // 3\",\"可以看到，借用 Array 原型链上的各种方法，来实现 sum 函数的参数相加的效果。一开始都是将 arguments 通过借用数组的方法转换为真正的数组，最后都又通过数组的 reduce 方法实现了参数转化的真数组 args 的相加，最后返回预期的结果。\"]},\"732\":{\"h\":\"（2）借用 ES6 方法\",\"t\":[\"还可以采用 ES6 新增的 Array.from 方法以及展开运算符的方法来将类数组转化为数组。那么还是围绕上面这个 sum 函数来进行改变，看下用 Array.from 和展开运算符是怎么实现转换数组的：\",\"function sum(a, b) { let args = Array.from(arguments) console.log(args.reduce((sum, cur) => sum + cur)) } sum(1, 2) // 3 function sum(a, b) { let args = [...arguments] console.log(args.reduce((sum, cur) => sum + cur)) } sum(1, 2) // 3 function sum(...args) { console.log(args.reduce((sum, cur) => sum + cur)) } sum(1, 2) // 3\",\"可以看到，Array.from 和 ES6 的展开运算符，都可以把 arguments 这个类数组转换成数组 args，从而实现调用 reduce 方法对参数进行累加操作。其中第二种和第三种都是用 ES6 的展开运算符，虽然写法不一样，但是基本都可以满足多个参数实现累加的效果。\"]},\"733\":{\"h\":\"四、数组常见操作\"},\"734\":{\"h\":\"1. 数组扁平化\",\"t\":[\"下面再来看看数组的扁平化。所谓扁平化，其实就是将一个嵌套多层的数组 array（嵌套可以是任何层数）转换为只有一层的数组。举个简单的例子，假设有个名为 flatten 的函数可以做到数组扁平化，那么输出效果如下：\",\"let arr = [1, [2, [3, 4，5]]]; console.log(flatten(arr)); // [1, 2, 3, 4，5]\",\"简单来说就是把多维的数组“拍平”，输出最后的一维数组。下面来看看实现 flatten 函数的方式。\"]},\"735\":{\"h\":\"（1）递归实现\",\"t\":[\"普通的递归思路很容易理解，就是通过循环递归的方式，一项一项地去遍历，如果某一项还是一个数组，那么就继续往下遍历，利用递归来实现数组的每一项的连接：\",\"let arr = [1, [2, [3, 4, 5]]] function flatten(arr) { let result = [] for (let i = 0; i < arr.length; i++) { if (Array.isArray(arr[i])) { result = result.concat(flatten(arr[i])) } else { result.push(arr[i]) } } return result } flatten(arr) // [1, 2, 3, 4，5]\",\"可以看到，最后返回的结果是扁平化的结果，这段代码核心就是循环遍历过程中的递归操作，就是在遍历过程中发现数组元素还是数组的时候进行递归操作，把数组的结果通过数组的 concat 方法拼接到最后要返回的 result 数组上，那么最后输出的结果就是扁平化后的数组。\"]},\"736\":{\"h\":\"（2）reduce 函数迭代\",\"t\":[\"从上面的递归函数可以看出，其实就是对数组的每一项进行处理，那么其实也可以用 reduce 来实现数组的拼接，从而简化上面方法的代码，改造后的代码如下：\",\"let arr = [1, [2, [3, 4]]] function flatten(arr) { return arr.reduce(function (prev, next) { return prev.concat(Array.isArray(next) ? flatten(next) : next) }, []) } console.log(flatten(arr)) // [1, 2, 3, 4，5]\",\"这段代码在控制台执行之后，也可以得到想要的结果。上面我们说了 reduce 的第一个参数用来返回最后累加的结果，思路和第一种递归方法是一样的，但是通过使用 reduce 之后代码变得更简洁了，也同样解决了扁平化的问题。\"]},\"737\":{\"h\":\"（3）扩展运算符实现\",\"t\":[\"这个方法的实现，采用了扩展运算符和 some 的方法，两者共同使用，达到数组扁平化的目的：\",\"let arr = [1, [2, [3, 4]]] function flatten(arr) { while (arr.some((item) => Array.isArray(item))) { arr = [].concat(...arr) } return arr } console.log(flatten(arr)) // [1, 2, 3, 4，5]\",\"从执行的结果中可以发现，先用数组的 some 方法把数组中仍然是组数的项过滤出来，然后执行 concat 操作，利用 ES6 的展开运算符，将其拼接到原数组中，最后返回原数组，达到了预期的效果。\"]},\"738\":{\"h\":\"（4）split 和 toString\",\"t\":[\"可以通过 split 和 toString 两个方法来共同实现数组扁平化，由于数组会默认带一个 toString 的方法，所以可以把数组直接转换成逗号分隔的字符串，然后再用 split 方法把字符串重新转换为数组，如下面的代码所示：\",\"let arr = [1, [2, [3, 4]]] function flatten(arr) { return arr.toString().split(',') } console.log(flatten(arr)) // [1, 2, 3, 4，5]\",\"通过这两个方法可以将多维数组直接转换成逗号连接的字符串，然后再重新分隔成数组。\"]},\"739\":{\"h\":\"（5）ES6 中的 flat\",\"t\":[\"我们还可以直接调用 ES6 中的 flat 方法来实现数组扁平化。flat 方法的语法：arr.flat([depth])\",\"其中 depth 是 flat 的参数，depth 是可以传递数组的展开深度（默认不填、数值是 1），即展开一层数组。如果层数不确定，参数可以传进 Infinity，代表不论多少层都要展开：\",\"let arr = [1, [2, [3, 4]]] function flatten(arr) { return arr.flat(Infinity) } console.log(flatten(arr)) // [1, 2, 3, 4，5]\",\"可以看出，一个嵌套了两层的数组，通过将 flat 方法的参数设置为 Infinity，达到了我们预期的效果。其实同样也可以设置成 2，也能实现这样的效果。在编程过程中，如果数组的嵌套层数不确定，最好直接使用 Infinity，可以达到扁平化的效果。\"]},\"740\":{\"h\":\"（6）正则和 JSON 方法\",\"t\":[\"在第 4 种方法中已经使用 toString 方法，其中仍然采用了将 JSON.stringify 的方法先转换为字符串，然后通过正则表达式过滤掉字符串中的数组的方括号，最后再利用 JSON.parse 把它转换成数组：\",\"let arr = [1, [2, [3, [4, 5]]], 6] function flatten(arr) { let str = JSON.stringify(arr) str = str.replace(/(\\\\[|\\\\])/g, '') str = '[' + str + ']' return JSON.parse(str) } console.log(flatten(arr)) // [1, 2, 3, 4，5]\",\"可以看到，其中先把传入的数组转换成字符串，然后通过正则表达式的方式把括号过滤掉，匹配规则是：全局匹配（g）左括号或者右括号，将它们替换成空格，最后返回处理后的结果。之后拿着正则处理好的结果重新在外层包裹括号，最后通过 JSON.parse 转换成数组返回。\"]},\"741\":{\"h\":\"2. 数组去重\",\"t\":[\"去除无序数组中的重复元素并且返回新的无重复数组。\"]},\"742\":{\"h\":\"（1）Set 实现\",\"t\":[\"ES6 方法（使用数据结构集合）：\",\"const array = [1, 2, 3, 5, 1, 5, 9, 1, 2, 8] Array.from(new Set(array)) // [1, 2, 3, 5, 9, 8]\"]},\"743\":{\"h\":\"（2）map 实现\",\"t\":[\"ES5 方法：使用 map 存储不重复的数字\",\"const array = [1, 2, 3, 5, 1, 5, 9, 1, 2, 8] function uniqueArray(array) { let map = {} let res = [] for (var i = 0; i < array.length; i++) { if (!map.hasOwnProperty([array[i]])) { map[array[i]] = 1 res.push(array[i]) } } return res } uniqueArray(array) // [1, 2, 3, 5, 9, 8]\"]},\"744\":{\"h\":\"3. 数组求和\"},\"745\":{\"h\":\"（1）reduce 实现\",\"t\":[\"let arr = [1, 2, 3, 4, 5, 6] let sum = arr.reduce((total, i) => (total += i), 0) console.log(sum) // 21\"]},\"746\":{\"h\":\"（2）递归实现\",\"t\":[\"let arr = [1, 2, 3, 4, 5, 6] function add(arr) { if (arr.length == 1) return arr[0] return arr[0] + add(arr.slice(1)) } console.log(add(arr)) // 21\"]},\"747\":{\"h\":\"4. 数组乱序\"},\"748\":{\"h\":\"（1）正向遍历\",\"t\":[\"主要的实现思路就是：\",\"取出数组的第一个元素，随机产生一个索引值，将该第一个元素和这个索引对应的元素进行交换；\",\"第二次取出数据数组第二个元素，随机产生一个除了索引为 1 的之外的索引值，并将第二个元素与该索引值对应的元素进行交换；\",\"按照上面的规律执行，直到遍历完成。\",\"const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] for (var i = 0; i < arr.length; i++) { const randomIndex = Math.round(Math.random() * (arr.length - 1 - i)) + i ;[arr[i], arr[randomIndex]] = [arr[randomIndex], arr[i]] } console.log(arr)\"]},\"749\":{\"h\":\"（2）倒序遍历\",\"t\":[\"倒序遍历和上面实现思路类似，代码如下：\",\"const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] let length = arr.length, randomIndex, temp while (length) { randomIndex = Math.floor(Math.random() * length--) temp = arr[length] arr[length] = arr[randomIndex] arr[randomIndex] = temp } console.log(arr)\"]},\"750\":{\"c\":[\"Javascript\"]},\"751\":{\"c\":[\"数组\"]},\"752\":{\"h\":\"深拷贝与浅拷贝\"},\"753\":{\"h\":\"1.浅拷贝\",\"t\":[\"浅拷贝是指，一个新的对象对原始对象的属性值进行精确地拷贝，如果拷贝的是基本数据类型，拷贝的就是基本数据类型的值，如果是引用数据类型，拷贝的就是内存地址。如果其中一个对象的引用内存地址发生改变，另一个对象也会发生变化。\"]},\"754\":{\"h\":\"（1）直接赋值\",\"t\":[\"let arr1 = [1, 2, 3] let arr2 = arr1 new2[0] = 0 console.log(arr1) // [0, 2, 3] console.log(arr1) // [0, 2, 3] console.log(arr1 === arr2) // true\"]},\"755\":{\"h\":\"（2）Object.assign()\",\"t\":[\"object.assign 是 ES6 中 object 的一个方法，该方法可以用于 JS 对象的合并等多个用途，其中一个用途就是可以进行浅拷贝。该方法接受的第一个参数是目标对象，其余参数是源对象，用法：Object.assign(target, source_1, ···)，该方法可以实现浅拷贝，也可以实现一维对象的深拷贝。\",\"注意：\",\"如果目标对象和源对象有同名属性，或者多个源对象有同名属性，则后面的属性会覆盖前面的属性。\",\"如果该函数只有一个参数，当参数为对象时，直接返回该对象；当参数不是对象时，会先将参数转为对象然后返回。\",\"因为 null 和 undefined 不能转化为对象，所以第一个参数不能为 null 或 undefined，会报错。\",\"它不会拷贝对象的继承属性，不会拷贝对象的不可枚举的属性，可以拷贝 Symbol 类型的属性。\",\"let target = { a: 1 } let object2 = { b: 2 } let object3 = { c: 3 } Object.assign(target, object2, object3) console.log(target) // {a: 1, b: 2, c: 3}\"]},\"756\":{\"h\":\"（3）扩展运算符\",\"t\":[\"使用扩展运算符可以在构造字面量对象的时候，进行属性的拷贝。语法：let cloneObj = { ...obj };\",\"let obj1 = { a: 1, b: { c: 1 } } let obj2 = { ...obj1 } obj1.a = 2 console.log(obj1) //{a:2,b:{c:1}} console.log(obj2) //{a:1,b:{c:1}} obj1.b.c = 2 console.log(obj1) //{a:2,b:{c:2}} console.log(obj2) //{a:1,b:{c:2}}\",\"扩展运算符 和 object.assign 有同样的缺陷，也就是实现的浅拷贝的功能差不多，但是如果属性都是基本类型的值，使用扩展运算符进行浅拷贝会更加方便。\"]},\"757\":{\"h\":\"（4）数组方法实现数组浅拷贝\"},\"758\":{\"h\":\"（1）Array.prototype.slice\",\"t\":[\"slice()方法是 JavaScript 数组的一个方法，这个方法可以从已有数组中返回选定的元素：用法：array.slice(start, end)，该方法不会改变原始数组。该方法有两个参数，两个参数都可选，如果两个参数都不写，就可以实现一个数组的浅拷贝。\",\"let arr = [1, 2, 3, 4] console.log(arr.slice()) // [1,2,3,4] console.log(arr.slice() === arr) //false\"]},\"759\":{\"h\":\"（2）Array.prototype.concat\",\"t\":[\"concat() 方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组。该方法有两个参数，两个参数都可选，如果两个参数都不写，就可以实现一个数组的浅拷贝。\",\"let arr = [1, 2, 3, 4] console.log(arr.concat()) // [1,2,3,4] console.log(arr.concat() === arr) //false\"]},\"760\":{\"h\":\"（5）手写实现浅拷贝\",\"t\":[\"根据以上对浅拷贝的理解，实现一个浅拷贝的大致思路分为两点：\",\"对基础类型做一个最基本的一个拷贝；\",\"对引用类型开辟一个新的存储，并且拷贝一层对象属性。\",\"// 浅拷贝的实现; function shallowCopy(object) { // 只拷贝对象 if (!object || typeof object !== 'object') return // 根据 object 的类型判断是新建一个数组还是对象 let newObject = Array.isArray(object) ? [] : {} // 遍历 object，并且判断是 object 的属性才拷贝 for (let key in object) { if (object.hasOwnProperty(key)) { newObject[key] = object[key] } } return newObject }\"]},\"761\":{\"h\":\"2. 深拷贝\",\"t\":[\"深拷贝是指，对于简单数据类型直接拷贝他的值，对于引用数据类型，在堆内存中开辟一块内存用于存放复制的对象，并把原有的对象类型数据拷贝过来，这两个对象相互独立，属于两个不同的内存地址，修改其中一个，另一个不会发生改变。\"]},\"762\":{\"h\":\"（1）Object.assign()\",\"t\":[\"Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。\",\"let obj1 = { person: { name: 'kobe', age: 41 }, sports: 'basketball' } let obj2 = Object.assign({}, obj1) obj2.person.name = 'wade' obj2.sports = 'football' console.log(obj1) // { person: { name: 'wade', age: 41 }, sports: 'basketball' }\"]},\"763\":{\"h\":\"（2）JSON.stringify()\",\"t\":[\"JSON.parse(JSON.stringify(obj))是目前比较常用的深拷贝方法之一，它的原理就是利用 JSON.stringify 将 js 对象序列化（JSON 字符串），再使用 JSON.parse 来反序列化(还原)js 对象。\",\"这个方法可以简单粗暴的实现深拷贝，但是还存在问题，拷贝的对象中如果有函数，undefined，symbol，当使用过 JSON.stringify()进行处理之后，都会消失。\",\"let obj1 = { a: 0, b: { c: 0, }, } let obj2 = JSON.parse(JSON.stringify(obj1)) obj1.a = 1 obj1.b.c = 1 console.log(obj1) // {a: 1, b: {c: 1}} console.log(obj2) // {a: 0, b: {c: 0}}\",\"使用该方法时，需要注意以下几点：\",\"无法拷贝不可枚举的属性；\",\"无法拷贝对象的原型链；\",\"拷贝 RegExp 引用类型会变成空对象；\",\"对象中含有 NaN、Infinity 以及 -Infinity，JSON 序列化的结果会变成 null；\",\"无法拷贝对象的循环应用，即对象成环 (obj[key] = obj)。\"]},\"764\":{\"h\":\"（3）函数库 lodash 的_.cloneDeep 方法\",\"t\":[\"该函数库也有提供_.cloneDeep 用来做 Deep Copy\",\"var _ = require('lodash') var obj1 = { a: 1, b: { f: { g: 1 } }, c: [1, 2, 3], } var obj2 = _.cloneDeep(obj1) console.log(obj1.b.f === obj2.b.f) // false\"]},\"765\":{\"h\":\"（4）手写实现深拷贝函数\",\"t\":[\"function clone(source) { //判断source是不是对象 if (source instanceof Object == false) return source //判断source是对象还是数组 let target = Array.isArray(source) ? [] : {} for (let i in source) { if (source.hasOwnProperty(i)) { //判断数据i的类型 if (typeof source[i] === 'object') { target[i] = clone(source[i]) } else { target[i] = source[i] } } } return target } console.log(clone({ b: { c: { d: 1 } } })) // {b: {c: {d: 1}}})\",\"虽然利用递归能实现一个深拷贝，但是同上面的 JSON.stringfy 一样，还是有一些问题没有完全解决，例如：\",\"这个深拷贝函数并不能复制不可枚举的属性以及 Symbol 类型；\",\"这种方法只是针对普通的引用类型的值做递归复制，而对于 Array、Date、RegExp、Error、Function 这样的引用类型并不能正确地拷贝；\",\"对象的属性里面成环，即循环引用没有解决。\"]},\"766\":{\"h\":\"3. 解决递归爆栈\",\"t\":[\"我们使用递归的方法对数据进行拷贝，但是这也会出现一个问题，递归的深度的深度太深就会引发栈内存的溢出，我们使用下面的方法来解决递归爆栈的问题：将待拷贝的对象放入栈中，循环直至栈为空。\",\"function cloneLoop(x) { const root = {} // 栈 const loopList = [ { parent: root, key: undefined, data: x, }, ] while (loopList.length) { // 深度优先 const node = loopList.pop() const parent = node.parent const key = node.key const data = node.data // 初始化赋值目标，key为undefined则拷贝到父元素，否则拷贝到子元素 let res = parent if (typeof key !== 'undefined') { res = parent[key] = {} } for (let k in data) { if (data.hasOwnProperty(k)) { if (typeof data[k] === 'object') { // 下一次循环 loopList.push({ parent: res, key: k, data: data[k], }) } else { res[k] = data[k] } } } } return root }\",\"这样我们就解决了递归爆栈的问题，但是循环引用的问题依然存在。\"]},\"767\":{\"h\":\"4. 解决循环引用\",\"t\":[\"举例：当 a 对象的中的某属性值为 a 对象，这样就会造成循环引用。 我们使用暴力破解的方法来解决循环引用的问题。 思路：引入一个数组 uniqueList 用来存储已经拷贝的数组，每次循环遍历时，先判断对象是否在 uniqueList 中了，如果在的话就不执行拷贝逻辑了\",\"function cloneForce(x) { const uniqueList = [] // 用来去重 let root = {} const loopList = [ { parent: root, key: undefined, data: x, }, ] while (loopList.length) { const node = loopList.pop() const parent = node.parent const key = node.key const data = node.data // 初始化赋值目标，key为undefined则拷贝到父元素，否则拷贝到子元素 let res = parent if (typeof key !== 'undefined') { res = parent[key] = {} } // 数据已经存在 let uniqueData = find(uniqueList, data) if (uniqueData) { parent[key] = uniqueData.target continue } // 数据不存在 // 保存源数据，在拷贝数据中对应的引用 uniqueList.push({ source: data, target: res, }) for (let k in data) { if (data.hasOwnProperty(k)) { if (typeof data[k] === 'object') { loopList.push({ parent: res, key: k, data: data[k], }) } else { res[k] = data[k] } } } } return root } //find函数用来遍历uniqueList function find(arr, item) { for (let i = 0; i < arr.length; i++) { if (arr[i].source === item) { return arr[i] } } return null }\"]},\"768\":{\"h\":\"5. 总结\",\"t\":[\"浅拷贝：浅拷贝指的是将一个对象的属性值复制到另一个对象，如果有的属性的值为引用类型的话，那么会将这个引用的地址复制给对象，因此两个对象会有同一个引用类型的引用。浅拷贝可以使用 Object.assign 和展开运算符来实现。\",\"深拷贝：深拷贝相对浅拷贝而言，如果遇到属性值为引用类型的时候，它新建一个引用类型并将对应的值复制给它，因此对象获得的一个新的引用类型而不是一个原有类型的引用。深拷贝对于一些对象可以使用 JSON 的两个函数来实现，但是由于 JSON 的对象格式比 js 的对象格式更加严格，所以如果属性值里边出现函数或者 Symbol 类型的值时，会转换失败\",\"// 浅拷贝的实现; function shallowCopy(object) { // 只拷贝对象 if (!object || typeof object !== 'object') return // 根据 object 的类型判断是新建一个数组还是对象 let newObject = Array.isArray(object) ? [] : {} // 遍历 object，并且判断是 object 的属性才拷贝 for (let key in object) { if (object.hasOwnProperty(key)) { newObject[key] = object[key] } } return newObject } // 深拷贝的实现; function deepCopy(object) { if (!object || typeof object !== 'object') return let newObject = Array.isArray(object) ? [] : {} for (let key in object) { if (object.hasOwnProperty(key)) { newObject[key] = typeof object[key] === 'object' ? deepCopy(object[key]) : object[key] } } return newObject }\"]},\"769\":{\"c\":[\"Javascript\"]},\"770\":{\"c\":[\"深拷贝与浅拷贝\"]},\"771\":{\"h\":\"类型转换\"},\"772\":{\"h\":\"1. 什么是类型转换？\",\"t\":[\"Javascript 是一种弱类型语言，这意味着变量是没有明确类型的，而是由 JavaScript 引擎在编译时隐式完成。类型转换是将一种数据类型转换为另一种数据类型，例如：\",\"20 + \\\"twenty\\\" // => \\\"20twenty\\\" \\\"10\\\" * \\\"10\\\" // => 100 2 - \\\"x\\\"\",\"Javascript 使用严格相等（=）和宽松相等（）来测试两个值的相等性，类型转换仅在使用宽松相等运算符时发生。当使用 === 测试严格相等时，要比较的变量的类型和值都必须相同，例如：\",\"10 === 10 // true NaN === NaN // false\",\"在上面的代码中，10和10都是数字并且是完全相等的，所以正如预期的那样返回了true，两个 NaN 永远不会相等。当使用 == 测试宽松相等时，可能会发生隐式转换：\",\"'20' == 20 // true false == 0 // true\",\"对于任何数据类型，无论是原始类型还是对象，都可以进行类型转换。尽管原始类型和对象的转换逻辑各不相同，但是都只能转换为三种类型：字符串（string）、数字（number）、布尔值（boolean）。\",\"JavaScript 中的类型转换有两种方式：\",\"隐式类型转换：由 JavaScript 编译器完成的自动类型转换。\",\"显式类型转换：由开发人员完成的手动类型转换。\",\"下面先来看看 JavaScript 中的显式和隐式类型转换。\"]},\"773\":{\"h\":\"（1）显示类型转换\",\"t\":[\"我们可以通过 JavaScript 内置的一些 API 将一种类型转换为另一种类型，这称为显式类型转化。执行显式类型转换的最简单方法是使用 Boolean()、Number() 和 String()、parseInt()等函数，例如：\",\"String(2 - true); // '1' '56' === String(56); // true Number('2350e-2'); // '23.5' Number('23') + 7; // 30 Boolean(''); // false Boolean(2) === true; //true\"]},\"774\":{\"h\":\"（2）隐式类型转换\",\"t\":[\"隐式类型转换是将一种数据类型转换为另一种数据类型（确保在相同数据类型之间完成操作）以使运算符或函数正常工作，这种转换是由 JavaScript 编译器自动完成的，隐式类型转换也称为类型强制。例如：\",\"'25' + 15; // '2515' 23 * '2'; // 46 23 - true; // 22 true - null; // 1 false + undefined; // NaN const arr = []; if(arr) { console.log('Hello World') };\",\"下面这些常见的操作会触发隐式地类型转换，编写代码时要格外注意：\",\"运算相关的操作符：+、-、+=、++、* 、/、%、<<、& 等。\",\"数据比较相关的操作符： >、<、== 、<=、>=、===。\",\"逻辑判断相关的操作符： &&、!、||、三目运算符。\"]},\"775\":{\"h\":\"+ 运算符\",\"t\":[\"/* 一个操作数 */ + x // 将x转化为数字, 如果不能转化为数组将输出NaN + \\\"1234string\\\" // NaN + 1 // 1 + '1' // 1 + true // 1 + undefined // NaN + null // 0 + new Date() // 1660493819396 /* 两个操作数 */ a + b // 1. 如果其中任何一个是对象，则先将其转换为原始类型 {} + {} // '[object Object][object Object]' [] + [] // '' [] + new Date() // 'Mon Aug 15 2022 00:18:18 GMT+0800 (中国标准时间)' // 2. 如果一个是字符串，则将另一个转换为字符串 1 + '' // '1' '' + 1 // '1' '' + true // 'true' // 3. 否则，将两者都转换为数字 1 + true // 2 true + true // 2\"]},\"776\":{\"h\":\"-、*、/、++、--\",\"t\":[\"// 将一个或多个值转换为数字 - '1' // -1 [] - 1 // -1 [] - {} // NaN\"]},\"777\":{\"h\":\"==、!=\",\"t\":[\"// 两个操作数 a == b // 1. 如果一个是 `null` 而另一个是 `undefined`，它们是相等的 null == undefined // true // 2. 如果一个是数字，另一个是字符串，将字符串转换为数字，再比较 1 == '1' // true // 3. 如果其中一个是布尔值，将其转换为数字，再次比较 true == 1 // true false == 0 // true // 4. 如果一个是对象，另一个是数字或字符串，将对象转换为原始类型，再次比较 [1] == 1 // true ['1'] == '1' // true\"]},\"778\":{\"h\":\">、>=、<、<=\",\"t\":[\"// 两个操作数 a > b // 1. 如果其中一个是对象，则将其转换为原始类型，再次比较 [2] > 1 // true // 2. 如果两者都是字符串，使用字母顺序比较它们 'b' > 'a' // true // 3. 如果其中一个是数字，则将一个或两个非数字转换为数字 '2' > 1 // true\"]},\"779\":{\"h\":\"in\",\"t\":[\"/* 如果左操作数不是字符串，则将其转换为字符串 */ a in b '1' in {1: ''} // true 1 in {1: 'a'} // true 1 in ['a', 'b'] // true\"]},\"780\":{\"h\":\"2. 常见类型转换\"},\"781\":{\"h\":\"（1）字符串转换\",\"t\":[\"将数据类型转换为字符串称为字符串转换，可以使用 String() 函数将数据类型显式转换为字符串。当一个操作数是字符串时，可以通过使用 + 运算符来触发隐式字符串转换。\"]},\"782\":{\"h\":\"数字 => 字符串\",\"t\":[\"Number对象的 toString() 方法会返回指定 Number 对象的字符串表示形式。String()和 new String() 会把对象的值转换为字符串。\",\"String(20); // '20' String(10 + 40); // '50' (10 + 40).toString(); // '50' new String(10 + 20); // '30'\"]},\"783\":{\"h\":\"布尔值 => 字符串\",\"t\":[\"String() 和 toString() 方法会将布尔值转化为对应的字符串形式。\",\"String(true); // 'true' String(false); // 'false' true.toString() // 'true' false.toString() // \\\"false\\\"\"]},\"784\":{\"h\":\"数组 => 字符串\",\"t\":[\"String() 方法会将数组元素通过逗号连接起来，无论嵌套多少层，都会将其展开并返回元素拼接好的字符串。如果是空数字，会返回空字符串：\",\"String([1, 2, 3]); // '1,2,3' String([1, 2, 3, [4, [5]]]); // '1,2,3,4,5' String([1, 2, 3, [4, [5, {}]]]); // '1,2,3,4,5,[object Object]' String([]); // ''\"]},\"785\":{\"h\":\"对象 => 字符串\",\"t\":[\"使用 String() 方法会将对象转化为 '[object Object]'，无论对象是否为空对象：\",\"String({name: \\\"Hello\\\"}); // '[object Object]'\"]},\"786\":{\"h\":\"null / undefined / NaN => 字符串\",\"t\":[\"使用 String() 方法会将 null、undefined、NaN 转化为其对应的字符串形式：\",\"String(undefined); // 'undefined' String(null); // 'null' String(NaN); // 'NaN'\"]},\"787\":{\"h\":\"日期 => 字符串\",\"t\":[\"String(new Date('2022-08-20')) // 'Sat Aug 20 2022 08:00:00 GMT+0800 (中国标准时间)'\"]},\"788\":{\"h\":\"隐式转换\",\"t\":[\"当任何数据类型使用+运算符与字符串连接时会发生到字符串的转换（隐式转换）:\",\"\\\"25\\\" + 56; // '2556' \\\"25\\\" + null; // '25null' \\\"Hello \\\" + undefined; // 'Hello undefined' \\\"25\\\" + false; // '25fasle' \\\"25\\\" + {}; // '25[object Object]' \\\"25\\\" + [10]; // '2510'\",\"所以，当我们想要创建一个操作并且操作数类型之一是字符串时，应该小心使用类型强制转换。\"]},\"789\":{\"h\":\"（2）布尔转换\",\"t\":[\"将数据类型转换为布尔值称为布尔转换。这种转换既可以由 Boolean() 函数显式完成，也可以在逻辑上下文中隐式完成（如if/else ）或通过使用逻辑运算符（ ||、&&、! ）触发。\"]},\"790\":{\"h\":\"字符串 => 布尔值\",\"t\":[\"使用 Boolean() 方法转化字符串时，只有当字符串为空时会返回false，其他情况都会返回 true：\",\"Boolean('hello'); // true Boolean(' '); // true Boolean(''); // false\"]},\"791\":{\"h\":\"数字 => 布尔值\",\"t\":[\"使用 Boolean() 方法转化数字时，只有 0、-0 或 NaN 会转化为 false，其他情况会返回 true：\",\"Boolean(-123); // true Boolean(123); // true Boolean(0); // false Boolean(-0); // false Boolean(NaN); // false\"]},\"792\":{\"h\":\"数组 / 对象 => 布尔值\",\"t\":[\"使用 Boolean() 方法转化数组或对象时，无论数组和对象是否有内容，都会返回true：\",\"Boolean([1, 2, 3]); // true Boolean([]); // true Boolean({}); // true Boolean({'hello': 'world'}); // true\"]},\"793\":{\"h\":\"null / undefined => 布尔值\",\"t\":[\"使用 Boolean() 方法转化null或undefined时，都始终返回 false：\",\"Boolean(undefined); // false Boolean(null); // false\"]},\"794\":{\"h\":\"隐式转换\",\"t\":[\"在数学运算中，true 转换为 1，false 转换为 0：\",\"true + 5; // 6 false + 5; // 5 5 - true; // 5 5 - false; // 4\"]},\"795\":{\"h\":\"逻辑运算符、逻辑上下文\",\"t\":[\"// 如果其中一个不是布尔值，则将其转换为布尔值 Boolean( null || undefined || 0 || -0 || NaN || '' ) // false Boolean( 1 && 'a' && { } && [] && [0] && function(){} ) // true true && false // false true && true // true true || false // true true || !false // true\",\"注意，逻辑运算符，例如 || 或 && 内部进行布尔转换，但实际上返回原始操作数的值，即使它们不是布尔值。\",\"'hello' && 123; // 123\",\"可以使用双感叹号（!!）来将变量转为为布尔值：\",\"!!0 // false !!\\\"\\\" // false !!\\\" \\\" // true !!{} // true !![] // true !!true // true\",\"if、else if、while、do/while 和 for 使用与 &&、||、! 相同的隐式类型转换方式（逻辑表达式）。\"]},\"796\":{\"h\":\"（3）数字转换\",\"t\":[\"将数据类型转换为数字称为数字转换，可以使用Number()、parseInt()、parseFloat()等方法将数据类型显式转换为数字。当一个值不能被强制转换为一个数字时，就会返回 NaN。\"]},\"797\":{\"h\":\"字符串 => 数字\",\"t\":[\"当把字符串转换为数字时，JavaScript 引擎首先会修剪前导和后置空格、\\\\n、\\\\t 字符，如果修剪后的字符串不代表有效数字，则返回 NaN。 如果字符串为空，则返回 0。\",\"Number('123'); // 123 Number(\\\"-12.34\\\") // -12.34 Number(\\\"12s\\\"); // NaN Number(\\\"\\\\n\\\") // 0 parseInt(' 203px'); // 203 parseInt('10.000') // 10 parseInt('10.20') // 10 parseFloat('203.212px'); // 203.212 parseFloat('10.20') // 10.2 parseFloat('10.81') // 10.81\",\"可以看到，parseInt 函数会从字符串中读取一个数字并删除它后面所有字符，但是如果数字前面有字符（空格除外），那么它将输出 NaN。\"]},\"798\":{\"h\":\"布尔值 => 数字\",\"t\":[\"当使用 Number() 将布尔值转化为数字时，true 会转化为 1，false 会转化为 0。\",\"Number(true); // 1 Number(false); // 0\"]},\"799\":{\"h\":\"null => 数字\",\"t\":[\"当使用 Number() 将 null 转化为数字时，会返回 0：\",\"Number(null); // 0 null + 5; // 5\"]},\"800\":{\"h\":\"undefined / 数组 / 对象 / NaN => 数字\",\"t\":[\"当使用 Number() 将 undefined、数组、对象、NaN 转化为数字时，会返回 NaN：\",\"Number(undefined); // NaN Number([1, 2, 3]) // NaN Number({}) // NaN Number(NaN) // NaN\"]},\"801\":{\"h\":\"数组元素\",\"t\":[\"可以使用map遍历数组元素，并使用需要的类型来进行类型转换：\",\"[\\\"1\\\", \\\"9\\\", \\\"-9\\\", \\\"0.003\\\", \\\"yes\\\"].map(Number); // 输出结果：[1, 9, -9, 0.003, NaN]\"]},\"802\":{\"h\":\"特殊规则\",\"t\":[\"在表达式中，当我们将 == 运算符应用于 null 或 undefined 时，不会发生数字转换。 此外，null 只等于 null 或 undefined，不能等于其他任何值：\",\"null == null; // true null == 0; // false null == undefined; // true undefined == undefined // true\",\"根据运算符优先级，+ 运算符具有从左到右的关联性，因此如果有一个表达式 2 + 3 + '4' + 'number' ，则操作按以下方式完成：\",\"2 + 3 + '4' + 'number' ==> 5 + '4' + 'number' // 数字 5 被隐式转换为字符串，然后连接起来 ==> '54' + 'number' ==> '54number'\",\"NaN 不等于任何其他类型，甚至它本身：\",\"NaN == NaN // false\"]},\"803\":{\"h\":\"3. Symbol 类型转换\",\"t\":[\"Symbol 只能进行显式转换，不能进行隐式转换。也就是说，Symbol不能被强制转换为字符串或数字，这样它们就不会被意外地用作本来应该表现为 Symbol 的属性。\",\"const mySymbol = Symbol.for(\\\"mySymbol\\\"); const str = String(mySymbol); console.log(str); // 'Symbol(mySymbol)'\",\"当使用 console.log() 来打印 symbol 时，它之所以有效，是因为 console.log() 在 symbol 上调用了 String() 方法以创建可用的结果。\",\"如果尝试直接使用字符串连接 symbol，它将抛出TypeError：\",\"const mySymbol = Symbol.for(\\\"mySymbol\\\"); const sum = mySymbol + \\\"\\\"; console.log(sum); // Uncaught TypeError: Cannot convert a Symbol value to a string\",\"将 mySymbol 连接到字符串需要首先将 mySymbol 转换为字符串，并且在检测到强制转换时会抛出错误，从而阻止以这种方式使用它。\",\"同样，我们不能将 symbol 强制转换为数字，所有数学运算符在与符号一起使用时都会引发错误：\",\"const mySymbol = Symbol.for(\\\"mySymbol\\\"); const factor = mySymbol / 2; console.log(factor); // Uncaught TypeError: Cannot convert a Symbol value to a number\"]},\"804\":{\"h\":\"4. 对象类型转换\",\"t\":[\"介绍完了基本数组类型的转化，下面来看看对象类型的转化。例如，当执行 obj_1 + obj_2 或者 obj_1 - obj_2时，都会先将对象转换为原始类型，然后将其转换为最终类型。当然，这里的转化仍然只有三种类型：数字、字符串和布尔值。\",\"对象通过内部的 ToPrimitive 方法将其转换为原始类型，该算法允许我们根据使用对象的上下文来选择应如何转换对象。从概念上讲，ToPrimitive 算法可以分为两部分：Hints 和 Object-to-primitive 转换方法。\"]},\"805\":{\"h\":\"（1）Hints\",\"t\":[\"Hints 是 ToPrimitive 算法用于确定对象在特定上下文中应转换为什么的信号。有三种情况：\",\"string：在操作需要字符串的上下文中，如果可以转换为字符串，例如 alert() 或内置 String() 函数：\",\"alert(obj); String(obj) // 使用对象作为属性key值 anotherObj[obj] = 1000;\",\"number：如果可以进行这种转换，则在操作需要数字的上下文中：\",\"// 显示转换 let num = Number(obj); // 数学（二进制加号除外） let x = +obj; // 一元加 let difference = Date1 - Date2; // 日期对象 // 对象大小比较 let less = Obj1 < obj2;\",\"default：在极少数情况下发生，不确定需要什么类型。例如，二元 + 运算符既适用于字符串（连接它们）也适用于数字（添加它们）。在这种情况下，对象可以转换为字符串或数字。 或者当使用宽松相等 == 运算符将对象与字符串、数字或 symbol 进行比较时。\",\"// 二元加 let sum = obj1 + obj2; // obj == string/number/symbol if (obj == 10 ) { ... };\"]},\"806\":{\"h\":\"（2）Methods\",\"t\":[\"在 ToPrimitive 算法根据 Hints 确定对象应转换为的原始值类型之后。 然后使用 Object-to-primitive 转换方法将对象转换为原始值。有三种情况：\",\"toString/valueOf：toString() 和 valueOf() 被 JavaScript 中的所有对象继承。 它们仅用于对象到原始值的转换。 ToPrimitive 算法首先会尝试 toString() 方法。 如果定义了方法，它返回一个原始值，那么 JavaScript 使用原始值（即使它不是字符串）。 如果toString() 返回一个对象或不存在，那么 JavaScript 会尝试使用 valueOf() 方法，如果该方法存在并返回一个原始值，JavaScript 将使用该值。 否则，转换失败并提示 TypeError。\",\"toString -> valueOf：用于 Hints 为string 的情况。\",\"valueOf -> toString：其他情况。\",\"let Person = { name: \\\"Mary\\\", age: 22, // hint 是 \\\"string\\\" toString() { return `{name: \\\"${this.name}\\\"}`; }, // hint 是 \\\"number\\\" 或 \\\"default\\\" valueOf() { return this.age; } }; alert(Person); // toString -> {name: \\\"Mary\\\"} alert(+Person); // valueOf -> 22 alert(Person + 10); // valueOf -> 32\",\"在上面的代码中，Person 变成了一个对象字符串或数字，具体取决于转换上下文。 toString() 方法用于 Hints = \\\"string\\\" 的转换，valueOf() 用于其他情况（Hints 为“number”或“default”）。\",\"你可能希望在一个地方处理所有转换。 在这种情况下，只能像这样实现 toString() 方法：\",\"let Person = { name: \\\"Mary\\\", toString() { return this.name; } }; alert(Person); // toString -> Mary alert(Person + 1000); // toString -> Mary1000\",\"Symbol.toPrimitive：与 toString() 和 valueOf() 方法不同，Symbol.toPrimitive 允许覆盖 JavaScript 中的默认对象到原始值的转换（其中 toString() 和 valueOf 方法由 ToPrimitive 算法使用）并定义我们希望如何将对象转换为原始类型的值。 为此，需要使用此 Symbol 名称定义一个方法，如下所示：\",\"obj[Symbol.toPrimitive] = function(hint) { // 返回原始类型值 // hint 等于 \\\"string\\\", \\\"number\\\", \\\"default\\\" 中的一个 }\",\"例如，这里的 Person 对象使用 Symbol.toPrimitive 执行与上面相同的操作：\",\"let Person = { name: \\\"Mary\\\", age: 22, [Symbol.toPrimitive](hint) { alert(`hint: ${hint}`); return hint == \\\"string\\\" ? `{name: \\\"${this.name}\\\"}` : this.age; } }; alert(Person); // hint: string -> {name: \\\"Mary\\\"} alert(+Person); // hint: number -> 22 alert(Person + 10); // hint: default -> 32\",\"可以看到，单个方法 Person[Symbol.toPrimitive] 处理了所有转换情况。需要注意，在没有 Symbol.toPrimitive 和 valueOf() 的情况下，toString() 将处理所有原始类型转换。\",\"下面是将对象转化为布尔值、字符串、数字时的执行过程：\",\"（1）对象到布尔值的转换 Javascript 中的所有对象都转换为 true，包括包装对象 new Boolean(false) 和空数组。 对象到布尔值的转换不需要对象到原始类型算法。\",\"（2）对象到字符串的转换 当需要将对象转换为字符串时，Javascript 首先使用 ToPrimitive 算法（Hints = “string”）将其转换为原始类型，然后将派生的原始类型转换为字符串。例如，如果将对象传递给 String() 这样的内置函数，或者在模板字符串中插入对象时。\",\"（3）对象到数字的转换 当需要将对象转换为数字时，Javascript 首先使用 ToPrimitive 算法（Hints = “number”）将其转换为原始类型，然后将派生的原始类型转换为数字。 期望数字参数的内置 Javascript 函数和方法以这种方式将对象参数转换为数字，例如 Math()。\"]},\"807\":{\"h\":\"（3）特殊情况\",\"t\":[\"当某些 Javascript 运算符的操作数是对象时，也会发生类型转换。\",\"运算符：此运算符可以用于执行数字加法和字符串连接。如果其中任何一个操作数是对象，则使用 ToPrimitive 算法（Hints = “default”）将它们转换为原始值。一旦将它们转换为原始值，就会检查它们的类型。如果任一参数是字符串，则将另一个参数转换为字符串并连接字符串。否则，它将两个参数都转换为数字并将它们相加。\",\"== 和 !== 运算符：这些运算符以宽松方式执行相等和不相等测试。如果一个操作数是一个对象而另一个是一个原始值，这些运算符使用 ToPrimitive 算法（Hints = “default”）将对象转换为原始值，然后比较两个原始值。\",\"<,<=,> 和 >= 关系运算符：关系运算符用于比较两个值之间的关系，可用于比较数字和字符串。如果任一操作数是对象，则使用 ToPrimitive 算法将其转换为原始值（Hints = “number”）。但是，与对象到数字的转换不同，返回的原始值不会转换为数字（因为它们被比较并且不被使用）。\"]},\"808\":{\"c\":[\"Javascript\"]},\"809\":{\"c\":[\"类型转换\"]},\"810\":{\"h\":\"网络请求\"},\"811\":{\"h\":\"Ajax\"},\"812\":{\"h\":\"什么是 Ajax\",\"t\":[\"Ajax 是一种异步请求数据的 web 开发技术，对于改善用户的体验和页面性能很有帮助。简单地说，在不需要重新刷新页面的情况下，Ajax 通过异步请求加载后台数据，并在网页上呈现出来。常见运用场景有表单验证是否登入成功、百度搜索下拉框提示和快递单号查询等等。\"]},\"813\":{\"h\":\"原理\",\"t\":[\"在解释 Ajax 原理之前，我们不妨先举个“领导想找小李汇报一下工作”例子，领导想找小李问点事，就委托秘书去叫小李，自己就接着做其他事情，直到秘书告诉他小李已经到了，最后小李跟领导汇报工作。\",\"Ajax 请求数据流程与“领导想找小李汇报一下工作”类似。其中最核心的依赖是浏览器提供的 XMLHttpRequest 对象，它扮演的角色相当于秘书，使得浏览器可以发出 HTTP 请求与接收 HTTP 响应。浏览器接着做其他事情，等收到 XHR 返回来的数据再渲染页面。\"]},\"814\":{\"h\":\"使用\"},\"815\":{\"h\":\"1.创建 Ajax 核心对象 XMLHttpRequest\",\"t\":[\"var xhr = null if (window.XMLHttpRequest) { // 兼容 IE7+, Firefox, Chrome, Opera, Safari xhr = new XMLHttpRequest() } else { // 兼容 IE6, IE5 xhr = new ActiveXObject('Microsoft.XMLHTTP') }\"]},\"816\":{\"h\":\"2.向服务器发送请求\",\"t\":[\"xhr.open(method, url, async) send(string) //post请求时才使用字符串参数，否则不用带参数。\",\"method：请求的类型；GET 或 POST\",\"url：文件在服务器上的位置\",\"async：true（异步）或 false（同步） 注意：post 请求一定要设置请求头的格式内容\",\"xhr.open('POST', 'test.html', true) xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded') xhr.send('fname=Henry&lname=Ford') //post请求参数放在send里面，即请求体\"]},\"817\":{\"h\":\"3.服务器响应处理（区分同步跟异步两种情况）\",\"t\":[\"responseText 获得字符串形式的响应数据。\",\"responseXML 获得 XML 形式的响应数据。\",\"同步处理\",\"xhr.open('GET', 'info.txt', false) xhr.send() document.getElementById('myDiv').innerHTML = xhr.responseText //获取数据直接显示在页面上\",\"异步处理\",\"相对来说比较复杂，要在请求状态改变事件中处理。\",\"xhr.onreadystatechange = function () { if (xhr.readyState == 4 && xhr.status == 200) { document.getElementById('myDiv').innerHTML = xhr.responseText } }\",\"什么是 readyState？\",\"readyState 是 XMLHttpRequest 对象的一个属性，用来标识当前 XMLHttpRequest 对象处于什么状态。 readyState 总共有 5 个状态值，分别为 0~4，每个值代表了不同的含义\",\"未初始化 -- 尚未调用.open()方法；\",\"启动 -- 已经调用.open()方法，但尚未调用.send()方法；\",\"发送 -- 已经调用.send()方法，但尚未接收到响应；\",\"接收 -- 已经接收到部分响应数据；\",\"完成 -- 已经接收到全部响应数据，而且已经可以在客户端使用了；\",\"什么是 status？\",\"HTTP 状态码(status)由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP 状态码共分为 5 种类型：\",\"常见的状态码\",\"仅记录在 RFC2616 上的 HTTP 状态码就达 40 种，若再加上 WebDAV（RFC4918、5842）和附加 HTTP 状态码 （RFC6585）等扩展，数量就达 60 余种。接下来，我们就介绍一下这些具有代表性的一些状态码。\",\"200 表示从客户端发来的请求在服务器端被正常处理了。\",\"204 表示请求处理成功，但没有资源返回。\",\"301 表示永久性重定向。该状态码表示请求的资源已被分配了新的 URI，以后应使用资源现在所指的- URI。\",\"302 表示临时性重定向。\",\"304 表示客户端发送附带条件的请求时（指采用 GET 方法的请求报文中包含 if-matched,- if-modified-since,if-none-match,if-range,if-unmodified-since 任一个首部）服务器端允许请求访问资源，但因发生请求未满足条件的情况后，直接返回 304Modified（服务器端资源未改变，可直接- 使用客户端未过期的缓存）\",\"400 表示请求报文中存在语法错误。当错误发生时，需修改请求的内容后再次发送请求。\",\"401 表示未授权（Unauthorized)，当前请求需要用户验证\",\"403 表示对请求资源的访问被服务器拒绝了\",\"404 表示服务器上无法找到请求的资源。除此之外，也可以在服务器端拒绝请求且不想说明理由时使-用。\",\"500 表示服务器端在执行请求时发生了错误。也有可能是 Web 应用存在的 bug 或某些临时的故障。\",\"503 表示服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。\",\"GET 和 POST 请求数据区别\",\"使用 Get 请求时,参数在 URL 中显示,而使用 Post 方式,则放在 send 里面\",\"使用 Get 请求发送数据量小,Post 请求发送数据量大\",\"使用 Get 请求安全性低，会被缓存，而 Post 请求反之 关于第一点区别，详情见下面两张图：\"]},\"818\":{\"h\":\"fetch\"},\"819\":{\"h\":\"与 Ajax 对比\",\"t\":[\"使用 Ajax 请求一个 JSON 数据一般是这样：\",\"var xhr = new XMLHttpRequest(); xhr.open('GET', url/file,true); xhr.onreadystatechange = function() { if(xhr.readyState==4){ if(xhr.status==200){ var data=xhr.responseText; console.log(data); } }; xhr.onerror = function() { console.log(\\\"Oh, error\\\"); }; xhr.send();\",\"同样我们使用 fetch 请求 JSON 数据：\",\"fetch(url) .then((response) => response.json()) //解析为可读数据 .then((data) => console.log(data)) //执行结果是 resolve就调用then方法 .catch((err) => console.log('Oh, error', err)) //执行结果是 reject就调用catch方法\",\"从两者对比来看，fetch 代码精简许多，业务逻辑更清晰明了，使得代码易于维护，可读性更高。 总而言之，Fetch 优点主要有：\"]},\"820\":{\"h\":\"请求常见数据格式\"},\"821\":{\"h\":\"fetch 请求本地文本数据\",\"t\":[\"本地有一个 test.txt 文档，通过以下代码就可以获取其中的数据，并且显示在页面上。\",\"function getText() { fetch('test.txt') .then((res) => res.text()) //注意：此处是res.text() .then((data) => { console.log(data) document.getElementById('output').innerHTML = data }) .catch((err) => console.log(err)) }\"]},\"822\":{\"h\":\"fetch 请求本地 JSON 数据\",\"t\":[\"本地有个 posts.json 数据，与请求本地文本不同的是，得到数据后还要用 forEach 遍历,最后呈现在页面上。\",\"document.getElementById('button2').addEventListener('click', getJson) function getJson() { fetch('posts.json') .then((res) => res.json()) .then((data) => { console.log(data) let output = '' data.forEach((post) => { output += `<li>${post.title}</li>` }) document.getElementById('output').innerHTML = output }) .catch((err) => console.log(err)) }\"]},\"823\":{\"h\":\"fetch 请求网络接口\",\"t\":[\"获取https://api.github.com/users中的数据，做法与获取本地 JSON 的方法类似,得到数据后，同样要经过处理\",\"function getExternal() { fetch('https://api.github.com/users') .then((res) => res.json()) .then((data) => { console.log(data) let output = '' data.forEach((user) => { output += `<li>${user.login}</li>` }) document.getElementById('output').innerHTML = output }) .catch((err) => console.log(err)) }\"]},\"824\":{\"c\":[\"Javascript\"]},\"825\":{\"c\":[\"ajax\"]},\"826\":{\"h\":\"节流与防抖\"},\"827\":{\"h\":\"节流\",\"t\":[\"一个函数执行一次后，只有大于设定的执行周期后才会执行第二次。 有个需要频繁触发函数，出于优化性能角度，在规定时间内，只让函数触发的第一次生效，后面不生效。\"]},\"828\":{\"h\":\"实现\",\"t\":[\"// 时间戳 立即执行 function throttle(func, awit) { let old = 0 return function () { const that = this const args = arguments let now = newDate().valueOf() if (now - old > wait) { func.apply(that, func) old = now } } } // 使用定时器 第一次不执行，最后一次调用会执行 function throttle(func, wait) { let timeout return function () { const that = this const args = arguments if (!timeout) { timeout = setTimeout(function () { func.apply(that, args) timeout = null }, wait) } } }\"]},\"829\":{\"h\":\"应用场景\",\"t\":[\"OM 元素的拖拽功能实现（mousemove）\",\"搜索联想（keyup）\",\"计算鼠标移动的距离（mousemove）\",\"anvas 模拟画板功能（mousemove）\",\"射击游戏的 mousedown/keydown 事件（单位时间只能发射一颗子弹）\",\"监听滚动事件判断是否到页面底部自动加载更多：给 scroll 加了 debounce 后，只有用户停止滚动后，才会判断是否到了页面底部；如果是 throttle 的话，只要页面滚动就会间隔一段时间判断一次\"]},\"830\":{\"h\":\"防抖\",\"t\":[\"一个需要频繁触发的函数，在规定时间内，只让最后一次生效，前面的不生效。\"]},\"831\":{\"h\":\"实现\",\"t\":[\"function debounce(func, wait) { let timeout return function () { const that = this const args = arguments clearTimeout(timeout) timeout = setTimeout(function () { func.apply(that, args) }, wait) } } // 立即执行防抖 function debounce(func, wait, immediate) { let timeout return function () { const that = this const args = arguments clearTimeout(timeout) if (immediate) { const callNow = !timeout timeout = setTimeout(function () { timeout = null }, wait) if (callNow) { func.apply(that, args) } } else { timeout = setTimeout(function () { func.apply(that, args) }, wait) } } } // 取消防抖 function debounce(func, wait) { let timeout let debounced = function () { const that = this const args = arguments clearTimeout(timeout) timeout = setTimeout(function () { func.apply(that, args) }, wait) } debounced.cancel = function () { clearTimeout(timeout) timeout = null } return debounced }\"]},\"832\":{\"h\":\"应用场景\",\"t\":[\"每次 resize/scroll 触发统计事件\",\"文本输入的验证（连续输入文字后发送 AJAX 请求进行验证，验证一次就好）\"]},\"833\":{\"c\":[\"Javascript\"]},\"834\":{\"c\":[\"节流与防抖\"]},\"835\":{\"h\":\"解构赋值\"},\"836\":{\"h\":\"一、基本概念\",\"t\":[\"为什么需要解构呢，先来看一个例子\",\"const student = { name: 'ZhangSan', age: 18, scores: { math: 19, english: 85, chinese: 100, }, } function displayInfo(student) { console.log('name:', student.name) console.log('math:', student.scores.math) console.log('english:', student.scores.english) console.log('chinese:', student.scores.chinese) } displayInfo(student)\",\"这样写也能实现预期效果，但是代码看起来比较冗余。并且，如果对象内部嵌套较深时，那么对象的访问链就会变得很长。虽然这并不是什么大问题，但是使用解构赋值会让代码变得更简单和易读。\",\"下面就来看看什么是解构赋值。MDN 中对解构赋值的描述：\",\"解构赋值语法是一种 Javascript 表达式。通过解构赋值, 可以将属性值从对象/数组中取出,赋值给其他变量。\",\"实际上，解构赋值就是将复杂的结构分解为简单的部分。解构赋值语法可以用于变量声明或者变量赋值。除此之外，还可以使用嵌套的解构赋值语法来处理嵌套结构。\",\"比如，对上面例子中的对象进行解构：\",\"function displayInfo(student) { const { name, scores: { math, english, chinese }, } = student console.log('name:', name) console.log('math:', math) console.log('english:', english) console.log('chinese:', chinese) }\"]},\"837\":{\"h\":\"二、解构分类\",\"t\":[\"根据 MDN 对解构赋值的定义，我们可以将解构赋值分为两大类：\",\"对象解构\",\"数组解构\"]},\"838\":{\"h\":\"1. 对象的解构赋值\",\"t\":[\"对象解构又称为对象属性分配模式，它允许我们将对象的属性值分配给相应的变量。它有两种写法：\",\"let obj = { x: 1, y: 2, z: 3 } let { x: a, y: b, z: c } = obj console.log(a, b, c) let { x, y, z } = obj console.log(x, y, z)\",\"第一种（第 3 行）是对象解构的完整形式，对象的每个属性都将被分配一个变量，其中冒号前面的是源对象中的属性，冒号后面的是要赋值属性;\",\"第二种（第 6 行）是对象解构的简写形式，对象的属性与要分配的属性一致时可以使用这种形式。\",\"如果需要给已有变量赋值，就需要额外注意了\",\"let obj = { x: 1, y: 2, z: 3 } let x = 0, y = 0, z = 0 ;({ x, y, z } = obj) console.log(x, y, z)\",\"这里需要注意，需要将赋值表达式使用括号括起来，如果省略，解构对象将被视为一个块语句，而块语句时不能放在赋值表达式左侧的。\",\"当使用解构赋值时，可以给变量传递一个默认值：\",\"const person = { name: 'ZhangSan', height: 180, } const { name, height, age = 25 } = person console.log(name, height, age)\",\"这里我们给 age 分配了一个默认值，当对源对象上不存在 age 属性时，age 就会被赋上默认值 25，而不是 undefined。\",\"如果分配的对象属性为 undefined，那么就会使用默认值：\",\"const { x = 2 } = { x: undefined } console.log(x) // 2\"]},\"839\":{\"h\":\"2. 数组的解构赋值\",\"t\":[\"在使用数组解构时，实际上会使用迭代器将所需要的值与结构源分开。因此，我们可以对可迭代值使用数组结构，包括字符串、数组、集合、函数映射、DOM 元素。我们还可以将解构赋值与扩展运算符结合使用。\"]},\"840\":{\"h\":\"（1）字符串\",\"t\":[\"let message = 'Hello' let [a, b] = message let [x, y, ...z] = message console.log(a, b) // H e console.log(x, y, z) // H e ['l', 'l', 'o']\"]},\"841\":{\"h\":\"（2）数组\",\"t\":[\"let numbers = [1, 2, 3] let [x, y, z] = numbers console.log(x, y, z) // 1 2 3\"]},\"842\":{\"h\":\"（3）集合\",\"t\":[\"let set = new Set().add('foo').add('bar') let [a, b] = set console.log(a, b) // foo bar\"]},\"843\":{\"h\":\"（4）Map\",\"t\":[\"let map = new Map().set('a', 1).set('b', 2) let [x, y] = map console.log(x, y) // [\\\"a\\\", 1] [\\\"b\\\", 2]\",\"在数组的解构中，存储变量的数组中的每个变量都会映射到解构数组上相同索引处的相应项。\",\"如果解构中某一项不需要，可以使用逗号操作符进行分隔：\",\"const rgb = [200, 255, 100] const [, , blue] = rgb console.log(blue) // 100\",\"与对象解构一样，可以使用数组解构为局部变量设置默认值：\",\"const rgb = [200] const [red = 255, green, blue = 255] = rgb console.log(`R: ${red}, G: ${green}, B: ${blue}`)\",\"如果变量已经存在，就可以这么写：\",\"let red = 100, green = 200, blue = 50 const rgb = [200, 255, 100] ;[red, green] = rgb console.log(`R: ${red}, G: ${green}, B: ${blue}`)\",\"与对象解构不同的是，这里不需要括号将数组括起来。\",\"如果给变量分配的值是 undefined，那么就会使用默认值：\",\"const [x = 1] = [undefined] console.log(x) // 1\",\"这里的默认值并不一定是一个固定值，它可以是一个计算属性：\",\"function foo() { return 1 } let obj1 = { x: 2 } let obj2 = { x: undefined } let { x = foo() } = obj1 console.log(x) // 2 let { x = foo() } = obj2 console.log(x) // 1\",\"如果我们想将数组中的一些元素分配给变量，而将数组中的其余项分配给特定的变量就可以这样做：\",\"let [greeting, ...intro] = ['Hello', 'I', 'am', 'CUGGZ'] console.log(greeting) // \\\"Hello\\\" console.log(intro) // [\\\"I\\\", \\\"am\\\", \\\"CUGGZ\\\"]\"]},\"844\":{\"h\":\"三、嵌套解构\",\"t\":[\"上面我们说的解构的知识普通的数组和对象。实际上，解构赋值可以用于嵌套数组和嵌套对象。比如，文章最开始的例子中，就是解构的嵌套对象：\",\"const student = { name: 'ZhangSan', age: 18, scores: { math: 19, english: 85, chinese: 100, }, } const { name, scores: { math, english, chinese }, } = student\",\"再来看一个嵌套数组解构的例子：\",\"let numbers = [1, [2, 3, 4], 5] let [a, [b, c, d], e] = numbers console.log(a, b, c, d, e) // 1 2 3 4 5\"]},\"845\":{\"h\":\"四、使用技巧\"},\"846\":{\"h\":\"1. 函数解构\"},\"847\":{\"h\":\"（1）解构函数参数\",\"t\":[\"可以对函数参数使用解构赋值：\",\"function foo([a, b]) { console.log(a + b) } foo([1, 2]) // 3 function bar({ x, y }) { console.log(x, y) } foo({ x: 1, y: 2 }) // 1 2\",\"可以对函数返回值使用解构赋值：\",\"function getStudentInfo() { return { name: 'ZhangSan', age: 18, scores: { math: 19, english: 85, chinese: 100, }, } } const { name, scores: { math, english, chinese }, } = getStudentInfo() console.log(name, math, english, chinese)\"]},\"848\":{\"h\":\"2. 循环中的解构\",\"t\":[\"当我们需要循环中的对象键值时，也可以使用对象解构：\",\"const students = [ { name: 'ZhangSan', grade: 80, }, { name: 'LiSi', grade: 75, }, { name: 'WangWu', grade: 95, }, ] for (let { name, grade } of students) { console.log(name, grade) }\"]},\"849\":{\"h\":\"3. 动态属性解构\",\"t\":[\"很多时候我们不知道对象属性的 key，只有运行时才知道。比如有一个方法 getStudentInfo，它以一个 key 为参数，并返回相应的属性值：\",\"getStudentInfo('name') getStudentInfo('age')\",\"这里传递给 getStudentInfo 方法的参数是动态的，因此可以这样写：\",\"const getStudentInfo = (key) => { const { [key]: value } = student return value }\",\"需要注意，包裹 key 的方括号不能少，否则会出现 undefined 值。\"]},\"850\":{\"h\":\"4. 交换变量\",\"t\":[\"数组结构一个很实用的功能就是实现交换局部变量。通常，我们会借助临时变量来实现变量的交换：\",\"let width = 300 let height = 400 let temp = width width = height height = temp console.log(width, height)\",\"如果使用数组的解构赋值，就会变得很简单：\",\"let width = 300 let height = 400 ;[width, height] = [height, width] console.log(width, height)\"]},\"851\":{\"h\":\"5. 数组拷贝\",\"t\":[\"可以使用解构赋值和rest运算符来实现数组的拷贝：\",\"const rgb = [200, 255, 100]; const [...newRgb] = rgb; // 等同于 const newRgb = [...rgb] console.log(newRgb)\"]},\"852\":{\"c\":[\"Javascript\"]},\"853\":{\"c\":[\"解构赋值\"]},\"854\":{\"h\":\"跨域\"},\"855\":{\"h\":\"为什么跨域\",\"t\":[\"为什么会出现跨域问题呢？那就不得不讲浏览器的同源策略了，它规定了协议号-域名-端口号这三者必须都相同才符合同源策略\",\"如有有一个不相同，就会出现跨域问题，不符合同源策略导致的后果有\",\"LocalStorge、SessionStorge、Cookie 等浏览器内存无法跨域访问\",\"DOM 节点无法跨域操作\",\"Ajax 请求无法跨域请求\",\"注意点：一个 IP 是可以注册多个不同域名的，也就是多个域名可能指向同一个 IP，即使是这样，他们也不符合同源策略\"]},\"856\":{\"h\":\"跨域的时机\",\"t\":[\"请求发出去到后端，后端返回数据，在浏览器接收后端数据时被浏览器的跨域报错拦下来\"]},\"857\":{\"h\":\"跨域情况\"},\"858\":{\"h\":\"解决跨域方案\"},\"859\":{\"h\":\"JSONP\",\"t\":[\"因为浏览器同源策略的存在，导致存在跨域问题，那有没有不受跨域问题所束缚的东西呢？其实是有的，以下这三个标签加载资源路径是不受束缚的\",\"script 标签：<script src=\\\"加载资源路径\\\"></script>\",\"link 标签：<link herf=\\\"加载资源路径\\\"></link>\",\"img 标签：<img src=\\\"加载资源路径\\\"></img>\",\"而 JSONP 就是利用了 script 的 src 加载不受束缚，从而可以拥有从不同的域拿到数据的能力。但是 JSONP 需要前端后端配合，才能实现最终的跨域获取数据。\",\"JSONP 通俗点说就是：利用 script 的 src 去发送请求，将一个方法名 callback 传给后端，后端拿到这个方法名，将所需数据，通过字符串拼接成新的字符串 callback(所需数据)，并发送到前端，前端接收到这个字符串之后，就会自动执行方法 callback(所需数据)。老规矩，先上图，再上代码。\",\"后端代码\",\"require('console') let express = require('express') let app = express() app.get('/say', function (req, res) { let { wd, callback } = req.query console.log(wd) res.end(`${callback}('我不爱你')`) }) app.listen(3000)\",\"前端代码\",\"const jsonp = (url, params, cbName) => { return new Promise((resolve, reject) => { const script = document.createElement('script') window[cbName] = (data) => { resolve(data) document.body.removeChild(script) } params = { ...params, callback: cbName } const arr = Object.keys(params).map((key) => `${key}=${params[key]}`) script.src = `${url}?${arr.join('&')}` document.body.appendChild(script) }) } jsonp('http://localhost:3000/say', { wd: '我爱你' }, 'callback').then( (data) => { console.log(data) } )\",\"缺点\",\"JSONP 的缺点就是，需要前后端配合，并且只支持 get 请求方法,XSS\"]},\"860\":{\"h\":\"Cors\",\"t\":[\"Cors，全称是 Cross-Origin Resource Sharing，意思是跨域资源共享，Cors 一般是由后端来开启的，一旦开启，前端就可以跨域访问后端。\",\"为什么后端开启 Cors，前端就能跨域请求后端呢？我的理解是：前端跨域访问到后端，后端开启 Cors，发送 Access-Control-Allow-Origin: 域名 字段到前端（其实不止一个），前端浏览器判断 Access-Control-Allow-Origin 的域名如果跟前端域名一样，浏览器就不会实行跨域拦截，从而解决跨域问题。\",\"后端代码\",\"server1\",\"// server1 let express = require('express') let app = express() app.use(express.static(__dirname)) app.listen(3000)\",\"server2\",\"let express = require('express') let app = express() let whitList = ['http://localhost:3000'] app.use(function (req, res, next) { let origin = req.headers.origin if (whitList.includes(origin)) { // 设置那个源可以访问我 res.setHeader('Access-Control-Allow-Origin', origin) // 允许携带那个头访问我 res.setHeader('Access-Control-Allow-Headers', 'name') // 允许那个方法访问我 res.setHeader('Access-Control-Allow-Methods', 'PUT') // 预检存活时间 res.setHeader('Access-Control-Max-Age', 6000) // 允许携带cookie res.setHeader('Access-Control-Allow-Credentials', true) // 允许返回的头 res.setHeader('Access-Control-Expose-Headers', 'name') if (req.method === 'OPTIONS') { res.end() // PUT请求不做任何处理 } } next() }) app.get('/getData', function (req, res) { console.log(req.headers) res.end('我不爱你') }) app.put('/getData', function (req, res) { console.log(req.headers) res.setHeader('name', 'jw') res.end('我不爱你') }) app.use(express.static(__dirname)) app.listen(4000)\",\"前端代码\",\"let xhr = new XMLHttpRequest() xhr.open('GET', 'http://localhost:4000/getData', true) xhr.setRequestHeader('name', 'zfpx') xhr.onreadystatechange = function () { if (xhr.readyState === 4) { if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304) { console.log(xhr.response) } } } xhr.send()\"]},\"861\":{\"h\":\"postMessage\",\"t\":[\"场景：http://localhost:3000/a.html页面中使用了 iframe 标签内嵌了一个http://localhost:4000/b.html的页面\",\"虽然这两个页面存在于一个页面中，但是需要 iframe 标签来嵌套才行，这两个页面之间是无法进行通信的，因为他们端口号不同，根据同源策略，他们之间存在跨域问题\",\"那应该怎么办呢？使用 postMessage 可以使这两个页面进行通信\",\"a.js\",\"let express = require('express') let app = express() app.use(express.static(__dirname)) app.listen(3000)\",\"b.js\",\"let express = require('express') let app = express() app.use(express.static(__dirname)) app.listen(4000)\",\"a.html\",\"<iframe src=\\\"http://localhost:4000/b.html\\\" frameborder=\\\"0\\\" id=\\\"frame\\\" onload=\\\"load()\\\" ></iframe> <script> function load() { let frame = document.getElementById('frame') frame.contentWindow.postMessage('我爱你', 'http://localhost:4000') } window.onmessage = function (e) { console.log(e.data) } </script>\",\"b.html\",\"<script> window.onmessage = function (e) { console.log(e.data) e.source.postMessage('我不爱你', e.origin) } </script>\"]},\"862\":{\"h\":\"window.name\",\"t\":[\"a 和 b 是同域的\",\"c 是独立的\",\"a 获取 c 的数据\",\"a 先引用 c c 把值放到 window.name，把 a 引用的地址改到 b\",\"a.js\",\"let express = require('express') let app = express() app.use(express.static(__dirname)) app.listen(3000)\",\"b.js\",\"let express = require('express') let app = express() app.use(express.static(__dirname)) app.listen(4000)\",\"a.html\",\"<iframe src=\\\"http://localhost:4000/c.html\\\" frameborder=\\\"0\\\" onload=\\\"load()\\\" id=\\\"iframe\\\" ></iframe> <script> let first = true function load() { if (first) { let iframe = document.getElementById('iframe') iframe.src = 'http:/localhost:3000/b.html' first = false } else { console.log(iframe.contentWindow.name) } } </script>\",\"b.html\",\"<!-- 空 -->\",\"c.html\",\"<script> window.name = '我不爱你' </script>\"]},\"863\":{\"h\":\"hash\",\"t\":[\"a 和 b 是同域的\",\"c 是独立的\",\"a 获取 c 的数据\",\"a 给 c 传一个 hash 值，c 收到 hash 值后，c 把 hash 传递给 b，b 将结果放到 a 的 hash 值中\",\"a.js\",\"let express = require('express') let app = express() app.use(express.static(__dirname)) app.listen(3000)\",\"b.js\",\"let express = require('express') let app = express() app.use(express.static(__dirname)) app.listen(4000)\",\"a.html\",\"<iframe src=\\\"http://localhost:4000/c.html#ilovayou\\\"></iframe> <script> window.onhashchange = function () { console.log(location.hash) } </script>\",\"b.html\",\"<script> window.parent.parent.location.hash = location.hash </script>\",\"c.html\",\"<script> console.log(location.hash) let iframe = document.createElement('iframe') iframe.src = 'http://localhost:3000/b.html#idontloveyou' document.body.appendChild(iframe) </script>\"]},\"864\":{\"h\":\"Node 接口代理\",\"t\":[\"还是回到同源策略，同源策略它只是浏览器的一个策略而已，它是限制不到后端的，也就是前端-后端会被同源策略限制，但是后端-后端则不会被限制，所以可以通过 Node 接口代理，先访问已设置 Cors 的后端 1，再让后端 1 去访问后端 2 获取数据到后端 1，后端 1 再把数据传到前端\",\"后端 2 代码\",\"// index.js http://127.0.0.1:8000 const http = require('http') const urllib = require('url') const port = 8000 http.createServer(function (req, res) { console.log(888) const { query: { name, age }, } = urllib.parse(req.url, true) res.end(`${name}今年${age}岁啦！！！`) }).listen(port, function () { console.log('server is listening on port ' + port) })\",\"创建一个 index2.js，并 nodmeon index2.js\",\"后端 1 代码\",\"// index2.js http://127.0.0.1:8888 const http = require('http') const urllib = require('url') const querystring = require('querystring') const port = 8888 http.createServer(function (req, res) { // 开启Cors res.writeHead(200, { //设置允许跨域的域名，也可设置*允许所有域名 'Access-Control-Allow-Origin': 'http://127.0.0.1:5500', //跨域允许的请求方法，也可设置*允许所有方法 'Access-Control-Allow-Methods': 'DELETE,PUT,POST,GET,OPTIONS', //允许的header类型 'Access-Control-Allow-Headers': 'Content-Type', }) const { query } = urllib.parse(req.url, true) const { methods = 'GET', headers } = req const proxyReq = http .request( { host: '127.0.0.1', port: '8000', path: `/?${querystring.stringify(query)}`, methods, headers, }, (proxyRes) => { proxyRes.on('data', (chunk) => { console.log(chunk.toString()) res.end(chunk.toString()) }) } ) .end() }).listen(port, function () { console.log('server is listening on port ' + port) })\",\"前端代码\",\"// index.html http://127.0.0.1:5500 //步骤一:创建异步对象 var ajax = new XMLHttpRequest() //步骤二:设置请求的url参数,参数一是请求的类型,参数二是请求的url,可以带参数,动态的传递参数starName到服务端 ajax.open('get', 'http://127.0.0.1:8888?name=林三心&age=23') //步骤三:发送请求 ajax.send() //步骤四:注册事件 onreadystatechange 状态改变就会调用 ajax.onreadystatechange = function () { if (ajax.readyState == 4 && ajax.status == 200) { //步骤五 如果能够进到这个判断 说明 数据 完美的回来了,并且请求的页面是存在的 console.log(ajax.responseText) //输入相应的内容 } }\"]},\"865\":{\"h\":\"WebSocket\",\"t\":[\"我理解的 WebSocket 是一种协议(跟 http 同级，都是协议)，并且他可以进行跨域通信\",\"后端代码\",\"// index.js http://127.0.0.1:8000 const Websocket = require('ws') const port = 8000 const ws = new Websocket.Server({ port }) ws.on('connection', (obj) => { obj.on('message', (data) => { data = JSON.parse(data.toString()) const { name, age } = data obj.send(`${name}今年${age}岁啦！！！`) }) })\",\"前端代码\",\"// index.html http://127.0.0.1:5500/index.html function myWebsocket(url, params) { return new Promise((resolve, reject) => { const socket = new WebSocket(url) socket.onopen = () => { socket.send(JSON.stringify(params)) } socket.onmessage = (e) => { resolve(e.data) } }) } myWebsocket('ws://127.0.0.1:8000', { name: '林三心', age: 23 }).then((data) => { console.log(data) // 林三心今年23岁啦！！！ })\"]},\"866\":{\"h\":\"Nginx\",\"t\":[\"其实 Nginx 跟 Node 接口代理是一个道理，只不过 Nginx 就不需要我们自己去搭建一个中间服务\",\"先下载 nginx，然后将 nginx 目录下的 nginx.conf 修改如下:\",\"server{ listen 8888; server_name 127.0.0.1; location /{ proxy_pass 127.0.0.1:8000; } }\",\"最后通过命令行 nginx -s reload 启动 nginx\",\"后端代码\",\"// index.js http://127.0.0.1:8000 const http = require('http') const urllib = require('url') const port = 8000 http.createServer(function (req, res) { const { query: { name, age }, } = urllib.parse(req.url, true) res.end(`${name}今年${age}岁啦！！！`) }).listen(port, function () { console.log('server is listening on port ' + port) })\",\"前端代码\",\"// index.html http://127.0.0.1:5500 //步骤一:创建异步对象 var ajax = new XMLHttpRequest() //步骤二:设置请求的url参数,参数一是请求的类型,参数二是请求的url,可以带参数,动态的传递参数starName到服务端 ajax.open('get', 'http://127.0.0.1:8888?name=林三心&age=23') //步骤三:发送请求 ajax.send() //步骤四:注册事件 onreadystatechange 状态改变就会调用 ajax.onreadystatechange = function () { if (ajax.readyState == 4 && ajax.status == 200) { //步骤五 如果能够进到这个判断 说明 数据 完美的回来了,并且请求的页面是存在的 console.log(ajax.responseText) //输入相应的内容 } }\"]},\"867\":{\"h\":\"document.domain && iframe\",\"t\":[\"场景：a.sanxin.com/index.html 与 b.sanxin.com/index.html 之间的通信\",\"其实上面这两个正常情况下是无法通信的，因为他们的域名不相同，属于跨域通信\",\"那怎么办呢？其实他们有一个共同点，那就是他们的二级域名都是 sanxin.com，这使得他们可以通过 document.domain && iframe 的方式来通信\",\"<!-- http://127.0.0.1:5500/index.html --> <body> <iframe src=\\\"http://127.0.0.1:5555/index.html\\\" id=\\\"frame\\\"></iframe> </body> <script> document.domain = '127.0.0.1' document.getElementById('frame').onload = function () { console.log(this.contentWindow.data) // 林三心今年23岁啦！！！ } </script>\",\"<!-- http://127.0.0.1:5555/index.html --> <script> // window.name=\\\"林三心今年23岁啦！！！\\\" document.domain = '127.0.0.1' var data = '林三心今年23岁啦！！！' </script>\"]},\"868\":{\"c\":[\"Javascript\"]},\"869\":{\"c\":[\"跨域\"]},\"870\":{\"h\":\"遍历循环\"},\"871\":{\"h\":\"一、数组遍历方法\"},\"872\":{\"h\":\"1. forEach()\",\"t\":[\"forEach 方法用于调用数组的每个元素，并将元素传递给回调函数。数组中的每个值都会调用回调函数。其语法如下：\",\"array.forEach(function(currentValue, index, arr), thisValue)\",\"该方法的第一个参数为回调函数，是必传的，它有三个参数：\",\"currentValue：必需。当前元素\",\"index：可选。当前元素的索引值。\",\"arr：可选。当前元素所属的数组对象\",\"let arr = [1, 2, 3, 4, 5] arr.forEach((item, index, arr) => { console.log(index + ':' + item) })\",\"该方法还可以有第二个参数，用来绑定回调函数内部 this 变量（前提是回调函数不能是箭头函数，因为箭头函数没有 this）：\",\"let arr = [1, 2, 3, 4, 5] let arr1 = [9, 8, 7, 6, 5] arr.forEach(function (item, index, arr) { console.log(this[index]) // 9 8 7 6 5 }, arr1)\",\"注意：\",\"forEach 方法不会改变原数组，也没有返回值；\",\"forEach 无法使用 break，continue 跳出循环，使用 return 时，效果和在 for 循环中使用 continue 一致；\",\"forEach 方法无法遍历对象，仅适用于数组的遍历。\"]},\"873\":{\"h\":\"2. map()\",\"t\":[\"map() 方法会返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值。该方法按照原始数组元素顺序依次处理元素。其语法如下：\",\"array.map(function(currentValue,index,arr), thisValue)\",\"该方法的第一个参数为回调函数，是必传的，它有三个参数：\",\"currentValue：必须。当前元素的值；\",\"index：可选。当前元素的索引值；\",\"arr：可选。当前元素属于的数组对象。\",\"let arr = [1, 2, 3] arr.map((item) => { return item + 1 }) // 输出结果： [2, 3, 4]\",\"该方法的第二个参数用来绑定参数函数内部的 this 变量，是可选的：\",\"let arr = ['a', 'b', 'c'] ;[1, 2].map(function (e) { return this[e] }, arr) // 输出结果： ['b', 'c']\",\"该方法还可以进行链式调用：\",\"let arr = [1, 2, 3] arr.map((item) => item + 1).map((item) => item + 1) // 输出结果： [3, 4, 5]\",\"注意：\",\"map 方法不会对空数组进行检测；\",\"map 方法遍历数组时会返回一个新数组，不会改变原始数组；\",\"map 方法有返回值，可以 return 出来，map 的回调函数中支持 return 返回值；\",\"map 方法无法遍历对象，仅适用于数组的遍历。-\"]},\"874\":{\"h\":\"3. for of\",\"t\":[\"for...of 语句创建一个循环来迭代可迭代的对象。在 ES6 中引入的 for...of 循环，以替代 for...in 和 forEach() ，并支持新的迭代协议。其语法如下：\",\"for (variable of iterable) { statement }\",\"该方法有两个参数：\",\"variable：每个迭代的属性值被分配给该变量。\",\"iterable：一个具有可枚举属性并且可以迭代的对象。\",\"该方法允许获取对象的键值：\",\"let arr = [ { id: 1, value: 'hello' }, { id: 2, value: 'world' }, { id: 3, value: 'JavaScript' }, ] for (let item of arr) { console.log(item) } // 输出结果：{id:1, value:'hello'} {id:2, value:'world'} {id:3, value:'JavaScript'}\",\"注意：\",\"for of 方法只会遍历当前对象的属性，不会遍历其原型链上的属性；\",\"for of 方法适用遍历 数组/ 类数组/字符串/map/set 等拥有迭代器对象的集合；\",\"for of 方法不支持遍历普通对象，因为其没有迭代器对象。如果想要遍历一个对象的属性，可以用 for in 方法；-\",\"可以使用 break、continue、return 来中断循环遍历；\"]},\"875\":{\"h\":\"4. filter()\",\"t\":[\"filter()方法用于过滤数组，满足条件的元素会被返回。它的参数是一个回调函数，所有数组元素依次执行该函数，返回结果为 true 的元素会被返回，如果没有符合条件的元素，则返回空数组。其语法如下：\",\"array.filter(function(currentValue,index,arr), thisValue)\",\"该方法的第一个参数为回调函数，是必传的，它有三个参数：\",\"currentValue：必须。当前元素的值；\",\"index：可选。当前元素的索引值；\",\"arr：可选。当前元素属于的数组对象。\",\"const arr = [1, 2, 3, 4, 5] arr.filter((item) => item > 2) // 输出结果：[3, 4, 5]\",\"同样，它也有第二个参数，用来绑定参数函数内部的 this 变量。\",\"可以使用 filter()方法来移除数组中的 undefined、null、NAN 等值：\",\"let arr = [1, undefined, 2, null, 3, false, '', 4, 0] arr.filter(Boolean) // 输出结果：[1, 2, 3, 4]\",\"注意：\",\"filter 方法会返回一个新的数组，不会改变原数组；\",\"filter 方法不会对空数组进行检测；\",\"filter 方法仅适用于检测数组。\"]},\"876\":{\"h\":\"5. some()、every()\",\"t\":[\"some() 方法会对数组中的每一项进行遍历，只要有一个元素符合条件，就返回 true，且剩余的元素不会再进行检测，否则就返回 false。\",\"every() 方法会对数组中的每一项进行遍历，只有所有元素都符合条件时，才返回 true，如果数组中检测到有一个元素不满足，则整个表达式返回 false ，且剩余的元素不会再进行检测。其语法如下：\",\"两者的语法如下：\",\"array.some(function(currentValue,index,arr),thisValue) array.every(function(currentValue,index,arr), thisValue)\",\"两个方法的第一个参数为回调函数，是必传的，它有三个参数：\",\"currentValue：必须。当前元素的值；\",\"index：可选。当前元素的索引值；\",\"arr：可选。当前元素属于的数组对象。\",\"let arr = [1, 2, 3, 4, 5] arr.some((item) => item > 4) // 输出结果： true let arr = [1, 2, 3, 4, 5] arr.every((item) => item > 0) // 输出结果： true\",\"注意：\",\"两个方法都不会改变原数组，会返回一个布尔值；\",\"两个方法都不会对空数组进行检测；\",\"两个方法都仅适用于检测数组。\"]},\"877\":{\"h\":\"6. reduce()、reduceRight()\",\"t\":[\"reduce() 方法接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。reduce() 可以作为一个高阶函数，用于函数的 compose。其语法如下：\",\"array.reduce(function(total, currentValue, currentIndex, arr), initialValue)\",\"reduce 方法会为数组中的每一个元素依次执行回调函数，不包括数组中被删除或从未被赋值的元素，回调函数接受四个参数：\",\"total：上一次调用回调返回的值，或者是提供的初始值（initialValue）；\",\"currentValue：当前被处理的元素；\",\"currentIndex：当前元素的索引；\",\"arr：当前元素所属的数组对象。\",\"该方法的第二个参数是 initialValue，表示传递给函数的初始值 （作为第一次调用 callback 的第一个参数）：\",\"let arr = [1, 2, 3, 4] let sum = arr.reduce((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }) console.log(arr, sum)\",\"输出结果：\",\"1 2 1 3 3 2 6 4 3 [1, 2, 3, 4] 10\",\"再来加一个初始值试试：\",\"let arr = [1, 2, 3, 4] let sum = arr.reduce((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }, 5) console.log(arr, sum)\",\"输出结果：\",\"5 1 0 6 2 1 8 3 2 11 4 3 [1, 2, 3, 4] 15\",\"由此可以得出结论：如果没有提供初始值 initialValue，reduce 会从索引 1 的地方开始执行 callback 方法，跳过第一个索引。如果提供了初始值 initialValue，从索引 0 开始执行\",\"reduceRight() 方法和的 reduce()用法几乎一致，只是该方法是对数组进行倒序遍历的，而 reduce()方法是正序遍历的。\",\"let arr = [1, 2, 3, 4] let sum = arr.reduceRight((prev, cur, index, arr) => { console.log(prev, cur, index) return prev + cur }, 5) console.log(arr, sum)\",\"输出结果：\",\"5 4 3 9 3 2 12 2 1 14 1 0 [1, 2, 3, 4] 15\",\"注意：\",\"两个方法都不会改变原数组；\",\"两个方法如果添加初始值，就会改变原数组，会将这个初始值放在数组的最后一位；\",\"两个方法对于空数组是不会执行回调函数的。\"]},\"878\":{\"h\":\"7. find()、findIndex()\",\"t\":[\"find() 方法返回通过函数内判断的数组的第一个元素的值。当数组中的元素在测试条件时返回 true 时， find() 返回符合条件的元素，之后的值不会再调用执行函数。如果没有符合条件的元素返回 undefined。\",\"findIndex() 方法返回传入一个测试函数符合条件的数组第一个元素位置（索引）。当数组中的元素在函数条件时返回 true 时， findIndex() 返回符合条件的元素的索引位置，之后的值不会再调用执行函数。如果没有符合条件的元素返回 -1。\",\"两个方法的语法如下：\",\"array.find(function(currentValue, index, arr),thisValue) array.findIndex(function(currentValue, index, arr), thisValue)\",\"两个方法的第一个参数为回调函数，是必传的，它有三个参数：\",\"currentValue：必需。当前元素；\",\"index：可选。当前元素的索引；\",\"arr：可选。当前元素所属的数组对象。\",\"let arr = [1, 2, 3, 4, 5] arr.find((item) => item > 2) // 输出结果： 3 let arr = [1, 2, 3, 4, 5] arr.findIndex((item) => item > 2) // 输出结果： 2\",\"find()和 findIndex()两个方法几乎一样，只是返回结果不同：\",\"find()：返回的是第一个符合条件的值；\",\"findIndex：返回的是第一个返回条件的值的索引值。\",\"注意：\",\"两个方法对于空数组，函数是不会执行的；\",\"两个方法否不会改变原数组。\"]},\"879\":{\"h\":\"8. keys()、values()、entries()\",\"t\":[\"三个方法都返回一个数组的迭代对象，对象的内容不太相同：\",\"keys() 返回数组的索引值；\",\"values() 返回数组的元素；\",\"entries() 返回数组的键值对。\",\"三个方法的语法如下：\",\"array.keys() array.values() array.entries()\",\"这三个方法都没有参数：\",\"let arr = ['Banana', 'Orange', 'Apple', 'Mango'] const iterator1 = arr.keys() const iterator2 = arr.values() const iterator3 = arr.entries() for (let item of iterator1) { console.log(item) } // 输出结果： 0 1 2 3 for (let item of iterator2) { console.log(item) } // 输出结果： Banana Orange Apple Mango for (let item of iterator3) { console.log(item) } // 输出结果：[0, 'Banana'] [1, 'Orange'] [2, 'Apple'] [3, 'Mango']\",\"方法\",\"是否改变原数组\",\"特点\",\"forEach()\",\"否\",\"没有返回值\",\"map()\",\"否\",\"有返回值，可链式调用\",\"for of()\",\"否\",\"for...of 遍历具有 Iterator 迭代器的对象的属性，返回的是数组的元素、对象的属性值，不能遍历普通的 obj 对象，将异步循环变成同步循环\",\"filter()\",\"否\",\"过滤数组，返回包含符合条件的元素的数组，可链式调用\",\"every()、some()\",\"否\",\"some()只要有一个是 true，便返回 true；而 every()只要有一个是 false，便返回 false.\",\"find()、findIndex()\",\"否\",\"find()返回的是第一个符合条件的值；findIndex()返回的是第一个返回条件的值的索引值\",\"reduce()、reduceRight()\",\"否\",\"reduce()对数组正序操作；reduceRight()对数组逆序操作\",\"keys()、values()、entries()\",\"否\",\"keys() 返回数组的索引值；values() 返回数组元素；entries() 返回数组的键值对。\"]},\"880\":{\"h\":\"二、对象遍历方法\"},\"881\":{\"h\":\"1. for in\",\"t\":[\"for…in 主要用于循环对象属性。循环中的代码每执行一次，就会对对象的属性进行一次操作。其语法如下：\",\"for (var in object) { 执行的代码块 }\",\"其中两个参数：\",\"var：必须。指定的变量可以是数组元素，也可以是对象的属性。\",\"object：必须。指定迭代的的对象。\",\"var obj = { a: 1, b: 2, c: 3 } for (var i in obj) { console.log('键名：', i) console.log('键值：', obj[i]) }\",\"输出结果：\",\"键名： a 键值： 1 键名： b 键值： 2 键名： c 键值： 3\",\"注意：\",\"for in 方法不仅会遍历当前的对象所有的可枚举属性，还会遍历其原型链上的属性。\"]},\"882\":{\"h\":\"2. Object.keys()、Object.values()、Object.entries()\",\"t\":[\"这三个方法都用来遍历对象，它会返回一个由给定对象的自身可枚举属性（不含继承的和 Symbol 属性）组成的数组，数组元素的排列顺序和正常循环遍历该对象时返回的顺序一致，这个三个元素返回的值分别如下：\",\"Object.keys()：返回包含对象键名的数组；\",\"Object.values()：返回包含对象键值的数组；\",\"Object.entries()：返回包含对象键名和键值的数组。\",\"let obj = { id: 1, name: 'hello', age: 18, } console.log(Object.keys(obj)) // 输出结果: ['id', 'name', 'age'] console.log(Object.values(obj)) // 输出结果: [1, 'hello', 18] console.log(Object.entries(obj)) // 输出结果: [['id', 1], ['name', 'hello'], ['age', 18]\",\"注意\",\"Object.keys()方法返回的数组中的值都是字符串，也就是说不是字符串的 key 值会转化为字符串。\",\"结果数组中的属性值都是对象本身可枚举的属性，不包括继承来的属性。\"]},\"883\":{\"h\":\"3. Object.getOwnPropertyNames()\",\"t\":[\"Object.getOwnPropertyNames()方法与 Object.keys()类似，也是接受一个对象作为参数，返回一个数组，包含了该对象自身的所有属性名。但它能返回不可枚举的属性。\",\"let a = ['Hello', 'World'] Object.keys(a) // [\\\"0\\\", \\\"1\\\"] Object.getOwnPropertyNames(a) // [\\\"0\\\", \\\"1\\\", \\\"length\\\"]\",\"这两个方法都可以用来计算对象中属性的个数：\",\"var obj = { 0: 'a', 1: 'b', 2: 'c' } Object.getOwnPropertyNames(obj) // [\\\"0\\\", \\\"1\\\", \\\"2\\\"] Object.keys(obj).length // 3 Object.getOwnPropertyNames(obj).length // 3\"]},\"884\":{\"h\":\"4. Object.getOwnPropertySymbols()\",\"t\":[\"Object.getOwnPropertySymbols() 方法返回对象自身的 Symbol 属性组成的数组，不包括字符串属性：\",\"let obj = { a: 1 } // 给对象添加一个不可枚举的 Symbol 属性 Object.defineProperties(obj, { [Symbol('baz')]: { value: 'Symbol baz', enumerable: false, }, }) // 给对象添加一个可枚举的 Symbol 属性 obj[Symbol('foo')] = 'Symbol foo' Object.getOwnPropertySymbols(obj).forEach((key) => { console.log(obj[key]) }) // 输出结果：Symbol baz Symbol foo\"]},\"885\":{\"h\":\"5. Reflect.ownKeys()\",\"t\":[\"Reflect.ownKeys() 返回一个数组，包含对象自身的所有属性。它和 Object.keys()类似，Object.keys()返回属性 key，但不包括不可枚举的属性，而 Reflect.ownKeys()会返回所有属性 key：\",\"var obj = { a: 1, b: 2, } Object.defineProperty(obj, 'method', { value: function () { alert('Non enumerable property') }, enumerable: false, }) console.log(Object.keys(obj)) // [\\\"a\\\", \\\"b\\\"] console.log(Reflect.ownKeys(obj)) // [\\\"a\\\", \\\"b\\\", \\\"method\\\"]\",\"注意：\",\"Object.keys() ：相当于返回对象属性数组；\",\"Reflect.ownKeys() :相当于 Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj)。\"]},\"886\":{\"h\":\"总结\",\"t\":[\"对象方法\",\"遍历基本属性\",\"遍历原型链\",\"遍历不可枚举属性\",\"遍历 Symbol\",\"for in\",\"是\",\"是\",\"否\",\"否\",\"Object.keys()\",\"是\",\"否\",\"否\",\"否\",\"Object.getOwnPropertyNames()\",\"是\",\"否\",\"是\",\"否\",\"Object.getOwnPropertySymbols()\",\"否\",\"否\",\"是\",\"是\",\"Reflect.ownKeys()\",\"是\",\"否\",\"是\",\"是\"]},\"887\":{\"h\":\"三、其他遍历方法\"},\"888\":{\"h\":\"1. for\",\"t\":[\"for循环是应该是最常见的循环方式了，它由三个表达式组成，分别是声明循环变量、判断循环条件、更新循环变量。这三个表达式用分号分隔。可以使用临时变量将数组的长度缓存起来，避免重复获取数组长度，当数组较大时优化效果会比较明显。\",\"const arr = [1,2,3,4,5] for(let i = 0, len = arr.length; i < len; i++ ){ console.log(arr[i]) }\",\"在执行的时候，会先判断执行条件，再执行。for循环可以用来遍历数组，字符串，类数组，DOM节点等。可以改变原数组。\"]},\"889\":{\"h\":\"2. while\",\"t\":[\"while循环中的结束条件可以是各种类型，但是最终都会转为布尔值，转换规则如下。\",\"Boolean：true为真，false为假；\",\"String：空字符串为假，所有非空字符串为真；\",\"Number：0为假，非0数字为真；\",\"null/Undefined/NaN：全为假；\",\"Object：全为真。\",\"let num = 1; while (num < 10){ console.log(num); num ++; }\",\"while和for一样，都是先判断，再执行。只要指定条件为 true，循环就可以一直执行代码。\"]},\"890\":{\"h\":\"3. do / while\",\"t\":[\"该方法会先执行再判断，即使初始条件不成立，do/while循环也至少会执行一次。\",\"let num = 10; do { console.log(num); num--; } while(num >= 0); console.log(num); //-1\",\"不建议使用do / while来遍历数组。\"]},\"891\":{\"h\":\"4. for await of\",\"t\":[\"for await...of方法被称为异步迭代器，该方法是主要用来遍历异步对象。它是ES2018中引入的方法。\",\"for await...of 语句会在异步或者同步可迭代对象上创建一个迭代循环，包括 String，Array，类数组，Map， Set和自定义的异步或者同步可迭代对象。这个语句只能在 async function内使用：\",\"function Gen (time) { return new Promise((resolve,reject) => { setTimeout(function () { resolve(time) },time) }) } async function test () { let arr = [Gen(2000),Gen(100),Gen(3000)] for await (let item of arr) { console.log(Date.now(),item) } } test()\"]},\"892\":{\"c\":[\"Javascript\"]},\"893\":{\"c\":[\"遍历\"]},\"894\":{\"h\":\"闭包\"},\"895\":{\"h\":\"1. 作用域\",\"t\":[\"对于多数编程语言，最基本的功能就是能够存储变量当中的值、并且允许我们对这个变量的值进行访问和修改。那么有了变量之后，应该把它放在哪里、程序如何找到它们？是否需要提前约定好一套存储变量、访问变量的规则？答案是肯定的，这套规则就是作用域。\",\"说到作用域那就不得不先说一说编译原理。\",\"JavaScript 引擎进行编译的步骤和传统的编译语言非常相似，在传统的编译语言中，程序中的代码在执行之后会经历三个步骤：词法分析、语法分析、代码生成：\",\"词法分析：这个阶段会将源代码拆成最小的、不可再分的词法单元（token）。比如代码 var name = 'hello'；通常会被分解成 var 、name、=、hello、; 这五个词法单元。代码中的空格在 JavaScript 中是被直接忽略的。\",\"语法分析：这个过程是将上一步生成的 token 数据，根据语法规则转为 AST。如果源码符合语法规则，这一步就会顺利完成。如果源码存在语法错误，这一步就会终止，并抛出一个“语法错误”。\",\"代码生成：这一步就是将 AST 转化为可执行代码，简单来说就是将 var name = 'hello'; 的 AST 转化为一组机器指令，用来创建一个 name 变量（需要给 name 分配内存），并将一个值储存在 name 中。\",\"比起那些编译过程只有三个步骤的语言的编译器，JavaScript 引擎要复杂的多，这里不再细说。总之，任何 JavaScript 代码片段在执行前都要进行编译，因此在 JS 引擎眼里，var name = 'hello'; 语句包含了两个声明：\",\"var name （编译时处理）\",\"name = 'hello' （运行时处理）\",\"你可能会问，JS 不是不存在编译阶段的“动态语言”吗？事实上，JS 也是有编译阶段的，它和传统语言的区别在于，JS 不会早早地把编译工作做完，而是一边编译一边执行。简单来说，所有的 JS 代码片段在执行之前都会被编译，只是这个编译的过程非常短暂（可能就只有几微妙、或者更短的时间），紧接着这段代码就会被执行。\",\"在编译阶段和执行阶段阶段的过程如下：\",\"编译阶段：编译器会找遍当前作用域，看看是不是已经有一个叫 name 的变量。如果有，那么就忽略 var name 这个声明，继续编译下去；如果没有，则在当前作用域里新增一个 name。然后，编译器会为引擎生成运行时所需要的代码，程序就进入了执行阶段。\",\"执行阶段：JS 引擎在执行代码的时候，仍然会查找当前作用域，看看是不是有一个叫 name 的变量。如果能找到，就给它赋值。如果找不到，就会从当前作用域里向上层作用域逐级查找。如果最终仍然找不到 name 变量，引擎就会抛出一个异常。\",\"这里，JS 引擎的查找过程就是作用域链，作用域指的是变量能够被访问到的范围。在 JavaScript 中，作用域也分为好几种，ES6 之前只有全局作用域和函数作用域两种。ES6 出现之后，又新增了块级作用域，下面这来看看这几个概念。\"]},\"896\":{\"h\":\"（1）全局作用域\",\"t\":[\"在编程语言中，变量一般会分为全局变量和局部变量。在 JavaScript 中，全局变量是挂载在 window 对象下的变量，所以在网页中的任何位置都可以使用并且访问到这个全局变量。下面来看一下全局作用域：\",\"var globalName = 'global' function getName() { console.log(globalName) // global var name = 'inner' console.log(name) // inner } getName() console.log(name) console.log(globalName) //global\",\"可以看到，globalName 变量在任何地方都是可以被访问到的，所以它就是全局变量。而在 getName 函数中作为局部变量的 name 变量是不具备这种能力的。\",\"在 JavaScript 中，所有没有经过定义而直接被赋值的变量默认就是一个全局变量，比如下面代码中 setName 函数里面的 vName：\",\"function setName() { vName = 'setName' } setName() console.log(vName) // setName console.log(window.vName) // setName\",\"可以发现，全局变量是拥有全局的作用域，无论在何处都可以使用它，在浏览器控制台输入 window.vName 时，就可以访问到 window 上的全局变量。当然全局作用域有相应的缺点，当定义很多全局变量时，可能会引起变量命名的冲突，所以在定义变量时应该注意作用域的问题。\",\"注意：\",\"没有经过定义，而直接被赋值的变量默认就是一个全局变量\",\"全局变量拥有全局作用域，无论在何处都可以使用它，全局作用域的变量实际上被绑定到window 的一个属性\",\"全局变量多会引发变量冲突问题\"]},\"897\":{\"h\":\"（2）函数作用域\",\"t\":[\"在 JavaScript 中，函数中定义的变量叫作函数变量，这种变量只能在函数内部才能访问到，所以它的作用域也就是函数的内部，称为函数作用域：\",\"function getName() { var name = 'inner' console.log(name) //inner } getName() console.log(name)\",\"可以看到，name 变量是在 getName 函数中进行定义的，所以 name 是一个局部的变量，它的作用域就在 getName 函数里，也称作函数作用域。\",\"除了这个函数内部，其他地方都是不能访问到它的。同时，当这个函数被执行完之后，这个局部变量也相应会被销毁。所以会看到在 getName 函数外面的 name 是访问不到的。\"]},\"898\":{\"h\":\"（3）块级作用域\",\"t\":[\"ES6 中新增了块级作用域，最直接的表现就是新增的 let 和 const 关键词，使用这两个关键词定义的变量只能在块级作用域中被访问，有“暂时性死区”的特点，也就是说这个变量在定义之前是不能被使用的。\",\"说到暂时性死区，还要从“变量提升”说起，来看下面代码：\",\"function foo() { console.log(bar) var bar = 3 } foo()\",\"上面代码会输出：undefined，原因是变量 bar 在函数内进行了提升。相当于：\",\"function foo() { var bar console.log(bar) bar = 3 } foo()\",\"但在使用 let 声明时，会报错：\",\"function foo() { console.log(bar) let bar = 3 } foo() // Uncaught ReferenceError: bar is not defined。\",\"使用 let 或 const 声明变量，会针对这个变量形成一个封闭的块级作用域，在这个块级作用域当中，如果在声明变量前访问该变量，就会报 referenceError 错误；如果在声明变量后访问，则可以正常获取变量值：\",\"function foo() { let bar = 3 console.log(bar) } foo()\",\"这段代码正常输出 3。因此在相应花括号形成的作用域中，存在一个“死区”，起始于函数开头，终止于相关变量声明的一行。在这个范围内无法访问 let 或 const 声明的变量。\",\"说完暂时性死区，下面来看看块级作用域。在 JavaScript 编码过程中， if 语句及 for 语句后面 {} 这里面所包括的就是块级作用域：\",\"console.log(a) //a is not defined if(true){ let a = '123'； console.log(a)； // 123 } console.log(a) //a is not defined\",\"可以看到，变量 a 是在 if 语句{} 中由 let 关键词进行定义的变量，所以它的作用域是 if 语句括号中的那部分，而在外面进行访问 a 变量是会报错的，因为这里不是它的作用域。所以在 if 代码块的前后输出 a 这个变量的结果，控制台会显示 a 并没有定义。\"]},\"899\":{\"h\":\"2. 闭包\"},\"900\":{\"h\":\"（1）闭包基本概念\",\"t\":[\"MDN 中闭包的定义：\",\"一个函数和对其周围状态的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）。也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域。\",\"通俗来讲，闭包其实就是一个可以访问其他函数内部变量的函数。即一个定义在函数内部的函数，或者说闭包是个内嵌函数。\",\"通常情况下，函数内部变量是无法在外部访问的（即全局变量和局部变量的区别），因此使用闭包的作用，就具备实现了能在外部访问某个函数内部变量的功能，让这些内部变量的值始终可以保存在内存中：\",\"function fun1() { var a = 1 return function () { console.log(a) } } var result = fun1() result() // 1\",\"这段代码在控制台中输出的结果是 1（即 a 的值）。可以发现，a 变量作为一个 fun1 函数的内部变量，正常情况下作为函数内的局部变量，是无法被外部访问到的。但是通过闭包，最后可以拿到 a 变量的值。\",\"从直观上来看，闭包这个概念为 JavaScript 中访问函数内变量提供了途径和便利。这样做的好处很多，比如，可以利用闭包实现缓存等。\"]},\"901\":{\"h\":\"（2）闭包产生原因\",\"t\":[\"上面说了作用域的概念，我们还需要知道作用域链的基本概念。当访问一个变量时，代码解释器会首先在当前的作用域查找，如果没找到，就去父级作用域去查找，直到找到该变量或者不存在父级作用域中，这样的链路就是作用域链。\",\"需要注意，每一个子函数都会拷贝上级的作用域，形成一个作用域链：\",\"var a = 1; function fun1() { var a = 2 function fun2() { var a = 3; console.log(a);//3 } } }\",\"可以看到，fun1 函数的作用域指向全局作用域（window）和它自己本身；fun2 函数的作用域指向全局作用域 （window）、fun1 和它本身；而作用域是从最底层向上找，直到找到全局作用域 window 为止，如果全局还没有的话就会报错。这就很形象地说明了什么是作用域链，即当前函数一般都会存在上层函数的作用域的引用，那么他们就形成了一条作用域链。\",\"由此可见，闭包产生的本质就是：当前环境中存在指向父级作用域的引用。\",\"function fun1() { var a = 2 function fun2() { console.log(a) //2 } return fun2 } var result = fun1() result()\",\"可以看到，这里 result 会拿到父级作用域中的变量，输出 2。因为在当前环境中，含有对 fun2 函数的引用，fun2 函数恰恰引用了 window、fun1 和 fun2 的作用域。因此 fun2 函数是可以访问到 fun1 函数的作用域的变量。\",\"那是不是只有返回函数才算是产生了闭包呢？其实也不是，回到闭包的本质，只需要让父级作用域的引用存在即可，因此可以这样修改上面的代码：\",\"var fun3 function fun1() { var a = 2 fun3 = function () { console.log(a) } } fun1() fun3()\",\"可以看到，其中实现的结果和前一段代码的效果其实是一样的，就是在给 fun3 函数赋值后，fun3 函数就拥有了 window、fun1 和 fun3 本身这几个作用域的访问权限；然后还是从下往上查找，直到找到 fun1 的作用域中存在 a 这个变量；因此输出的结果还是 2，最后产生了闭包，形式变了，本质没有改变。\"]},\"902\":{\"h\":\"（3）闭包应用场景\",\"t\":[\"下面来看看闭包的表现形式及应用场景：\",\"在定时器、事件监听、Ajax 请求、Web Workers 或者任何异步中，只要使用了回调函数，实际上就是在使用闭包：\",\"// 定时器 setTimeout(function handler(){ console.log('1'); }，1000); // 事件监听 document.getElementById(app).addEventListener('click', () => { console.log('Event Listener'); });\",\"作为函数参数传递的形式：\",\"var a = 1 function foo() { var a = 2 function baz() { console.log(a) } bar(baz) } function bar(fn) { // 这是闭包 fn() } foo() // 输出2，而不是1\",\"IIFE（立即执行函数），创建了闭包，保存了全局作用域（window）和当前函数的作用域，因此可以输出全局的变量：\",\"var a = 2 ;(function IIFE() { console.log(a) // 输出2 })()\",\"IIFE 是一种自执行匿名函数，这个匿名函数拥有独立的作用域。这不仅可以避免了外界访问此 IIFE 中的变量，而且又不会污染全局作用域。\",\"结果缓存（备忘模式）\",\"备忘模式就是应用闭包的特点的一个典型应用。比如下面函数：\",\"function add(a) { return a + 1 }\",\"当多次执行 add() 时，每次得到的结果都是重新计算得到的，如果是开销很大的计算操作的话就比较消耗性能了，这里可以对已经计算过的输入做一个缓存。所以这里可以利用闭包的特点来实现一个简单的缓存，在函数内部用一个对象存储输入的参数，如果下次再输入相同的参数，那就比较一下对象的属性，如果有缓存，就直接把值从这个对象里面取出来。实现代码如下：\",\"function memorize(fn) { var cache = {} return function () { var args = Array.prototype.slice.call(arguments) var key = JSON.stringify(args) return cache[key] || (cache[key] = fn.apply(fn, args)) } } function add(a) { return a + 1 } var adder = memorize(add) adder(1) // 输出: 2 当前: cache: { '[1]': 2 } adder(1) // 输出: 2 当前: cache: { '[1]': 2 } adder(2) // 输出: 3 当前: cache: { '[1]': 2, '[2]': 3 }\",\"使用 ES6 的方式实现：\",\"function memorize(fn) { const cache = {} return function (...args) { const key = JSON.stringify(args) return cache[key] || (cache[key] = fn.apply(fn, args)) } } function add(a) { return a + 1 } const adder = memorize(add) adder(1) // 输出: 2 当前: cache: { '[1]': 2 } adder(1) // 输出: 2 当前: cache: { '[1]': 2 } adder(2) // 输出: 3 当前: cache: { '[1]': 2, '[2]': 3 }\",\"备忘函数中用 JSON.stringify 把传给 adder 函数的参数序列化成字符串，把它当做 cache 的索引，将 add 函数运行的结果当做索引的值传递给 cache，这样 adder 运行的时候如果传递的参数之前传递过，那么就返回缓存好的计算结果，不用再计算了，如果传递的参数没计算过，则计算并缓存 fn.apply(fn, args)，再返回计算的结果。\"]},\"903\":{\"h\":\"（4）循环输出问题\",\"t\":[\"最后来看一个常见的和闭包相关的循环输出问题，代码如下：\",\"for (var i = 1; i <= 5; i++) { setTimeout(function () { console.log(i) }, 0) }\",\"这段代码输出的结果是 5 个 6，那为什么都是 6 呢？如何才能输出 1、2、3、4、5 呢？\",\"可以结合以下两点来思考第一个问题：\",\"setTimeout 为宏任务，由于 JS 中单线程 eventLoop 机制，在主线程同步任务执行完后才去执行宏任务，因此循环结束后 setTimeout 中的回调才依次执行。\",\"因为 setTimeout 函数也是一种闭包，往上找它的父级作用域链就是 window，变量 i 为 window 上的全局变量，开始执行 setTimeout 之前变量 i 已经就是 6 了，因此最后输出的连续就都是 6。\",\"那如何按顺序依次输出 1、2、3、4、5 呢？\",\"利用 IIFE\",\"可以利用 IIFE（立即执行函数），当每次 for 循环时，把此时的变量 i 传递到定时器中，然后执行，改造之后的代码如下。\",\"for (var i = 1; i <= 5; i++) { ;(function (j) { setTimeout(function timer() { console.log(j) }, 0) })(i) }\",\"可以看到，通过这样改造使用 IIFE（立即执行函数），可以实现序号的依次输出。利用立即执行函数的入参来缓存每一个循环中的 i 值。\",\"使用 ES6 中的 let\",\"ES6 中新增的 let 定义变量的方式，使得 ES6 之后 JS 发生革命性的变化，让 JS 有了块级作用域，代码的作用域以块级为单位进行执行。\",\"for (let i = 1; i <= 5; i++) { setTimeout(function () { console.log(i) }, 0) }\",\"可以看到，通过 let 定义变量的方式，重新定义 i 变量，则可以用最少的改动成本，解决该问题。\",\"定时器第三个参数\",\"setTimeout 作为经常使用的定时器，它是存在第三个参数的。我们经常使用前两个，一个是回调函数，另外一个是定时时间，setTimeout 从第三个入参位置开始往后，是可以传入无数个参数的。这些参数会作为回调函数的附加参数存在。那么结合第三个参数，调整完之后的代码如下：\",\"for (var i = 1; i <= 5; i++) { setTimeout( function (j) { console.log(j) }, 0, i ) }\"]},\"904\":{\"c\":[\"Javascript\"]},\"905\":{\"c\":[\"闭包\"]},\"906\":{\"h\":\"介绍\"},\"907\":{\"h\":\"Linux\",\"t\":[\"linux 是一套免费使用和自由传播到类 Unix 操作系统\",\"在服务器端领域和嵌入式领域有非常广泛的应用\"]},\"908\":{\"h\":\"版本\",\"t\":[\"分为内核版本和发型版本\",\"kemei\",\"各个厂商惠制作自己的发型版本 \",\"redhat\",\"CentOS\",\"ubuntu\",\"fedora\"]},\"909\":{\"h\":\"Linux 与 Windows 的不同\",\"t\":[\"Linux 严格区分大小写\",\"Linux 中所有内容以文件形式保存，包括硬件、用户和文件\",\"Linux 不靠扩展名区分文件类型，是靠权限来区分，但是有一些约定的扩展名，是给管理员看的 \",\"压缩包 .gz .bz2 .tar .tgz\",\"二进制文件 .rpm\",\"网页文件 .html .php\",\"脚本文件 .sh\",\"配置文件 .conf\",\"Windows 下的程序不能直接在 Linux 中安装和运行\",\"Linux 更多实用字符界面 \",\"占用的系统资源更少\",\"减少了出错和被攻击的可能行，会让系统更稳定\"]},\"910\":{\"c\":[\"Linux\"]},\"911\":{\"c\":[\"Linux\"]},\"912\":{\"h\":\"基础\"},\"913\":{\"h\":\"目录结构\",\"t\":[\"目录\",\"用途\",\"/\",\"根目录\",\"/bin\",\"普通的基本命令，如 ls、chmod 等，一般的用户也都可以使用\",\"/boot\",\"这里存放的是启动 Linux 时使用的一些核心文件，启动目录，启动相关文件\",\"/dev\",\"该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的\",\"/etc\",\"存放所有的系统管理所需要的配置文件和子目录\",\"/home\",\"普通用户的家目录，可以操作\",\"/lib\",\"系统库保存目录\",\"/media\",\"U 盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下\",\"/mnt\",\"移动设备挂载目录\",\"/opt\",\"这是给主机额外安装软件所摆放的目录。比如你安装一个 ORACLE 数据库则就可以放到这个目录下,默认是空的\",\"/proc\",\"正在运行的内核信息映射、主要输出进行信息、内存资源信息和磁盘分析信息等\",\"/root\",\"超级用户的家目录，可以操作\",\"/sbin\",\"基本的系统命令，如 shutdown、reboot，用于启动系统，只有管理员才可以运行\",\"/sys\",\"系统设备等驱动程序信息\",\"/tmp\",\"临时目录，可以操作\",\"/user/bin\",\"是你在后期安装的一些软件的运行脚本\",\"/user/sbin\",\"放置一些用户安装的系统管理的必备程序\",\"/var\",\"这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件\"]},\"914\":{\"h\":\"命令基本格式\"},\"915\":{\"h\":\"命令提示符\",\"t\":[\"[root@localhost ~]#\",\"root 当前用户\",\"localhost 当前主机名\",\"~当前用户的家目录\",\"提示符 超级用户是#，普通用户是$\"]},\"916\":{\"h\":\"命令格式\",\"t\":[\"命令 选项 参数\",\"命令 [选项][参数]\",\"当有多个选项时，可以写在一起\",\"一般参数有简化和完整两种写法\"]},\"917\":{\"h\":\"关机和重启命令\"},\"918\":{\"h\":\"shutdown\",\"t\":[\"可以用来进行关机程序，并且在关机以前传送讯息给所有使用者正在执行的程序，shutdown 也可以用来重开机。\",\"使用权限：系统管理者。\"]},\"919\":{\"h\":\"语法\",\"t\":[\"shutdown [-t seconds] [-rkhncfF] time [message]\",\"-t seconds: 设定在几秒钟之后进行关机程序。\",\"-k: 并不会真的关机，只是将警告讯息传送给所有使用者。\",\"-r: 关机后重新开机。\",\"-h: 关机后停机。\",\"-n: 不采用正常程序来关机，用强迫的方式杀掉所有执行中的程序后自行关机。\",\"-c: 取消目前已经进行中的关机动作。\",\"-f: 关机时，不做 fsck 动作(检查 Linux 档系统)。\",\"-F: 关机时，强迫进行 fsck 动作。\",\"time: 设定关机的时间。\",\"message: 传送给所有使用者的警告讯息。\"]},\"920\":{\"h\":\"实例\",\"t\":[\"立即关机\",\"shutdown -h now\",\"指定 10 分钟后关机\",\"shutdown -h 10\",\"重新启动计算机\",\"shutdown -r now\"]},\"921\":{\"h\":\"reboot\",\"t\":[\"用于用来重新启动计算机。\",\"reboot [-n] [-w] [-d] [-f] [-i]\",\"-n: 在重开机前不做将记忆体资料写回硬盘的动作\",\"-w: 并不会真的重开机，只是把记录写到 /var/log/wtmp 档案里\",\"-d: 不把记录写到 /var/log/wtmp 档案里（-n 这个参数包含了 -d）\",\"-f: 强迫重开机，不呼叫 shutdown 这个指令\",\"-i: 在重开机之前先把所有网络相关的装置先停止\"]},\"922\":{\"h\":\"实例\",\"t\":[\"重新启动\",\"reboot\"]},\"923\":{\"h\":\"语法\"},\"924\":{\"h\":\"登录与退出\"},\"925\":{\"h\":\"logout\",\"t\":[\"用于退出系统。\"]},\"926\":{\"h\":\"语法\",\"t\":[\"logout\"]},\"927\":{\"h\":\"login\",\"t\":[\"用于登入系统\"]},\"928\":{\"h\":\"语法\",\"t\":[\"login\"]},\"929\":{\"h\":\"who\",\"t\":[\"用于显示系统中有哪些使用者正在上面，显示的资料包含了使用者 ID、使用的终端机、从哪边连上来的、上线时间、呆滞时间、CPU 使用量、动作等等。\",\"使用权限：所有使用者都可使用。\"]},\"930\":{\"h\":\"语法\",\"t\":[\"who - [husfV] [user]\",\"-H或--heading：显示各栏位的标题信息列；\",\"-i或-u或--idle：显示闲置时间，若该用户在前一分钟之内有进行任何动作，将标示成\\\".\\\"号，如果该用户已超过24小时没有任何动作，则标示出\\\"old\\\"字符串；\",\"-m：此参数的效果和指定\\\"am i\\\"字符串相同；\",\"-q或--count：只显示登入系统的帐号名称和总人数；\",\"-s：此参数将忽略不予处理，仅负责解决who指令其他版本的兼容性问题；\",\"-w或-T或--mesg或--message或--writable：显示用户的信息状态栏；\",\"--help：在线帮助；\",\"--version：显示版本信息。\"]},\"931\":{\"h\":\"实例\",\"t\":[\"显示当前登录系统的用户\",\"who //显示当前登录系统的用户 # root tty7 2014-05-13 12:12 (:0) # root pts/0 2014-05-14 17:09 (:0.0) # root pts/1 2014-05-14 18:51 (192.168.1.17) # root pts/2 2014-05-14 19:48 (192.168.1.17)\"]},\"932\":{\"c\":[\"Linux\"]},\"933\":{\"c\":[\"Linux\"]},\"934\":{\"h\":\"用户和用户组\"},\"935\":{\"h\":\"用户和用户组\",\"t\":[\"使用操作系统的人都是用户\",\"用户组是具有相同系统权限的一组用户\"]},\"936\":{\"h\":\"配置文件\"},\"937\":{\"h\":\"/ect/group\",\"t\":[\"/etc/group 存储当前系统中所有用户信息\",\"root 组编好为 0\",\"1-499 为系统预留的编号 预留给安装的软件和服务的\",\"用户手动创建的用户组从 500 开始\",\"组密码占位符都是 x\",\"如果组内只有高一个用户，而且用户名和组名相同的话，是可以省略用户名的\",\"root:x:0:root\",\"含义\",\"含义\",\"root\",\"组的名称\",\"x\",\"密码占位符\",\"0\",\"组编号\",\"root\",\"组中用户名列表\"]},\"938\":{\"h\":\"/etc/gshow\",\"t\":[\"存放当前系统中用户组的密码信息\",\"和/etc/group 中的记录一一对应\",\"root:*::root\",\"内容\",\"含义\",\"root\",\"组的名称\",\"*\",\"组密码，*为空\",\"组管理者，为空表示都可以管理这个组\",\"root\",\"组中用户名列表\"]},\"939\":{\"h\":\"/etc/passwd\",\"t\":[\"存储当前系统中所有用户信息\",\"用户名:密码占位符:用户编号:组编号:用户全名:用户主目录:用户登录Shell\",\"root:x:0:0:root:/root:/bin/bash\",\"内容\",\"含义\",\"root\",\"用户名\",\"x\",\"密码占位符\",\"0\",\"用户编号\",\"0\",\"组编号\",\"root\",\"用户注释信息\",\"/root\",\"用户主目录\",\"/bin/bash\",\"shell类型\"]},\"940\":{\"h\":\"etc/shadow\",\"t\":[\"存放当前系统中所有用户的密码信息\",\"user:xx:::::::\",\"用户名:密码\",\"root:password:17982:0:99999:7:::\",\"内容\",\"含义\",\"root\",\"用户名\",\"password\",\"单向加密后的密码\",\"17982\",\"修改日期，这个是表明上一次修改密码的日期与1970-1-1相距的天数密码不可改的天数：假如这个数字是8，则8天内不可改密码，如果是0，则随时可以改\",\"0\",\"这是表明上一次修改密码的日期与1970-1-1相距的天数密码不可改的天数；假如这个数字是8，则8天内不可改密码，如果是0，则随时可以改\",\"99999\",\"如果是99999则永远不用改。如果是其其他数字比如12345，那么必须在距离1970-1-1的12345天内修改，否则密码失效\",\"7\",\"修改期限前N天发出警告\",\"密码过期的宽限天数\",\"账号失效日期\",\"保留：被保留项，暂时还没有被用上\"]},\"941\":{\"h\":\"用户命令\",\"t\":[\"显示登录的用户名\",\"whoami\",\"显示指定用户信息，包括用户标号，用户名 主要组的编号及名称，附属组列表\",\"id student\",\"显示zhangsan用户所在的所有组\",\"groups student\"]},\"942\":{\"h\":\"用户和用户组操作\"},\"943\":{\"h\":\"useradd\",\"t\":[\"用于建立用户帐号。useradd 可用来建立用户帐号。帐号建好之后，再用 passwd 设定帐号的密码。而可用 userdel 删除帐号。使用 useradd 指令所建立的帐号，实际上是保存在 /etc/passwd 文本文件中。\"]},\"944\":{\"h\":\"语法\",\"t\":[\"useradd [-mMnr][-c <备注>][-d <登入目录>][-e <有效期限>][-f <缓冲天数>][-g <群组>][-G <群组>][-s <shell>][-u <uid>][用户帐号]\",\"或\",\"useradd -D [-b][-e <有效期限>][-f <缓冲天数>][-g <群组>][-G <群组>][-s <shell>]\",\"-c<备注>:加上备注文字。备注文字会保存在passwd的备注栏位中。\",\"-d<登入目录>:指定用户登入时的起始目录。\",\"-D:变更预设值．\",\"-e<有效期限>:指定帐号的有效期限。\",\"-f<缓冲天数>:指定在密码过期后多少天即关闭该帐号。\",\"-g<群组>:指定用户所属的群组。\",\"-G<群组>:指定用户所属的附加群组。\",\"-m:制定用户的登入目录。\",\"-M:不要自动建立用户的登入目录。\",\"-n:取消建立以用户名称为名的群组．\",\"-r:建立系统帐号。\",\"-s<shell>:指定用户登入后所使用的shell。\",\"-u<uid>:指定用户ID。\"]},\"945\":{\"h\":\"实例\",\"t\":[\"添加一般用户\",\"useradd tt\",\"为添加的用户指定相应的用户组\",\"useradd -g root tt\",\"创建一个系统用户\",\"useradd -r tt\",\"为新添加的用户指定home目录\",\"useradd -d /home/myd tt\",\"建立用户且制定ID\",\"useradd caojh -u 544\"]},\"946\":{\"h\":\"userdel\",\"t\":[\"用于删除用户帐号。\"]},\"947\":{\"h\":\"语法\",\"t\":[\"userdel [-r][用户帐号]\",\"-r:删除用户登入目录以及目录中所有文件。\"]},\"948\":{\"h\":\"实例\",\"t\":[\"删除用户账号\",\"userdel hnlinux\"]},\"949\":{\"h\":\"usermod\",\"t\":[\"用于修改用户帐号。\"]},\"950\":{\"h\":\"语法\",\"t\":[\"usermod [-LU][-c <备注>][-d <登入目录>][-e <有效期限>][-f <缓冲天数>][-g <群组>][-G <群组>][-l <帐号名称>][-s <shell>][-u <uid>][用户帐号]\",\"-c<备注>:修改用户帐号的备注文字。\",\"-d登入目录>:修改用户登入时的目录。\",\"-e<有效期限>:修改帐号的有效期限。\",\"-f<缓冲天数>:修改在密码过期后多少天即关闭该帐号。\",\"-g<群组>:修改用户所属的群组。\",\"-G<群组>:修改用户所属的附加群组。\",\"-l<帐号名称>:修改用户帐号名称。\",\"-L:锁定用户密码，使密码无效。\",\"-s<shell>:修改用户登入后所使用的shell。\",\"-u<uid>:修改用户ID。\",\"-U:解除密码锁定。\"]},\"951\":{\"h\":\"实例\",\"t\":[\"更改登录目录\",\"usermod -d /home/hnlinux root\",\"改变用户的uid\",\"usermod -u 777 root\"]},\"952\":{\"h\":\"groupadd\",\"t\":[\"用于创建一个新的工作组，新工作组的信息将被添加到系统文件中。\"]},\"953\":{\"h\":\"语法\",\"t\":[\"groupadd [-g gid [-o]] [-r] [-f] group\",\"-g：指定新建工作组的 id；\",\"-r：创建系统工作组，系统工作组的组 ID 小于 500；\",\"-K：覆盖配置文件 /etc/login.defs；\",\"-o：允许添加组 ID 号不唯一的工作组。\",\"-f,--force: 如果指定的组已经存在，此选项将失明了仅以成功状态退出。当与 -g 一起使用，并且指定的 GID_MIN 已经存在时，选择另一个唯一的 GID（即 -g 关闭）。\"]},\"954\":{\"h\":\"实例\",\"t\":[\"向系统中增加了一个新组group1\",\"groupadd group1\",\"创建一个新的组，并添加组 ID。\",\"groupadd －g 344 runoob\"]},\"955\":{\"h\":\"groupdel\",\"t\":[\"用于删除群组。\"]},\"956\":{\"h\":\"语法\",\"t\":[\"groupdel [群组名称]\"]},\"957\":{\"h\":\"实例\",\"t\":[\"删除一个群组\",\"groupdel hnuser\"]},\"958\":{\"h\":\"groupmod\",\"t\":[\"用于更改群组识别码或名称。\"]},\"959\":{\"h\":\"语法\",\"t\":[\"groupmod [-g <群组识别码> <-o>][-n <新群组名称>][群组名称]\",\"-g <群组识别码>:设置欲使用的群组识别码。\",\"-o:重复使用群组识别码。\",\"-n <新群组名称>:设置欲使用的群组名称。\"]},\"960\":{\"h\":\"实例\",\"t\":[\"修改组名\",\"groupmod -n linux linuxso\"]},\"961\":{\"h\":\"newgrp\",\"t\":[\"用于登入另一个群组。\"]},\"962\":{\"h\":\"语法\",\"t\":[\"newgrp [群组名称]\"]},\"963\":{\"h\":\"实例\",\"t\":[\"改变群组\",\"newgrp root\"]},\"964\":{\"c\":[\"Linux\"]},\"965\":{\"c\":[\"Linux\"]},\"966\":{\"h\":\"目录与文件\"},\"967\":{\"h\":\"cd\",\"t\":[\"命令用于改变当前工作目录的命令，切换到指定的路径。\",\"若目录名称省略，则变换至使用者的 home 目录 (也就是刚 login 时所在的目录)。\",\"~也表示为 home 目录 的意思，.则是表示目前所在的目录，..则表示目前目录位置的上一层目录。\"]},\"968\":{\"h\":\"语法\",\"t\":[\"cd [dirName]\",\"dirName：要切换的目标目录，可以是相对路径或绝对路径。\"]},\"969\":{\"h\":\"pwd\",\"t\":[\"命令用于显示工作目录。\",\"执行pwd指令可立刻得知您目前所在的工作目录的绝对路径名称。\"]},\"970\":{\"h\":\"语法\",\"t\":[\"pwd [--help][--version]\",\"--help 在线帮助。\",\"--version 显示版本信息。\"]},\"971\":{\"h\":\"ls\",\"t\":[\"命令用于显示指定工作目录下之内容（列出目前工作目录所含的文件及子目录）。\"]},\"972\":{\"h\":\"语法\",\"t\":[\"ls [-alrtAFR] [name...]\",\"-a 显示所有文件及目录 (.开头的隐藏文件也会列出)\",\"-d 只列出目录（不递归列出目录内的文件）。\",\"-l 以长格式显示文件和目录信息，包括权限、所有者、大小、创建时间等。\",\"-r 倒序显示文件和目录。\",\"-t 将按照修改时间排序，最新的文件在最前面。\",\"-A 同-a，但不列出.(目前目录) 及..(父目录)\",\"-F 在列出的文件名称后加一符号；例如可执行档则加\\\\*, 目录则加/\",\"-R 递归显示目录中的所有文件和子目录。\"]},\"973\":{\"h\":\"实例\",\"t\":[\"当文件名包含空格、特殊字符或者开始字符为破折号时，可以使用反斜杠（\\\\）进行转义，或者使用引号将文件名括起来。例如：\",\"ls \\\"my file.txt\\\" # 列出文件名为\\\"my file.txt\\\"的文件 ls my\\\\ file.txt # 列出文件名为\\\"my file.txt\\\"的文件 ls -- -filename # 列出文件名为\\\"-filename\\\"的文件\",\"ls命令还可以使用通配符进行模式匹配，例如 \\\\* 表示匹配任意字符，?表示匹配一个字符。例如：\",\"ls *.txt # 列出所有扩展名为.txt的文件 ls file?.txt # 列出文件名为file?.txt的文件，其中?表示任意一个字符 ls [abc]*.txt # 列出以a、b或c开头、扩展名为.txt的文件\",\"列出目前工作目录下所有名称是s开头的文件，越新的排越后面:\",\"ls -ltr s*\"]},\"974\":{\"h\":\"mkdir\",\"t\":[\"命令用于创建目录。\"]},\"975\":{\"h\":\"语法\",\"t\":[\"mkdir [-p] dirName\",\"-p确保目录名称存在，不存在的就建一个。\"]},\"976\":{\"h\":\"实例\",\"t\":[\"在工作目录下，建立一个名为runoob的子目录 :\",\"mkdir runoob\",\"在工作目录下的runoob2目录中，建立一个名为test的子目录。\",\"若runoob2目录原本不存在，则建立一个。（注：本例若不加-p参数，且原本runoob2目录不存在，则产生错误。）\",\"mkdir -p runoob2/test\"]},\"977\":{\"h\":\"rmdir\",\"t\":[\"命令用于删除空目录。\"]},\"978\":{\"h\":\"语法\",\"t\":[\"rmdir [-p] dirName\",\"-p是当子目录被删除后使它也成为空目录的话，则顺便一并删除。\"]},\"979\":{\"h\":\"实例\",\"t\":[\"将工作目录下，名为AAA的子目录删除\",\"rmdir AAA\",\"在工作目录下的BBB目录中，删除名为Test的子目录。若Test删除后，BBB目录成为空目录，则BBB亦予删除\",\"rmdir -p BBB/Test\"]},\"980\":{\"h\":\"touch\",\"t\":[\"用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件。\"]},\"981\":{\"h\":\"语法\",\"t\":[\"touch [-acfm][-d<日期时间>][-r<参考文件或目录>] [-t<日期时间>][--help][--version][文件或目录…]\",\"a改变档案的读取时间记录。\",\"m改变档案的修改时间记录。\",\"c假如目的档案不存在，不会建立新的档案。与--no-create的效果一样。\",\"f不使用，是为了与其他unix系统的相容性而保留。\",\"r使用参考档的时间记录，与--file的效果一样。\",\"d设定时间与日期，可以使用各种不同的格式。\",\"t设定档案的时间记录，格式与date指令相同。\",\"--no-create不会建立新档案。\",\"--help列出指令格式。\",\"--version列出版本讯息。\"]},\"982\":{\"h\":\"cat\",\"t\":[\"作用是用于查看和连接文件。\"]},\"983\":{\"h\":\"语法\",\"t\":[\"cat [选项] [文件]\",\"参数说明： \",\"-n：显示行号，会在输出的每一行前加上行号。\",\"-b：显示行号，但只对非空行进行编号。\",\"-s：压缩连续的空行，只显示一个空行。\",\"-E：在每一行的末尾显示$符号。\",\"-T：将Tab字符显示为^I。\",\"-v：显示一些非打印字符。\",\"使用说明： \",\"显示文件内容：cat filename会将指定文件的内容输出到终端上。\",\"连接文件：cat file1 file2 > combined_file可以将file1和file2的内容连接起来，并将结果输出到combined_file中。\",\"创建文件：可以使用cat命令来创建文件，例如cat > filename，然后你可以输入文本，按Ctrl+D来保存并退出。\",\"在终端显示文件：可以将cat与管道|结合使用，用来显示其他命令的输出，例如ls -l | cat会将ls -l的输出通过cat打印到终端上。\"]},\"984\":{\"h\":\"实例\",\"t\":[\"查看文件内容：显示文件filename的内容。\",\"cat filename\",\"创建文件：将标准输入重定向到文件filename，覆盖该文件的内容。\",\"cat > filename\",\"追加内容到文件：将标准输入追加到文件filename的末尾。\",\"cat >> filename\",\"连接文件：将file1和file2的内容合并到file3中。\",\"cat file1 file2 > file3\",\"显示多个文件的内容：同时显示file1和file2的内容。\",\"cat file1 file2\",\"使用管道：将cat命令的输出作为另一个命令的输入。\",\"cat filename | command\",\"查看文件的最后几行：显示文件filename的最后 10 行。\",\"cat filename | tail -n 10\",\"使用-n选项显示行号：显示文件filename的内容，并在每行的前面加上行号。\",\"cat -n filename\",\"使用-b选项仅显示非空行的行号：\",\"cat -b filename\",\"使用-s选项合并空行：显示文件filename的内容，并合并连续的空行。\",\"cat -s filename\",\"使用-t选项显示制表符：显示文件filename的内容，并用^I表示制表符。\",\"cat -t filename\",\"使用-e选项显示行结束符：显示文件filename的内容，并用$表示行结束。\",\"cat -e filename\",\"把textfile1的文档内容加上行号后输入textfile2这个文档里：\",\"cat -n textfile1 > textfile2\",\"把textfile1和textfile2的文档内容加上行号（空白行不加）之后将内容附加到textfile3文档里：\",\"cat -b textfile1 textfile2 >> textfile3\"]},\"985\":{\"h\":\"more\",\"t\":[\"Linuxmore命令类似cat，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键space就往下一页显示，按b键就会往回back一页显示，而且还有搜寻字串的功能（与vi相似）\"]},\"986\":{\"h\":\"语法\",\"t\":[\"more [-dlfpcsu] [-num] [+/pattern] [+linenum] [fileNames..]\",\"参数 \",\"-num 一次显示的行数\",\"-d 提示使用者，在画面下方显示 [Press space to continue, 'q' to quit.] ，如果使用者按错键，则会显示 [Press 'h' for instructions.] 而不是 '哔' 声\",\"-l 取消遇见特殊字元^L时会暂停的功能\",\"-f 计算行数时，以实际上的行数，而非自动换行过后的行数（有些单行字数太长的会被扩展为两行或两行以上）\",\"-p 不以卷动的方式显示每一页，而是先清除萤幕后再显示内容\",\"-c 跟 -p 相似，不同的是先显示内容再清除其他旧资料\",\"-s 当遇到有连续两行以上的空白行，就代换为一行的空白行\",\"-u 不显示下引号 （根据环境变数 TERM 指定的 terminal 而有所不同）\",\"+/pattern 在每个文档显示前搜寻该字串，然后从该字串之后开始显示\",\"+num 从第num行开始显示\",\"fileNames 欲显示内容的文档，可为复数个数\",\"操作命令 \",\"Enter向下 n 行，需要定义,默认为 1 行\",\"Ctrl+F向下滚动一屏\",\"空格键向下滚动一屏\",\"Ctrl+B返回上一屏\",\"=输出当前行的行号\",\"：f 输出文件名和当前行的行号\",\"V调用 vi 编辑器\",\"!命令 调用 Shell，并执行命令\",\"q退出 more\"]},\"987\":{\"h\":\"实例\",\"t\":[\"逐页显示testfile文档内容，如有连续两行以上空白行则以一行空白行显示。\",\"more -s testfile\",\"从第 20 行开始显示testfile之文档内容。\",\"more +20 testfile\"]},\"988\":{\"h\":\"less\",\"t\":[\"less可以随意浏览文件，支持翻页和搜索，支持向上翻页和向下翻页。\"]},\"989\":{\"h\":\"语法\",\"t\":[\"less [参数] 文件\",\"参数说明 \",\"-b <缓冲区大小> 设置缓冲区的大小\",\"-e 当文件显示结束后，自动离开\",\"-f 强迫打开特殊文件，例如外围设备代号、目录和二进制文件\",\"-g 只标志最后搜索的关键词\",\"-i 忽略搜索时的大小写\",\"-m 显示类似 more 命令的百分比\",\"-N 显示每行的行号\",\"-o <文件名> 将less输出的内容在指定文件中保存起来\",\"-Q 不使用警告音\",\"-s 显示连续空行为一行\",\"-S 行过长时间将超出部分舍弃\",\"-x <数字> 将\\\"tab\\\"键显示为规定的数字空格\",\"/字符串：向下搜索\\\"字符串\\\"的功能\",\"?字符串：向上搜索\\\"字符串\\\"的功能\",\"n：重复前一个搜索（与 / 或 ? 有关）\",\"N：反向重复前一个搜索（与 / 或 ? 有关）\",\"b 向上翻一页\",\"d 向后翻半页\",\"h 显示帮助界面\",\"Q 退出 less 命令\",\"u 向前滚动半页\",\"y 向前滚动一行\",\"空格键 滚动一页\",\"回车键 滚动一行\",\"[pagedown]： 向下翻动一页\",\"[pageup]： 向上翻动一页\",\"快捷键 \",\"1.全屏导航 \",\"ctrl + F - 向前移动一屏\",\"ctrl + B - 向后移动一屏\",\"ctrl + D - 向前移动半屏\",\"ctrl + U - 向后移动半屏\",\"2.单行导航 \",\"j - 下一行\",\"k - 上一行\",\"3.其它导航 \",\"G - 移动到最后一行\",\"g - 移动到第一行\",\"q / ZZ - 退出less命令\",\"4.其它有用的命令 \",\"v - 使用配置的编辑器编辑当前文件\",\"h - 显示less的帮助文档\",\"&pattern - 仅显示匹配模式的行，而不是整个文件\",\"5.标记导航 \",\"ma - 使用a标记文本的当前位置\",\"'a - 导航到标记a处\"]},\"990\":{\"h\":\"实例\",\"t\":[\"查看文件\",\"less log2013.log\",\"ps查看进程信息并通过less分页显示\",\"ps -ef | less\"]},\"991\":{\"h\":\"tail\",\"t\":[\"用于查看文件的内容\"]},\"992\":{\"h\":\"语法\",\"t\":[\"tail [参数] [文件]\",\"-f 循环读取\",\"-q 不显示处理信息\",\"-v 显示详细的处理信息\",\"-c<数目> 显示的字节数\",\"-n<行数> 显示文件的尾部 n 行内容\",\"--pid=PID 与-f合用,表示在进程 ID,PID 死掉之后结束\",\"-q, --quiet, --silent 从不输出给出文件名的首部\",\"-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠 S 秒\"]},\"993\":{\"h\":\"实例\",\"t\":[\"要显示notes.log文件的最后 10 行，请输入以下命令：\",\"tail notes.log # 默认显示最后 10 行\",\"要跟踪名为notes.log的文件的增长情况，请输入以下命令：\",\"tail -f notes.log\",\"此命令显示notes.log文件的最后 10 行。当将某些行添加至notes.log文件时，tail命令会继续显示这些行。 显示一直继续，直到您按下（Ctrl-C）组合键停止显示。\",\"显示文件notes.log的内容，从第 20 行至文件末尾:\",\"tail -n +20 notes.log\",\"显示文件notes.log的最后 10 个字符:\",\"tail -c 10 notes.log\"]},\"994\":{\"h\":\"rm\",\"t\":[\"命令用于删除一个文件或者目录。\"]},\"995\":{\"h\":\"语法\",\"t\":[\"rm [options] name...\",\"-i 删除前逐一询问确认。\",\"-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。\",\"-r 将目录及以下之档案亦逐一删除。\"]},\"996\":{\"h\":\"实例\",\"t\":[\"删除当前目录下的所有文件及目录，命令行为：\",\"rm -r *\"]},\"997\":{\"h\":\"cp\",\"t\":[\"命令主要用于复制文件或目录。\"]},\"998\":{\"h\":\"语法\",\"t\":[\"cp [options] 源文件 目标文件\",\"-a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于 dpR 参数组合。\",\"-d：复制时保留链接。这里所说的链接相当于 Windows 系统中的快捷方式。\",\"-r 或 --recursive：用于复制目录及其所有的子目录和文件，如果要复制目录，需要使用该选项。\",\"-i 或 --interactive：在复制前提示确认，如果目标文件已存在，则会询问是否覆盖，回答 y 时目标文件将被覆盖。。\",\"-u 或 --update：仅复制源文件中更新时间较新的文件。\",\"-v 或 --verbose：显示详细的复制过程。\",\"-p 或 --preserve：保留源文件的权限、所有者和时间戳信息。\",\"-f 或 --force：强制复制，即使目标文件已存在也会覆盖，而且不给出提示。\",\"-l：不复制文件，只是生成链接文件。\"]},\"999\":{\"h\":\"实例\",\"t\":[\"将文件file.txt复制到目录/path/to/destination/中：\",\"cp file.txt /path/to/destination/\",\"使用指令cp将当前目录test/下的所有文件复制到新目录newtest下，输入如下命令： 注意：用户使用该指令复制目录时，必须使用参数-r或者-R\",\"cp –r test/ newtest\",\"复制文件，并在目标文件已存在时进行确认：\",\"cp -i file.txt /path/to/destination/\"]},\"1000\":{\"h\":\"mv\",\"t\":[\"命令用来为文件或目录改名、或将文件或目录移入其它位置。\"]},\"1001\":{\"h\":\"语法\",\"t\":[\"mv [options] source dest mv [options] source... directory\",\"-b: 当目标文件或目录存在时，在执行覆盖前，会为其创建一个备份。\",\"-i: 如果指定移动的源目录或文件与目标的目录或文件同名，则会先询问是否覆盖旧文件，输入y表示直接覆盖，输入n表示取消该操作。\",\"-f: 如果指定移动的源目录或文件与目标的目录或文件同名，不会询问，直接覆盖旧文件。\",\"-n: 不要覆盖任何已存在的文件或目录。\",\"-u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。\",\"命令格式\",\"运行结果\",\"mv source_file(文件) dest_file(文件)\",\"将源文件名 source_file 改为目标文件名 dest_file\",\"mv source_file(文件) dest_directory(目录)\",\"将文件 source_file 移动到目标目录 dest_directory 中\",\"mv source_directory(目录) dest_directory(目录)\",\"目录名 dest_directory 已存在，将 source_directory 移动到目录名 dest_directory 中；目录名 dest_directory 不存在则 source_directory 改名为目录名 dest_directory\",\"mv source_directory(目录) dest_file(文件)\",\"出错\"]},\"1002\":{\"h\":\"ln\",\"t\":[\"为某一个文件在另外一个位置建立一个同步的链接。当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用 ln 命令链接（link）它就可以，不必重复的占用磁盘空间。\",\"软链接： \",\"1.软链接，以路径的形式存在。类似于 Windows 操作系统中的快捷方式\",\"2.软链接可以 跨文件系统，硬链接不可以\",\"3.软链接可以对一个不存在的文件名进行链接\",\"4.软链接可以对目录进行链接\",\"硬链接： \",\"1.硬链接，以文件副本的形式存在。但不占用实际空间。\",\"2.不允许给目录创建硬链接\",\"3.硬链接只有在同一个文件系统中才能创建\"]},\"1003\":{\"h\":\"语法\",\"t\":[\"ln [参数][源文件或目录][目标文件或目录]\",\"必要参数 \",\"--backup[=CONTROL] 备份已存在的目标文件\",\"-b 类似--backup，但不接受参数\",\"-d 允许超级用户制作目录的硬链接\",\"-f 强制执行\",\"-i 交互模式，文件存在则提示用户是否覆盖\",\"-n 把符号链接视为一般目录\",\"-s 软链接(符号链接)\",\"-v 显示详细的处理过程\",\"选择参数： \",\"-S \\\"-S<字尾备份字符串>\\\"或--suffix=<字尾备份字符串>\",\"-V \\\"-V<备份方式>\\\"或--version-control=<备份方式>\",\"--help 显示帮助信息\",\"--version 显示版本信息\"]},\"1004\":{\"h\":\"实例\",\"t\":[\"ln -s log2013.log link2013\"]},\"1005\":{\"h\":\"find\",\"t\":[\"用于在指定目录下查找文件和目录。\"]},\"1006\":{\"h\":\"语法\",\"t\":[\"find [路径] [匹配条件] [动作]\",\"路径 是要查找的目录路径，可以是一个目录或文件名，也可以是多个路径，多个路径之间用空格分隔，如果未指定路径，则默认为当前目录。\",\"expression 是可选参数，用于指定查找的条件，可以是文件名、文件类型、文件大小等等。 \",\"-name pattern：按文件名查找，支持使用通配符 * 和 ?。\",\"-type type：按文件类型查找，可以是 f（普通文件）、d（目录）、l（符号链接）等。\",\"-size [+-]size[cwbkMG]：按文件大小查找，支持使用 + 或 - 表示大于或小于指定大小，单位可以是 c（字节）、w（字数）、b（块数）、k（KB）、M（MB）或 G（GB）。\",\"-mtime days：按修改时间查找，支持使用 + 或 - 表示在指定天数前或后，days 是一个整数表示天数。\",\"-user username：按文件所有者查找。\",\"-group groupname：按文件所属组查找。\",\"动作: 可选的，用于对匹配到的文件执行操作，比如删除、复制等。 \",\"-amin n：查找在n分钟内被访问过的文件。\",\"-atime n：查找在n*24小时内被访问过的文件。\",\"-cmin n：查找在n分钟内状态发生变化的文件（例如权限）。\",\"-ctime n：查找在n*24小时内状态发生变化的文件（例如权限）。\",\"-mmin n：查找在n分钟内被修改过的文件。\",\"-mtime n：查找在n*24小时内被修改过的文件。\"]},\"1007\":{\"h\":\"实例\",\"t\":[\"查找当前目录下名为 file.txt 的文件：\",\"find . -name file.txt\",\"将当前目录及其子目录下所有文件后缀为 .c 的文件列出来:\",\"find . -name \\\"*.c\\\"\",\"将当前目录及其子目录中的所有文件列出：\",\"find . -type f\",\"查找 /home 目录下大于 1MB 的文件：\",\"find /home -size +1M\",\"查找 /var/log 目录下在 7 天前修改过的文件：\",\"find /var/log -mtime +7\",\"查找过去 7 天内被访问的文件:\",\"find /path/to/search -atime -7\",\"在当前目录下查找最近 20 天内状态发生改变的文件和目录:\",\"find . -ctime 20\",\"将当前目录及其子目录下所有 20 天前及更早更新过的文件列出:\",\"find . -ctime +20\",\"查找 /var/log 目录中更改时间在 7 日以前的普通文件，并在删除之前询问它们：\",\"find /var/log -type f -mtime +7 -ok rm {} \\\\\",\"查找当前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件：\",\"find . -type f -perm 644 -exec ls -l {} \\\\\",\"查找系统中所有文件长度为 0 的普通文件，并列出它们的完整路径：\",\"find / -type f -size 0 -exec ls -l {} \\\\\",\"找并执行操作（例如删除）：\",\"find /path/to/search -name \\\"pattern\\\" -exec rm {} \\\\;\"]},\"1008\":{\"h\":\"diff\",\"t\":[\"用于比较文件的差异。diff 以逐行的方式，比较文本文件的异同处。如果指定要比较目录，则 diff 会比较目录中相同文件名的文件，但不会比较其中子目录。\"]},\"1009\":{\"h\":\"语法\",\"t\":[\"diff [-abBcdefHilnNpPqrstTuvwy][-<行数>][-C <行数>][-D <巨集名称>][-I <字符或字符串>][-S <文件>][-W <宽度>][-x <文件或目录>][-X <文件>][--help][--left-column][--suppress-common-line][文件或目录1][文件或目录2]\",\"`-<行数> 指定要显示多少行的文本。此参数必须与-c 或-u 参数一并使用。\",\"-a或--text diff 预设只会逐行比较文本文件。\",\"-b或--ignore-space-change 不检查空格字符的不同。\",\"-B或--ignore-blank-lines 不检查空白行。\",\"-c 显示全部内文，并标出不同之处。\",\"-C<行数>或--context<行数> 与执行\\\"-c-<行数>\\\"指令相同。\",\"-d或--minimal 使用不同的演算法，以较小的单位来做比较。\",\"-D<巨集名称>或 ifdef<巨集名称> 此参数的输出格式可用于前置处理器巨集。\",\"-e或--ed 此参数的输出格式可用于 ed 的 script 文件。\",\"-f或-forward-ed 输出的格式类似 ed 的 script 文件，但按照原来文件的顺序来显示不同处。\",\"-H或--speed-large-files 比较大文件时，可加快速度。\",\"-I<字符或字符串>或--ignore-matching-lines<字符或字符串> 若两个文件在某几行有所不同，而这几行同时都包含了选项中指定的字符或字符串，则不显示这两个文件的差异。\",\"-i或--ignore-case 不检查大小写的不同。\",\"-l或--paginate 将结果交由 pr 程序来分页。\",\"-n或--rcs 将比较结果以 RCS 的格式来显示。\",\"-N或--new-file 在比较目录时，若文件 A 仅出现在某个目录中，预设会显示：\",\"Only in目录：文件 A 若使用-N 参数，则 diff 会将文件 A 与一个空白的文件比较。\",\"-p 若比较的文件为 C 语言的程序码文件时，显示差异所在的函数名称。\",\"-P或--unidirectional-new-file 与-N类似，但只有当第二个目录包含了一个第一个目录所没有的文件时，才会将这个文件与空白的文件做比较。\",\"-q或--brief 仅显示有无差异，不显示详细的信息。\",\"-r或--recursive 比较子目录中的文件。\",\"-s或--report-identical-files 若没有发现任何差异，仍然显示信息。\",\"-S<文件>或--starting-file<文件> 在比较目录时，从指定的文件开始比较。\",\"-t或--expand-tabs 在输出时，将 tab 字符展开。\",\"-T或--initial-tab 在每行前面加上 tab 字符以便对齐。\",\"-u,-U<列数>或--unified=<列数> 以合并的方式来显示文件内容的不同。\",\"-v或--version 显示版本信息。\",\"-w或--ignore-all-space 忽略全部的空格字符。\",\"-W<宽度>或--width<宽度> 在使用-y参数时，指定栏宽。\",\"-x<文件名或目录>或--exclude<文件名或目录> 不比较选项中所指定的文件或目录。\",\"-X<文件>或--exclude-from<文件> 您可以将文件或目录类型存成文本文件，然后在=<文件>中指定此文本文件。\",\"-y或--side-by-side 以并列的方式显示文件的异同之处。\",\"--help 显示帮助。\",\"--left-column 在使用-y 参数时，若两个文件某一行内容相同，则仅在左侧的栏位显示该行内容。\",\"--suppress-common-lines 在使用-y参数时，仅显示不同之处。\"]},\"1010\":{\"h\":\"实例\",\"t\":[\"比较两个文件\",\"diff log2014.log log2013.log\",\"并排格式输出\",\"diff log2014.log log2013.log -y\"]},\"1011\":{\"h\":\"file\",\"t\":[\"用于辨识文件类型。\"]},\"1012\":{\"h\":\"语法\",\"t\":[\"file [-bcLvz][-f <名称文件>][-m <魔法数字文件>...][文件或目录...]\",\"-b 列出辨识结果时，不显示文件名称。\",\"-c 详细显示指令执行过程，便于排错或分析程序执行的情形。\",\"-f<名称文件> 指定名称文件，其内容有一个或多个文件名称时，让 file 依序辨识这些文件，格式为每列一个文件名称。\",\"-L 直接显示符号连接所指向的文件的类别。\",\"-m<魔法数字文件> 指定魔法数字文件。\",\"-v 显示版本信息。\",\"-z 尝试去解读压缩文件的内容。\",\"[文件或目录...] 要确定类型的文件列表，多个文件之间使用空格分开，可以使用 shell 通配符匹配多个文件。\"]},\"1013\":{\"h\":\"grep\"},\"1014\":{\"h\":\"语法\",\"t\":[\"用于查找文件里符合条件的字符串或正则表达式。\",\"grep [options] pattern [files]\",\"或\",\"grep [-abcEFGhHilLnqrsvVwxy][-A<显示行数>][-B<显示列数>][-C<显示列数>][-d<进行动作>][-e<范本样式>][-f<范本文件>][--help][范本样式][文件或目录...]\",\"pattern - 表示要查找的字符串或正则表达式。\",\"files - 表示要查找的文件名，可以同时查找多个文件，如果省略 files 参数，则默认从标准输入中读取数据。\"]},\"1015\":{\"h\":\"常用选项\",\"t\":[\"-i：忽略大小写进行匹配。 -v：反向查找，只打印不匹配的行。 -n：显示匹配行的行号。 -r：递归查找子目录中的文件。 -l：只打印匹配的文件名。 -c：只打印匹配的行数。\"]},\"1016\":{\"h\":\"实例\",\"t\":[\"在文件 file.txt 中查找字符串 \\\"hello\\\"，并打印匹配的行：\",\"grep hello file.txt\",\"在文件夹 dir 中递归查找所有文件中匹配正则表达式 \\\"pattern\\\" 的行，并打印匹配行所在的文件名和行号：\",\"grep -r -n pattern dir/\",\"在标准输入中查找字符串 \\\"world\\\"，并只打印匹配的行数：\",\"echo \\\"hello world\\\" | grep -c world\",\"在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：\",\"grep test *file\",\"以递归的方式查找符合条件的文件。例如，查找指定目录/etc/acpi 及其子目录（如果存在子目录的话）下所有文件中包含字符串\\\"update\\\"的文件，并打印出该字符串所在行的内容，使用的命令为：\",\"grep -r update /etc/acpi\",\"反向查找。前面各个例子是查找并打印出符合条件的行，通过\\\"-v\\\"参数可以打印出不符合条件行的内容。查找文件名中包含 test 的文件中不包含test 的行，此时，使用的命令为：\",\"grep -v test *test*\"]},\"1017\":{\"h\":\"zip\",\"t\":[\"用于压缩文件。\"]},\"1018\":{\"h\":\"语法\",\"t\":[\"zip [-AcdDfFghjJKlLmoqrSTuvVwXyz$][-b <工作目录>][-ll][-n <字尾字符串>][-t <日期时间>][-<压缩效率>][压缩文件][文件...][-i <范本样式>][-x <范本样式>]\",\"-A:调整可执行的自动解压缩文件。\",\"-b<工作目录>:指定暂时存放文件的目录。\",\"-c:替每个被压缩的文件加上注释。\",\"-d:从压缩文件内删除指定的文件。\",\"-D:压缩文件内不建立目录名称。\",\"-f:更新现有的文件。\",\"-F:尝试修复已损坏的压缩文件。\",\"-g:将文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。\",\"-h:在线帮助。\",\"-i<范本样式>:只压缩符合条件的文件。\",\"-j:只保存文件名称及其内容，而不存放任何目录名称。\",\"-J:删除压缩文件前面不必要的数据。\",\"-k:使用 MS-DOS 兼容格式的文件名称。\",\"-l:压缩文件时，把 LF 字符置换成 LF+CR 字符。\",\"-ll:压缩文件时，把 LF+CR 字符置换成 LF 字符。\",\"-L:显示版权信息。\",\"-m:将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。\",\"-n<字尾字符串>:不压缩具有特定字尾字符串的文件。\",\"-o:以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。\",\"-q:不显示指令执行过程。\",\"-r:递归处理，将指定目录下的所有文件和子目录一并处理。\",\"-S:包含系统和隐藏文件。\",\"-t<日期时间>:把压缩文件的日期设成指定的日期。\",\"-T:检查备份文件内的每个文件是否正确无误。\",\"-u:与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。\",\"-v:显示指令执行过程或显示版本信息。\",\"-V:保存 VMS 操作系统的文件属性。\",\"-w:在文件名称里假如版本编号，本参数仅在 VMS 操作系统下有效。\",\"-x<范本样式>：压缩时排除符合条件的文件。\",\"-X:不保存额外的文件属性。\",\"-y:直接保存符号连接，而非该连接所指向的文件，本参数仅在 UNIX 之类的系统下有效。\",\"-z:替压缩文件加上注释。\",\"-$:保存第一个被压缩文件所在磁盘的卷册名称。\",\"-<压缩效率>:压缩效率是一个介于 1-9 的数值。\"]},\"1019\":{\"h\":\"实例\",\"t\":[\"将 /home/html/ 这个目录下所有文件和文件夹打包为当前目录下的 html.zip：\",\"zip -q -r html.zip /home/html\",\"如果在我们在 /home/html 目录下，可以执行以下命令：\",\"zip -q -r html.zip *\",\"从压缩文件 cp.zip 中删除文件 a.c\",\"zip -dv cp.zip a.c\"]},\"1020\":{\"h\":\"gzip\",\"t\":[\"用于压缩文件。\"]},\"1021\":{\"h\":\"语法\",\"t\":[\"gzip [-acdfhlLnNqrtvV][-S &lt;压缩字尾字符串&gt;][-&lt;压缩效率&gt;][--best/fast][文件.../目录]\",\"-a或--ascii:使用 ASCII 文字模式。\",\"-c或--stdout或--to-stdout把压缩后的文件输出到标准输出设备，不去更动原始文件。\",\"-d或--decompress或----uncompress:解开压缩文件。\",\"-f或--force:强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接。\",\"-h或--help:在线帮助。\",\"-l或--list:列出压缩文件的相关信息。\",\"-L或--license:显示版本与版权信息。\",\"-n或--no-name:压缩文件时，不保存原来的文件名称及时间戳记。\",\"-N或--name:压缩文件时，保存原来的文件名称及时间戳记。\",\"-q或--quiet:不显示警告信息。\",\"-r或--recursive:递归处理，将指定目录下的所有文件及子目录一并处理。\",\"-S<压缩字尾字符串>或----suffix<压缩字尾字符串>:更改压缩字尾字符串。\",\"-t或--test:测试压缩文件是否正确无误。\",\"-v或--verbose:显示指令执行过程。\",\"-V或--version:显示版本信息。\",\"-<压缩效率>：压缩效率是一个介于 1－9 的数值，预设值为\\\"6\\\"，指定愈大的数值，压缩效率就会愈高。\",\"--best：此参数的效果和指定\\\"-9\\\"参数相同。\",\"--fast:此参数的效果和指定\\\"-1\\\"参数相同。\"]},\"1022\":{\"h\":\"实例\",\"t\":[\"gzip *\"]},\"1023\":{\"h\":\"tar\"},\"1024\":{\"h\":\"语法\",\"t\":[\"tar [选项] [压缩文件名] [文件或目录]\"]},\"1025\":{\"h\":\"实例\",\"t\":[\"创建归档文件：将文件 file1、file2 和 directory 打包到一个名为 archive.tar 的归档文件中。\",\"tar -cvf archive.tar file1 file2 directory\",\"-c: 创建新的归档文件 -v: 显示详细输出，列出被添加到归档中的文件 -f: 指定归档文件的名称\",\"解压归档文件：解压名为 archive.tar 的归档文件，还原其中包含的文件和目录。\",\"tar -xvf archive.tar\",\"-x: 解压归档文件 -v: 显示详细输出，列出被解压的文件 -f: 指定要解压的归档文件的名称\",\"列出归档文件中的内容：列出名为 archive.tar 的归档文件中包含的所有文件和目录。\",\"tar -tvf archive.tar\",\"-t: 列出归档文件中的内容 -v: 显示详细输出，列出归档文件中的所有文件和目录 -f: 指定要列出内容的归档文件的名称\",\"追加文件到已存在的归档中：将名为 newfile 的文件添加到已存在的名为 archive.tar 的归档文件中。\",\"tar -rvf archive.tar newfile\",\"-r: 向已存在的归档中追加文件 -v: 显示详细输出，列出被添加到归档中的文件 -f: 指定已存在的归档文件的名称\",\"创建一个经过 gzip 压缩的归档文件：打包 directory 目录下的所有文件和子目录，并使用 gzip 压缩，生成名为 archive.tar.gz 的归档文件。\",\"tar -zcvf archive.tar.gz directory\",\"-z: 表示要使用 gzip 进行压缩。 -c: 表示创建新的归档文件。 -v: 表示详细输出，列出被添加到归档中的文件。 -f archive.tar.gz: 指定归档文件的名称为 archive.tar.gz。\",\"解压一个已经被 gzip 压缩的归档文件：解压 example.tar.gz 文件，并在当前目录下恢复其中包含的文件和目录。\",\"tar -zxvf example.tar.gz\",\"-z: 表示要使用 gzip 解压归档文件。 -x: 表示解压操作。 -v: 表示详细输出，列出被解压的文件。 -f example.tar.gz: 指定要解压的归档文件的名称为 example.tar.gz。\"]},\"1026\":{\"c\":[\"Linux\"]},\"1027\":{\"c\":[\"Linux\"]},\"1028\":{\"h\":\"文件权限\"},\"1029\":{\"h\":\"文件权限\",\"t\":[\"在 Linux 中我们可以使用 ll 或者 ls –l 命令来显示一个文件的属性以及文件所属的用户和组，如：\",\"[root@www /]# ls -l total 64 dr-xr-xr-x 2 root root 4096 Dec 14 2012 bin dr-xr-xr-x 4 root root 4096 Apr 19 2012 boot\",\"实例中，bin 文件的第一个属性用 d 表示。d 在 Linux 中代表该文件是一个目录文件。\",\"在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。\",\"当为d则是目录\",\"当为-则是文件；\",\"若是l则表示为链接文档(link file)；\",\"若是b则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；\",\"若是c则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。\",\"接下来的字符中，以三个为一组，且均为rwx的三个参数的组合。其中，r代表可读(read)、w代表可写(write)、x代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号-而已。\",\"每个文件的属性由左边第一部分的 10 个字符来确定（如下图）。\"]},\"1030\":{\"h\":\"更改文件属性\"},\"1031\":{\"h\":\"chgrp\",\"t\":[\"用于变更文件或目录的所属群组。\"]},\"1032\":{\"h\":\"语法\",\"t\":[\"chgrp [-cfhRv][--help][--version][所属群组][文件或目录...] 或 chgrp [-cfhRv][--help][--reference=<参考文件或目录>][--version][文件或目录...]\",\"-c或--changes：效果类似\\\"-v\\\"参数，但仅回报更改的部分。\",\"-f或--quiet 或 --silent：不显示错误信息。\",\"-h或--no-dereference：只对符号连接的文件作修改，而不改动其他任何相关文件。\",\"-R或--recursive：递归处理，将指定目录下的所有文件及子目录一并处理。\",\"-v或--verbose：显示指令执行过程。\",\"--help：在线帮助。\",\"--reference=<参考文件或目录>：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同。\",\"--version：显示版本信息。\"]},\"1033\":{\"h\":\"实例\",\"t\":[\"实例 1：改变文件的群组属性：\",\"chgrp -v bin log2012.log\",\"输出：\",\"[root@localhost test]# ll ---xrw-r-- 1 root root 302108 11-13 06:03 log2012.log [root@localhost test]# chgrp -v bin log2012.log\",\"\\\"log2012.log\\\" 的所属组已更改为 bin\",\"[root@localhost test]# ll ---xrw-r-- 1 root bin 302108 11-13 06:03 log2012.log\"]},\"1034\":{\"h\":\"chown\",\"t\":[\"用于设置文件所有者和文件关联组的命令。\"]},\"1035\":{\"h\":\"语法\",\"t\":[\"chown [–R] 所有者 文件名 chown [-R] 所有者:属组名 文件名\",\"user: 新的文件拥有者的使用者 ID\",\"group: 新的文件拥有者的使用者组(group)\",\"-c: 显示更改的部分的信息\",\"-f: 忽略错误信息\",\"-h:修复符号链接\",\"-v: 显示详细的处理信息\",\"-R: 处理指定目录以及其子目录下的所有文件\",\"--help: 显示辅助说明\",\"--version: 显示版本\"]},\"1036\":{\"h\":\"实例\",\"t\":[\"进入 /root 目录（~）将 install.log 的拥有者改为 bin 这个账号：\",\"[root@www ~] cd ~ [root@www ~]# chown bin install.log [root@www ~]# ls -l -rw-r--r-- 1 bin users 68495 Jun 25 08:53 install.log\"]},\"1037\":{\"h\":\"chmod\",\"t\":[\"控制用户对文件的权限的命令,Linux/Unix 的文件调用权限分为三级 : 文件所有者（Owner）、用户组（Group）、其它用户（Other Users）。只有文件所有者和超级用户可以修改文件或目录的权限。可以使用绝对模式（八进制数字模式），符号模式指定文件的权限。\"]},\"1038\":{\"h\":\"语法\",\"t\":[\"chmod [-cfvR] [--help] [--version] mode file...\",\"mode : 权限设定字串，格式如下:[ugoa...][[+-=][rwxX]...][,...]\",\"u表示该文件的拥有者，g表示与该文件的拥有者属于同一个群体(group)者，o表示其他以外的人，a表示这三者皆是。\",\"+表示增加权限、-表示取消权限、=表示唯一设定权限。\",\"r表示可读取，w表示可写入，x表示可执行，X表示只有当该文件是个子目录或者该文件已经被设定过为可执行。\",\"-c:若该文件权限确实已经更改，才显示其更改动作\",\"-f:若该文件权限无法被更改也不要显示错误讯息\",\"-v:显示权限变更的详细资料\",\"-R:对目前目录下的所有文件与子目录进行相同的权限变更(即以递归的方式逐个变更)\",\"--help:显示辅助说明\",\"--version:显示版本\"]},\"1039\":{\"h\":\"符号模式\",\"t\":[\"使用符号模式可以设置多个项目：who（用户类型），operator（操作符）和 permission（权限），每个项目的设置可以用逗号隔开。 命令chmod将修改who指定的用户类型对文件的访问权限，用户类型由一个或者多个字母who的位置来说明，如who的符号模式表所示:\",\"who\",\"用户类型\",\"说明\",\"u\",\"user\",\"文件所有者\",\"g\",\"group\",\"文件所有者所在组\",\"o\",\"others\",\"所有其他用户\",\"a\",\"all\",\"所有用户, 相当于 ugo\",\"operator 的符号模式表:\",\"who\",\"说明\",\"+\",\"为指定的用户类型增加权限\",\"-\",\"去除指定用户类型的权限\",\"=\",\"设置指定用户权限的设置，即将用户类型的所有权限重新设置\",\"permission 的符号模式表:\",\"who\",\"用户类型\",\"说明\",\"r\",\"读\",\"设置为可读权限\",\"w\",\"写\",\"设置为可写权限\",\"x\",\"执行权限\",\"设置为可执行权限\",\"X\",\"特殊执行权限\",\"只有当文件为目录文件，或者其他类型的用户有可执行权限时，才将文件权限设置可执行\",\"s\",\"setuid/gid\",\"当文件被执行时，根据 who 参数指定的用户类型设置文件的 setuid 或者 setgid 权限\",\"t\",\"粘贴位\",\"设置粘贴位，只有超级用户可以设置该位，只有文件所有者 u 可以使用该位\"]},\"1040\":{\"h\":\"八进制语法\",\"t\":[\"chmod 命令可以使用八进制数来指定权限。文件或目录的权限位是由 9 个权限位来控制，每三位为一组，它们分别是文件所有者（User）的读、写、执行，用户组（Group）的读、写、执行以及其它用户（Other）的读、写、执行。历史上，文件权限被放在一个比特掩码中，掩码中指定的比特位设为 1，用来说明一个类具有相应的优先级。\",\"#\",\"权限\",\"rwx\",\"二进制\",\"7\",\"读 + 写 + 执行\",\"rwx\",\"111\",\"6\",\"读 + 写\",\"rw-\",\"110\",\"5\",\"读 + 执行\",\"r-x\",\"101\",\"4\",\"只读\",\"r--\",\"100\",\"3\",\"写 + 执行\",\"-wx\",\"011\",\"2\",\"只写\",\"-w-\",\"010\",\"1\",\"只执行\",\"--x\",\"001\",\"0\",\"无\",\"---\",\"000\",\"例如， 765 将这样解释：\",\"所有者的权限用数字表达：属主的那三个权限位的数字加起来的总和。如 rwx ，也就是 4+2+1 ，应该是 7。\",\"用户组的权限用数字表达：属组的那个权限位数字的相加的总和。如 rw- ，也就是 4+2+0 ，应该是 6。\",\"其它用户的权限数字表达：其它用户权限位的数字相加的总和。如 r-x ，也就是 4+0+1 ，应该是 5。\"]},\"1041\":{\"h\":\"实例\",\"t\":[\"将文件 file1.txt 设为所有人皆可读取 :\",\"chmod ugo+r file1.txt\",\"将文件 file1.txt 设为所有人皆可读取 :\",\"chmod a+r file1.txt\",\"将文件 file1.txt 与 file2.txt 设为该文件拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入 :\",\"chmod ug+w,o-w file1.txt file2.txt\",\"为 ex1.py 文件拥有者增加可执行权限:\",\"chmod u+x ex1.py\",\"将目前目录下的所有文件与子目录皆设为任何人可读取 :\",\"chmod -R a+r *\",\"此外chmod也可以用数字来表示权限如 :\",\"chmod 777 file\",\"语法为：\",\"chmod abc file\"]},\"1042\":{\"h\":\"默认权限\"},\"1043\":{\"h\":\"umask\",\"t\":[\"查看默认权限\",\"0022 \",\"第一位 0 文件特殊权限\",\"022 文件默认权限\"]},\"1044\":{\"h\":\"文件权限\",\"t\":[\"默认权限就是文件一创建后就拥有的权限\",\"文件默认不能建立可执行文件，必须手工赋予执行权限\",\"文件默认权限最大为 666\",\"默认权限需要换算成字母再相减\",\"建立文件之后的默认权限，为 666 减去 umask 值\"]},\"1045\":{\"h\":\"目录\",\"t\":[\"目录默认权限最大为 777\",\"建立目录之后的默认权限，为 777 减去 umask 值\"]},\"1046\":{\"h\":\"修改 umask 值\"},\"1047\":{\"h\":\"临时修改\",\"t\":[\"umask 0002\"]},\"1048\":{\"h\":\"永久修改\",\"t\":[\"umask 0002\"]},\"1049\":{\"h\":\"sudo 权限\",\"t\":[\"root 本来只有超级管理员可以使用的命令赋予普通用户来使用\",\"sudo 操作的对象是系统命令\"]},\"1050\":{\"h\":\"visudo\",\"t\":[\"通过visudo可以由超级用户赋权\",\"实际修改的是/etc/sudoers文件\",\"命令必须写绝对路径\"]},\"1051\":{\"c\":[\"Linux\"]},\"1052\":{\"c\":[\"Linux\"]},\"1053\":{\"h\":\"vi编辑器\"},\"1054\":{\"h\":\"vi 编辑器\",\"t\":[\"VI visual interface（可视化接口）\",\"Linux 中的编辑器，类似于 windows 中的记事本\",\"VIM 是 VI 编辑器的升级版\",\"不需要鼠标，只用键盘就可以\"]},\"1055\":{\"h\":\"操作模式\"},\"1056\":{\"h\":\"命令模式\",\"t\":[\"用户刚刚启动 vi/vim，便进入了命令模式。\",\"此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符，比如我们此时按下 i，并不会输入一个字符，i 被当作了一个命令。\",\"以下是普通模式常用的几个命令：\",\"i -- 切换到输入模式，在光标当前位置开始输入文本。\",\"x -- 删除当前光标所在处的字符。\",\": -- 切换到底线命令模式，以在最底一行输入命令。\",\"a -- 进入插入模式，在光标下一个位置开始输入文本。\",\"o -- 在当前行的下方插入一个新行，并进入插入模式。\",\"O -- 在当前行的上方插入一个新行，并进入插入模式。\",\"dd -- 剪切当前行。\",\"yy -- 复制当前行。\",\"p（小写） -- 粘贴剪贴板内容到光标下方。\",\"P（大写）-- 粘贴剪贴板内容到光标上方。\",\"u -- 撤销上一次操作。\",\"Ctrl + r -- 重做上一次撤销的操作。\",\":w -- 保存文件。\",\":q -- 退出 Vim 编辑器。\",\":q! -- 强制退出 Vim 编辑器，不保存修改。\",\"若想要编辑文本，只需要启动 Vim，进入了命令模式，按下 i 切换到输入模式即可。\",\"命令模式只有一些最基本的命令，因此仍要依靠底线命令行模式输入更多命令。\"]},\"1057\":{\"h\":\"输入模式\",\"t\":[\"在命令模式下按下 i 就进入了输入模式，使用 Esc 键可以返回到普通模式。\",\"在输入模式中，可以使用以下按键： 字符按键以及 Shift 组合，输入字符\",\"ENTER，回车键，换行\",\"BACK SPACE，退格键，删除光标前一个字符\",\"DEL，删除键，删除光标后一个字符\",\"方向键，在文本中移动光标\",\"HOME/END，移动光标到行首/行尾\",\"Page Up/Page Down，上/下翻页\",\"Insert，切换光标为输入/替换模式，光标将变成竖线/下划线\",\"ESC，退出输入模式，切换到命令模式\"]},\"1058\":{\"h\":\"底线命令模式\",\"t\":[\"在命令模式下按下:（英文冒号）就进入了底线命令模式。\",\"底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。\",\"在底线命令模式中，基本的命令有（已经省略了冒号）：\",\":w：保存文件。\",\":q：退出 Vim 编辑器。\",\":wq：保存文件并退出 Vim 编辑器。\",\":q!：强制退出 Vim 编辑器，不保存修改。 按ESC键可随时退出底线命令模式。\"]},\"1059\":{\"h\":\"按键说明\"},\"1060\":{\"h\":\"一般模式可用的光标移动、复制粘贴、搜索替换等\"},\"1061\":{\"h\":\"移动光标的方法\",\"t\":[\"h 或 向左箭头键(←):光标向左移动一个字符\",\"j 或 向下箭头键(↓):光标向下移动一个字符\",\"k 或 向上箭头键(↑):光标向上移动一个字符\",\"l 或 向右箭头键(→):光标向右移动一个字符\",\"Ctrl + f: 屏幕『向下』移动一页，相当于Page Down按键 (常用)\",\"Ctrl + b: 屏幕『向上』移动一页，相当于Page Up按键 (常用)\",\"Ctrl + d: 屏幕『向下』移动半页\",\"Ctrl + u: 屏幕『向上』移动半页\",\"+: 光标移动到非空格符的下一行\",\"-: 光标移动到非空格符的上一行\",\"n<space>: 那个n表示『数字』，例如20。按下数字后再按空格键，光标会向右移动这一行的n个字符。例如 20<space> 则光标会向后面移动20个字符距离。\",\"0或功能键[Home]: 这是数字0：移动到这一行的最前面字符处 (常用)\",\"$: 或功能键[End]: 移动到这一行的最后面字符处(常用)\",\"H: 光标移动到这个屏幕的最上方那一行的第一个字符\",\"M: 光标移动到这个屏幕的中央那一行的第一个字符\",\"L: 光标移动到这个屏幕的最下方那一行的第一个字符\",\"G: 移动到这个档案的最后一行(常用)\",\"nG: n 为数字。移动到这个档案的第n行。\",\"gg: 移动到这个档案的第一行 (常用)\",\"n<Enter>: n 为数字。光标向下移动n行(常用)\"]},\"1062\":{\"h\":\"搜索替换\",\"t\":[\"/word: 向光标之下寻找一个名称为word的字符串。例如要在档案内搜寻vbird这个字符串，就输入/vbird即可！ (常用)\",\"?word: 向光标之上寻找一个字符串名称为word的字符串。\",\"n: 这个n是英文按键。代表重复前一个搜寻的动作。举例来说，如果刚刚我们执行/vbird去向下搜寻vbird这个字符串，则按下n后，会向下继续搜寻下一个名称为vbird的字符串。如果是执行?vbird的话，那么按下n则会向上继续搜寻名称为vbird的字符串！\",\"N: 这个N是英文按键。与n刚好相反，为『反向』进行前一个搜寻动作。 例如/vbird后，按下N则表示『向上』搜寻vbird。\",\":n1,n2s/word1/word2/g:n1与n2为数字。在第n1与n2行之间寻找word1这个字符串，并将该字符串取代为word2\",\":1,$s/word1/word2/g 或:%s/word1/word2/g: 从第一行到最后一行寻找word1字符串，并将该字符串取代为word2！(常用)\",\":1,$s/word1/word2/gc 或:%s/word1/word2/gc: 从第一行到最后一行寻找word1字符串，并将该字符串取代为word2！且在取代前显示提示字符给用户确认confirm是否需要取代！(常用)\"]},\"1063\":{\"h\":\"删除、复制与贴上\",\"t\":[\"x, X: 在一行字当中，x为向后删除一个字符 (相当于del按键)，X为向前删除一个字符(相当于backspace亦即是退格键) (常用)\",\"nx n: 为数字，连续向后删除n个字符。\",\"dd: 剪切游标所在的那一整行(常用)，用p/P可以粘贴。\",\"ndd: n为数字。剪切光标所在的向下n行，例如20dd则是剪切20行(常用)，用p/P可以粘贴。\",\"d1G: 删除光标所在到第一行的所有数据\",\"dG: 删除光标所在到最后一行的所有数据\",\"d$: 删除游标所在处，到该行的最后一个字符\",\"d0: 那个是数字的0，删除游标所在处，到该行的最前面一个字符\",\"yy: 复制游标所在的那一行(常用)\",\"nyy: n为数字。复制光标所在的向下n行，例如20yy则是复制20行(常用)\",\"y1G: 复制游标所在行到第一行的所有数据\",\"yG:复制游标所在行到最后一行的所有数据\",\"y0:复制光标所在的那个字符到该行行首的所有数据\",\"y$:复制光标所在的那个字符到该行行尾的所有数据\",\"p, P: p为将已复制的数据在光标下一行贴上，P则为贴在游标上一行！ 举例来说，我目前光标在第20行，且已经复制了10行数据。则按下p后， 那10行数据会贴在原本的20行之后，亦即由21行开始贴。但如果是按下P呢？ 那么原本的第20行会被推到变成30行。 (常用)\",\"J: 将光标所在行与下一行的数据结合成同一行\",\"c: 重复删除多个数据，例如向下删除10行，[ 10cj ]\",\"u: 复原前一个动作。(常用)\",\"[Ctrl]+r: 重做上一个动作。(常用)\",\".: 不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点.就好了！ (常用)\"]},\"1064\":{\"h\":\"一般模式切换到编辑模式的可用的按钮说明\"},\"1065\":{\"h\":\"进入输入或取代的编辑模式\",\"t\":[\"i, I: 进入输入模式(Insert mode)：\",\"i: 为『从目前光标所在处输入』，I为『在目前所在行的第一个非空格符处开始输入』。 (常用)\",\"a, A: 进入输入模式(Insert mode)：a: 为『从目前光标所在的下一个字符处开始输入』，A为『从光标所在行的最后一个字符处开始输入』。(常用)\",\"o, O: 进入输入模式(Insert mode)：这是英文字母o的大小写。o为在目前光标所在的下一行处输入新的一行；O为在目前光标所在的上一行处输入新的一行！(常用)\",\"r, R: 进入取代模式(Replace mode)：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下ESC为止；(常用)\",\"Esc: 退出编辑模式，回到一般模式中(常用)\"]},\"1066\":{\"h\":\"一般模式切换到指令行模式的可用的按钮说明\"},\"1067\":{\"h\":\"指令行的储存、离开等指令\",\"t\":[\":w:将编辑的数据写入硬盘档案中(常用)\",\":w!: 若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！\",\":q:离开 vi (常用)\",\":q!: 若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。\",\":wq: 储存后离开，若为:wq!则为强制储存后离开 (常用)\",\"ZZ: 这是大写的Z喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)\",\"ZQ: 不保存，强制退出。效果等同于:q!。\",\":w [filename]:将编辑的数据储存成另一个档案（类似另存新档）\",\":r [filename]: 在编辑的数据中，读入另一个档案的数据。亦即将filename这个档案内容加到游标所在行后面\",\":n1,n2 w [filename]: 将n1到n2的内容储存成filename这个档案。\"]},\"1068\":{\"h\":\"vim 环境的变更\",\"t\":[\":set nu: 显示行号，设定之后，会在每一行的前缀显示该行的行号\",\":set nonu: 与set nu相反，为取消行号！\"]},\"1069\":{\"c\":[\"Linux\"]},\"1070\":{\"c\":[\"Linux\"]},\"1071\":{\"h\":\"yum\",\"t\":[\"yum（ Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。\",\"基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。\",\"yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。\"]},\"1072\":{\"h\":\"语法\",\"t\":[\"yum [options] [command] [package ...]\",\"options：可选，选项包括-h（帮助），-y（当安装过程提示选择全部为 \\\"yes\\\"），-q（不显示安装的过程）等等。\",\"command：要进行的操作。\",\"package：安装的包名。\"]},\"1073\":{\"h\":\"常用命令\",\"t\":[\"列出所有可更新的软件清单命令：yum check-update\",\"更新所有软件命令：yum update\",\"仅安装指定的软件命令：yum install <package_name>\",\"仅更新指定的软件命令：yum update <package_name>\",\"列出所有可安裝的软件清单命令：yum list\",\"删除软件包命令：yum remove <package_name>\",\"查找软件包命令：yum search <keyword>\",\"清除缓存命令: \",\"yum clean packages: 清除缓存目录下的软件包\",\"yum clean headers: 清除缓存目录下的 headers\",\"yum clean oldheaders: 清除缓存目录下旧的 headers\",\"yum clean, yum clean all:清除缓存目录下的软件包及旧的 headers\"]},\"1074\":{\"c\":[\"Linux\"]},\"1075\":{\"c\":[\"Linux\"]},\"1076\":{\"h\":\"shell基础\"},\"1077\":{\"h\":\"shell 基础\",\"t\":[\"shell 是一个命令行解释器，它为用户提供了一个向 Linux 内核发动亲故以便运行程序的界面系统级程序\",\"用户可以用 Shell 来启动、挂起、停止或者编写一些程序\",\"shell 还是一个功能相当强大的编程语言，易编写、易调试、灵活性较强\",\"shell 是解释执行的脚本语言，在 shell 中可以直接调用 Linux 系统命令\"]},\"1078\":{\"h\":\"echo\",\"t\":[\"输出命令\",\"-e 激活转义字符\",\"echo hello echo -e \\\"a\\\\tb\\\"\"]},\"1079\":{\"h\":\"编写执行 shell\",\"t\":[\"hello.sh\",\"#!/bin/bash echo hello\",\"// 通过bash调用执行脚本 sh hello.sh chmod 755 hello.sh chmod u+x hello.sh ./hello.sh\"]},\"1080\":{\"h\":\"别名\",\"t\":[\"命令别名就是小名\",\"临时生效alias cp=\\\"cp -i\\\"\",\"写入环境变量配置文件vi ~/.bashrc\",\"source ~/.bashrc\",\"删除别名unalias 别名\"]},\"1081\":{\"h\":\"命令的生效顺序\",\"t\":[\"绝对路径或者相对路径\",\"别名\",\"bash 内部命令\",\"按照$PATH环境变量定义的目录查找顺序\"]},\"1082\":{\"h\":\"命令快捷键\",\"t\":[\"目录\",\"用途\",\"ctril+c\",\"强制终止当前命令\",\"ctril+l\",\"清屏\",\"ctril+a\",\"光标移动到命令行首\",\"ctril+e\",\"光标移动到命令行尾\",\"ctril+u\",\"从光标所在的位置删除到行首\"]},\"1083\":{\"h\":\"历史命令\",\"t\":[\"history [选项] [历史命令保存文件]\",\"选项 \",\"-c 清除历史命令\",\"-w 把缓存中的历史命令写入命令保存文件 ～/.bash_history\",\"默认保存 1000 条 /etc/profile HISSIZE-10000\"]},\"1084\":{\"h\":\"调用\",\"t\":[\"使用上下肩头调用以前的历史命令\",\"使用!n重复执行第 n 条历史命令\",\"使用!!重复执行最后一条历史命令\",\"使用!字符串重复执行最后一条以该字符串开头的命令\"]},\"1085\":{\"h\":\"管道符号\"},\"1086\":{\"h\":\"多命令顺序执行\",\"t\":[\"多命令执行符\",\"格式\",\"作用\",\"案例\",\";\",\"命令 1；命令 2\",\"多个命令执行，命令之间没有任何逻辑联系\",\"echo 1;echo 2;\",\"&&\",\"命令 1&&命令 2\",\"逻辑与 当命令 1 正确执行，则命令 2 才会执行 当命令 1 执行不正确，则命令 2 不会执行\",\"echo 1&&echo 2;\",\"\\\\\\\\\",\"命令 1 \\\\\\\\命令 2\",\"逻辑或 当命令 1 执行不正确，则命令 2 才会执行 当命令 1 正确执行，则命令 2 不会执行\",\"echo 1\\\\\\\\echo 2;\"]},\"1087\":{\"h\":\"管道符号\",\"t\":[\"命令 1 的正确输出会作为命令 2 的操作对象\",\"命令 1 ｜命令 2\",\"ls /etc/ | more\"]},\"1088\":{\"h\":\"通配符\",\"t\":[\"匹配文件名和目录名\",\"目录\",\"用途\",\"？\",\"匹配一个任意字符\",\"*\",\"匹配 0 个或任意字符，也就是可以匹配任意内容\",\"[]\",\"匹配中括号中任意一个字符\",\"[-]\",\"匹配中括号中任意一个字符，-代表范围\",\"[^]\",\"匹配不是中括号中的一个字符\"]},\"1089\":{\"h\":\"其他符号\",\"t\":[\"目录\",\"用途\",\"\\\"\",\"单引号。在单引号中所有的特殊符号，如$和’都没有特殊含义\",\"\\\"\\\"\",\"双引号，在双引号里特殊符号都没有特殊含义，但是＄”\\\\例外，拥有调用变量值，引用命令和转义的含义\",\"$()\",\"扩起来的是系统命令\",\"#\",\"在 shell 脚本中，#开头的行代表注释\",\"$\",\"用于调用变量的值\",\"\\\\\",\"转义符号\"]},\"1090\":{\"h\":\"变量\"},\"1091\":{\"h\":\"什么是变量\",\"t\":[\"可以变化的量\",\"变量必须以字母或下划线开头，名字中间只能由字母、数字下划线组成\",\"变量名的长度不能超过 255 个字符\",\"变量名在有效范围内必须唯一\",\"变量默认类型都是字符串\"]},\"1092\":{\"h\":\"变量的分类\",\"t\":[\"字符串\",\"整形\",\"浮点型\",\"日期型\"]},\"1093\":{\"h\":\"用户自定义变量\",\"t\":[\"这些变量的值是自己定义的\",\"变量名不能为数字开头\",\"等号左右两边不能有空格\"]},\"1094\":{\"h\":\"定义变量\",\"t\":[\"name='zhufeng' age=10\"]},\"1095\":{\"h\":\"输出变量值\",\"t\":[\"echo $变量名\"]},\"1096\":{\"h\":\"在赋值的时候引用变量\",\"t\":[\"m=\\\"$x\\\"2 n=${x}2 echo $m $n\"]},\"1097\":{\"h\":\"set\",\"t\":[\"查询系统中默认所有已经生效的变量，包括系统变量，也包括自定义变量\",\"set | grep zhufeng\"]},\"1098\":{\"h\":\"unset\",\"t\":[\"删除变量\",\"unset name\"]},\"1099\":{\"h\":\"环境变量\",\"t\":[\"环境变量是全局变量，而自定义变量是局部变量\",\"自定义变量会在当前的 shell 中生效，而环境变量会在当前 shell 以及其子 shell 中生效\",\"这种变量主要保存的是和系统操作环境相关的数据\",\"变量可以自定义，但是对系统生效的环境变量和变量作用是固定的\"]},\"1100\":{\"h\":\"自定义环境变量\",\"t\":[\"export 变量名=变量值\"]},\"1101\":{\"h\":\"env\",\"t\":[\"仅仅用来查看环境变零，而看不到本地变量\",\"env | grep envName\"]},\"1102\":{\"h\":\"常用环境变量\",\"t\":[\"变量名\",\"含义\",\"示例\",\"HOSTNAME\",\"主机名\",\"HOSTNAME=localhost\",\"SHELL\",\"当前的 shell\",\"SHELL=/bin/bash\",\"HISTSIZE\",\"历史命令条数\",\"HISTSIZE=1000\",\"SSH_CLIENT\",\"当前操作环境如果是用 SSH 连接的话，这里会记录客户端 IP\",\"SSH_CLIENT=192.168.1.100 57596 22\",\"USER\",\"当前登陆的用户\",\"USER=root\"]},\"1103\":{\"h\":\"path\",\"t\":[\"系统搜索路径\",\"echo $path\"]},\"1104\":{\"h\":\"位置参数变量\",\"t\":[\"这种变量主要是用来向脚本当中传递参数或数据的，变量名 benign 自定义，变量作用是固定的\",\"变量名\",\"含义\",\"$n\",\"n 为数字，$0代表命令本身，$1-$9代表第1到第9个参数，10以上的参数需要用大括号包含，如${10}\",\"$*\",\"这个变量代表命令中所有的参数，$*把所有的变看数堪称一个整体\",\"$@\",\"这个变量也代表命令行中所有的参数，不过$@把每个参数进行区分\",\"$#\",\"这个变量代表命令行中所有参数的个数\"]},\"1105\":{\"h\":\"预定义变量\",\"t\":[\"是脚本中已经定义好的变量，变量名不能自定义，变量作用也是固定的\",\"变量名\",\"作用\",\"$?\",\"最后一次执行的命令的返回状态，0 表示正确执行，非 0 变量不正确执行\",\"$$\",\"当前进程的 PID\"]},\"1106\":{\"h\":\"read\",\"t\":[\"read [选项] [变量名]\",\"选项\",\"含义\",\"-p\",\"提示信息，在等待 read 输入时，输出提示信息\",\"-t\",\"秒数：read 命令会一直等待用户输入，使用此选项可以指定等待时间\",\"-n\",\"字符数，read 命令只接收指定的字符数，就会执行\",\"-s\",\"隐藏输入的数据，适用于机密信息的输入\"]},\"1107\":{\"h\":\"运算符\",\"t\":[\"若类型并且默认时字符串类型\"]},\"1108\":{\"h\":\"declare 命令\"},\"1109\":{\"h\":\"declare 命令\",\"t\":[\"用来声明变量类型\",\"declare[+/-][选项][变量名]\",\"选项\",\"含义\",\"-\",\"给变量设定类型属性\",\"+\",\"取消变量的类型属性\",\"-a\",\"将变量声明为属组类型\",\"-i\",\"将变量声明为正数型\",\"-x\",\"将变量声明为环境变量\",\"-r\",\"将变量声明为只读变量\",\"-p\",\"显示指定变量的被声明的类型\"]},\"1110\":{\"h\":\"数组\",\"t\":[\"declare -a names; names[0] = zhangsan names[2] = lisi echo ${names[1]} // 打印第2个元素 echo ${names[*]} // 打印所有元素\"]},\"1111\":{\"h\":\"声明环境变量\",\"t\":[\"export 最终执行的是declare -x命令\",\"declare -p可以查看所有的类型\"]},\"1112\":{\"h\":\"数值运算的方法\",\"t\":[\"只要用 declare 声明变量的时候指定类型就可以进行数值\"]},\"1113\":{\"h\":\"expr 或 let\",\"t\":[\"+号左右两侧必须有空格，否则还是整块输出\",\"num1=2 num2=3 sum=$(expr $num1 + $num2) echo $sum\"]},\"1114\":{\"h\":\"环境变量配置文件\"},\"1115\":{\"h\":\"source 命令\",\"t\":[\"修改完配置文件后，必须注销登陆才能生效，使用 source 命令可以不用重新登录\",\".配置文件\"]},\"1116\":{\"h\":\"环境变量配置文件简介\",\"t\":[\"PATH、HISTSIZE、HOSTNAME 等环境变量写入对应的环境变量配置文件\",\"环境变量配置文件中主要是定义系统操作环境的生效的胸默认变量\",\"选项\",\"含义\",\"/etc/profile\",\"/etc/bashrc\",\"~/.bash_profile\",\"只会对当前用户生效\",\"~/.bashrc\",\"只会对单钱用户生效\"]},\"1117\":{\"h\":\"环境变量配置文件的功能\"},\"1118\":{\"h\":\"/etc/profile\",\"t\":[\"在这里修改系统变量\",\"选项\",\"含义\",\"USER\",\"用户名\",\"LOGNAME\",\"登陆名\",\"MAIL\",\"邮箱地址\",\"PATH\",\"查找路径\",\"HOSTNAME\",\"主机名\",\"umask\",\"权限掩码\"]},\"1119\":{\"h\":\"～/.bash_profile\",\"t\":[\"在这里修改 PATH 路径\",\"调用～/.bashrc\"]},\"1120\":{\"h\":\"~/.bashrc\",\"t\":[\"在这里修改别名，配置 alias\",\"调用/etc/bashrc\"]},\"1121\":{\"h\":\"/etc/bashrc\",\"t\":[\"PS1登陆提示符在这里修改\",\"umask\",\"PATH变量\",\"调用/etc/profile.d/星.sh\"]},\"1122\":{\"h\":\"其他配置文件\"},\"1123\":{\"h\":\"注销时生效的环境变量配置文件\",\"t\":[\"~/.bash_logout\"]},\"1124\":{\"h\":\"脚本历史\",\"t\":[\"当正确退出计算机的时候历史记录会写入文件\",\"~/.bash_history\"]},\"1125\":{\"h\":\"Shell 登陆信息\",\"t\":[\"本地中端欢迎信息etc/issue\",\"远程终端欢迎信息etc/issue.net\",\"不管元辰还是本地都可以生效etc/motd\",\"选项\",\"含义\",\"\\\\d\",\"显示当前系统信息\",\"\\\\s\",\"显示操作系统名称\",\"\\\\l\",\"显示登陆的终端号\",\"\\\\m\",\"显示硬件体系结构，如 386 等\",\"\\\\n\",\"显示主机名\",\"\\\\o\",\"显示域名\",\"\\\\r\",\"显示内核版本\",\"\\\\t\",\"显示当前系统时间\",\"\\\\u\",\"显示当前登陆用户的序列号\"]},\"1126\":{\"c\":[\"Linux\"]},\"1127\":{\"c\":[\"Linux\"]},\"1128\":{\"h\":\"安装\"},\"1129\":{\"h\":\"安装\"},\"1130\":{\"h\":\"源码安装\"},\"1131\":{\"h\":\"官网\",\"t\":[\"https://nginx.org/en/download.html\"]},\"1132\":{\"h\":\"解压 Nginx 包\",\"t\":[\"tar -zxvf nginx-1.21.6.tar.gz #解压到当前目录 cd nginx-1.21.6 #进入解压后的文件夹\"]},\"1133\":{\"h\":\"安装依赖库\",\"t\":[\"yum install -y gcc pcre pcre-devel zlib zlib-devel\"]},\"1134\":{\"h\":\"编译安装\",\"t\":[\"./configure --prefix=/usr/local/nginx # 指定编译选项，--prefix选项指定安装的目录 make # 编译 make install # 安装编译结果\"]},\"1135\":{\"h\":\"启动\",\"t\":[\"cd /usr/local/nginx/sbin ls # 里面是一个nginx的可执行文件 ./nginx # 启动这个就是nginx的可执行文件 ./nginx -s stop #快速停止 ./nginx -s quit #优雅关闭，在退出前完成已经接受的连接请求 ./nginx -s reload #重新加载配置\"]},\"1136\":{\"h\":\"关闭防火墙\",\"t\":[\"systemctl stop firewalld # 关闭防火墙\"]},\"1137\":{\"h\":\"注册为系统服务\",\"t\":[\"注册为系统服务后，可以以系统服务的方式启动 nginx\",\"在如下位置创建服务脚本 nginx.service\",\"vi /usr/lib/systemd/system/nginx.service\",\"服务脚本内容如下(注意路径要对应，这里的路径是/usr/local/nginx/sbin)：\",\"[Unit] Description=nginx - web server After=network.target remote-fs.target nss-lookup.target [Service] Type=forking PIDFile=/usr/local/nginx/logs/nginx.pid ExecStartPre=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s stop ExecQuit=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=true [Install] WantedBy=multi-user.target\",\"重新加载系统服务\",\"systemctl daemon-reload\",\"启动服务\",\"systemctl start nginx.service\",\"开机启动\",\"systemctl enable nginx.service\",\"重启 Nginx\",\"systemctl reload nginx.service\"]},\"1138\":{\"h\":\"访问\"},\"1139\":{\"h\":\"查看 Nginx 状态\",\"t\":[\"ps -ef | grep nginx\"]},\"1140\":{\"h\":\"yum 安装\"},\"1141\":{\"h\":\"Nginx 到 yum 源\",\"t\":[\"sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\"]},\"1142\":{\"h\":\"查看是否已经添加成功\",\"t\":[\"yum search nginx\"]},\"1143\":{\"h\":\"安装 Nginx\",\"t\":[\"yum install -y nginx\"]},\"1144\":{\"h\":\"验证 nginx 安装是否成功\",\"t\":[\"#查看nginx安装版本，-V可以看到nginx的安装的文件路径 nginx -V # 查看安装的nginx的版本 rpm -qa | grep nginx\"]},\"1145\":{\"h\":\"Nginx启动、设置开机自启、查看运行状态、停止、重启命令\",\"t\":[\"systemctl start nginx systemctl enable nginx systemctl status nginx systemctl stop nginx systemctl reload nginx\"]},\"1146\":{\"h\":\"查看安装信息\",\"t\":[\"rpm -ql nginx\",\"# Nginx配置文件 /etc/nginx/nginx.conf # nginx 主配置文件 /etc/nginx/nginx.conf.default # 可执行程序文件 /usr/bin/nginx-upgrade /usr/sbin/nginx # nginx库文件 /usr/lib/systemd/system/nginx.service # 用于配置系统守护进程 /usr/lib64/nginx/modules # Nginx模块目录 # 帮助文档 /usr/share/doc/nginx-1.16.1 /usr/share/doc/nginx-1.16.1/CHANGES /usr/share/doc/nginx-1.16.1/README /usr/share/doc/nginx-1.16.1/README.dynamic /usr/share/doc/nginx-1.16.1/UPGRADE-NOTES-1.6-to-1.10 # 静态资源目录 /usr/share/nginx/html/404.html /usr/share/nginx/html/50x.html /usr/share/nginx/html/index.html # 存放Nginx日志文件 /var/log/nginx\"]},\"1147\":{\"c\":[\"Nginx\"]},\"1148\":{\"c\":[\"Nginx\"]},\"1149\":{\"h\":\"目录结构\"},\"1150\":{\"h\":\"目录结构\",\"t\":[\"[root@localhost ~]# tree /usr/local/nginx /usr/local/nginx ├── client_body_temp # POST 大文件暂存目录 ├── conf # Nginx所有配置文件的目录 │ ├── fastcgi.conf # fastcgi相关参数的配置文件 │ ├── fastcgi.conf.default # fastcgi.conf的原始备份文件 │ ├── fastcgi_params # fastcgi的参数文件 │ ├── fastcgi_params.default │ ├── koi-utf │ ├── koi-win │ ├── mime.types # 媒体类型 │ ├── mime.types.default │ ├── nginx.conf #这是Nginx默认的主配置文件，日常使用和修改的文件 │ ├── nginx.conf.default │ ├── scgi_params # scgi相关参数文件 │ ├── scgi_params.default │ ├── uwsgi_params # uwsgi相关参数文件 │ ├── uwsgi_params.default │ └── win-utf ├── fastcgi_temp # fastcgi临时数据目录 ├── html # Nginx默认站点目录 │ ├── 50x.html # 错误页面优雅替代显示文件，例如出现502错误时会调用此页面 │ └── index.html # 默认的首页文件 ├── logs # Nginx日志目录 │ ├── access.log # 访问日志文件 │ ├── error.log # 错误日志文件 │ └── nginx.pid # pid文件，Nginx进程启动后，会把所有进程的ID号写到此文件 ├── proxy_temp # 临时目录 ├── sbin # Nginx 可执行文件目录 │ └── nginx # Nginx 二进制可执行程序 ├── scgi_temp # 临时目录 └── uwsgi_temp # 临时目录\"]},\"1151\":{\"h\":\"基本配置文件\"},\"1152\":{\"h\":\"默认文件\",\"t\":[\"#user nobody; worker_processes 1; #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; #pid logs/nginx.pid; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; #log_format main '$remote_addr - $remote_user [$time_local] \\\"$request\\\" ' # '$status $body_bytes_sent \\\"$http_referer\\\" ' # '\\\"$http_user_agent\\\" \\\"$http_x_forwarded_for\\\"'; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; server { listen 80; server_name localhost; #charset koi8-r; #access_log logs/host.access.log main; location / { root html; index index.html index.htm; } #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \\\\.php$ { # proxy_pass http://127.0.0.1; #} # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \\\\.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\\\\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #} }\"]},\"1153\":{\"h\":\"注释\",\"t\":[\"# 更多配置信息 http://nginx.org/en/docs/ user nginx; # 工作进程：一般是 cpu有几核就写几，可以最大限度的去发挥它的性能 worker_processes auto; # 错误日志路径 error_log /var/log/nginx/error.log; # 千万别动这玩意，是给守护进程用的 pid /var/run/nginx.pid; # 负载动态模块 include /usr/share/nginx/modules/*.conf # 并发连接数：最大并发数 -> 一个工作进程下的最大连接【默认 1024】 events { worker_connections 1024; } # http 配置 http { # 日志格式 log_format main '$remote_addr - $remote_user [$time_local] \\\"$request\\\" ' '$status $body_bytes_sent \\\"$http_referer\\\" ' '\\\"$http_user_agent\\\" \\\"$http_x_forwarded_for\\\"'; # 访问日志的路径 access_log /var/log/nginx/access.log main; # sendfile & tcp_nopush & tcp_nodelay的解释 https://www.jianshu.com/p/cac0a92b9530 # 是否允许上传文件 sendfile on; # 允许把http response header和文件的开始放在一个文件里发布，作用是减少网络报文段的数量 tcp_nopush on; # 内核会等待将更多的字节组成一个数据包，从而提高I/O性能 tcp_nodelay on; # gzip 压缩 gzip on; # 长连接多长时间没有通信自动断开 keepalive_timeout 65; # 为了快速处理静态数据集，例如服务器名称， 映射指令的值，MIME类型，请求头字符串的名称，nginx使用哈希表 types_hash_max_size 2048; # 文件扩展名与类型映射表 include /etc/nginx/mime.types; # 默认文件类型 default_type application/octet-stream; # 定义反向代理服务器 upstream web{ # 设置后，后面每次访问都是定位到第一次访问到的服务器 ip_hash; # 这里的 server如果只写一个就是单纯的额外网发布,如果写 n 个就是负载均衡 server 127.0.0.1:8080; server 127.0.0.1:8888 weight=1; #添加权重 } #------------------------------------------------------------------------- # 加载模块化配置文件，可以把下面 server的配置写到 /etc/nginx/conf.d/ 路径下的某个文件👇 # 👆 就可以直接引入，不需要在这个文件写server的配置 include /etc/nginx/conf.d/*.conf; #------------------------------------------------------------------------- # 一个 server对应一个网站 server { # 监听端口 listen 80 default_server; listen [::]:80 default_server; # server域名 server_name localhost; # 站点根目录，即网站程序存放目录 root /usr/share/nginx/html; # 默认服务器块的加载配置文件 include /etc/nginx/default.d/*.conf; # 对“/”启用反向代理 location / { root html; index index.html index.htm; } # 对“/xxx/”启用反向代理 location /xxx/ { # 过来的请求代理到哪里，web为前面upstream定义的 proxy_pass http://web; # 如果需要客户端 ip,这个开关可能会重写为反向代理的 ip proxy_redirect off; # nginx 可能会改写头,用原来的值再把它改回来 proxy_set_header Hose $host; # 代理服务器转发请求的时候用的协议版本 proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection 'upgrade'; proxy_cache_bypass $http_upgrade; # 取客户端真实 ip proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 超时 proxy_connect_timeout 600; proxy_read_timeout 600; } error_page 404 /404.html; error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } # 配置 https server { # 一定要带上 ssl 标记,默认 443 端口 listen 443 ssl; server_name work.com; ssl on; # 证书 ssl_certificate /etc/nginx/server.crt; # 密钥 ssl_certificate_key /etc/nginx/server.key; # 超时 ssl_session_timeout 5m; location / { root /usr/local/web/; add_header 'Cache-Control' 'no-store'; } } }\"]},\"1154\":{\"c\":[\"Nginx\"]},\"1155\":{\"c\":[\"Nginx\"]},\"1156\":{\"h\":\"react-redux\"},\"1157\":{\"h\":\"index.js\",\"t\":[\"src 目录下 index.jsx\",\"import React from 'react' import ReactDOM from 'react-dom/client' import { ConfigProvider } from 'antd' import zhCN from 'antd/locale/zh_CN' import Vote from './views/Vote' import store from './store' import { Provider } from 'react-redux' const root = ReactDOM.createRoot(document.getElementById('root')) root.render( <ConfigProvider locale={zhCN}> <Provider store={store}> <Vote></Vote> </Provider> </ConfigProvider> )\"]},\"1158\":{\"h\":\"store\",\"t\":[\"src 目录下新建 store 文件夹,创建 index.js\",\"import { createStore } from 'redux' import reducer from './reducers' const store = createStore(reducer) export default store\"]},\"1159\":{\"h\":\"reducers\",\"t\":[\"store 文件夹下创建 reducers 文件夹,创建 index.js\",\"// 合并各个模块的reducer import { combineReducers } from 'redux' import voteReducer from './voteReducer' const reducer = combineReducers({ vote: voteReducer, }) export default reducer\",\"reducers 文件夹下创建 voteReducer.js\",\"// Persion模块下reducer import * as TYPES from '../action.types' const initial = { supNum: 10, oppNum: 5, } export default function persionReducer(state = initial, action) { state = { ...state } switch (action.type) { case TYPES.VOTE_SUP: state.supNum++ break case TYPES.VOTE_OPP: state.oppNum++ break default: } return state }\",\"store 文件夹下创建 action.types.js\",\"// 统一管理需要派发的行为标识 export const VOTE_SUP = 'VOTE_SUP' export const VOTE_OPP = 'VOTE_OPP'\"]},\"1160\":{\"h\":\"actions\",\"t\":[\"store 文件夹下创建 actions 文件夹,创建 index.js\",\"import voteAction from './voteAction' const action = { vote: voteAction, } export default action\",\"store 文件夹下创建 voteAction.js\",\"import * as TYPES from '../action.types' const voteAction = { support() { return { type: TYPES.VOTE_SUP, } }, oppose() { return { type: TYPES.VOTE_OPP, } }, } export default voteAction\"]},\"1161\":{\"h\":\"Vote.jsx\",\"t\":[\"import React from 'react' import VoteMain from './VoteMain' import VoteFooter from './VoteFooter' import { connect } from 'react-redux' const Vote = function Vote(props) { let { supNum, oppNum } = props return ( <div className='vote-box'> <div className='header'> <h2 className='title'>React</h2> <span className='num'>{supNum + oppNum}</span> </div> <VoteMain></VoteMain> <VoteFooter></VoteFooter> </div> ) } // export default connect((state) => { // return { // supNum: state.vote.supNum, // oppNum: state.vote.oppNum // } // })(Vote) export default connect((state) => { return state.vote })(Vote)\"]},\"1162\":{\"h\":\"VoteFooter.jsx\",\"t\":[\"import { Button } from 'antd' import React from 'react' import action from '../store/actions' import { connect } from 'react-redux' const VoteFooter = function VoteFooter(props) { let { support, oppose } = props return ( <div className='footer'> <Button type='primary' onClick={support}> 支持 </Button> <Button type='primary' danger onClick={oppose}> 反对 </Button> </div> ) } // export default connect(null, (dispatch) => { // return { // support: () => dispatch(action.vote.support()), // oppose: () => dispatch(action.vote.oppose()), // } // })(VoteFooter) export default connect(null, action.vote)(VoteFooter)\"]},\"1163\":{\"h\":\"VoteMain.jsx\",\"t\":[\"import React from 'react' import { connect } from 'react-redux' class VoteMain extends React.Component { render() { let { supNum, oppNum } = this.props return ( <div className='main'> <p>支持人数:{supNum}人</p> <p>反对人数:{oppNum}人</p> </div> ) } } export default connect((state) => state.vote)(VoteMain)\"]},\"1164\":{\"c\":[\"react\"]},\"1165\":{\"c\":[\"redux\"]},\"1166\":{\"h\":\"redux Toolkit\"},\"1167\":{\"h\":\"基础流程\",\"t\":[\"src 目录下创建 store 文件夹,store 目录下创建 index.js\",\"import { configureStore } from '@reduxjs/toolkit' import counterSlice from './features/counterSlice.ts' // configureStore创建一个redux数据 const store = configureStore({ // 合并多个Slice reducer: { counter: counterSlice, }, }) export default store\",\"store 目录下创建 features 文件夹,features 文件夹下创建 counterSlice.js 文件\",\"import { createSlice } from '@reduxjs/toolkit' export interface CounterState { value: number; title: string; } const initialState: CounterState = { value: 0, title: 'redux toolkit pre', } // 创建一个 Slice export const counterSlice = createSlice({ name: 'counter', initialState, // 定义 reducers 并生成关联的操作 reducers: { // 定义一个加的方法 increment: (state, { payload }) => { // action 里面有 type 和 payload 两个属性，所有的传参都在payload里面 state.value += payload.value }, // 定义一个减的方法 decrement: (state) => { state.value -= 1 }, }, }) // 导出加减的方法 export const { increment, decrement } = counterSlice.actions // 默认导出 export default counterSlice.reducer\",\"index.js\",\"import React from 'react' import ReactDOM from 'react-dom/client' import './index.css' import App from './App' import reportWebVitals from './reportWebVitals' // redux toolkit import { Provider } from 'react-redux' import store from './store/index.ts' const root = ReactDOM.createRoot(document.getElementById('root')) root.render( <React.StrictMode> <Provider store={store}> <App /> </Provider> </React.StrictMode> ) reportWebVitals()\",\"App.js\",\"import { useState } from 'react' // 引入相关的hooks import { useSelector, useDispatch } from 'react-redux' // 引入对应的方法 import { increment, decrement } from './store/features/counterSlice.ts' import logo from './logo.svg' import './App.css' function App() { // 通过useSelector直接拿到store中定义的value const { value } = useSelector((store) => store.counter) // 通过useDispatch 派发事件 const dispatch = useDispatch() // 变量 const [amount, setAmount] = useState(1) return ( <div className='App'> <header className='App-header'> <img src={logo} className='App-logo' alt='logo' /> {/* 页面中应用的代码 */} <p>{value}</p> <input value={amount} onChange={(e) => setAmount(+e.target.value)} /> <button onClick={() => { dispatch(increment({ value: amount })) }} > 加 </button> <button onClick={() => { dispatch(decrement()) }} > 减 </button> </header> </div> ) } export default App\"]},\"1168\":{\"h\":\"异步请求\",\"t\":[\"features 文件夹下创建 movieSlice.js\",\"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit' const initialState = { list: [], totals: 0, } // 请求电影列表 const getMovieListApi = () => fetch( 'https://pcw-api.iqiyi.com/search/recommend/list?channel_id=1&data_type=1&mode=24&page_id=1&ret_num=48' ).then((res) => res.json()) // thunk函数允许执行异步逻辑, 通常用于发出异步请求。 // createAsyncThunk 创建一个异步action，方法触发的时候会有三种状态： // pending（进行中）、fulfilled（成功）、rejected（失败） export const getMovieData = createAsyncThunk('movie/getMovie', async () => { const res = await getMovieListApi() return res }) // 创建一个 Slice export const movieSlice = createSlice({ name: 'movie', initialState, reducers: { // 数据请求完触发 loadDataEnd: (state, { payload }) => { state.list = payload state.totals = payload.length }, }, // extraReducers 字段让 slice 处理在别处定义的 actions， // 包括由 createAsyncThunk 或其他slice生成的actions。 extraReducers(builder) { builder .addCase(getMovieData.pending, (state) => { console.log('🚀 ~ 进行中！') }) .addCase(getMovieData.fulfilled, (state, { payload }) => { console.log('🚀 ~ fulfilled', payload) state.list = payload.data.list state.totals = payload.data.list.length }) .addCase(getMovieData.rejected, (state, err) => { console.log('🚀 ~ rejected', err) }) }, }) // 导出方法 export const { loadDataEnd } = movieSlice.actions // 默认导出 export default movieSlice.reducer\",\"修改 index.js\",\"import { configureStore } from '@reduxjs/toolkit' import counterSlice from './features/counterSlice.ts' import movieSlice from './features/movieSlice.ts' // configureStore创建一个redux数据 const store = configureStore({ // 合并多个Slice reducer: { counter: counterSlice, movie: movieSlice, }, }) export default store\",\"修改 App.js\",\"import { useState } from 'react' // 引入相关的hooks import { useSelector, useDispatch } from 'react-redux' // 引入对应的方法 import { increment, decrement, asyncIncrement, } from './store/features/counterSlice.ts' import { getMovieData } from './store/features/movieSlice.ts' import logo from './logo.svg' import './App.css' function App() { // 通过useSelector直接拿到store中定义的value const { value } = useSelector((store) => store.counter) // 通过useSelector直接拿到store中定义的list const { list } = useSelector((store) => store.movie) // 通过useDispatch 派发事件 const dispatch = useDispatch() // 变量 const [amount, setAmount] = useState(1) return ( <div className='App'> <header className='App-header'> <img src={logo} className='App-logo' alt='logo' /> {/* 页面中应用的代码 */} <p>{value}</p> <input value={amount} onChange={(e) => setAmount(+e.target.value)} /> <button onClick={() => { dispatch(increment({ value: amount })) }} > 加 </button> <button onClick={() => { dispatch(decrement()) }} > 减 </button> <button onClick={() => { dispatch(getMovieData()) }} > 获取数据 </button> <ul> {list.map((item) => { return <li key={item.tvId}> {item.name}</li> })} </ul> </header> </div> ) } export default App\"]},\"1169\":{\"c\":[\"react\"]},\"1170\":{\"c\":[\"redux\"]},\"1171\":{\"h\":\"redux\"},\"1172\":{\"h\":\"基础\"},\"1173\":{\"h\":\"index.js\",\"t\":[\"在 Src 目录下新建 store 文件夹 /src/store/index.js\",\"import { createStore } from 'redux' let initial = { supNum: 10, oppNum: 5, } const reducer = function reducer(state = initial, action) { // 浅拷贝，不直接修改容器中的状态,而是在return 时再修改 state = { ...state } switch (action.type) { case 'VOTE_SUP': state.supNum++ break case 'VOTE_OPP': state.oppNum++ break default: break } return state } const store = createStore(reducer) export default store\"]},\"1174\":{\"h\":\"ThemeContext.js\",\"t\":[\"根目录创建上下文 context 文件 /src/ThemeContext.js\",\"import React from 'react' const ThemeContext = React.createContext() export default ThemeContext\"]},\"1175\":{\"h\":\"在 main.jsx 中导入 store\",\"t\":[\"import React from 'react' import ReactDOM from 'react-dom/client' import { ConfigProvider } from 'antd' import zhCN from 'antd/locale/zh_CN' import Vote from './views/Vote' import store from './store' import ThemeContext from './ThemeContext' const root = ReactDOM.createRoot(document.getElementById('root')) root.render( <ConfigProvider locale={zhCN}> <ThemeContext.Provider value={{ store, }} > <Vote></Vote> </ThemeContext.Provider> </ConfigProvider> )\"]},\"1176\":{\"h\":\"Vote.jsx\",\"t\":[\"import React, { useContext, useState, useEffect } from 'react' import VoteMain from './VoteMain' import VoteFooter from './VoteFooter' import ThemeContext from '../ThemeContext' const Vote = function Vote() { const { store } = useContext(ThemeContext) let { supNum, oppNum } = store.getState() let [_, setNum] = useState(0) useEffect(() => { let unsubcribe = store.subscribe(() => { setNum(+new Date()) }) return () => { unsubcribe() } }, [_]) return ( <div className='vote-box'> <div className='header'> <h2 className='title'>React</h2> <span className='num'>{supNum + oppNum}</span> </div> <VoteMain></VoteMain> <VoteFooter></VoteFooter> </div> ) } export default Vote\"]},\"1177\":{\"h\":\"VoteFooter.jsx\",\"t\":[\"import { Button } from 'antd' import React, { useContext } from 'react' import ThemeContext from '../ThemeContext' const VoteFooter = function VoteFooter() { const { store } = useContext(ThemeContext) return ( <div className='footer'> <Button type='primary' onClick={() => { store.dispatch({ type: 'VOTE_SUP' }) }} > 支持 </Button> <Button type='primary' danger onClick={() => { store.dispatch({ type: 'VOTE_OPP' }) }} > 反对 </Button> </div> ) } export default VoteFooter\"]},\"1178\":{\"h\":\"VoteMain.jsx\",\"t\":[\"import React from 'react' import ThemeContext from '../ThemeContext' class VoteMain extends React.Component { static contextType = ThemeContext render() { const { store } = this.context let { supNum, oppNum } = store.getState() return ( <div className='main'> <p>支持人数:{supNum}人</p> <p>反对人数:{oppNum}人</p> </div> ) } componentDidMount() { const { store } = this.context store.subscribe(() => { this.forceUpdate() }) } } export default VoteMain\"]},\"1179\":{\"h\":\"工程化\"},\"1180\":{\"h\":\"ThemeContext.js\",\"t\":[\"在 Src 目录下新建 ThemeContext.js /src/ThemeContext.js\",\"import React from 'react' const ThemeContext = React.createContext() export default ThemeContext\"]},\"1181\":{\"h\":\"index.js\",\"t\":[\"在 Src 目录下新建 store 文件夹 /src/store/index.js\",\"import { createStore } from 'redux' import reducer from './reducers' const store = createStore(reducer) export default store\"]},\"1182\":{\"h\":\"在 main.jsx 中导入 store\",\"t\":[\"import React from 'react' import ReactDOM from 'react-dom/client' import { ConfigProvider } from 'antd' import zhCN from 'antd/locale/zh_CN' import Vote from './views/Vote' import store from './store' import ThemeContext from './ThemeContext' const root = ReactDOM.createRoot(document.getElementById('root')) root.render( <ConfigProvider locale={zhCN}> <ThemeContext.Provider value={{ store, }} > <Vote></Vote> </ThemeContext.Provider> </ConfigProvider> )\"]},\"1183\":{\"h\":\"reducers\",\"t\":[\"在 sotre 文件下新建 reducers 文件并创建 index.js /src/store/reducers/index.js\",\"// 合并各个模块的reducer import { combineReducers } from 'redux' import voteReducer from './voteReducer' const reducer = combineReducers({ vote: voteReducer, }) export default reducer\",\"在 reducers 文件下新建 voteReducer.js /src/store/reducers/voteReducer.js\",\"import * as TYPES from '../action.types' const initial = { supNum: 10, oppNum: 5, } export default function persionReducer(state = initial, action) { state = { ...state } switch (action.type) { case TYPES.VOTE_SUP: state.supNum++ break case TYPES.VOTE_OPP: state.oppNum++ break default: } return state }\",\"在 store 文件下新建 action.types.js /src/store/action.types.js\",\"// 统一管理需要派发的行为标识 export const VOTE_SUP = 'VOTE_SUP' export const VOTE_OPP = 'VOTE_OPP'\"]},\"1184\":{\"h\":\"actions\",\"t\":[\"在 sotre 文件下新建 actions 文件并创建 index.js /src/store/actions/index.js\",\"import voteAction from './voteAction' const action = { vote: voteAction, } export default action\",\"在 actions 文件下新建 voteAction.js /src/store/actions/voteAction.js\",\"import * as TYPES from '../action.types' const voteAction = { support() { return { type: TYPES.VOTE_SUP, } }, oppose() { return { type: TYPES.VOTE_OPP, } }, } export default voteAction\"]},\"1185\":{\"h\":\"Vote.jsx\",\"t\":[\"import React, { useContext, useState, useEffect } from 'react' import VoteMain from './VoteMain' import VoteFooter from './VoteFooter' import ThemeContext from '../ThemeContext' const Vote = function Vote() { const { store } = useContext(ThemeContext) let { supNum, oppNum } = store.getState().vote let [_, setNum] = useState(0) useEffect(() => { let unsubscribe = store.subscribe(() => { setNum(+new Date()) }) return () => { unsubscribe() } }, [_]) return ( <div className='vote-box'> <div className='header'> <h2 className='title'>React</h2> <span className='num'>{supNum + oppNum}</span> </div> <VoteMain></VoteMain> <VoteFooter></VoteFooter> </div> ) } export default Vote\"]},\"1186\":{\"h\":\"VoteFooter.jsx\",\"t\":[\"import { Button } from 'antd' import React, { useContext } from 'react' import ThemeContext from '../ThemeContext' import action from '../store/actions' const VoteFooter = function VoteFooter() { const { store } = useContext(ThemeContext) return ( <div className='footer'> <Button type='primary' onClick={() => { store.dispatch(action.vote.support()) }} > 支持 </Button> <Button type='primary' danger onClick={() => { store.dispatch(action.vote.oppose()) }} > 反对 </Button> </div> ) } export default VoteFooter\"]},\"1187\":{\"h\":\"VoteMain.jsx\",\"t\":[\"import React from 'react' import ThemeContext from '../ThemeContext' class VoteMain extends React.Component { static contextType = ThemeContext render() { const { store } = this.context let { supNum, oppNum } = store.getState().vote return ( <div className='main'> <p>支持人数:{supNum}人</p> <p>反对人数:{oppNum}人</p> </div> ) } componentDidMount() { const { store } = this.context store.subscribe(() => { this.forceUpdate() }) } } export default VoteMain\"]},\"1188\":{\"h\":\"中间件\",\"t\":[\"修改/store/index.js\",\"import { applyMiddleware, createStore } from 'redux' import reducer from './reducers' import reduxLogger from 'redux-logger' import reduxThunk from 'redux-thunk' import reduxPromise from 'redux-promise' const store = createStore( reducer, applyMiddleware(reduxLogger, reduxThunk, reduxPromise) ) export default store\",\"修改/store/actions/voteAction.js\",\"import * as TYPES from '../action.types' const delay = (interval = 1000) => { return new Promise((resolve) => { setTimeout(() => { resolve() }, interval) }) } const voteAction = { // redux-thunk support() { return async (dispatch) => { await delay() // 模拟网络请求 dispatch({ type: TYPES.VOTE_SUP, }) } }, // redux-promise async oppose() { await delay(2000) return { type: TYPES.VOTE_OPP, } }, } export default voteAction\"]},\"1189\":{\"c\":[\"react\"]},\"1190\":{\"c\":[\"redux\"]},\"1191\":{\"h\":\"setState\"},\"1192\":{\"h\":\"用法\"},\"1193\":{\"h\":\"基本用法\",\"t\":[\"this.setState({ key: value })\"]},\"1194\":{\"h\":\"用函数作为参数\",\"t\":[\"this.setState((prevState, props) => { // 在这里可以基于 prevState 和 props 计算新的状态 return newState })\",\"这种方式的函数参数接收两个参数：prevState 和 props。其中：\",\"prevState：表示组件当前的状态。React 会确保在调用函数之前，prevState 是最新的状态。\",\"props：表示组件的属性。与 prevState 一样，React 会确保在调用函数之前，props 是最新的属性。\",\"在函数内部，可以使用这两个参数来计算新的状态对象，然后将其返回。React 会使用这个新状态对象合并到当前状态中，并在合适的时机触发组件的重新渲染。\",\"使用函数作为 setState 的参数是一种安全且性能更好的方式来更新状态，特别是在需要基于当前状态进行计算时。\"]},\"1195\":{\"h\":\"setState 传入第二个参数 callback\",\"t\":[\"this.setState({ key: value }, () => { // 在这里可以访问更新后的状态 })\",\"setState 是异步的，这意味着你不能立即在调用后获取更新后的状态。但是，你可以传递一个回调函数作为第二个参数，在状态更新后被调用\"]},\"1196\":{\"h\":\"示例\",\"t\":[\"import React, { Component } from 'react' class App extends Component { constructor(props) { super(props) this.state = { message: 'HelloReact', count: 0, } } changeText() { // 1.setState基本使用 this.setState({ message: 'Hello USTB' }) // 2.setState使用回调函数作为参数 // 优点1:可以在回调函数中编写状态的处理逻辑 // 优点2:会将之前的state和props传递给函数 this.setState((prevState, props) => { console.log('最新state:', prevState) console.log('props信息', props) return { message: 'Hello USTB（采用回调函数作为参数）', } }) // 3.setState传入第二个参数callback // 该函数会在状态更新完成并重新渲染组件后被调用。这可以用来执行与更新状态相关的操作，以及在确保状态更新后执行其他逻辑。 this.setState({ message: 'Hello USTB(验证setState是异步)' }, () => { // 在回调中获取更新后的状态 console.log('setState的回调函数中打印message', this.state.message) }) console.log('执行setState后立马打印message：', this.state.message) } render() { const { message, count } = this.state return ( <div> <h2>{message}</h2> <button onClick={(e) => this.changeText()}>改变文本</button> <h2>{count}</h2> <button>+1</button> </div> ) } } export default App\"]},\"1197\":{\"h\":\"连续更新状态\",\"t\":[\"setState 调用展示了一个常见的陷阱，它可能会导致不正确的结果。连续的多个 setState 调用可能在同一批次中被合并执行，导致只有最后一个调用的状态更新生效。在你的例子中，前两次加一后减两，最终导致 count 为 -2。\",\"import React, { Component } from 'react' class App extends Component { constructor(props) { super(props) this.state = { count: 0, } } increment() { console.log('--------') // 只会执行一次render函数，下列三行最后执行结果是 -2 this.setState({ count: this.state.count + 1 }) this.setState({ count: this.state.count + 1 }) this.setState({ count: this.state.count - 2 }) } render() { console.log('执行render函数') const { count } = this.state return ( <div> <h2>{count}</h2> <button onClick={(e) => this.increment()}>+1</button> </div> ) } } export default App\",\"使用回调函数作为 setState 的参数，将状态更新逻辑嵌套在回调函数内。在这个方法中，你使用回调函数的方式进行连续的状态更新，这样每次更新都基于前一个更新的结果，避免了合并问题。这种方式保证了状态的正确更新。\",\"import React, { Component } from 'react' class App extends Component { constructor(props) { super(props) this.state = { count: 0, } } increment() { console.log('--------') // 如果在一个事件函数中，需要连续对一个状态进行更改，需要为setState传入回调函数 // 下列三个setState执行完后，counter值为0 this.setState((state) => { return { counter: state + 1, } }) this.setState((state) => { return { counter: state + 1, } }) this.setState((state) => { return { counter: state - 2, } }) } render() { console.log('执行render函数') const { count } = this.state return ( <div> <h2>{count}</h2> <button onClick={(e) => this.increment()}>+1</button> </div> ) } } export default App\"]},\"1198\":{\"h\":\"setState 为什么是异步\"},\"1199\":{\"h\":\"异步的意义\",\"t\":[\"React 的 setState 是异步的设计是出于性能优化和避免不必要的渲染的考虑。这种设计在大多数情况下可以提高应用的性能和响应性。\",\"性能优化： 当调用 setState 来更新组件的状态时，React 并不会立即进行重新渲染。而是会将更新放入一个队列中，然后在合适的时机批量处理这些更新，从而减少不必要的重复渲染。这样可以提高性能，避免频繁的 DOM 操作。\",\"合并更新： React 会合并相邻的 setState 调用，避免重复的渲染。这意味着如果在一次事件处理函数中多次调用了 setState，React 会将这些调用合并成一个更新操作，只触发一次重新渲染。这种合并减少了不必要的渲染成本。\",\"批量更新： 当多个组件都有状态更新时，React 会将这些更新批量处理，然后一次性更新所有组件，避免了不必要的重复渲染和频繁的 DOM 操作。\"]},\"1200\":{\"h\":\"同步可能会产生的问题\",\"t\":[\"下列案例阐述了假如 setState 是同步可能会产生的问题。如果 setState 是同步执行，会立马更新 message 的值，而并未执行 render 函数，给子组件 Hello 传递的 message 参数还是之前的旧值(HelloReact)，就会造成 state 和 props 不一致。\",\"import React, { Component } from 'react' import Hello from './Hello' class App extends Component { constructor(props) { super(props) this.state = { message: 'HelloReact', } } changeText() { // 如果setState是同步调用，那么会立马更新message的值，而并未执行render函数 // 那么给子组件Hello传递的message参数还是之前的旧值(HelloReact)，就会造成state和props不一致 this.setState({ message: 'Hello USTB' }) } render() { console.log('执行render函数') const { message } = this.state return ( <div> <h2>{message}</h2> <button onClick={(e) => this.changeText()}>改变文本</button> <Hello message={message} /> </div> ) } } export default App\"]},\"1201\":{\"h\":\"setState 一定是异步吗\",\"t\":[\"在 React 的不同版本中，setState 的行为可能有所不同，但通常情况下，React 会将 setState 设计为异步操作，以提高性能和优化渲染。\",\"setState 是否是异步需要根据 React 的版本来确定，在 React18 中，setState 操作一定是异步的。在 React18 版本之前，在组件生命周期或 React 合成事件中，setState 是异步。仍然有一些特殊情况下，setState 可能会被视为同步操作。\",\"使用 setTimeout： 在某些早期的 React 版本中，使用 setTimeout 调用 setState 可能会导致同步更新，即在调用 setState 后立即执行重新渲染。这是因为在 setTimeout 中的代码会被推迟到下一个事件循环执行，而 React 的更新通常是在事件循环的末尾批量执行的，所以此时的 setState 可能会被立即处理。将 setState 的更新放在 setTimeout 的回调函数中。这样也能够在更新状态后立即访问到最新的状态。\",\"原生 DOM 事件调用： 在一些原生事件处理函数中，例如 DOM 元素的点击事件处理函数，早期的 React 版本可能会将 setState 视为同步操作。这是因为原生事件是在浏览器的事件循环中触发的，而 React 的更新也是在事件循环中执行的，因此在一些情况下，setState 调用可能会立即更新组件。\"]},\"1202\":{\"h\":\"React18 中如何将 setState 设置为同步\"},\"1203\":{\"h\":\"flushSync\",\"t\":[\"flushSync 是 React 18 引入的一个新特性，用于在某些情况下强制同步地执行 React 更新。在 React 中，通常情况下，更新是异步批处理的，以优化性能并提高用户体验。然而，有时候需要在特定情况下控制更新的同步执行，这就是 flushSync 的用武之地。\",\"flushSync 的作用是立即执行挂起的异步更新，而不管是在哪个生命周期、回调函数或事件处理程序中触发的。这可以确保相关的 UI 更新在调用 flushSync 之前被同步地执行。\",\"flushSync 接受一个回调函数作为参数，该回调函数中包含需要同步执行的更新逻辑。当调用 flushSync 时，React 会尝试在当前任务中同步地处理更新，而不等到事件循环的下一个迭代。\",\"一些常见的用例包括：\",\"强制同步渲染： 在某些情况下，可能需要确保组件的渲染是同步的，以避免更新之间的不一致状态。\",\"在 React 事件处理函数中同步更新： 如果在 React 的事件处理函数中调用了 flushSync，React 将会在当前事件循环中同步执行更新，而不是等到下一个循环。\",\"同步读取更新后的 DOM 状态： 在使用 flushSync 后，可以立即读取更新后的 DOM 状态，而不需要等待渲染完成。\",\"flushSync 应该谨慎使用，因为它可能会阻塞渲染并影响性能。通常情况下，应该优先考虑使用 React 的标准异步更新机制，以获得更好的性能和用户体验。只有在特定的场景下，确实需要控制同步更新时，才考虑使用 flushSync。\"]},\"1204\":{\"h\":\"示例\",\"t\":[\"import React, { Component } from 'react' import { flushSync } from 'react-dom' // 导入 flushSync 函数 class App extends Component { constructor(props) { super(props) this.state = { message: 'HelloReact', count: 0, } } // 点击按钮后触发的方法，异步改变 message changeText() { this.setState({ message: 'Hello USTB' }) console.log('message:', this.state.message) // 这里打印的是旧的 state.message } // 点击按钮后触发的方法，同步改变 message changeTextSync() { flushSync(() => { this.setState({ message: 'Hello Sync' }) // 同步更新状态 }) console.log('message:', this.state.message) // 这里打印的是新的 state.message } render() { console.log('执行 render 函数') const { message } = this.state return ( <div> <h2>{message}</h2> <button onClick={(e) => this.changeText()}>改变文本</button> <button onClick={(e) => this.changeTextSync()}> 同步改变文本 </button> </div> ) } } export default App\"]},\"1205\":{\"c\":[\"React\"]},\"1206\":{\"c\":[\"setState\"]},\"1207\":{\"h\":\"useCallback\"},\"1208\":{\"h\":\"定义\",\"t\":[\"useCallback 是对 useMemo 的特化，它可以返回一个缓存版本的函数，只有当它的依赖项改变时，函数才会被重新创建。这意味着如果依赖没有改变，函数引用保持不变，从而避免了因函数引用改变导致的不必要的重新渲染。\"]},\"1209\":{\"h\":\"为什么需要 useCallback\",\"t\":[\"想象这个场景：你有一个 React.memo 化的子组件，该子组件接受一个父组件传递的函数作为 prop。如果父组件重新渲染，而且这个函数是在父组件的函数体内定义的，那么每次父组件渲染时，都会为子组件传递一个新的函数实例。这可能会导致子组件不必要地重新渲染，即使该函数的实际内容没有任何变化。\",\"useCallback 的主要目的是解决这样的问题。它确保，除非依赖项发生变化，否则函数实例保持不变。这可以防止因为父组件的非相关渲染而导致的子组件的不必要重新渲染。\",\"当然，useCallback 真正的应用场景不仅于此，它还可以用于其他需要稳定引用的场景，例如事件处理器、setTimeout/setInterval 的回调、函数用于 useEffect、useMemo 或 useCallback 等的依赖项、或其他可能因为函数引用改变而导致意外行为的场合。\"]},\"1210\":{\"h\":\"如何使用 useCallback\",\"t\":[\"const memoizedCallback = useCallback( () => { // 函数体 }, [dependency1, dependency2, ...] // 依赖数组 );\",\"只有当 dependency1、dependency2 等依赖发生改变时，函数才会重新创建。这对于 React.memo 化的组件、useEffect、useMemo 等钩子的输入特别有用，因为它们都依赖于输入的引用恒定性。\",\"来看个示例：\",\"假设我们有一个 TodoList 组件，其中有一个 TodoItem 子组件：\",\"function TodoItem({ todo, onDelete }) { console.log('TodoItem render:', todo.id) return ( <div> {todo.text} <button onClick={() => onDelete(todo.id)}>Delete</button> </div> ) } function TodoList() { const [todos, setTodos] = useState([ { id: 1, text: 'Learn React' }, { id: 2, text: 'Learn useCallback' }, ]) const handleDelete = (id) => { setTodos((todos) => todos.filter((todo) => todo.id !== id)) } return ( <div> {todos.map((todo) => ( <TodoItem key={todo.id} todo={todo} onDelete={handleDelete} /> ))} </div> ) }\",\"上述代码中，每次 TodoList 重新渲染时，handleDelete 都会被重新创建，导致 TodoItem 也重新渲染。为了优化这一点，我们可以使用 useCallback：\",\"const handleDelete = useCallback((id) => { setTodos((todos) => todos.filter((todo) => todo.id !== id)) }, [])\"]},\"1211\":{\"h\":\"useMemo 和 useCallback 的差异\",\"t\":[\"用途与缓存的内容不同：\",\"useMemo: 用于缓存复杂函数的计算结果或者构造的值。它返回缓存的结果。\",\"useCallback: 用于缓存函数本身，确保函数的引用在依赖没有改变时保持稳定。\",\"底层关联：\",\"从本质上说，useCallback(fn, deps)就是 useMemo(() => fn, deps)的语法糖:\",\"function useCallback(fn, dependencies) { return useMemo(() => fn, dependencies) }\",\"这里有一个用户评论系统示例，CommentsPage 组件可显示文章的评论并允许用户提交新评论：\",\"import React, { useMemo, useCallback } from 'react' function CommentsPage({ articleId, user }) { // 假设 fetchComments 是一个获取评论数据的函数 const comments = fetchComments('/comments/' + articleId) // 对评论数据进行排序 const sortedComments = useMemo(() => { return comments.sort((a, b) => new Date(b.date) - new Date(a.date)) }, [comments]) // 处理新评论的提交 const handleCommentSubmit = useCallback( (commentText) => { post('/comments/' + articleId, { author: user, text: commentText, }) }, [articleId, user] ) return ( <div> <CommentList comments={sortedComments} /> <CommentForm onSubmit={handleCommentSubmit} /> </div> ) }\",\"在这个示例中，useMemo 和 useCallback 用途如下：\",\"useMemo 用途：sortedComments 通过对 comments 数据按日期进行排序得到。我们不希望每次 CommentsPage 重新渲染时都重新排序评论，除非 comments 发生变化。因此，我们使用 useMemo 来缓存排序结果。\",\"useCallback 用途：对于 handleCommentSubmit 函数，我们不希望它在 articleId 或 user 保持不变的情况下有一个新的引用。因此，我们使用 useCallback 来确保函数引用的稳定性。\"]},\"1212\":{\"h\":\"什么时候使用 useCallback\",\"t\":[\"使用 useCallback 不意味着总是会带来性能提升，这是对 useCallback 使用场景的简单总结：\",\"使用 useCallback：\",\"子组件的性能优化：当你将函数作为 prop 传递给已经通过 React.memo 进行优化的子组件时，使用 useCallback 可以确保子组件不会因为父组件中的函数重建而进行不必要的重新渲染。\",\"Hook 依赖：如果你正在传递的函数会被用作其他 Hook（例如 useEffect）的依赖时，使用 useCallback 可确保函数的稳定性，从而避免不必要的副作用的执行。\",\"复杂计算与频繁的重新渲染：在应用涉及很多细粒度的交互，如绘图应用或其它需要大量操作和反馈的场景，使用 useCallback 可以避免因频繁的渲染而导致的性能问题。\",\"避免使用 useCallback：\",\"过度优化：在大部分情况下，函数组件的重新渲染并不会带来明显的性能问题，过度使用 useCallback 可能会使代码变得复杂且难以维护。\",\"简单组件：对于没有经过 React.memo 优化的子组件或者那些不会因为 prop 变化而重新渲染的组件，使用 useCallback 是不必要的。\",\"使代码复杂化：如果引入 useCallback 仅仅是为了“可能会”有性能提升，而实际上并没有明确的证据表明确实有性能问题，这可能会降低代码的可读性和可维护性。\",\"不涉及其它 Hooks 的函数：如果一个函数并不被用作其他 Hooks 的依赖，并且也不被传递给任何子组件，那么没有理由使用 useCallback。\",\"除此之外，我们还要注意针对 useCallback 的依赖项设计，我们需要警惕非必要依赖的混入，造成 useCallback 的效果大打折扣。例如这个非常典型的案例：\",\"function TodoList() { const [todos, setTodos] = useState([]) const [inputValue, setInputValue] = useState('') const handleInputChange = (event) => { setInputValue(event.target.value) } const handleAddTodo = useCallback( (text) => { const newTodo = { id: Date.now(), text } setTodos((prevTodos) => [...prevTodos, newTodo]) }, [todos] ) // 这里是问题所在，todos的依赖导致这个useCallback几乎失去了其作用 return ( <div> <input value={inputValue} onChange={handleInputChange} /> <button onClick={() => handleAddTodo(inputValue)}>Add Todo</button> <ul> {todos.map((todo) => ( <li key={todo.id}>{todo.text}</li> ))} </ul> </div> ) }\",\"在上面的示例中，每当 todos 改变，handleAddTodo 都会重新创建，尽管我们使用了 useCallback。这实际上并没有给我们带来预期的性能优化。正确的做法是利用 setTodos 的函数式更新，这样我们就可以去掉 todos 依赖：\",\"const handleAddTodo = useCallback((text) => { const newTodo = { id: Date.now(), text } setTodos((prevTodos) => [...prevTodos, newTodo]) }, []) // 注意这里的空依赖数组\"]},\"1213\":{\"c\":[\"React\"]},\"1214\":{\"c\":[\"Hook\"]},\"1215\":{\"h\":\"useContext\"},\"1216\":{\"h\":\"基础用法\"},\"1217\":{\"h\":\"创建 Context\",\"t\":[\"首先，我们需要使用 React.createContext 创建一个 context 对象：\",\"const MyContext = React.createContext(defaultValue)\",\"这里的 defaultValue 是当组件不在任何 Context Provider 内部时的默认值，defaultValue 可以用 null，但 React 官方建议提供一个有意义的默认值，这样可以让调用 usecontext 组件更安全。\"]},\"1218\":{\"h\":\"使用 Context Provider\",\"t\":[\"为了在组件树中使用这个 context，我们需要使用<MyContext.Provider>组件，它接受一个 valueprop，这就是你想在它的子组件中共享的值。\",\"<MyContext.Provider value={someValue}>{/* 子组件 */}</MyContext.Provider>\"]},\"1219\":{\"h\":\"在组件中访问 Context\",\"t\":[\"在函数组件中，可以使用 useContexthook 来访问这个 context 的值。\",\"function MyComponent() { const contextValue = useContext(MyContext) return <div>{contextValue}</div> }\",\"这里的 contextValue 就是第二步传入的 someValue，而且 contextValue 获取到的永远是最新的值。\"]},\"1220\":{\"h\":\"示例\",\"t\":[\"import React, { useContext } from 'react' // 1. 创建 Context const ThemeContext = React.createContext('light') function App() { return ( // 2. 使用 Context Provider <ThemeContext.Provider value='dark'> <Toolbar /> </ThemeContext.Provider> ) } function Toolbar() { return ( <div> <ThemeButton /> </div> ) } function ThemeButton() { // 3. 在组件中访问 Context const theme = useContext(ThemeContext) return <button>{theme} theme</button> } export default App\",\"App 中引用了 ThemeContext 并传了值，ThemeButton 是 App 的孙组件，这二者之间没有通过 Toolbar 进行嵌套传值，但是 ThemeButton 依然通过 useContext 拿到了 App 里的值。\"]},\"1221\":{\"h\":\"进阶技巧\"},\"1222\":{\"h\":\"动态 Context 值\",\"t\":[\"有的时候 Context 传的值需要动态变化，我们可以基于 useState 去更新状态，更新后的值会实时反应到调用 Context 的组件上。\",\"function ThemeProvider({ children }) { const [theme, setTheme] = useState('light') return ( <ThemeContext.Provider value={theme}> <button onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')} > Toggle Theme </button> {children} </ThemeContext.Provider> ) }\",\"如果要更新对象也是可以的：\",\"import React, { useContext } from 'react' // 1. 创建 Context const CurrentUserContext = React.createContext('light') function App() { const [currentUser, setCurrentUser] = useState(null) return ( // 2. 使用 Context Provider <CurrentUserContext.Provider value={{ currentUser, setCurrentUser, }} > <Toolbar /> </CurrentUserContext.Provider> ) } function Toolbar() { return ( <div> <LoginButton /> </div> ) } function LoginButton() { const { currentUser, setCurrentUser } = useContext(CurrentUserContext) if (currentUser !== null) { return <p>You logged in as {currentUser.name}.</p> } return ( <Button onClick={() => { setCurrentUser({ name: 'Advika' }) }} > Log in as Weijunext </Button> ) } export default App\"]},\"1223\":{\"h\":\"覆盖 Provider value\",\"t\":[\"当我们调用多个相同 Context，会实现 value 的覆盖\",\"<ThemeContext.Provider value='dark'> ... <ThemeContext.Provider value='light'> <Footer /> </ThemeContext.Provider> ... </ThemeContext.Provider>\"]},\"1224\":{\"h\":\"高级应用——性能优化\",\"t\":[\"当我们在使用 useContext 时，一个经常被提到的问题是性能优化。如果不正确地使用，Context 可能导致不必要的组件渲染，从而影响应用性能。\"]},\"1225\":{\"h\":\"为什么会出现性能问题？\",\"t\":[\"当 Provider 的 value 属性值发生变化时，所有使用了 useContext 的组件都将重新渲染。如果 value 经常变化，或者消费者组件很多，那么这会引起大量的不必要的渲染。\"]},\"1226\":{\"h\":\"怎样解决？\"},\"1227\":{\"h\":\"粒度化 Context\",\"t\":[\"如果你的 context 包含许多不同的状态值，尝试将它们分解成更小的 context。例如，而不是只有一个大的 AppContext，你可以有 UserContext、ThemeContext 等。这样，当某一部分的数据发生变化时，只有依赖于那部分数据的组件会重新渲染。\",\"import { createContext, useContext, useState } from 'react' const ThemeContext = createContext(null) const CurrentUserContext = createContext(null) export default function MyApp() { const [theme, setTheme] = useState('light') const [currentUser, setCurrentUser] = useState(null) return ( <ThemeContext.Provider value={theme}> <CurrentUserContext.Provider value={{ currentUser, setCurrentUser, }} > <Toolbar /> <button onClick={() => setTheme(theme === 'light' ? 'dark' : 'light') } > Toggle Theme </button> </CurrentUserContext.Provider> </ThemeContext.Provider> ) }\"]},\"1228\":{\"h\":\"使用多个 Context 提供者\",\"t\":[\"这与上一点相似。你可以为应用中的不同部分使用不同的 context 提供者，确保仅当真正需要的数据更改时才重新渲染组件。\"]},\"1229\":{\"h\":\"使用 useMemo 和 useCallback 优化 value\",\"t\":[\"为了避免 value 变化造成子孙组件频繁的重新渲染，可以使用 useMemo 和 useCallback 对参数和方法进行缓存，减少 value 的无意义更新。\",\"import { useCallback, useMemo } from 'react' function MyApp() { const [currentUser, setCurrentUser] = useState(null) const login = useCallback((response) => { storeCredentials(response.credentials) setCurrentUser(response.user) }, []) const contextValue = useMemo( () => ({ currentUser, login, }), [currentUser, login] ) return ( <AuthContext.Provider value={contextValue}> <Page /> </AuthContext.Provider> ) }\"]},\"1230\":{\"c\":[\"React\"]},\"1231\":{\"c\":[\"Hook\"]},\"1232\":{\"h\":\"useDeferredValue\"},\"1233\":{\"h\":\"useTransition 和 useDeferredValue 的差异\",\"t\":[\"useTransition 主要关注点是状态的过渡。它允许开发者控制某个更新的延迟更新，还提供了过渡标识，让开发者能够添加过渡反馈。\",\"useDeferredValue 主要关注点是单个值的延迟更新。它允许你把特定状态的更新标记为低优先级。\",\"如果你想提供过渡反馈，就用 useTransition，如果不需要提供过渡反馈，用 useDeferredValue 就可以。\"]},\"1234\":{\"h\":\"基础使用\",\"t\":[\"const deferredValue = useDeferredValue(someValue)\",\"其中 someValue 是你想要延迟的值，它可以是任何类型。\",\"deferredValue 的渲染有两种情况：\",\"在初始渲染时，deferredValue 的值将与 someValue 的值相同。\",\"在 UI 更新期间，因为 deferredValue 的优先级较低，即使并发模式下 deferredValue 已在后台更新，React 也会先使用旧值渲染，当其它高优先级的状态更新完成，才会把 deferredValue 新值渲染出来。\"]},\"1235\":{\"h\":\"示例分析\",\"t\":[\"想象一个场景，你在大数据量场景下做查询，前端渲染就需要延迟更新列表，还希望只有最后一次查询的数据被保留，这时候 useDeferredValue 就派上用场了，例如：\",\"import { useState, useDeferredValue, memo } from 'react' export default function App() { const [text, setText] = useState('') const deferredText = useDeferredValue(text) return ( <> {/* 输入框的值直接与 text 绑定，所以输入框会实时显示用户的输入 */} <input value={text} onChange={(e) => setText(e.target.value)} /> {/* SlowList 组件接受 deferredText 作为属性，渲染优先级会被降低 */} {/* 在 UI 真正更新前，如果 deferredText 被更新多次，也只会保留最后一次的结果 */} <SlowList text={deferredText} /> </> ) } const SlowList = memo(function SlowList({ text }) { const arr = [] for (let i = 0; i < 200; i++) { let startTime = performance.now() while (performance.now() - startTime < 1) {} if (String(i).includes(text)) { arr.push(<li key={i}>{i}</li>) } } return <ul className='items'>{arr}</ul> })\",\"如果你想对照不用 useDeferredValue 的效果，只要把<SlowList>修改掉就可以：\",\"<SlowList text={text} />\"]},\"1236\":{\"h\":\"注意事项\",\"t\":[\"useDeferredValue 仅在开启 React 并发模式的时候才有效\",\"// React v18以前 ReactDOM.render(<app />, rootNode) // ❌ 无法开启useTransition // React v18 ReactDOM.createRoot(rootNode).render(<app />) // ✅ 开启useTransition\",\"传递给 useDeferredValue 的值应该是原始值（如字符串和数字）或在渲染外部创建的对象。\",\"为什么对象需要创建在外部创建？这其实和 JavaScript 的机制有关，即使每次创建相同的对象，JavaScript 依然会每次生成新的引用。这意味着每次你在组件的渲染函数中创建一个新的对象并将其传递给 useDeferredValue，你都是在传递一个新的、与上一次渲染不同的引用。\",\"function MyComponent() { const obj = { name: 'John' } // 每次 MyComponent 重新渲染时，都会创建一个新的 obj 对象，它们的引用是不同的 // useDeferredValue 通过 Object.is 来检查值是否有变化，引用不同的对象会被当作不同的值 const deferredValue = useDeferredValue(obj) // ...其他代码... }\",\"当同一个 useDeferredValue 在渲染前接收到多次不同的值时，只有最后一个会被渲染。想象一下，前端在做大数据量查询的时候，我们当然希望只有最后一次查询的数据成功渲染。\",\"和 useTransition 一样，useDeferredValue 只会中断或延迟 UI 的渲染，不会阻止网络请求。\",\"useDeferredValue 与<Suspense>结合使用，在 useDeferredValue 更新时，<Suspense>的 fallback 是不会出现的，页面上是继续显示 useDeferredValue 的旧值。这一点和 useTransition 不一样。\"]},\"1237\":{\"h\":\"和节流、防抖的关系\",\"t\":[\"从上面的学习可以看出来，useDeferredValue 在某些场景下是可以替换掉节流和防抖的，我们先来分析它们各自的特性，然后看看它们分别适用什么场景？\",\"防抖与节流的局限性：\",\"这两种方法都是为了控制函数的执行频率，但它们是阻塞的，可能会导致不流畅的用户体验。\",\"useDeferredValue 的优势：\",\"它与 React 深度集成，可以适应用户的设备。如果设备性能好，延迟的重新渲染会很快完成；如果设备性能差，重新渲染会相应地延迟。\",\"它不需要选择固定的延迟，与防抖和节流不同。\",\"由 useDeferredValue 执行的重新渲染是可中断的。这意味着在 React 重新渲染期间，如果发生了其他更新，React 会中断当前的渲染并处理新的更新。\",\"适用场景：\",\"如果要优化的工作不是在渲染期间进行的，例如减少网络请求，那么防抖和节流仍然是有用的。\",\"如果优化的目标是和渲染有关的，建议使用 useDeferredValue\"]},\"1238\":{\"c\":[\"React\"]},\"1239\":{\"c\":[\"Hook\"]},\"1240\":{\"h\":\"useEffect\"},\"1241\":{\"h\":\"定义\",\"t\":[\"useEffect(setup, dependencies?)\",\"useEffect 接受两个参数：\",\"setup 函数：这是包含我们的 Effect 逻辑的函数。setup 函数里还可以选择返回一个 cleanup 函数，cleanup 函数会在组件卸载的时候执行。\",\"依赖数组（optional dependencies） ：这是 setup 代码内部引用的所有响应式值的列表。响应式值包括 props、state 以及直接在组件主体中声明的所有变量和函数。依赖数组可以不传递、传空数组和非空数组。\"]},\"1242\":{\"h\":\"用法详解\"},\"1243\":{\"h\":\"基础使用\",\"t\":[\"最简单的用法，在 useEffect 函数组件中执行副作用（例如：数据获取、手动修改 DOM、订阅事件等）。\",\"import React, { useState, useEffect } from 'react' function Example() { const [count, setCount] = useState(0) useEffect(() => { document.title = `点击了 ${count} 次` }) return ( <div> <p>点击了 {count} 次</p> <button onClick={() => setCount(count + 1)}>点击我</button> </div> ) }\"]},\"1244\":{\"h\":\"不同的依赖数组的区别\",\"t\":[\"import React, { useState, useEffect } from 'react' function Example() { const [leftCount, setLeftCount] = useState(0) const [rightCount, setRightCount] = useState(0) useEffect(() => { console.log(`Button left clicked ${leftCount} times`) document.title = `Button left clicked ${leftCount} times` }) useEffect(() => { console.log(`Button right clicked ${rightCount} times`) }, [rightCount]) useEffect(() => { console.log(`I have a empty array of dependencies.`) }, []) return ( <div className='flex'> <div> <p>左按钮点击了 {leftCount} 次</p> <button onClick={() => setLeftCount(count + 1)}>左按钮</button> </div> <div> <p>右按钮点击了 {rightCount} 次</p> <button onClick={() => setRightCount(count + 1)}>右按钮</button> </div> </div> ) }\",\"这个示例中，我们写了 3 个 useEffect，添加了不同的依赖数组，它们分别会有这样的表现：\",\"第一个 useEffect 没有添加依赖数组，它的触发时机有：\",\"组件挂载、卸载的时候\",\"页面每一次 re-render 的时候，即 leftCount 和 rightCount 更新的时候，也是左按钮和右按钮点击的时候\",\"第二个 useEffect 依赖数组添加了 rightCount，它的触发时机有：\",\"组件挂载、卸载的时候\",\"rightCount 触发的 re-render 的时候，即 rightCount 更新的时候，也是右按钮点击的时候\",\"第三个 useEffect 依赖数组说空的，它的触发时机有：\",\"组件挂载、卸载的时候\"]},\"1245\":{\"h\":\"清除函数的作用\",\"t\":[\"useEffect(() => { …… return () => { // 组件卸载会执行这里面的代码 }; }, []);\"]},\"1246\":{\"h\":\"应用场景 1:清除定时器\",\"t\":[\"如果你在 useEffect 中设置了一个定时器（如 setTimeout 或 setInterval），在组件卸载前，你应该清除它，以防止它在组件不在 DOM 中时仍然执行。\",\"useEffect(() => { const timer = setInterval(() => { console.log('console once per second.') }, 1000) return () => { clearInterval(timer) } }, [])\"]},\"1247\":{\"h\":\"应用场景 2:事件监听器\",\"t\":[\"为全局对象（如 window 或 document）或特定 DOM 元素添加的事件监听器应当在组件卸载或不再需要它们时被移除。\",\"useEffect(() => { const handleResize = () => { console.log('Window resized!') } window.addEventListener('resize', handleResize) return () => { window.removeEventListener('resize', handleResize) } }, [])\"]},\"1248\":{\"h\":\"应用场景 3:WebSockets 聊天室\",\"t\":[\"当使用 WebSockets 或其他实时通信技术时，你可能会在组件加载时建立一个连接，而在组件卸载时需要断开这个连接。\",\"useEffect(() => { const socket = new WebSocket('ws://weijunext.com/socket') socket.onmessage = (event) => { console.log(event.data) } return () => { socket.close() } }, [])\"]},\"1249\":{\"h\":\"应用场景 4:请求的取消\",\"t\":[\"对于可能在组件卸载后才完成的异步请求（如使用 Axios 发起的 HTTP 请求），你应该在组件卸载前取消它们，以防止设置已卸载组件的状态。\",\"useEffect(() => { const source = axios.CancelToken.source() axios .get('/api/some-endpoint', { cancelToken: source.token }) .then((response) => { console.log(response.data) }) .catch((error) => { if (axios.isCancel(error)) { console.log('Request cancelled') } else { console.error(error) } }) return () => { source.cancel('Component unmounted') } }, [])\"]},\"1250\":{\"h\":\"应用场景 5:DOM 直接操作和第三方 DOM 库\",\"t\":[\"如果使用了直接操作 DOM 的方法或使用了如 D3、animation 这样的第三方库来操作 DOM，你可能需要在组件卸载时清理或还原某些操作。\",\"useEffect(() => { const animation = new FadeInAnimation(ref.current) animation.start(1000) return () => { animation.stop() } }, [])\"]},\"1251\":{\"h\":\"跳过初始渲染\",\"t\":[\"在某些情况下，当组件首次渲染时，我们不希望立即执行某些操作。这些操作可能包括发送网络请求、触发某些动画或其他任务。而是只有在某个值或依赖项发生变化后，我们才希望执行这些任务。\",\"假设我们有一个 count 状态，我们希望当 count 值发生变化时显示一个通知，但不希望在组件首次加载时显示这个通知。\",\"import React, { useState, useEffect, useRef } from 'react' function Counter() { const [count, setCount] = useState(0) const mounted = useRef(false) useEffect(() => { if (mounted.current) { alert('Count value changed!') } else { mounted.current = true } }, [count]) return ( <div> <button onClick={() => setCount(count + 1)}>Increase</button> <p>Count: {count}</p> </div> ) } export default Counter\"]},\"1252\":{\"c\":[\"React\"]},\"1253\":{\"c\":[\"Hook\"]},\"1254\":{\"h\":\"useLayoutEffect\"},\"1255\":{\"h\":\"useEffect vs useLayoutEffect\",\"t\":[\"useEffect 和 useLayoutEffect 的区别仅有一个：\",\"useEffect 执行时机是在 React 的渲染和提交阶段之后；\",\"useLayoutEffect 执行时机是在 React 的提交阶段之后，但在浏览器实际绘制屏幕之前。\",\"import React, { useEffect, useLayoutEffect, useState, useRef } from 'react' function BoxComparison() { const [heightEffect, setHeightEffect] = useState(0) const [heightLayoutEffect, setHeightLayoutEffect] = useState(0) const refEffect = useRef(null) const refLayoutEffect = useRef(null) useEffect(() => { if (refEffect.current) { setHeightEffect(refEffect.current.offsetWidth) } }, []) useLayoutEffect(() => { if (refLayoutEffect.current) { setHeightLayoutEffect(refLayoutEffect.current.offsetWidth) } }, []) return ( <div> <div> <h2>使用 useEffect</h2> <div ref={refEffect} style={{ width: '200px', height: '50px', background: 'lightgray', }} > 这是一个方块 </div> <div style={{ width: '100px', height: `${heightEffect}px`, background: 'red', marginTop: '10px', }} > 红色方块 </div> </div> <div style={{ marginTop: '30px' }}> <h2>使用 useLayoutEffect</h2> <div ref={refLayoutEffect} style={{ width: '200px', height: '50px', background: 'lightgray', }} > 这是一个方块 </div> <div style={{ width: '100px', height: `${heightLayoutEffect}px`, background: 'blue', marginTop: '10px', }} > 蓝色方块 </div> </div> </div> ) } export default BoxComparison\",\"当你在性能较差的设备上肉眼可以明显看到区别：\",\"useEffect 的方块会闪一下\",\"useLayoutEffect 的方块则不会闪\",\"如果你的电脑性能比较好，可以尝试多次刷新，也有一定几率看到 useEffect 的闪动。\",\"我们应该这样描述二者的区别：\",\"useEffect: 执行时机是在 React 的渲染和提交阶段之后。这意味着当任何相关 DOM 更改被应用并且组件已被重新渲染后，useEffect 里的代码会执行。但它是异步的，所以可能会在浏览器的下一个绘制周期之后才执行。\",\"useLayoutEffect: 执行时机是在 React 的提交阶段之后，但在浏览器实际绘制屏幕之前。这使得你可以同步地读取或更改 DOM，然后让浏览器在下一次绘制时立即体现这些更改，从而避免不必要的闪烁或布局跳动。\"]},\"1256\":{\"h\":\"useLayoutEffect 的作用\",\"t\":[\"我们已经清楚了 useLayoutEffect 的特性了，那么可以猜想，useLayoutEffect 是作用于这样的场景：需要在浏览器绘制前获取 DOM 元素的大小或位置，或者在浏览器绘制前修改 DOM。\",\"这里有一个非常典型的场景——tooltip 组件。我们就来写一个 tooltip 组件，应用 useLayoutEffect 来自适应设置 tooltip 位置。\",\"我们的需求是：鼠标移入一个按钮，能够判断 tooltip 展示区域，如果按钮上方空间足够，则显示在上方，如果按钮上方空间不够，则自适应显示在按钮下方。\",\"为了保证没有页面抖动，我们要使用 useLayoutEffect 来更新显示的位置，示例代码如下：\",\"import React, { useLayoutEffect, useRef, useState } from 'react' import { createPortal } from 'react-dom' export default function HoverTooltip() { const containerRef = useRef(null) return ( <div ref={containerRef} className='p-8 bg-gray-100 w-full rounded-xl mt-5 shadow-lg m-4 space-y-4 overflow-hidden' > <ButtonWithTooltip containerRef={containerRef} tooltipContent=\\\"This tooltip does not fit above the button. This is why it's displayed below instead!\\\" > Hover over me (tooltip above) </ButtonWithTooltip> <ButtonWithTooltip containerRef={containerRef} tooltipContent='This tooltip fits above the button' > Hover over me (tooltip below) </ButtonWithTooltip> <ButtonWithTooltip containerRef={containerRef} tooltipContent='This tooltip fits above the button' > Hover over me (tooltip below) </ButtonWithTooltip> </div> ) } const ButtonWithTooltip = ({ tooltipContent, containerRef, children }) => { const [targetRect, setTargetRect] = useState(null) const [containerRect, setContainerRect] = useState(null) const buttonRef = useRef(null) return ( <div className='relative'> <button ref={buttonRef} className='py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-600 active:bg-blue-700 focus:outline-none transition' onMouseEnter={() => { buttonRef.current && setTargetRect(buttonRef.current.getBoundingClientRect()) containerRef.current && setContainerRect( containerRef.current.getBoundingClientRect() ) }} onMouseLeave={() => setTargetRect(null)} > {children} </button> {targetRect && containerRect && ( <Tooltip targetRect={targetRect} containerRect={containerRect}> {tooltipContent} </Tooltip> )} </div> ) } const Tooltip = ({ children, targetRect, containerRect }) => { const ref = useRef(null) const [tooltipHeight, setTooltipHeight] = useState(0) useLayoutEffect(() => { if (ref.current) { const { height } = ref.current.getBoundingClientRect() setTooltipHeight(height) // 设置高度 } }, [children]) let tooltipX = targetRect.left let tooltipY = targetRect.top - containerRect.top - tooltipHeight < 0 ? targetRect.bottom : targetRect.top - tooltipHeight // 计算位置 return createPortal( <div ref={ref} className='absolute bg-gray-700 text-white py-1 px-2 rounded shadow-md' style={{ left: `${tooltipX}px`, top: `${tooltipY}px`, }} > {children} </div>, document.body ) }\"]},\"1257\":{\"h\":\"总结\"},\"1258\":{\"h\":\"何时使用 useEffect\",\"t\":[\"副作用与 DOM 无关：例如，数据获取、设置订阅、手动更改浏览器的 URL 等。\",\"不需要立即同步读取或更改 DOM：如果你不关心可能的微小布局跳动或闪烁，那么 useEffect 就足够了。\",\"性能考虑：useEffect 通常对性能影响较小，因为它不会阻塞浏览器渲染。\"]},\"1259\":{\"h\":\"何时使用 useLayoutEffect\",\"t\":[\"需要同步读取或更改 DOM：例如，你需要读取元素的大小或位置并在渲染前进行调整。\",\"防止闪烁：在某些情况下，异步的 useEffect 可能会导致可见的布局跳动或闪烁。例如，动画的启动或某些可见的快速 DOM 更改。\",\"模拟生命周期方法：如果你正在将旧的类组件迁移到功能组件，并需要模拟 componentDidMount、componentDidUpdate 和 componentWillUnmount 的同步行为。\"]},\"1260\":{\"h\":\"使用注意事项\",\"t\":[\"避免过度使用 useLayoutEffect，因为它是同步的，可能会影响应用的性能。只有当你确实需要同步的 DOM 操作时才使用它。\",\"如果代码在服务器端渲染（SSR）中出现问题，考虑回退到 useEffect。useLayoutEffect 在服务器端渲染时不会运行，可能会引发警告或错误。\"]},\"1261\":{\"c\":[\"React\"]},\"1262\":{\"c\":[\"Hook\"]},\"1263\":{\"h\":\"useMemo\"},\"1264\":{\"h\":\"定义\",\"t\":[\"它的核心目的是通过缓存计算结果，避免在组件渲染时进行不必要的重复计算，从而优化性能。这意味着只有当其依赖项发生变化时，useMemo 才会重新计算这个值，否则它将重用之前的结果。\",\"const cachedValue = useMemo(calculateValue, dependencies)\",\"calculateValue：这是一个用于计算我们想要缓存的值的函数。为了确保结果的稳定性和预测性，这个函数应该是一个纯函数。这意味着，它在相同的输入下总是返回相同的输出，并且没有任何副作用。\",\"dependencies：这是一个数组，包含 useMemo 所依赖的变量或值。当数组中的任何值发生变化时，calculateValue 函数将被重新执行。\"]},\"1265\":{\"h\":\"基础用法\",\"t\":[\"useMemo 接受两个参数：一个函数和一个依赖项数组。\",\"const memoizedValue = useMemo(() => computeExpensiveValue(a, b), [a, b])\",\"在上面的例子中，computeExpensiveValue 是一个可能需要很长时间来计算的函数。我们只有当 a 或 b 改变时，才重新调用这个函数。否则，我们会使用之前缓存的值。\",\"用一个例子来看 useMemo 的执行时机：\",\"import React, { useMemo, useState } from 'react' function filterUsers(users, searchTerm) { return users.filter((user) => user.name.includes(searchTerm)) } function useMemoDemo() { const [searchTerm, setSearchTerm] = useState('') const [isDark, setIsDark] = useState(false) const allUsers = useMemo(() => { let list = [] for (let i = 1; i <= 500; i++) { list.push({ id: i, name: `User${i}` }) } return list }, []) const useMemoCurrentUsers = useMemo(() => { console.log('with useMemo') return filterUsers(allUsers, searchTerm) }, [allUsers, searchTerm]) return ( <div> {/* 每一次更改查询框内容，都会触发useMemo */} <input value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} placeholder='Search by name...' /> {/* 每一次更改背景色，都不会触发useMemo */} <button onClick={() => setIsDark((pre) => !pre)}> {isDark ? 'Dark mode' : 'Light mode'} </button> <div> <div> <h2>With useMemo</h2> <div style={{ background: isDark ? '#000' : '' }}> {useMemoCurrentUsers.map((user) => ( <div key={user.id}>{user.name}</div> ))} </div> </div> </div> </div> ) } export default useMemoDemo\"]},\"1266\":{\"h\":\"高级用法\"},\"1267\":{\"h\":\"缓存组件\",\"t\":[\"useMemo 的作用不知局限于缓存数据，它还可以缓存组件。\",\"如果你在渲染某个组件时有昂贵的计算，并且你想在某些依赖未改变时避免这些计算，那么也可以使用 useMemo 来缓存这个组件。用法如下：\",\"function ParentComponent(props) { const [someData, setSomeData] = useState(initialData) const MemoizedExpensiveComponent = useMemo(() => { return <ExpensiveComponent data={someData} /> }, [someData]) return ( <div> {MemoizedExpensiveComponent} {/* 其他组件和逻辑 */} </div> ) }\",\"如果上一节的示例，我们想把用户列表的组件缓存起来，可以这么做：\",\"function UserList({ allUsers, searchTerm }) { const filteredUsers = filterUsers(allUsers, searchTerm) return ( <> {useMemoCurrentUsers.map((user) => ( <div key={user.id}>{user.name}</div> ))} </> ) } function Comparison1() { // …… const MemoizedUserList = useMemo(() => { return <UserList allUsers={allUsers} searchTerm={searchTerm} /> }, [allUsers, searchTerm]) return ( <div> {/* …… */} <h2>With useMemo</h2> <div style={{ background: isDark ? '#000' : '' }}> {MemoizedUserList} </div> {/* …… */} </div> ) } export default Comparison1\",\"现在，整个 UserList 组件被缓存，只有当 allUsers、searchTerm 或 isDark 发生变化时，才会重新计算。\",\"除了 useMemo 能够缓存组件，React 还提供了 memo 这个高阶组件来完成相似的工作。\",\"const UserList = memo(function UserList({ allUsers, searchTerm }) { const filteredUsers = filterUsers(allUsers, searchTerm) return ( <> {filteredUsers.map((user) => ( <div key={user.id}>{user.name}</div> ))} </> ) }) function Comparison1() { // …… return ( <div> {/* …… */} <h2>With useMemo</h2> <div style={{ background: isDark ? '#000' : '' }}> <UserList allUsers={allUsers} searchTerm={searchTerm} /> </div> {/* …… */} </div> ) } export default Comparison1\",\"使用 memo 高阶组件包裹后，只有当 props 发生变化时重新渲染。这种方式和上面使用 useMemo 缓存组件的作用是一样的，但代码可读性更强，也是 React 官方更推荐的方式。\",\"考虑到 useMemo 和 memo 的特点，我们可以这么说：\",\"当你想避免因为数据变化而产生的不必要的计算时，使用 useMemo；\",\"当你想避免因为 props 未变而产生的不必要的组件重渲染时，使用 memo。\"]},\"1268\":{\"h\":\"缓存函数\",\"t\":[\"除了缓存数据和组件，useMemo 还能够缓存函数。你只需要在 useMemo 里 return 一个函数即可，如下：\",\"const handleUserClick = useMemo(() => { return (userName) => { alert(`Clicked on: ${userName}`) } }, [])\"]},\"1269\":{\"h\":\"反例：过渡优化\",\"t\":[\"useMemo 是用于优化的工具，但有时，如果过度使用它们，可能会导致性能更差或代码更加复杂。下面看一个过度优化的例子：\",\"想象这个场景，我们有一个简单的组件，只显示一个数字和一个按钮，点击按钮会增加这个数字。\",\"import React, { useState, useMemo } from 'react' function Counter() { const [count, setCount] = useState(0) const handleIncrease = useMemo(() => { return () => { setCount(count + 1) } }, [count]) return ( <div> <div>{count}</div> <button onClick={handleIncrease}>Increase</button> </div> ) } export default Counter\",\"这里的问题是：\",\"不必要的复杂性：原始的组件是简单的，并且性能表现得很好。引入 useMemo 只是增加了代码的复杂性，而并没有带来任何实际的性能提升。\",\"增加了性能开销：useMemo 本身也有开销。在这种情况下，任何由 useMemo 带来的小优势都被其自身的开销抵消了，因为每次 count 变化，handleIncrease 都会重新计算。\",\"可读性下降：对于后来查看代码的其他开发者来说，看到 useMemo 可能会引起困惑。他们可能会花费时间思考为什么这里需要优化，尽管实际上并不需要。\",\"综上所述，不是所有的组件都需要优化，特别是当它们已经足够简单和高效的时候。过度使用优化工具可能会导致更差的性能和更低的代码可读性。\"]},\"1270\":{\"c\":[\"React\"]},\"1271\":{\"c\":[\"Hook\"]},\"1272\":{\"h\":\"useReducer\"},\"1273\":{\"h\":\"基础用法\",\"t\":[\"与 useState 相似，useReducer 也是 React 的 Hook，而且也只能放在组件最顶层使用。与前者不同的地方在于，它是通过 action 来更新状态的，使状态更新逻辑更具可读性。\",\"useReducer 接收三个参数：\",\"reducer 函数：指定如何更新状态的还原函数，它必须是纯函数，以 state 和 dispatch 为参数，并返回下一个状态。\",\"初始状态：初始状态的计算值。\",\"（可选的）初始化参数：用于返回初始状态。如果未指定，初始状态将设置为 initialArg；如果有指定，初始状态将被设置为调用 init(initialArg)的结果。\",\"useReducer 返回两个参数：\",\"当前的状态：当前状态。在第一次渲染时，它会被设置为 init(initialArg)或 initialArg（如果没有 init 的情况下）。\",\"dispatch：调度函数，用于调用 reducer 函数，以更新状态并触发重新渲染。\",\"const [state, dispatch] = useReducer(reducer, initialArg, init?)\",\"通常情况下，我们只会用到 useReducer 的前两个参数，如这个计数器组件：\",\"const initialState = { count: 0 } function reducer(state, action) { switch (action.type) { case 'increment': return { count: state.count + 1 } case 'decrement': return { count: state.count - 1 } default: throw new Error() } } function Counter() { const [state, dispatch] = useReducer(reducer, initialState) return ( <> Count: {state.count} <button onClick={() => dispatch({ type: 'decrement' })}>-</button> <button onClick={() => dispatch({ type: 'increment' })}>+</button> </> ) }\",\"使用 dispatch 的注意事项\",\"dispatch 调用后，状态更新是异步的，因此立刻读取状态可能仍是旧的。\",\"function addCount() { dispatch({ type: 'increment' }) console.log(state.count) // 打印出来的不是新值 } ;<button onClick={addCount}>+</button>\",\"React 对 dispatch 有一个优化机制：如果 dispatch 触发更新前后的值相等（使用 Object.is 判断），实际上 React 不会进行重新渲染，这是出于性能考虑。\",\"使用 reducer 函数的注意事项\",\"你在 reducer 里面更新对象和数组的状态，需要创建一个新的对象或数组，而不是在原对象和数组上修改，这一点和 useState 是一样的。\"]},\"1274\":{\"h\":\"使用 init 函数\",\"t\":[\"我们先假设一个场景，计数器的值保存在 localStorage 里面，进入页面的时候，我们希望从 localStorage 中读取值来作为 useReducer 初值，如果没有 init，我们可以这样做：\",\"function getInitialCount() { const savedCount = localStorage.getItem('count') return savedCount ? Number(savedCount) : 0 } function counterReducer(state, action) { switch (action.type) { case 'INCREMENT': return { count: state.count + 1 } case 'DECREMENT': return { count: state.count - 1 } default: return state } } function Counter() { const [state, dispatch] = useReducer(counterReducer, getInitialCount()) // 使用useEffect来监听状态的变化，并将其保存到localStorage useEffect(() => { localStorage.setItem('count', state.count) }, [state.count]) return ( <> Count: {state.count} <button onClick={() => dispatch({ type: 'INCREMENT' })}>+1</button> <button onClick={() => dispatch({ type: 'DECREMENT' })}>-1</button> </> ) }\",\"在这个例子中，我们直接调用 getInitialCount 函数作为 useReducer 的第二个参数，从而得到初始状态。当 React 初始化这个组件时，它会执行这个函数并使用其返回值作为初始状态。\",\"如果在第三个参数里进行初始化，代码是这样写：\",\"function init(initialValue) { // 尝试从localStorage中读取值 const savedCount = localStorage.getItem('count') // 如果有值并且可以被解析为数字，则返回它，否则返回initialValue return { count: savedCount ? Number(savedCount) : initialValue } } function counterReducer(state, action) { switch (action.type) { case 'INCREMENT': return { count: state.count + 1 } case 'DECREMENT': return { count: state.count - 1 } default: return state } } function Counter() { const [state, dispatch] = useReducer(counterReducer, 0, init) // 使用useEffect来监听状态的变化，并将其保存到localStorage useEffect(() => { localStorage.setItem('count', state.count) }, [state.count]) return ( <> Count: {state.count} <button onClick={() => dispatch({ type: 'INCREMENT' })}>+1</button> <button onClick={() => dispatch({ type: 'DECREMENT' })}>-1</button> </> ) }\",\"这两种方式看似差不多，但它们区别很大：\",\"1、执行时机：\",\"直接调用函数作为第二个参数：这个函数会在每次组件渲染时执行。\",\"使用 init 函数：init 函数只在组件初次渲染时执行一次。\",\"2、访问到的数据：\",\"直接调用函数作为第二个参数：这个函数只能访问到定义它时的作用域内的数据。\",\"使用 init 函数：由于 init 函数接受 initialArg 作为参数，这使得 init 函数具有更大的灵活性，能够基于传入的参数进行计算。\",\"3、代码组织：\",\"直接调用函数作为第二个参数：这通常更简洁，适合那些简单的初始化逻辑。\",\"使用 init 函数：它提供了更清晰的代码组织结构，特别是当初始化逻辑相对复杂或需要根据传入的参数变化时。\",\"4、性能：\",\"直接调用函数作为第二个参数：如果这个函数执行了一些计算密集或副作用的操作，那么在每次组件渲染时都会执行，可能会导致性能问题。\",\"使用 init 函数：由于它只在组件的初始化阶段执行一次，所以对于那些计算密集的初始化操作，使用 init 函数可能会更为高效。\",\"总结一下，两者都可以用于初始化状态，如果你的初始化逻辑简单并且没有性能顾虑，可以直接使用一个函数作为 useReducer 的第二个参数，但如果你需要基于传入的参数来决定初始化逻辑或者想确保性能最优的做法，那么应该使用 init 函数。\"]},\"1275\":{\"h\":\"useReducer 与 Redux 的差异\",\"t\":[\"虽然 useReducer 和 Redux 都采用了 action 和 reducer 的模式来处理状态，但它们在实现和使用上有几个主要的区别：\",\"范围：useReducer 通常在组件或小型应用中使用，而 Redux 被设计为大型应用的全局状态管理工具。\",\"中间件和扩展：Redux 支持中间件，这允许开发者插入自定义逻辑，例如日志、异步操作等。而 useReducer 本身不直接支持，但我们可以模拟中间件的效果。\",\"复杂性：对于简单的状态管理，useReducer 通常更简单和直接。但当涉及到复杂的状态逻辑和中间件时，Redux 可能更具优势。\"]},\"1276\":{\"c\":[\"React\"]},\"1277\":{\"c\":[\"Hook\"]},\"1278\":{\"h\":\"useRef\"},\"1279\":{\"h\":\"定义\",\"t\":[\"// 定义 const inputRef = useRef(null) // 使用 console.log(inputRef.current)\",\"这是 useRef 的使用示例，useRef 返回一个可变的 ref 对象，通过.current 可以获取保存在 useRef 的值。看起来像是一个复杂版的 useState，那么 useState 和 useRef 有什么区别？为什么需要 useRef 呢？\",\"主要原因有两个：\",\"持久性：useRef 的返回对象在组件的整个生命周期中都是持久的，而不是每次渲染都重新创建。\",\"不会触发渲染：当 useState 中的状态改变时，组件会重新渲染。而当 useRef 的.current 属性改变时，组件不会重新渲染。\",\"总结来说，useRef 既能保存状态，还不会在更新时触发渲染。本文我们就来盘点一下 useRef 的使用场景。\"]},\"1280\":{\"h\":\"常见用途\"},\"1281\":{\"h\":\"访问 DOM 元素\",\"t\":[\"当我们需要直接与 DOM 元素进行交互（例如，手动获取焦点或测量元素尺寸）时，可以使用 useRef。\",\"function TextInput() { const inputRef = useRef(null) function focusInput() { inputRef.current.focus() } return ( <div> <input ref={inputRef} type='text' /> <button onClick={focusInput}>Focus the input</button> </div> ) }\",\"我们还可以在组件嵌套的场景使用 useRef\",\"import { forwardRef, useRef } from 'react' const MyInput = forwardRef((props, ref) => { return <input {...props} ref={ref} /> }) export default function Form() { const inputRef = useRef(null) function handleClick() { inputRef.current.focus() } return ( <> <MyInput ref={inputRef} /> <button onClick={handleClick}>Focus the input</button> </> ) }\"]},\"1282\":{\"h\":\"保存状态但不触发渲染\",\"t\":[\"有时，你可能需要在组件中保存某些值，而不希望每次该值更改时都重新渲染组件。在这种情况下，useRef 很有用。\",\"function Timer() { const count = useRef(0) useEffect(() => { const intervalId = setInterval(() => { count.current += 1 console.log(`Elapsed time: ${count.current} seconds`) }, 1000) return () => clearInterval(intervalId) }, []) return <div>Check the console to see the elapsed time!</div> }\"]},\"1283\":{\"h\":\"保存上一次的 props 或 state\",\"t\":[\"在某些情况下，你可能需要知道 props 或 state 的上一次值。这时可以使用 useRef 结合 useEffect 来达到目的。\",\"function DisplayValue({ value }) { const [prevValue, setPrevValue] = useState(null) // 初始时，没有前一个值 const previousValue = useRef(value) useEffect(() => { setPrevValue(currentRef.current) previousValue.current = value }, [value]) return ( <div> Current Value: {value} <br /> Previous Value: {prevValue} </div> ) }\",\"当组件首次渲染时，previousValue.current 会被初始化为 value 的当前值。随后，每当 value 发生变化时，useEffect 都会运行并更新 previousValue.current 为新的 value。\",\"但这里有一个微妙之处：由于 useEffect 是在组件渲染之后运行的，因此在组件的渲染过程中，previousValue.current 的值是从前一次渲染中保持不变的。只有当 useEffect 被调用并执行完毕后，previousValue.current 才会更新为新的 value。\"]},\"1284\":{\"h\":\"高级技巧\"},\"1285\":{\"h\":\"避免在渲染期间读/写 ref\",\"t\":[\"function DisplayValue({ value }) { const previousValue = useRef(value) // 错误：在渲染期间修改 ref if (previousValue.current !== value) { previousValue.current = value } return ( <div> Current Value: {value} <br /> {/* 错误：在渲染期间读 ref */} Previous Value: {previousValue.current} </div> ) }\",\"这里，我们尝试在组件的渲染期间更新 previousValue.current。这违反了 React 的工作方式，并可能导致不可预测的行为。例如：\",\"不稳定的 UI：由于 React 在多次渲染中可能使用异步和优化技术，直接在渲染期间修改 refs 可能导致 UI 不一致。\",\"依赖更新：如果其他效应或钩子依赖于 ref 的值，它们可能不会在期望的时刻运行，因为直接修改 ref 不会触发重新渲染或其他效应。\",\"这是为什么我们通常在 useEffect 内部更新 refs。在 useEffect 内部，我们可以确保组件已经完成渲染，并且不会在渲染期间发生任何不期望的副作用。\"]},\"1286\":{\"h\":\"避免重复创建 ref\",\"t\":[\"如果我们在创建 ref 时，想要通过计算或有副作用的方法获取初值，可能会用下面这种写法。这种写法会导致 getInitialCount()在每次组建渲染的时候都被调用。虽然 useRef 的设计让它只从首次渲染的时候获取初值，但这种做法仍然会造成不必要的性能损耗。\",\"function ClickCounter() { // bad。这里的问题是，每次组件渲染时，getInitialCount都会被调用，尽管它的返回值只在第一次渲染时被使用。 const countRef = useRef(getInitialCount()) function handleClick() { countRef.current += 1 console.log(`Button clicked ${countRef.current} times.`) } return <button onClick={handleClick}>Click me!</button> }\",\"解决这种场景下的 ref 创建也很简单，那就是用 null 作为初始值，渲染的过程判断仅在 null 时去计算或调用有副作用的方法。\",\"function ClickCounter() { // good const countRef = useRef(null) // good if (countRef.current === null) { countRef.current = getInitialCount() } function handleClick() { countRef.current += 1 console.log(`Button clicked ${countRef.current} times.`) } return <button onClick={handleClick}>Click me!</button> }\"]},\"1287\":{\"h\":\"与 useReducer 使用\",\"t\":[\"当我们需要复杂的状态逻辑且希望避免额外的渲染时，可以考虑将 useRef 与 useReducer 结合使用。\",\"例如：跟踪 useReducer 的 action 数量。\",\"const initialState = { count: 0 } function reducer(state, action) { switch (action.type) { case 'increment': return { count: state.count + 1 } default: throw new Error() } } function Counter() { const [state, dispatch] = useReducer(reducer, initialState) const actionsCountRef = useRef(0) function handleIncrement() { dispatch({ type: 'increment' }) actionsCountRef.current += 1 console.log(`Actions count: ${actionsCountRef.current}`) } return ( <> Count: {state.count} <button onClick={handleIncrement}>Increment</button> </> ) }\"]},\"1288\":{\"h\":\"与第三方库集成\",\"t\":[\"在使用非 React 库（如 D3、jQuery）时，我们可能需要使用 useRef 来获得对真实 DOM 节点的引用。\",\"import { useRef, useEffect } from 'react' import * as d3 from 'd3' function BarChart() { const chartRef = useRef(null) useEffect(() => { const svg = d3.select(chartRef.current) // ... 使用 D3 进行图表绘制 }, []) return <svg ref={chartRef}></svg> }\"]},\"1289\":{\"h\":\"动画处理\",\"t\":[\"import { useEffect, useRef } from 'react' function MovingBox() { const boxRef = useRef(null) const animationFrameRef = useRef(null) useEffect(() => { const boxElem = boxRef.current let position = 0 const animate = () => { position += 1 if (position > window.innerWidth) { position = -100 // 如果方块移动到屏幕的右侧，则从左侧重新开始 } boxElem.style.transform = `translateX(${position}px)` animationFrameRef.current = requestAnimationFrame(animate) } animationFrameRef.current = requestAnimationFrame(animate) return () => { cancelAnimationFrame(animationFrameRef.current) // 在组件卸载时取消动画 } }, []) return ( <div ref={boxRef} style={{ width: '100px', height: '100px', background: 'blue' }} ></div> ) } export default MovingBox\"]},\"1290\":{\"h\":\"事件监听\",\"t\":[\"使用 useRef 监听不由 React 管理的 DOM 事件。\",\"例如：窗口大小变化\",\"function WindowSize() { const widthRef = useRef(window.innerWidth) useEffect(() => { const handleResize = () => { widthRef.current = window.innerWidth console.log(`Width: ${widthRef.current}`) } window.addEventListener('resize', handleResize) return () => window.removeEventListener('resize', handleResize) }, []) return <div>Check the console for window width updates!</div> }\"]},\"1291\":{\"c\":[\"React\"]},\"1292\":{\"c\":[\"Hook\"]},\"1293\":{\"h\":\"useState\"},\"1294\":{\"h\":\"基本用法\",\"t\":[\"useState 主要用于给组件添加状态变量。注意，我们只能在组件的顶层或自定义的 Hooks 中调用 useState。\"]},\"1295\":{\"h\":\"初始化\"},\"1296\":{\"h\":\"基础定义\",\"t\":[\"const [age, setAge] = useState(42)\"]},\"1297\":{\"h\":\"惰性初始化函数\",\"t\":[\"对于需要计算得到的初始状态，可以使用函数传递给 useState。这样，函数只在初次渲染时执行，而非每次渲染。\",\"const initialState = () => Number(window.localStorage.getItem('count')) const [count, setCount] = React.useState(initialState)\"]},\"1298\":{\"h\":\"更新状态\"},\"1299\":{\"h\":\"直接更新\",\"t\":[\"setAge(newState)\",\"// 示例2: 使用直接更新 import { useState } from 'react' export default function Counter() { const [age, setAge] = useState(42) function increment() { setAge(age + 1) // 直接更新 } return ( <> <h1>Your age: {age}</h1> <button onClick={() => { increment() increment() increment() }} > +3 </button> </> ) } // 结果：点击 +3 时，可能只更新为 43。\"]},\"1300\":{\"h\":\"函数式更新\",\"t\":[\"setState((prevState) => prevState + 1)\",\"// 示例1: 使用函数式更新 import { useState } from 'react' export default function Counter() { const [age, setAge] = useState(42) function increment() { setAge((a) => a + 1) // 函数式更新 } return ( <> <h1>Your age: {age}</h1> <button onClick={() => { increment() increment() increment() }} > +3 </button> </> ) } // 结果：点击 +3 时，age 更新为 45。\"]},\"1301\":{\"h\":\"对象更新\",\"t\":[\"setForm({ ...form, name: e.target.value, // 更新这个属性 }) // 错误示例： // form.name = e.target.value\"]},\"1302\":{\"h\":\"数组更新\",\"t\":[\"setTodos([ ...todos, { id: nextId++, title: title, done: false, }, ]) // 错误示例 // todos.push({ // id: nextId++, // title: title, // done: false // }); // setTodos(todos);\"]},\"1303\":{\"h\":\"函数更新\",\"t\":[\"把函数存储到 state 里是很少见的做法。\",\"错误的示例：\",\"const [fn, setFn] = useState(someFunction) function handleClick() { setFn(someOtherFunction) }\",\"根据上文，我们知道这样的用法是把函数的返回值存储或更新到状态中，并不是把函数存储到状态中。\",\"如果你想在状态中存储一个函数，你需要使用一个箭头函数来“包裹”它。这是正确的做法：\",\"const [fn, setFn] = useState(() => someFunction) function handleClick() { setFn(() => someOtherFunction) }\",\"那么我们什么时候会需要这样使用？这里介绍一些可能的场景：\",\"可配置的行为: 你可能有一个组件，它的行为可以由父组件进行配置。在这种情况下，你可以将函数作为状态存储，以便在组件的生命周期中更改或更新它。\",\"动态创建的函数: 在某些情况下，你可能需要基于组件的某些属性或状态动态创建函数。将这些函数存储为状态可以确保你只在必要时重新创建它们。\",\"回调和外部交互: 如果你的组件与外部系统交互，并且需要提供回调函数，你可能希望在状态中存储这些回调函数，以便在适当的时候更改或更新它们。\",\"延迟执行的函数: 在某些情况下，你可能想要在将来的某个时间点执行函数（例如，使用 setTimeout）。将函数存储为状态可以确保即使组件的其他部分发生变化，你也可以访问到最初的函数引用。\",\"与第三方库的集成: 有些第三方库可能要求你提供并在后续更改函数。在这种情况下，将函数作为状态存储可能会更加方便。\"]},\"1304\":{\"c\":[\"React\"]},\"1305\":{\"c\":[\"Hook\"]},\"1306\":{\"h\":\"useTransition\"},\"1307\":{\"h\":\"定义\",\"t\":[\"const [isPending, startTransition] = useTransition()\",\"isPending：是一个布尔值，当过渡状态仍在进行中时，其值为 true；否则为 false。\",\"startTransition：是一个函数，当你希望启动一个新的过渡状态时调用它。\"]},\"1308\":{\"h\":\"工作原理\",\"t\":[\"并发模式下的状态更新分类: 在 React 的并发模式中，不是所有的状态更新都被视为等同的。React 将更新分为不同的优先级类别，其中某些更新（如输入处理）被认为是更加紧急的，而其他更新（如从服务器获取数据）则可以中断或者延后更新。\",\"使用 startTransition 进行状态更新: 当你使用 startTransition 函数进行状态更新时，你实际上告诉 React：这个更新不是非常紧急的，如果有更重要的更新要处理，你可以中断或延后这个次要更新。\",\"isPending 的用途: isPending 为我们提供了一个标识，告诉我们是否有一个 startTransition 正在执行。我们可以根据 isPending 来设置过渡状态的样式。\"]},\"1309\":{\"h\":\"使用范围和注意事项\",\"t\":[\"只有当你能访问某个状态的 set 函数时，你才能将更新包装进 useTransition 中。\",\"传递给 startTransition 的函数必须是同步的，而不能是异步的。\",\"如果你想根据某个 prop 或自定义 Hook 的值来启动一个过渡，那么你应该尝试使用 useDeferredValue。\",\"不能用于控制文本输入。因为输入框是需要实时更新的，如果用 useTransition 降低了渲染优先级，可能造成输入“卡顿”。\",\"不要在 startTransition 内部使用 setTimeout，如果一定要用 setTimeout，你可以在 startTransition 外层使用\",\" startTransition(() => { // ❌ Setting state *after* startTransition call setTimeout(() => { setPage('/about'); }, 1000); ``` }); setTimeout(() => { startTransition(() => { // ✅ Setting state _during_ startTransition call setPage('/about'); }); }, 1000);\"]},\"1310\":{\"h\":\"示例\"},\"1311\":{\"h\":\"有无 useTransition 的对比\",\"t\":[\"想象一个场景，页面上有多个 tab，其中一个请求耗时较长，我们快速点击 tab 切换内容，但总是会在请求耗时的 tab 上卡顿一下，代码如下：\",\"import React, { useState, memo } from 'react' const TabContainer = () => { const [tab, setTab] = useState('about') // 核心：切换选项卡 function selectTab(nextTab) { setTab(nextTab) } return ( <div> <div> <TabButton isActive={tab === 'about'} onClick={() => selectTab('about')} > About </TabButton> <TabButton isActive={tab === 'posts'} onClick={() => selectTab('posts')} > Posts (slow) </TabButton> <TabButton isActive={tab === 'contact'} onClick={() => selectTab('contact')} > Contact </TabButton> </div> <hr /> {tab === 'about' && <AboutTab />} {tab === 'posts' && <PostsTab />} {tab === 'contact' && <ContactTab />} </div> ) } const PostsTab = memo(() => { let items = [] for (let i = 0; i < 500; i++) { items.push(<SlowPost key={i} index={i} />) } return <ul>{items}</ul> }) const SlowPost = ({ index }) => { let startTime = performance.now() while (performance.now() - startTime < 10) {} return <li>Post on weijunext.com #{index + 1}</li> } // 省略非关键代码 // …… export default TabContainer\",\"如果我们想用 useTransition 保持 UI 的响应，只需要用 startTransition 包裹切换选项卡的 set\",\"const [isPending, startTransition] = React.useTransition() function selectTab(nextTab) { startTransition(() => { setTab(nextTab) }) }\",\"这样我们快速切换 tab，无论点到哪一个 tab 都不会卡顿。\"]},\"1312\":{\"h\":\"useTransition 和 Suspense 实现路由流畅切换\",\"t\":[\"当与路由结合使用时，React.Suspense 允许我们延迟渲染新的路由内容，直到所需的数据被完全加载。而 useTransition 则允许我们可控地开始这种可能导致 UI 变化的过渡——导航到新页面。\",\"import React, { useState } from 'react' import { BrowserRouter, Switch, Route, Link } from 'react-router-dom' const [location, setLocation] = useState(window.location) const [isPending, startTransition] = React.unstable_useTransition() // 使用 startTransition 来更新 location 状态，能够延迟显示新页面的内容，直到数据加载完毕 function handleNavigation(newLocation) { startTransition(() => { setLocation(newLocation) }) } // 主应用组件 function App() { return ( <div> <BrowserRouter> {/* 导航 */} <nav> <CustomLink to='/about'>About</CustomLink> <CustomLink to='/contact'>Contact</CustomLink> </nav> {/* 使用 React.Suspense 来处理组件的懒加载 */} <React.Suspense fallback={<LoadingIndicator />}> <Switch location={location}> <Route path='/about' component={AboutPage} /> <Route path='/contact' component={ContactPage} /> {/* ...其他路由... */} </Switch> </React.Suspense> {/* 使用 isPending 显示或隐藏全局加载指示器 */} {isPending && <LoadingIndicator />} </BrowserRouter> </div> ) } export default App\",\"通过这种方式，我们可以优雅地处理路由切换，并确保在数据加载时为用户提供一个流畅的体验。\"]},\"1313\":{\"c\":[\"React\"]},\"1314\":{\"c\":[\"Hook\"]},\"1315\":{\"h\":\"插槽\",\"t\":[\"import React from 'react' import ReactDOM from 'react-dom/client' import DemoOne from './views/DemoOne' import DemoTwo from './views/DemoTwo' const root = ReactDOM.createRoot(document.getElementById('root')) root.render( <> <DemoOne title='我是标题' x={10} className='box' style={{ fontSize: '20px' }} > <span>哈哈哈哈哈哈哈哈哈</span> <span>呵呵呵呵呵呵呵</span> </DemoOne> <DemoOne title='我是标题' x={10} className='box' style={{ fontSize: '20px' }} > <span>12312312312312</span> </DemoOne> <DemoOne title='我是标题'></DemoOne> <DemoTwo> <span slot='footer'>我是页脚</span> <span slot='header'>我是页眉</span> </DemoTwo> </> )\",\"import PropTypes from 'prop-types' import React from 'react' const DemoOne = function DemoOne(props) { let { className, style, title, x, children } = props console.log(x) children = React.Children.toArray(children) console.log(children) return ( <div className={`demo-box ${className}`} style={style}> 我是DemoOne <h2>{title}</h2> {children[0]} <br /> {children[1]} </div> ) } // 设置默认值 DemoOne.defaultProps = { x: 0, } //规则校验 DemoOne.propTypes = { title: PropTypes.string.isRequired, x: PropTypes.number, } export default DemoOne\",\"import React from 'react' const DemoTwo = function DemoOne(props) { let { children } = props children = React.Children.toArray(children) let headerSlot = [] let footerSlot = [] let defaultSlot = [] children.forEach((child) => { let { slot } = child.props if (slot === 'header') { headerSlot.push(child) } else if (slot === 'footer') { footerSlot.push(child) } else { defaultSlot.push(child) } }) return ( <div className='demo-box'> {headerSlot} <br /> {footerSlot} </div> ) } export default DemoTwo\"]},\"1316\":{\"c\":[\"React\"]},\"1317\":{\"c\":[\"插槽\"]},\"1318\":{\"h\":\"父子组件通信\"},\"1319\":{\"h\":\"类组件\"},\"1320\":{\"h\":\"父子组件通信\",\"t\":[\"// Vote.jsx import React from 'react' import VoteMain from './VoteMain' import VoteFooter from './VoteFooter' class Vote extends React.Component { state = { supNum: 10, oppNum: 0, } change = (type) => { let { supNum, oppNum } = this.state if (type === 'sup') { this.setState({ supNum: supNum + 1, }) return } this.setState({ oppNum: oppNum + 1, }) } render() { let { supNum, oppNum } = this.state return ( <div className='vote-box'> <div className='header'> <h2 className='title'>React</h2> <span className='num'>{supNum + oppNum}</span> </div> <VoteMain supNum={supNum} oppNum={oppNum}></VoteMain> <VoteFooter change={this.change}></VoteFooter> </div> ) } } export default Vote\",\"// VoteFooter.jsx import { Button } from 'antd' import React from 'react' import PropTypes from 'prop-types' class VoteFooter extends React.PureComponent { static defaultProps = {} static propTypes = { change: PropTypes.func.isRequired, } render() { console.log('footer Render') let { change } = this.props return ( <div className='footer'> <Button type='primary' onClick={change.bind(null, 'sup')}> 支持 </Button> <Button type='primary' danger onClick={change.bind(null, 'opp')} > 反对 </Button> </div> ) } } export default VoteFooter\",\"// VoteMain.jsx import React from 'react' import PropTypes from 'prop-types' class VoteMain extends React.Component { static defaultProps = { supNum: 0, oppNum: 0, } static propTypes = { supNum: PropTypes.number, oppNum: PropTypes.number, } render() { let { supNum, oppNum } = this.props let ratio = '--' let total = supNum + oppNum if (total > 0) ratio = ((supNum / total) * 100).toFixed(2) + '%' return ( <div className='main'> <p>支持人数:{supNum}人</p> <p>反对人数:{oppNum}人</p> <p>支持比率:{ratio}</p> </div> ) } } export default VoteMain\"]},\"1321\":{\"h\":\"上下文通信\",\"t\":[\"// ThemeContext.js import React from 'react' const ThemeContext = React.createContext() export default ThemeContext\",\"// Vote.jsx import React from 'react' import VoteMain from './VoteMain' import VoteFooter from './VoteFooter' import ThemeContext from '../ThemeContext' class Vote extends React.Component { state = { supNum: 10, oppNum: 0, } change = (type) => { let { supNum, oppNum } = this.state if (type === 'sup') { this.setState({ supNum: supNum + 1, }) return } this.setState({ oppNum: oppNum + 1, }) } render() { let { supNum, oppNum } = this.state return ( <ThemeContext.Provider value={{ supNum, oppNum, change: this.change, }} > <div className='vote-box'> <div className='header'> <h2 className='title'>React</h2> <span className='num'>{supNum + oppNum}</span> </div> <VoteMain></VoteMain> <VoteFooter></VoteFooter> </div> </ThemeContext.Provider> ) } } export default Vote\",\"// VoteFooter.jsx import { Button } from 'antd' import React from 'react' import ThemeContext from '../ThemeContext' class VoteFooter extends React.Component { render() { return ( <ThemeContext.Consumer> {(context) => { let { change } = context return ( <div className='footer'> <Button type='primary' onClick={change.bind(null, 'sup')} > 支持 </Button> <Button type='primary' danger onClick={change.bind(null, 'opp')} > 反对 </Button> </div> ) }} </ThemeContext.Consumer> ) } } export default VoteFooter\",\"// VoteMain.jsx import React from 'react' import ThemeContext from '../ThemeContext' class VoteMain extends React.Component { static contextType = ThemeContext render() { let { supNum, oppNum } = this.context let ratio = '--' let total = supNum + oppNum if (total > 0) ratio = ((supNum / total) * 100).toFixed(2) + '%' return ( <div className='main'> <p>支持人数:{supNum}人</p> <p>反对人数:{oppNum}人</p> <p>支持比率:{ratio}</p> </div> ) } } export default VoteMain\"]},\"1322\":{\"h\":\"函数组件\"},\"1323\":{\"h\":\"父子组件通信\",\"t\":[\"// Vote.jsx import React, { useState, useCallback } from 'react' import VoteMain from './VoteMain' import VoteFooter from './VoteFooter' const Vote = function Vote() { let [supNum, setSupNum] = useState(10) let [oppNum, setOppNum] = useState(0) const change = useCallback( (type) => { if (type === 'sup') { setSupNum(supNum + 1) return } setOppNum(oppNum + 1) }, [supNum, oppNum] ) return ( <div className='vote-box'> <div className='header'> <h2 className='title'>React</h2> <span className='num'>{supNum + oppNum}</span> </div> <VoteMain supNum={supNum} oppNum={oppNum}></VoteMain> <VoteFooter change={change}></VoteFooter> </div> ) } export default Vote\",\"// VoteFooter.jsx import { Button } from 'antd' import React, { memo } from 'react' import PropTypes from 'prop-types' const VoteFooter = function VoteFooter(props) { console.log('Footer Render') let { change } = props return ( <div className='footer'> <Button type='primary' onClick={change.bind(null, 'sup')}> 支持 </Button> <Button type='primary' danger onClick={change.bind(null, 'opp')}> 反对 </Button> </div> ) } VoteFooter.defaultProps = {} VoteFooter.propTypes = { change: PropTypes.func.isRequired, } export default memo(VoteFooter)\",\"// VoteMain.jsx import React, { useMemo } from 'react' import PropTypes from 'prop-types' const VoteMain = function VoteMain(props) { let { supNum, oppNum } = props let ratio = useMemo(() => { let ratio = '--' let total = supNum + oppNum if (total > 0) ratio = ((supNum / total) * 100).toFixed(2) + '%' return ratio }, [supNum, oppNum]) return ( <div className='main'> <p>支持人数:{supNum}人</p> <p>反对人数:{oppNum}人</p> <p>支持比率:{ratio}</p> </div> ) } VoteMain.defaultProps = { supNum: 0, oppNum: 0, } VoteMain.propTypes = { supNum: PropTypes.number, oppNum: PropTypes.number, } export default VoteMain\"]},\"1324\":{\"h\":\"上下文传值\",\"t\":[\"// ThemeContext.js import React from 'react' const ThemeContext = React.createContext() export default ThemeContext\",\"// Vote.jsx import React, { useState, useCallback } from 'react' import VoteMain from './VoteMain' import VoteFooter from './VoteFooter' import ThemeContext from '../ThemeContext' const Vote = function Vote() { let [supNum, setSupNum] = useState(10) let [oppNum, setOppNum] = useState(0) const change = (type) => { if (type === 'sup') { setSupNum(supNum + 1) return } setOppNum(oppNum + 1) } return ( <ThemeContext.Provider value={{ supNum, oppNum, change, }} > <div className='vote-box'> <div className='header'> <h2 className='title'>React</h2> <span className='num'>{supNum + oppNum}</span> </div> <VoteMain supNum={supNum} oppNum={oppNum}></VoteMain> <VoteFooter change={change}></VoteFooter> </div> </ThemeContext.Provider> ) } export default Vote\",\"// VoteFooter.jsx import { Button } from 'antd' import React, { memo, useContext } from 'react' import ThemeContext from '../ThemeContext' const VoteFooter = function VoteFooter(props) { console.log('Footer Render') let { change } = useContext(ThemeContext) return ( <div className='footer'> <Button type='primary' onClick={change.bind(null, 'sup')}> 支持 </Button> <Button type='primary' danger onClick={change.bind(null, 'opp')}> 反对 </Button> </div> ) } export default memo(VoteFooter)\",\"// VoteMain.jsx import React, { useContext } from 'react' import ThemeContext from '../ThemeContext' const VoteMain = function VoteMain() { let { supNum, oppNum } = useContext(ThemeContext) return ( <div className='main'> <p>支持人数:{supNum}人</p> <p>反对人数:{oppNum}人</p> </div> ) } // const VoteMain = function VoteMain() { // return ( // <ThemeContext.Consumer> // {(context) => { // let { supNum, oppNum } = context // return ( // <div className='main'> // <p>支持人数:{supNum}人</p> // <p>反对人数:{oppNum}人</p> // </div> // ) // }} // </ThemeContext.Consumer> // ) // } export default VoteMain\"]},\"1325\":{\"c\":[\"React\"]},\"1326\":{\"c\":[\"父子组件通信\"]},\"1327\":{\"h\":\"脚手架\"},\"1328\":{\"h\":\"安装脚手架\",\"t\":[\"npm install create-react-app -g\"]},\"1329\":{\"h\":\"查看版本\",\"t\":[\"create-react-app --version\"]},\"1330\":{\"h\":\"创建项目\",\"t\":[\"create-react-app my-app\"]},\"1331\":{\"h\":\"启动项目\",\"t\":[\"cd my-app npm start\"]},\"1332\":{\"h\":\"依赖\",\"t\":[\"react: React 框架的核心。\",\"react-dom: React 视图渲染的核心【基于 React 构建 WebApp（html 页面）】。\",\"react-native：构建和渲染 App。\",\"react-scripts：脚手架为了让项目中目录看起来干净一些，把 webpack 打包规则及相关插件都隐藏到了 node_modules 目录下。\",\"\\\"scripts\\\": { \\\"start\\\": \\\"node scripts/start.js\\\", 开发环境 \\\"build\\\": \\\"node scripts/build.js\\\", 生产环境 \\\"test\\\": \\\"node scripts/test.js\\\", 单元测试 \\\"eject\\\": \\\"react-scripts eject\\\" 暴露 webpack 配置，一旦暴露，无法还原。 },\",\"暴露配置项后根目录会出现 config 文件和 scripts 文件\",\"config 中\",\"paths.js -> 打包中需要的一些路径管理\",\"webpack.config.js -> 脚手架默认的 webpack 打包规则的配置\",\"webpackDevServer.config.js -> webpack-dev-server 配置\",\"web-vitals: 性能检测工具\"]},\"1333\":{\"h\":\"package.json 配置\"},\"1334\":{\"h\":\"浏览器兼容\",\"t\":[\"对 postcss-loader 生效，控制 CSS3 的前缀\",\"对 babel-loader 生效，控制 JS 语法转换\",\"\\\"browserslist\\\": { \\\"production\\\": [ \\\">0.2%\\\", \\\"not dead\\\", \\\"not op_mini all\\\" ], \\\"development\\\": [ \\\"last 1 chrome version\\\", \\\"last 1 firefox version\\\", \\\"last 1 safari version\\\" ] },\",\"遗留的问题：\",\"无法处理 ES6 内置的 API 的兼容，我们需要@babael/polyfill。\",\"脚手架中 react-app-polyfill 已经帮我们引入了，我们只需要在入口文件中引入即可。\",\"import 'react-app-polyfill/ie9' import 'react-app-polyfill/ie11' import 'react-app-polyfill/stable'\"]},\"1335\":{\"h\":\"跨域\",\"t\":[\"src 目录下新建文件 setupProxy.js\",\"const { createProxyMiddleware } = require('http-proxy-middleware') module.exports = function (app) { app.use( createProxyMiddleware('/jian', { target: '', changeOrigin: true, ws: true, pathRewrite: { '^/jian': '', }, }) ) }\"]},\"1336\":{\"c\":[\"React\"]},\"1337\":{\"c\":[\"脚手架\"]},\"1338\":{\"h\":\"接口\",\"t\":[\"在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。\",\"TypeScript 中的接口是一个非常灵活的概念，除了可用于[对类的一部分行为进行抽象]以外，也常用于对「对象的形状（Shape）」进行描述。\",\"interface Person { name: string age: number } let tom: Person = { name: 'Tom', age: 25, }\",\"上面的例子中，我们定义了一个接口 Person，接着定义了一个变量 tom，它的类型是 Person。这样，我们就约束了 tom 的形状必须和接口 Person 一致。\",\"接口一般首字母大写。\",\"定义的变量比接口多或少了一些属性是不允许的：\",\"interface Person { name: string age: number } let tom: Person = { name: 'Tom', } // index.ts(6,5): error TS2322: Type '{ name: string; }' is not assignable to type 'Person'. // Property 'age' is missing in type '{ name: string; }'. let tom2: Person = { name: 'Tom', age: 25, gender: 'male', } // index.ts(9,5): error TS2322: Type '{ name: string; age: number; gender: string; }' is not assignable to type 'Person'. // Object literal may only specify known properties, and 'gender' does not exist in type 'Person'.\"]},\"1339\":{\"h\":\"可选 | 只读属性\",\"t\":[\"interface Person { readonly name: string age?: number }\",\"只读属性用于限制只能在对象刚刚创建的时候修改其值。此外 TypeScript 还提供了 ReadonlyArray<T> 类型，它与 Array<T> 相似，只是把所有可变方法去掉了，因此可以确保数组创建后再也不能被修改。\",\"let a: number[] = [1, 2, 3, 4] let ro: ReadonlyArray<number> = a ro[0] = 12 // error! ro.push(5) // error! ro.length = 100 // error! a = ro // error!\"]},\"1340\":{\"h\":\"任意属性\",\"t\":[\"有时候我们希望一个接口中除了包含必选和可选属性之外，还允许有其他的任意属性，这时我们可以使用 索引签名 的形式来满足上述要求。\",\"interface Person { name: string age?: number [propName: string]: any } let tom: Person = { name: 'Tom', gender: 'male', }\",\"需要注意的是，一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集\",\"interface Person { name: string age?: number [propName: string]: string } let tom: Person = { name: 'Tom', age: 25, gender: 'male', } // index.ts(3,5): error TS2411: Property 'age' of type 'number' is not assignable to string index type 'string'. // index.ts(7,5): error TS2322: Type '{ [x: string]: string | number; name: string; age: number; gender: string; }' is not assignable to type 'Person'. // Index signatures are incompatible. // Type 'string | number' is not assignable to type 'string'. // Type 'number' is not assignable to type 'string'.\",\"上例中，任意属性的值允许是 string，但是可选属性 age 的值却是 number，number 不是 string 的子属性，所以报错了。\",\"一个接口中只能定义一个任意属性。如果接口中有多个类型的属性，则可以在任意属性中使用联合类型：\",\"interface Person { name: string age?: number // 这里真实的类型应该为：number | undefined [propName: string]: string | number | undefined } let tom: Person = { name: 'Tom', age: 25, gender: 'male', }\"]},\"1341\":{\"h\":\"接口与类型别名的区别\",\"t\":[\"实际上，在大多数的情况下使用接口类型和类型别名的效果等价，但是在某些特定的场景下这两者还是存在很大区别。\",\"type(类型别名)会给一个类型起个新名字。 type 有时和 interface 很像，但是可以作用于原始值（基本类型），联合类型，元组以及其它任何你需要手写的类型。起别名不会新建一个类型 - 它创建了一个新 名字来引用那个类型。给基本类型起别名通常没什么用，尽管可以做为文档的一种形式使用。\"]},\"1342\":{\"h\":\"Objects / Functions\",\"t\":[\"两者都可以用来描述对象或函数的类型，但是语法不同。\",\"Interface\",\"interface Point { x: number y: number } interface SetPoint { (x: number, y: number): void }\",\"Type\",\"type Point = { x: number y: number } type SetPoint = (x: number, y: number) => void\"]},\"1343\":{\"h\":\"Other Types\",\"t\":[\"与接口不同，类型别名还可以用于其他类型，如基本类型（原始值）、联合类型、元组。\",\"// primitive type Name = string // object type PartialPointX = { x: number } type PartialPointY = { y: number } // union type PartialPoint = PartialPointX | PartialPointY // tuple type Data = [number, string] // dom let div = document.createElement('div') type B = typeof div\"]},\"1344\":{\"h\":\"接口可以定义多次,类型别名不可以\",\"t\":[\"与类型别名不同，接口可以定义多次，会被自动合并为单个接口。\",\"interface Point { x: number } interface Point { y: number } const point: Point = { x: 1, y: 2 }\"]},\"1345\":{\"h\":\"扩展\"},\"1346\":{\"h\":\"接口扩展接口\",\"t\":[\"interface PointX { x: number } interface Point extends PointX { y: number }\"]},\"1347\":{\"h\":\"类型别名扩展类型别名\",\"t\":[\" type PointX = { x: number } type Point = PointX & { y: number }\"]},\"1348\":{\"h\":\"接口扩展类型别名\",\"t\":[\"type PointX = { x: number } interface Point extends PointX { y: number }\"]},\"1349\":{\"h\":\"类型别名扩展接口\",\"t\":[\"interface PointX { x: number } type Point = PointX & { y: number }\"]},\"1350\":{\"c\":[\"Typescript\"]},\"1351\":{\"c\":[\"接口\"]},\"1352\":{\"h\":\"模块和声明文件\"},\"1353\":{\"h\":\"全局模块\",\"t\":[\"在默认情况下，当你开始在一个新的 TypeScript 文件中写下代码时，它处于全局命名空间中\",\"使用全局变量空间是危险的，因为它会与文件内的代码命名冲突。我们推荐使用下文中将要提到的文件模块\",\"foo.ts\",\"const foo = 123\",\"bar.ts\",\"const bar = foo // allowed\"]},\"1354\":{\"h\":\"文件模块\",\"t\":[\"文件模块也被称为外部模块。如果在你的 TypeScript 文件的根级别位置含有 import 或者 export，那么它会在这个文件中创建一个本地的作用域\",\"模块是 TS 中外部模块的简称，侧重于代码和复用\",\"模块在其自身的作用域里执行，而不是在全局作用域里\",\"一个模块里的变量、函数、类等在外部是不可见的，除非你把它导出\",\"如果想要使用一个模块里导出的变量，则需要导入\",\"foo.ts\",\"const foo = 123 export {}\",\"bar.ts\",\"const bar = foo // error\"]},\"1355\":{\"h\":\"声明文件\",\"t\":[\"我们可以把类型声明放在一个单独的类型声明文件中\",\"文件命名规范为*.d.ts\",\"查看类型声明文件有助于了解库的使用方式\",\"typings\\\\jquery.d.ts\",\"declare const $: (selector: string) => { click(): void width(length: number): void }\"]},\"1356\":{\"h\":\"第三方声明文件\",\"t\":[\"可以安装使用第三方的声明文件\",\"@types 是一个约定的前缀，所有的第三方声明的类型库都会带有这样的前缀\",\"JavaScript 中有很多内置对象，它们可以在 TypeScript 中被当做声明好了的类型\",\"内置对象是指根据标准在全局作用域（Global）上存在的对象。这里的标准是指 ECMAScript 和其他环境（比如 DOM）的标准\",\"这些内置对象的类型声明文件，就包含在 TypeScript 核心库的类型声明文件中,具体可以查看ts 核心声明文件\"]},\"1357\":{\"h\":\"查找声明文件\",\"t\":[\"如果是手动写的声明文件，那么需要满足以下条件之一，才能被正确的识别\",\"给 package.json 中的 types 或 typings 字段指定一个类型声明文件地址\",\"在项目根目录下，编写一个 index.d.ts 文件\",\"针对入口文件（package.json 中的 main 字段指定的入口文件），编写一个同名不同后缀的 .d.ts 文件\",\"{ \\\"name\\\": \\\"myLib\\\", \\\"version\\\": \\\"1.0.0\\\", \\\"main\\\": \\\"lib/index.js\\\", \\\"types\\\": \\\"myLib.d.ts\\\", }\",\"查找过程如下：\",\"1.先找 myLib.d.ts\",\"2.没有就再找 index.d.ts\",\"3.还没有再找 lib/index.d.js\",\"4.还找不到就认为没有类型声明了\"]},\"1358\":{\"c\":[\"Typescript\"]},\"1359\":{\"c\":[\"模块和声明文件\"]},\"1360\":{\"h\":\"泛型\",\"t\":[\"泛型（Generics）是允许同一个函数接受不同类型参数的一种模板。相比于使用 any 类型，使用泛型来创建可复用的组件要更好，因为泛型会保留参数类型。\"]},\"1361\":{\"h\":\"泛型接口\",\"t\":[\"interface GenericIdentityFn<T> { (arg: T): T }\"]},\"1362\":{\"h\":\"泛型类\",\"t\":[\"class GenericNumber<T> { zeroValue: T add: (x: T, y: T) => T } let myGenericNumber = new GenericNumber<number>() myGenericNumber.zeroValue = 0 myGenericNumber.add = function (x, y) { return x + y }\"]},\"1363\":{\"h\":\"泛型变量\",\"t\":[\"对刚接触 TypeScript 泛型的小伙伴来说，看到 T 和 E，还有 K 和 V 这些泛型变量时，估计会一脸懵逼。其实这些大写字母并没有什么本质的区别，只不过是一个约定好的规范而已。也就是说使用大写字母 A-Z 定义的类型变量都属于泛型，把 T 换成 A，也是一样的。下面我们介绍一下一些常见泛型变量代表的意思：\",\"T（Type）：表示一个 TypeScript 类型\",\"K（Key）：表示对象中的键类型\",\"V（Value）：表示对象中的值类型\",\"E（Element）：表示元素类型\"]},\"1364\":{\"h\":\"泛型工具类型\"},\"1365\":{\"h\":\"typeof\",\"t\":[\"typeof 的主要用途是在类型上下文中获取变量或者属性的类型，下面我们通过一个具体示例来理解一下。\",\"interface Person { name: string age: number } const sem: Person = { name: 'semlinker', age: 30 } type Sem = typeof sem // type Sem = Person\",\"在上面代码中，我们通过 typeof 操作符获取 sem 变量的类型并赋值给 Sem 类型变量，之后我们就可以使用 Sem 类型：\",\"const lolo: Sem = { name: 'lolo', age: 5 }\",\"typeof 操作符除了可以获取对象的结构类型之外，它也可以用来获取函数对象的类型，比如：\",\"function toArray(x: number): Array<number> { return [x] } type Func = typeof toArray // -> (x: number) => number[]\"]},\"1366\":{\"h\":\"keyof\",\"t\":[\"该操作符可以用于获取某种类型的所有键，其返回类型是联合类型。\",\"interface Person { name: string age: number } type K1 = keyof Person // \\\"name\\\" | \\\"age\\\" type K2 = keyof Person[] // \\\"length\\\" | \\\"toString\\\" | \\\"pop\\\" | \\\"push\\\" | \\\"concat\\\" | \\\"join\\\" type K3 = keyof { [x: string]: Person } // string | number\",\"JavaScript 是一种高度动态的语言。有时在静态类型系统中捕获某些操作的语义可能会很棘手。以一个简单的 prop 函数为例：\",\"function prop(obj, key) { return obj[key] }\",\"该函数接收 obj 和 key 两个参数，并返回对应属性的值。对象上的不同属性，可以具有完全不同的类型，我们甚至不知道 obj 对象长什么样。\",\"那么在 TypeScript 中如何定义上面的 prop 函数呢？我们来尝试一下：\",\"function prop(obj: object, key: string) { return obj[key] }\",\"在上面代码中，为了避免调用 prop 函数时传入错误的参数类型，我们为 obj 和 key 参数设置了类型，分别为 {} 和 string 类型。然而，事情并没有那么简单。针对上述的代码，TypeScript 编译器会输出以下错误信息：\",\"Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{}'.\",\"元素隐式地拥有 any 类型，因为 string 类型不能被用于索引 {} 类型。要解决这个问题，你可以使用以下非常暴力的方案：\",\"function prop(obj: object, key: string) { return (obj as any)[key] }\",\"很明显该方案并不是一个好的方案，我们来回顾一下 prop 函数的作用，该函数用于获取某个对象中指定属性的属性值。因此我们期望用户输入的属性是对象上已存在的属性，那么如何限制属性名的范围呢？这时我们可以利用本文的主角 keyof 操作符：\",\"function prop<T extends object, K extends keyof T>(obj: T, key: K) { return obj[key] }\",\"在以上代码中，我们使用了 TypeScript 的泛型和泛型约束。首先定义了 T 类型并使用 extends 关键字约束该类型必须是 object 类型的子类型，然后使用 keyof 操作符获取 T 类型的所有键，其返回类型是联合类型，最后利用 extends 关键字约束 K 类型必须为 keyof T 联合类型的子类型。 是骡子是马拉出来遛遛就知道了，我们来实际测试一下：\",\"type Todo = { id: number text: string done: boolean } const todo: Todo = { id: 1, text: 'Learn TypeScript keyof', done: false, } function prop<T extends object, K extends keyof T>(obj: T, key: K) { return obj[key] } const id = prop(todo, 'id') // const id: number const text = prop(todo, 'text') // const text: string const done = prop(todo, 'done') // const done: boolean\",\"很明显使用泛型，重新定义后的 prop<T extends object, K extends keyof T>(obj: T, key: K) 函数，已经可以正确地推导出指定键对应的类型。那么当访问 todo 对象上不存在的属性时，会出现什么情况？比如：\",\"const date = prop(todo, 'date')\",\"对于上述代码，TypeScript 编译器会提示以下错误：\",\"const date = prop(todo, 'date')\"]},\"1367\":{\"h\":\"in\",\"t\":[\"in 用来遍历枚举类型：\",\"type Keys = 'a' | 'b' | 'c' type Obj = { [p in Keys]: any } // -> { a: any, b: any, c: any }\"]},\"1368\":{\"h\":\"infer\",\"t\":[\"在条件类型语句中，可以用 infer 声明一个类型变量并且对它进行使用。\",\"type ReturnType<T> = T extends (...args: any[]) => infer R ? R : any\",\"以上代码中 infer R 就是声明一个变量来承载传入函数签名的返回值类型，简单说就是用它取到函数返回值的类型方便之后使用。\"]},\"1369\":{\"h\":\"extends\",\"t\":[\"有时候我们定义的泛型不想过于灵活或者说想继承某些类等，可以通过 extends 关键字添加泛型约束。\",\"interface Lengthwise { length: number } function loggingIdentity<T extends Lengthwise>(arg: T): T { console.log(arg.length) return arg }\",\"现在这个泛型函数被定义了约束，因此它不再是适用于任意类型：\",\"loggingIdentity(3) // Error, number doesn't have a .length property\",\"这时我们需要传入符合约束类型的值，必须包含 length 属性：\",\"loggingIdentity({ length: 10, value: 3 })\"]},\"1370\":{\"h\":\"索引类型\",\"t\":[\"在实际开发中，我们经常能遇到这样的场景，在对象中获取一些属性的值，然后建立对应的集合。\",\"let person = { name: 'musion', age: 35, } function getValues(person: any, keys: string[]) { return keys.map((key) => person[key]) } console.log(getValues(person, ['name', 'age'])) // ['musion', 35] console.log(getValues(person, ['gender'])) // [undefined]\",\"在上述例子中，可以看到 getValues(persion, ['gender'])打印出来的是[undefined]，但是 ts 编译器并没有给出报错信息，那么如何使用 ts 对这种模式进行类型约束呢？这里就要用到了索引类型,改造一下 getValues 函数，通过 索引类型查询和 索引访问 操作符：\",\"function getValues<T, K extends keyof T>(person: T, keys: K[]): T[K][] { return keys.map((key) => person[key]) } interface Person { name: string age: number } const person: Person = { name: 'musion', age: 35, } getValues(person, ['name']) // ['musion'] getValues(person, ['gender']) // 报错： // Argument of Type '\\\"gender\\\"[]' is not assignable to parameter of type '(\\\"name\\\" | \\\"age\\\")[]'. // Type \\\"gender\\\" is not assignable to type \\\"name\\\" | \\\"age\\\".\"]},\"1371\":{\"h\":\"映射类型\",\"t\":[\"根据旧的类型创建出新的类型, 我们称之为映射类型，比如我们定义一个接口。\",\"interface TestInterface { name: string age: number }\",\"我们把上面定义的接口里面的属性全部变成可选\",\"// 我们可以通过+/-来指定添加还是删除 type OptionalTestInterface<T> = { [p in keyof T]+?: T[p] } type newTestInterface = OptionalTestInterface<TestInterface> // type newTestInterface = { // name?:string, // age?:number // }\",\"比如我们再加上只读\",\"type OptionalTestInterface<T> = { +readonly [p in keyof T]+?: T[p] } type newTestInterface = OptionalTestInterface<TestInterface> // type newTestInterface = { // readonly name?:string, // readonly age?:number // }\"]},\"1372\":{\"h\":\"Partial\",\"t\":[\"Partial<T> 将类型的属性变成可选\",\"type Partial<T> = { [P in keyof T]?: T[P] }\",\"在以上代码中，首先通过 keyof T 拿到 T 的所有属性名，然后使用 in 进行遍历，将值赋给 P，最后通过 T[P] 取得相应的属性值的类。中间的 ? 号，用于将所有属性变为可选。\",\"举例\",\"interface UserInfo { id: string name: string } // error：Property 'id' is missing in type '{ name: string; }' but required in type 'UserInfo' const xiaoming: UserInfo = { name: 'xiaoming', }\",\"使用Partial<T>\",\"type NewUserInfo = Partial<UserInfo> const xiaoming: NewUserInfo = { name: 'xiaoming', }\",\"这个 NewUserInfo 就相当于\",\"interface NewUserInfo { id?: string name?: string }\",\"但是 Partial<T>有个局限性，就是只支持处理第一层的属性，如果我的接口定义是这样的\",\"interface UserInfo { id: string name: string fruits: { appleNumber: number orangeNumber: number } } type NewUserInfo = Partial<UserInfo> // Property 'appleNumber' is missing in type '{ orangeNumber: number; }' but required in type '{ appleNumber: number; orangeNumber: number; }'. const xiaoming: NewUserInfo = { name: 'xiaoming', fruits: { orangeNumber: 1, }, }\",\"可以看到，第二层以后就不会处理了，如果要处理多层，就可以自己实现\",\"type DeepPartial<T> = { // 如果是 object，则递归类型 [U in keyof T]?: T[U] extends object ? DeepPartial<T[U]> : T[U] } type PartialedWindow = DeepPartial<T> // 现在T上所有属性都变成了可选啦\"]},\"1373\":{\"h\":\"Required\",\"t\":[\"Required 将类型的属性变成必选\",\"type Required<T> = { [P in keyof T]-?: T[P] }\",\"其中 -? 是代表移除 ? 这个 modifier 的标识。再拓展一下，除了可以应用于 ? 这个 modifiers ，还有应用在 readonly ，比如 Readonly<T> 这个类型\",\"type Readonly<T> = { readonly [p in keyof T]: T[p] }\"]},\"1374\":{\"h\":\"Readonly\",\"t\":[\"Readonly<T> 的作用是将某个类型所有属性变为只读属性，也就意味着这些属性不能被重新赋值。\",\"type Readonly<T> = { readonly [P in keyof T]: T[P] }\",\"interface Todo { title: string } const todo: Readonly<Todo> = { title: 'Delete inactive users', } todo.title = 'Hello' // Error: cannot reassign a readonly property\"]},\"1375\":{\"h\":\"Pick\",\"t\":[\"Pick 从某个类型中挑出一些属性出来\",\"type Pick<T, K extends keyof T> = { [P in K]: T[P]; };\",\"interface Todo { title: string; description: string; completed: boolean; } type TodoPreview = Pick<Todo, \\\"title\\\" | \\\"completed\\\">; const todo: TodoPreview = { title: \\\"Clean room\\\", completed: false, };\"]},\"1376\":{\"h\":\"Record\",\"t\":[\"Record<K extends keyof any, T> 的作用是将 K 中所有的属性的值转化为 T 类型。\",\"type Record<K extends keyof any, T> = { [P in K]: T; };\",\"interface PageInfo { title: string; } type Page = \\\"home\\\" | \\\"about\\\" | \\\"contact\\\"; const x: Record<Page, PageInfo> = { about: { title: \\\"about\\\" }, contact: { title: \\\"contact\\\" }, home: { title: \\\"home\\\" }, };\"]},\"1377\":{\"h\":\"ReturnType\",\"t\":[\"用来得到一个函数的返回值类型\",\"type ReturnType<T extends (...args: any[]) => any> = T extends ( ...args: any[] ) => infer R ? R : any;\",\"infer在这里用于提取函数类型的返回值类型。ReturnType<T>只是将 infer R 从参数位置移动到返回值位置，因此此时 R 即是表示待推断的返回值类型。\",\"type Func = (value: number) => string; const foo: ReturnType<Func> = \\\"1\\\";\"]},\"1378\":{\"h\":\"Exclude\",\"t\":[\"Exclude<T, U> 的作用是将某个类型中属于另一个的类型移除掉。\",\"type Exclude<T, U> = T extends U ? never : T;\",\"如果 T 能赋值给 U 类型的话，那么就会返回 never 类型，否则返回 T 类型。最终实现的效果就是将 T 中某些属于 U 的类型移除掉。\",\"type T0 = Exclude<\\\"a\\\" | \\\"b\\\" | \\\"c\\\", \\\"a\\\">; // \\\"b\\\" | \\\"c\\\" type T1 = Exclude<\\\"a\\\" | \\\"b\\\" | \\\"c\\\", \\\"a\\\" | \\\"b\\\">; // \\\"c\\\" type T2 = Exclude<string | number | (() => void), Function>; // string | number\"]},\"1379\":{\"h\":\"Extract\",\"t\":[\"Extract<T, U> 的作用是从 T 中提取出 U。\",\"type Extract<T, U> = T extends U ? T : never;\",\"type T0 = Extract<\\\"a\\\" | \\\"b\\\" | \\\"c\\\", \\\"a\\\" | \\\"f\\\">; // \\\"a\\\" type T1 = Extract<string | number | (() => void), Function>; // () =>void\"]},\"1380\":{\"h\":\"Omit\",\"t\":[\"Omit<T, K extends keyof any> 的作用是使用 T 类型中除了 K 类型的所有属性，来构造一个新的类型。\",\"type Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\",\"interface Todo { title: string; description: string; completed: boolean; } type TodoPreview = Omit<Todo, \\\"description\\\">; const todo: TodoPreview = { title: \\\"Clean room\\\", completed: false, };\"]},\"1381\":{\"h\":\"NonNullable\",\"t\":[\"NonNullable<T> 的作用是用来过滤类型中的 null 及 undefined 类型。\",\"type NonNullable<T> = T extendsnull | undefined ? never : T;\",\"type T0 = NonNullable<string | number | undefined>; // string | number type T1 = NonNullable<string[] | null | undefined>; // string[]\"]},\"1382\":{\"h\":\"Parameters\",\"t\":[\"Parameters<T> 的作用是用于获得函数的参数类型组成的元组类型。\",\"type Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\",\"type A = Parameters<() =>void>; // [] type B = Parameters<typeofArray.isArray>; // [any] type C = Parameters<typeofparseInt>; // [string, (number | undefined)?] type D = Parameters<typeofMath.max>; // number[]\"]},\"1383\":{\"c\":[\"Typescript\"]},\"1384\":{\"c\":[\"泛型\"]},\"1385\":{\"h\":\"类\"},\"1386\":{\"h\":\"类的定义\",\"t\":[\"在面向对象语言中，类是一种面向对象计算机编程语言的构造，是创建对象的蓝图，描述了所创建的对象共同的属性和方法。在 TypeScript 中，我们可以通过 Class 关键字来定义一个类：\",\"class Person { name!: string; //如果初始属性没赋值就需要加上! constructor(_name: string) { this.name = _name; } getName(): void { console.log(this.name); } } let p1 = new Person(\\\"hello\\\"); p1.getName();\",\"当然 如果我们图省事 我们也可以把属性定义直接写到构造函数的参数里面去(不过一般不建议这样写 因为会让代码增加阅读难度)\",\"class Person { constructor(public name: string) {} getName(): void { console.log(this.name); } } let p1 = new Person(\\\"hello\\\"); p1.getName();\"]},\"1387\":{\"h\":\"存取器\",\"t\":[\"在 TypeScript 中，我们可以通过存取器来改变一个类中属性的读取和赋值行为\",\"class User { myname: string; constructor(myname: string) { this.myname = myname; } get name() { return this.myname; } set name(value) { this.myname = value; } } let user = new User(\\\"hello\\\"); user.name = \\\"world\\\"; console.log(user.name);\"]},\"1388\":{\"h\":\"readonly 只读属性\",\"t\":[\"readonly 修饰的变量只能在构造函数中初始化 TypeScript 的类型系统同样也允许将 interface、type、 class 上的属性标识为 readonly readonly 实际上只是在编译阶段进行代码检查。\",\"class Animal { public readonly name: string; constructor(name: string) { this.name = name; } changeName(name: string) { this.name = name; //这个ts是报错的 } } let a = new Animal(\\\"hello\\\");\"]},\"1389\":{\"h\":\"继承\",\"t\":[\"子类继承父类后子类的实例就拥有了父类中的属性和方法，可以增强代码的可复用性\",\"将子类公用的方法抽象出来放在父类中，自己的特殊逻辑放在子类中重写父类的逻辑\",\"super 可以调用父类上的方法和属性\",\"在 TypeScript 中，我们可以通过 extends 关键字来实现继承\",\"class Person { name: string; //定义实例的属性，默认省略public修饰符 age: number; constructor(name: string, age: number) { //构造函数 this.name = name; this.age = age; } getName(): string { return this.name; } setName(name: string): void { this.name = name; } } class Student extends Person { no: number; constructor(name: string, age: number, no: number) { super(name, age); this.no = no; } getNo(): number { return this.no; } } let s1 = new Student(\\\"hello\\\", 10, 1); console.log(s1);\"]},\"1390\":{\"h\":\"类里面的修饰符\",\"t\":[\"public 类里面 子类 其它任何地方外边都可以访问 protected 类里面 子类 都可以访问,其它任何地方不能访问 private 类里面可以访问，子类和其它任何地方都不可以访问\",\"class Parent { public name: string; protected age: number; private car: number; constructor(name: string, age: number, car: number) { //构造函数 this.name = name; this.age = age; this.car = car; } getName(): string { return this.name; } setName(name: string): void { this.name = name; } } class Child extends Parent { constructor(name: string, age: number, car: number) { super(name, age, car); } desc() { console.log(`${this.name} ${this.age} ${this.car}`); //car访问不到 会报错 } } let child = new Child(\\\"hello\\\", 10, 1000); console.log(child.name); console.log(child.age); //age访问不到 会报错 console.log(child.car); //car访问不到 会报错\"]},\"1391\":{\"h\":\"静态属性 静态方法\",\"t\":[\"类的静态属性和方法是直接定义在类本身上面的 所以也只能通过直接调用类的方法和属性来访问\",\"class Parent { static mainName = \\\"Parent\\\"; static getmainName() { console.log(this); //注意静态方法里面的this指向的是类本身 而不是类的实例对象 所以静态方法里面只能访问类的静态属性和方法 return this.mainName; } public name: string; constructor(name: string) { //构造函数 this.name = name; } } console.log(Parent.mainName); console.log(Parent.getmainName());\"]},\"1392\":{\"h\":\"抽象类和抽象方法\",\"t\":[\"抽象类，无法被实例化，只能被继承并且无法创建抽象类的实例\",\"子类可以对抽象类进行不同的实现\",\"抽象方法只能出现在抽象类中并且抽象方法不能在抽象类中被具体实现，只能在抽象类的子类中实现（必须要实现）\",\"使用场景：\",\"我们一般用抽象类和抽象方法抽离出事物的共性 以后所有继承的子类必须按照规范去实现自己的具体逻辑 这样可以增加代码的可维护性和复用性\",\"使用 abstract 关键字来定义抽象类和抽象方法\",\"abstract class Animal { name!: string; abstract speak(): void; } class Cat extends Animal { speak() { console.log(\\\"喵喵喵\\\"); } } let animal = new Animal(); //直接报错 无法创建抽象类的实例 let cat = new Cat(); cat.speak();\"]},\"1393\":{\"c\":[\"Typescript\"]},\"1394\":{\"c\":[\"类\"]},\"1395\":{\"h\":\"类型\"},\"1396\":{\"h\":\"基础类型\"},\"1397\":{\"h\":\"boolean 类型\",\"t\":[\"let type: boolean = true\"]},\"1398\":{\"h\":\"number 类型\",\"t\":[\"let type: number = 123\"]},\"1399\":{\"h\":\"string 类型\",\"t\":[\"let type: string = 'typescript'\"]},\"1400\":{\"h\":\"null 和 undefined 类型\",\"t\":[\"let u: undefined = undefined let n: null = null\",\"默认情况下 null 和 undefined 是所有类型的子类型。 就是说你可以把 null 和 undefined 赋值给其他类型。\",\"如果你在 tsconfig.json 指定了\\\"strictNullChecks\\\":true ，null 和 undefined 只能赋值给 void 和它们各自的类型。\"]},\"1401\":{\"h\":\"object 类型\",\"t\":[\"let obj: object = { x: 1 }\"]},\"1402\":{\"h\":\"bigInt 类型\",\"t\":[\"let big: bigint = 100n\",\"虽然 number 和 bigint 都表示数字，但是这两个类型不兼容。\",\"let big: bigint = 100n let num: number = 6 big = num num = big\"]},\"1403\":{\"h\":\"symbol 类型\",\"t\":[\"let sym: symbol = Symbol('me')\"]},\"1404\":{\"h\":\"其他类型\"},\"1405\":{\"h\":\"Array 类型\",\"t\":[\"let list1: number[] = [1, 2, 3] let list2: Array<number> = [1, 2, 3] // Array<number>泛型语法 let arr: (number | string)[] = [1, 'b', 2, 'c'] interface Arrobj { name: string age: number } let arr3: Arrobj[] = [{ name: 'jimmy', age: 22 }]\"]},\"1406\":{\"h\":\"Enum 类型\"},\"1407\":{\"h\":\"数字枚举\",\"t\":[\"enum Direction { NORTH, SOUTH, EAST, WEST, } let dir: Direction = Direction.NORTH\",\"默认情况下，NORTH 的初始值为 0，其余的成员会从 1 开始自动增长。换句话说，Direction.SOUTH 的值为 1，Direction.EAST 的值为 2，Direction.WEST 的值为 3。当然我们也可以设置 NORTH 的初始值，比如：\",\"enum Direction { NORTH = 3, SOUTH, EAST, WEST, } let dir: Direction = Direction.NORTH\"]},\"1408\":{\"h\":\"字符串枚举\",\"t\":[\"enum Direction { NORTH = 'NORTH', SOUTH = 'SOUTH', EAST = 'EAST', WEST = 'WEST', } let dir: Direction = Direction.NORTH\"]},\"1409\":{\"h\":\"异构枚举\",\"t\":[\"enum Enum { A, B, C = 'C', D = 'D', E = 8, F, }\"]},\"1410\":{\"h\":\"Tuple 元组 类型\",\"t\":[\"元组可用于定义具有有限数量的未命名属性的类型。每个属性都有一个关联的类型。使用元组时，必须提供每个属性的值。为了更直观地理解元组的概念，我们来看一个具体的例子：\",\"let x: [string, number] // 类型必须匹配且个数必须为2 x = ['hello', 10] // OK x = ['hello', 10, 10] // Error x = [10, 'hello'] // Error\"]},\"1411\":{\"h\":\"解构赋值\",\"t\":[\"let employee: [number, string] = [1, 'Semlinker'] let [id, username] = employee console.log(`id: ${id}`) console.log(`username: ${username}`) // id: 1 // username: Semlinker\",\"这里需要注意的是，在解构赋值时，如果解构数组元素的个数是不能超过元组中元素的个数，否则也会出现错误，比如：\",\"let employee: [number, string] = [1, 'Semlinker'] let [id, username, age] = employee // Tuple type '[number, string]' of length '2' has no element at index '2'.\"]},\"1412\":{\"h\":\"可选类型\",\"t\":[\"let optionalTuple: [string, boolean?] optionalTuple = ['Semlinker', true] console.log(`optionalTuple : ${optionalTuple}`) optionalTuple = ['Kakuqo'] console.log(`optionalTuple : ${optionalTuple}`)\"]},\"1413\":{\"h\":\"剩余类型\",\"t\":[\"type RestTupleType = [number, ...string[]] let restTuple: RestTupleType = [666, 'Semlinker', 'Kakuqo', 'Lolo'] console.log(restTuple[0]) console.log(restTuple[1])\"]},\"1414\":{\"h\":\"只读\",\"t\":[\"const point: readonly [number, number] = [10, 20] // Cannot assign to '0' because it is a read-only property. point[0] = 1 // Property 'push' does not exist on type 'readonly [number, number]'. point.push(0) // Property 'pop' does not exist on type 'readonly [number, number]'. point.pop() // Property 'splice' does not exist on type 'readonly [number, number]'. point.splice(1, 1)\"]},\"1415\":{\"h\":\"Void 类型\",\"t\":[\"void 表示没有任何类型，和其他类型是平等关系，不能直接赋值:\",\"let a: void let b: number = a // Error\",\"你只能为它赋予 null 和 undefined（在 strictNullChecks 未指定为 true 时）。声明一个 void 类型的变量没有什么大用，我们一般也只有在函数没有返回值时去声明。\",\"// 声明函数返回值为void function warnUser(): void { console.log('This is my warning message') }\"]},\"1416\":{\"h\":\"Never 类型\",\"t\":[\"never 类型表示的是那些永不存在的值的类型。 例如，never 类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型。\",\"// 返回never的函数必须存在无法达到的终点 function error(message: string): never { throw new Error(message) } function infiniteLoop(): never { while (true) {} }\",\"在 TypeScript 中，可以利用 never 类型的特性来实现全面性检查，具体示例如下：\",\"type Foo = string | number function controlFlowAnalysisWithNever(foo: Foo) { if (typeof foo === 'string') { // 这里 foo 被收窄为 string 类型 } else if (typeof foo === 'number') { // 这里 foo 被收窄为 number 类型 } else { // foo 在这里是 never const check: never = foo } }\",\"注意在 else 分支里面，我们把收窄为 never 的 foo 赋值给一个显示声明的 never 变量。如果一切逻辑正确，那么这里应该能够编译通过。但是假如后来有一天你的同事修改了 Foo 的类型：\",\"type Foo = string | number | boolean\",\"然而他忘记同时修改 controlFlowAnalysisWithNever 方法中的控制流程，这时候 else 分支的 foo 类型会被收窄为 boolean 类型，导致无法赋值给 never 类型，这时就会产生一个编译错误。通过这个方式，我们可以确保 controlFlowAnalysisWithNever 方法总是穷尽了 Foo 的所有可能类型。 通过这个示例，我们可以得出一个结论：使用 never 避免出现新增了联合类型没有对应的实现，目的就是写出类型绝对安全的代码。\",\"never 类型同 null 和 undefined 一样，也是任何类型的子类型，也可以赋值给任何类型。 但是没有类型是 never 的子类型或可以赋值给 never 类型（除了 never 本身之外），即使 any 也不可以赋值给 never\"]},\"1417\":{\"h\":\"Any 类型\",\"t\":[\"在 TypeScript 中，任何类型都可以被归为 any 类型。这让 any 类型成为了类型系统的顶级类型（也被称作全局超级类型）。\",\"let notSure: any = 666 notSure = 'Semlinker' notSure = false\",\"any 类型本质上是类型系统的一个逃逸舱。作为开发者，这给了我们很大的自由：TypeScript 允许我们对 any 类型的值执行任何操作，而无需事先执行任何形式的检查。比如：\",\"let value: any value.foo.bar // OK value.trim() // OK value() // OK new value() // OK value[0][1] // OK\",\"变量如果在声明的时候，未指定其类型，那么它会被识别为任意值类型\",\"let something something = 'seven' something = 7 something.setName('Tom')\",\"等价于\",\"let something: any something = 'seven' something = 7 something.setName('Tom')\"]},\"1418\":{\"h\":\"Unknown 类型\",\"t\":[\"所有类型都可以赋值给 any，所有类型也都可以赋值给 unknown。这使得 unknown 成为 TypeScript 类型系统的另一种顶级类型（另一种是 any）。\",\"let value: unknown value = true // OK value = 42 // OK value = 'Hello World' // OK value = [] // OK value = {} // OK value = Math.random // OK value = null // OK value = undefined // OK value = new TypeError() // OK value = Symbol('type') // OK\",\"unknown 与 any 的最大区别是： 任何类型的值可以赋值给 any，同时 any 类型的值也可以赋值给任何类型。unknown 任何类型的值都可以赋值给它，但它只能赋值给 unknown 和 any\",\"let value: unknown let value1: unknown = value // OK let value2: any = value // OK let value3: boolean = value // Error let value4: number = value // Error let value5: string = value // Error let value6: object = value // Error let value7: any[] = value // Error let value8: Function = value // Error\",\"unknown 类型只能被赋值给 any 类型和 unknown 类型本身。直观地说，这是有道理的：只有能够保存任意类型值的容器才能保存 unknown 类型的值。毕竟我们不知道变量 value 中存储了什么类型的值。\",\"现在让我们看看当我们尝试对类型为 unknown 的值执行操作时会发生什么。以下是我们在之前 any 章节看过的相同操作：\",\"let value: unknown value.foo.bar // Error value.trim() // Error value() // Error new value() // Error value[0][1] // Error\",\"将 value 变量类型设置为 unknown 后，这些操作都不再被认为是类型正确的。通过将 any 类型改变为 unknown 类型，我们已将允许所有更改的默认设置，更改为禁止任何更改。\"]},\"1419\":{\"h\":\"函数类型\"},\"1420\":{\"h\":\"函数声明\",\"t\":[\"function sum(x: number, y: number): number { return x + y }\"]},\"1421\":{\"h\":\"函数表达式\",\"t\":[\"let mySum: (x: number, y: number) => number = function ( x: number, y: number ): number { return x + y }\"]},\"1422\":{\"h\":\"用接口定义函数类型\",\"t\":[\"interface SearchFunc { (source: string, subString: string): boolean }\",\"采用函数表达式接口定义函数的方式时，对等号左侧进行类型限制，可以保证以后对函数名赋值时保证参数个数、参数类型、返回值类型不变。\"]},\"1423\":{\"h\":\"可选参数\",\"t\":[\"function buildName(firstName: string, lastName?: string) { if (lastName) { return firstName + ' ' + lastName } else { return firstName } } let tomcat = buildName('Tom', 'Cat') let tom = buildName('Tom')\"]},\"1424\":{\"h\":\"参数默认值\",\"t\":[\"function buildName(firstName: string, lastName: string = 'Cat') { return firstName + ' ' + lastName } let tomcat = buildName('Tom', 'Cat') let tom = buildName('Tom')\"]},\"1425\":{\"h\":\"剩余参数\",\"t\":[\"function push(array: any[], ...items: any[]) { items.forEach(function (item) { array.push(item) }) } let a = [] push(a, 1, 2, 3)\"]},\"1426\":{\"h\":\"函数重载\",\"t\":[\"type Types = number | string function add(a: number, b: number): number function add(a: string, b: string): string function add(a: string, b: number): string function add(a: number, b: string): string function add(a: Types, b: Types) { if (typeof a === 'string' || typeof b === 'string') { return a.toString() + b.toString() } return a + b } const result = add('Semlinker', ' Kakuqo') result.split(' ')\"]},\"1427\":{\"h\":\"字面量类型\",\"t\":[\"在 TypeScript 中，字面量不仅可以表示值，还可以表示类型，即所谓的字面量类型。\",\"目前，TypeScript 支持 3 种字面量类型：字符串字面量类型、数字字面量类型、布尔字面量类型，对应的字符串字面量、数字字面量、布尔字面量分别拥有与其值一样的字面量类型，具体示例如下：\",\"{ let specifiedStr: 'this is string' = 'this is string' let specifiedNum: 1 = 1 let specifiedBoolean: true = true }\",\"比如 'this is string' （这里表示一个字符串字面量类型）类型是 string 类型（确切地说是 string 类型的子类型），而 string 类型不一定是 'this is string'（这里表示一个字符串字面量类型）类型，如下具体示例：\",\"{ let specifiedStr: 'this is string' = 'this is string' let str: string = 'any string' specifiedStr = str // ts(2322) 类型 '\\\"string\\\"' 不能赋值给类型 'this is string' str = specifiedStr // ok }\"]},\"1428\":{\"h\":\"字符串字面量类型\",\"t\":[\"let hello: 'hello' = 'hello'; hello = 'hi'; // ts(2322) Type '\\\"hi\\\"' is not assignable to type '\\\"hello\\\"'\",\"实际上，定义单个的字面量类型并没有太大的用处，它真正的应用场景是可以把多个字面量类型组合成一个联合类型（后面会讲解），用来描述拥有明确成员的实用的集合。\",\"如下代码所示，我们使用字面量联合类型描述了一个明确、可 'up' 可 'down' 的集合，这样就能清楚地知道需要的数据结构了。\",\"type Direction = 'up' | 'down'; function move(dir: Direction) { // ... } move('up'); // ok move('right'); // ts(2345) Argument of type '\\\"right\\\"' is not assignable to parameter of type 'Direction'\",\"通过使用字面量类型组合的联合类型，我们可以限制函数的参数为指定的字面量类型集合，然后编译器会检查参数是否是指定的字面量类型集合里的成员。\",\"因此，相较于使用 string 类型，使用字面量类型（组合的联合类型）可以将函数的参数限定为更具体的类型。这不仅提升了程序的可读性，还保证了函数的参数类型，可谓一举两得。\"]},\"1429\":{\"h\":\"数字字面量类型及布尔字面量类型\",\"t\":[\"数字字面量类型和布尔字面量类型的使用与字符串字面量类型的使用类似，我们可以使用字面量组合的联合类型将函数的参数限定为更具体的类型，比如声明如下所示的一个类型 Config：\",\"interface Config { size: 'small' | 'big'; isEnable: true | false; margin: 0 | 2 | 4; }\",\"在上述代码中，我们限定了 size 属性为字符串字面量类型 'small' | 'big'，isEnable 属性为布尔字面量类型 true | false（布尔字面量只包含 true 和 false，true | false 的组合跟直接使用 boolean 没有区别），margin 属性为数字字面量类型 0 | 2 | 4。\"]},\"1430\":{\"h\":\"Number、String、Boolean、Symbol\",\"t\":[\"首先，我们来回顾一下初学 TypeScript 时，很容易和原始类型 number、string、boolean、symbol 混淆的首字母大写的 Number、String、Boolean、Symbol 类型，后者是相应原始类型的包装对象，姑且把它们称之为对象类型。 从类型兼容性上看，原始类型兼容对应的对象类型，反过来对象类型不兼容对应的原始类型。 下面我们看一个具体的示例：\",\"let num: number let Num: Number Num = num // ok num = Num // ts(2322)报错\",\"在示例中的第 3 行，我们可以把 number 赋给类型 Number，但在第 4 行把 Number 赋给 number 就会提示 ts(2322) 错误。\"]},\"1431\":{\"h\":\"object、Object 和 {}\",\"t\":[\"object（首字母小写，以下称“小 object”）、Object（首字母大写，以下称“大 Object”）和 {}（以下称“空对象”）。\",\"小 object 代表的是所有非原始类型，也就是说我们不能把 number、string、boolean、symbol 等 原始类型赋值给 object。在严格模式下，null 和 undefined 类型也不能赋给 object。\",\"let lowerCaseObject: object lowerCaseObject = 1 // ts(2322) lowerCaseObject = 'a' // ts(2322) lowerCaseObject = true // ts(2322) lowerCaseObject = null // ts(2322) lowerCaseObject = undefined // ts(2322) lowerCaseObject = {} // ok\",\"大 Object 代表所有拥有 toString、hasOwnProperty 方法的类型，所以所有原始类型、非原始类型都可以赋给 Object。同样，在严格模式下，null 和 undefined 类型也不能赋给 Object。\",\"let upperCaseObject: Object upperCaseObject = 1 // ok upperCaseObject = 'a' // ok upperCaseObject = true // ok upperCaseObject = null // ts(2322) upperCaseObject = undefined // ts(2322) upperCaseObject = {} // ok\",\"从上面示例可以看到，大 Object 包含原始类型，小 object 仅包含非原始类型，所以大 Object 似乎是小 object 的父类型。实际上，大 Object 不仅是小 object 的父类型，同时也是小 object 的子类型。\",\"{}空对象类型和大 Object 一样，也是表示原始类型和非原始类型的集合，并且在严格模式下，null 和 undefined 也不能赋给 {} ，如下示例：\",\"let ObjectLiteral: {} ObjectLiteral = 1 // ok ObjectLiteral = 'a' // ok ObjectLiteral = true // ok ObjectLiteral = null // ts(2322) ObjectLiteral = undefined // ts(2322) ObjectLiteral = {} // ok type isLiteralCaseObjectExtendsUpperCaseObject = {} extends Object ? true : false // true type isUpperCaseObjectExtendsLiteralCaseObject = Object extends {} ? true : false // true upperCaseObject = ObjectLiteral ObjectLiteral = upperCaseObject\",\"相关信息\",\"{}、大 Object 是比小 object 更宽泛的类型（least specific），{} 和大 Object 可以互相代替，用来表示原始类型（null、undefined 除外）和非原始类型；而小 object 则表示非原始类型。\"]},\"1432\":{\"c\":[\"Typescript\"]},\"1433\":{\"c\":[\"类型\"]},\"1434\":{\"h\":\"类型守卫\"},\"1435\":{\"h\":\"in 关键字\",\"t\":[\"interface Admin { name: string privileges: string[] } interface Employee { name: string startDate: Date } type UnknownEmployee = Employee | Admin function printEmployeeInformation(emp: UnknownEmployee) { console.log('Name: ' + emp.name) if ('privileges' in emp) { console.log('Privileges: ' + emp.privileges) } if ('startDate' in emp) { console.log('Start Date: ' + emp.startDate) } }\"]},\"1436\":{\"h\":\"typeof 关键字\",\"t\":[\"function padLeft(value: string, padding: string | number) { if (typeof padding === 'number') { return Array(padding + 1).join(' ') + value } if (typeof padding === 'string') { return padding + value } throw new Error(`Expected string or number, got '${padding}'.`) }\",\"typeof 类型保护只支持两种形式：typeof v === \\\"typename\\\" 和 typeof v !== typename，\\\"typename\\\" 必须是 \\\"number\\\"， \\\"string\\\"， \\\"boolean\\\" 或 \\\"symbol\\\"。 但是 TypeScript 并不会阻止你与其它字符串比较，语言不会把那些表达式识别为类型保护。\"]},\"1437\":{\"h\":\"instanceof 关键字\",\"t\":[\"interface Padder { getPaddingString(): string } class SpaceRepeatingPadder implements Padder { constructor(private numSpaces: number) {} getPaddingString() { return Array(this.numSpaces + 1).join(' ') } } class StringPadder implements Padder { constructor(private value: string) {} getPaddingString() { return this.value } } let padder: Padder = new SpaceRepeatingPadder(6) if (padder instanceof SpaceRepeatingPadder) { // padder的类型收窄为 'SpaceRepeatingPadder' }\"]},\"1438\":{\"h\":\"自定义类型保护\",\"t\":[\"function isNumber(x: any): x is number { return typeof x === \\\"number\\\"; } function isString(x: any): x is string { return typeof x === \\\"string\\\"; }\"]},\"1439\":{\"c\":[\"Typescript\"]},\"1440\":{\"c\":[\"类型守卫\"]},\"1441\":{\"h\":\"类型推断与断言\"},\"1442\":{\"h\":\"类型推断\",\"t\":[\"在很多情况下，TypeScript 会根据上下文环境自动推断出变量的类型，无须我们再写明类型注解。因此，上面的示例可以简化为如下所示内容：\",\"{ let str = 'this is string'; // 等价 let str: string = 'this is string'; 下面类似 let num = 1; // 等价 let bool = true; // 等价 } { const str = 'this is string'; // 不等价 const num = 1; // 不等价 const bool = true; // 不等价 }\",\"我们把 TypeScript 这种基于赋值表达式推断类型的能力称之为类型推断。\",\"在 TypeScript 中，具有初始化值的变量、有默认值的函数参数、函数返回的类型都可以根据上下文推断出来。比如我们能根据 return 语句推断函数返回的类型，如下代码所示：\",\"{ /** 根据参数的类型，推断出返回值的类型也是 number */ function add1(a: number, b: number) { return a + b } const x1 = add1(1, 1) // 推断出 x1 的类型也是 number /** 推断参数 b 的类型是数字或者 undefined，返回值的类型也是数字 */ function add2(a: number, b = 1) { return a + b } const x2 = add2(1) const x3 = add2(1, '1') // ts(2345) Argument of type \\\"1\\\" is not assignable to parameter of type 'number | undefined }\",\"如果定义的时候没有赋值，不管之后有没有赋值，都会被推断成 any 类型而完全不被类型检查：\",\"let myFavoriteNumber; myFavoriteNumber = 'seven'; myFavoriteNumber = 7;\"]},\"1443\":{\"h\":\"类型断言\",\"t\":[\"有时候你会遇到这样的情况，你会比 TypeScript 更了解某个值的详细信息。通常这会发生在你清楚地知道一个实体具有比它现有类型更确切的类型。\",\"通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。类型断言好比其他语言里的类型转换，但是不进行特殊的数据检查和解构。它没有运行时的影响，只是在编译阶段起作用。\",\"TypeScript 类型检测无法做到绝对智能，毕竟程序不能像人一样思考。有时会碰到我们比 TypeScript 更清楚实际类型的情况，比如下面的例子：\",\"const arrayNumber: number[] = [1, 2, 3, 4]; const greaterThan2: number = arrayNumber.find(num => num > 2); // 提示 ts(2322)\",\"其中，greaterThan2 一定是一个数字（确切地讲是 3），因为 arrayNumber 中明显有大于 2 的成员，但静态类型对运行时的逻辑无能为力。\",\"在 TypeScript 看来，greaterThan2 的类型既可能是数字，也可能是 undefined，所以上面的示例中提示了一个 ts(2322) 错误，此时我们不能把类型 undefined 分配给类型 number。\",\"不过，我们可以使用一种笃定的方式——类型断言（类似仅作用在类型层面的强制类型转换）告诉 TypeScript 按照我们的方式做类型检查。\",\"比如，我们可以使用 as 语法做类型断言，如下代码所示：\",\"const arrayNumber: number[] = [1, 2, 3, 4]; const greaterThan2: number = arrayNumber.find(num => num > 2) as number;\"]},\"1444\":{\"h\":\"语法\"},\"1445\":{\"h\":\"“尖括号”语法\",\"t\":[\"let someValue: any = 'this is a string' let strLength: number = (<string>someValue).length\"]},\"1446\":{\"h\":\"as 语法\",\"t\":[\"let someValue: any = 'this is a string' let strLength: number = (someValue as string).length\"]},\"1447\":{\"h\":\"非空断言\",\"t\":[\"在上下文中当类型检查器无法断定类型时，一个新的后缀表达式操作符 ! 可以用于断言操作对象是非 null 和非 undefined 类型。\",\"let mayNullOrUndefinedOrString: null | undefined | string; mayNullOrUndefinedOrString!.toString(); // ok mayNullOrUndefinedOrString.toString(); // ts(2531)\"]},\"1448\":{\"h\":\"确定赋值断言\",\"t\":[\"允许在实例属性和变量声明后面放置一个 ! 号，从而告诉 TypeScript 该属性会被明确地赋值。为了更好地理解它的作用，我们来看个具体的例子：\",\"let x: number; initialize(); // Variable 'x' is used before being assigned.(2454) console.log(2 * x); // Error function initialize() { x = 10; }\",\"很明显该异常信息是说变量 x 在赋值前被使用了，要解决该问题，我们可以使用确定赋值断言：\",\"let x!: number; initialize(); console.log(2 * x); // Ok function initialize() { x = 10; }\"]},\"1449\":{\"c\":[\"Typescript\"]},\"1450\":{\"c\":[\"类型推断与断言\"]},\"1451\":{\"h\":\"编译\"},\"1452\":{\"h\":\"tsconfig.json 的作用\",\"t\":[\"用于标识 TypeScript 项目的根路径；\",\"用于配置 TypeScript 编译器；\",\"用于指定编译的文件。\"]},\"1453\":{\"h\":\"tsconfig.json 重要字段\",\"t\":[\"files - 设置要编译的文件的名称；\",\"include - 设置需要进行编译的文件，支持路径模式匹配；\",\"exclude - 设置无需进行编译的文件，支持路径模式匹配；\",\"compilerOptions - 设置与编译流程相关的选项。\"]},\"1454\":{\"h\":\"compilerOptions 选项\",\"t\":[\"{ \\\"compilerOptions\\\": { /* 基本选项 */ \\\"target\\\": \\\"es5\\\", // 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', or 'ESNEXT' \\\"module\\\": \\\"commonjs\\\", // 指定使用模块: 'commonjs', 'amd', 'system', 'umd' or 'es2015' \\\"lib\\\": [], // 指定要包含在编译中的库文件 \\\"allowJs\\\": true, // 允许编译 javascript 文件 \\\"checkJs\\\": true, // 报告 javascript 文件中的错误 \\\"jsx\\\": \\\"preserve\\\", // 指定 jsx 代码的生成: 'preserve', 'react-native', or 'react' \\\"declaration\\\": true, // 生成相应的 '.d.ts' 文件 \\\"sourceMap\\\": true, // 生成相应的 '.map' 文件 \\\"outFile\\\": \\\"./\\\", // 将输出文件合并为一个文件 \\\"outDir\\\": \\\"./\\\", // 指定输出目录 \\\"rootDir\\\": \\\"./\\\", // 用来控制输出目录结构 --outDir. \\\"removeComments\\\": true, // 删除编译后的所有的注释 \\\"noEmit\\\": true, // 不生成输出文件 \\\"importHelpers\\\": true, // 从 tslib 导入辅助工具函数 \\\"isolatedModules\\\": true, // 将每个文件做为单独的模块 （与 'ts.transpileModule' 类似）. /* 严格的类型检查选项 */ \\\"strict\\\": true, // 启用所有严格类型检查选项 \\\"noImplicitAny\\\": true, // 在表达式和声明上有隐含的 any类型时报错 \\\"strictNullChecks\\\": true, // 启用严格的 null 检查 \\\"noImplicitThis\\\": true, // 当 this 表达式值为 any 类型的时候，生成一个错误 \\\"alwaysStrict\\\": true, // 以严格模式检查每个模块，并在每个文件里加入 'use strict' /* 额外的检查 */ \\\"noUnusedLocals\\\": true, // 有未使用的变量时，抛出错误 \\\"noUnusedParameters\\\": true, // 有未使用的参数时，抛出错误 \\\"noImplicitReturns\\\": true, // 并不是所有函数里的代码都有返回值时，抛出错误 \\\"noFallthroughCasesInSwitch\\\": true, // 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿） /* 模块解析选项 */ \\\"moduleResolution\\\": \\\"node\\\", // 选择模块解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6) \\\"baseUrl\\\": \\\"./\\\", // 用于解析非相对模块名称的基目录 \\\"paths\\\": {}, // 模块名到基于 baseUrl 的路径映射的列表 \\\"rootDirs\\\": [], // 根文件夹列表，其组合内容表示项目运行时的结构内容 \\\"typeRoots\\\": [], // 包含类型声明的文件列表 \\\"types\\\": [], // 需要包含的类型声明文件名列表 \\\"allowSyntheticDefaultImports\\\": true, // 允许从没有设置默认导出的模块中默认导入。 /* Source Map Options */ \\\"sourceRoot\\\": \\\"./\\\", // 指定调试器应该找到 TypeScript 文件而不是源文件的位置 \\\"mapRoot\\\": \\\"./\\\", // 指定调试器应该找到映射文件而不是生成文件的位置 \\\"inlineSourceMap\\\": true, // 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件 \\\"inlineSources\\\": true, // 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性 /* 其他选项 */ \\\"experimentalDecorators\\\": true, // 启用装饰器 \\\"emitDecoratorMetadata\\\": true // 为装饰器提供元数据的支持 } }\"]},\"1455\":{\"c\":[\"Typescript\"]},\"1456\":{\"c\":[\"编译\"]},\"1457\":{\"h\":\"联合类型、类型别名、交叉类型\"},\"1458\":{\"h\":\"联合类型\",\"t\":[\"联合类型表示取值可以为多种类型中的一种，使用 | 分隔每个类型。\",\"let myFavoriteNumber: string | number myFavoriteNumber = 'seven' // OK myFavoriteNumber = 7 // OK\",\"联合类型通常与 null 或 undefined 一起使用：\",\"const sayHello = (name: string | undefined) => { /* ... */ }\",\"这里 name 的类型是 string | undefined 意味着可以将 string 或 undefined 的值传递给 sayHello 函数。\",\"sayHello('semlinker') sayHello(undefined)\"]},\"1459\":{\"h\":\"类型别名\",\"t\":[\"类型别名用来给一个类型起个新名字。类型别名常用于联合类型。\",\"type Message = string | string[]; let greet = (message: Message) => { // ... };\"]},\"1460\":{\"h\":\"交叉类型\",\"t\":[\"TypeScript 交叉类型是将多个类型合并为一个类型。 这让我们可以把现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。\",\"{ type Useless = string & number; }\",\"很显然，如果我们仅仅把原始类型、字面量类型、函数类型等原子类型合并成交叉类型，是没有任何用处的，因为任何类型都不能满足同时属于多种原子类型，比如既是 string 类型又是 number 类型。因此，在上述的代码中，类型别名 Useless 的类型就是个 never。\",\"interface IPerson { id: string; age: number; } interface IWorker { companyId: string; } type IStaff = IPerson & IWorker; const staff: IStaff = { id: 'E1006', age: 33, companyId: 'EFT' }; console.dir(staff)\",\"在上面示例中，我们首先为 IPerson 和 IWorker 类型定义了不同的成员，然后通过 & 运算符定义了 IStaff 交叉类型，所以该类型同时拥有 IPerson 和 IWorker 这两种类型的成员。\"]},\"1461\":{\"c\":[\"Typescript\"]},\"1462\":{\"c\":[\"联合类型、类型别名、交叉类型\"]},\"1463\":{\"h\":\"装饰器\"},\"1464\":{\"h\":\"装饰器是什么\",\"t\":[\"它是一个表达式\",\"该表达式被执行后，返回一个函数\",\"函数的入参分别为 target、name 和 descriptor\",\"执行该函数后，可能返回 descriptor 对象，用于配置 target 对象\"]},\"1465\":{\"h\":\"装饰器的分类\",\"t\":[\"类装饰器（Class decorators）\",\"属性装饰器（Property decorators）\",\"方法装饰器（Method decorators）\",\"参数装饰器（Parameter decorators）\"]},\"1466\":{\"h\":\"类装饰器\",\"t\":[\"类装饰器声明：\",\"declare type ClassDecorator = <TFunction extends Function>( target: TFunction ) => TFunction | void\",\"类装饰器顾名思义，就是用来装饰类的。它接收一个参数：\",\"target: TFunction - 被装饰的类\",\"function Greeter(target: Function): void { target.prototype.greet = function (): void { console.log('Hello Semlinker!') } } @Greeter class Greeting { constructor() { // 内部实现 } } let myGreeting = new Greeting() myGreeting.greet() // console output: 'Hello Semlinker!';\",\"上面的例子中，我们定义了 Greeter 类装饰器，同时我们使用了 @Greeter 语法糖，来使用装饰器。\",\"function Greeter(greeting: string) { return function (target: Function) { target.prototype.greet = function (): void { console.log(greeting) } } } @Greeter('Hello TS!') class Greeting { constructor() { // 内部实现 } } let myGreeting = new Greeting() myGreeting.greet() // console output: 'Hello TS!';\"]},\"1467\":{\"h\":\"属性装饰器\",\"t\":[\"属性装饰器声明：\",\"declare type PropertyDecorator = ( target: Object, propertyKey: string | symbol ) => void\",\"属性装饰器顾名思义，用来装饰类的属性。它接收两个参数：\",\"target: Object - 被装饰的类\",\"propertyKey: string | symbol - 被装饰类的属性名\",\"function logProperty(target: any, key: string) { delete target[key] const backingField = '_' + key Object.defineProperty(target, backingField, { writable: true, enumerable: true, configurable: true, }) // property getter const getter = function (this: any) { const currVal = this[backingField] console.log(`Get: ${key} => ${currVal}`) return currVal } // property setter const setter = function (this: any, newVal: any) { console.log(`Set: ${key} => ${newVal}`) this[backingField] = newVal } // Create new property with getter and setter Object.defineProperty(target, key, { get: getter, set: setter, enumerable: true, configurable: true, }) } class Person { @logProperty public name: string constructor(name: string) { this.name = name } } const p1 = new Person('semlinker') p1.name = 'kakuqo'\",\"以上代码我们定义了一个 logProperty 函数，来跟踪用户对属性的操作，当代码成功运行后，在控制台会输出以下结果：\",\"Set: (name) => semlinker Set: (name) => kakuqo\"]},\"1468\":{\"h\":\"方法装饰器\",\"t\":[\"方法装饰器声明：\",\"declare type MethodDecorator = <T>( target: Object, propertyKey: string | symbol, descriptor: TypePropertyDescript<T> ) => TypedPropertyDescriptor<T> | void\",\"方法装饰器顾名思义，用来装饰类的方法。它接收三个参数：\",\"target: Object - 被装饰的类\",\"propertyKey: string | symbol - 方法名\",\"descriptor: TypePropertyDescript - 属性描述符\",\"function LogOutput(tarage: Function, key: string, descriptor: any) { let originalMethod = descriptor.value; let newMethod = function(...args: any[]): any { let result: any = originalMethod.apply(this, args); if(!this.loggedOutput) { this.loggedOutput = new Array<any>(); } this.loggedOutput.push({ method: key, parameters: args, output: result, timestamp: new Date() }); return result; }; descriptor.value = newMethod; } class Calculator { @LogOutput double (num: number): number { return num * 2; } } let calc = new Calculator(); calc.double(11); // console ouput: [{method: \\\"double\\\", output: 22, ...}] console.log(calc.loggedOutput);\"]},\"1469\":{\"h\":\"参数装饰器\",\"t\":[\"参数装饰器声明：\",\"declare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number ) => void\",\"参数装饰器顾名思义，是用来装饰函数参数，它接收三个参数：\",\"target: Object - 被装饰的类\",\"propertyKey: string | symbol - 方法名\",\"parameterIndex: number - 方法中参数的索引值\",\"function Log(target: Function, key: string, parameterIndex: number) { let functionLogged = key || target.prototype.constructor.name; console.log(`The parameter in position ${parameterIndex} at ${functionLogged} has been decorated`); } class Greeter { greeting: string; constructor(@Log phrase: string) { this.greeting = phrase; } } // console output: The parameter in position 0 // at Greeter has been decorated\"]},\"1470\":{\"c\":[\"Typescript\"]},\"1471\":{\"c\":[\"装饰器\"]},\"1472\":{\"h\":\"homeBrew安装mysql\",\"t\":[\"安装\",\"brew install mysql\",\"开启MySQL服务\",\"brew services start mysql@5.7\",\"设置一个root密码,可以使用以下命令进入MySQL：\",\"mysql -u root\",\"设置root密码：\",\"ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '新密码';\",\"如果需要关闭MySQL服务\",\"brew services stop mysql@5.7\",\"删除以下文件\",\"MySQL二进制文件：/opt/homebrew/Cellar/mysql/{版本号}/bin\",\"MySQL配置文件：/opt/homebrew/etc/my.cnf\",\"MySQL数据目录：/opt/homebrew/var/mysql\",\"MySQL日志文件：/opt/homebrew/var/log/mysql\"]},\"1473\":{\"c\":[\"Mysql\"]},\"1474\":{\"c\":[\"Mysql\"]},\"1475\":{\"h\":\"diff算法原理\",\"t\":[\"// Vue实例化 let vm = new Vue({ el: '#app', data() { return { a: 123, } }, template: `<div id=\\\"a\\\">hello {{a}}</div>`, }) setTimeout(() => { vm.a = 1 }, 1000)\",\"如果我们当初始渲染完成 1 秒后改变了一下模板里面 a 的值 vue 会怎么处理来显示最新的值呢?\",\"1.把上次渲染的真实 dom 删除 然后重新渲染一个新的 dom 节点来应用最新的 a 的值\",\"2.把老的 dom 进行复用 改变一下内部文本节点的 textContent 的值\",\"这两种方案 很明显后者的性能开销更小\"]},\"1476\":{\"h\":\"一、patch和讯渲染方法改写\",\"t\":[\"export function patch(oldVnode, vnode) { // 默认初始化时，是直接用虚拟节点穿件处真实节点 替换掉老节点 if (oldVnode.nodeType == 1) { // 用vnode 来生成真实dom 替换原本的dom元素 const parentElm = oldVnode.parentNode // 找到他的父亲 let elm = createElm(vnode) //根据虚拟节点 创建元素 parentElm.insertBefore(elm, oldVnode.nextSibling) parentElm.removeChild(oldVnode) return elm } else { // 在更新的时候，拿老的虚拟节点和新的虚拟节点做对比，将不同的地方更新真实的dom // 1、比较两个元素的标签，标签不一样直接替换掉即可 if (oldVnode.tag !== vnode.tag) { return oldVnode.el.parentNode.replaceChild( createElm(vnode), oldVnode.el ) } // 2、有可能是标签一样 <div>1</div> <div>2</div> // 文本节点的虚拟节点tag都是undefined // 文本的比对 if (vnode.tag == undefined) { // 新老都是文本 if (oldVnode.text !== vnode.text) { return (el.textContent = vnode.text) } } // 标签一样直接复用即可 let el = (vnode.el = oldVnode.el) // 复用老节点 // 3、标签一样 并且需要开始比对标签属性和儿子 // 更新属性，用新的虚拟节点的属性和老的比较，去更新节点 updateProperties(vnode, oldVnode.data) // 儿子比较氛围一下几种情况 let oldChildren = oldVnode.children || [] let newChildren = vnode.children || [] if (oldChildren.length > 0 && newChildren.length > 0) { // 双方都有儿子 // vue用了双指针的方式 来比对 patchChildren(el, oldChildren, newChildren) } else if (newChildren.length > 0) { // 老的没儿子 但是新的有儿子 for (let i = 0; i < newChildren.length; i++) { let child = createElm(newChildren[i]) el.appendChild(child) // 循环创建新节点 } } else if (oldChildren.length > 0) { // 老的有儿子 新的没有儿子 el.innerHTML = `` // 直接删除老节点 } } } export function createElm(vnode) { let { tag, data, children, text, vm } = vnode if (typeof tag === 'string') { // 元素 vnode.el = document.createElement(tag) // 虚拟节点会有一个el属性 对应真实节点 // 只有元素才有属性 updateProperties(vnode) children.forEach((child) => { vnode.el.appendChild(createElm(child)) }) } else { vnode.el = document.createTextNode(text) } return vnode.el }\"]},\"1477\":{\"h\":\"二、updateProperties更新属性\",\"t\":[\"function updateProperties(vnode, oldProps = {}) { let newProps = vnode.data || {} // 新的属性 let el = vnode.el // 样式处理 老的style={color:red} 新的 style={background: red} let newStyle = newProps.style || {} let oldStyle = oldProps.style || {} // 老的样式中有 新的没有 删除老的样式 for (let key in oldStyle) { if (!newStyle[key]) { // 新的里面不存在这个样式 el.style[key] = '' } } // 老的有新的没有 需要删除属性 for (let key in oldProps) { if (!newProps[key]) { el.removeAttribute(key) // 移除真实dom的属性 } } // 新的有 那就直接用新的去做更新即可 for (let key in newProps) { if (key == 'style') { for (let styleName in newProps.style) { el.style[styleName] = newProps.style[styleName] } } else if (key == 'class') { el.className = newProps.class } else { el.setAttribute(key, newProps[key]) } } }\"]},\"1478\":{\"h\":\"三、更新子节点\",\"t\":[\"function isSameVnode(oldVnode, newVnode) { return oldVnode.tag == newVnode.tag && oldVnode.key == newVnode.key } function patchChildren(el, oldChildren, newChildren) { // DOM中操作有很多常见的逻辑 把节点插入到当前儿子的头部、尾部、儿子倒叙正序 let oldStartIndex = 0 // 老的索引 let oldStartVnode = oldChildren[0] // 老的索引指向的节点 let oldEndIndex = oldChildren.length - 1 let oldEndVnode = oldChildren[oldEndIndex] let newStartIndex = 0 let newStartVnode = newChildren[0] let newEndIndex = newChildren.length - 1 let newEndVnode = newChildren[newEndIndex] const makeIndexByKey = (children) => { return children.reduce((memo, current, index) => { if (current.key) { memo[current.key] = index } return memo }, {}) } // 创建映射表 const keysMap = makeIndexByKey(oldChildren) // 做一个循环同时循环老的和新的，哪个先结束 循环就停止，将多余的删除或者添加进去 while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) { // 头头比较 尾尾比较 头尾比较 尾头比较 // 优化了 向后添加， 向前添加，尾巴移动到头部，头部移动到尾部 ，反转 if (!oldStartVnode) { // 已经被移动走了 oldStartVnode = oldChildren[++oldStartIndex] } else if (!oldEndVnode) { oldEndVnode = oldChildren[--oldEndIndex] } // 同时循环新的节点和 老的节点，有一方循环完毕就结束了 if (isSameVnode(oldStartVnode, newStartVnode)) { // 头头比较，发现标签一致， patch(oldStartVnode, newStartVnode) oldStartVnode = oldChildren[++oldStartIndex] newStartVnode = newChildren[++newStartIndex] } else if (isSameVnode(oldEndVnode, newEndVnode)) { // 从尾部开始比较 patch(oldEndVnode, newEndVnode) oldEndVnode = oldChildren[--oldEndIndex] newEndVnode = newChildren[--newEndIndex] } // 头尾比较 =》 reverse else if (isSameVnode(oldStartVnode, newEndVnode)) { patch(oldStartVnode, newEndVnode) el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling) // 移动老的元素，老的元素就被移动走了，不用删除 oldStartVnode = oldChildren[++oldStartIndex] newEndVnode = newChildren[--newEndIndex] } else if (isSameVnode(oldEndVnode, newStartVnode)) { // 尾头比较 patch(oldEndVnode, newStartVnode) el.insertBefore(oldEndVnode.el, oldStartVnode.el) oldEndVnode = oldChildren[--oldEndIndex] newStartVnode = newChildren[++newStartIndex] } else { // 乱序比对 核心diff // 1.需要根据key和 对应的索引将老的内容生成程映射表 let moveIndex = keysMap[newStartVnode.key] // 用新的去老的中查找 // 不需要移动说明没有key复用的 if (moveIndex == undefined) { // 如果不能复用直接创建新的插入到老的节点开头处 el.insertBefore(createElm(newStartVnode), oldStartVnode.el) } else { let moveNode = oldChildren[moveIndex] // 老的虚拟节点 oldChildren[moveIndex] = null // 此节点已经被移动走了 el.insertBefore(moveNode.el, oldStartVnode.el) patch(moveNode, newStartVnode) // 比较两个节点的属性 } newStartVnode = newChildren[++newStartIndex] } } // 如果老的多 将老节点删除 ， 但是可能里面有null 的情况 if (oldStartIndex <= oldEndIndex) { for (let i = oldStartIndex; i <= oldEndIndex; i++) { if (oldChildren[i] !== null) el.removeChild(oldChildren[i].el) } } // 如果用户追加了一个怎么办？ // 这里是没有比对完的 if (newStartIndex <= newEndIndex) { for (let i = newStartIndex; i <= newEndIndex; i++) { // el.appendChild(createElm(newChildren[i])) // insertBefore方法 他可以appendChild功能 insertBefore(节点,null) dom api // 看一下为指针的下一个元素是否存在 let anchor = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el el.insertBefore(createElm(newChildren[i]), anchor) } } }\",\"1.使用双指针移动来进行新老节点的对比\",\"2.用 isSameVnode 来判断新老子节点的头头 尾尾 头尾 尾头 是否是同一节点 如果满足就进行相应的移动指针(头头 尾尾)或者移动 dom 节点(头尾 尾头)操作\",\"3.如果全都不相等 进行暴力对比 如果找到了利用 key 和 index 的映射表来移动老的子节点到前面去 如果找不到就直接插入\",\"4.对老的子节点进行递归 patch 处理\",\"5.最后老的子节点有多的就删掉 新的子节点有多的就添加到相应的位置\"]},\"1479\":{\"h\":\"四、改造原型渲染更新方法_update\",\"t\":[\"// src/lifecycle.js export function lifecycleMixin(Vue) { Vue.prototype._update = function (vnode) { const vm = this // 这里需要区分下到底是首次渲染还是更新 const prevVnode = vm._vnode if (!prevVnode) { // 用新的创建的元素，替换老的vm.$el vm.$el = patch(vm.$el, vnode) } else { vm.$el = patch(prevVnode, vnode) } vm._vnode = vnode } }\"]},\"1480\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/06.diff\"]},\"1481\":{\"c\":[\"Vue\"]},\"1482\":{\"c\":[\"diff算法原理\"]},\"1483\":{\"h\":\"mixin混入原理\",\"t\":[\"Vue.mixin({ created() { console.log(\\\"我是全局混入\\\"); }, }); // Vue实例化 let vm = new Vue({ el: \\\"#app\\\", data() { return { a: { a: { a: { b: 456 } } }, aa: 1, bb: 2, }; }, created() { console.log(\\\"我是自己的\\\"); }, template: `<div id=\\\"a\\\">hello 这是我自己写的Vue{{name}} </div>`, });\"]},\"1484\":{\"h\":\"一、定义全局 Mixin 函数\",\"t\":[\"import { mergeOptions } from '../utils' export function initGlobalApi(Vue) { Vue.options = {} // 用来存放全局的配置 , 每个组件初始化的时候都会和options选项进行合并 Vue.mixin = function (options) { // 合并对象 先考虑生命周期，先不考虑其他的合并 this.options = mergeOptions(this.options, options) return this } }\",\"新建 global-api 文件夹 把 mixin 定义为 Vue 的全局方法 核心方法就是利用 mergeOptions 把传入的选项混入到自己的 options 上面\",\"// src/index.js import { initMixin } from \\\"./init.js\\\"; // Vue就是一个构造函数 通过new关键字进行实例化 function Vue(options) { // 这里开始进行Vue初始化工作 this._init(options); } // 此做法有利于代码分割 initMixin(Vue); export default Vue;\"]},\"1485\":{\"h\":\"二、mergeOptions 方法\",\"t\":[\"// src/util.js export const lifeCycleHooks = [ 'beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', ] // 策略模式 let strats = {} // 存放各种策略 // 生命周期的合并 function mergeHook(parentVal, childVal) { if (childVal) { if (parentVal) { return parentVal.concat(childVal) // 后续 } else { return [childVal] // 第一次 } } else { return parentVal } } lifeCycleHooks.forEach((hook) => { strats[hook] = mergeHook }) export function mergeOptions(parent, child) { // 遍历父亲，可能是父亲有，儿子没有 const options = {} for (let key in parent) { // 父亲和儿子都有在这就处理了 mergeField(key) } // 儿子有父亲没有 for (let key in child) { if (parent.hasOwnProperty(key)) { continue } mergeField(key) } function mergeField(key) { let parentVal = parent[key] let childVal = child[key] // 策略模式 if (strats[key]) { // 如果有对应的策略就调用对应的策略即可 options[key] = strats[key](parentVal, childVal) } else { if (isObject(parentVal) && isObject(childVal)) { options[key] = { ...parentVal, ...childVal } } else { // 父亲中有，儿子中没有 options[key] = child[key] || parent[key] } } } return options }\"]},\"1486\":{\"h\":\"生命周期\",\"t\":[\"// src/lifecycle.js export function callHook(vm, hook) { // 依次执行生命周期对应的方法 const handlers = vm.$options[hook]; if (handlers) { for (let i = 0; i < handlers.length; i++) { handlers[i].call(vm); //生命周期里面的this指向当前实例 } } }\",\"// src/init.js Vue.prototype._init = function (options) { const vm = this; // 这里的this代表调用_init方法的对象(实例对象) // this.$options就是用户new Vue的时候传入的属性和全局的Vue.options合并之后的结果 vm.$options = mergeOptions(vm.constructor.options, options); callHook(vm, \\\"beforeCreate\\\"); //初始化数据之前 // 初始化状态 initState(vm); callHook(vm, \\\"created\\\"); //初始化数据之后 // 如果有el属性 进行模板渲染 if (vm.$options.el) { vm.$mount(vm.$options.el); } };\",\"// src/lifecycle.js export function mountComponent(vm, el) { vm.$el = el; // 引入watcher的概念 这里注册一个渲染watcher 执行vm._update(vm._render())方法渲染视图 callHook(vm, \\\"beforeMount\\\"); //初始渲染之前 let updateComponent = () => { vm._update(vm._render()); }; new Watcher( vm, updateComponent, () => { callHook(vm, \\\"beforeUpdate\\\"); //更新之前 }, true ); callHook(vm, \\\"mounted\\\"); //渲染完成之后 }\"]},\"1487\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/06.diff\"]},\"1488\":{\"c\":[\"Vue\"]},\"1489\":{\"c\":[\"mixin混入原理\"]},\"1490\":{\"h\":\"侦听器属性原理\",\"t\":[\"// Vue实例化 let vm = new Vue({ el: '#app', data() { return { aa: 1, bb: 2, } }, template: `<div id=\\\"a\\\">hello 这是我自己写的Vue{{name}}</div>`, methods: { doSomething() {}, }, watch: { aa(newVal, oldVal) { console.log(newVal) }, // aa: { // handle(newVal， oldVal) { // console.log(newVal); // }, // deep: true // }, // aa: 'doSomething', // aa: [{ // handle(newVal， oldVal) { // console.log(newVal); // }, // deep: true // }] }, }) setTimeout(() => { vm.aa = 1111 }, 1000)\"]},\"1491\":{\"h\":\"一、侦听属性初始化\",\"t\":[\"// src/state.js // 统一初始化数据的方法 export function initState(vm) { // 获取传入的数据对象 const opts = vm.$options if (opts.watch) { //侦听属性初始化 initWatch(vm) } } // 初始化watch function initWatch(vm) { let watch = vm.$options.watch for (let k in watch) { const handler = watch[k] //用户自定义watch的写法可能是数组 对象 函数 字符串 if (Array.isArray(handler)) { // 如果是数组就遍历进行创建 handler.forEach((handle) => { createWatcher(vm, k, handle) }) } else { createWatcher(vm, k, handler) } } } // 创建watcher的核心 function createWatcher(vm, exprOrFn, handler, options = {}) { if (typeof handler === 'object') { options = handler //保存用户传入的对象 handler = handler.handler //这个代表真正用户传入的函数 } if (typeof handler === 'string') { // 代表传入的是定义好的methods方法 handler = vm[handler] } // 调用vm.$watch创建用户watcher return vm.$watch(exprOrFn, handler, options) }\"]},\"1492\":{\"h\":\"二、$watch\",\"t\":[\"// src/state.js import Watcher from './observer/watcher' export function stateMixin(Vue) { Vue.prototype.$nextTick = function (cb) { nextTick(cb) } Vue.prototype.$watch = function (exprOrFn, cb, options = {}) { // 数据应该依赖这个watcher 数据变化后应该让watcher从新执行 // vm,name,用户回调，options.user new Watcher(this, exprOrFn, cb, { ...options, user: true }) if (options.immediate) { cb() // 如果是immediate应该立刻执行 } } }\",\"// src/index.js import { initGlobalApi } from './global-api/index' import { initMixin } from './init' import { lifecycleMixin } from './lifecycle' import { stateMixin } from './state' import { renderMixin } from './vdom/index' function Vue(options) { this._init(options) // 入口方法，做初始化操作 } // 写成一个个的插件进行对原型的扩展 initMixin(Vue) // 混合生命周期 组件挂载、组件更新 lifecycleMixin(Vue) // _render renderMixin(Vue) stateMixin(Vue) initGlobalApi(Vue) export default Vue\"]},\"1493\":{\"h\":\"三、修改 watcher\",\"t\":[\"import { popTarget, pushTarget } from './dep' import { queueWatcher } from './scheduler' let id = 0 class Watcher { // vm实例 // exprOrFn vm._update(vm._render()) constructor(vm, exprOrFn, cb, options) { this.vm = vm this.exprOrFn = exprOrFn this.cb = cb this.options = options this.isWatcher = typeof options == 'boolean' // 是否为渲染watcher this.user = options.user // 是否为用户watcher this.id = id++ // watcher的唯一标识 this.deps = [] //记录有多少dep依赖它 this.depsId = new Set() if (typeof exprOrFn == 'function') { this.getter = exprOrFn } else { // exprOrFn可能传递过来的是一个字符串 this.getter = function () { // 当去当前实例上取值时，才会出发依赖收集 // age.n vm['age.n'] =》 vm['age']['n'] let path = exprOrFn.split('.') // [age,n] let obj = vm for (let i = 0; i < path.length; i++) { obj = obj[path[i]] } return obj } } // 默认会先调用一次get方法，进行取值，将结果保留下来 this.value = this.get() // 默认会调用get方法 } addDep(dep) { let id = dep.id if (!this.depsId.has(id)) { this.deps.push(dep) this.depsId.add(id) dep.addSub(this) } } get() { pushTarget(this) // 当前watcher实例 let result = this.getter() // 调用exporOrFn 渲染页面 取值（执行了get方法） this.getter() popTarget() return result } run() { let newValue = this.get() let oldValue = this.value this.value = newValue // 更新老值 if (this.user) { this.cb.call(this.vm, newValue, oldValue) } } update() { // 这里不要每次都调用get方法 get方法会重新渲染页面 queueWatcher(this) } } export default Watcher\",\"// ./observer/scheduler.js import { nextTick } from '../utils' let queue = [] // 将需要批量更新的watcher存到一个队列中，稍后让watcher执行 let has = {} let pending = false function flushSchedulerQueue() { queue.forEach((watcher) => { watcher.run() if (watcher.isWatcher) { watcher.cb() } }) queue = [] // 清空watcher队列 has = {} // 清空标识id pending = false } export function queueWatcher(watcher) { const id = watcher.id if (has[id] == null) { queue.push(watcher) // 将watcher存到队列中 has[id] = true if (!pending) { //如果还没清空队列，就不要再开定时器 // 等待所有同步代码执行完毕后再执行 nextTick(flushSchedulerQueue) pending = true } } }\"]},\"1494\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/05.watch\"]},\"1495\":{\"c\":[\"Vue\"]},\"1496\":{\"c\":[\"侦听器属性原理\"]},\"1497\":{\"h\":\"入口分析\"},\"1498\":{\"h\":\"一、主入口分析\"},\"1499\":{\"h\":\"package.json\",\"t\":[\"\\\"scripts\\\": { // ... \\\"build\\\": \\\"node scripts/build.js\\\", // ... },\"]},\"1500\":{\"h\":\"scripts/build.js\",\"t\":[\"let builds = require('./config').getAllBuilds() build(builds)\"]},\"1501\":{\"h\":\"scripts/config.js\",\"t\":[\"// Runtime+compiler ES modules build (for direct import in browser) 'web-full-esm-browser-prod': { entry: resolve('web/entry-runtime-with-compiler.js'), dest: resolve('dist/vue.esm.browser.min.js'), format: 'es', transpile: false, env: 'production', alias: { he: './entity-decoder' }, banner }\"]},\"1502\":{\"h\":\"src/platforms/web/entry-runtime-with-compiler.js\",\"t\":[\"// ... import Vue from './runtime/index' import { compileToFunctions } from './compiler/index' // ... Vue.prototype.$mount = function () { // ... } Vue.compile = compileToFunctions export default Vue\"]},\"1503\":{\"h\":\"src/platforms/web/runtime/index.js\",\"t\":[\"import Vue from 'core/index' // ... export default Vue\"]},\"1504\":{\"h\":\"src/core/index.js\",\"t\":[\"import Vue from './instance/index' import { initGlobalAPI } from './global-api/index' // ... initGlobalAPI(Vue) // ... export default Vue\"]},\"1505\":{\"h\":\"src/core/instance/index.js\",\"t\":[\"import { initMixin } from './init' import { stateMixin } from './state' import { renderMixin } from './render' import { eventsMixin } from './events' import { lifecycleMixin } from './lifecycle' import { warn } from '../util/index' function Vue(options) { if (process.env.NODE_ENV !== 'production' && !(this instanceof Vue)) { warn('Vue is a constructor and should be called with the `new` keyword') } this._init(options) } initMixin(Vue) stateMixin(Vue) eventsMixin(Vue) lifecycleMixin(Vue) renderMixin(Vue) export default Vue\"]},\"1506\":{\"h\":\"二、方法\"},\"1507\":{\"h\":\"initMixin\",\"t\":[\"vue 在此方法中声明了_init 方法。这实际上就是我们使用 vue 时， new Vue(options)，实例化 vue 时执行的方法。此方法核心流程如下：\"]},\"1508\":{\"h\":\"1. 合并 options 配置，并挂载至 vm.$options 上\"},\"1509\":{\"h\":\"2. initLifecycle\",\"t\":[\"初始化 vm.$parent, vm.$root, vm.$children, vm.$refs 等属性值\"]},\"1510\":{\"h\":\"3. initEvents\",\"t\":[\"初始化 vm._events={}，初始化事件系统 实际上是父组件在模板中使用 v-on 或@注册的监听子组件内触发的事件\"]},\"1511\":{\"h\":\"4. initRender\",\"t\":[\"主要定义 2 个方法：\",\"vm._c，此方法用于用户使用 template 模式 vm.$createElement，此方法用于用户手写 render 函数\",\"这 2 个方法，最终都会调用 createElement 方法，createElement 方法将在虚拟 DOM 章节重点分析，这里我们只需知道，此方法返回虚拟 DOM\"]},\"1512\":{\"h\":\"5. 调用 beforeCreate 钩子\"},\"1513\":{\"h\":\"6. initInjections\",\"t\":[\"此方法，里面的 inject 和 provide 是成对出现的。作用是父组件提供数据，任意嵌套层级的子组件可以去接受。其中 provide 是数据提供方，inject 是数据接受方。\"]},\"1514\":{\"h\":\"7. initState\",\"t\":[\"初始化 state, props, methods, computed, watch 其中初始化 state, props, methods 时， vue 会遍历 data 中所有的 key，检测是否在 props，methods 重复定义 props 变量有多种写法，vue 会进行统一转化，转化成{ a: {type: \\\"xx\\\", default: 'xx'} } 将 data, props 都挂载到 vm._data, vm._props 上。设置访问数据代理，访问 this.xx，实际上访问的是 vm._data[xx], vm._props[xx] 给_data,_props 添加响应式监听\"]},\"1515\":{\"h\":\"8. initProvide\",\"t\":[\"同 initInjections\"]},\"1516\":{\"h\":\"9. 调用 created 钩子\"},\"1517\":{\"h\":\"stateMixin\",\"t\":[\"定义 Vue.prototype.$data, Vue.prototype.$props 为响应式。\",\"获取 vm.$data实际上是获取vm._data， vm.$props 实际上是 vm._props\",\"定义 Vue.prototype.$watch 方法，实际上是实例化 Watcher 类\"]},\"1518\":{\"h\":\"eventsMixin\",\"t\":[\"在 Vue 原型上，定义$on, $once, $off, $emit 事件方法，并返回 vm\"]},\"1519\":{\"h\":\"lifecycleMixin\",\"t\":[\"在 Vue.prototype 上定义 _update, $forceUpdate, $destroy 方法\"]},\"1520\":{\"h\":\"renderMixin\",\"t\":[\"在 Vue 原型上，定义$nextTick 方法\",\"在 Vue 原型上，定义_render 方法，值得注意的是，该方法会调用 vm.$createElement 创建虚拟 DOM，如果返回值 vnode 不是虚拟 DOM 类型，将创建一个空的虚拟 DOM。 虚拟 DOM:VNode，实际上是一个类。\"]},\"1521\":{\"h\":\"三、总结\",\"t\":[\"Vue 本质上，是一个构造函数。\",\"初始化了：state, props, methods, computed, watch，$destory，$data，$props，$forceUpdate 等。\",\"对_data,_props 使用 Object.defineProperty 添加响应式\",\"设置访问数据代理，访问 this.xx，实际上访问的是 vm._data[xx], vm._props[xx]\",\"添加 event 事件系统，实际上初始化的是父组件在模板中使用 v-on 或@注册的监听子组件内触发的事件\",\"挂载 createElement，为后续 render 返回虚拟 DOM 做准备。\",\"调用对应的组件生命周期钩子， beforeCreate, created\"]},\"1522\":{\"c\":[\"Vue\"]},\"1523\":{\"c\":[\"入口\"]},\"1524\":{\"h\":\"初始渲染原理\"},\"1525\":{\"h\":\"一、组件挂载入口\",\"t\":[\"// src/init.js import { initState } from './state' import { compileToFunctions } from './compiler/index' export function initMixin(Vue) { Vue.prototype._init = function (options) { const vm = this // 这里的this代表调用_init方法的对象(实例对象) // this.$options就是用户new Vue的时候传入的属性 vm.$options = options // 初始化状态 initState(vm) // 如果有el属性 进行模板渲染 if (vm.$options.el) { vm.$mount(vm.$options.el) } } // 这块代码在源码里面的位置其实是放在entry-runtime-with-compiler.js里面 // 代表的是Vue源码里面包含了compile编译功能 这个和runtime-only版本需要区分开 Vue.prototype.$mount = function (el) { const vm = this const options = vm.$options el = document.querySelector(el) // 如果不存在render属性 if (!options.render) { // 如果存在template属性 let template = options.template if (!template && el) { // 如果不存在render和template 但是存在el属性 直接将模板赋值到el所在的外层html结构（就是el本身 并不是父元素） template = el.outerHTML } // 最终需要把tempalte模板转化成render函数 if (template) { const render = compileToFunctions(template) options.render = render } } // 将当前组件实例挂载到真实的el节点上面 return mountComponent(vm, el) } }\",\"接着看$mount 方法 我们主要关注最后一句话 mountComponent 就是组件实例挂载的入口函数 这个方法放在源码的 lifecycle 文件里面 代表了与生命周期相关 因为我们组件初始渲染前后对应有 beforeMount 和 mounted 生命周期钩子\"]},\"1526\":{\"h\":\"二、组件挂载核心方法 mountComponent\",\"t\":[\"// src/lifecycle.js export function mountComponent(vm, el) { // 上一步模板编译解析生成了render函数 // 下一步就是执行vm._render()方法 调用生成的render函数 生成虚拟dom // 最后使用vm._update()方法把虚拟dom渲染到页面 // 真实的el选项赋值给实例的$el属性 为之后虚拟dom产生的新的dom替换老的dom做铺垫 vm.$el = el // _update和._render方法都是挂载在Vue原型的方法 类似_init vm._update(vm._render()) }\",\"新建 lifecycle.js 文件 表示生命周期相关功能 核心导出 mountComponent 函数 主要使用 vm._update(vm._render())方法进行实例挂载\"]},\"1527\":{\"h\":\"三、render 函数转化成虚拟 dom 核心方法 _render\",\"t\":[\"// src/index.js import { initMixin } from './init' import { renderMixin } from './vdom/index' function Vue(options) { this._init(options) // 入口方法，做初始化操作 } // 写成一个个的插件进行对原型的扩展 initMixin(Vue) // _render renderMixin(Vue) export default Vue\",\"主要在原型定义了_render 方法 然后执行了 render 函数 我们知道模板编译出来的 render 函数核心代码主要 return 了 类似于_c('div',{id:\\\"app\\\"},_c('div',undefined,_v(\\\"hello\\\"+_s(name)),_c('span',undefined,_v(\\\"world\\\"))))这样的代码 那么我们还需要定义一下_c _v_s 这些函数才能最终转化成为虚拟 dom\",\"// src/vdom/index.js export function renderMixin(Vue) { Vue.prototype._render = function () { const vm = this // 获取模板编译生成的render方法 const { render } = vm.$options // 生成vnode--虚拟dom const vnode = render.call(vm) return vnode } // render函数里面有_c _v _s方法需要定义 Vue.prototype._c = function (...args) { // 创建虚拟dom元素 return createElement(...args) } Vue.prototype._v = function (text) { // 创建虚拟dom文本 return createTextNode(text) } Vue.prototype._s = function (val) { // 如果模板里面的是一个对象 需要JSON.stringify return val == null ? '' : typeof val === 'object' ? JSON.stringify(val) : val } } export function createElement(vm, tag, data = {}, ...children) { return vnode(vm, tag, data, data.key, children, undefined) } export function createTextElement(vm, text) { return vnode(vm, undefined, undefined, undefined, undefined, text) } function vnode(vm, tag, data, key, children, text) { return { vm, tag, data, key, children, text, // ..... } }\"]},\"1528\":{\"h\":\"四、虚拟 dom 转化成真实 dom 核心方法 _update\",\"t\":[\"import { initMixin } from './init' import { lifecycleMixin } from './lifecycle' import { renderMixin } from './vdom/index' function Vue(options) { this._init(options) // 入口方法，做初始化操作 } // 写成一个个的插件进行对原型的扩展 initMixin(Vue) // 混合生命周期 组件挂载、组件更新 lifecycleMixin(Vue) // _render renderMixin(Vue) export default Vue\",\"// src/lifecycle.js import { patch } from './vdom/patch' export function lifecycleMixin(Vue) { // 把_update挂载在Vue的原型 Vue.prototype._update = function (vnode) { const vm = this // patch是渲染vnode为真实dom核心 patch(vm.$el, vnode) } }\",\"// src/vdom/patch.js // patch用来渲染和更新视图 今天只介绍初次渲染的逻辑 export function patch(oldVnode, vnode) { // 判断传入的oldVnode是否是一个真实元素 // 这里很关键 初次渲染 传入的vm.$el就是咱们传入的el选项 所以是真实dom // 如果不是初始渲染而是视图更新的时候 vm.$el就被替换成了更新之前的老的虚拟dom const isRealElement = oldVnode.nodeType if (isRealElement) { // 这里是初次渲染的逻辑 const oldElm = oldVnode const parentElm = oldElm.parentNode // 将虚拟dom转化成真实dom节点 let el = createElm(vnode) // 插入到 老的el节点下一个节点的前面 就相当于插入到老的el节点的后面 // 这里不直接使用父元素appendChild是为了不破坏替换的位置 parentElm.insertBefore(el, oldElm.nextSibling) // 删除老的el节点 parentElm.removeChild(oldVnode) return el } } // 虚拟dom转成真实dom 就是调用原生方法生成dom树 function createElm(vnode) { let { tag, data, key, children, text } = vnode // 判断虚拟dom 是元素节点还是文本节点 if (typeof tag === 'string') { // 虚拟dom的el属性指向真实dom vnode.el = document.createElement(tag) // 解析虚拟dom属性 updateProperties(vnode) // 如果有子节点就递归插入到父节点里面 children.forEach((child) => { return vnode.el.appendChild(createElm(child)) }) } else { // 文本节点 vnode.el = document.createTextNode(text) } return vnode.el } // 解析vnode的data属性 映射到真实dom上 function updateProperties(vnode) { let newProps = vnode.data || {} let el = vnode.el //真实节点 for (let key in newProps) { // style需要特殊处理下 if (key === 'style') { for (let styleName in newProps.style) { el.style[styleName] = newProps.style[styleName] } } else if (key === 'class') { el.className = newProps.class } else { // 给这个元素添加属性 值就是对应的值 el.setAttribute(key, newProps[key]) } } }\",\"_update 核心方法就是 patch 初始渲染和后续更新都是共用这一个方法 只是传入的第一个参数不同 初始渲染总体思路就是根据虚拟 dom(vnode) 调用原生 js 方法创建真实 dom 节点并替换掉 el 选项的位置\"]},\"1529\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/03.lifecycle\"]},\"1530\":{\"c\":[\"Vue\"]},\"1531\":{\"c\":[\"渲染原理\"]},\"1532\":{\"h\":\"响应式数据原理\"},\"1533\":{\"h\":\"一、数据初始化\",\"t\":[\"new Vue({ el: '#app', data() { return { a: [1, 2, 3], name: '123', } }, })\",\"这段代码 大家一定非常熟悉 这就是 Vue 实例化的过程 从 new 操作符 咱们可以看出 Vue 其实就是一个构造函数 没啥特别的 传入的参数就是一个对象 我们叫做 options（选项）\",\"// src/index.js import { initMixin } from './init.js' // Vue就是一个构造函数 通过new关键字进行实例化 function Vue(options) { // 这里开始进行Vue初始化工作 this._init(options) } // _init方法是挂载在Vue原型的方法 通过引入文件的方式进行原型挂载需要传入Vue // 此做法有利于代码分割 initMixin(Vue) export default Vue\",\"因为在 Vue 初始化可能会处理很多事情 比如数据处理 事件处理 生命周期处理等等 所以划分不同文件引入利于代码分割\",\"// src/init.js import { initState } from './state' export function initMixin(Vue) { Vue.prototype._init = function (options) { const vm = this // 这里的this代表调用_init方法的对象(实例对象) // this.$options就是用户new Vue的时候传入的属性 vm.$options = options // 初始化状态 initState(vm) } }\",\"initMixin 把_init 方法挂载在 Vue 原型 供 Vue 实例调用\",\"// src/state.js import { observe } from './observer/index' import { isFunction, proxy } from './utils' export function initState(vm) { const opts = vm.$options if (opts.props) { initProps(vm) } if (opts.methods) { initMethods(vm) } if (opts.data) { initData(vm) } if (opts.computed) { initComputed(vm) } if (opts.watch) { initWatch(vm) } } // 初始化data数据 function initData(vm) { // 实例的_data属性就是传入的data // vue组件data推荐使用函数 防止数据在组件之间共享 let data = vm.$options.data data = vm._data = isFunction(data) ? data.call(vm) : data // 把data数据代理到vm 也就是Vue实例上面 我们可以使用this.a来访问this._data.a // 用户去vm.xxx => vm._data.xxx for (let key in data) { proxy(vm, '_data', key) } // 数据劫持 对数据进行观测 --响应式数据核心 observe(vm._data) } function initProps(vm) {} function initMethods(vm) {} function initComputed(vm) {} function initWatch(vm) {}\",\"// src/utils.js export function isFunction(val) { return typeof val === 'function' } // 代理 export function proxy(vm, source, key) { Object.defineProperty(vm, key, { get() { return vm[source][key] }, set(newValue) { vm[source][key] = newValue }, }) }\",\"initState 咱们主要关注 initData 里面的 observe 是响应式数据核心 所以另建 observer 文件夹来专注响应式逻辑 其次我们还做了一层数据代理 把 data 代理到实例对象 this 上\"]},\"1534\":{\"h\":\"二、对象的数据劫持\",\"t\":[\"// src/obserber/index.js class Observer { // 观测值 constructor(value) { this.walk(value) } walk(data) { // 对象上的所有属性依次进行观测 let keys = Object.keys(data) for (let i = 0; i < keys.length; i++) { let key = keys[i] let value = data[key] defineReactive(data, key, value) } } } // Object.defineProperty数据劫持核心 兼容性在ie9以及以上 function defineReactive(data, key, value) { observe(value) // 递归关键 // --如果value还是一个对象会继续走一遍odefineReactive 层层遍历一直到value不是对象才停止 // 思考？如果Vue数据嵌套层级过深 >>性能会受影响 Object.defineProperty(data, key, { get() { console.log('获取值') return value }, set(newValue) { if (newValue === value) return console.log('设置值') value = newValue }, }) } export function observe(value) { // 如果传过来的是对象或者数组 进行属性劫持 if ( Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value) ) { return new Observer(value) } }\",\"数据劫持核心是 defineReactive 函数 主要使用 Object.defineProperty 来对数据 get 和 set 进行劫持 这里就解决了之前的问题 为啥数据变动了会自动更新视图 我们可以在 set 里面去通知视图更新\",\"这样的数据劫持方式对数组有什么影响？\",\"这样递归的方式其实无论是对象还是数组都进行了观测 但是我们想一下此时如果 data 包含数组比如 a:[1,2,3,4,5] 那么我们根据下标可以直接修改数据也能触发 set 但是如果一个数组里面有上千上万个元素 每一个元素下标都添加 get 和 set 方法 这样对于性能来说是承担不起的 所以此方法只用来劫持对象\",\"Object.defineProperty 缺点？\",\"对象新增或者删除的属性无法被 set 监听到 只有对象本身存在的属性修改才会被劫持\"]},\"1535\":{\"h\":\"三、数组的观测\",\"t\":[\"// src/obserber/index.js import { arrayMethods } from './array' class Observer { constructor(value) { if (Array.isArray(value)) { // 这里对数组做了额外判断 // 通过重写数组原型方法来对数组的七种方法进行拦截 value.__proto__ = arrayMethods // 如果数组里面还包含数组 需要递归判断 this.observeArray(value) } else { this.walk(value) } } observeArray(items) { for (let i = 0; i < items.length; i++) { observe(items[i]) } } }\",\"因为对数组下标的拦截太浪费性能 对 Observer 构造函数传入的数据参数增加了数组的判断\",\"// src/obserber/index.js import { defineProperty, isObject } from '../utils' class Observer { // 观测值 constructor(value) { defineProperty(value, '__ob__', this) } }\",\"// src/utils.js export function defineProperty(target, key, value) { Object.defineProperty(target, key, { enumerable: false, // 不能被枚举 configurable: false, value, }) }\",\"对数组原型重写之前咱们先要理解这段代码 这段代码的意思就是给每个响应式数据增加了一个不可枚举的ob属性 并且指向了 Observer 实例 那么我们首先可以根据这个属性来防止已经被响应式观察的数据反复被观测 其次 响应式数据可以使用ob来获取 Observer 实例的相关方法 这对数组很关键\",\"// src/obserber/array.js // 先保留数组原型 const arrayProto = Array.prototype // 然后将arrayMethods继承自数组原型 // 这里是面向切片编程思想（AOP）--不破坏封装的前提下，动态的扩展功能 export const arrayMethods = Object.create(arrayProto) let methodsToPatch = [ 'push', 'pop', 'shift', 'unshift', 'splice', 'reverse', 'sort', ] methodsToPatch.forEach((method) => { arrayMethods[method] = function (...args) { // 这里保留原型方法的执行结果 const result = arrayProto[method].apply(this, args) // 这句话是关键 // this代表的就是数据本身 比如数据是{a:[1,2,3]} 那么我们使用a.push(4) this就是a ob就是a.__ob__ 这个属性就是上段代码增加的 代表的是该数据已经被响应式观察过了指向Observer实例 const ob = this.__ob__ // 这里的标志就是代表数组有新增操作 let inserted switch (method) { case 'push': case 'unshift': inserted = args break case 'splice': inserted = args.slice(2) default: break } // 如果有新增的元素 inserted是一个数组 调用Observer实例的observeArray对数组每一项进行观测 if (inserted) ob.observeArray(inserted) // 之后咱们还可以在这里检测到数组改变了之后从而触发视图更新的操作--后续源码会揭晓 return result } })\"]},\"1536\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/01.init\"]},\"1537\":{\"c\":[\"Vue\"]},\"1538\":{\"c\":[\"响应式数据\"]},\"1539\":{\"h\":\"异步更新原理\",\"t\":[\"// Vue实例化 let vm = new Vue({ el: '#app', data() { return { a: 123, } }, // render(h) { // return h('div',{id:'a'},'hello') // }, template: `<div id=\\\"a\\\">hello {{a}}</div>`, }) // 当我们每一次改变数据的时候 渲染watcher都会执行一次 这个是影响性能的 setTimeout(() => { vm.a = 1 vm.a = 2 vm.a = 3 }, 1000)\"]},\"1540\":{\"h\":\"一、watcher 更新的改写\",\"t\":[\"// src/observer/watcher.js import { queueWatcher } from './scheduler' export default class Watcher { update() { // 每次watcher进行更新的时候 是否可以让他们先缓存起来 之后再一起调用 // 异步队列机制 queueWatcher(this) } run() { // 真正的触发更新 this.get() } }\",\"我们把 update 更新方法改一下 增加异步队列的机制\"]},\"1541\":{\"h\":\"二、queueWatcher 实现队列机制\",\"t\":[\"// src/observer/scheduler.js import { nextTick } from '../util/next-tick' let queue = [] let has = {} function flushSchedulerQueue() { for (let index = 0; index < queue.length; index++) { // 调用watcher的run方法 执行真正的更新操作 queue[index].run() } // 执行完之后清空队列 queue = [] has = {} } // 实现异步队列机制 export function queueWatcher(watcher) { const id = watcher.id // watcher去重 if (has[id] === undefined) { // 同步代码执行 把全部的watcher都放到队列里面去 queue.push(watcher) has[id] = true // 进行异步调用 nextTick(flushSchedulerQueue) } }\",\"新建 scheduler.js 文件 表示和调度相关 先同步把 watcher 都放到队列里面去 执行完队列的事件之后再清空队列 主要使用 nextTick 来执行 watcher 队列\"]},\"1542\":{\"h\":\"三、nextTick 原理\",\"t\":[\"// src/util/next-tick.js let callbacks = [] let pending = false function flushCallbacks() { pending = false //把标志还原为false // 依次执行回调 for (let i = 0; i < callbacks.length; i++) { callbacks[i]() } } let timerFunc //定义异步方法 采用优雅降级 if (typeof Promise !== 'undefined') { // 如果支持promise const p = Promise.resolve() timerFunc = () => { p.then(flushCallbacks) } } else if (typeof MutationObserver !== 'undefined') { // MutationObserver 主要是监听dom变化 也是一个异步方法 let counter = 1 const observer = new MutationObserver(flushCallbacks) const textNode = document.createTextNode(String(counter)) observer.observe(textNode, { characterData: true, }) timerFunc = () => { counter = (counter + 1) % 2 textNode.data = String(counter) } } else if (typeof setImmediate !== 'undefined') { // 如果前面都不支持 判断setImmediate timerFunc = () => { setImmediate(flushCallbacks) } } else { // 最后降级采用setTimeout timerFunc = () => { setTimeout(flushCallbacks, 0) } } export function nextTick(cb) { // 除了渲染watcher 还有用户自己手动调用的nextTick 一起被收集到数组 callbacks.push(cb) if (!pending) { // 如果多次调用nextTick 只会执行一次异步 等异步队列清空之后再把标志变为false pending = true timerFunc() } }\"]},\"1543\":{\"h\":\"四、挂载原型\",\"t\":[\"// src/state.js export function stateMixin(Vue) { Vue.prototype.$nextTick = function (cb) { nextTick(cb) } }\",\"// src/index.js import { initMixin } from './init' import { lifecycleMixin } from './lifecycle' import { stateMixin } from './state' import { renderMixin } from './vdom/index' function Vue(options) { this._init(options) // 入口方法，做初始化操作 } // 写成一个个的插件进行对原型的扩展 initMixin(Vue) // 混合生命周期 组件挂载、组件更新 lifecycleMixin(Vue) // _render renderMixin(Vue) stateMixin(Vue) export default Vue\"]},\"1544\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/04.update\"]},\"1545\":{\"c\":[\"Vue\"]},\"1546\":{\"c\":[\"渲染原理\"]},\"1547\":{\"h\":\"模板编译原理\",\"t\":[\"// Vue实例化 new Vue({ el: '#app', data() { return { a: 111, } }, // render(h) { // return h('div',{id:'a'},'hello') // }, // template:`<div id=\\\"a\\\">hello</div>` })\",\"上面这段代码 大家一定不陌生 按照官网给出的生命周期图 咱们传入的 options 选项里面可以手动配置 template 或者是 render\",\"我们传入的 el 或者 template 选项最后都会被解析成 render 函数 这样才能保持模板解析的一致性\"]},\"1548\":{\"h\":\"一、模板编译入口\",\"t\":[\"// src/init.js import { initState } from './state' import { compileToFunctions } from './compiler/index' export function initMixin(Vue) { Vue.prototype._init = function (options) { const vm = this // 这里的this代表调用_init方法的对象(实例对象) // this.$options就是用户new Vue的时候传入的属性 vm.$options = options // 初始化状态 initState(vm) // 如果有el属性 进行模板渲染 if (vm.$options.el) { vm.$mount(vm.$options.el) } } // 这块代码在源码里面的位置其实是放在entry-runtime-with-compiler.js里面 // 代表的是Vue源码里面包含了compile编译功能 这个和runtime-only版本需要区分开 Vue.prototype.$mount = function (el) { const vm = this const options = vm.$options el = document.querySelector(el) // 如果不存在render属性 if (!options.render) { // 如果存在template属性 let template = options.template if (!template && el) { // 如果不存在render和template 但是存在el属性 直接将模板赋值到el所在的外层html结构（就是el本身 并不是父元素） template = el.outerHTML } // 最终需要把tempalte模板转化成render函数 if (template) { const render = compileToFunctions(template) options.render = render } } } }\"]},\"1549\":{\"h\":\"二、模板转化核心方法 compileToFunctions\",\"t\":[\"// src/compiler/index.js import { parse } from './parse' import { generate } from './codegen' export function compileToFunctions(template) { // 我们需要把html字符串变成render函数 // 1.把html代码转成ast语法树 ast用来描述代码本身形成树结构 不仅可以描述html 也能描述css以及js语法 // 很多库都运用到了ast 比如 webpack babel eslint等等 let ast = parse(template) // 2.优化静态节点 // 这个有兴趣的可以去看源码 不影响核心功能就不实现了 // if (options.optimize !== false) { // optimize(ast, options); // } // 3.通过ast 重新生成代码 // 我们最后生成的代码需要和render函数一样 // 类似_c('div',{id:\\\"app\\\"},_c('div',undefined,_v(\\\"hello\\\"+_s(name)),_c('span',undefined,_v(\\\"world\\\")))) // _c代表创建元素 _v代表创建文本 _s代表文Json.stringify--把对象解析成文本 let code = generate(ast) // 使用with语法改变作用域为this 之后调用render函数可以使用call改变this 方便code里面的变量取值 let renderFn = new Function(`with(this){return ${code}}`) return renderFn }\",\"生成 ast\",\"优化静态节点\",\"根据 ast 生成 render 函数\"]},\"1550\":{\"h\":\"三、解析 html 生成 ast 语法树\",\"t\":[\"// src/compiler/parse.js const ncname = `[a-zA-Z_][\\\\\\\\-\\\\\\\\.0-9_a-zA-Z]*` //匹配标签名 形如 abc-123 const qnameCapture = `((?:${ncname}\\\\\\\\:)?${ncname})` //匹配特殊标签 形如 abc:234 前面的abc:可有可无 const startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配标签开始 形如 <abc-123 捕获里面的标签名 const startTagClose = /^\\\\s*(\\\\/?)>/ // 匹配标签结束 > const endTag = new RegExp(`^<\\\\\\\\/${qnameCapture}[^>]*>`) // 匹配标签结尾 如 </abc-123> 捕获里面的标签名 const attribute = /^\\\\s*([^\\\\s\\\"'<>\\\\/=]+)(?:\\\\s*(=)\\\\s*(?:\\\"([^\\\"]*)\\\"+|'([^']*)'+|([^\\\\s\\\"'=<>`]+)))?/ // 匹配属性 形如 id=\\\"app\\\" let root, currentParent //代表根节点 和当前父节点 // 栈结构 来表示开始和结束标签 let stack = [] // 标识元素和文本type const ELEMENT_TYPE = 1 const TEXT_TYPE = 3 // 生成ast方法 function createASTElement(tagName, attrs) { return { tag: tagName, type: ELEMENT_TYPE, children: [], attrs, parent: null, } } // 对开始标签进行处理 function handleStartTag({ tagName, attrs }) { let element = createASTElement(tagName, attrs) if (!root) { root = element } currentParent = element stack.push(element) } // 对结束标签进行处理 function handleEndTag(tagName) { // 栈结构 [] // 比如 <div><span></span></div> 当遇到第一个结束标签</span>时 会匹配到栈顶<span>元素对应的ast 并取出来 let element = stack.pop() // 当前父元素就是栈顶的上一个元素 在这里就类似div currentParent = stack[stack.length - 1] // 建立parent和children关系 if (currentParent) { element.parent = currentParent currentParent.children.push(element) } } // 对文本进行处理 function handleChars(text) { // 去掉空格 text = text.replace(/\\\\s/g, '') if (text) { currentParent.children.push({ type: TEXT_TYPE, text, }) } } // 解析标签生成ast核心 export function parse(html) { while (html) { // 查找< let textEnd = html.indexOf('<') // 如果<在第一个 那么证明接下来就是一个标签 不管是开始还是结束标签 if (textEnd === 0) { // 如果开始标签解析有结果 const startTagMatch = parseStartTag() if (startTagMatch) { // 把解析好的标签名和属性解析生成ast handleStartTag(startTagMatch) continue } // 匹配结束标签</ const endTagMatch = html.match(endTag) if (endTagMatch) { advance(endTagMatch[0].length) handleEndTag(endTagMatch[1]) continue } } let text // 形如 hello<div></div> if (textEnd >= 0) { // 获取文本 text = html.substring(0, textEnd) } if (text) { advance(text.length) handleChars(text) } } // 匹配开始标签 function parseStartTag() { const start = html.match(startTagOpen) if (start) { const match = { tagName: start[1], attrs: [], } //匹配到了开始标签 就截取掉 advance(start[0].length) // 开始匹配属性 // end代表结束符号> 如果不是匹配到了结束标签 // attr 表示匹配的属性 let end, attr while ( !(end = html.match(startTagClose)) && (attr = html.match(attribute)) ) { advance(attr[0].length) attr = { name: attr[1], value: attr[3] || attr[4] || attr[5], //这里是因为正则捕获支持双引号 单引号 和无引号的属性值 } match.attrs.push(attr) } if (end) { // 代表一个标签匹配到结束的>了 代表开始标签解析完毕 advance(1) return match } } } //截取html字符串 每次匹配到了就往前继续匹配 function advance(n) { html = html.substring(n) } // 返回生成的ast return root }\",\"利用正则 匹配 html 字符串 遇到开始标签 结束标签和文本 解析完毕之后生成对应的 ast 并建立相应的父子关联 不断的 advance 截取剩余的字符串 直到 html 全部解析完毕 咱们这里主要写了对于开始标签里面的属性的处理\"]},\"1551\":{\"h\":\"四、根据 ast 重新生成代码\",\"t\":[\"// src/compiler/codegen.js const defaultTagRE = /\\\\{\\\\{((?:.|\\\\r?\\\\n)+?)\\\\}\\\\}/g //匹配花括号 {{ }} 捕获花括号里面的内容 function gen(node) { // 判断节点类型 // 主要包含处理文本核心 // 源码这块包含了复杂的处理 比如 v-once v-for v-if 自定义指令 slot等等 咱们这里只考虑普通文本和变量表达式{{}}的处理 // 如果是元素类型 if (node.type == 1) { // 递归创建 return generate(node) } else { // 如果是文本节点 let text = node.text // 不存在花括号变量表达式 if (!defaultTagRE.test(text)) { return `_v(${JSON.stringify(text)})` } // 正则是全局模式 每次需要重置正则的lastIndex属性 不然会引发匹配bug let lastIndex = (defaultTagRE.lastIndex = 0) let tokens = [] let match, index while ((match = defaultTagRE.exec(text))) { // index代表匹配到的位置 index = match.index if (index > lastIndex) { // 匹配到的{{位置 在tokens里面放入普通文本 tokens.push(JSON.stringify(text.slice(lastIndex, index))) } // 放入捕获到的变量内容 tokens.push(`_s(${match[1].trim()})`) // 匹配指针后移 lastIndex = index + match[0].length } // 如果匹配完了花括号 text里面还有剩余的普通文本 那么继续push if (lastIndex < text.length) { tokens.push(JSON.stringify(text.slice(lastIndex))) } // _v表示创建文本 return `_v(${tokens.join('+')})` } } // 处理attrs属性 function genProps(attrs) { let str = '' for (let i = 0; i < attrs.length; i++) { let attr = attrs[i] // 对attrs属性里面的style做特殊处理 if (attr.name === 'style') { let obj = {} attr.value.split(';').forEach((item) => { let [key, value] = item.split(':') obj[key] = value }) attr.value = obj } str += `${attr.name}:${JSON.stringify(attr.value)},` } return `{${str.slice(0, -1)}}` } // 生成子节点 调用gen函数进行递归创建 function getChildren(el) { const children = el.children if (children) { return `${children.map((c) => gen(c)).join(',')}` } } // 递归创建生成code export function generate(el) { let children = getChildren(el) let code = `_c('${el.tag}',${ el.attrs.length ? `${genProps(el.attrs)}` : 'undefined' }${children ? `,${children}` : ''})` return code }\"]},\"1552\":{\"h\":\"五、字符串生成 render 函数\",\"t\":[\"export function compileToFunctions(template) { let ast = parse(template) let code = generate(ast) let renderFn = new Function(`with(this){return ${code}}`) return renderFn }\"]},\"1553\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/02.ast\"]},\"1554\":{\"c\":[\"Vue\"]},\"1555\":{\"c\":[\"模板编译\"]},\"1556\":{\"h\":\"渲染更新原理\",\"t\":[\"// Vue实例化 let vm = new Vue({ el: '#app', data() { return { a: 123, } }, // render(h) { // return h('div',{id:'a'},'hello') // }, template: `<div id=\\\"a\\\">hello {{a}}</div>`, }) // 我们在这里模拟更新 setTimeout(() => { vm.a = 456 // 此方法是刷新视图的核心 vm._update(vm._render()) }, 1000)\"]},\"1557\":{\"h\":\"一、定义 Watcher\",\"t\":[\"// src/observer/watcher.js // 全局变量id 每次new Watcher都会自增 let id = 0 export default class Watcher { constructor(vm, exprOrFn, cb, options) { this.vm = vm this.exprOrFn = exprOrFn this.cb = cb //回调函数 比如在watcher更新之前可以执行beforeUpdate方法 this.options = options //额外的选项 true代表渲染watcher this.id = id++ // watcher的唯一标识 // 如果表达式是一个函数 if (typeof exprOrFn === 'function') { this.getter = exprOrFn } // 实例化就会默认调用get方法 this.get() } get() { this.getter() } }\",\"在 observer 文件夹下新建 watcher.js 代表和观察者相关 这里首先介绍 Vue 里面使用到的观察者模式 我们可以把 Watcher 当做观察者 它需要订阅数据的变动 当数据变动之后 通知它去执行某些方法 其实本质就是一个构造函数 初始化的时候会去执行 get 方法\"]},\"1558\":{\"h\":\"二、创建渲染 Watcher\",\"t\":[\"// src/lifecycle.js export function mountComponent(vm, el) { // _update和._render方法都是挂载在Vue原型的方法 类似_init // 引入watcher的概念 这里注册一个渲染watcher 执行vm._update(vm._render())方法渲染视图 let updateComponent = () => { console.log('刷新页面') vm._update(vm._render()) } new Watcher(vm, updateComponent, null, true) }\",\"我们在组件挂载方法里面 定义一个渲染 Watcher 主要功能就是执行核心渲染页面的方法\"]},\"1559\":{\"h\":\"三、定义 Dep\",\"t\":[\"// src/observer/dep.js // dep和watcher是多对多的关系 // 每个属性都有自己的dep let id = 0 //dep实例的唯一标识 export default class Dep { constructor() { this.id = id++ this.subs = [] // 这个是存放watcher的容器 } } // 默认Dep.target为null Dep.target = null\",\"Dep 也是一个构造函数 可以把他理解为观察者模式里面的被观察者 在 subs 里面收集 watcher 当数据变动的时候通知自身 subs 所有的 watcher 更新\",\"Dep.target 是一个全局 Watcher 指向 初始状态是 null\"]},\"1560\":{\"h\":\"四、对象的依赖收集\",\"t\":[\"// src/observer/index.js // Object.defineProperty数据劫持核心 兼容性在ie9以及以上 function defineReactive(data, key, value) { observe(value) let dep = new Dep() // 为每个属性实例化一个Dep Object.defineProperty(data, key, { get() { // 页面取值的时候 可以把watcher收集到dep里面--依赖收集 if (Dep.target) { // 如果有watcher dep就会保存watcher 同时watcher也会保存dep dep.depend() } return value }, set(newValue) { if (newValue === value) return // 如果赋值的新值也是一个对象 需要观测 observe(newValue) value = newValue dep.notify() // 通知渲染watcher去更新--派发更新 }, }) }\",\"上诉代码就是依赖收集和派发更新的核心 其实就是在数据被访问的时候 把我们定义好的渲染 Watcher 放到 dep 的 subs 数组里面 同时把 dep 实例对象也放到渲染 Watcher 里面去 数据更新时就可以通知 dep 的 subs 存储的 watcher 更新\"]},\"1561\":{\"h\":\"五、完善 watcher\",\"t\":[\"// src/observer/watcher.js import { pushTarget, popTarget } from './dep' // 全局变量id 每次new Watcher都会自增 let id = 0 export default class Watcher { constructor(vm, exprOrFn, cb, options) { this.vm = vm this.exprOrFn = exprOrFn this.cb = cb //回调函数 比如在watcher更新之前可以执行beforeUpdate方法 this.options = options //额外的选项 true代表渲染watcher this.id = id++ // watcher的唯一标识 this.deps = [] //存放dep的容器 this.depsId = new Set() //用来去重dep // 如果表达式是一个函数 if (typeof exprOrFn === 'function') { this.getter = exprOrFn } // 实例化就会默认调用get方法 this.get() } get() { pushTarget(this) // 在调用方法之前先把当前watcher实例推到全局Dep.target上 this.getter() //如果watcher是渲染watcher 那么就相当于执行 vm._update(vm._render()) 这个方法在render函数执行的时候会取值 从而实现依赖收集 popTarget() // 在调用方法之后把当前watcher实例从全局Dep.target移除 } // 把dep放到deps里面 同时保证同一个dep只被保存到watcher一次 同样的 同一个watcher也只会保存在dep一次 addDep(dep) { let id = dep.id if (!this.depsId.has(id)) { this.depsId.add(id) this.deps.push(dep) // 直接调用dep的addSub方法 把自己--watcher实例添加到dep的subs容器里面 dep.addSub(this) } } // 这里简单的就执行以下get方法 之后涉及到计算属性就不一样了 update() { this.get() } }\",\"watcher 在调用 getter 方法前后分别把自身赋值给 Dep.target 方便进行依赖收集 update 方法用来更新\"]},\"1562\":{\"h\":\"六、完善 dep\",\"t\":[\"// src/observer/dep.js // dep和watcher是多对多的关系 // 每个属性都有自己的dep let id = 0 //dep实例的唯一标识 export default class Dep { constructor() { this.id = id++ this.subs = [] // 这个是存放watcher的容器 } depend() { // 如果当前存在watcher if (Dep.target) { Dep.target.addDep(this) // 把自身-dep实例存放在watcher里面 } } notify() { // 依次执行subs里面的watcher更新方法 this.subs.forEach((watcher) => watcher.update()) } addSub(watcher) { // 把watcher加入到自身的subs容器 this.subs.push(watcher) } } // 默认Dep.target为null Dep.target = null // 栈结构用来存watcher const targetStack = [] export function pushTarget(watcher) { targetStack.push(watcher) Dep.target = watcher // Dep.target指向当前watcher } export function popTarget() { targetStack.pop() // 当前watcher出栈 拿到上一个watcher Dep.target = targetStack[targetStack.length - 1] }\"]},\"1563\":{\"h\":\"七、数组的依赖收集\",\"t\":[\"// src/observer/index.js // Object.defineProperty数据劫持核心 兼容性在ie9以及以上 function defineReactive(data, key, value) { let childOb = observe(value) // childOb就是Observer实例 let dep = new Dep() // 为每个属性实例化一个Dep Object.defineProperty(data, key, { get() { // 页面取值的时候 可以把watcher收集到dep里面--依赖收集 if (Dep.target) { // 如果有watcher dep就会保存watcher 同时watcher也会保存dep dep.depend() if (childOb) { // 这里表示 属性的值依然是一个对象 包含数组和对象 childOb指代的就是Observer实例对象 里面的dep进行依赖收集 // 比如{a:[1,2,3]} 属性a对应的值是一个数组 观测数组的返回值就是对应数组的Observer实例对象 childOb.dep.depend() if (Array.isArray(value)) { // 如果数据结构类似 {a:[1,2,[3,4,[5,6]]]} 这种数组多层嵌套 数组包含数组的情况 那么我们访问a的时候 只是对第一层的数组进行了依赖收集 里面的数组因为没访问到 所以五大收集依赖 但是如果我们改变了a里面的第二层数组的值 是需要更新页面的 所以需要对数组递归进行依赖收集 if (Array.isArray(value)) { // 如果内部还是数组 dependArray(value) // 不停的进行依赖收集 } } } } return value }, set(newValue) { if (newValue === value) return // 如果赋值的新值也是一个对象 需要观测 observe(newValue) value = newValue dep.notify() // 通知渲染watcher去更新--派发更新 }, }) } // 递归收集数组依赖 function dependArray(value) { for (let e, i = 0, l = value.length; i < l; i++) { e = value[i] // e.__ob__代表e已经被响应式观测了 但是没有收集依赖 所以把他们收集到自己的Observer实例的dep里面 e && e.__ob__ && e.__ob__.dep.depend() if (Array.isArray(e)) { // 如果数组里面还有数组 就递归去收集依赖 dependArray(e) } } }\",\"如果对象属性的值是一个数组 那么执行 childOb.dep.depend()收集数组的依赖 如果数组里面还包含数组 需要递归遍历收集 因为只有访问数据触发了 get 才会去收集依赖 一开始只是递归对数据进行响应式处理无法收集依赖 这两点需要分清\"]},\"1564\":{\"h\":\"八、数组的派发更新\",\"t\":[\"// src/observer/array.js methodsToPatch.forEach((method) => { arrayMethods[method] = function (...args) { // 这里保留原型方法的执行结果 const result = arrayProto[method].apply(this, args) // 这句话是关键 // this代表的就是数据本身 比如数据是{a:[1,2,3]} 那么我们使用a.push(4) this就是a ob就是a.__ob__ 这个属性代表的是该数据已经被响应式观察过了 __ob__对象指的就是Observer实例 const ob = this.__ob__ let inserted switch (method) { case 'push': case 'unshift': inserted = args break case 'splice': inserted = args.slice(2) default: break } if (inserted) ob.observeArray(inserted) // 对新增的每一项进行观测 ob.dep.notify() //数组派发更新 ob指的就是数组对应的Observer实例 我们在get的时候判断如果属性的值还是对象那么就在Observer实例的dep收集依赖 所以这里是一一对应的 可以直接更新 return result } })\"]},\"1565\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/04.update\"]},\"1566\":{\"c\":[\"Vue\"]},\"1567\":{\"c\":[\"渲染原理\"]},\"1568\":{\"h\":\"计算属性原理\",\"t\":[\"// Vue实例化 let vm = new Vue({ el: '#app', data() { return { aa: 1, bb: 2, cc: 3, } }, // render(h) { // return h('div',{id:'a'},'hello') // }, template: `<div id=\\\"a\\\">hello 这是我自己写的Vue{{computedName}}{{cc}}</div>`, computed: { computedName() { return this.aa + this.bb }, }, }) // 当我们每一次改变数据的时候 渲染watcher都会执行一次 这个是影响性能的 setTimeout(() => { vm.cc = 4 }, 2000) console.log(vm)\"]},\"1569\":{\"h\":\"一、计算属性的初始化\",\"t\":[\"// src/state.js function initComputed(vm) { let computed = vm.$options.computed const watchers = (vm._computedWatchers = {}) // 稍后存放计算属性的 for (let key in computed) { const userDef = computed[key] // 取出对应的值 // 获取get方法 const getter = typeof userDef == 'function' ? userDef : userDef.get // watcher使用 watchers[key] = new Watcher(vm, getter, () => {}, { lazy: true }) definecomputed(vm, key, userDef) } }\"]},\"1570\":{\"h\":\"二、对计算属性进行属性劫持\",\"t\":[\"// src/state.js const sharePropertyDefinition = { enumerable: true, configurable: true, get: () => {}, set: () => {}, } function definecomputed(target, key, userDef) { if (typeof userDef == 'function') { sharePropertyDefinition.get = createComputedGetter(key) } else { sharePropertyDefinition.get = createComputedGetter(key) // 需要加缓存 sharePropertyDefinition.set = userDef.set } Object.defineProperty(target, key, sharePropertyDefinition) } function createComputedGetter(key) { // 此方法是我们包装的方法 每次取值会调用此方法 return function computedGetter() { const watcher = this._computedWatchers[key] //拿到属性对应的watcher if (watcher) { // 判断到底要不要执行用户传递的方法 if (watcher.dirty) { watcher.evaluate() // 对当前的watcher求值 } if (Dep.target) { watcher.depend() } return watcher.value // 默认返回watcher上 } } }\"]},\"1571\":{\"h\":\"三、修改watcher\",\"t\":[\"import { popTarget, pushTarget } from './dep' import { queueWatcher } from './scheduler' let id = 0 class Watcher { // vm实例 // exprOrFn vm._update(vm._render()) constructor(vm, exprOrFn, cb, options) { this.vm = vm this.exprOrFn = exprOrFn this.cb = cb this.options = options this.isWatcher = typeof options == 'boolean' // 是否为渲染watcher this.user = !!options.user // 是否为用户watcher this.lazy = !!options.lazy // 如果watcher上有lazy属性 说明是一个计算属性 this.dirty = options.lazy // dirty代表取值时是否执行用户提供的方法 this.id = id++ // watcher的唯一标识 this.deps = [] //记录有多少dep依赖它 this.depsId = new Set() if (typeof exprOrFn == 'function') { this.getter = exprOrFn } else { // exprOrFn可能传递过来的是一个字符串 this.getter = function () { // 当去当前实例上取值时，才会出发依赖收集 // age.n vm['age.n'] =》 vm['age']['n'] let path = exprOrFn.split('.') // [age,n] let obj = vm for (let i = 0; i < path.length; i++) { obj = obj[path[i]] } return obj } } // 默认会先调用一次get方法，进行取值，将结果保留下来 this.value = this.lazy ? void 0 : this.get() // 默认会调用get方法 } addDep(dep) { let id = dep.id if (!this.depsId.has(id)) { this.deps.push(dep) this.depsId.add(id) dep.addSub(this) } } get() { pushTarget(this) // 当前watcher实例 let result = this.getter.call(this.vm) // 调用exporOrFn 渲染页面 取值（执行了get方法） this.getter() popTarget() return result } run() { let newValue = this.get() let oldValue = this.value this.value = newValue // 更新老值 if (this.user) { this.cb.call(this.vm, newValue, oldValue) } } update() { if (this.lazy) { // 是计算属性 this.dirty = true } else { // 这里不要每次都调用get方法 get方法会重新渲染页面 queueWatcher(this) } } evaluate() { this.dirty = false // 取过一次值之后就表示已经取过值了 this.value = this.get() } depend() { let i = this.deps.length while (i--) { this.deps[i].depend() // 让depend存储渲染watcher } } }\",\"实例化的时候如果是计算属性 不会去调用 get 方法访问值进行依赖收集\",\"update 方法只是把计算 watcher 的 dirty 标识为 true 只有当下次访问到了计算属性的时候才会重新计算\",\"新增 evaluate 方法专门用于计算属性重新计算\",\"新增 depend 方法 让计算属性的依赖值收集外层 watcher--这个方法非常重要 我们接下来分析\",\"// src/observer/dep.js let id = 0 class Dep { constructor() { this.subs = [] // 用来存放watcher的 this.id = id++ } depend() { Dep.target.addDep(this) // 实现双向记忆，让watcher记住dep的同时，让dep也记住wathcer } addSub(watcher) { this.subs.push(watcher) } notify() { this.subs.forEach((watcher) => watcher.update()) } } Dep.target = null let stack = [] export function pushTarget(watcher) { Dep.target = watcher stack.push(watcher) } export function popTarget() { Dep.target = stack[stack.length - 1] } export default Dep\"]},\"1572\":{\"h\":\"源码\",\"t\":[\"https://github.com/luotianxu1/learn/tree/main/vue2/07.computed\"]},\"1573\":{\"c\":[\"Vue\"]},\"1574\":{\"c\":[\"计算属性原理\"]},\"1575\":{\"h\":\"Git\"},\"1576\":{\"h\":\"一、Git 基本概念\"},\"1577\":{\"h\":\"1. Git 历史\",\"t\":[\"Git 是最流行的分布式版本控制系统（Distributed Version Control System，简称 DVCS）。它由 Linus Torvalds 创建，当时非常需要一个快速、高效和大规模分布式的源代码管理系统，用于管理 Linux 源代码。\",\"由于 Linus 对几乎所有现有的源代码管理系统抱有强烈的反感，因此他决定编写自己的源代码管理系列。2005 年 4 月，Git 就诞生了。到了 2005 年 7 月，维护工作就交给了 Junio Hamano，自此他就一直在维护这个项目。\",\"虽然最初只用于 Linux 内核，但 Git 项目迅速传播，并很快被用于管理许多其他 Linux 项目。现在，几乎所有的软件开发，尤其是在开源世界中，都是通过 Git 进行的。\"]},\"1578\":{\"h\":\"2. 版本控制系统\",\"t\":[\"版本控制是指对软件开发过程中各种程序代码、配置文件及说明文档等文件变更的管理，是软件配置管理的核心思想之一。版本控制技术是团队协作开发的桥梁，助力于多人协作同步进行大型项目开发。软件版本控制系统的核心任务就是查阅项目历史操作记录、实现协同开发。\",\"常见版本控制主要有两种：集中式版本控制和分布式版本控制。\"]},\"1579\":{\"h\":\"（1）集中式版本控制系统\",\"t\":[\"集中式版本控制系统，版本库是集中存放在中央服务器的。工作时，每个人都要先从中央服务器获取最新的版本。完成之后，再把自己添加/修改的内容提交到中央服务器。所有文件和历史数据都存储在中央服务器上。SVN 是最流行的集中式版本控制系统之一。\",\"集中式版本控制系统的缺点就是必须联网才能使用，如果使用局域网还好，速度会比较快。而如果是使用互联网，网速慢的话，就可能需要等待很长时间。除此之外，如果中央服务器出现故障，那么版本控制将不可用。如果中心数据库损坏，若数据未备份，数据就会丢失。\"]},\"1580\":{\"h\":\"（2）分布式版本控制系统\",\"t\":[\"分布式版本控制系统，每台终端都可以保存版本库，版本库可以不同，可以对每个版本库进行修改，修改完成后可以集中进行更新。虽然它没有中心服务器，但可以有一个备份服务器，它的功能有点类似于 SVN 的中央服务器，但它的作用仅是方便交换修改，而不像 SVN 那样还要负责源代码的管理。Git 是最流行的分布式版本控制系统之一。\",\"和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑损坏不会影响到协作的其他人。\"]},\"1581\":{\"h\":\"（3）SVN vs Git\",\"t\":[\"Git 相较于 SVN：\",\"提交速度更快：因为在 SVN 中需要更频繁地提交到中央存储库，所以网络流量会减慢每个人的速度。而使用 Git，主要在本地存储库上工作，只需每隔一段时间才提交到中央存储库。\",\"没有单点故障：使用 SVN，如果中央存储库出现故障，则在修复存储库之前，其他开发人员无法提交他们的代码。使用 Git，每个开发人员都有自己的存储库，因此中央存储库是否损坏并不重要。开发人员可以继续在本地提交代码，直到中央存储库被修复，然后就可以推送他们的更改；\",\"可以离线使用：与 SVN 不同，Git 可以离线工作，即使网络失去连接，也可以继续工作而不会丢失功能。\"]},\"1582\":{\"h\":\"3. Git 安装\",\"t\":[\"在 Git 官网下载、安装即可：https://git-scm.com/download\",\"安装完成之后，可以使用以下命令来查看 Git 是否安装成功：\",\"git --version\"]},\"1583\":{\"h\":\"4. Git 初始化\",\"t\":[\"要给项目初始化一个 Git 仓库，可以在终端中打开项目目录，执行以下命令即可：\",\"git init\",\"初始化之后，就会创建一个名为.git 的新子文件夹，其中包含 Git 将用于跟踪项目更改的多个文件和更多子目录\",\"在使用 Git 进行代码管理时，不希望一些文件出现在跟踪列表中，比如 node_modules 文件。这种情况下，可以在项目的根目录中创建一个名为.gitignore 的文件，在该文件中列出要忽略的文件和文件夹，来看一个示例：\",\"# 所有以.md结尾的文件 *.md # lib.a不能被忽略 !lib.a # node_modules和.vscode文件被忽略 node_modules .vscode # build目录下的文件被忽略 build/ # doc目录下的.txt文件被忽略 doc/*.txt # doc目录下多层目录的所有以.pdf结尾的文件被忽略 doc/**/*.pdf\",\"注意：以 # 符号开头的行是注释。\",\"使用以下命令将远程仓库克隆到本地：\",\"git clone https://github.com/facebook/react.git\"]},\"1584\":{\"h\":\"5. Git 结构和状态\",\"t\":[\"从 Git 的角度来看，可以在三个区域进行文件更改：工作区，暂存区和存储库。\",\"工作区：本地看到的工作目录；\",\"暂存区：一般存放在 .git 目录下的 index 文件（.git/index）中，所以暂存区有时也叫作索引（index）。暂存区是一个临时保存修改文件的地方；\",\"版本库：工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库，版本库中存储了很多配置信息、日志信息和文件版本信息等。\",\"Git 工作目录下的文件存在两种状态：\",\"untracked：未跟踪，未被纳入版本控制，即该文件没有被 Git 版本管理；\",\"tracked：已跟踪，被纳入版本控制，即该文件已被 Git 版本管理。\",\"其中已跟踪状态可以细分为以下三种状态：\",\"Unmodified：未修改状态\",\"Modified：已修改状态\",\"Staged：已暂存状态\",\"可以通过运行以下命令来检查当前分支的状态：\",\"git status\",\"此命令不会更改或更新任何内容。它会打印出哪些文件被修改、暂存或未跟踪。未跟踪的文件是尚未添加到 git 索引的文件，而自上次提交以来已更改的文件将被视为已被 git 修改。\"]},\"1585\":{\"h\":\"二、Git 入门\"},\"1586\":{\"h\":\"1. 全局配置\",\"t\":[\"当安装 Git 后首先要做的就是配置所有本地存储库中使用的用户信息。每次 Git 提交都会使用该用户信息。\",\"config 命令适用于不同的级别：\",\"本地级别：所有配置都仅限于项目目录。默认情况下， 如果未通过任何配置, 则 git config 将在本地级别写入；\",\"全局级别：此配置特定于操作系统上的用户，配置值位于用户的主目录中；\",\"系统级别：这些配置放在系统的根路径下，它跟踪操作系统上的所有用户和所有存储库。\",\"下面的配置均为写入系统级别：\"]},\"1587\":{\"h\":\"（1）设置用户名\",\"t\":[\"可以使用以下命令设置使用 Git 时的用户名：\",\"git config --global user.name \\\"name\\\"\",\"可以使用以下命令查看设置的 user.name：\",\"git config user.name\"]},\"1588\":{\"h\":\"（2）设置邮箱\",\"t\":[\"可以使用以下命令设置使用 Git 时的邮箱：\",\"git config --global user.email \\\"email\\\"\",\"可以使用以下命令查看设置的 email：\",\"git config user.email\"]},\"1589\":{\"h\":\"（3）设置命令颜色\",\"t\":[\"除了上述两个基本的设置之外，还可以设置命令的颜色，以使输出具有更高的可读性：\",\"git config --global color.ui auto\"]},\"1590\":{\"h\":\"（4）查看所有配置\",\"t\":[\"通过上面的命令设置的信息会保存在本地的.gitconfig 文件中。可以使用以下命令查看所有配置信息：\",\"git config --list\"]},\"1591\":{\"h\":\"（5）设置别名\",\"t\":[\"git config 命令为我们提供了一种创建别名的方法，这种别名通常用于缩短现有的命令或者创建自定义命令。来看一个例子：\",\"git config --global alias.cm \\\"commit -m\\\"\",\"这里为 commit -m 创建一个别名 cm，这样在提交暂存区文件时，只需要输入以下命令即可：\",\"git cm <message>\"]},\"1592\":{\"h\":\"2. 分支操作\",\"t\":[\"分支是源代码控制的核心概念，它允许将工作分离到不同的分支中，这样就可以自由地处理源代码，而不会影响其他任何人的工作或主分支中的代码。下面来看一些常见的分支操作。\"]},\"1593\":{\"h\":\"（1）查看分支\",\"t\":[\"可以使用以下命令来查看当然所在的分支以及该项目所有的分支情况：\",\"git branch\",\"可以使用以下命令来列出所有的远程分支：\",\"git branch -r\",\"可以使用以下命令来查看所有的本地分支和远程分支：\",\"git branch -a\"]},\"1594\":{\"h\":\"（2）创建分支\",\"t\":[\"我们在计算机上只能访问本地分支，在将分支推送到远程仓库之前，需要先创建一个本地分支。\",\"可以使用以下命令来创建分支：\",\"git checkout <branch>\",\"加上-b 就可以在创建新的分支之后，直接切换到新创建的分支上：\",\"git checkout -b <branch>\",\"如果想将新建的本地分支推送到远程仓库，以在远程仓库添加这个分支。可以执行以下命令：\",\"git push -u origin <branch>\"]},\"1595\":{\"h\":\"（3）删除分支\",\"t\":[\"可以使用以下命令来删除本地分支：\",\"git branch -d <branch>\",\"需要注意，在删除分支之前，要先切换到其他分支\",\"有时 Git 会拒绝删除本地分支，因为要删的分支可能有未提交的代码。这是为了保护代码以避免意外丢失数据。可以使用以下命令来强制删除本地分支：\",\"git branch -D <branch>\",\"删除远程仓库分支\",\"git push origin --delete <name>\"]},\"1596\":{\"h\":\"（4）合并分支\",\"t\":[\"可以使用以下命令将其他分支的代码合并到当前分支：\",\"git merge <branch>\",\"如果想将 A 分支合并到 B 分支，就要先切换到 B 分支，然后执行命令：git merge A。\"]},\"1597\":{\"h\":\"（5）重命名分支\",\"t\":[\"可以使用以下命令来将分支重命名：\",\"git branch -m <oldname> <newname>\",\"如果 newname 名字分支已经存在，则需要使用-M 来强制重命名：\",\"git branch -M <oldname> <newname>\"]},\"1598\":{\"h\":\"3. 基础操作\",\"t\":[\"Git 数据工作流程如下：\"]},\"1599\":{\"h\":\"（1）暂存文件\",\"t\":[\"可以使用以下命令来暂存已修改的文件，命令最后需要指定要暂存的文件名称：\",\"git add <filename>\",\"如果想要将所有未跟踪和修改的文件添加到暂存区，可以执行以下命令：\",\"git add .\"]},\"1600\":{\"h\":\"（2）提交暂存\",\"t\":[\"可以使用以下命令将暂存区的文件修改提交到本地仓库，\",\"git commit -m \\\"meaasge\\\"\",\"其中-m 参数表示 message 日志信息，参数后面要加一个日志信息，用双引号括起来。\",\"如果上次提交暂存的 messge 写错了怎么办呢？可以使用使用以下命令来更新提交，而不需要撤销并重新提交：\",\"git commit --amend -m <message>\",\"如果有一个新的文件修改，也想提交到上一个 commit 中，可以使用以下命令来保持相同的提交信息：\",\"git add . git commit --amend --no-edit\"]},\"1601\":{\"h\":\"（3）存储更改\",\"t\":[\"假如我们正在开发迭代功能，但是还没开发完。这时有一个紧急的 bug 需要修复上线。可能就需要切换到一个 hotfix 分支去修复 bug。这时对于开发了一部分的功能创建提交是没有逻辑意义的。可以使用以下任一命令来存储修改的内容：\",\"git stash git stash push git stash push -m \\\"<stash message>\\\"\",\"该命令回保存所有未提交的更改并恢复到上次提交时存储库的状态。\",\"当想再次继续开发此功能时，就可以使用以下命令检查所有存储：\",\"git stash list\",\"这时终端中就会显示带有时间戳的所有已经暂存的列表。可以使用以下任一命令来取回所有的更改：\",\"git stash apply git stash pop\",\"apply 和 pop 之间的区别在于，pop 应用了 stash 中的更改并将其也从 stash 中删除，但 apply 即使在应用后仍将更改保留在 stash 中。\",\"可以使用以下任一命令应用存储列表中的第 N 个存储：\",\"git stash apply stash@{N} git stash apply <n>\"]},\"1602\":{\"h\":\"（4）合并指定提交\",\"t\":[\"在不同分支之间进行代码合并时，通常会有两种情况：一种情况是需要另一个分支的所有代码变动，那么就可以直接合并（git merge），另一种情况是只需要部分代码的变动（某几次提交），这时就可以使用以下命令来合并指定的提交：\",\"git cherry-pick <commit hash>\",\"建议添加 -x 标志，因为它会生成标准化的提交消息，通知用户它是从哪里 pick 出来的：\",\"git cherry-pick -x <commit hash>\",\"那么这个 commit hash 是从哪里来的呢？可以在需要被合并的分支上执行以下命令：\",\"git log\"]},\"1603\":{\"h\":\"（5）检查提交\",\"t\":[\"Git 允许我们在本地检查特定的提交。输入以下命令就可以查看有关当前提交的详细信息：\",\"git show\",\"还可以使用 HEAD~n 语法或提交哈希来检查过去的提交。使用以下命令就可以获取往前数的第三次提交的详细信息：\",\"git show HEAD~3\",\"除此之外，还可以添加一个--oneline 标志，以简化输出信息：\",\"git show --oneline\"]},\"1604\":{\"h\":\"（6）查看贡献者\",\"t\":[\"可以使用以下命令来返回每个贡献者的 commit 次数以及每次 commit 的 commit message：\",\"git shortlog\",\"其可以添加两个参数：\",\"s：省略每次 commit 的注释，仅仅返回一个简单的统计。\",\"n：按照 commit 数量从多到少的顺利对用户进行排序。\",\"加上这两个参数之后就可以看到每个用户中的提交次数以及排名情况：\",\"git shortlog -sn\",\"除此之外，还可以添加一个--no-merges 标志，以忽略合并提交的次数：\",\"git shortlog -sn --no-merges\"]},\"1605\":{\"h\":\"4. 远程操作\"},\"1606\":{\"h\":\"（1）查看远程仓库\",\"t\":[\"可以使用以下命令来查看远程仓库：\",\"git remote\",\"可以执行以下命令来获取远程仓库的地址：\",\"git remote -v\",\"可以使用以下命令来查看更加详细的信息：\",\"git remote show origin\"]},\"1607\":{\"h\":\"（2）添加远程仓库\",\"t\":[\"可以使用以下命令来将本地项目链接到远程仓库：\",\"git remote add <remote_name> <remote_url>\",\"其中：\",\"remote_name：仓库名称（默认是 origin）\",\"remote_url：远程仓库地址\",\"该命令允许 Git 跟踪远程存储库并将本地存储库连接到远程仓库。\"]},\"1608\":{\"h\":\"（3）移除远程仓库\",\"t\":[\"可以使用命令来移除远程仓库：\",\"git remote rm origin\",\"需要注意，该命令只是从本地移除远程仓库的记录（也就是解除本地仓库和远程仓库的关系），并不会真正影响到远程仓库。\"]},\"1609\":{\"h\":\"（4）从远程仓库抓取与拉取\",\"t\":[\"可以使用以下命令来从远程仓库获取最新版本到本地仓库，不会自动 merge（合并数据）：\",\"git fetch\",\"由于该命令不会自定合并数据，所以该命令执行完后需要手动执行 git merge 远程分支到所在的分支。\",\"可以使用以下命令来将远程指定分支拉取到本地指定分支上：\",\"git pull origin <远程分支名>:<本地分支名>\",\"使用以下命令来将远程指定分支拉取到本地当前分支上：\",\"git pull origin <远程分支名>\",\"使用以下命令开将与本地当前分支同名的远程分支拉取到本地当前分支上：\",\"git pull\",\"注意：如果当前本地仓库不是从远程仓库克隆，而是本地创建的仓库，并且仓库中存在文件，此时再从远程仓库拉取文件的时候会报错（fatal: refusing to merge unrelated histories ），解决此问题可以在 git pull 命令后加入参数--allow-unrelated-histories，即：\",\"git pull --allow-unrelated-histories\"]},\"1610\":{\"h\":\"（5）推送到远程仓库\",\"t\":[\"可以使用以下命令将本地指定分支推送到远程指定分支上：\",\"git push origin <本地分支名>:<远程分支名>\",\"可以使用以下命令将本地指定分支推送到与本地当前分支同名的远程分支上：\",\"git push origin <本地分支名>\",\"使用以下命令将本地当前分支推送到与本地当前分支同名的远程分支上：\",\"git push\",\"可以使用以下命令来将本地分支与远程同名分支相关联：\",\"git push -u origin <本地分支名>\",\"由于远程库是空的，第一次推送 master 分支时，加上了-u 参数，Git 不但会把本地的 master 分支内容推送的远程新的 master 分支，还会把本地的 master 分支和远程的 master 分支关联起来，在以后的推送或者拉取时就可以简化命令为 git push。\"]},\"1611\":{\"h\":\"三、Git 进阶\"},\"1612\":{\"h\":\"1. 修改操作\",\"t\":[\"如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示\"]},\"1613\":{\"h\":\"（1）删除文件\",\"t\":[\"可以使用以下命令将文件从暂存区和工作区中删除：\",\"git rm <filename>\",\"如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f：\",\"git rm -f <filename>\",\"如果想把文件从暂存区域移除，但仍然希望保留在当前工作目录中，换句话说，仅是从跟踪清单中删除，使用 --cached 选项即可：\",\"git rm --cached <filename>\",\"可以使用以下命令进行递归删除，即如果后面跟的是一个目录做为参数，则会递归删除整个目录中的所有子目录和文件：\",\"git rm –r *\",\"进入某个目录中，执行此语句，就会删除该目录下的所有文件和子目录。\"]},\"1614\":{\"h\":\"（2）取消修改\",\"t\":[\"取消修改有三种情况：\",\"未使用 git add 将修改文件添加到暂存区\",\"这种情况下，可以使用以下命令来撤销所有还没有加入到缓存区的修改：\",\"git checkout -- <filename>\",\"需要注意，此文件不会删除新建的文件，因为新建的文件还没加入到Git管理系统重，所以对Git来说事未知的，需要手动删除。\",\"已使用 git add 将修改文件添加到暂存区，未使用 git commit 提交缓存\",\"这种情况下，相当于撤销了 git add 命令对于文件修改的缓存：\",\"git reset HEAD <filename>\",\"上面的命令可以撤销指定文件的缓存，要想放弃所有文件的缓存，可以执行以下命令：\",\"git reset HEAD\",\"需要注意，在使用此命令后，本地的修改并不会消失，而会回到第一种情况。要想撤销本地的修改，执行第一种情况中的命令即可。\",\"除此之外，还可以指定返回到N次提交之前的阶段，执行以下命令即可：\",\"git reset HEAD~N\",\"这样就能退回到n个版本之前，同样不会修改本地文件的内容，这些新的内容会变成未更新到缓存区的状态。\",\"已使用 git commit 提交缓存 这种情况下，可以使用以下命令来回退到上一次 commit 的状态：\",\"git reset --hard HEAD^\",\"也可以使用以下命令来回退到任意版本：\",\"git reset --hard <commit_id>\",\"注意，使用 git log 命令来查看 git 提交历史和 commit id。\"]},\"1615\":{\"h\":\"（3）恢复删除内容\",\"t\":[\"这是一个很重要的命令，假如你回退到某个旧版本，现在想恢复到新版本，又找不到新版本的commit id怎么办？Git提供了下面的命令用来记录每一次命令：\",\"git reflog show HEAD git reflog\",\"假如需要把代码回退到HEAD@{5}处，可以执行以下命令：\",\"git reset --hard HEAD@{5}\",\"或者执行下面的命令：\",\"git reset --hard 8a0fd74\",\"需要注意，如果有任何本地修改，该命令也会将其销毁，因此在reset之前建议使用stash将本地修改储存。\"]},\"1616\":{\"h\":\"2. 标签操作\",\"t\":[\"标签指的是某个分支某个特定时间点的状态，通过标签可以很方便的了解到标记时的状态。\",\"标签有两种类型 ：\",\"轻量标签 ： 只是某个commit 的引用，可以理解为是一个commit的别名；\",\"附注标签 ：存储在Git仓库中的一个完整对象，包含打标签者的名字、电子邮件地址、日期时间 以及其他的标签信息。它是可以被校验的，可以使用 GNU Privacy Guard (GPG) 签名并验证。\"]},\"1617\":{\"h\":\"（1）展示标签\",\"t\":[\"可以使用以下命令来获取所有标签：\",\"git tag\",\"可以使用以下命令来查看某一个标签的详细信息：\",\"git show <tag_name>\",\"还可以根据条件来显示标签，比如列出以v1.开头的所有tag：\",\"git tag -l \\\"v1.\\\"\"]},\"1618\":{\"h\":\"（2）创建标签\",\"t\":[\"可以使用以下命令在本地创建新标签：\",\"git tag <tag_name>\",\"例如：\",\"git tag v1.0.0\",\"通常遵循的命名模式如下：\",\"v<major>.<minor>.<patch>\",\"major（主版本号）：重大变化\",\"minor（次要版本号）：版本与先前版本兼容\",\"patch（补丁号）：bug修复\",\"除此之外，我们还可以为特定的commit创建标签，其命令格式如下：\",\"git tag <tagname> <commit_sha>\",\"以上面的的形式创建的标签都属于轻量标签，下面来看看如何创建一个附注标签。\",\"在创建标签时，可以添加一个-a标志以创建一个带备注的标签，备注信息使用-m message来指定：\",\"git tag -a <tagname> -m \\\"<message>\\\"\"]},\"1619\":{\"h\":\"（3）推送标签\",\"t\":[\"标签创建完成之后就可以使用以下命令将其推送到远程仓库：\",\"git push origin --tags\",\"以上命令会将本地所有tag都推送到远程仓库。如果想推送指定标签，可以执行以下命令：\",\"git push origin <tagname>\"]},\"1620\":{\"h\":\"（4）切换标签\",\"t\":[\"可以使用以下命令来切换标签：\",\"git checkout <tagname>\"]},\"1621\":{\"h\":\"（5）删除标签\",\"t\":[\"可以使用以下命令来删除本地仓库指定标签：\",\"git tag -d <tagname>\",\"可以使用以下命令来删除远程仓库指定标签：\",\"git push origin :refs/tags/<tagname>\",\"也可以使用以下命令来删除远程仓库的指定标签：\",\"git push origin --delete <tagname>\"]},\"1622\":{\"h\":\"（6）拉取标签\",\"t\":[\"可以使用以下命令来将远程仓库的标签拉取（同步）到当前分支：\",\"git fetch --tags\"]},\"1623\":{\"h\":\"（7）检出标签\",\"t\":[\"检出标签实际上就是在标签的基础上进行其他开发或操作。需要以标签指定的版本为基础版本，新建一个分支，继续其他的操作。执行以下命令即可：\",\"git checkout -b <branch> <tagname>\"]},\"1624\":{\"h\":\"3. 日志记录\"},\"1625\":{\"h\":\"（1）基础日志\",\"t\":[\"可以使用以下命令来查看分支的历史提交信息：\",\"git log\",\"这是其最基础的用法，输出如下：\"]},\"1626\":{\"h\":\"（2）按作者查看\",\"t\":[\"如果想只看某个人的提交，可以添加过滤条件：\",\"git log --author=\\\"username\\\"\",\"当然也可以搜索多个作者的提交信息，只需要在用|分隔用户名即可，注意需要使用\\\\来对|进行转义：\",\"git log --author=\\\"username1\\\\|usernmae2\\\"\",\"这里列出的是每次提交的详细信息，如果指向看到每个提交的概要，可以在命令中添加--oneline标志：\",\"git log --author=\\\"username\\\" --oneline\",\"（3）按时间查看 除了可以按照作者来查看日志之外，还可以按照时间查看日志。可以查看某个时间之前的日志，也可以查看某个日期之后的日志：\",\"//某个日期之后 git log --since=<date> git log --after=<date> //某个日期之前 git log --until=<date> git log --before=<date>\",\"如果想查看某个具体时间区间之间的日志，可以组合以上参数：\",\"git log --since=\\\"2022.05.15\\\" --until=\\\"2022.05.20\\\"\"]},\"1627\":{\"h\":\"（4）按文件查看\",\"t\":[\"如果我们想查看某个文件都在哪些提交中修改了内容，也是可以的。使用以下命令即可：\",\"git log -- <path>\"]},\"1628\":{\"h\":\"（5）按合并查看\",\"t\":[\"在历史提交中可能会有很多次合并的提交记录，想要只查看代码合并的记录，可以执行以下命令：\",\"git log --merges\",\"如果想查看非合并操作的操作记录，可以执行以下命令：\",\"git log --no-merges\"]},\"1629\":{\"h\":\"（6）按分支查看\",\"t\":[\"可以按照分支查看日志，如果想查看test分支比master分支多提交了哪些内容，就可以执行以下命令：\",\"git log master..test\",\"相反，如果想看master分支比test分支多提交了哪些内容，就可以执行以下命令：\",\"git log test..master\"]},\"1630\":{\"h\":\"（7）美化日志\",\"t\":[\"git log命令可以用来查看提交历史，此命令的问题在于，随着项目复杂性的增加，输出变得越来越难阅读。可以使用以下命令来美化日志的输出：\",\"git log --graph --oneline --decorate\"]},\"1631\":{\"h\":\"（8）其他标志\",\"t\":[\"上面我们提到了，可以使用--oneline标志来简化日志的输出： 可以使用--stat标志来简要显示文件增改行数统计，每个提交都列出了修改过的文件，以及其中添加和移除的行数，并在最后列出所有增减行数小计： 可以添加-N标志来仅显示最近N次的提交，其中N是一个正整数，例如查看最近三次提交： 可以使用-p标志来展开显示每次提交的内容差异对比： 注意，以上这些命令标识符都可以组合使用。\"]},\"1632\":{\"h\":\"4. 差异对比\",\"t\":[\"git diff 命令可以用来比较文件的不同，即比较文件在暂存区和工作区的差异。\"]},\"1633\":{\"h\":\"（1）未缓存改动\",\"t\":[\"当工作区有改动，暂存区为空时， diff对比的是工作区与最后一次commit提交的共同文件； 当工作区有改动，暂存区不为空时，diff对比的是工作区与暂存区的共同文件。\"]},\"1634\":{\"h\":\"（2）已缓存改动\",\"t\":[\"当已缓存改动时，可以使用以下任一命令来显示暂存区（已add但未commit文件）和最后一次commit(HEAD)之间的所有不相同文件的差异对比：\"]},\"1635\":{\"h\":\"（3）已缓存和未缓存改动\",\"t\":[\"可以使用以下命令来显示工作目录(已修改但未add文件)和暂存区(已add但未commit文件)与最后一次commit之间的的所有不相同文件的差异对比：\"]},\"1636\":{\"h\":\"（4）不同分支差异\",\"t\":[\"可以使用以下命令来比较两个分支上最后 commit 的内容的差别：\",\"git diff <分支名1> <分支名2>\",\"这样就可以显示出两个分支的详细差异，如果只是想看有哪些文件存在差异，可以在命令中添加--stat标志，这样就不会显示每个文件的内容的详细对比：\",\"git diff <分支名1> <分支名2> --stat\"]},\"1637\":{\"h\":\"5. 定位问题\",\"t\":[\"git bisect 可以用来查找哪一次代码提交引入了错误。它的原理很简单就是将代码提交的历史使用二分法来缩小出问题的代替提交范围，确定问题出在前半部分还是后半部分，不断执行这个过程，直到找到引入问题的那一次提交。\",\"其命令合适如下：\",\"git bisect start <end> <start>\",\"其中end就是最近的提交，start就是最开始的提交。假如第一次的提交的 commit id为685f868，总共有21次提交。那么执行以下命令，从第一次提交到最近一次提交：\",\"git bisect start HEAD 685f868\",\"执行完之后，验证那个问题是否存在，如果发现问题不存在了，就执行以下命令来标识第11次提交是没问题的：\",\"git bisect good\",\"这样就说明前半段是没有问题的，问题出在后半段，也就是第11-21次提交中。这时再去刷新浏览器，如果问题出现了，使用以下命令来标记：\",\"git bisect bad\",\"这样就说明第11-16次提交是有问题的。继续重复上面的步骤，直到成功找出那一次提交位为止，这时Git就会给出如下的提示：\",\"c8ad045 is the first bad commit\",\"这时就确认了是这一次提交导致的问题，可以去查看时那些修改导致的问题。\",\"之后就可以使用以下命令退出错误查找过程，回到最近一次代码提交：\",\"git bisect reset\"]},\"1638\":{\"c\":[\"git\"]},\"1639\":{\"c\":[\"git\"]},\"1640\":{\"h\":\"垃圾回收\"},\"1641\":{\"h\":\"V8 引擎\",\"t\":[\"V8 是用 C++编写的 Google 开源高性能 Javascript 和 WebAssembly 引擎，它用于 Chrome 和 Node.js 等 它实现 ECMScript 和 WebAssembly，并可以跨平台运行 V8 可以独立运行，也可以嵌入到任何 C++应用程序中\",\"JS 引擎比较广泛采用的就是可达性中的标记清除算法，当然类似于 V8 引擎为了进行更好的优化，他在算法的实现细节上也会结合一些其他的算法。\",\"标记整理和标记清除相似，不同的式回收期间同时会将保留的存储对象搬运汇集到连续的内存空间，从而整合空闲空间，避免内存碎片化。\",\"分代收集，对象被分成两组：“新的”和“旧的”。许多对象出现，完成他们的工作并很快死去，他们可以很快被清理。那些长期存活的对象会变得“老旧”，而且被检查的频次也会减少。\",\"增量收集，如果有许多对象，并且我们试图一次遍历并标记整个对象集，则可能需要一些时间，并在执行过程中带来明显的延迟。所以引擎试图将垃圾收集工作分成几部分来做，然后将这几部分会逐一进行处理，这样会有许多微笑的延迟而不是一个大的延迟。\"]},\"1642\":{\"h\":\"垃圾回收\"},\"1643\":{\"h\":\"概念\",\"t\":[\"JavaScript 代码运行时，需要分配内存空间来储存变量和值。当变量不在参与运行时，就需要系统收回被占用的内存空间，这就是垃圾回收。\"]},\"1644\":{\"h\":\"为什么回收\",\"t\":[\"我们知道写代码时创建一个基本类型、对象、函数……都是需要占用内存的，但是我们并不关注这些，因为这是引擎为我们分配的，我们不需要显式手动的去分配内存。JavaScript 的引用数据类型是保存在堆内存中的，然后在栈内存中保存一个对堆内存中实际对象的引用，所以，JavaScript 中对引用数据类型的操作都是操作对象的引用而不是实际的对象。可以简单理解为，栈内存中保存了一个地址，这个地址和堆内存中的实际值是相关的。\",\"那上面代码首先我们声明了一个变量 test，它引用了对象 {name: 'isboyjc'}，接着我们把这个变量重新赋值了一个数组对象，也就变成了该变量引用了一个数组，那么之前的对象引用关系就没有了，如下图 没有了引用关系，也就是无用的对象，这个时候假如任由它搁置，一个两个还好，多了的话内存也会受不了，所以就需要被清理（回收）。\"]},\"1645\":{\"h\":\"回收机制\",\"t\":[\"Javascript 具有自动垃圾回收机制，会定期对那些不再使用的变量、对象所占用的内存进行释放，原理就是找到不再使用的变量，然后释放掉其占用的内存。\",\"JavaScript 中存在两种变量：局部变量和全局变量。全局变量的生命周期会持续要页面卸载；而局部变量声明在函数中，它的生命周期从函数执行开始，直到函数执行结束，在这个过程中，局部变量会在堆或栈中存储它们的值，当函数执行结束后，这些局部变量不再被使用，它们所占有的空间就会被释放。\",\"当局部变量被外部函数使用时，其中一种情况就是闭包，在函数执行结束后，函数外部的变量依然指向函数内部的局部变量，此时局部变量依然在被使用，所以不会回收。\"]},\"1646\":{\"h\":\"回收策略\",\"t\":[\"在 JavaScript 内存管理中有一个概念叫做 可达性，就是那些以某种方式可访问或者说可用的值，它们被保证存储在内存中，反之不可访问则需回收。 至于如何回收，其实就是怎样发现这些不可达的对象（垃圾）它并给予清理的问题， JavaScript 垃圾回收机制的原理说白了也就是定期找出那些不再用到的内存（变量），然后释放其内存。\",\"标记清除算法\",\"标记清除（Mark-Sweep），目前在 JavaScript 引擎 里这种算法是最常用的，到目前为止的大多数浏览器的 JavaScript 引擎 都在采用标记清除算法，只是各大浏览器厂商还对此算法进行了优化加工，且不同浏览器的 JavaScript 引擎 在运行垃圾回收的频率上有所差异。\",\"就像它的名字一样，此算法分为 标记 和 清除 两个阶段，标记阶段即为所有活动对象做上标记，清除阶段则把没有标记（也就是非活动对象）销毁。\",\"整个标记清除算法大致过程就像下面这样\",\"垃圾收集器在运行时会给内存中的所有变量都加上一个标记，假设内存中所有对象都是垃圾，全标记为 0\",\"然后从各个根对象开始遍历，把不是垃圾的节点改成 1\",\"清理所有标记为 0 的垃圾，销毁并回收它们所占用的内存空间\",\"最后，把所有内存中对象标记修改为 0，等待下一轮垃圾回收\",\"优点\",\"标记清除算法的优点只有一个，那就是实现比较简单，打标记也无非打与不打两种情况，这使得一位二进制位（0 和 1）就可以为其标记，非常简单\",\"缺点\",\"标记清除算法有一个很大的缺点，就是在清除之后，剩余的对象内存位置是不变的，也会导致空闲内存空间是不连续的，出现了 内存碎片（如下图），并且由于剩余空闲内存不是一整块，它是由不同大小内存组成的内存列表，这就牵扯出了内存分配的问题\",\"假设我们新建对象分配内存时需要大小为 size，由于空闲内存是间断的、不连续的，则需要对空闲内存列表进行一次单向遍历找出大于等于 size 的块才能为其分配（如下图）\",\"那如何找到合适的块呢？我们可以采取下面三种分配策略\",\"First-fit，找到大于等于 size 的块立即返回\",\"Best-fit，遍历整个空闲列表，返回大于等于 size 的最小分块\",\"Worst-fit，遍历整个空闲列表，找到最大的分块，然后切成两部分，一部分 size 大小，并将该部分返回\",\"这三种策略里面 Worst-fit 的空间利用率看起来是最合理，但实际上切分之后会造成更多的小块，形成内存碎片，所以不推荐使用，对于 First-fit 和 Best-fit 来说，考虑到分配的速度和效率 First-fit 是更为明智的选择。\",\"综上所述，标记清除算法或者说策略就有两个很明显的缺点\",\"内存碎片化，空闲内存块是不连续的，容易出现很多空闲内存块，还可能会出现分配所需内存过大的对象时找不到合适的块\",\"分配速度慢，因为即便是使用 First-fit 策略，其操作仍是一个 O(n) 的操作，最坏情况是每次都要遍历到最后，同时因为碎片化，大对象的分配效率会更慢\",\"归根结底，标记清除算法的缺点在于清除之后剩余的对象位置不变而导致的空闲内存不连续，所以只要解决这一点，两个缺点都可以完美解决了。而标记整理（Mark-Compact）算法 就可以有效地解决，它的标记阶段和标记清除算法没有什么不同，只是标记结束后，标记整理算法会将活着的对象（即不需要清理的对象）向内存的一端移动，最后清理掉边界的内存（如下图）\",\"引用计数算法\",\"引用计数（Reference Counting），这其实是早先的一种垃圾回收算法，它把对象是否不再需要简化定义为对象有没有其他对象引用到它，如果没有引用指向该对象（零引用），对象将被垃圾回收机制回收，目前很少使用这种算法了。\",\"当声明了一个变量并且将一个引用类型赋值给该变量的时候这个值的引用次数就为 1\",\"如果同一个值又被赋给另一个变量，那么引用数加 1\",\"如果该变量的值被其他的值覆盖了，则引用次数减 1\",\"当这个值的引用次数变为 0 的时候，说明没有变量在使用，这个值没法被访问了，回收空间，垃圾回收器会在运行的时候清理掉引用次数为 0 的值占用的内存\",\"这种方式是不是很简单？确实很简单，不过在引用计数这种算法出现没多久，就遇到了一个很严重的问题——循环引用，即对象 A 有一个指针指向对象 B，而对象 B 也引用了对象 A ，如下面这个例子\",\"function test() { let A = new Object() let B = new Object() A.b = B B.a = A }\",\"如上所示，对象 A 和 B 通过各自的属性相互引用着，按照上文的引用计数策略，它们的引用数量都是 2，但是，在函数 test 执行完成之后，对象 A 和 B 是要被清理的，但使用引用计数则不会被清理，因为它们的引用数量不会变成 0，假如此函数在程序中被多次调用，那么就会造成大量的内存不会被释放。\",\"我们再用标记清除的角度看一下，当函数结束后，两个对象都不在作用域中，A 和 B 都会被当作非活动对象来清除掉，相比之下，引用计数则不会释放，也就会造成大量无用内存占用，这也是后来放弃引用计数，使用标记清除的原因之一。\",\"优点:引用计数算法的优点我们对比标记清除来看就会清晰很多，首先引用计数在引用值为 0 时，也就是在变成垃圾的那一刻就会被回收，所以它可以立即回收垃圾。而标记清除算法需要每隔一段时间进行一次，那在应用程序（JS 脚本）运行过程中线程就必须要暂停去执行一段时间的 GC，另外，标记清除算法需要遍历堆里的活动以及非活动对象来清除，而引用计数则只需要在引用时计数就可以了。\",\"缺点:引用计数的缺点想必大家也都很明朗了，首先它需要一个计数器，而此计数器需要占很大的位置，因为我们也不知道被引用数量的上限，还有就是无法解决循环引用无法回收的问题，这也是最严重的。\"]},\"1647\":{\"h\":\"V8 对 GC 的优化\"},\"1648\":{\"h\":\"分代式垃圾回收\",\"t\":[\"新老生代\",\"V8 的垃圾回收策略主要基于分代式垃圾回收机制，V8 中将堆内存分为新生代和老生代两区域，采用不同的垃圾回收器也就是不同的策略管理垃圾回收。\",\"新生代的对象为存活时间较短的对象，简单来说就是新产生的对象，通常只支持 1 ～ 8M 的容量，而老生代的对象为存活事件较长或常驻内存的对象，简单来说就是经历过新生代垃圾回收后还存活下来的对象，容量通常比较大。\",\"对于新老两块内存区域的垃圾回收，V8 采用了两个垃圾回收器来管控，我们暂且将管理新生代的垃圾回收器叫做新生代垃圾回收器，同样的，我们称管理老生代的垃圾回收器叫做老生代垃圾回收器。\",\"新生代垃圾回收\",\"新生代对象是通过一个名为 Scavenge 的算法进行垃圾回收，在 Scavenge 算法 的具体实现中，主要采用了一种复制式的方法即 Cheney 算法。Cheney 算法中将堆内存一分为二，一个是处于使用状态的空间我们暂且称之为 使用区，一个是处于闲置状态的空间我们称之为 空闲区，如下图所示\",\"新加入的对象都会存放到使用区，当使用区快被写满时，就需要执行一次垃圾清理操作,当开始进行垃圾回收时，新生代垃圾回收器会对使用区中的活动对象做标记，标记完成之后将使用区的活动对象复制进空闲区并进行排序，随后进入垃圾清理阶段，即将非活动对象占用的空间清理掉。最后进行角色互换，把原来的使用区变成空闲区，把原来的空闲区变成使用区。当一个对象经过多次复制后依然存活，它将会被认为是生命周期较长的对象，随后会被移动到老生代中，采用老生代的垃圾回收策略进行管理。\",\"另外还有一种情况，如果复制一个对象到空闲区时，空闲区空间占用超过了 25%，那么这个对象会被直接晋升到老生代空间中，设置为 25% 的比例的原因是，当完成 Scavenge 回收后，空闲区将翻转成使用区，继续进行对象内存的分配，若占比过大，将会影响后续内存分配。\",\"老生代垃圾回收\",\"相比于新生代，老生代的垃圾回收就比较容易理解了，上面我们说过，对于大多数占用空间大、存活时间长的对象会被分配到老生代里，因为老生代中的对象通常比较大，如果再如新生代一般分区然后复制来复制去就会非常耗时，从而导致回收执行效率不高，所以老生代垃圾回收器来管理其垃圾回收执行，它的整个流程就采用的就是上文所说的标记清除算法了。\",\"首先是标记阶段，从一组根元素开始，递归遍历这组根元素，遍历过程中能到达的元素称为活动对象，没有到达的元素就可以判断为非活动对象。清除阶段老生代垃圾回收器会直接将非活动对象，也就是数据清理掉。前面我们也提过，标记清除算法在清除后会产生大量不连续的内存碎片，过多的碎片会导致大对象无法分配到足够的连续内存，而 V8 中就采用了我们上文中说的标记整理算法来解决这一问题来优化空间。\",\"为什么需要分代式？\",\"分代式机制把一些新、小、存活时间短的对象作为新生代，采用一小块内存频率较高的快速清理，而一些大、老、存活时间长的对象作为老生代，使其很少接受检查，新老生代的回收机制及频率是不同的，可以说此机制的出现很大程度提高了垃圾回收机制的效率。\"]},\"1649\":{\"h\":\"并行回收(Parallel)\",\"t\":[\"在介绍并行之前，我们先要了解一个概念 全停顿（Stop-The-World），我们都知道 JavaScript 是一门单线程的语言，它是运行在主线程上的，那在进行垃圾回收时就会阻塞 JavaScript 脚本的执行，需等待垃圾回收完毕后再恢复脚本执行，我们把这种行为叫做 全停顿。\",\"比如一次 GC 需要 60ms ，那我们的应用逻辑就得暂停 60ms ，假如一次 GC 的时间过长，对用户来说就可能造成页面卡顿等问题。\",\"既然存在执行一次 GC 比较耗时的情况，考虑到一个人盖房子难，那两个人、十个人...呢？切换到程序这边，那我们可不可以引入多个辅助线程来同时处理，这样是不是就会加速垃圾回收的执行速度呢？因此 V8 团队引入了并行回收机制。\",\"所谓并行，也就是同时的意思，它指的是垃圾回收器在主线程上执行的过程中，开启多个辅助线程，同时执行同样的回收工作。\",\"简单来说，使用并行回收，假如本来是主线程一个人干活，它一个人需要 3 秒，现在叫上了 2 个辅助线程和主线程一块干活，那三个人一块干一个人干 1 秒就完事了，但是由于多人协同办公，所以需要加上一部分多人协同（同步开销）的时间我们算 0.5 秒好了，也就是说，采用并行策略后，本来要 3 秒的活现在 1.5 秒就可以干完了。\",\"不过虽然 1.5 秒就可以干完了，时间也大大缩小了，但是这 1.5 秒内，主线程还是需要让出来的，也正是因为主线程还是需要让出来，这个过程内存是静态的，不需要考虑内存中对象的引用关系改变，只需要考虑协同，实现起来也很简单。\",\"新生代对象空间就采用并行策略，在执行垃圾回收的过程中，会启动了多个线程来负责新生代中的垃圾清理操作，这些线程同时将对象空间中的数据移动到空闲区域，这个过程中由于数据地址会发生改变，所以还需要同步更新引用这些对象的指针，此即并行回收。\"]},\"1650\":{\"h\":\"增量标记与懒性清理\",\"t\":[\"增量就是将一次 GC 标记的过程，分成了很多小步，每执行完一小步就让应用逻辑执行一会儿，这样交替多次后完成一轮 GC 标记（如下图）\",\"三色标记法(暂停与恢复)\",\"我们知道老生代是采用标记清理算法，而上文的标记清理中我们说过，也就是在没有采用增量算法之前，单纯使用黑色和白色来标记数据就可以了，其标记流程即在执行一次完整的 GC 标记前，垃圾回收器会将所有的数据置为白色，然后垃圾回收器在会从一组跟对象出发，将所有能访问到的数据标记为黑色，遍历结束之后，标记为黑色的数据对象就是活动对象，剩余的白色数据对象也就是待清理的垃圾对象。\",\"如果采用非黑即白的标记策略，那在垃圾回收器执行了一段增量回收后，暂停后启用主线程去执行了应用程序中的一段 JavaScript 代码，随后当垃圾回收器再次被启动，这时候内存中黑白色都有，我们无法得知下一步走到哪里了。\",\"为了解决这个问题，V8 团队采用了一种特殊方式： 三色标记法。\",\"白色指的是未被标记的对象\",\"灰色指自身被标记，成员变量（该对象的引用对象）未被标记\",\"黑色指自身和成员变量皆被标记\",\"如上图所示，我们用最简单的表达方式来解释这一过程，最初所有的对象都是白色，意味着回收器没有标记它们，从一组根对象开始，先将这组根对象标记为灰色并推入到标记工作表中，当回收器从标记工作表中弹出对象并访问它的引用对象时，将其自身由灰色转变成黑色，并将自身的下一个引用对象转为灰色。\",\"就这样一直往下走，直到没有可标记灰色的对象时，也就是无可达（无引用到）的对象了，那么剩下的所有白色对象都是无法到达的，即等待回收（如上图中的 C、E 将要等待回收）。\",\"采用三色标记法后我们在恢复执行时就好办多了，可以直接通过当前内存中有没有灰色节点来判断整个标记是否完成，如没有灰色节点，直接进入清理阶段，如还有灰色标记，恢复时直接从灰色的节点开始继续执行就可以。\",\"三色标记法的 mark 操作可以渐进执行的而不需每次都扫描整个内存空间，可以很好的配合增量回收进行暂停恢复的一些操作，从而减少 全停顿 的时间。\",\"写屏障(增量中修改引用)\",\"一次完整的 GC 标记分块暂停后，执行任务程序时内存中标记好的对象引用关系被修改了，增量中修改引用，可能不太好理解，我们举个例子（如图）\",\"假如我们有 A、B、C 三个对象依次引用，在第一次增量分段中全部标记为黑色（活动对象），而后暂停开始执行应用程序也就是 JavaScript 脚本，在脚本中我们将对象 B 的指向由对象 C 改为了对象 D ，接着恢复执行下一次增量分段\",\"这时其实对象 C 已经无引用关系了，但是目前它是黑色（代表活动对象）此一整轮 GC 是不会清理 C 的，不过我们可以不考虑这个，因为就算此轮不清理等下一轮 GC 也会清理，这对我们程序运行并没有太大影响 我们再看新的对象 D 是初始的白色，按照我们上面所说，已经没有灰色对象了，也就是全部标记完毕接下来要进行清理了，新修改的白色对象 D 将在次轮 GC 的清理阶段被回收，还有引用关系就被回收，后面我们程序里可能还会用到对象 D 呢，这肯定是不对的\",\"为了解决这个问题，V8 增量回收使用 写屏障 (Write-barrier) 机制，即一旦有黑色对象引用白色对象，该机制会强制将引用的白色对象改为灰色，从而保证下一次增量 GC 标记阶段可以正确标记，这个机制也被称作 强三色不变性\",\"那在我们上图的例子中，将对象 B 的指向由对象 C 改为对象 D 后，白色对象 D 会被强制改为灰色\",\"增量标记与惰性清理的优缺？\",\"增量标记与惰性清理的出现，使得主线程的停顿时间大大减少了，让用户与浏览器交互的过程变得更加流畅。但是由于每个小的增量标记之间执行了 JavaScript 代码，堆中的对象指针可能发生了变化，需要使用写屏障技术来记录这些引用关系的变化，所以增量标记缺点也很明显： 首先是并没有减少主线程的总暂停的时间，甚至会略微增加，其次由于写屏障机制的成本，增量标记可能会降低应用程序的吞吐量。\"]},\"1651\":{\"h\":\"并发回收(Concurrent)\",\"t\":[\"它指的是主线程在执行 JavaScript 的过程中，辅助线程能够在后台完成执行垃圾回收的操作，辅助线程在执行垃圾回收的时候，主线程也可以自由执行而不会被挂起（如下图）。\",\"辅助线程在执行垃圾回收的时候，主线程也可以自由执行而不会被挂起，这是并发的优点，但同样也是并发回收实现的难点，因为它需要考虑主线程在执行 JavaScript 时，堆中的对象引用关系随时都有可能发生变化，这时辅助线程之前做的一些标记或者正在进行的标记就会要有所改变，所以它需要额外实现一些读写锁机制来控制这一点。\"]},\"1652\":{\"h\":\"内存泄漏\"},\"1653\":{\"h\":\"内存泄漏的几种情况\",\"t\":[\"意外的全局变量\",\"function foo(arg) { bar = 'this is a hidden global variable' }\",\"变量没被声明,会变成一个全局变量,在页面关闭之前不会被释放。\",\"function foo() { this.variable = 'potential accidental global' } // foo 调用自己，this 指向了全局对象（window） foo()\",\"在 JavaScript 文件头部加上 'use strict'，可以避免此类错误发生。启用严格模式解析 JavaScript ，避免意外的全局变量。\",\"被遗忘的计时器或回调函数\",\"var someResource = getData(); setInterval(function() { var node = document.getElementById('Node'); if(node) { // 处理 node 和 someResource node.innerHTML = JSON.stringify(someResource)); } }, 1000);\",\"这样的代码很常见，如果 id 为 Node 的元素从 DOM 中移除，该定时器仍会存在，同时，因为回调函数中包含对 someResource 的引用，定时器外面的 someResource 也不会被释放。\",\"闭包\",\"function bindEvent() { var obj = document.createElement('xxx') obj.onclick = function () { // Even if it is a empty function } }\",\"闭包可以维持函数内局部变量，使其得不到释放。上例定义事件回调时，由于是函数内定义函数，并且内部函数--事件回调引用外部函数，形成了闭包。\",\"// 将事件处理函数定义在外面 function bindEvent() { var obj = document.createElement('xxx') obj.onclick = onclickHandler } // 或者在定义事件处理函数的外部函数中，删除对dom的引用 function bindEvent() { var obj = document.createElement('xxx') obj.onclick = function () { // Even if it is a empty function } obj = null }\",\"没有清理的 DOM 元素引用\"]},\"1654\":{\"c\":[\"浏览器\"]},\"1655\":{\"c\":[\"垃圾回收\"]},\"1656\":{\"h\":\"浏览器存储\"},\"1657\":{\"h\":\"cookie\"},\"1658\":{\"h\":\"什么是cookie\",\"t\":[\"cookie指某些网站为了辨别用户身份而储存在用户本地终端上的数据(通常经过加密)。 cookie是服务端生成，客户端进行维护和存储，存储在内存或者磁盘中。通过cookie,可以让服务器知道请求是来源哪个客户端，就可以进行客户端状态的维护，比如登陆后刷新，请求头就会携带登陆时response header中的Set-Cookie,Web服务器接到请求时也能读出cookie的值，根据cookie值的内容就可以判断和恢复一些用户的信息状态。\",\"典型的应用场景有：\",\"记住密码，下次自动登录。\",\"购物车功能。\",\"记录用户浏览数据，进行商品（广告）推荐。\"]},\"1659\":{\"h\":\"生成方式\",\"t\":[\"第一次访问网站的时候，浏览器发出请求，服务器端生成 cookie在响应中通过Set-Cookie头部告知客户端(允许多个Set-Cookie头部传递多个值)，客户端得到 cookie后,后续请求都会自动将 cookie头部携带至请求中发送给服务器（见下面例子），另外，cookie的过期时间、域、路径、有效期、适用站点都可以根据需要来指定。\",\"Cookie的生成方式主要有两种：\",\"http response header中的set-cookie\",\"我们可以通过响应头里的 Set-Cookie 指定要存储的 Cookie 值。默认情况下，domain 被设置为设置 Cookie 页面的主机名，我们也可以手动设置 domain 的值。\",\"Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2018 07:28:00 GMT;//可以指定一个特定的过期时间（Expires）或有效期（Max-Age）\",\"当Cookie的过期时间被设定时，设定的日期和时间只与客户端相关，而不是服务端。\",\"js中可以通过document.cookie可以读写cookie，以键值对的形式展示\",\"例如我们在掘金社区控制台输入以下三句代码，便可以在Chrome 的 Application 面板查看生成的cookie:\",\"document.cookie=\\\"userName=hello\\\" document.cookie=\\\"gender=male\\\" document.cookie='age=20;domain=.baidu.com'\",\"Domain 标识指定了哪些域名可以接受Cookie。如果没有设置domain，就会自动绑定到执行语句的当前域。 如果设置为”.baidu.com”,则所有以”baidu.com”结尾的域名都可以访问该Cookie，所以在掘金社区上读取不到第三条代码存储Cookie值。\"]},\"1660\":{\"h\":\"缺陷\",\"t\":[\"Cookie 不够大\",\"Cookie的大小限制在4KB左右，对于复杂的存储需求来说是不够用的。当 Cookie 超过 4KB 时，它将面临被裁切的命运。这样看来，Cookie 只能用来存取少量的信息。此外很多浏览器对一个站点的cookie个数也是有限制的。\",\"这里需注意：各浏览器的cookie每一个name=value的value值大概在4k，所以4k并不是一个域名下所有的cookie共享的,而是一个name的大小。\",\"过多的 Cookie 会带来巨大的性能浪费\",\"Cookie 是紧跟域名的。同一个域名下的所有请求，都会携带 Cookie。大家试想，如果我们此刻仅仅是请求一张图片或者一个 CSS 文件，我们也要携带一个 Cookie 跑来跑去（关键是 Cookie 里存储的信息并不需要），这是一件多么劳民伤财的事情。Cookie 虽然小，请求却可以有很多，随着请求的叠加，这样的不必要的 Cookie 带来的开销将是无法想象的。\",\"cookie是用来维护用户信息的，而域名(domain)下所有请求都会携带cookie，但对于静态文件的请求，携带cookie信息根本没有用，此时可以通过cdn（存储静态文件的）的域名和主站的域名分开来解决。\",\"由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题，除非用HTTPS。\"]},\"1661\":{\"h\":\"Cookie与安全\",\"t\":[\"HttpOnly 不支持读写，浏览器不允许脚本操作document.cookie去更改cookie，所以为避免跨域脚本 (XSS) 攻击，通过JavaScript的 Document.cookie API无法访问带有 HttpOnly 标记的Cookie，它们只应该发送给服务端。如果包含服务端 Session 信息的 Cookie 不想被客户端 JavaScript 脚本调用，那么就应该为其设置 HttpOnly 标记。\"]},\"1662\":{\"h\":\"LocalStorage\"},\"1663\":{\"h\":\"特点\",\"t\":[\"保存的数据长期存在，下一次访问该网站的时候，网页可以直接读取以前保存的数据。\",\"大小为5M左右\",\"仅在客户端使用，不和服务端进行通信\",\"接口封装较好\",\"基于上面的特点，LocalStorage可以作为浏览器本地缓存方案，用来提升网页首屏渲染速度(根据第一请求返回时，将一些不变信息直接存储在本地)。\"]},\"1664\":{\"h\":\"存入/读取数据\",\"t\":[\"localStorage保存的数据，以“键值对”的形式存在。也就是说，每一项数据都有一个键名和对应的值。所有的数据都是以文本格式保存。 存入数据使用setItem方法。它接受两个参数，第一个是键名，第二个是保存的数据。\",\"localStorage.setItem（'name','world'） localStorage.setItem（'gender','female' var name=localStorage.getItem('name') var gender=localStorage.getItem('gender')\"]},\"1665\":{\"h\":\"使用场景\",\"t\":[\"LocalStorage在存储方面没有什么特别的限制，理论上 Cookie 无法胜任的、可以用简单的键值对来存取的数据存储任务，都可以交给 LocalStorage 来做。\",\"这里给大家举个例子，考虑到 LocalStorage 的特点之一是持久，有时我们更倾向于用它来存储一些内容稳定的资源。比如图片内容丰富的电商网站会用它来存储 Base64 格式的图片字符串。\"]},\"1666\":{\"h\":\"SessionStorage\",\"t\":[\"sessionStorage保存的数据用于浏览器的一次会话，当会话结束（通常是该窗口关闭），数据被清空；sessionStorage 特别的一点在于，即便是相同域名下的两个页面，只要它们不在同一个浏览器窗口中打开，那么它们的 sessionStorage 内容便无法共享；localStorage 在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的。除了保存期限的长短不同，SessionStorage的属性和方法与LocalStorage完全一样。\"]},\"1667\":{\"h\":\"特点\",\"t\":[\"会话级别的浏览器存储\",\"大小为5M左右\",\"仅在客户端使用，不和服务端进行通信\",\"接口封装较好\",\"基于上面的特点，sessionStorage 可以有效对表单信息进行维护，比如刷新时，表单信息不丢失。\"]},\"1668\":{\"h\":\"使用场景\",\"t\":[\"sessionStorage 更适合用来存储生命周期和它同步的会话级别的信息。这些信息只适用于当前会话，当你开启新的会话时，它也需要相应的更新或释放。比如微博的 sessionStorage就主要是存储你本次会话的浏览足迹：\"]},\"1669\":{\"h\":\"IndexedDB\",\"t\":[\"IndexedDB 是一种低级API，用于客户端存储大量结构化数据(包括文件和blobs)。该API使用索引来实现对该数据的高性能搜索。IndexedDB 是一个运行在浏览器上的非关系型数据库。既然是数据库了，那就不是 5M、10M 这样小打小闹级别了。理论上来说，IndexedDB 是没有存储上限的（一般来说不会小于 250M）。它不仅可以存储字符串，还可以存储二进制数据。\"]},\"1670\":{\"h\":\"特点\",\"t\":[\"键值对储存\",\"IndexedDB 内部采用对象仓库（object store）存放数据。所有类型的数据都可以直接存入，包括 JavaScript 对象。对象仓库中，数据以\\\"键值对\\\"的形式保存，每一个数据记录都有对应的主键，主键是独一无二的，不能有重复，否则会抛出一个错误。\",\"异步\",\"IndexedDB 操作时不会锁死浏览器，用户依然可以进行其他操作，这与 LocalStorage 形成对比，后者的操作是同步的。异步设计是为了防止大量数据的读写，拖慢网页的表现。\",\"支持事务\",\"IndexedDB 支持事务（transaction），这意味着一系列操作步骤之中，只要有一步失败，整个事务就都取消，数据库回滚到事务发生之前的状态，不存在只改写一部分数据的情况。\",\"同源限制\",\"IndexedDB 受到同源限制，每一个数据库对应创建它的域名。网页只能访问自身域名下的数据库，而不能访问跨域的数据库。\",\"储存空间大\",\"IndexedDB 的储存空间比 LocalStorage 大得多，一般来说不少于 250MB，甚至没有上限。\",\"支持二进制储存\",\"IndexedDB 不仅可以储存字符串，还可以储存二进制数据（ArrayBuffer 对象和 Blob 对象）。\"]},\"1671\":{\"h\":\"常见操作\",\"t\":[\"在IndexedDB大部分操作并不是我们常用的调用方法，返回结果的模式，而是请求——响应的模式。\",\"建立打开IndexedDB ----window.indexedDB.open(\\\"testDB\\\")\",\"这条指令并不会返回一个DB对象的句柄，我们得到的是一个IDBOpenDBRequest对象，而我们希望得到的DB对象在其result属性中\",\"除了result，IDBOpenDBRequest接口定义了几个重要属性:\",\"onerror: 请求失败的回调函数句柄\",\"onsuccess:请求成功的回调函数句柄\",\"onupgradeneeded:请求数据库版本变化句柄\",\"function openDB(name){ var request=window.indexedDB.open(name)//建立打开IndexedDB request.onerror=function (e){ console.log('open indexdb error') } request.onsuccess=function (e){ myDB.db=e.target.result//这是一个 IDBDatabase对象，这就是IndexedDB对象 console.log(myDB.db)//此处就可以获取到db实例 } var myDB={ name:'testDB', version:'1', db:null } openDB(myDB.name)\",\"控制台得到一个 IDBDatabase对象，这就是IndexedDB对象\",\"关闭IndexedDB----indexdb.close()\",\"function closeDB(db){ db.close(); }\",\"删除IndexedDB----window.indexedDB.deleteDatabase(indexdb)\",\"function deleteDB(name) { indexedDB.deleteDatabase(name) }\"]},\"1672\":{\"h\":\"区别\"},\"1673\":{\"c\":[\"浏览器\"]},\"1674\":{\"c\":[\"存储\"]},\"1675\":{\"h\":\"输入URL过程\"},\"1676\":{\"h\":\"大致流程\",\"t\":[\"URL解析\",\"DNS查询\",\"TCP连接\",\"处理请求\",\"接受响应\",\"渲染页面\"]},\"1677\":{\"h\":\"一、URL解析\",\"t\":[\"URL（Uniform Resource Locator），统一资源定位符，用于定位互联网上资源，俗称网址。 比如 http://www.w3school.com.cn/html/index.asp，遵守以下的语法规则：\",\"scheme://host.domain:port/path/filename\",\"各部分解释如下：\",\"scheme - 定义因特网服务的类型。常见的协议有 http、https、ftp、file，其中最常见的类型是 http，而 https 则是进行加密的网络传输。\",\"host - 定义域主机（http 的默认主机是 www）\",\"domain - 定义因特网域名，比如 w3school.com.cn\",\"port - 定义主机上的端口号（http 的默认端口号是 80）\",\"path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。\",\"filename - 定义文档/资源的名称\"]},\"1678\":{\"h\":\"1、地址解析\",\"t\":[\"首先判断输入的是一个合法的URL还是一个待搜索的关键词，并且根据你输入的内容进行自动完成、字符编码等操作。\"]},\"1679\":{\"h\":\"2、HSTS\",\"t\":[\"由于安全隐患，会使用 HSTS 强制客户端使用 HTTPS 访问页面。\"]},\"1680\":{\"h\":\"3、其他操作\",\"t\":[\"浏览器还会进行一些额外的操作，比如安全检查、访问限制（之前国产浏览器限制 996.icu）。\"]},\"1681\":{\"h\":\"4、检查缓存\"},\"1682\":{\"h\":\"二、DNS查询\",\"t\":[\"基本步骤\"]},\"1683\":{\"h\":\"1、浏览器缓存\",\"t\":[\"浏览器会先检查是否在缓存中，没有则调用系统库函数进行查询。\"]},\"1684\":{\"h\":\"2、操作系统缓存\",\"t\":[\"操作系统也有自己的 DNS缓存，但在这之前，会向检查域名是否存在本地的 Hosts 文件里，没有则向 DNS 服务器发送查询请求。\"]},\"1685\":{\"h\":\"3、路由器缓存\",\"t\":[\"路由器也有自己的缓存。\"]},\"1686\":{\"h\":\"4、ISP DNS 缓存\",\"t\":[\"ISP DNS 就是在客户端电脑上设置的首选 DNS 服务器，它们在大多数情况下都会有缓存。\"]},\"1687\":{\"h\":\"5、根域名服务器查询\",\"t\":[\"在前面所有步骤没有缓存的情况下，本地 DNS 服务器会将请求转发到互联网上的根域，下面这个图很好的诠释了整个流程：\"]},\"1688\":{\"h\":\"三、TCP连接\",\"t\":[\"TCP/IP 分为四层，在发送数据时，每层都要对数据进行封装：\"]},\"1689\":{\"h\":\"1、应用层：发送HTTP请求\",\"t\":[\"在前面的步骤我们已经得到服务器的 IP 地址，浏览器会开始构造一个 HTTP 报文，其中包括：\",\"请求报头（Request Header）：请求方法、目标地址、遵循的协议等等\",\"请求主体（其他参数）\",\"其中需要注意的点：\",\"浏览器只能发送 GET、POST 方法，而打开网页使用的是 GET 方法\"]},\"1690\":{\"h\":\"2、传输层：TCP传输报文\",\"t\":[\"传输层会发起一条到达服务器的 TCP 连接，为了方便传输，会对数据进行分割（以报文段为单位），并标记编号，方便服务器接受时能够准确地还原报文信息。\",\"在建立连接前，会先进行 TCP 三次握手。\"]},\"1691\":{\"h\":\"3、网络层：IP协议查询Mac地址\",\"t\":[\"将数据段打包，并加入源及目标的IP地址，并且负责寻找传输路线。\",\"判断目标地址是否与当前地址处于同一网络中，是的话直接根据 Mac 地址发送，否则使用路由表查找下一跳地址，以及使用 ARP 协议查询它的 Mac 地址。\"]},\"1692\":{\"h\":\"4、链路层：以太网协议\",\"t\":[\"以太网协议\",\"根据以太网协议将数据分为以“帧”为单位的数据包，每一帧分为两个部分：\",\"- 标头：数据包的发送者、接受者、数据类型 - 数据：数据包具体内容 \",\"Mac 地址\",\"以太网规定了连入网络的所有设备都必须具备“网卡”接口，数据包都是从一块网卡传递到另一块网卡，网卡的地址就是 Mac 地址。每一个 Mac 地址都是独一无二的，具备了一对一的能力。\",\"广播\",\"发送数据的方法很原始，直接把数据通过 ARP 协议，向本网络的所有机器发送，接收方根据标头信息与自身 Mac 地址比较，一致就接受，否则丢弃。\"]},\"1693\":{\"h\":\"5、服务器接受请求\",\"t\":[\"接受过程就是把以上步骤逆转过来，参见上图。\"]},\"1694\":{\"h\":\"四、服务器处理请求\"},\"1695\":{\"h\":\"1、HTTPD\",\"t\":[\"最常见的 HTTPD 有 Linux 上常用的 Apache 和 Nginx，以及 Windows 上的 IIS。它会监听得到的请求，然后开启一个子进程去处理这个请求。\"]},\"1696\":{\"h\":\"2、处理请求\",\"t\":[\"接受 TCP 报文后，会对连接进行处理，对HTTP协议进行解析（请求方法、域名、路径等），并且进行一些验证：\",\"验证是否配置虚拟主机\",\"验证虚拟主机是否接受此方法\",\"验证该用户可以使用该方法（根据 IP 地址、身份信息等）\"]},\"1697\":{\"h\":\"3、重定向\",\"t\":[\"假如服务器配置了 HTTP 重定向，就会返回一个 301永久重定向响应，浏览器就会根据响应，重新发送 HTTP 请求（重新执行上面的过程）。\"]},\"1698\":{\"h\":\"4、URL重写\",\"t\":[\"然后会查看 URL 重写规则，如果请求的文件是真实存在的，比如图片、html、css、js文件等，则会直接把这个文件返回。否则服务器会按照规则把请求重写到一个REST风格的URL上。然后根据动态语言的脚本，来决定调用什么类型的动态文件解释器来处理这个请求。\"]},\"1699\":{\"h\":\"五、浏览器接受响应\",\"t\":[\"浏览器接收到来自服务器的响应资源后，会对资源进行分析。\",\"首先查看 Response header，根据不同状态码做不同的事（比如上面提到的重定向）。\",\"如果响应资源进行了压缩（比如 gzip），还需要进行解压。\",\"然后，对响应资源做缓存。\",\"接下来，根据响应资源里的 MIME 类型去解析响应内容（比如 HTML、Image各有不同的解析方式）。\"]},\"1700\":{\"h\":\"六、渲染页面\"},\"1701\":{\"h\":\"1、HTML解析\",\"t\":[\"浏览器解析是从上往下一行一行地解析的。解析的过程可以分为四个步骤：\"]},\"1702\":{\"h\":\"1.1、解码（encoding）\",\"t\":[\"传输回来的其实都是一些二进制字节数据，浏览器需要根据文件指定编码（例如UTF-8）转换成字符串，也就是HTML 代码。\"]},\"1703\":{\"h\":\"1.2、预解析（pre-parsing）\",\"t\":[\"预解析做的事情是提前加载资源，减少处理时间，它会识别一些会请求资源的属性，比如img标签的src属性，并将这个请求加到请求队列中。\"]},\"1704\":{\"h\":\"1.3、符号化（Tokenization）\",\"t\":[\"符号化是词法分析的过程，将输入解析成符号，HTML 符号包括，开始标签、结束标签、属性名和属性值。\",\"它通过一个状态机去识别符号的状态，比如遇到<，>状态都会产生变化。\"]},\"1705\":{\"h\":\"1.4、构建树（tree construction）\",\"t\":[\"在上一步符号化中，解析器获得这些标记，然后以合适的方法创建DOM对象并把这些符号插入到DOM对象中。\",\"<html> <head> <title>Web page parsing</title> </head> <body> <div> <h1>Web page parsing</h1> <p>This is an example Web page.</p> </div> </body> </html>\",\"浏览器容错进制\",\"你从来没有在浏览器看过类似”语法无效”的错误，这是因为浏览器去纠正错误的语法，然后继续工作。\",\"事件\",\"当整个解析的过程完成以后，浏览器会通过DOMContentLoaded事件来通知DOM解析完成。\"]},\"1706\":{\"h\":\"2、CSS解析\",\"t\":[\"一旦浏览器下载了 CSS，CSS 解析器就会处理它遇到的任何 CSS，根据语法规范解析出所有的 CSS 并进行标记化，然后我们得到一个规则表。\",\"CSS 匹配规则\",\"在匹配一个节点对应的 CSS 规则时，是按照从右到左的顺序的，例如：div p { font-size :14px }会先寻找所有的p标签然后判断它的父元素是否为div。\",\"所以我们写 CSS 时，尽量用 id 和 class，千万不要过度层叠。\"]},\"1707\":{\"h\":\"3、渲染树\",\"t\":[\"其实这就是一个 DOM 树和 CSS 规则树合并的过程。\",\"注意：渲染树会忽略那些不需要渲染的节点，比如设置了display:none的节点。\",\"计算\",\"通过计算让任何尺寸值都减少到三个可能之一：auto、百分比、px，比如把rem转化为px。\",\"级联\",\"浏览器需要一种方法来确定哪些样式才真正需要应用到对应元素，所以它使用一个叫做specificity的公式，这个公式会通过：\",\"!important\",\"是否内联样式\",\"id\",\"class\",\"标签名\",\"然后得出一个权重值，取最高的那个。\",\"渲染阻塞\",\"当遇到一个script标签时，DOM 构建会被暂停，直至脚本完成执行，然后继续构建 DOM 树。但如果 JS 依赖 CSS 样式，而它还没有被下载和构建时，浏览器就会延迟脚本执行，直至 CSS Rules 被构建。\",\"CSS 会阻塞 JS 执行\",\"JS 会阻塞后面的 DOM 解析\",\"为了避免这种情况，应该以下原则：\",\"CSS 资源排在 JavaScript 资源前面\",\"JS 放在 HTML 最底部，也就是</body>前\",\"如果要改变阻塞模式，可以使用 defer 与 async\",\"<script src=\\\"d.js\\\" defer></script> <script src=\\\"e.js\\\" defer></script>\",\"不阻止解析 document， 并行下载 d.js, e.js\",\"即使下载完 d.js, e.js 仍继续解析 document\",\"按照页面中出现的顺序，在其他同步脚本执行后，DOMContentLoaded 事件前 依次执行 d.js, e.js。\",\"<script src=\\\"b.js\\\" async></script> <script src=\\\"c.js\\\" async></script>\",\"不阻止解析 document, 并行下载 b.js, c.js\",\"当脚本下载完后立即执行。（两者执行顺序不确定，执行阶段不确定，可能在 DOMContentLoaded 事件前或者后 ）\",\"defer与async区别\",\"两者都不会阻止 document 的解析\",\"defer 会在 DOMContentLoaded 前依次执行 （可以利用这两点哦！）\",\"async 则是下载完立即执行，不一定是在 DOMContentLoaded 前\",\"async 因为顺序无关，所以很适合像 Google Analytics 这样的无依赖脚本\"]},\"1708\":{\"c\":[\"浏览器\"]},\"1709\":{\"c\":[\"页面渲染\"]},\"1710\":{\"h\":\"TCP/UDP\"},\"1711\":{\"h\":\"1.TCP和UDP的既念及特点\",\"t\":[\"TCP和UDP都是传输层协议，他们都属于TCP/IP协议族：\"]},\"1712\":{\"h\":\"UDP\",\"t\":[\"UDP的全称是用户数据报协议，在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。在OS模型中，在传输层，处于P协议的上一层。UDP有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。\",\"它的特点如下：\",\"面向无连接 首先UDP是不需要和TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。 具体来说就是： \",\"在发送端，应用层将数据传递给传输层的UDP协议，UDP只会给数据增加一个UDP头标识下是UDP协议，然后就传递给网络层了\",\"在接收端，网络层将数据传递给传输层，UDP只去除P报文头就传递给应用层，不会任何拼接操作\",\"有单播，多播，广播的功能 UDP不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说UDP提供了单播，多播，广播的功能。\",\"面向报文 发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付P层。UDP对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界。因此，应用程序必须选择合适大小的报文\",\"不可靠性 首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。 再者网络环境时好时坏，但是UDP因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用UDP而不是TCP。\",\"头部开销小，传输数据报文时是很高效的 UDP头部包含了以下几个数据： \",\"两个十六位的端口号，分别为源端口（何选字段）和目标端口\",\"整个数据报文的长度\",\"整个数据报文的检验和(PV4可选字段)，该字段用于发现头部信息和数据中的错误\",\"因此UDP的头部开销小，只有8字节，相比TCP的至少20字节要少得多，在传输数据报文时是很高效的。\"]},\"1713\":{\"h\":\"TCP\",\"t\":[\"TCP的全称是传输控制协议是一种面向连接的、可靠的、基于字节流的传输层通信协议。TCP是面向连接的、可靠的流协议（流就是指不间断的数据结构）。\",\"它有以下几个特点：\",\"面向连接 面向连接，是指发送数据之前必须在两端建立连接。建立连接的方法是“三次握手”，这样能建立可靠的连接。建立连接，是为数据的可靠传输打下了基础。\",\"仅支持单播传输 每条TCP传输连接只能有两个端点，只能进行点对点的数据传输，不支持多播和广播传输方式。\",\"面向字节流 TCP不像UDP一样那样一个个报文独立地传输，而是在不保留报文边界的情况下以字节流方式进行传输。\",\"可靠传输 对于可靠传输，判断丢包、误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证了传送到接收端实体的包的按序接收。然后接收端实体对已成功收到的字节发回一个相应的确认(ACK);如果发送端实体在合理的往返时延(RTT)内未收到确认，那么对应的数据（假设丢失了）将会被重传。\",\"提供拥塞控制 当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞。\",\"提供全双工通信 TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP可以立即发送一个数据段，也可以缓存一段时间以便一次发送更多的数据段（最大的数据段大小取决于MSS）\"]},\"1714\":{\"h\":\"2.TCP与UDP的区别\"},\"1715\":{\"h\":\"3.TCP和UDP的使用场景\",\"t\":[\"TCP应用场景：效率要求相对低，但对准确性要求相对高的场景。因为传输中需要对数据确认、重发、排序等操作，相比之下效率没有UDP高。例如：文件传输（准确高要求高、但是速度可以相对慢）、接受邮件、远程登录。\",\"UDP应用场景：效率要求相对高，对准确性要求相对低的场景。例如：QQ聊天、在线视频、网络语音电话（即时通讯，速度要求高，但是出现偶尔断续不是太大问题，并且此处完全不可以使用重发机制）、广播通信（广播、多播）。\"]},\"1716\":{\"h\":\"4.UDP协议为什么不可靠？\",\"t\":[\"UDP在传输数据之前不需要先建立连接，远地主机的运输层在接收到UDP报文后，不需要确认，提供不可靠交付。总结就以下四点：\",\"不保正消息交付：不确认，不重传，无超时\",\"不保证交付顺序：不设置包序号，不重排，不会发生队首阻塞\",\"不跟踪连接状态：不必建立连接或重启状态机\",\"不进行拥塞控制：不内置客户端或网络反馈机制\"]},\"1717\":{\"h\":\"5.TCP的重传机制\",\"t\":[\"由于TCP的下层网络（网络层）可能出现丢失、重复或失序的情况，TCP协议提供可靠数据传输服务。为保证数据传输的正确性，TCP会重传其认为已丢失（包括报文中的比特错误）的包。TCP使用两套独立的机制来完成重传，一是基于时间，二是基于确认信息。\",\"TCP在发送一个数据之后，就开启一个定时器，若是在这个时间内没有收到发送数据的ACK确认报文，则对该报文进行重传，在达到一定次数还没有成功时放弃并发送一个复位信号。\"]},\"1718\":{\"h\":\"6.TCP的拥塞控制机制\",\"t\":[\"TCP的拥塞控制机制主要是以下四种机制：\",\"慢启动（慢开始）\",\"拥塞避免\",\"快速重传\",\"快速恢复\"]},\"1719\":{\"h\":\"（1）慢启动（慢开始）\",\"t\":[\"在开始发送的时候设置cwnd = 1（cwnd指的是拥塞窗口）\",\"思路：开始的时候不要发送大量数据，而是先测试一下网络的拥塞程度，由小到大增加拥塞窗口的大小。\",\"为了防止cwnd增长过大引起网络拥塞，设置一个慢开始门限(ssthresh 状态变量) \",\"当cnwd < ssthresh，使用慢开始算法\",\"当cnwd = ssthresh，既可使用慢开始算法，也可以使用拥塞避免算法\",\"当cnwd > ssthresh，使用拥塞避免算法\"]},\"1720\":{\"h\":\"（2）拥塞避免\",\"t\":[\"拥塞避免未必能够完全避免拥塞，是说在拥塞避免阶段将拥塞窗口控制为按线性增长，使网络不容易出现阻塞。\",\"思路： 让拥塞窗口cwnd缓慢的增大，即每经过一个返回时间RTT就把发送方的拥塞控制窗口加一\",\"无论是在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞，就把慢开始门限设置为出现拥塞时的发送窗口大小的一半。然后把拥塞窗口设置为1，执行慢开始算法。如图所示: \",\"其中，判断网络出现拥塞的根据就是没有收到确认，虽然没有收到确认可能是其他原因的分组丢失，但是因为无法判定，所以都当做拥塞来处理。\"]},\"1721\":{\"h\":\"（3）快速重传\",\"t\":[\"快重传要求接收方在收到一个失序的报文段后就立即发出重复确认(为的是使发送方及早知道有报文段没有到达对方)。发送方只要连续收到三个重复确认就立即重传对方尚未收到的报文段，而不必继续等待设置的重传计时器时间到期。\",\"由于不需要等待设置的重传计时器到期，能尽早重传未被确认的报文段，能提高整个网络的吞吐量\"]},\"1722\":{\"h\":\"（4）快速恢复\",\"t\":[\"当发送方连续收到三个重复确认时，就执行“乘法减小”算法，把ssthresh门限减半。但是接下去并不执行慢开始算法。\",\"考虑到如果网络出现拥塞的话就不会收到好几个重复的确认，所以发送方现在认为网络可能没有出现拥塞。所以此时不执行慢开始算法，而是将cwnd设置为ssthresh的大小，然后执行拥塞避免算法。 \"]},\"1723\":{\"h\":\"7.TCP的流量控制机制\",\"t\":[\"一般来说，流量控制就是为了让发送方发送数据的速度不要太快，要让接收方来得及接收。TCP采用大小可变的滑动窗口进行流量控制，窗口大小的单位是字节。这里说的窗口大小其实就是每次传输的数据大小。\",\"当一个连接建立时，连接的每一端分配一个缓冲区来保存输入的数据，并将缓冲区的大小发送给另一端。\",\"当数据到达时，接收方发送确认，其中包含了自己剩余的缓冲区大小。（剩余的缓冲区空间的大小被称为窗口，指出窗口大小的通知称为窗口通告 。接收方在发送的每一确认中都含有一个窗口通告。）\",\"如果接收方应用程序读数据的速度能够与数据到达的速度一样快，接收方将在每一确认中发送一个正的窗口通告。\",\"如果发送方操作的速度快于接收方，接收到的数据最终将充满接收方的缓冲区，导致接收方通告一个零窗口 。发送方收到一个零窗口通告时，必须停止发送，直到接收方重新通告一个正的窗口。\"]},\"1724\":{\"h\":\"8.TCP的可靠传输机制\",\"t\":[\"TCP 的可靠传输机制是基于连续 ARQ 协议和滑动窗口协议的。\",\"TCP 协议在发送方维持了一个发送窗口，发送窗口以前的报文段是已经发送并确认了的报文段，发送窗口中包含了已经发送但 未确认的报文段和允许发送但还未发送的报文段，发送窗口以后的报文段是缓存中还不允许发送的报文段。当发送方向接收方发 送报文时，会依次发送窗口内的所有报文段，并且设置一个定时器，这个定时器可以理解为是最早发送但未收到确认的报文段。 如果在定时器的时间内收到某一个报文段的确认回答，则滑动窗口，将窗口的首部向后滑动到确认报文段的后一个位置，此时如 果还有已发送但没有确认的报文段，则重新设置定时器，如果没有了则关闭定时器。如果定时器超时，则重新发送所有已经发送 但还未收到确认的报文段，并将超时的间隔设置为以前的两倍。当发送方收到接收方的三个冗余的确认应答后，这是一种指示， 说明该报文段以后的报文段很有可能发生丢失了，那么发送方会启用快速重传的机制，就是当前定时器结束前，发送所有的已发 送但确认的报文段。\",\"接收方使用的是累计确认的机制，对于所有按序到达的报文段，接收方返回一个报文段的肯定回答。如果收到了一个乱序的报文 段，那么接方会直接丢弃，并返回一个最近的按序到达的报文段的肯定回答。使用累计确认保证了返回的确认号之前的报文段都 已经按序到达了，所以发送窗口可以移动到已确认报文段的后面。\",\"发送窗口的大小是变化的，它是由接收窗口剩余大小和网络中拥塞程度来决定的，TCP 就是通过控制发送窗口的长度来控制报文 段的发送速率。\",\"但是 TCP 协议并不完全和滑动窗口协议相同，因为许多的 TCP 实现会将失序的报文段给缓存起来，并且发生重传时，只会重 传一个报文段，因此 TCP 协议的可靠传输机制更像是窗口滑动协议和选择重传协议的一个混合体。\"]},\"1725\":{\"h\":\"9.TCP的三次握手和四次挥手\"},\"1726\":{\"h\":\"三次握手\",\"t\":[\"三次握手（Three-way Handshake）其实就是指建立一个TCP连接时，需要客户端和服务器总共发送3个包。进行三次握手的主要作用就是为了确认双方的接收能力和发送能力是否正常、指定自己的初始化序列号为后面的可靠性传送做准备。实质上其实就是连接服务器指定端口，建立TCP连接，并同步连接双方的序列号和确认号，交换TCP窗口大小信息。\",\"刚开始客户端处于 Closed 的状态，服务端处于 Listen 状态。\",\"第一次握手：客户端给服务端发一个 SYN 报文，并指明客户端的初始化序列号 ISN，此时客户端处于 SYN_SEND 状态。\",\"首部的同步位SYN=1，初始序号seq=x，SYN=1的报文段不能携带数据，但要消耗掉一个序号。\",\"第二次握手：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN。同时会把客户端的 ISN + 1 作为ACK 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 SYN_REVD 的状态。\",\"在确认报文段中SYN=1，ACK=1，确认号ack=x+1，初始序号seq=y\",\"第三次握手：客户端收到 SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 ESTABLISHED 状态。服务器收到 ACK 报文之后，也处于 ESTABLISHED 状态，此时，双方已建立起了连接。\",\"确认报文段ACK=1，确认号ack=y+1，序号seq=x+1（初始为seq=x，第二个报文段所以要+1），ACK报文段可以携带数据，不携带数据则不消耗序号。\"]},\"1727\":{\"h\":\"那为什么要三次握手呢？两次不行吗？\",\"t\":[\"为了确认双方的接收能力和发送能力都正常\",\"如果是用两次握手，则会出现下面这种情况：\",\"如客户端发出连接请求，但因连接请求报文丢失而未收到确认，于是客户端再重传一次连接请求。后来收到了确认，建立了连接。数据传输完毕后，就释放了连接，客户端共发出了两个连接请求报文段，其中第一个丢失，第二个到达了服务端，但是第一个丢失的报文段只是在某些网络结点长时间滞留了，延误到连接释放以后的某个时间才到达服务端，此时服务端误认为客户端又发出一次新的连接请求，于是就向客户端发出确认报文段，同意建立连接，不采用三次握手，只要服务端发出确认，就建立新的连接了，此时客户端忽略服务端发来的确认，也不发送数据，则服务端一致等待客户端发送数据，浪费资源。\",\"简单来说就是以下三步：\",\"第一次握手：客户端向服务端发送连接请求报文段。该报文段中包含自身的数据通讯初始序号。请求发送后，客户端便进入 SYN-SENT 状态。\",\"第二次握手：服务端收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通讯初始序号，发送完成后便进入 SYN-RECEIVED 状态。\",\"第三次握手：当客户端收到连接同意的应答后，还要向服务端发送一个确认报文。客户端发完这个报文段后便进入 ESTABLISHED 状态，服务端收到这个应答后也进入 ESTABLISHED 状态，此时连接建立成功。\",\"TCP 三次握手的建立连接的过程就是相互确认初始序号的过程，告诉对方，什么样序号的报文段能够被正确接收。 第三次握手的作用是客户端对服务器端的初始序号的确认。如果只使用两次握手，那么服务器就没有办法知道自己的序号是否 已被确认。同时这样也是为了防止失效的请求报文段被服务器接收，而出现错误的情况。\"]},\"1728\":{\"h\":\"四次挥手\",\"t\":[\"刚开始双方都处于 ESTABLISHED 状态，假如是客户端先发起关闭请求。四次挥手的过程如下：\",\"第一次挥手： 客户端会发送一个 FIN 报文，报文中会指定一个序列号。此时客户端处于 FIN_WAIT1 状态。\",\"即发出连接释放报文段（FIN=1，序号seq=u），并停止再发送数据，主动关闭TCP连接，进入FIN_WAIT1（终止等待1）状态，等待服务端的确认。\",\"第二次挥手：服务端收到 FIN 之后，会发送 ACK 报文，且把客户端的序列号值 +1 作为 ACK 报文的序列号值，表明已经收到客户端的报文了，此时服务端处于 CLOSE_WAIT 状态。\",\"即服务端收到连接释放报文段后即发出确认报文段（ACK=1，确认号ack=u+1，序号seq=v），服务端进入CLOSE_WAIT（关闭等待）状态，此时的TCP处于半关闭状态，客户端到服务端的连接释放。客户端收到服务端的确认后，进入FIN_WAIT2（终止等待2）状态，等待服务端发出的连接释放报文段。\",\"第三次挥手：如果服务端也想断开连接了，和客户端的第一次挥手一样，发给 FIN 报文，且指定一个序列号。此时服务端处于 LAST_ACK 的状态。\",\"即服务端没有要向客户端发出的数据，服务端发出连接释放报文段（FIN=1，ACK=1，序号seq=w，确认号ack=u+1），服务端进入LAST_ACK（最后确认）状态，等待客户端的确认。\",\"第四次挥手：客户端收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把服务端的序列号值 +1 作为自己 ACK 报文的序列号值，此时客户端处于 TIME_WAIT 状态。需要过一阵子以确保服务端收到自己的 ACK 报文之后才会进入 CLOSED 状态，服务端收到 ACK 报文之后，就处于关闭连接了，处于 CLOSED 状态。\",\"即客户端收到服务端的连接释放报文段后，对此发出确认报文段（ACK=1，seq=u+1，ack=w+1），客户端进入TIME_WAIT（时间等待）状态。此时TCP未释放掉，需要经过时间等待计时器设置的时间2MSL后，客户端才进入CLOSED状态。\"]},\"1729\":{\"h\":\"那为什么需要四次挥手呢？\",\"t\":[\"因为当服务端收到客户端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当服务端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉客户端，“你发的FIN报文我收到了”。只有等到我服务端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送，故需要四次挥手。\",\"简单来说就是以下四步：\",\"第一次挥手：若客户端认为数据发送完成，则它需要向服务端发送连接释放请求。\",\"第二次挥手：服务端收到连接释放请求后，会告诉应用层要释放 TCP 链接。然后会发送 ACK 包，并进入 CLOSE_WAIT 状态，此时表明客户端到服务端的连接已经释放，不再接收客户端发的数据了。但是因为 TCP 连接是双向的，所以服务端仍旧可以发送数据给客户端。\",\"第三次挥手：服务端如果此时还有没发完的数据会继续发送，完毕后会向客户端发送连接释放请求，然后服务端便进入 LAST-ACK 状态。\",\"第四次挥手：客户端收到释放请求后，向服务端发送确认应答，此时客户端进入 TIME-WAIT 状态。该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有服务端的重发请求的话，就进入 CLOSED 状态。当服务端收到确认应答后，也便进入 CLOSED 状态。\",\"TCP 使用四次挥手的原因是因为 TCP 的连接是全双工的，所以需要双方分别释放到对方的连接，单独一方的连接释放，只代 表不能再向对方发送数据，连接处于的是半释放的状态。\",\"最后一次挥手中，客户端会等待一段时间再关闭的原因，是为了防止发送给服务器的确认报文段丢失或者出错，从而导致服务器 端不能正常关闭。\"]},\"1730\":{\"h\":\"10.TCP粘包是怎么回事，如何处理?\",\"t\":[\"默认情况下, TCP 连接会启⽤延迟传送算法 (Nagle 算法), 在数据发送之前缓存他们. 如果短时间有多个数据发送, 会缓冲到⼀起作⼀次发送 (缓冲⼤⼩⻅ socket.bufferSize ), 这样可以减少 IO 消耗提⾼性能.\",\"如果是传输⽂件的话, 那么根本不⽤处理粘包的问题, 来⼀个包拼⼀个包就好了。但是如果是多条消息, 或者是别的⽤途的数据那么就需要处理粘包.\",\"下面看⼀个例⼦, 连续调⽤两次 send 分别发送两段数据 data1 和 data2, 在接收端有以下⼏种常⻅的情况:\",\"A. 先接收到 data1, 然后接收到 data2 .\",\"B. 先接收到 data1 的部分数据, 然后接收到 data1 余下的部分以及 data2 的全部.\",\"C. 先接收到了 data1 的全部数据和 data2 的部分数据, 然后接收到了 data2 的余下的数据.\",\"D. ⼀次性接收到了 data1 和 data2 的全部数据.\",\"其中的 BCD 就是我们常⻅的粘包的情况. ⽽对于处理粘包的问题, 常⻅的解决⽅案有:\",\"多次发送之前间隔⼀个等待时间：只需要等上⼀段时间再进⾏下⼀次 send 就好, 适⽤于交互频率特别低的场景. 缺点也很明显, 对于⽐较频繁的场景⽽⾔传输效率实在太低，不过⼏乎不⽤做什么处理.\",\"关闭 Nagle 算法：关闭 Nagle 算法, 在 Node.js 中你可以通过 socket.setNoDelay() ⽅法来关闭 Nagle 算法, 让每⼀次 send 都不缓冲直接发送。该⽅法⽐较适⽤于每次发送的数据都⽐较⼤ (但不是⽂件那么⼤), 并且频率不是特别⾼的场景。如果是每次发送的数据量⽐较⼩, 并且频率特别⾼的, 关闭 Nagle 纯属⾃废武功。另外, 该⽅法不适⽤于⽹络较差的情况, 因为 Nagle 算法是在服务端进⾏的包合并情况, 但是如果短时间内客户端的⽹络情况不好, 或者应⽤层由于某些原因不能及时将 TCP 的数据 recv, 就会造成多个包在客户端缓冲从⽽粘包的情况。 (如果是在稳定的机房内部通信那么这个概率是⽐较⼩可以选择忽略的)\",\"进⾏封包/拆包：封包/拆包是⽬前业内常⻅的解决⽅案了。即给每个数据包在发送之前, 于其前/后放⼀些有特征的数据, 然后收到数据的时 候根据特征数据分割出来各个数据包。\"]},\"1731\":{\"h\":\"11.为什么udp不会粘包？\",\"t\":[\"TCP协议是⾯向流的协议，UDP是⾯向消息的协议。UDP段都是⼀条消息，应⽤程序必须以消息为单位提取数据，不能⼀次提取任意字节的数据\",\"UDP具有保护消息边界，在每个UDP包中就有了消息头（消息来源地址，端⼝等信息），这样对于接收端来说就容易进⾏区分处理了。传输协议把数据当作⼀条独⽴的消息在⽹上传输，接收端只能接收独⽴的消息。接收端⼀次只能接收发送端发出的⼀个数据包,如果⼀次接受数据的⼤⼩⼩于发送端⼀次发送的数据⼤⼩，就会丢失⼀部分数据，即使丢失，接受端也不会分两次去接收。\"]},\"1732\":{\"c\":[\"网络\"]},\"1733\":{\"c\":[\"TCP/IP\"]},\"1734\":{\"h\":\"WebSocket\"},\"1735\":{\"h\":\"对WebSocket的理解\",\"t\":[\"WebSocket是HTML5提供的一种浏览器与服务器进行全双工通讯的网络技术，属于应用层协议。它基于TCP传输协议，并复用HTTP的握手通道。浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。\",\"WebSocket的出现就解决了半双工通信的弊端。它最大的特点是：服务器可以向客户端主动推动消息，客户端也可以主动向服务器推送消息。\",\"WebSocket原理：客户端向WebSocket服务器通知(notify)一个带有所有接收者ID(recipientsIDs)的事件(event),，服务器接收后立即通知所有活跃的(active)客户端，只有D在接收者ID序列中的客户端才会处理这个事件。\"]},\"1736\":{\"h\":\"WebSocket特点\",\"t\":[\"支持双向通信，实时性更强\",\"可以发送文本，也可以发送二进制数据”\",\"建立在TCP协议之上，服务端的实现比较容易\",\"数据格式比较轻量，性能开销小，通信高效\",\"没有同源限制，客户端可以与任意服务器通信\",\"协议标识符是wS(如果加密，则为WSs),服务器网址就是URL\",\"与HTTP协议有着良好的兼容性。默认端口也是80和443，并且握手阶段采用HTTP协议，因此握手时不容易屏蔽，能通过各种HTTP代理服务器。\"]},\"1737\":{\"h\":\"即时通讯的实现：短轮询、长轮询、SSE和NWebSocket间的区别\",\"t\":[\"短轮询和长轮询的目的都是用于实现客户端和服务器端的一个即时通讯。\",\"短轮询的基本思路：浏览器每隔一段时间向浏览器发送tp请求，服务器端在收到请求后，不论是否有数据更新，都直接进行响应。这种方式实现的即时通信，本质上还是浏览器发送请求，服务器接受请求的一个过程，通过让客户端不断的进行请求，使得客户端静能够模拟实时地收到服务器端的数据的变化。这种方式的优点是比较简单，易于理解。缺点是这种方式由于需要不断的建立ht帅连接，严重浪费了服务器端和客户端的资源。当用户增加时，服务器端的压力就会变大，这是很不合理的。\",\"长轮询的基本思路：首先由客户端向服务器发起请求，当服务器收到客户端发来的请求后，服务器端不会直接进行响应，而是先将这个请求挂起，然后判断服务器端数据是否有更新。如果有更新，则进行响应，如果一直没有数据，则到达一定的时间限制才返回。客户端JavaScript响应处理函数会在处理完服务器返回的信息后，再次发出请求，重新建立连接。长轮询和短轮询比起来，它的优点是明显减少了很多不必要的ttp请求次数，相比之下节约了资源。长轮询的缺点在于，连接挂起也会导致资源的浪费。\",\"SSE的基本思想：服务器使用流信息向服务器推送信息。严格地说，htp协议无法做到服务器主动推送信息。但是，有一种变通方法，就是服务器向客户端声明，接下来要发送的是流信息。也就是说，发送的不是一次性的数据包，而是一个数据流，会连续不断地发送过来。这时，客户端不会关闭连接，会一直等着服务器发过来的新的数据流，视频播放就是这样的例子。SSE就是利用这种机制，使用流信息向浏览器推送信息。它基于htp协议，目前除了E/Edge,其他浏览器都支持。它相对于前面两种方式来说，不需要建立过多的tp请求，相比，之下节约了资源。WebSocket是HTML5定义的一个新协议议，与传统的http协议不同，该协议允许由服务器主动的向客户端推送信息。使用WebSocket协议的缺点是在服务器端的配置比较复杂。WebSocket是一个全双工的协议，也就是通信双方是平等的，可以相互发送消息，而SSE的方式是单向通信的，只能由服务器端向客户端推送信息，如果客户端需要发送信息就是属于下一个htp请求了。\",\"对于这四种即使通信协议，从性能的角度来看：\",\"WebSocket>长连接(sEE)>长轮询>短轮询\",\"但是，我们如果考虑浏览器的兼容性问题，顺序就合恰相反了：\",\"短轮询>长轮询>长连接(sEE)>VebSocket\"]},\"1738\":{\"c\":[\"网络\"]},\"1739\":{\"c\":[\"WebSocket\"]},\"1740\":{\"h\":\"构造器模式\",\"t\":[\"// var employee1 = { // name: 'kerwin', // age: 100, // } // var employee2 = { // name: 'kerwin2', // age: 200, // } function Employee(name, age) { this.name = name this.age = age this.say = function () { console.log(this.name + '-' + this.age) } } var employee1 = new Employee('kerwin', 100) var employee2 = new Employee('kerwin2', 200) console.log(employee1) console.log(employee2)\"]},\"1741\":{\"c\":[\"设计模式\"]},\"1742\":{\"c\":[\"构造器模式\"]},\"1743\":{\"h\":\"原型模式\",\"t\":[\"// var employee1 = { // name: 'kerwin', // age: 100, // } // var employee2 = { // name: 'kerwin2', // age: 200, // } function Employee(name, age) { this.name = name this.age = age } Employee.prototype.say = function () { console.log(this.name + '-' + this.age) } var employee1 = new Employee('kerwin', 100) var employee2 = new Employee('kerwin2', 200) console.log(employee1) console.log(employee2)\",\"class Employee { constructor(name, age) { this.name = name this.age = age } say() { console.log(this.name + '-' + this.age) } } var employee1 = new Employee('kerwin', 100) var employee2 = new Employee('kerwin2', 200)\"]},\"1744\":{\"c\":[\"设计模式\"]},\"1745\":{\"c\":[\"原型模式\"]},\"1746\":{\"h\":\"工厂模式\"},\"1747\":{\"h\":\"定义\",\"t\":[\"工厂模式可以将对象的创建过程封装在工厂类中，使得消费者（使用者）和生产者（实现者）解耦。通过工厂模式，消费者不需要直接使用 new 关键字来创建对象，而是通过调用工厂类的方法来获取所需的对象。 就是根据不同的输入返回不同的实例，一般用来创建同一类对象，它的主要思想就是将对象的创建与对象的实现分离。\",\"在工厂模式中，工厂充当了一个生产标准规格商品的地方。它接收参数（原料），根据`参数的不同选择实例化合适的对象（特定规格的产品），并将其返回给使用者。\",\"这样做的好处之一是解耦。使用工厂模式，使用者无需直接依赖具体的对象实现，而只需通过工厂来获取所需的对象。这样，当需要更换或扩展对象实现时，使用者的代码不需要做出太多改动，只需要修改工厂的实现即可。\",\"另外，通过工厂模式可以实现面向抽象编程。工厂模式中的抽象产品定义了产品的接口或抽象类，使用者只需要操作抽象产品，而无需关心具体产品的细节。这样可以提高代码的灵活性和可维护性，也方便进行类型检查和静态分析。\",\"在创建对象时，不暴露具体的逻辑，而是将逻辑封装在函数中，那么这个函数就可以被视为一个工厂。工厂模式根据抽象程度的不同可以分为：简单工厂、工厂方法、抽象工厂。\",\"一个简单的例子，我们去餐馆吃饭，只需要按照菜单上的菜名进行点餐，然后菜做出来之后，不需要知道这些菜是怎么做的，只管吃就好了。在这里面，餐馆就相当于工厂，负责生产菜品，访问者通过餐馆就可以拿到产品。\"]},\"1748\":{\"h\":\"使用场景\",\"t\":[\"对象的创建比较复杂，而访问者无需知道创建的具体流程；\",\"处理大量具有相同属性的小对象；\"]},\"1749\":{\"h\":\"优缺点\"},\"1750\":{\"h\":\"优点\",\"t\":[\"封装性好：工厂模式可以将对象的创建和使用分离，客户端只需要知道使用工厂方法来创建对象即可，无需了解具体的创建细节。\",\"扩展性强：通过工厂模式，可以方便地添加新的产品类并创建对应的工厂类，而不影响已有的代码结构和客户端使用。\",\"符合开放封闭原则：新增产品类不需修改原有代码，只需新增对应的产品类和工厂类，符合软件设计原则。\"]},\"1751\":{\"h\":\"缺点\",\"t\":[\"增加复杂度：引入工厂模式会增加代码的复杂度和结构，可能需要新增很多工厂类，增加了代码量。\",\"不适用于简单对象的创建：工厂模式适合创建复杂对象的场景，如果只需要创建简单对象，使用工厂模式可能过于繁琐。\",\"需要预先知道具体产品类：工厂模式需要事先了解可能会创建的产品类，而且随着产品种类的增加，工厂类也会增多。\"]},\"1752\":{\"h\":\"实现\",\"t\":[\"特点\",\"简单工厂\",\"工厂方法\",\"抽象工厂\",\"定义\",\"一个工厂类负责所有产品的实例化\",\"定义了一个接口用于创建对象，让子类决定实例化哪一个类\",\"提供一个创建一系列相关或相互依赖对象的接口\",\"实现简单\",\"创建对象的逻辑集中在单个工厂类中\",\"创建对象的逻辑分布在不同的工厂类中\",\"创建对象的逻辑分散在不同的工厂接口中\",\"扩展性\",\"随着产品种类的增加，工厂类会变得庞大且不易维护\",\"可以通过增加新的工厂类来扩展新产品的生产\",\"可以随意增加产品谢列或者产品族\",\"类型\",\"一对一关系\",\"一对多关系\",\"多对多关系\",\"示例\",\"简单实例化对象\",\"通过工厂基类和具体子类实例化对象\",\"通过抽象工厂接口和具体工厂类实例化对象\",\"生产实例（商品）的工厂可以是小作坊，只生产少量简单的商品，也可以是大型的复杂工厂，因此基于场景复杂程度又有多个工厂模式：\",\"类别\",\"说明\",\"简单工厂（Simple Factory）\",\"小作坊，适用于少量对象的创建，集中式管理，使用简单、扩展不便\",\"工厂方法（Factory Method）\",\"正规小工厂，每种产品一个独立工厂，偏平化扩展\",\"抽象工厂（Abstract Factory）\",\"集团化大厂，产品种类、层级众多，需要多层级的工厂来管理，代码也稍复杂\"]},\"1753\":{\"h\":\"简单工厂\",\"t\":[\"简单工厂模式又叫静态工厂模式，由一个工厂对象决定创建某一种产品对象类的实例。主要用来创建同一类对象。\",\"class User { constructor(opt) { this.name = opt.name; this.viewPage = opt.viewPage; } ​ static getInstance(role) { switch (role) { case 'superAdmin': return new User({ name: '超级管理员', viewPage: ['首页', '应用数据', '权限管理'] }); case 'admin': return new User({ name: '管理员', viewPage: ['首页', '应用数据'] }); case 'user': return new User({ name: '普通用户', viewPage: ['首页'] }); default: throw new Error('参数错误, 可选参数:superAdmin、admin、user') } } } ​ let superAdmin = User.getInstance('superAdmin'); console.log(superAdmin); // 输出: User { name: \\\"超级管理员\\\", viewPage: [\\\"首页\\\", \\\"应用数据\\\", \\\"权限管理\\\"] } ​ let admin = User.getInstance('admin'); console.log(admin); // 输出: User { name: \\\"管理员\\\", viewPage: [\\\"首页\\\", \\\"应用数据\\\"] } ​ let normalUser = User.getInstance('user'); console.log(normalUser); // 输出: User { name: \\\"普通用户\\\", viewPage: [\\\"首页\\\"] }\",\"简单工厂模式的优势就在于，只需要一个参数，就可以获得所需的对象，无需知道对象创建的具体细节。但是，在函数内部包含了对象所有的创建逻辑，和判断逻辑的代码，如果判断逻辑很多，或者代码逻辑很复杂，这样工厂函数就会变的很复杂，很庞大，难以维护。所以，简单工厂只适合以下情况：\",\"创建的对象数量较少；\",\"创建的对象的逻辑不是很复杂。\"]},\"1754\":{\"h\":\"工厂方法\",\"t\":[\"工厂方法模式定义了一个用于创建对象的工厂方法，由子类决定具体创建哪个类的对象。工厂方法模式将对象的创建延迟到子类中，客户端只需要依赖抽象的工厂接口，而不需要关心具体的产品类。\",\"class User { constructor(name = '', viewPage = []) { if (new.target === User) { throw new Error('抽象类不能实例化!') } this.name = name this.viewPage = viewPage } } class UserFactory extends User { constructor(name, viewPage) { super(name, viewPage) } create(role) { switch (role) { case 'superAdmin': return new UserFactory('超级管理员', [ '首页', '应用数据', '权限管理', ]) break case 'admin': return new UserFactory('管理员', ['首页', '应用数据']) break case 'user': return new UserFactory('普通用户', ['首页']) break default: throw new Error('参数错误, 可选参数:superAdmin、admin、user') } } } let userFactory = new UserFactory() let superAdmin = userFactory.create('superAdmin') let admin = userFactory.create('admin') let user = userFactory.create('user') console.log(superAdmin) console.log(admin) console.log(user)\"]},\"1755\":{\"h\":\"抽象工厂模式\",\"t\":[\"抽象工厂模式通过提供一个接口来创建一系列相关的产品，这些产品通常属于不同的类，但又有着某种关联或者依赖关系。通过使用抽象工厂模式，我们可以确保创建的产品是相互配合使用的，并且隐藏了具体产品的实现细节。\",\"在抽象工厂模式中，有两个核心概念：抽象工厂和具体工厂。抽象工厂定义了一组用于创建产品的抽象方法，而具体工厂则实现了这些抽象方法，并负责创建具体的产品。\",\"具体工厂类根据不同的需求实现了抽象工厂中定义的方法，每个方法都会返回一个具体的产品对象。这些产品对象通常属于同一个产品簇，它们具有相似的特性或者功能。\",\"通过使用抽象工厂模式，我们可以在不修改客户端代码的情况下，更换具体工厂类，从而创建不同簇的产品。这种灵活性使得我们可以根据需要动态地改变所使用的产品。\",\"在网站登录中，会使用不同的第三方登录方式，例如微信、QQ、微博，这三类账号就是对应的类簇。在抽象工厂中，类簇一般用于父类的定义，并在父类中定义一些抽象的方法（声明但不能使用的方法），在通过抽象工厂让子类继承父类，所以，抽象工厂实际上就是实现子类继承父类的方法。\",\"// 抽象工厂接口 class AuthFactory { createLogin() {} } ​ // 具体工厂类 - 微信登录 class WeChatAuthFactory extends AuthFactory { createLogin() { return new WeChatLogin(); } } ​ // 具体工厂类 - QQ登录 class QQAuthFactory extends AuthFactory { createLogin() { return new QQLogin(); } } ​ // 具体工厂类 - 微博登录 class WeiboAuthFactory extends AuthFactory { createLogin() { return new WeiboLogin(); } } ​ // 抽象登录类 class AbstractLogin { authenticate() {} } ​ // 具体登录类 - 微信登录 class WeChatLogin extends AbstractLogin { authenticate() { console.log('WeChat login'); } } ​ // 具体登录类 - QQ登录 class QQLogin extends AbstractLogin { authenticate() { console.log('QQ login'); } } ​ // 具体登录类 - 微博登录 class WeiboLogin extends AbstractLogin { authenticate() { console.log('Weibo login'); } } ​ // 使用示例 function performAuthentication(factory) { const login = factory.createLogin(); login.authenticate(); } ​ const weChatFactory = new WeChatAuthFactory(); performAuthentication(weChatFactory); ​ const qqFactory = new QQAuthFactory(); performAuthentication(qqFactory); ​ const weiboFactory = new WeiboAuthFactory(); performAuthentication(weiboFactory);\"]},\"1756\":{\"c\":[\"设计模式\"]},\"1757\":{\"c\":[\"工厂模式\"]},\"1758\":{\"h\":\"建造者模式\",\"t\":[\"建造者模式属于创建型模式的一种，提供一种创建复杂对象的方式。它将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示\",\"建造者模式是一步一步的创建一个复杂的对象，它允许用户只通过指定复杂的对象的类型和内容就可以构建它们，用户不需要指定内部的具体构造细节\",\"class Navbar { init() { console.log('navbar-init') } getData() { console.log('navbar-getData') return 'navbar-111' } render() { console.log('navbar-render') } } class List { init() { console.log('list-init') } getData() { console.log('list-getData') return new Promise((resolve) => { setTimeout(() => { resolve('list-111') }, 1000) }) } render() { console.log('list-render') } } class Creator { async startBuild(builder) { await builder.init() await builder.getData() await builder.render() } } const op = new Creator() op.startBuild(new Navbar()) op.startBuild(new List())\",\"建造者模式将一个复杂对象的构建层于与其表示层相互分类，同样的构建过程可采用不同的表示。工厂模式主要是为了创建对象实例或者类簇（抽象工厂），关心的是最终产出（创建）的是什么，而不关心创建的过程。而建造者模式关心的是创建这个对象的整个过程，甚至于创建对象的每一个细节。\"]},\"1759\":{\"c\":[\"设计模式\"]},\"1760\":{\"c\":[\"建造者模式\"]},\"1761\":{\"h\":\"单例模式\"},\"1762\":{\"h\":\"定义\",\"t\":[\"单例模式 （Singleton Pattern），保证一个类只有一个实例，并提供一个访问它的全局访问点。也就是说，第二次使用同一个类创建新对象的时候，应该得到与第一次创建的对象完全相同的对象。\",\"重点： \",\"单一实例：确保只创建一个类的实例。\",\"全局访问点：提供一个全局可访问的接口用于访问该实例。\",\"自我管理：单例类通常自己负责管理它的创建和生命周期\",\"在编程中也有很多对象只需要唯一一个，比如数据库连接、线程池、配置文件缓存、浏览器中的 window/document 等，如果创建多个实例，会带来资源耗费严重，或访问行为不一致等情况。\"]},\"1763\":{\"h\":\"使用场景\",\"t\":[\"当需要确保在整个应用中只有一个实例存在，并且该实例需要被全局访问时，单例模式是一个不错的选择。然而，需要谨慎使用单例模式，因为它可能会引入全局状态，增加代码的复杂性和耦合度。\"]},\"1764\":{\"h\":\"React中的状态管理\",\"t\":[\"在 React 应用中，使用单例模式的一个常见场景是状态管理。通常情况下，你可以使用库如 Redux 或 MobX 来管理应用的状态，它们本质上也是单例模式的实现。\",\"Redux 的 Store：Redux 中的 Store 对象是一个单例，它包含了整个应用的状态树，并且在整个应用中是唯一的。通过 Redux 提供的 API，可以对这个全局状态进行操作和访问。\",\"MobX 的 Store：类似地，MobX 也可以创建一个单例的状态存储对象，用于管理应用的状态，并确保在整个应用中是唯一的。\",\"这些状态管理工具利用了单例模式的思想，帮助我们在 React 应用中更好地管理和共享状态。当需要在 React 应用中跨组件共享状态、统一管理状态更新时，可以考虑使用这些状态管理库，并将其视为单例对象来管理应用的状态。\"]},\"1765\":{\"h\":\"Vuex\",\"t\":[\"Vuex 是 Vue 的官方状态管理库，它实现了一个集中式存储，用来存储所有组件的共享状态。这个存储是响应式的，当 Vue 组件从 store 中读取状态的时候，若状态发生变化，相应的组件也会得到高效的更新。Vuex 的 store 是一个单例，整个应用只创建一个 store 实例，确保了应用各个部分状态的一致性。\"]},\"1766\":{\"h\":\"全局Loading\",\"t\":[\"ElementUI 中的全屏 Loading 蒙层调用有两种形式：\",\"指令形式：Vue.use(Loading.directive)\",\"服务形式：Vue.prototype.$loading = service\",\"用服务方式使用全屏 Loading 是单例的，即在前一个全屏 Loading 关闭前再次调用全屏 Loading，并不会创建一个新的 Loading 实例，而是返回现有全屏 Loading 的实例。\"]},\"1767\":{\"h\":\"全局方法/常量\",\"t\":[\"全局方法： 通过使用单例模式，你可以创建一个包含全局方法的对象，并确保在整个应用程序中只存在一个该对象的实例。这样可以保证全局方法在整个应用程序中的唯一性，类似于单例模式的概念。\",\"全局常量： 同样地，通过使用单例模式，你可以创建一个包含全局常量的对象，并确保在整个应用程序中只存在一个该对象的实例。这样可以保证全局常量在整个应用程序中的唯一性，也类似于单例模式的概念。\",\"虽然全局方法和常量本身并不是单例模式，但通过利用单例模式的思想来确保它们的唯一性，可以帮助你更好地管理和共享全局方法和常量，从而避免重复定义和管理的问题。\"]},\"1768\":{\"h\":\"优缺点\"},\"1769\":{\"h\":\"优点\",\"t\":[\"节约开支，提高性能： 单例模式在创建后在内存中只存在一个实例，节约了内存开支和实例化时的性能开支，特别是需要重复使用一个创建开销比较大的类时，比起实例不断地销毁和重新实例化，单例能节约更多资源，比如数据库连接\",\"解决资源多重占用： 单例模式可以解决对资源的多重占用，比如写文件操作时，因为只有一个实例，可以避免对一个文件进行同时操作\",\"提高系统流畅度： 只使用一个实例，也可以减小垃圾回收机制 GC（Garbage Collecation） 的压力，表现在浏览器中就是系统卡顿减少，操作更流畅，CPU 资源占用更少\"]},\"1770\":{\"h\":\"缺点\",\"t\":[\"单例模式本质上提供了一个全局状态，这可能导致代码难以测试和维护，因为系统的不同部分可能会以不可预见的方式相互影响\",\"对扩展不友好：一般不容易扩展，因为单例模式一般自行实例化，没有接口\",\"与单一职责原则冲突：一个类应该只关心内部逻辑，而不关心外面怎么样来实例化\"]},\"1771\":{\"h\":\"实现\"},\"1772\":{\"h\":\"构造函数\",\"t\":[\"let singleDemo; function SingleDemo() { if (!singleDemo) { singleDemo = this; } return singleDemo; } SingleDemo.prototype.show = function () { console.log(\\\"我是单例模式\\\"); }; const single1 = new SingleDemo(); const single2 = new SingleDemo(); console.log(single1 === single2);\"]},\"1773\":{\"h\":\"闭包\",\"t\":[\"var Singletion = (function () { var instance function User(name, age) { this.name = name this.age = age } return function (name, age) { if (!instance) { instance = new User(name, age) } return instance } })() console.log(Singletion() === Singletion()) // true\"]},\"1774\":{\"h\":\"类\",\"t\":[\"class Singleton { constructor(name, age) { if (!Singleton.instance) { this.name = name this.age = age Singleton.instance = this } return Singleton.instance } } console.log(new Singleton('张三', 18) === new Singleton('李四', 20)) // true\"]},\"1775\":{\"c\":[\"设计模式\"]},\"1776\":{\"c\":[\"单例模式\"]},\"1777\":{\"h\":\"装饰器模式\",\"t\":[\"装饰器模式能够很好的对已有功能进行拓展，这样不会更改原有的代码，对其他的业务产生影响，这方便我们再较少的改动下对软件功能进行拓展\",\"Function.prototype.before = function (beforeFn) { var _this = this return function () { // 先进行前置函数调用 beforeFn.apply(this, arguments) // 再执行原函数 return _this.apply(this, arguments) } } Function.prototype.after = function (afterFn) { var _this = this return function () { // 先执行原函数 var result = _this.apply(this, arguments) // 再执行后置函数 afterFn.apply(this, arguments) return result } } function test() { console.log('111111') } var test1 = test .before(function () { console.log('000000') }) .after(function () { console.log('222222') }) test1() // 000000 // 111111 // 222222\"]},\"1778\":{\"c\":[\"设计模式\"]},\"1779\":{\"c\":[\"装饰器模式\"]},\"1780\":{\"h\":\"适配器模式\",\"t\":[\"将一个类的接口转换成客户希望的另一个接口。适配器模式让那些接口不兼容的类可以一起工作\",\"class TencentMap { show() { console.log('开始渲染腾讯地图') } } class BaiduMap { display() { console.log('开始渲染百度地图') } } class TencentAdapater extends TencentMap { constructor() { super() } display() { this.show() } } function renderMap(map) { map.display() } renderMap(new TencentAdapater()) renderMap(new BaiduMap())\"]},\"1781\":{\"c\":[\"设计模式\"]},\"1782\":{\"c\":[\"适配器模式\"]},\"1783\":{\"h\":\"策略模式\"},\"1784\":{\"h\":\"定义\",\"t\":[\"策略模式（Strategy Pattern）指的是定义一系列的算法，把它们一个个封装起来，并且使它们可以互相替换。封装的策略算法一般是独立的，策略模式根据输入来调整采用哪个算法。⽬的就是将策略的实现和使用分离。\",\"策略模式中主要有下面概念：\",\"Context ：封装上下文，根据需要调用需要的策略，屏蔽外界对策略的直接调用，只对外提供一个接口，根据需要调用对应的策略\",\"Strategy ：策略，含有具体的算法，其方法的外观相同，因此可以互相代替\",\"StrategyMap ：所有策略的合集，供封装上下文调用\"]},\"1785\":{\"h\":\"使用场景\",\"t\":[\"多个算法只在行为上稍有不同的场景，这时可以使用策略模式来动态选择算法；\",\"算法需要自由切换的场景；\",\"有时需要多重条件判断，那么可以使用策略模式来规避多重条件判断的情况；\",\"策略模式可以⽤来封装⼀系列的“业务规则”,只要这些业务规则指向的⽬标⼀致，并且可以被替换使⽤，我们就可以⽤策略模式来封装它们。\"]},\"1786\":{\"h\":\"优缺点\"},\"1787\":{\"h\":\"优点\",\"t\":[\"策略之间相互独立，但策略可以自由切换，这个策略模式的特点给策略模式带来很多灵活性，也提高了策略的复用率；\",\"如果不采用策略模式，那么在选策略时一般会采用多重的条件判断，采用策略模式可以避免多重条件判断，增加可维护性；\",\"可扩展性好，策略可以很方便的进行扩展；\"]},\"1788\":{\"h\":\"缺点\",\"t\":[\"策略相互独立，因此一些复杂的算法逻辑无法共享，造成一些资源浪费；\",\"如果用户想采用什么策略，必须了解策略的实现，因此所有策略都需向外暴露，这是违背迪米特法则/最少知识原则的，也增加了用户对策略对象的使用成本。\"]},\"1789\":{\"h\":\"实现\",\"t\":[\"let strategry = { A: (salary) => { return salary * 4 }, B: (salary) => { return salary * 3 }, C: (salary) => { return salary * 2 }, } function calBonus(level, salary) { return strategry[level](salary) } console.log(calBonus('A', 10000)) console.log(calBonus('C', 8000))\",\"// 定义表单验证策略对象 const strategies = { isNonEmpty(value, errorMsg) { if (value === '') { return errorMsg; } }, isEmail(value, errorMsg) { const emailReg = /^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*.\\\\w+([-.]\\\\w+)*$/; if (!emailReg.test(value)) { return errorMsg; } }, minLength(value, length, errorMsg) { if (value.length < length) { return errorMsg; } }, }; ​ // 表单验证类 class Validator { constructor() { this.rules = []; } ​ addRule(value, rule, errorMsg) { this.rules.push(() => strategies[rule](value, errorMsg)); } ​ validate() { for (let rule of this.rules) { const errorMsg = rule(); if (errorMsg) { return errorMsg; } } } } ​ // 使用策略模式进行表单验证 const validator = new Validator(); validator.addRule('example@example.com', 'isNonEmpty', '邮箱不能为空'); validator.addRule('example@example.com', 'isEmail', '请输入有效的邮箱地址'); const error = validator.validate(); if (error) { console.log(error); } else { console.log('表单验证通过'); }\"]},\"1790\":{\"c\":[\"设计模式\"]},\"1791\":{\"c\":[\"策略模式\"]},\"1792\":{\"h\":\"代理模式\"},\"1793\":{\"h\":\"定义\",\"t\":[\"代理模式 （Proxy Pattern）又称委托模式，它为目标对象创造了一个代理对象，以控制对目标对象的访问。\",\"代理模式的关键是，当客户不⽅便直接访问⼀个对象或者不满⾜需要时，提供⼀个替身对象来控制这个对象的访问，客户实际上访问的是替身对象 。\",\"这种结构可以实现在调用目标对象前和调用后进行一些预操作和后操作，从而实现新的功能或者扩展目标的功能。\"]},\"1794\":{\"h\":\"使用场景\",\"t\":[\"缓存代理：使用缓存代理可以缓存计算结果，避免重复的计算或请求。例如，可以使用缓存代理来缓存网络请求的结果，如果下次请求相同的资源，则直接返回缓存的结果而不用再次发送请求。\",\"拦截器：使用代理对象作为拦截器可以拦截和处理请求、响应或事件。这在实际开发中经常用于添加额外的逻辑、验证、日志记录等操作。例如，可以使用拦截器拦截网络请求，在发送请求前添加统一的请求头或记录日志。\",\"虚拟代理：使用虚拟代理可以延迟加载资源或延迟执行昂贵的操作，从而提高页面的响应速度和用户体验。例如，在图片加载时可以使用虚拟代理，只有当图片需要显示时才实际加载图片数据。\",\"保护代理：保护代理可以用来限制对敏感操作或数据的访问权限。在前端开发中，可以使用保护代理来控制用户对特定功能的访问权限，例如需要登录才能进行操作的功能或需要特定权限才能查看的数据。\",\"正向代理： 一般的访问流程是客户端直接向目标服务器发送请求并获取内容，使用正向代理后，客户端改为向代理服务器发送请求，并指定目标服务器（原始服务器），然后由代理服务器和原始服务器通信，转交请求并获得的内容，再返回给客户端。正向代理隐藏了真实的客户端，为客户端收发请求，使真实客户端对服务器不可见；\",\"反向代理： 与一般访问流程相比，使用反向代理后，直接收到请求的服务器是代理服务器，然后将请求转发给内部网络上真正进行处理的服务器，得到的结果返回给客户端。反向代理隐藏了真实的服务器，为服务器收发请求，使真实服务器对客户端不可见。\"]},\"1795\":{\"h\":\"优缺点\"},\"1796\":{\"h\":\"优点\",\"t\":[\"控制访问：代理对象可以控制访问目标对象，从而可以在访问目标对象之前或之后执行一些额外的逻辑，例如权限校验、缓存数据等。\",\"隐藏复杂性：代理模式可以封装目标对象的复杂性，使客户端对目标对象的具体实现细节进行解耦，增强了代码的可维护性和可读性。\",\"增强安全性：通过代理对象可以对访问请求进行安全过滤和验证，确保数据的安全性和完整性。\",\"性能优化：代理模式可以实现一些性能优化策略，例如延迟加载、数据缓存等，从而提升系统的性能和响应速度。\"]},\"1797\":{\"h\":\"缺点\",\"t\":[\"增加复杂性：引入代理对象会增加代码的复杂性，需要额外的开发和维护工作，可能会导致系统变得难以理解和维护。\",\"性能损失：在使用代理模式时，会增加一定的开销，例如代理对象的创建、额外逻辑的执行等，可能会对系统的性能产生一定影响。\",\"可能引入新问题：设计和实现代理模式时需要考虑到代理对象与目标对象之间的交互逻辑，如果设计不合理或实现有误，可能会引入新的问题和 bug。\"]},\"1798\":{\"h\":\"实现\",\"t\":[\"// 目标对象：计算器函数 class Calculator { multiply(a, b) { console.log(`Calculating ${a} * ${b}`); return a * b; } } ​ // 代理对象：缓存代理 class CachingProxy { constructor() { this.calculator = new Calculator(); this.cache = {}; } ​ multiply(a, b) { const key = `${a}*${b}`; if (this.cache[key] === undefined) { this.cache[key] = this.calculator.multiply(a, b); } return this.cache[key]; } } ​ // 使用缓存代理进行乘法计算 const proxy = new CachingProxy(); console.log(proxy.multiply(2, 3)); // 第一次计算 console.log(proxy.multiply(2, 3)); // 从缓存中获取结果 console.log(proxy.multiply(4, 5)); // 新的乘法计算 console.log(proxy.multiply(4, 5)); // 从缓存中获取结果\"]},\"1799\":{\"c\":[\"设计模式\"]},\"1800\":{\"c\":[\"代理模式\"]},\"1801\":{\"h\":\"观察者模式\"},\"1802\":{\"h\":\"定义\",\"t\":[\"观察者模式（Observer Pattern）定义了一种一对多的关系，当⼀个对象的状态发⽣改变时，所有依赖于它的对象都将得到通知，使得它们能够自动更新自己。\",\"在前端开发中，观察者模式是一种常用的设计模式，用于建立对象之间的一对多依赖关系。在观察者模式中，有两种主要角色：观察者（Observer）和被观察者（Subject）。\",\"观察者（Observer）： 观察者是订阅了被观察者的状态变化，并在状态变化时进行相应操作的对象。在前端开发中，观察者通常是一些 UI 组件或模块，它们会监听某个数据或状态的变化。\",\"被观察者（Subject）： 被观察者是维护一组观察者对象列表，并提供注册、移除和通知观察者的方法。当被观察者的状态发生改变时，会通知所有订阅者进行相应的更新操作。\",\"观察者模式属于行为型模式，行为型模式关注的是对象之间的通讯，观察者模式就是观察者和被观察者之间的通讯。\"]},\"1803\":{\"h\":\"优缺点\"},\"1804\":{\"h\":\"优点\",\"t\":[\"解耦：观察者模式实现了发布者与订阅者之间的解耦，发布者和订阅者之间可以互相独立地变化，不会影响到对方。\",\"扩展性：可以方便地添加新的观察者，使得系统可以灵活地适应需求变化。\",\"可重用性：观察者模式将发布者与订阅者解耦，可以使得不同的订阅者对象可以复用。\",\"实时通知：当发布者状态发生改变时，所有订阅者都会实时接收到通知，保持数据的同步性。\"]},\"1805\":{\"h\":\"缺点\",\"t\":[\"内存泄漏：如果订阅者未正确取消订阅或销毁，可能会导致内存泄漏问题，因为订阅者对象仍然存在。\",\"关注过多：由于所有订阅者都会收到发布者的通知，有时候可能会收到一些不感兴趣的信息，导致订阅者关注的事件过多。\",\"性能开销：当订阅者数量庞大时，发布者每次发布通知时需要遍历所有订阅者，可能会引起性能问题。\"]},\"1806\":{\"h\":\"实现\",\"t\":[\"class Subject { constructor() { this.observers = [] } add(observer) { this.observers.push(observer) } remove(observer) { this.observers = this.observers.filter((item) => item !== observer) } notify() { this.observers.forEach((item) => { item.update() }) } } class Observer { constructor(name) { this.name = name } update() { console.log('update', this.name) } } const subject = new Subject() const observer1 = new Observer('kerwin') const observer2 = new Observer('tiechui') subject.add(observer1) subject.add(observer2) setTimeout(() => { subject.remove(observer1) }, 1000) setTimeout(() => { subject.notify() }, 2000)\",\"优势 目标者与观察者，功能耦合度降低，专注自身功能逻辑；观察者被动接收更新，时间上解耦，实时接收目标者更新状态。\",\"缺点 观察则会模式虽然实现了对象间依赖关系的低耦合，但却不能对事件通知进行细分管控，如“筛选通知”，“指定主题事件通知”\"]},\"1807\":{\"c\":[\"设计模式\"]},\"1808\":{\"c\":[\"观察者模式\"]},\"1809\":{\"h\":\"发布订阅模式\"},\"1810\":{\"h\":\"定义\",\"t\":[\"发布-订阅是⼀种消息范式，消息的发送者（称为发布者）不会将消息直接发送给特定的接收者（称为订阅者）。⽽是将发布的消息分为不同的类别，⽆需了解哪些订阅者（如果有的话）,同样的，订阅者可以表达对⼀个或多个类别的兴趣，只接收感兴趣的消息，⽆需了解哪些发布者存在。\"]},\"1811\":{\"h\":\"优缺点\"},\"1812\":{\"h\":\"优点\",\"t\":[\"解耦：发布-订阅模式可以使发布者和订阅者之间解耦，它们互不依赖于彼此的具体实现，从而降低组件之间的耦合度。\",\"异步：发布-订阅模式支持异步操作，发布者可以在任何时间发布事件，订阅者也可以在适当的时间订阅事件。这种异步机制非常灵活，适用于需要非阻塞操作的场景。\",\"动态：发布-订阅模式支持动态添加新的订阅者和取消订阅者，使得系统更加灵活和可扩展。\",\"可复用性：通过发布-订阅模式可以实现事件的广播，可以让多个订阅者同时接收相同的事件消息，提高了代码的可复用性。\"]},\"1813\":{\"h\":\"缺点\",\"t\":[\"内存泄漏：发布-订阅模式在使用过程中需要手动管理订阅和取消订阅，如果不及时取消订阅可能会导致内存泄漏。\",\"调试困难：因为事件的发布和订阅是分布式的，可能会导致事件流难以追踪，使得调试和代码理解变得困难。\",\"性能问题：在一些多次触发事件的场景下，发布-订阅模式可能会存在性能问题，因为事件的广播需要循环遍历所有订阅者。\",\"难以维护：在一个复杂的系统中，如果过度使用发布-订阅模式可能会导致事件流变得难以维护和理解，增加代码的复杂性。\"]},\"1814\":{\"h\":\"实现\",\"t\":[\"const PubSub = { message: {}, publish(type) { if (!this.message[type]) return this.message[type].forEach((item) => item()) }, subscribe(type, cb) { if (!this.message[type]) { this.message[type] = [cb] } else { this.message[type].push(cb) } }, unsubscribe(type, cb) { if (!this.message[type]) return if (!cb) { this.message[type] && (this.message[type].length = 0) } else { this.message[type] = this.message[type].filter( (item) => item !== cb ) } }, } function testA() { console.log('testA') } function testB() { console.log('testB') } function testC() { console.log('testC') } PubSub.subscribe('A', testA) PubSub.subscribe('A', testC) PubSub.subscribe('B', testB) PubSub.publish('A') PubSub.publish('B')\"]},\"1815\":{\"c\":[\"设计模式\"]},\"1816\":{\"c\":[\"发布订阅模式\"]},\"1817\":{\"h\":\"模块模式\",\"t\":[\"模块话模式最初被定义为在传统软件工程中为类提供私有和公共封装的一种方法\",\"能够使一个单独的对象拥有公共/私有的方法和变量，从而屏蔽来自全局作用域的特殊部分。这可以减少我们的函数名与在页面中其他脚本区域内定义的函数名冲突的可能性\",\"const obj = (function () { var count = 0 return { increse() { return ++count }, decrese() { return --count }, } })()\",\"export default { name: 'moduleA', test() { return 'test' }, } <script type=\\\"module\\\"> import moduleA from './1.js' console.log(moduleA); </script>\"]},\"1818\":{\"c\":[\"设计模式\"]},\"1819\":{\"c\":[\"模块模式\"]},\"1820\":{\"h\":\"桥接模式\",\"t\":[\"桥接模式：将抽象部分与它的实现部分分离，使它们都可以独立地变化 使用场景：一个类存在两个或多个独立变化的维度，且这两个或多个维度都需要进行扩展\",\"优点： 把抽象与实现隔离开，有助于独立地管理各组成部分\",\"缺点： 每使用一个桥接元素都要增加一次函数调用，这对应用程序的性能会有一些负面影响（提高了系统的复杂程度）\",\"const Aniations = { bounce: { show(ele) { console.log(ele, '弹跳显示') }, hide(ele) { console.log(ele, '弹跳隐藏') }, }, slide: { show(ele) { console.log(ele, '滑动显示') }, hide(ele) { console.log(ele, '滑动隐藏') }, }, rotate: { show(ele) { console.log(ele, '旋转显示') }, hide(ele) { console.log(ele, '旋转隐藏') }, }, } function Toast(ele, animation) { this.ele = ele this.animation = animation } Toast.prototype.show = function () { this.animation.show(this.ele) } Toast.prototype.hide = function () { this.animation.hide(this.ele) } let taost1 = new Toast('div1', Aniations.bounce) taost1.show()\"]},\"1821\":{\"c\":[\"设计模式\"]},\"1822\":{\"c\":[\"桥接模式\"]},\"1823\":{\"h\":\"组合模式\",\"t\":[\"const Folder = function (folder) { this.folder = folder this.list = [] } Folder.prototype.add = function (res) { this.list.push(res) } Folder.prototype.scan = function () { console.log('扫描文件夹', this.folder) for (let i = 0; i < this.list.length; i++) { this.list[i].scan() } } const File = function (file) { this.file = file } File.prototype.scan = function () { console.log('开始扫描文件', this.file) } let rootFolder = new Folder('root') let htmlFolder = new Folder('html') let cssFolder = new Folder('css') let jsFolder = new Folder('js') let html4 = new File('html4') let html5 = new File('html5') let css2 = new File('css2') let css3 = new File('css3') let es5 = new File('es5') let es6 = new File('es6') rootFolder.add(htmlFolder) rootFolder.add(cssFolder) rootFolder.add(jsFolder) htmlFolder.add(html4) htmlFolder.add(html5) cssFolder.add(css2) cssFolder.add(css3) jsFolder.add(es5) jsFolder.add(es6) rootFolder.scan()\"]},\"1824\":{\"c\":[\"设计模式\"]},\"1825\":{\"c\":[\"组合模式\"]},\"1826\":{\"h\":\"组合模式\",\"t\":[\"有时候需要向某些对象发送请求，但是并不知道请求的接收者是谁，也不知道被请求的操作是什么。需要一种松耦合的方式来设计程序，使得发送者和接收者能够消除彼此之间的耦合关系\",\"命令模式由三种角色构成：\",\"发布者invoker(发出命令，调用命令对象，不知道如何执行与谁执行)\",\"接收者receiver(提供对应接口处理请求，不知道谁发起请求)\",\"命令对象command(接收命令，调用接收者对应接口处理发布者的请求)\",\"class Receiver { execute() { console.log('接收者执行请求') } } class Command { constructor(receiver) { this.receiver = receiver } execute() { console.log('命令对象=>接受者如何处理') this.receiver.execute() } } class Invoker { constructor(command) { this.command = command } order() { console.log('发布请求') this.command.execute() } } const order = new Command(new Receiver()) const client = new Invoker(order) client.order()\"]},\"1827\":{\"c\":[\"设计模式\"]},\"1828\":{\"c\":[\"组合模式\"]},\"1829\":{\"h\":\"模板方法模式\",\"t\":[\"模板方法模式由两部分组成，第一部分是抽象父类，第二部分是具体的实现子类。通常在抽象父类中封装了子类的算法逻辑，包括实现一些公共方法以及封装子类中所有方法的执行顺序。子类通过继承这个抽象类，也继承了整个算法结构，并且可以选择重写父类的方法。\",\"var Container = function (params = {}) { var F = function () {} F.prototype.init = async function () { var list = await this.getData() this.render(list) } F.prototype.getData = params.getData || function () { throw new Error('必须传入getData') } F.prototype.render = function (list) { console.log('render', list) } return F } var Myclass = Container({ getData() { console.log('获取nowplaying') return [1, 2, 3] }, }) new Myclass().init()\",\"模板方法模式是一种典型的通过封装变化提高系统扩展性的设计模式。运用了模板方法模式的程序中，子类方法种类和执行顺序都是不变的，但是子类的方法具体实现规则是可变的。父类是个模板，子类可以添加，就增加了不同的功能。\"]},\"1830\":{\"c\":[\"设计模式\"]},\"1831\":{\"c\":[\"模板方法模式\"]},\"1832\":{\"h\":\"模板方法模式\",\"t\":[\"迭代器模式是指提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示。迭代器模式可以把迭代的过程从业务逻辑中分出来，在使用迭代器模式之后，即使不关心对象的内部构造，也可以按顺序访问其中的每个元素。\",\"为遍历不同数据结构的“集合”提供统一的接口\",\"能遍历访问“集合数据中的项”，不关心项的数据结构\",\"var kerwinEach = function (arr, callback) { for (let i = 0; i < arr.length; i++) { callback(i, arr[i]) } } kerwinEach([11, 22, 33, 44], function (key, value) { var oli = document.createElement('li') oli.innerHTML = value list.appendChild(oli) })\"]},\"1833\":{\"c\":[\"设计模式\"]},\"1834\":{\"c\":[\"模板方法模式\"]},\"1835\":{\"h\":\"职责链模式\",\"t\":[\"使多个对象都有机会处理请求，从而避免了请求的发送者与多个接收者直接的耦合关系，将这些接收者链接成一条链，顺着这条链传递该请求，直到找到能处理该请求的对象。\",\"在责任链模式中，每个处理对象都包含对下一个处理对象的引用。当一个对象接收到请求后，它会根据条件决定是自己处理这个请求，还是将其传递给链中的下一个对象。这样，请求在链中传递，直到被处理或者整个链都无法处理该请求。\",\"这种模式常用于处理不同种类的请求或在不同条件下需要不同处理的场景，例如不同级别的日志记录器、不同类型的事件处理等。责任链模式可以有效地减少对象间的耦合，并提高系统的灵活性和可扩展性\"]},\"1836\":{\"h\":\"优缺点\"},\"1837\":{\"h\":\"优点\",\"t\":[\"降低耦合度：责任链模式让多个对象都有机会处理请求，从而将请求的发送者和接收者解耦。这样，各个处理者只需关注自己的责任范围，无需了解链中其他处理者的细节。\",\"增强可扩展性：可以动态地添加或修改处理链。如果需要新增一个处理步骤，只需增加一个新的链节点并适当配置其在链中的位置，而无需修改现有代码。\",\"灵活分配责任：可以根据需要在运行时重新组织链或改变成员的责任，使得系统更灵活应对变化。\",\"分散请求的处理：责任链模式可以将一个复杂的请求处理过程分散到多个处理者中，使得系统易于管理和维护。\"]},\"1838\":{\"h\":\"缺点\",\"t\":[\"性能问题：每个请求都从链的开始处经过，直到有对象处理它为止。这可能会引入一定的处理延迟，尤其是在链较长的情况下。\",\"责任划分不清：如果链中的处理者没有妥善设计，可能会出现某个请求没有被任何处理者处理的情况，或者不明确哪个处理者应当负责处理特定请求。\",\"复杂性增加：使用责任链模式可能会使系统结构变得复杂，特别是链中的节点数目较多或者链的结构动态变化时。\"]},\"1839\":{\"h\":\"实现\",\"t\":[\"<!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\" /> <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" /> <title>Document</title> </head> <body> <input type=\\\"text\\\" id=\\\"input\\\" /> <button id=\\\"btn\\\">注册</button> <script> let btn = document.getElementById('btn') btn.addEventListener('click', () => { let input = document.getElementById('input') checks.check() }) function checkEmpty() { let input = document.getElementById('input') if (input.value.length === 0) { console.log('这里不能为空') return } return 'next' } function checkNumber() { let input = document.getElementById('input') if (Number.isNaN(+input.value)) { console.log('这里必须是数字') return } return 'next' } function checkLength() { let input = document.getElementById('input') if (input.value.length < 6) { console.log('这里必须大于6个数字') return } return 'next' } class Chain { constructor(fn) { this.checkRule = fn this.nextRule = null } addRule(nextRule) { this.nextRule = new Chain(nextRule) return this.nextRule } check() { this.checkRule() === 'next' ? this.nextRule.check() : null } end() { this.nextRule = { check: () => 'end', } } } const checks = new Chain(checkEmpty) checks .addRule(checkNumber) .addRule(checkNumber) .addRule(checkLength) .end() </script> </body> </html>\",\"优点 \",\"符合单一职责，使每个方法中都只有一个职责\",\"符合开放封闭原则，在需求增加时可以很方便的扩充新的责任\",\"使用的时候不需要知道谁才是真正处理方法，减少大量的if或switch语法\",\"缺点 \",\"团队成员需要对责任链存在共识，否则当看到一个方法莫名其妙的返回一个next时一定会很奇怪\",\"出错时不好排查问题，因为不知道到底在哪个责任中出的错，需要从链头开始往后找\"]},\"1840\":{\"c\":[\"设计模式\"]},\"1841\":{\"c\":[\"职责链模式\"]},\"1842\":{\"h\":\"系统工程与信息系统基础\"},\"1843\":{\"h\":\"概念\",\"t\":[\"【系统工程】是一种组织管理技术。\",\"【系统工程】是为了最好的实现系统的母的，对系统的组成要素、组织结构、信息流、控制机构进行分析研究的科学方法。\",\"【系统工程】从整体出发、从系统观念出发，以求【整体最有】。\",\"【系统工程】利用计算机作为工具，对系统的结构、元素、信息和反馈等进行分析，以达到最优规划、最优设计、最优管理和最优控制的目的。\",\"【系统工程方法】是一种现代的科学决策方法。\"]},\"1844\":{\"h\":\"系统工程方法\"},\"1845\":{\"h\":\"1、霍尔三维结构 “硬科学”方法论\"},\"1846\":{\"h\":\"逻辑维：解决问题的逻辑过程\",\"t\":[\"顺序：\",\"明确问题\",\"确定目标 建立价值体系或评价体系\",\"系统综合\",\"系统分析\",\"优化 系统方案的优化选择\",\"系统决策\",\"实施计划\"]},\"1847\":{\"h\":\"时间维：工作进程\",\"t\":[\"顺序：\",\"规划阶段 调研，谋求活动的规划与战略\",\"拟定方案 提出具体的计划方案\",\"研制阶段 完成研制方案及生产计划\",\"生产阶段 生产零部件及提出安装计划\",\"安装阶段 安装完毕，完成系统的运行计划\",\"运行阶段 系统按照预期的用途开展服务\",\"更新阶段 改进原有系统、或消亡原有系统\"]},\"1848\":{\"h\":\"知识维：专业科学知识\",\"t\":[\"工程、医药、建筑、商业、法律、管理\",\"应用场景：组织和管理大型工程建设项目\"]},\"1849\":{\"h\":\"2、切克兰德方法 “软科学方法论”\",\"t\":[\"核心不是“最优化”。而是“比较”和“探寻”\",\"步骤：\",\"认识问题、根底定义、建立概念模型、比较及探寻、选择、设计与实施、评估与反馈\"]},\"1850\":{\"h\":\"3、并行工程方法\",\"t\":[\"“制造过程”与“支持过程”并行\",\"强调三个方面：产品设计开发期间，最快速度按质完成；各项工作问题协调解决；适当的信息系统工具\"]},\"1851\":{\"h\":\"4、综合集成法\",\"t\":[\"钱学森命名，【简单系统】和【巨系统】\",\"四原则：整体论原则、相互联系原则、有序性原则、动态原则\"]},\"1852\":{\"h\":\"5、WSR系统方法\",\"t\":[\"实践准则：【懂物理】【明事理】 【通人理】\"]},\"1853\":{\"h\":\"系统工程生命周期\"},\"1854\":{\"h\":\"系统工程声明周期阶段\",\"t\":[\"探索性研究\",\"概念阶段\",\"开发阶段\",\"生产阶段\",\"使用阶段\",\"保障阶段\",\"退役阶段\"]},\"1855\":{\"h\":\"系统工程声明周期方法\",\"t\":[\"计划驱动方法：需求-》设计-》构建-》测试-》部署 渐进迭代式开发：提供连续交付以达到期望的系统 精益开发：起源于丰田，是一个动态的、知识驱动的，以客户为中心的过程、 敏捷开发：更好的灵活性\"]},\"1856\":{\"h\":\"信息系统建设原则\",\"t\":[\"高层管理人员介入原则 如CIO介入\",\"用户参与开发原则 用户确定范围、核心用户全程参与、用户深度参与\",\"自顶向下规划原则 以此减少信息不一致的现象\",\"工程化原则 引入【软件工程】\",\"其他原则 创新性原则、整体性原则、发展性原则、经济性原则\"]},\"1857\":{\"h\":\"信息系统开发方法\"},\"1858\":{\"h\":\"结构化法\",\"t\":[\"自顶向下，逐步分解求精\",\"开发目标清晰化\",\"工作阶段程式化\",\"开发文档规范化\",\"设计方法结构化\",\"应变能力差\"]},\"1859\":{\"h\":\"面向对象法\",\"t\":[\"自底向上\",\"阶段界限不明\",\"更好应变、更好复用\",\"符合人们的思维习惯\"]},\"1860\":{\"h\":\"面向服务的方法\",\"t\":[\"粗粒度、松耦合\",\"标准化和结构化\",\"抽象级别：操作【低】-》服务【中】-》业务流程【高】\"]},\"1861\":{\"h\":\"原型法【需求阶段】\",\"t\":[\"针对需求不明确 按功能分：水平原型（界面）、垂直原型（复杂算法） 按最终结果分：抛弃式原型、演化式原型\"]},\"1862\":{\"h\":\"信息系统的分类\"},\"1863\":{\"h\":\"业务处理系统【TPS】\",\"t\":[\"早期最初级的信息系统【20世纪50-60年代】，又可称为电子数据处理系统，是计算机在管理方面早起应用的最初级形式的信息系统 功能：数据输入、数据处理【批处理、OLTP】、数据库维护、文件报表产生 TPS是服务于组织管理层次中最底层、最基础的信息系统\",\"数据处理\",\"批处理\",\"联机实时处理\"]},\"1864\":{\"h\":\"管理信息系统【MIS】\",\"t\":[\"由业务处理系统发展而成的，是在TPS基础上引进大量管理方法对企业整体信息进行处理，并利用信息进行预测、控制、计划、辅助企业全面管理的信息系统 MIS系统四大部件：信息源、信息处理器、信息用户和信息管理者 高度集成化的人机信息系统 金字塔结构：分多个层级\"]},\"1865\":{\"h\":\"决策支持系统【DSS】\",\"t\":[\"由语言系统、知识系统和问题处理系统3个互相关联的部分组成的，基于计算机的系统 用于辅助决策、支持决策\",\"DOSS应具有的特征\",\"数据和模型是DSS的主要资源\",\"DSS用来支援用户作决策而不是代替用户作决策\",\"DSS主要用于解决半结构化及非结构化问题\",\"DSS的作用在于提高决策的有效性而不是提高决策的效率\"]},\"1866\":{\"h\":\"专家系统【ES】\",\"t\":[\"是一个智能计算机程序系统，其内部含有某个领域具有专家水平的大量知识与经验，能够利用人类专家的知识和解决问题的方法来处理该领域的问题 知识+推理=专家系统。人工智能的一个重要分支\",\"知识库：存储求解实际问题的领域知识 综合数据库：存储问题的状态描述、中间结果、求解过程的记录等信息 推理机：实质是【规则解释器】 知识获取：两方面功能：知识的编辑求精及知识自学习 解释程序：面向用户服务的\"]},\"1867\":{\"h\":\"办公自动化系统【OAS】\",\"t\":[\"由计算机设备、办公设备、数据通信及网络设备、软件系统组成\"]},\"1868\":{\"h\":\"企业资源计划【ERP】\",\"t\":[\"打通供应链，集成，整合\",\"物料需求计划 -》 制造资源计划 -》 企业资源计划\"]},\"1869\":{\"h\":\"政府信息化与电子政务\",\"t\":[\"电子政务主要有3类角色：政府、企（事）业单位及公民。如果有第4类就是公务员。\",\"G2G 技术信息的采集、处理和利用，如人口信息\",\"G2E 政府内部管理系统\",\"G2B 政府给企业颁发【各种营业执照、许可证、合格证、质量认证】\",\"B2G 企业向政府缴税、企业向政府供应各种商品和服务【含竟/投标】、企业向政府提建议，申诉\",\"G2C 社区公安和水、火、天灾等与公共安全有关的信息，户口、各种证件和牌照的管理\",\"C2G 个人应向政府缴纳的各种税款和费用、个人向政府反馈民意【征求群众意见】、报警服务（盗贼、医疗、急救、火警等）\"]},\"1870\":{\"h\":\"企业信息化与电子商务\"},\"1871\":{\"h\":\"信息化的概念\",\"t\":[\"信息化是指在国家宏观信息政策指导下，通过信息技术开发、信息产业的发展、信息人才的配置，最大地利用信息资源以满足全社会的信息需求，从而加速社会各个领域的共同发展以推进信息社会的过程。\",\"信息化的主体是全社会成员（政府、企业、团体和个人），时域是一个长期过程，空域是经济和社会的一切领域，手段是现金社会生产工具。\"]},\"1872\":{\"h\":\"信息化的目的\",\"t\":[\"企业信息化的具体目标是优化企业业务活动使之更加有效，他的根本目的在于提高企业竞争能力，使得企业具有平稳和有效的运作能力，对紧急情况和机会做出快速反应，为企业内外部用户提供有价值的信息。\"]},\"1873\":{\"h\":\"设计三类创新\",\"t\":[\"【技术创新】在生产工艺设计、产品设计中使用计算机辅助设计系统，病通过互联网及时了解和掌握新的技术信息，加快技术向生产的转化。还有，生产技术与信息技术相结合，能够大幅低地提高技术水平和产品竞争力。\",\"【管理创新】按照市场发展的要求，要对企业现有的管理流程重新整合，从座位管理核心的财务、资金管理，转向技术、物资、人力资源的管理，并延伸到企业技术创新、工艺设计、产品设计、生产制造过程的管理，进而还要扩展到客户关系管理、供应链的管理乃至发展到电子商务。\",\"【制度创新】那些不适应企业信息化的管理体制、管理机制和管理制度必须得到创新。\"]},\"1874\":{\"h\":\"信息化需求的3个层次\",\"t\":[\"组织对信息化的需求是【组织信息化的原动力】\",\"战略需求 -》 目标【提升组织的竞争能力】 运作需求 -》【实现信息化战略目标】的需要、【运作策略】的需要、【人才培养】的需要 技术需求 -》 信息技术层面上对【系统的完善、升级、集成】\"]},\"1875\":{\"h\":\"企业信息化方法\",\"t\":[\"业务流程重构方法：“彻底的、根本性”重新设计流程\",\"核心业务应用方法：围绕核心业务推动信息化\",\"信息系统建设方法：建设信息系统座位企业信息化的重点和关键\",\"主题数据库方法：建立面向企业的核心业务的数据库，消除“信息孤岛”\",\"资源管理方法：切入点是为企业资源管理提供强大的能力。如ERP、SCM\",\"人力资本投资方法：人力资源理论【注意不是人力资源管理】把一部分企业的优秀员工看作是一种资本，能够取得投资收益\"]},\"1876\":{\"h\":\"信息系统战略规划\",\"t\":[\"第一阶段 以数据处理为核心，围绕职能部门需求 \",\"企业系统规划法（BSP）\",\"关键成功因素法（CSF）\",\"战略集合转化法（SST）\",\"第二阶段 以企业内部MIS为核心，围绕企业整体需求 \",\"战略数据规划法（SDP）：主题数据库\",\"信息工程法（IE）\",\"战略栅格法（SG）\",\"第三阶段 综合考虑企业内外环境以集成为核心，围绕企业战略需求 \",\"价值链分析法（VCA）\",\"战略一致性模型（SAM）\"]},\"1877\":{\"h\":\"企业信息化工程技术核心\",\"t\":[\"【信息技术】【自动化技术】【现代管理技术】【制造技术】\"]},\"1878\":{\"h\":\"客户关系管理系统（CRM）\",\"t\":[\"CRM的目的是提高收入。CRM的核心思想就是以客户为中心\",\"CRM的主要模块 \",\"销售自动化\",\"营销自动化\",\"客户服务与支持\",\"商业智能\",\"CRM的价值 \",\"提高工作效率，节省开支\",\"提高客户满意度\",\"提高客户的忠诚度\"]},\"1879\":{\"h\":\"供应链管理（SCM）\",\"t\":[\"强强联盒，整合与优化“三流”，打通企业间“信息孤岛”，严格的数据交换标准\",\"信息化的三流\",\"信息流 \",\"需求信息流（需求到供方）：如客户订单、生产计划、采购合同等\",\"如入库单、完工报告单、库存记录、可供销售量、提货发货单等\",\"资金流\",\"物流\"]},\"1880\":{\"h\":\"商业智能（BI）\",\"t\":[\"用途：决策分析【分析历史数据预判未来】\"]},\"1881\":{\"h\":\"数据仓库\"},\"1882\":{\"h\":\"数据挖掘\",\"t\":[\"分类 \",\"关联分析：挖掘出隐藏在数据间的相互关系\",\"序列模式分析：侧重点事分析数据间的前后关系\",\"分类分析：为每一个记录赋予一个标记再标记分类\",\"聚类分析：分类分析法的逆过程\"]},\"1883\":{\"h\":\"数据湖\",\"t\":[\"数据湖是一个存储企业的各种各样原始数据的大型仓库，其中数据可供存取、处理、分析及传输。\",\"数据仓库仅支持数据分析处理 数据湖既支持数据分析处理，也支持事务处理\"]},\"1884\":{\"h\":\"BPR和BPM\",\"t\":[\"BPR【业务流程重组】 颠覆原有流程、彻底性的再设计 BPM【业务流程管理】 使用PDCA循环，持续改进\"]},\"1885\":{\"h\":\"企业应用集成【EAI】\",\"t\":[\"系统未互联互通，存在【信息孤岛】，这种架构也被称为【烟囱架构】\"]},\"1886\":{\"h\":\"企业应用集成\",\"t\":[\"表示集成 数据集成 控制集成\",\"消息集成：数据量小，交互频繁，立即地，异步\",\"共享数据库：交互频繁，立即地，同步\",\"文件传输：数据量大，交互频度小，即时性要求低（月末，年末）\"]},\"1887\":{\"h\":\"企业门户\",\"t\":[\"企业信息门户：使员工/合作伙伴/客户/供应商都能够访问企业内部网络和因特网存储的各种自己所需的信息。\",\"企业知识门户：企业网站的基础上增加知识性内容。\",\"企业应用门户：以商业流程和企业应用为核心，把商业流程中功能不同的应用模块通过门户技术集成在一起。\",\"垂直门户：为某一特定的行业服务的，传送的信息只属于人们感兴趣的领域。\"]},\"1888\":{\"h\":\"电子商务\",\"t\":[\"电子商务主要有2类角色：企业及个人\"]},\"1889\":{\"h\":\"数字化转型\",\"t\":[\"【数字化】是新一代信息技术真正的实现推动整个【商业模式的变革】，推动产业链的重构，推动改进企业与消费者之间的关系，以及企业与合作伙伴之间的关系。\",\"企业数字化转型的五个发展阶段\",\"初始级发展阶段 数码化：信息的数字化，记录、存储、传输数码化\",\"单元级发展阶段 数量化：提升单项业务的运行规范性和效率\",\"流程级发展阶段 数字化：关键业务流程及关键业务与设备设软硬行为活动等要素间的集成优化\",\"网络级发展阶段 数模化：组织（企业）级数字化和产业互联网级网络化，实现以数据为驱动的业务模式创新\",\"生态级发展阶段 数用化：生态级数字化和泛在物联网级网络化，推动与生态合作伙伴间资源、业务、能力等要素的开放共享和协同合作\"]},\"1890\":{\"h\":\"智能制造体系\",\"t\":[\"系统层级\",\"【设备层】传感器、仪器仪表、机器、装置等\",\"【单元层】企业内处理信息、实现检测和控制物理流程等层级\",\"【车间层】面向工厂或车间生产管理的层级\",\"【企业层】面向企业经营管理的层级\",\"【协同层】其内部和外部信息互联和共享，实现跨企业间业务协同的层级\"]},\"1891\":{\"c\":[\"软考\"]},\"1892\":{\"c\":[\"软考\"]},\"1893\":{\"h\":\"软件工程\"},\"1894\":{\"h\":\"软件过程模型\"},\"1895\":{\"h\":\"瀑布模型\",\"t\":[\"【特点】\",\"严格区分阶段，每个阶段因果关系紧密相连\",\"只适合需求明确的项目\",\"【缺点】\",\"软件需求完整性、正确性难确定\",\"严格串行化，很长时间才能看到结果\",\"瀑布模型要求每个阶段一次性完全解决该阶段工作，这不现实\"]},\"1896\":{\"h\":\"原型模型\",\"t\":[\"适合需求不明确的项目\",\"原型模型两个阶段\",\"原型开发阶段\",\"目标软件开发阶段\"]},\"1897\":{\"h\":\"V模型\",\"t\":[\"测试贯穿于始终，测试分阶段，测试计划提前\"]},\"1898\":{\"h\":\"螺旋模型\",\"t\":[\"以快速原型为基础+瀑布模型，考虑了风险问题\"]},\"1899\":{\"h\":\"构建组装模型\",\"t\":[\"【优点】 以扩展、易重用、降低成本、安排任务更灵活 【缺点】 构建设计要求经验丰富的架构师、设计不好的构件难重用、强调重用可能牺牲其他指标（如性能）、第三方构件质量难控制 【示例】 方舱医院、乐高积木\"]},\"1900\":{\"h\":\"基于构件的软件工程（CBSE）\",\"t\":[\"CBSE体现了【购买而不是重新构造】的哲学\",\"【CBSE的构件应该具备的特征】\",\"可组装性：所有外部交互必须通过公开定义的接口进行\",\"可部署性：构件总是二进制形式的，能作为一个独立实体在平台上运行\",\"文档化：用户根据文档来判断构件是否满足需求\",\"独立性：可以在无其他特殊构件的情况下进行组装和部署\",\"标准化：符合某种标准化的构件模型\",\"【构件的组装】\",\"顺序组装：按顺序调用已经存在的构件，可以用两个已经存在的构件来创造一个新的构件\",\"层次组装：被调用构件的“提供”接口必须和调用构件的“请求”接口兼容\",\"叠加组装：多个构件合并形成新构件，新构件整合原构件的功能，对外提供新的接口\"]},\"1901\":{\"h\":\"统一过程\",\"t\":[\"用例驱动、以架构为中心、迭代和增量\",\"初始 \",\"定义最终产品视图和业务模型\",\"确定系统范围\",\"细化 \",\"设计及确定系统架构\",\"指定工作技术啊及资源要求\",\"构造 \",\"开发剩余构件和应用程序功能，把这些构件集成为产品，并进行详细测试\",\"移交 \",\"确保软件对最终用户是可用的，进行测试，制作产品发布版本\"]},\"1902\":{\"h\":\"生命周期\",\"t\":[\"业务建模\",\"需求\",\"分析与设计\",\"实现\",\"测试\",\"部署\",\"配置与变更管理\",\"项目管理\",\"环境\"]},\"1903\":{\"h\":\"敏捷方法\",\"t\":[\"特点\",\"适应性的\",\"以人为本\",\"增量迭代，小步快跑\"]},\"1904\":{\"h\":\"敏捷方法\",\"t\":[\"4大价值观\",\"沟通【加强面对面沟通】\",\"简单【不过度设计】\",\"反馈【及时反馈】\",\"勇气【姐搜变更的勇气】\",\"极限编程：价值观【交流、朴素、反馈、勇气】、近螺旋式的开发方法\",\"水晶方法：提倡“机动性”的方法，拥有对不同类型项目非常有效的敏捷过程\",\"SCRUM：侧重于项目管理\",\"特征驱动开发方法：认为有效的软件开发需要3要素【人、过程、技术】。定义了6种关键的项目角色：项目经理、首席结构设计师、开发经理、主程序员、程序员和领域专家\",\"开放式源码：程序开发人员在地域上分布很广【其他方法强调集中办公】\",\"ASD方法：其核心是三个非线形的、重叠的开发阶段：猜测、合作与学习\",\"动态系统开发方法：倡导以业务为核心\"]},\"1905\":{\"h\":\"逆向工程\",\"t\":[\"实现级：包括程序的抽象语法树、符号表、过程的设计表示 结构级：包括反映程序分量之间相互依赖关系的信息，例如调用图、结构图、程序和数据结构 功能级：包括反映程序段功能及程序段之间关系的信息，例如数据和控制流模型 领域级：包括反映程序分量或程序诸实体与应用领域概念之间对应关系的信息，例如实体关系模型\",\"与逆向工程相关的概念有重构、设计恢复、再工程和正向工程\",\"重构/重组。重构是指在【同一抽象级别】上【转换系统描述形式】\",\"设计恢复。设计恢复是指借助工具从已有程序中抽象出有关数据设计、总体结构设计和过程设计等方面的信息\",\"逆向工程。逆向工程是分析程序，力图在比源代码更高抽象层次上建立程序的表示过程，逆向工程是设计的恢复过程\",\"正向工程。正向工程是指不仅从现有系统中恢复设计信息，而且使用该信息去改变或重构现有系统，以改善其整体质量\",\"再工程/重构工程。再工程是对现有系统的重新开发过程，包括逆向工程、新需求的考虑过程和正向工程三个步骤\"]},\"1906\":{\"h\":\"净室软件工程\",\"t\":[\"净室即无尘室、洁净室。也就是一个受控污染级别的环境\",\"使用盒结构规约（或形式化方法）进行分析和设计建模，并且强调将正确性验证，而不是测试，作为发现和消除错误的主要机制\",\"使用统计的测试来获取认证被交付的软件的可靠性所必需的出错率信息\",\"【技术手段】\",\"统计过程控制下的增量式开发：控制迭代\",\"基于函数的规范和设计：盒子结构 \",\"定义3种抽象层次：行为视图（黑盒）-》有限状态机视图（状态盒）-》过程视图（明盒）\",\"正确性验证：净室工程的核心\",\"统计测试和软件认证：使用统计学原理，总体太大时必须采用抽样方法\",\"【缺点】\",\"太理论化，正确性验证的步骤比较困难且耗时\",\"开发小组不进行传统的模块测试，这是不现实的\",\"脱胎于传统软件工程，不可避免带有传统软件工程的一些弊端\"]},\"1907\":{\"h\":\"需求工程\",\"t\":[\"软件需求是指用户对系统在功能、行为、性能、设计约束等方面的期望。\",\"【需求工程主要活动的阶段划分】\",\"需求获取\",\"需求分析\",\"形成需求规格【形成SRS】\",\"需求确认与验证【形成需求基线（经过评审的SRS）】\",\"需求管理【变更控制、版本控制、需求跟踪、需求状态跟踪】\",\"需求管理是对【需求基线的管理】\"]},\"1908\":{\"h\":\"需求获取\"},\"1909\":{\"h\":\"需求分析\"},\"1910\":{\"h\":\"数据流图\"},\"1911\":{\"h\":\"数据流图平衡原则\"},\"1912\":{\"h\":\"UML图\"},\"1913\":{\"h\":\"用例图\",\"t\":[\"包含、扩展、泛化\"]},\"1914\":{\"h\":\"类图与对象图\",\"t\":[\"1：表示一个集合中的一个对象对应另一个集合中一个对象\",\"0..*:表示一个集合中的一个对象对应另一个集合中的0个或多个对象（可以不对应）\",\"1..*:表示一个集合中的一个对象对应另一个集合中的一个或多个对象（至少对应一个）\",\"*：表示一个集合中的一个对象对应另一个集合中的多个对象\"]},\"1915\":{\"h\":\"顺序图\"},\"1916\":{\"h\":\"通信图（协作图）\"},\"1917\":{\"h\":\"状态图\"},\"1918\":{\"h\":\"活动图\"},\"1919\":{\"h\":\"定时图\"},\"1920\":{\"h\":\"构件图与包图\"},\"1921\":{\"h\":\"部署图\"},\"1922\":{\"h\":\"需求开发\"},\"1923\":{\"h\":\"需求定义\",\"t\":[\"严格定义法 \",\"所有需求都能被预先定义\",\"开发人员与用户之间能够准确而清晰地交流\",\"采用图形/文字可以充分体现最终系统\",\"原型法 \",\"并非所有的需求都能在开发前被准确的说明\",\"项目参加者之间通常都存在交流上的困难\",\"需要实际的、可供用户参与的系统模型\",\"有合适的系统开发环境\",\"反复是完全需要和值得提倡的，需求一旦确定，就应该遵从严格的方法\"]},\"1924\":{\"h\":\"需求验证\"},\"1925\":{\"h\":\"需求跟踪\"},\"1926\":{\"h\":\"需求变更\",\"t\":[\"识别出问题 -》 问题分析和变更描述 -》 变更分析和成本计算 -》 变更实现 -》 修改后端需求\"]},\"1927\":{\"h\":\"软件系统建模\"},\"1928\":{\"h\":\"人机界面设计\",\"t\":[\"置于用户控制之下 \",\"以不强迫用户进入不必要的或不希望的动作方式来定义交互方式\",\"提供灵活的交互\",\"允许用户交互可以被中断和撤销\",\"当技能级别增加时可以使交互流水化并允许定制交互\",\"式用户隔离内部技术细节\",\"设计应允许用户和出现在屏幕上的对象直接交互\",\"减少用户的记忆负担 \",\"减少对短期记忆的要求\",\"建立有意义的缺省\",\"定义直觉性的捷径\",\"界面的视觉布局应该基于真实的世界的隐喻\",\"以不断进展的方式揭示信息\",\"保持界面的一致性 \",\"允许用户将当前任务放入有意义的语境\",\"在应用系列内保持一致性\",\"如过去的交互模型已建立了用户的期望，除非有迫不得已的理由不要改变它\"]},\"1929\":{\"h\":\"结构化设计\",\"t\":[\"概要设计【外部设计】：功能需求分配给软件模块，确定每个模块的功能和调用关系，形成模块结构图\",\"详细设计【内部设计】：为每个具体任务选择适当的技术手段和处理方法\"]},\"1930\":{\"h\":\"结构化设计原则\",\"t\":[\"模块独立性原型（高内聚、低耦合）\",\"保持模块的大小适中\",\"多扇入，少扇出\",\"深度和宽度均不宜过高\"]},\"1931\":{\"h\":\"内聚\"},\"1932\":{\"h\":\"耦合\"},\"1933\":{\"h\":\"模块四要素\",\"t\":[\"输入和输出：模块的输入来源和输出去向都是同一个调用者，即一个模块从调用者那取得输入，进行加工后再把输出返回调用者\",\"处理功能：：值模块把输入转换成输出所作的工作\",\"内部数据：指仅供该模块本身引用的数据\",\"程序代码：值用来实现模块功能的程序\"]},\"1934\":{\"h\":\"面向对象设计\"},\"1935\":{\"h\":\"基本过程\"},\"1936\":{\"h\":\"类的分类\",\"t\":[\"边界类 \",\"数据\",\"控制类 \",\"应用逻辑\",\"业务逻辑\",\"数据访问逻辑\",\"实体类 \",\"API接口\",\"用户界面\"]},\"1937\":{\"h\":\"设计原则\",\"t\":[\"单一职责原则：设计目的单一的类\",\"开放-封闭原则：对扩展开放，对修改封闭\",\"李氏替换原则：子类可以替换父类\",\"依赖倒置原则：要依赖与抽象，而不是具体实现；针对接口编程，不要针对实现编程\",\"接口隔离原则：使用多个专门的接口比使用单一的总接口要好\",\"组合重用原则：要尽量使用组合，而不是继承关系达到重用目的\",\"迪米特原则（最少知识原则）：一个对象应当对其他对象有尽可能少的了解\"]},\"1938\":{\"h\":\"软件测试\",\"t\":[\"动态测试【计算机运行】 \",\"白盒测试法\",\"黑盒测试法\",\"灰盒测试法\",\"静态测试【人工监测和计算机辅助分析】 \",\"桌前检查\",\"代码审查\",\"代码走查\",\"控制流分析：是否存在没有使用的语句/无法达到的语句/调用并不存在的子程序 数据流分析：引用未定义的变量、对以前未使用的变量再次赋值 接口分析：模块之间接口的一致性、子程序和函数之间的接口一致性、函数形参与实参的数量、顺序、类型的一致性 表达式分析：括号不配对、数组引用越界、除数为零\"]},\"1939\":{\"h\":\"白盒测试与黑盒测试\",\"t\":[\"白盒测试【结构测试】：主要用于单元测试阶段 \",\"控制流测试【逻辑覆盖测试】（语句覆盖最弱，路径测试覆盖最强）\",\"数据流测试\",\"程序变异测试【错误驱动测试】\",\"黑盒测试【功能测试】：主要用于集成测试、确认测试和系统测试阶段 \",\"等价类划分：不同等价类，揭示不同问题；有效等价类/无效等价类\",\"边界值分析：1<x<=10,可取的x值为0、1、10和11作为测试数据\",\"错误推测：依靠测试人员的经验和直觉\",\"判定表：最适合描述在多个逻辑条件取值的组合所构成的复杂情况下，分别要执行哪些不同的动作\",\"因果图：根据输入条件与输出结果之间的因果关系来设计测试用例\"]},\"1940\":{\"h\":\"软件测试阶段\",\"t\":[\"单元测试：依据【详细设计】，模块测试，模块功能、性能、接口等\",\"集成测试：依据【概要设计】，模块间的接口\",\"系统测试：依据【需求文档】，在真实环境下，验证完整的软件配置项能否和系统正确连接\",\"确认测试：依据【需求文档】，验证软件与需求的一致性。内部确认测试、Alpha测试、Beta测试、验收测试\",\"回归测试：测试软件变更后，变更部分的正确性和对变更需求的符合性\"]},\"1941\":{\"h\":\"集成测试\"},\"1942\":{\"h\":\"系统测试\"},\"1943\":{\"h\":\"系统转换计划\"},\"1944\":{\"h\":\"遗留系统演化策略\"},\"1945\":{\"h\":\"新旧系统的转换策略\",\"t\":[\"直接转换策略\",\"并行转换策略\",\"分段转换策略\"]},\"1946\":{\"h\":\"数据转换与迁移\"},\"1947\":{\"h\":\"软件维护\"},\"1948\":{\"h\":\"影响可维护性的因素\",\"t\":[\"【可理解性】是指通过阅读源代码和相关文档，了解软件的功能和如何运行的容易程度\",\"【可修改性】是指修改软件的难易程度\",\"【可测试性】是指验证软件程序正确的难易程度。可测试性好的软件，通常意味着软件设计简单，复杂性低。因为软件的复杂性越大，测试的难度也就越大\",\"【可靠性】一个软件的可靠性越高，需要维护的概率就会越低\",\"【可移植性】是指将软件从一个环境移植到新的环境下正确运行的难易程度。软件运行环境的变化是软件维护的一种常见情形，可移植性好的软件会降低维护的概率\"]},\"1949\":{\"h\":\"软件维护的类型\",\"t\":[\"正确性维护/改正性维护【修BUG】：识别和纠正软件错误/缺陷，测试不可能发现所有错误\",\"适应性维护【应变】：指使应用软件适应环境变化【外部环境、数据环境】而进行的修改\",\"完善性维护【新需求】：扩充功能和改善性能而进行的修改\",\"预防性维护【针对未来】：为了适应未来的软硬件环境的变化，应主动增加预防性的新的功能，以使用系统适应各类变化而不被淘汰。经典实例：【专用】改【通用】\"]},\"1950\":{\"c\":[\"软考\"]},\"1951\":{\"c\":[\"软考\"]},\"1952\":{\"h\":\"项目管理\"},\"1953\":{\"h\":\"盈亏平衡分析\",\"t\":[\"【正常情况下】销售额=固定成本+可变成本+税费+利润\",\"【盈亏平衡时】销售额=固定成本+可变成本+税费\"]},\"1954\":{\"h\":\"进度管理\",\"t\":[\"【WBS分解的基本要求】\",\"WBS的工作包时可控和可管理的，不能过于复杂\",\"任务分解也不能过细，一般原则WBS的树形结构不超过6层\",\"每个工作包要有一个交付成果\",\"每个热舞必须有明确定义的完成标准\",\"WBS必须有利于责任分配\"]},\"1955\":{\"h\":\"关键路径法\",\"t\":[\"关键路径法是在指定进度计划时使用的一种进度网络分析技术。关键路径法沿着项目进度网络路线进行正向与反向分析，从而计算出所有计划活动理论上的最早开始与完成日期、最迟开始与完成日期，不考虑任何资源限制\",\"总时差【即：松弛时间】：在不延误总工期的前提下，该活动的机动时间。活动的总时差等于该活动最迟完成时间与最早完成时间之差，或该活动最迟开始时间与最早开始时间之差\",\"对于网络计划中以终点为完成节点的活动，其自由时差与总时差相等。此外，由于活动的自由时差时其总时差的构成部分，所以，当活动的总时差为零时，其自由时差必然为零，可不必进行专门计算\"]},\"1956\":{\"h\":\"甘特图\",\"t\":[\"优点：甘特图直观、简单、容易制作，便于理解，能很清晰地标识出每一项任务的起始时间与结束时间，一般适用于比较简单的小型项目，可用于WBS的任何层次、进度控制、资源优化、编制资源和费用计划\",\"缺点：不能系统地表达一个项目所包含的各项工作之间的复杂关系，难以进行定量的计算和分析，以及计划的优化等\"]},\"1957\":{\"h\":\"质量管理\"},\"1958\":{\"h\":\"影响软件质量的3组因素\",\"t\":[\"产品修改 \",\"可理解性\",\"可维修性\",\"灵活性\",\"可测试性\",\"产品转移 \",\"可移植性\",\"可再用性\",\"互运行性\",\"产品运行 \",\"正确性\",\"健壮性\",\"效率\",\"完整性\",\"可用性\",\"风险\"]},\"1959\":{\"h\":\"软件质量控制与质量保证\",\"t\":[\"质量保证：一般是每隔一定时间（如，每个阶段末）进行的，主要通过系统的质量审计和过程分析来保证项目的质量。独特工具包括：质量审计和过程分析\",\"质量控制是实时监控项目的具体结果，以判断他们是否符合相关质量标准，指定有效方案，以消除产生质量问题的原因\",\"【质量保证的主要目标】\",\"【事前预防】工作\",\"尽量在刚刚引入缺陷时即将其捕获，而不是让缺陷扩散到下一个阶段\",\"作用于【过程】而【不是最终产品】\",\"贯穿于【所有的活动之中】，而不是只集中于一点\"]},\"1960\":{\"h\":\"软件能力成熟度模型集成（CMMI）\"},\"1961\":{\"h\":\"软件配置管理\",\"t\":[\"产品配置是指一个产品在其生命周期各个阶段所产生的各种形式（机器人可读或人工可读）和1各种版本的文档、计算机程序、部件及数据的集合\",\"关于配置项\",\"基线配置项（可交付成果）：需求文档、设计文档、源代码、可执行代码测试用例、运行软件所需数据等\",\"非基线配置项：各类计划（如项目管理计划，进度管理计划）、各类报告\",\"软件配置管理核心内容包括【版本控制】和【变更控制】\"]},\"1962\":{\"h\":\"软件工具\",\"t\":[\"按软件过程活动将软件工具分为：\",\"软件开发工具：需求分析工具、设计工具、编码与排错工具、测试工具\",\"软件维护工具：版本控制工具、文档分析工具、开发信息库工具、逆向工程工具、再工程工具\",\"软件管理和软件支持工具：项目管理工具、配置管理工具、软件评价巩固、软件开发工具的评价和选择\"]},\"1963\":{\"c\":[\"软考\"]},\"1964\":{\"c\":[\"软考\"]},\"1965\":{\"h\":\"软件架构设计\"},\"1966\":{\"h\":\"软件架构的概念\",\"t\":[\"软件架构 = 软件体系结构\",\"架构设计就是需求分配，即将满足需求的职责分配到组件上\"]},\"1967\":{\"h\":\"架构的本质\",\"t\":[\"软件架构为软件系统提供了一个结构、行为和属性的高级抽象\",\"软件架构风格是特定应用领域的惯用模式，架构定义一个词汇表和一组约束\"]},\"1968\":{\"h\":\"架构的作用\",\"t\":[\"软件架构是项目干系人进行交流的手段\",\"软件架构是可传递和可复用的模型，通过研究软件架构可能预测软件的质量\",\"软件架构使推理和控制的更改更加简单，有助于循序渐进的原型设计，可以作为培训的基础\"]},\"1969\":{\"h\":\"架构的发展历程\",\"t\":[\"无架构阶段 汇编语言\",\"萌芽阶段 程序结构设计\",\"初级阶段 统一建模语言\",\"高级阶段 4+1视图\"]},\"1970\":{\"h\":\"架构的4+1视图\"},\"1971\":{\"h\":\"软件架构风格\"},\"1972\":{\"h\":\"ADL\",\"t\":[\"ADL是这样一种形式化语言，它再底层予以模型的支持下，为软件系统的概念体系结构建模提供了具体语法和概念框架。如：Aesop、MetaH、C2等\",\"ADL的三个基本元素\",\"构件：计算或数据存储单元\",\"连接件：用于构件之间交互建模的体系结构构造块及其支配这些交互的规则\",\"架构配置：描述体系结构的构件与链接件的连接图\"]},\"1973\":{\"h\":\"基于架构的软件开发方法\"},\"1974\":{\"h\":\"概念\",\"t\":[\"ABSD方法是架构驱动，即强调由业务、质量和功能需求的组合驱动架构设计\",\"ABSD方法有三个基础。第一个基础是功能的分解。在功能分解中，ABSD方法使用已有的基于模块的内聚和耦合技术；第二个基础是通过选择架构风格来实现质量和业务需求；第三个基础是软件模板的使用\",\"视角与视图：从不同的视角来检查，所以会有不同的视图\",\"用例用来捕获功能需求、特定场景用来捕获质量需求\"]},\"1975\":{\"h\":\"开发过程\"},\"1976\":{\"h\":\"软件架构风格\",\"t\":[\"架构风格定义了用于描述系统的术语表和一组指导构建系统的规则\"]},\"1977\":{\"h\":\"数据流风格\",\"t\":[\"批处理序列：大量整体数据、无需用户交互 管道-过滤器：流式数据、弱用户交互\"]},\"1978\":{\"h\":\"优点\",\"t\":[\"松耦合【高内聚-低耦合】\",\"良好的重用性/可维护性\",\"可扩展性【标准接口适配】\",\"良好的隐蔽性\",\"支持并行\"]},\"1979\":{\"h\":\"缺点\",\"t\":[\"交互性较差\",\"复杂性较高\",\"性能较差（每个过滤器都需要解析与合成数据）\"]},\"1980\":{\"h\":\"典型实例\",\"t\":[\"传统编译器、网络报文处理\"]},\"1981\":{\"h\":\"调用/返回风格\"},\"1982\":{\"h\":\"优点\",\"t\":[\"良好的重用性，只要接口不变可用在其它处\",\"可维护性好\",\"可扩展性好，支持递增设计\"]},\"1983\":{\"h\":\"缺点\",\"t\":[\"并不是每个系统都方便分层\",\"很难找到一个合适的、正确的层次抽象方法\",\"不同层次之间耦合度高的系统很难实现\"]},\"1984\":{\"h\":\"特点\",\"t\":[\"各个层次的组件形成不同功能级别的虚拟机； 多层相互协同工作，而且实现透明\"]},\"1985\":{\"h\":\"独立构件风格\"},\"1986\":{\"h\":\"优点\",\"t\":[\"松耦合\",\"良好的重用性/可修改性/可扩展性\"]},\"1987\":{\"h\":\"缺点\",\"t\":[\"构件放弃了对系统计算的控制。一个构件触发一个事件时，不能确定其他构件是否会响应它。而且即使它知道事件注册了哪些构件的过程，它也不能保证这些过程被调用的顺序。\",\"数据交换的问题\",\"既然过程的语义必须依赖于被处罚事件的上下文约束，关于正确性的推理就存在问题\"]},\"1988\":{\"h\":\"特点\",\"t\":[\"系统由若干子系统构成且成为一个整体；系统有统一的目标；子系统有主从之分；每一子系统有自己的事件收集和处理机制\"]},\"1989\":{\"h\":\"事件处理器风格\"},\"1990\":{\"h\":\"虚拟机风格\"},\"1991\":{\"h\":\"解释器架构风格\"},\"1992\":{\"h\":\"规则系统体系结构风格\",\"t\":[\"基于规则的系统构成：规则集、规则解释器、规则/数据选择及工作内存，一般用在人工智能领域和DSS（决策系统）中 \"]},\"1993\":{\"h\":\"仓库风格\"},\"1994\":{\"h\":\"闭环控制风格（过程控制）\",\"t\":[\"适用于嵌入式系统，用于解决简单闭环控制问题 经典应用：空调温控，定速巡航\"]},\"1995\":{\"h\":\"C2架构风格\",\"t\":[\"基本规则\",\"构件和连接件都有一个顶部和一个底部\",\"构件的顶部要连接到连接件的底部，构件的地步要连接到连接件的顶部，构件之间不允许直连\",\"一个连接件可以和任意数目和其他构件和连接件连接\",\"当两个连接件进行直接连接时，必须由其中一个的底部到另一个的顶部\"]},\"1996\":{\"h\":\"MDA\",\"t\":[\"平台独立模型：具有高抽象层次、独立于任何实现技术的模型\",\"平台相关模型：为某种特定实现技术量身定做，让你用这种技术中可用的实现构造来描述系统的模型。PIM会被换变换成一个或多个PSM\",\"代码Code：用源代码对系统的描述（规约）。每个PSM都将被变换成代码\"]},\"1997\":{\"h\":\"特定领域软件架构（DSSA）\"},\"1998\":{\"h\":\"基本概念\",\"t\":[\"定义：特定领域软件架构以一个特定问题领域为对象，形成领域参考模型、参考需求、参考架构等组成的开发基础架构，支持一个特定领域中多个应用的生成\"]},\"1999\":{\"h\":\"参与人员\"},\"2000\":{\"h\":\"建立过程\"},\"2001\":{\"h\":\"三层次模型\"},\"2002\":{\"h\":\"软件架构评估\"},\"2003\":{\"h\":\"质量属性\"},\"2004\":{\"h\":\"性能\",\"t\":[\"性能是指系统的相应能力，即要经过多长时间才能对某个事件做出响应，或者在某段时间内系统所能处理的事件的个数\",\"例如：\",\"同时支持1000并发\",\"响应时间小于1s\",\"显示分辨率达到4k\"]},\"2005\":{\"h\":\"可用性\",\"t\":[\"可用性是系统能够正常运行的时间比例。经常用两次故障之间的时间长度或者出现故障时能够恢复正常的速度来表示\",\"例如：\",\"主服务器故障，1分钟内切换至备用服务器\",\"系统故障，1小时内修改\",\"系统支持7*24小时工作\"]},\"2006\":{\"h\":\"安全性\",\"t\":[\"安全性是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力。安全性又可划分为机密性【信息不泄露给未授权的用户】、完整性【防止信息被篡改】、不可否认性【不可抵赖】及可控性【对信息的传播及内容具有控制的能力】等特性\",\"例如：\",\"可抵御SQL注入攻击\",\"对计算机的操作都有完整记录\",\"用户信息数据库授权必须保证99.9%可用\"]},\"2007\":{\"h\":\"可修改性\",\"t\":[\"可修改性是指能够快读地以较高的性能价格比对系统进行变更能力。通常以某些具体的变更为基准，通过考察这些变更的代价衡量可修改性\",\"例如：\",\"更改系统报表模块，必须在2人周内完成\",\"对web界面风格进行修改，修改必须在4人月内完成\"]},\"2008\":{\"h\":\"易用性\",\"t\":[\"易用性关注的是对用户来说完成某个期望任务的容易程度和系统所提供的用户支持的种类\",\"例如\",\"界面友好\",\"新用户学习使用系统时间不超过2小时\"]},\"2009\":{\"h\":\"可测试性\",\"t\":[\"软件可测试性是通过测试揭示软件缺陷的容易程度\",\"例如：\",\"提供远程调试接口，支持远程调试\"]},\"2010\":{\"h\":\"软件架构评估\",\"t\":[\"敏感点是一个或多个构件（和/或构件之间的关系）的特征\",\"权衡点是影响多个质量属性的特征，是多个质量属性的敏感点\",\"风险点是指架构设计中潜在的、存在问题的架构决策所带来的隐患\",\"非风险点是指不会带来隐患，一般以“XXX要求是可以实现（或接收）的”方式表达\",\"例如：\",\"对交易请求处理时间的要求将影响系统的数据传输协议和处理过程的设计\",\"假设每秒中用户交易请求的数量是10个，处理请求的时间为30毫秒，则“在1秒内完成用户的交易请求”这一要求是可以实现的\",\"目前对系统信用卡支付业务逻辑的描述尚未达成共识，这可能导致部分业务功能模块的重复，影响系统的可修改性\",\"更改加密的级别将对安全性和性能产生影响\"]},\"2011\":{\"h\":\"评估方法\",\"t\":[\"基于调查问卷（检查表）的方式\",\"基于度量的方式\",\"基于场景的方式\",\"【场景】是从风险承担者的角度与系统交互的简短描述 场景可从六个方面进行描述：刺激源、刺激、制品、环境、响应、响应度量\",\"【性能场景示例】\",\"【软件架构分析法（SAAM）】 最初关注可修改性，后扩充到可移植性、可扩充性等\",\"【架构权衡分析法（ATAM）】 在SAAM发展而来，主要针对：性能、实用性、安全性可修改性，在系统开发之前，对则这些质量属性进行评价和折中 \",\"【成本效益分析法（CBAM）】 在ATAM基础上建立的，软件的“经济”模型\"]},\"2012\":{\"h\":\"质量效用树\"},\"2013\":{\"h\":\"软件产品线\"},\"2014\":{\"h\":\"概念\"},\"2015\":{\"h\":\"双生命周期模型\"},\"2016\":{\"h\":\"建立产品线\",\"t\":[\"将现有产品演化为产品线\",\"用软件产品线替代现有产品集\",\"全新软件产品线的演化\",\"全新软件产品线的开发\",\"组织结构类型\",\"设立独立的核心资源小组\",\"不设立独立的核心资源小组\",\"动态的组织结构\",\"要成功实施产品线，主要取决于以下因素\",\"对该领域具备长期和深厚的经验\",\"一个用于构建产品的好的核心资源库\",\"好的产品线架构\",\"好的管理（软件资源、人员组织、过程）支持\"]},\"2017\":{\"h\":\"构件与中间件技术\"},\"2018\":{\"h\":\"构件\"},\"2019\":{\"h\":\"构件概念\",\"t\":[\"定义1：软件构件是一种组装单元，它具有规范的接口规约和显示的语境依赖。软件构件可以被独立地部署并由第三方任意地组装\",\"定义2：构件是某系统中有价值的、几乎独立的并可替换的一个部分，它在良好定义的体系结构语境内满足某清晰的功能\",\"定义3：构件是一个独立发布的功能部分，可以通过其接口访问它的服务\"]},\"2020\":{\"h\":\"构件特征\",\"t\":[\"构件系统体系结构由一组平台决策、一组构件框架和构件框架之间的互操作设计组成\",\"构件框架是一种专门的体系结构（通常围绕一些关键的机制），同时，也是一组固定地作用于构件层次机制的策略\",\"概念框架的互操作设计包括系统体系结构连接的所有框架间的互操作的规则\",\"构件是一组通常需要同时部署的原子构件。构件和原子构件之间的区别在于大多数原子构件永远都不会被单独部署，尽管它们可以被单独部署\",\"一个原子构件是一个模块和一组资源\",\"模块是一组类和可能的非面向对象的结构提，比如过程或者函数\",\"资源是一个类型化的项的固定集合\",\"资源这个概念可以包含代码资源，进而包含模块。问题在于除了编译器编译一个模块或包生成的资源外，还可能存在其他的资源。在“纯对象”的方法中，资源是外部的不可改变的对象，不可改变是因为构件没有持久化的标志，而且复制不能被区分\"]},\"2021\":{\"h\":\"构件标准\"},\"2022\":{\"h\":\"CORBA\"},\"2023\":{\"h\":\"中间件\"},\"2024\":{\"h\":\"中间件概念\"},\"2025\":{\"h\":\"中间件优点\",\"t\":[\"面向需求。即设计师集中精力于业务逻辑本身\",\"业务的分割和包容性。应用开发人员可以按照不同的业务进行功能的划分，体现为不同的接口或交互模式\",\"设计与实现隔离。构件对外发声作用或构件间的交互，都是通过接口进行的，构件使用者只需要知道构件的接口，而不必关系其内部实现，这是设计与实现分离的关键\",\"隔离复杂的系统资源。架构很重要的一个功能就是将系统资源与应用构件隔离，这是保证构件可复用甚至“即插即用”的基础，与中间件的意图也是一致的\",\"符合标准的交互模型。中间件则实现了架构的模型，实现了标准的协议\",\"软件复用。中间件提供了构件封装、交互规则、与环境的隔离等机制，这些都为软件复用提供了方便的解决方案\",\"提供对应用构件的管理。基于中间件的软件可以方便地进行管理，因为i构件总可以通过标识机制进行划分\"]},\"2026\":{\"h\":\"中间件分类\"},\"2027\":{\"h\":\"软件复用\",\"t\":[\"软件复用【重用】是多次不同的软件开发过程中重复使用相同或相似【软件元素】的过程\"]},\"2028\":{\"h\":\"构件的复用\",\"t\":[\"检索与提取构件 \",\"基于关键字的检索\",\"特点：树形或有向无回路图结构\",\"刻面检索法\",\"特点：利用Facet描述构件执行的功能、被操作的数据、构件应用的语境或任意其他特征\",\"例如：分多个刻面：1、应用领域；2、使用环境；3、功能\",\"超文本检索法\",\"特点：按照人类的联想思维方式任意跳转到包含相关概念或构件的文档\",\"理解与评价构件 \",\"要复用构件，准确地理解构件至关重要。特别是对构件修改使用时\",\"为达到目的，必须要求构件的开发过程遵循公共标准\",\"一般构件库的文档中全面而准确地说明一下内容：构件的功能与行为、相关的领域知识、可适应性约束条件与例外情形、可以预见的修改部分及修改方法\",\"修改构件 \",\"理想状态时直接复用构件库中现成的构件，但大多数情况下，必须对构件进行或多或少的修改，以应对新需求\",\"为了减少构件修改的工作量，要求开发人员尽量使构件的功能、行为和接口设计更为抽象化、通用化和参数化。这样，复用者即可通过对实参的选取来调整构件的功能或行为。如果这种调整仍不足以使构件适用于新系统，复用者就必须借助设计信息和文档来修改构件\",\"构件库中若无可修改使用的构件，则按需求开发构件，并存入构件库\",\"组装构件 \",\"组装的三种方式 \",\"基于功能的组装：采用子程序调用和参数传递的方式将构件组装起来\",\"基于数据的组装：仍然使传统的子程序调用与参数传递。但它所依赖的软件设计方法不再是功能分解，而是面向数据的设计方式，例如，Jackson系统开发方法\",\"面向对象的组装：如果从类库中检索出来的基类能够完全满足新系统的需求，则可以直接应用。否则，必须以基类为父类，生成响应的子类，以满足新系统的需求\",\"构件组装失配问题 \",\"由构件引起的失配，包括由于系统对构件基础设施、构件控制模型和构件数据模型的假设存在冲突引起的失配\",\"由连接子引起的失配，包括由于系统对构件交互协议、连接子数据模型的假设存在冲突引起的失配\",\"由于系统成分对全局体系结构的假设存在冲突引起的失配等。要解决失配问题，首先需要检测出失配问题，并再次基础上通过适当的手段消除检测出的失配问题\"]},\"2029\":{\"h\":\"C/S架构与B/S架构\"},\"2030\":{\"h\":\"常用层次式架构\"},\"2031\":{\"h\":\"MVC架构风格\",\"t\":[\"Model(模型)：应用程序的主题部分。模型表示业务数据和业务逻辑。一个模型通为多个视图提供数据。提高应用的可重用性\",\"View（视图）：用户看到并与之交互的界面。接收用户输入数据，向用户展示数据\",\"Controller（控制器）：用户界面与Model的接口。解释视图的输入，将其解释为系统能够理解的对象，同时识别用户运作，将其解释为模型特定方法的调用。处理来自于模型的事件和模型逻辑执行的结果，调用适当的视图为用户提供反馈\",\"J2EE体系结构中：\",\"视图：JSP\",\"控制器：Servlet\",\"模型：Entity Bean、Session Bean\"]},\"2032\":{\"h\":\"MVP架构风格\",\"t\":[\"MVP是MVC的变种，其优点包括\",\"模型与视图完全分离，可以修改视图而不影响模型\",\"可以更高效地使用模型，因为所有交互都发生在一个地方【Presenter】内部\",\"可以将一个Presenter用于多个视图，而不需要改变Presenter的逻辑\",\"如果把逻辑放在Presenter中，就可以脱离用户接口来测试这些逻辑（单元测试）\"]},\"2033\":{\"h\":\"MVVM架构风格\"},\"2034\":{\"h\":\"RIA架构风格\",\"t\":[\"优点\",\"反应速度快\",\"易于传播\",\"交互性强\"]},\"2035\":{\"h\":\"数据访问层设计\",\"t\":[\"ORM：对象与关系数据之间的映射\"]},\"2036\":{\"h\":\"物联网分层架构\"},\"2037\":{\"h\":\"大数据分层架构\"},\"2038\":{\"h\":\"Wen Service（WEB服务）\"},\"2039\":{\"h\":\"REST（表属性状态转移）\",\"t\":[\"REST是一种通常使用HTTP和XML进行基于Web通信的技术，可以降低开发的复杂性，提高系统的可伸缩性\",\"添加用户 GET /api/addUser -> POST /api/User 删除用户 GET /api/deleteUser -> DELETE /api/User 修改用户 GET /api/updateUser -> PUT /api/User\",\"REST的5个原则\",\"网络上的所有事务都被抽象为资源\",\"每个资源对应一个唯一的资源标识\",\"通过通用的连接件接口对资源进行操作\",\"对资源的各种操作不会改变资源的标识\",\"所有的操作都是无状态的\"]},\"2040\":{\"h\":\"ESB（企业服务总线）\",\"t\":[\"提供位置透明性的消息路由和寻址服务\",\"提供服务注册和命名的管理功能\",\"支持多种的消息传递范型\",\"支持多种可以广泛使用的传输协议\",\"支持多种数据格式及其相互转换\",\"提供日志和监控功能\"]},\"2041\":{\"h\":\"微服务\",\"t\":[\"顾名思义，就是很小的服务，所以它属于面向服务架构中的一种\"]},\"2042\":{\"h\":\"优点\"},\"2043\":{\"h\":\"模式方案\"},\"2044\":{\"h\":\"微服务与SOA的区别\",\"t\":[\"微服务比SOA更精细，可以独立进程方式存在\",\"微服务接口更通用化，如用HTTP RESTful，各种终端都可调用，语言无关，平台无关\",\"更倾向于分布式部署，互联网场景更适合\"]},\"2045\":{\"h\":\"云计算\"},\"2046\":{\"h\":\"定义\",\"t\":[\"云计算是集合了大量计算设备和资源，对用户屏蔽底层差异的分布式处理架构，其用户与提供实际服务的计算资源是相分离的\"]},\"2047\":{\"h\":\"优点\",\"t\":[\"超大规模、虚拟化、高可靠性、高可伸缩性、按需服务、成本低【前期投入低、综合使用成本也低】\"]},\"2048\":{\"h\":\"分类\"},\"2049\":{\"h\":\"按服务类型分类\",\"t\":[\"Sass【软件即服务】：基于多租户技术实现，直接提供应用程序\",\"Paas【平台即服务】：虚拟中间件服务器、运行环境和操作系统\",\"Iaas【基础设施即服务】：包括服务器、存储和网络等服务\"]},\"2050\":{\"h\":\"按部署方式分类\",\"t\":[\"公有云：面向互联网用户需求，通过开放网络提供云计算服务\",\"私有云：面向企业内部提供云计算服务\",\"混合云：兼顾以上两种情况的云计算服务\"]},\"2051\":{\"h\":\"架构\",\"t\":[\"【管理层】：提供对所有层次云计算服务的管理功能 【用户访问层】：方便用户使用云计算服务所需的各种支撑服务，针对每个层次的云计算服务都需要提供响应的访问接口 【应用层】：提供软件服务，如：财务管理，客户关系管理，商业智能 【平台层】：为用户提供对资源层服务的封装，使用户可以构建自己的应用 【资源层】：提供虚拟化的资源，从而隐藏物理资源的复杂性。如：服务器，存储\"]},\"2052\":{\"h\":\"云原生架构\",\"t\":[\"使基于分布部署和统一管理的分布式云，以容器、微服务、DevOps等技术为基础建立的一套云技术产品体系\"]},\"2053\":{\"h\":\"设计原则\",\"t\":[\"服务化原则：使用微服务\",\"弹性原则：可根据业务变化自动伸缩\",\"可观测原则：通过日志、链路跟踪和度量\",\"韧性原则：面对异常的抵御能力\",\"所有过程自动化原则：自动化交付工具\",\"零信任原则：默认不信任网络内部和外部的任何人/设备/系统\",\"架构持续演进原则：业务高速迭代情况下的架构与业务平衡\"]},\"2054\":{\"h\":\"架构模式\",\"t\":[\"服务化架构模式：典型代表【微服务】，服务拆分使维护压力大增\",\"Mesh化架构模式：把中间件框架（RPC、缓存、异步信息）从业务进程中分离，由Mesh进程完成\",\"Serverless模式：非常适合于事件驱动的数据计算任务\",\"存储计算分离模式：各类暂态数据用云服务保存\",\"分布式事务模式：解决微服务模式中多数据源事务问题\",\"可观测架构：包括Logging、Tracing、Metrics三个方面\",\"事件驱动架构：本质上是一种应用/组件间的集成架构模式\"]},\"2055\":{\"h\":\"反模式\",\"t\":[\"庞大的单体应用【需要多人开发的业务模块，考虑通过服务化进行拆分，并让组织与架构匹配】\",\"单体应用“硬拆”为微服务（服务拆分要适度）【小规模软件的服务拆分（为拆而拆）、数据依赖（服务间数据依赖）、性能降低】\",\"缺乏自动化能力的微服务【手动维护大龄微服务是不现实的】\"]},\"2056\":{\"h\":\"微服务设计约束\",\"t\":[\"微服务个体约束【每个微服务都是独立的，修改一个微服务不能影响另一个微服务】\",\"微服务与微服务之间的横向关系【通过第三方服务注册中心来满足服务的可发现性】\",\"微服务与数据层之间的纵向约束【数据是微服务的“私产”，访问时需要通过微服务】\",\"全局视角下的微服务分布式约束【高效运维整个系统】\"]},\"2057\":{\"h\":\"边缘计算\",\"t\":[\"【边缘计算】是指在靠近物或数据源头的一侧，采用网络、计算、存储、应用核心能力为一体的开放平台，就近提供最近端服务 【边缘计算的本质】计算处理职能的本地化\"]},\"2058\":{\"h\":\"大型网站系统架构演化\"},\"2059\":{\"h\":\"第一阶段：单体架构到第二阶段：垂直架构\"},\"2060\":{\"h\":\"第三阶段：使用缓存改善网站性能\"},\"2061\":{\"h\":\"常见缓存技术\",\"t\":[\"MemCache：Memcache是一个高性能的分布式的内存对象缓存系统，用于动态Web应用以减轻数据库负载。Memcache通过在内存里维护一个统一的巨大的hash表，它能够用来存储各种格式的数据，包括图像、视频、文件以及数据库检索的结果等\",\"Redis:Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API\",\"Squid:Squid是一个高性能的代理缓存服务器，Squid支持FTP、gopher、HTTPS和HTTP协议\"]},\"2062\":{\"h\":\"缓存与数据库的数据一致性问题\"},\"2063\":{\"h\":\"缓存技术对比\"},\"2064\":{\"h\":\"Redis分布式存储方案\"},\"2065\":{\"h\":\"Redis集群切片的常见方式\"},\"2066\":{\"h\":\"Redis数据分片方案\"},\"2067\":{\"h\":\"Redis数据类型\"},\"2068\":{\"h\":\"Redis数据淘汰算法\"},\"2069\":{\"h\":\"Redis的持久化\",\"t\":[\"Redis的持久化主要有两种方式：RDB和AOF\",\"RDB：传统数据库中快照的思想。指定时间间隔将数据进行快照存储\",\"AOF：传统数据库中日志的思想，把每条改变数据集的命令追加到AOF文件末尾，这样出问题了，可以重新执行AOF文件中的命令来重建数据集\"]},\"2070\":{\"h\":\"Redis常见问题\"},\"2071\":{\"h\":\"缓存雪崩\",\"t\":[\"大部分缓存失效 -》 数据库崩溃\",\"解决方案\",\"使用锁或队列：保证不会有大量的线程对数据库一次性进行读写，从而避免失效时大量的并发请求落到底层存储系统上\",\"为key设置不同的缓存失效时间：在固定的一个缓存时间的基础上+随机一个时间作为缓存失效时间\",\"二级缓存：设置一个有时间限制的缓存+一个无时间限制的缓存。避免大规模访问数据库\"]},\"2072\":{\"h\":\"缓存穿透\",\"t\":[\"查询无数据返回 =》 直接查数据库\",\"解决方案\",\"如果查询结果为空，直接设置一个默认值放到缓存，这样第二次到缓存中获取就有值了，设置一个不超过5分钟的过期时间，以便能正常更新缓存\",\"设置布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被这个bitmap拦截掉，从而避免了对底层存储系统的查询压力\"]},\"2073\":{\"h\":\"缓存预热\",\"t\":[\"系统上线后，将相关需要缓存数据直接加到缓存系统中\",\"解决方案\",\"直接写个缓存刷新页面，上线时手工操作\",\"数据量不大时，可以在项目启动的时候自动进行加载\",\"定时刷新缓存\"]},\"2074\":{\"h\":\"缓存更新\",\"t\":[\"除Redis系统自带的缓存失效策略，常见采用一下两种\",\"定时清理过期的缓存\",\"当有用户请求过来时，再判断这个请求所用到的缓存是否过期，过期的化就去底层系统得到新数据并更新缓存\"]},\"2075\":{\"h\":\"缓存降级\",\"t\":[\"降级的目的是保证核心服务可用。即使是有损的，而且有些服务是无法降级的（如电商的购物流程等）；在进行降级之前要对系统进行梳理，从而梳理出哪些必须保护，哪些可降级\"]},\"2076\":{\"h\":\"第四阶段：使用服务集群改善网站并发处理能力\",\"t\":[\"系统演变到这里，将会出现下面几个问题： 1、用户的请求由谁来转发到具体的应用服务器 2、用户如果每次访问到的服务器不一样，那么如何维护session的一致性\",\"解决方案\",\"负载均衡\",\"有状态与无状态问题\"]},\"2077\":{\"h\":\"负载均衡\",\"t\":[\"应用层负载均衡\",\"http重定向。HTTP重定向就是应用层的请求转发。用户的请求其实已经到了HTTP重定向负载均衡服务器，服务器根据算法要求用户重定向，用户收到重定向请求后，再次请求真正的集群 \",\"特点：实现简单，但性能较差\",\"反向代理服务器。在用户的请求到达反向代理服务器时（已经到达网站机房），由反向代理服务器根据算哒转发到具体的服务器。常用的apache、nginx都可以充当反向代理服务器 \",\"特点：部署简单，但代理服务器可能成为性能瓶颈\",\"传输层负载均衡\",\"DNS域名解析负载均衡。DNS域名解析负载均衡就是在用户请求DNS服务器，获取域名对应的IP地址时，DNS服务器直接给出负载均衡后的服务器IP \",\"特点：效率比HTTP重定向高，减少维护负载均衡服务器成本。但一个应用服务器故障，不能及时通知DNS，而且DNS负载均衡的控制权在域名服务商那里，网站无法做更多的改善和更强大的管理\",\"基于NAT的负载均衡。基于NAT的负载均衡将一个外部IP地址映射为多个IP地址，对每次连接请求动态地转换为一个内部节点的地址 \",\"特点：技术较为成熟，一般在网关位置，可以通过硬件实现。像四层交换机一般就采用了这种技术\",\"算法\",\"静态算法（不考虑动态负载） \",\"轮转算法：轮流将服务请求（任务）调度给不同的节点（即：服务器）\",\"加权轮转算法：考虑不同节点处理能力的差异\",\"源地址哈希散列算法：根据请求的源IP地址，作为散列键从静态分配的散列表找出对应的节点\",\"目标地址哈希散列算法：根据请求目标IP做散列找出对应节点\",\"随机算法：随机分配，简单，但不可控\",\"动态算法（考虑动态负载） \",\"最少连接数算法：新请求分配给当前活动请求数量最少的节点，每个节点处理能力相同的情况下\",\"加权最小连接数算法：考虑节点处理能力不同，按最小连接数分配\",\"加权百分比算法：考虑了节点的利用率、硬盘速率、进程个数等，使用利用率来表现剩余处理能力\"]},\"2078\":{\"h\":\"有状态与无状态\",\"t\":[\"无状态服务对单次请求的处理，不依赖其他请求，也就是说，处理一次请求所需的全部信息，要么都包含在这个请求里，要么可以从外部获取到（比如说数据库），服务器本身不存储任何信息\",\"有状态服务则相反，他会在自身保存一些数据，先后的请求时有关联的\"]},\"2079\":{\"h\":\"Session共享机制\"},\"2080\":{\"h\":\"第五阶段：数据库读写分离\",\"t\":[\"主从数据库结构特点：\",\"一般：一主多从，也可以多主多从\",\"主库做写操作，从库做读操作\",\"主从复制步骤：\",\"主库更新数据完成前，将操作写binlog日志文件\",\"从库打开I/O线程与主库连接，做binlog dump process，并将事件写入中继日志\",\"从库执行中继日志事件，保持与主库一致\"]},\"2081\":{\"h\":\"第六阶段：使用反向代理和CDN加速网站响应\",\"t\":[\"CDN的全程是Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的性能瓶颈和环节，使内容传输得更快、更稳定\"]},\"2082\":{\"h\":\"第七阶段：使用分布式文件系统和分布式数据库系统\"},\"2083\":{\"h\":\"第八阶段：使用NoSQL和搜索引擎\"},\"2084\":{\"h\":\"第九阶段：业务拆分\"},\"2085\":{\"h\":\"第十阶段：分布式服务\"},\"2086\":{\"c\":[\"软考\"]},\"2087\":{\"c\":[\"软考\"]},\"2088\":{\"h\":\"系统可靠性分析与设计\"},\"2089\":{\"h\":\"可靠性相关概念\",\"t\":[\"可靠性是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力\",\"可用性是系统能够正常运行的事件比例\",\"软件可靠性 ≠ 硬件可靠性\",\"复杂性：软件复杂性比硬件高，大部分失效来自于软件失效\",\"物理退化：硬件失效主要是物理退化所致，软件不存在物理退化\",\"唯一性：软件是唯一的，每个COPY版本都一样，而两个硬件不可能完全一样\",\"版本更新周期：硬件较慢，软件较快\"]},\"2090\":{\"h\":\"可靠性指标\"},\"2091\":{\"h\":\"串联系统与并联系统\"},\"2092\":{\"h\":\"可靠性设计\",\"t\":[\"软件的开发方法和开发环境\",\"运行环境\",\"软件规模\",\"软件内部结构\",\"软件的可靠性投入\"]},\"2093\":{\"h\":\"N版本程序设计\"},\"2094\":{\"h\":\"恢复块方法\"},\"2095\":{\"h\":\"防卫式程序设计\",\"t\":[\"对于程序中存在的错误和不一致性，通过在程序中包含错误检查代码和错误恢复代码，使得一旦错误发生，程序能撤销错误状态，恢复到一个已知的正确状态中去\",\"实现策略：错误检测、破坏估计、错误恢复\"]},\"2096\":{\"h\":\"双机容错\"},\"2097\":{\"c\":[\"软考\"]},\"2098\":{\"c\":[\"软考\"]},\"2099\":{\"h\":\"信息安全\"},\"2100\":{\"h\":\"信息安全基础\",\"t\":[\"信息安全包括5个基本要素\",\"信息安全的范围包括设备安全、数据安全、内容安全和行为安全\"]},\"2101\":{\"h\":\"网络安全漏洞\",\"t\":[\"物理安全性\",\"软件安全漏洞\",\"不兼容使用安全漏洞\",\"选择合适的安全哲理\"]},\"2102\":{\"h\":\"网络安全威胁\",\"t\":[\"非授权访问\",\"信息泄露或丢失\",\"破坏数据完整性\",\"拒绝服务攻击\",\"利用网络传播病毒\"]},\"2103\":{\"h\":\"安全措施的目标\",\"t\":[\"访问控制\",\"认证\",\"完整性\",\"审计\",\"保密\"]},\"2104\":{\"h\":\"信息加解密技术\"},\"2105\":{\"h\":\"访问控制技术\"},\"2106\":{\"h\":\"访问控制的基本模型\",\"t\":[\"访问控制的目标有两个\",\"防止非法用户进入系统\",\"阻止合法用户对系统资源的非法利用，即禁止合法用户的越权访问\",\"访问控制的三要素\",\"主体：可以对其他实体实施加动作的主动实体，记为S\",\"客体：是接收其他实体访问的被动实体，记为O\",\"控制策略：是主题对客体的操作行为集和约束条件集，记为KS\"]},\"2107\":{\"h\":\"访问控制的实现技术\",\"t\":[\"访问控制矩阵：矩阵中的每一格标识所在行的主体对所在列的客体的访问授权\",\"访问控制列表：访问控制矩阵按列分解\"]},\"2108\":{\"h\":\"数字签名技术\",\"t\":[\"信息摘要：单向散列函数【不可逆】、固定长度的散列值 摘要用途：确保信息【完整性】，防篡改\"]},\"2109\":{\"h\":\"密钥管理技术\",\"t\":[\"数字证书的内容 \",\"证书的版本信息\",\"证书的序列号，每个整数都有一个唯一的证书序列号\",\"证书所使用的签名算法\",\"证书的发行机构名称，明明规则一般采用X.500格式\",\"证书的有效期，现在通用的证书一般采用UTC时间格式，它的计时范围是1950-2049\",\"证书所有人的名称，明明规则一般采用X.500格式\",\"证书所有人的公开密钥\",\"证书发行者对证书的签名\",\"PKI公钥体系\"]},\"2110\":{\"h\":\"信息安全的保障体系\"},\"2111\":{\"h\":\"计算机信息系统安全保护等级\",\"t\":[\"用户自主保护级：适用于普通内联网用户 \",\"系统被破坏后，对公民、法人和其他组织权益有损害，但不损害国家安全社会秩序和公共利益\",\"系统审计保护级：使用于通过内联网或国际网进行商务活动，需要保密的非重要单位 \",\"系统被破坏后，对公民、法人和其他组织权益有严重损害，或损害社会秩序和公共利益，但不损害国家安全\",\"安全标记保护级：适用于地方各级国家机关、金融机构、邮电通信、能源与水源供给部门、交通运输、大型工商与信息技术企业、重点工程建设等单位 \",\"系统被破坏后，对社会秩序和公共利益造成严重损害，或对国家安全造成损害\",\"结构化保护级：适用于中央级国家机关、广播电视部门、重要物资储备单位、社会应急服务部门、尖端科技企业集团、国家重点科研机构和国防建设等部门 \",\"系统被破坏后，对社会秩序和公共利益造成特别严重损害，火堆国家安全造成严重损害\",\"访问验证保护级：适用于国防关键部门和依法需要对计算机信息系统实施特殊隔离的单位 \",\"系统被破坏后，对国家安全造成特别严重损害\"]},\"2112\":{\"c\":[\"软考\"]},\"2113\":{\"c\":[\"软考\"]},\"2114\":{\"h\":\"安全架构设计\"},\"2115\":{\"h\":\"概述\",\"t\":[\"被动攻击：手机信息为主，破坏保密性 主动攻击：主动攻击的类别主要有：中断（破坏可用性），篡改（破坏完整性），伪造（破坏真实性）\"]},\"2116\":{\"h\":\"安全模型\"},\"2117\":{\"h\":\"BLP模型（下读上写）\",\"t\":[\"Bell-LaPadula模型是符合军事安全策略的计算机安全模型，简称BLP模型。BLP模型的安全规则如下：\",\"简单安全规则：安全级别的的主体不能读安全级别高的客体\",\"星属性安全规则：安全级别高的主体不能往低级别的客体写\",\"强星属性安全规则：不允许对另一级别进行读写\",\"自主安全规则：使用访问控制矩阵来定义说明自由存取控制\"]},\"2118\":{\"h\":\"Bila模型\",\"t\":[\"BiBa模型主要用于防止非授权修改系统信息，以保护系统的信息完整性。该模型同BLP模型类似，采用主体、客体、完整性级别描述安全策略要求。BiBa模型能够防止数据从低完整性级别流向高完整性级别，其安全规则如下：\",\"星完整性规则：表示完整性级别低的主体不能对完整性级别高的客体写数据\",\"简单完整性规则：表示完整性级别高的主体不能从完整性级别低的客体读取数据\",\"调用属性规则：表示一个完整性级别低的主体不能从级别高的客体调用程序或服务\"]},\"2119\":{\"h\":\"Chinese Wall模型\",\"t\":[\"Chinese Wall模型的安全策略的基础是客户访问的信息不会与当前他们可支配的信息产生冲突。其访问客体控制的安全规则如下：\",\"与主体曾经访问过的信息属于同一公司数据集合的信息，即墙内信息可以访问\",\"属于一个完全不同的利益冲突组的可以访问\",\"主体能够对一个客体进行写的前提是主体未对任何属于其他公司数据集进行过访问。\",\"定理1：一个主体一旦访问过一个客体，则该主体只能访问位于同一公司数据集的客体或在不同利益组的客体 定理2：在一个利益冲突组中，一个主体最多只能访问一个公司数据集\"]},\"2120\":{\"h\":\"整体架构设计\"},\"2121\":{\"h\":\"WPDRRC模型\",\"t\":[\"WPDRRC模型包括6个环节和3大要素\",\"6个环节包括：预警、保护、检测、响应、恢复和反击。模型蕴涵的网络安全能力主要是预警能力、保护能力、检测能力、响应能力、恢复能力和反击能力\",\"3大要素包括人员、策略和技术\"]},\"2122\":{\"h\":\"各类模型安全防范功能\"},\"2123\":{\"h\":\"开放系统互连安全体系结构\"},\"2124\":{\"h\":\"安全服务与安全机制的对应关系\"},\"2125\":{\"h\":\"认证框架\",\"t\":[\"鉴别的基本目的是防止其他实体占用和独立操作被鉴别实体的身份\",\"鉴别的方式如下：\",\"已知的\",\"拥有的\",\"不改变的特性\",\"相信可靠的第3方建立的鉴别\",\"环境\",\"鉴别信息的类型包括交换鉴别信息、申请鉴别信息和验证鉴别信息\"]},\"2126\":{\"h\":\"访问控制框架\",\"t\":[\"访问控制决定开发系统环境中允许使用哪些资源，在什么地方适合阻止未授权访问的过程\"]},\"2127\":{\"h\":\"机密性框架\",\"t\":[\"机密性服务的目的是确保信息仅仅是对被授权者可用\",\"机密性机制：\",\"通过禁止访问提供机密性\",\"通过加密提供机密性\"]},\"2128\":{\"h\":\"完整性框架\",\"t\":[\"完整性框架的目的是通过阻止威胁或探测威胁，保护可能遭到不同方式危害的数据完整性和数据相关属性完整性\",\"完整性机制的类型：\",\"阻止对媒体访问的机制\",\"用以探测对数据或数据项序列的非授权修改的机制\"]},\"2129\":{\"h\":\"抗抵赖框架\",\"t\":[\"抗抵赖服务包括证据的生成，验证和记录，以及在解决纠纷时随机进行的证据恢复和再次验证\",\"抗抵赖由4个独立的阶段组成\",\"证据生成 -》 证据传输、存储及恢复 -》 证据验证 -》 解决纠纷\"]},\"2130\":{\"h\":\"区块链技术\"},\"2131\":{\"h\":\"什么是区块链\",\"t\":[\"区块链 ≠ 比特币\",\"比特币底层采用了区块链技术\",\"比特币交易在我国定性为【非法运用】\"]},\"2132\":{\"h\":\"区块链的特点\",\"t\":[\"去中心化：由于使用分布式核算和存储，不存在中心化的硬件或管理机构，任意节点的权利和义务都是均等的，系统中的数据块由整个系统中具有维护功能的节点来共同维护\",\"开放性：系统是开放的，如：区块链上的【交易信息是公开的】，不过【账户身份信息是高度加密的】\",\"自治性：区块链采用基于协商一直的规范和协议（比如一套公开透明的算法）使得整个系统中的所有节点能够在去信任的环境自由安全的交换数据，使得对“人”的信任改成了对机器的信任，任何人为的干预不起作用\",\"安全性（信息不可篡改）：数据在多个节点存储了多份，篡改数据得改掉51%结点的数据，这太难。同时，还有其他安全机制，如：比特币的每笔交易，都由付款人用私钥签名，证明确实是他统一向某人付款，其他人无法伪造\",\"匿名性（去信任）：由于节点之间的交换遵循固定的算法，其数据交互是无需信任的（区块链中的程序规则会自行判断活动是否有效），因此交易对手无须通过公开身份的方式让对方自己产生信任，对信用的累积非常有帮助\"]},\"2133\":{\"h\":\"去中心化\",\"t\":[\"区块链是一个分布式账本，一种特殊的分布式数据库\",\"链表在多个节点存储，没有中心节点，数据不一致时，以“少数服从多数”原则执行\",\"所以要篡改成功，除非篡改51%的结点\",\"【哈希加密/防篡改】\",\"【共识算法（博弈论）/全民记账】\",\"一般有：POW（工作量证明）、POS（权益证明）、DPoS（股份授权证明机制）\",\"比特币采用了POW（工作量证明） 争夺记账权 = 挖矿\",\"计算出来的账单结点哈希值前13个字符为0，则符合规则，得到记账权 有一个结点计算出结果，则广播消息告知其它结点，其它结点更新数据\",\"计算困难，但验证却很容易，例如：218903 = 哪两个质数的乘积？ 457 * 479\"]},\"2134\":{\"c\":[\"软考\"]},\"2135\":{\"c\":[\"软考\"]},\"2136\":{\"h\":\"计算机系统基础\"},\"2137\":{\"h\":\"计算机系统概述\"},\"2138\":{\"h\":\"计算机组成结构\"},\"2139\":{\"h\":\"存储系统\"},\"2140\":{\"h\":\"层次化存储结构\"},\"2141\":{\"h\":\"Cache\",\"t\":[\"Cache的功能：提高CPU数据输入输出的速率，突破冯诺依曼瓶颈，即CPU与存储系统间数据传送带宽限制\",\"在计算机的存储系统体系中，Cache是访问速度最快的层次\",\"Cache对程序员来说是透明的\",\"使用Cache改善系统性能的依据是程序的局部性原理 \",\"时间局部性：指程序中的某条指令一旦执行，不久以后该指令可能再次执行，典型原因是由于程序中存在着大量的循环操作\",\"空间局部性：指一旦程序访问了某个存储单元，不久以后，其附近的存储单元也将被访问，即程序在一段时间内所访问的地址可能集中在一定范围内，其典型情况是程序顺序执行\",\"工作集理论：工作集是进程运行时被频繁访问的页面集合\"]},\"2142\":{\"h\":\"磁盘基本结构与存取过程\",\"t\":[\"存取时间 = 寻道时间 + 等待时间，寻道时间是指磁头移动到磁道所需的时间；等待时间为等待读写的扇区转到磁头下方所用的时间\",\"读取磁盘数据的时间应包括以下三个部分\",\"找磁道的时间\",\"找块（扇区）的时间、即旋转延迟时间\",\"传输时间\"]},\"2143\":{\"h\":\"磁盘移臂调度算法\"},\"2144\":{\"h\":\"先来先服务（FCFS）\"},\"2145\":{\"h\":\"最短寻道时间优先（SSTF）\"},\"2146\":{\"h\":\"扫描算法（SCAN）\"},\"2147\":{\"h\":\"循环扫描算法（SCSAN）\"},\"2148\":{\"h\":\"操作系统\"},\"2149\":{\"h\":\"进程管理\"},\"2150\":{\"h\":\"概念\",\"t\":[\"进程是程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。它由程序块、进程控制块（PCB）和数据块三部分组成\",\"PCB:是进程存在的唯一标志。内容包含进程标识符、状态、位置信息、控制信息、队列指针（链接同一状态的进程）、优先级、现场保护区等\"]},\"2151\":{\"h\":\"进程与程序\",\"t\":[\"进程与程序的区别：进程是程序的一次执行过程，没有程序就没有进程\",\"程序是一个静态的概念，而进程是一个动态的概念，它由创建而产生，完成任务后因撤销而消亡；进程是系统进行资源分配和调度的独立单位，而程序不是\"]},\"2152\":{\"h\":\"进程与线程\",\"t\":[\"进程的2个基本属性：可拥有资源的独立单位；可独立调度和分配资源的基本单位\"]},\"2153\":{\"h\":\"状态\"},\"2154\":{\"h\":\"同步与互斥\",\"t\":[\"临界资源：进程间需要互斥方式对其进行共享的资源，如打印机、磁带机等\",\"临界区：每个进程中访问临界资源的那段代码成为临界区\",\"信号量：是一种特殊的变量\"]},\"2155\":{\"h\":\"前趋图\"},\"2156\":{\"h\":\"死锁\",\"t\":[\"进程管理是操作系统的核心，但如果设计不当，就会出现死锁问题。如果一个进程在等待一件不可能发生的事，则进程就死锁了。而如果一个或多个进程产生死锁，就会造成系统死锁\"]},\"2157\":{\"h\":\"银行家算法\"},\"2158\":{\"h\":\"分配资源的原则\",\"t\":[\"当一个进程对资源的最大需求量不超过系统中的资源数时可以接纳该进程\",\"进程可以分期请求资源，但请求的总数不能超过最大需求量\",\"当系统现有的资源不能满足进程尚需资源数时，对进程的请求可以推迟分配，但总能使进程在有限的时间里得到资源\"]},\"2159\":{\"h\":\"存储管理\"},\"2160\":{\"h\":\"页式存储\",\"t\":[\"将程序与内存均划分为同样大小的块，以页为单位将程序调入内存\",\"优点：利用率高，碎片小，分配及管理简单\",\"缺点：增加了系统开销；可能产生抖动现象\"]},\"2161\":{\"h\":\"段式存储\",\"t\":[\"按用户作业中的自然段来划分逻辑空间，然后调入内存，段的长度可以不一样\",\"优点：多道程序共享内存，各段程序修改互不影响\",\"缺点：内存利用率低，内存碎片浪费大\"]},\"2162\":{\"h\":\"段页式存储\",\"t\":[\"段式与页式的综合体。先分段，再分页。1个程序由若干个段，每个段中可以由若干页，每个页的大小相同，但每个段的大小不同\",\"优点：空间浪费小、存储共享容易、存储保护容易、能动态连接\",\"缺点：由于管理软件的增加，复杂性和开销也随之增加，需要的硬件以及占用的内容也有所增加，使得执行速度大大下降\"]},\"2163\":{\"h\":\"文件管理\"},\"2164\":{\"h\":\"索引文件结构\"},\"2165\":{\"h\":\"位视图\"},\"2166\":{\"h\":\"性能\"},\"2167\":{\"h\":\"性能指标\"},\"2168\":{\"h\":\"性能调整\"},\"2169\":{\"h\":\"阿姆达尔解决方案\"},\"2170\":{\"h\":\"性能评价方法\",\"t\":[\"时钟频率法：以时钟频率高低衡量速度\",\"指令执行速度法：以机器运算速度的单位是MIPS\",\"等效指令速度法：通过各指令在程序中所占比例进行计算得到的\",\"数据处理速率法：PDR值的方法来衡量机器性能，PDR值越大，机器性能越好\",\"综合理论性能法：CTP用MTOPS表示。CTP的估算方法是，首先算出处理部件每个计算单元的有效计算率，再按不同字长加以调整，得出计算单元的理论性能，所有组成该处理部件的计算单元的理论性能之和即为CTP\",\"基准程序法：把应用程序中用得最多，最频繁的部分核心程序作为评估计算机系统性能的标准程序，称为基准测试程序。基准程序法是目前一致承认的测试系统性能的较好方法\"]},\"2171\":{\"h\":\"性能评估\",\"t\":[\"在Web服务器测试中，反映其性能的指标主要有：最大并发连接数、响应延迟和吞吐量等\",\"常见的Web服务器性能评测方式有基准性能测试、压力测试和可靠性测试\"]},\"2172\":{\"h\":\"系统监视\",\"t\":[\"进行系统监视通常有3种方式：一是通过系统本身提供的命令，如UNIX/Linux系统中的W、ps、last，Windows中的netstat等；二是通过系统记录文件查阅系统在特定时间内的运行状态；三是集成命令、文件记录和可视化技术的监控工具，如Windows的Perfmon应用程序\"]},\"2173\":{\"c\":[\"软考\"]},\"2174\":{\"c\":[\"软考\"]},\"2175\":{\"h\":\"嵌入式系统\"},\"2176\":{\"h\":\"基本概念\",\"t\":[\"嵌入式系统是以应用为中心、以计算机技术为基础，并将可配置与可剪裁的软、硬件集成于一体的专用计算机系统，需要满足应用对功能、可靠性、成本、体积和功耗等方面的严格要求。\",\"从计算机角度看，嵌入式系统是指嵌入各种设备及应用产品内部的计算机系统。它主要完成信号控制的功能，体积小、结构紧凑，可作为一个部件埋藏于所控制的装置中。\",\"一般嵌入式系统由嵌入式处理器、相关支撑硬件、嵌入式操作系统、支撑软件以及应用软件组成。\",\"从传统意义上讲，嵌入式系统主要由以下部件组成\",\"嵌入式微处理器（MCU）\",\"存储器（RAM/ROM）\",\"内（外）总线逻辑\",\"定时/计数器\",\"看门狗电路：定时器溢出则中断，系统复位处理\",\"I/O接口（串口、网络、USB、JTAG接口--用来进行CPU调试的常用接口）\",\"外部设备（UART、LED等）\",\"其他部件\"]},\"2177\":{\"h\":\"嵌入式软件开发\",\"t\":[\"嵌入式软件的开发与传统的软件开发方法存在比较大的差异，主要表现在以下方面：\",\"嵌入式软件开发是在宿主机（PC机或工作站）上使用专门的嵌入式工具开发，生成二进制代码后，需要使用工具卸载到目标机或固化在目标机存储器上运行\",\"嵌入式软件开发时更强调/硬件协同工作的效率和稳定性\",\"嵌入式软件开发的结果通常需要固化在目标系统的存储器或处理器内部存储器资源中\",\"嵌入式软件的开发一般需要专门的开发工具、目标系统和测试设备\",\"嵌入式软件对实时性的要求更高\",\"嵌入式软件对安全性和可靠性的要求较高\",\"嵌入式软件开发是要充分考虑代码规模\",\"在安全攸关系统中的嵌入式软件，其开发还应满足某些领域对设计和代码审定\",\"模块化设计即将一个较大的程序按功能划分成若干程序模块，每个模块实现特定的功能\",\"嵌入式软件设计层面的功耗控制主要可以从以下方面展开：\",\"软硬件协同设计，即软件的设计要与硬件的匹配，考虑硬件因素\",\"编译优化，采用低功耗优化的编译技术\",\"减少系统的持续运行时间，可从算法角度进行进化\",\"用“中断”代替“查询”\",\"进行电源的有效管理\"]},\"2178\":{\"h\":\"嵌入式硬件\",\"t\":[\"嵌入式系统的发展大致经历了五个阶段：\",\"第一阶段：单片微型计算机（SCM）阶段，即单片机时代\",\"第二阶段：微控制器（MCU）阶段\",\"第三阶段：片上系统（SoC）\",\"第四阶段：以Internet为基础的嵌入式系统\",\"第五阶段：在智能化、云技术推动下的嵌入式系统\"]},\"2179\":{\"h\":\"嵌入式微处理器\",\"t\":[\"通常嵌入式处理器的选择还要根据使用场景不同选择不同类型的处理器，从处理器分类看，大致可分为MPU、MCU、DSP、GPU、SoC：\",\"微处理器：将微处理器装配在专门设计的电路板上，只保留与嵌入式应用有关的母版功能。微处理器一般以某一种微处理内核为核心，每一种衍生产品的处理器的内核都是一样的，不同的是存储器和外设的配置和封装\",\"微控制器：又称单片机。与MPU相比MCU的最大优点在于单片化，体积大大减小，从而使功耗和成本下降，可靠性提高\",\"信号处理器：DSP处理器对系统结构和指令进行了特殊设计（通常，DSP采用一种哈佛结构），使其适合于执行DSP算法，编译率高，指令执行速度也高\",\"图形处理器 \",\"GPU是图形处理单元的缩写，是一种可执行渲染3D图形等图修的半导体芯片（处理器）\",\"GPU可用于个人电脑、工作站、游戏机和一些移动设备上做图像和图形相关运算工作的处理器\",\"它可减少对CPU的依赖，并进行部分原本CPU的工作，尤其是在3D图形处理中，GPU采用了核心技术（如：硬件T&L、纹理压缩等）保证了快速3D渲染能力\",\"GPU目前已广泛用于各行各业，GPU中集成了同时运行在GH的频率上的成千上万个core，可以告诉处理图像数据。最新的GPU峰值性能可高达100TFlops以上\",\"片上系统： \",\"追求产品系统最大包容的集成器件\",\"他是一个产品，是一个有专用目标的集成电路，其中包含完整系统并有嵌入软件的全部内容\",\"同时它又是一种技术，用以实现从确定系统功能开始，到软/硬件划分，并完成设计的整个过程\",\"成功实现了软硬件的无缝结合，直接在微处理器片内嵌入操作系统的代码模块\",\"减少了系统的体积和功耗、提高了可靠性和设计生产效率\",\"狭义角度：信息系统核心的芯片集成，是将系统关键部件集成在一块芯片上\",\"广义角度：SoC是一个微小型系统，如果说中央处理器（CPU）是大脑、心脏、眼睛和手的系统\",\"国内外学术界一般倾向将SoC定义为微处理器、模拟IP核、数字IP核和存储器（或片外存储控制接口）集成在单一芯片上，它通常是客户定制的，或是面向特定用途的标准产品\"]},\"2180\":{\"h\":\"人工智能芯片\",\"t\":[\"人工智能芯片的定义：从广义上讲只要能够运行人工智能算法的芯片都叫做AI芯片。但是通常意义上的AI芯片指的是针对人工智能算法做了特殊加速设计的芯片，现阶段，这些人工智能算法一般以深度学习算法为主，也可以包括其他机器学习算法。\",\"人工智能芯片四大类（按技术架构分类）：\",\"GPU\",\"FPGA（现场可编程门阵列）\",\"ASIC（专用集成电路）\",\"类脑芯片\",\"AI芯片的关键特征\",\"新型的计算范式：AI计算既不脱离传统计算，也具有新的计算特质\",\"训练和推断：AI系统通常涉及训练和推断过程\",\"大数据处理能力：满足高效能机器学习和数据处理要求\",\"数据精度：降低精度的设计\",\"可重构的能力：针对特定领域而不针对特定应用的设计，可以通过重新配置，适应新的AI算法、架构和任务\",\"开发工具：AI芯片需要软件工具链的支持\"]},\"2181\":{\"h\":\"嵌入式微处理器体系结构\"},\"2182\":{\"h\":\"总线\"},\"2183\":{\"h\":\"基本概念\",\"t\":[\"总线是一组能为多个部件分时共享的信息传送线，用来连接过个部件并为之提供信息交换通路。【总线通常是半双工的】\"]},\"2184\":{\"h\":\"特点\",\"t\":[\"挂接在总线上的多个部件只能分时向总线发送数据，但可同时从总线接收数据\",\"通过总线复用方式可以减少总线中信号线的数量，以较少的信号线传输更多的信息\",\"从功能上来对总线进行划分数据总线、地址总线和控制总线\",\"从数据传输的方式划分并行总线和串行总线\"]},\"2185\":{\"h\":\"串行总线\",\"t\":[\"将数据字节的各位用多条数据线同时进行传送【短距离】\"]},\"2186\":{\"h\":\"串行总线\",\"t\":[\"数据是一位一位地进行传输的，在传输中每一位数据都占据一个固定的时间长度【长距离，传输波特率可调整，正确性依赖与校验码，数据传输方式可以使用多种】\"]},\"2187\":{\"h\":\"嵌入式操作系统的定义及特点\",\"t\":[\"嵌入式操作系统是指用于嵌入式系统的操作系统。嵌入式操作系统是一种用途广泛的系统软件，负责嵌入式系统的全部软、硬件资源分配、任务调度、控制、协调并进行活动等工作。通常包括与硬件相关的底层驱动软件、系统内核、设备驱动接口、通信协议、图形界面、标准化浏览器等\"]},\"2188\":{\"h\":\"划分\",\"t\":[\"根据系统对时间的敏感程度可将嵌入式系统划分为：\"]},\"2189\":{\"h\":\"嵌入式实时操作系统\",\"t\":[\"嵌入式非实时系统：能够在制定或者确定的时间内完成系统功能和外部或内部、同步或异步时间做出响应的系统\",\"嵌入式实时操作系统兼具嵌入式操作系统的特点和实时操作系统的特点\",\"特点\",\"微型化\",\"代码质量高\",\"专业化\",\"实时性强\",\"可剪裁、可配置\",\"实时操作系统的最核心特点是实时性强\",\"嵌入式实时操作系统实时性的评价指标\",\"中断响应和延迟时间\",\"任务切换时间\",\"信号量混洗时间\"]},\"2190\":{\"h\":\"嵌入式实时操作系统调度算法\",\"t\":[\"优先级调度算法：系统为每个人物分配一个相对固定的优先顺序\",\"抢占式优先级调度算法：根据任务的紧急程度确定该任务的优先级。大多数RTOS调度算法都是抢占方式（可剥夺方式）\",\"最早截止期调度算法（EDF算法）：根据任务的截止时间头端来确定其优先级，对于时间期限最近的任务，分配最高的优先级\",\"最晚截止期调度算法：根据任务的截止时间末端确定其优先级，对于时间期限最近的任务，分配最高的优先级\"]},\"2191\":{\"h\":\"嵌入式操作系统\"},\"2192\":{\"h\":\"操作系统内核架构\",\"t\":[\"内核是操作系统的核心部分，它管理着系统的各种资源。内核可以看到成连接应用程序和硬件的一座桥梁，是直接运行在硬件上的最基础的软件实体\",\"目前从内核架构来划分，可分为宏内核和微内核\"]},\"2193\":{\"h\":\"嵌入式数据库\",\"t\":[\"与传统数据库相比，嵌入式数据库系统有以下几个主要特点\",\"嵌入式\",\"实时性\",\"移动性\",\"伸缩性\"]},\"2194\":{\"h\":\"分类\",\"t\":[\"基于内存方式\",\"基于文件方式\",\"基于网络方式\"]},\"2195\":{\"h\":\"嵌入式网络数据库\",\"t\":[\"实际上，嵌入式网络数据库是把功能强大的远程数据库映射到本地数据库，使嵌入式设备访问远程数据库就像访问本地数据库一样方便\",\"嵌入式网络数据库主要由三部分组成：客户端、通信协议和远程服务器。客户端主要负责提供接口给嵌入式程序，通信协议负责规范客户端与远程服务器之间的通信，还需要解决多客户端的并发问题，远程服务器负责维护服务器上的数据库数据\",\"由嵌入式网络数据库、嵌入式本地数据库（内存或文件）和嵌入式Web服务器等构成了综合的嵌入式综合信息系统\"]},\"2196\":{\"c\":[\"软考\"]},\"2197\":{\"c\":[\"软考\"]},\"2198\":{\"h\":\"计算机网路\"},\"2199\":{\"h\":\"计算机网络概述\",\"t\":[\"计算机网络功能\",\"数据通信\",\"资源共享\",\"管理集中化\",\"实现分布式处理\",\"负载均衡\",\"计算机网络可以极大扩展计算机系统的功能及其应用范围，提高可靠性，在为用户提供方便的同时，减少整体系统费用，降低了系统性价比\"]},\"2200\":{\"h\":\"计算机网络性能指标\",\"t\":[\"计算机网络性能指标可以从速率、带宽、吞吐量和时延等不同方面来度量计算及网络的性能\"]},\"2201\":{\"h\":\"时延\",\"t\":[\"时延是指数据（一个报文、分组甚至比特）从网络（或链路）的一端传送到另外一端传送到另一端所需的时间。时延是个很重要的性能指标，它由时也被称为延迟或迟延。网络中的时延由以下几个不同部分组成，如发送时延、传播时延、处理时延、排队时延等组成\",\"网络延迟=处理延迟+排队延迟+发送延迟+传播延迟。如果不考虑网络环境，服务器的延迟的主要因素是队列和磁盘IO延迟\",\"注：路由器发送时延大于交换机\"]},\"2202\":{\"h\":\"分类\"},\"2203\":{\"h\":\"按分布范围分\",\"t\":[\"局域网（LAN）Bluetooth\",\"城域网（MAN）WiFi\",\"广域网（WAN）WiMax\",\"因特网 3G/4G\"]},\"2204\":{\"h\":\"按拓扑结构分\",\"t\":[\"总线型\",\"星型\",\"环型\",\"树形\"]},\"2205\":{\"h\":\"5G技术\",\"t\":[\"5G网络的主要特征\",\"服务 化架构：5G核心网中引入了SBA服务化架构，实现网络功能的灵活定制和按需组合\",\"网络切片：通过网络切片技术在单个独立的物理网络上切分出多个逻辑网络，从而避免了为每一个服务建设一个专用的物理网络，极大地降低了建网和运维成本\"]},\"2206\":{\"h\":\"组网技术\"},\"2207\":{\"h\":\"交换技术\",\"t\":[\"数据在网络中转发通常离不开交换机。交换机的功能包括：集线功能、中继功能、桥接功能、隔离冲突域功能等\"]},\"2208\":{\"h\":\"基本交换原理\",\"t\":[\"交换机是一种基于MAC地址识别，能完成封装转发数据包功能的网络设备。交换机可以“学习”MAC地址，并把其存放在内部地址中，通过在数据的始发者和目标接收者之间建立临时的交换路径，使数据直接由源地址到达目的地址\",\"交换机需要实现的功能如下所述\",\"转发路径学习。根据收到的数据中的源MAC地址建立该地址痛交换机端口的映射写入MAC地址表中\",\"数据转发。如果交换机根据数据中的目的MAC地址在建立好的MAC地址表中查询到了，就向对应端口进行转发\",\"数据泛洪。如果数据中的目的MAC地址不再MAC地址表中，则向所有端口转发也就是泛洪。广播帧和组播帧向所有端口（不包括源端口）进行转发\",\"链路地址更新。MAC地址表会每隔一定时间（如300s）更新一次。\",\"注：交换机初始状态时地址表为空；交换机重启或手动清空时地址表会清空\"]},\"2209\":{\"h\":\"TCP/IP协议族\"},\"2210\":{\"h\":\"DHCP\",\"t\":[\"动态主机配置协议\",\"分配方式：\",\"固定分配【管理员分配】\",\"动态分配【有效期限的IP地址】\",\"自动分配【无限长的IP地址】\",\"无效地址：169.254.X.X和0.0.0.0\",\"租约默认为8天\",\"当租约过半时，客户机需要向DHCP服务器申请续租\",\"当租约超过87.5%时，如果仍然没有和当初提供的DHCP服务器联系上，则开始练习其他的DHCP服务器\"]},\"2211\":{\"h\":\"DNS\",\"t\":[\"域名系统\",\"主机向本地域名服务器的查询采用递归查询\",\"本地域名服务器向根域名服务器查询通常采用迭代查询\",\"递归查询：服务器必须回答目标IP与域名的映射关系\",\"迭代查询: 服务器收到一次迭代查询回复一次结果，这个结果不一定是目标IP与域名的映射关系，也可以是其他DNS服务器的地址\"]},\"2212\":{\"h\":\"网络冗余设计\",\"t\":[\"在网络冗余设计中，对于通信线路常见的设计目标主要有两个：一个是备用路径，另一个是负载分担\",\"备用路径：提高可用性，由路由器、交换机等设备之间的独立备用链路构成，一般情况下备用路径仅仅在主路径失效时投入使用。设计时主要考虑：\",\"备用路径的带宽\",\"切换时间\",\"非对称\",\"自动切换\",\"测试\",\"负载分担,是对备用路径方式的扩充，通过并行链路提供流量分担（荣誉的形式）来提高性能，主要的实现方法是利用两个或多个网络接口和路径来同时传递流量，设计及时注意考虑：\",\"网络中存在备用路径、备用链路时，可以考虑加入负载分担设计\",\"对于著路径、备用路径都相同的情况，可以实施负载分担的特例——负载均衡\",\"对于主路径、备用路径不相同的情况，可以采用策略路由机制，让一部分应用的流量分摊到备用路径上\"]},\"2213\":{\"h\":\"磁盘存储技术-Raid\",\"t\":[\"Raid0（条块化）：性能最高，并行处理，无冗余，损坏无法恢复\",\"raid1(镜像结构)：可用性，可修复性号，仅有50%利用率\",\"Raid0+1（Raid10）:Raid0与Raid1长处的结合，高效也可靠\",\"Raid3（奇偶校验的独立磁盘）：N+1模式，无固定的校验盘，坏一个盘可恢复\",\"Raid5（分布式奇偶校验的独立磁盘）：N+1模式，无固定的校验盘，坏一个盘可恢复。(n-1)/n\",\"Raid6（两种存储的奇偶校验）：N+2模式，无固定的校验盘，坏两个盘可恢复\"]},\"2214\":{\"h\":\"IPv6\",\"t\":[\"IPv6是设计用于替代现代版本IP协议（Ipv4）的下一代IP协议\",\"寻址能力方面的扩展，IPv6地址长度为128位，地址空间增大了2^96倍\",\"灵活的IP报文头部格式。使用一些列固定格式的扩展头部取代了IPv4中可变长度的选项字段。IPv6中选项部分的出现方式也有所变化，使路由器可以简单路过选项而不做任何处理，加快了报文处理速度\",\"IPv6简化了报文头部格式，字段只有8个，加快报文转发，提高了吞吐量\",\"单播地址：用于单个接口的标识符，传统的点对点通信\",\"组播地址：多播地址，一点对多点的通信，数据包交付到一组见算计中的每一个。IPv6没有广播的术语，而是将广播看作多播的一个特例\",\"任播地址：泛播地址，这是IPv6增加的一种类型。任播的目的站是一组计算机，但数据包在交付时只交付给其中一个，通常是距离最近的一个\",\"IPv6规定每个网卡最少有3个IPv6地址，分别是链路本地地址、全球单播地址和回送地址（站点本地地址）\",\"IPv6把自动IP地址配置作为标准功能，只要计算机连接上网络便可自动分配IP地址\",\"全状态自动配置：IPv6继承了IPv4动态主机配置协议（DHCP）这种自动配置服务\",\"无状态自动配置：主机通过两个阶段分别获得链路本地地址和可聚合全球单播地址\"]},\"2215\":{\"h\":\"IPv4/IPv6过渡技术\",\"t\":[\"双协议栈技术：双栈技术通过节点对IPv4和IPv6双协议栈的支持，从而支持两种业务的共存\",\"隧道技术：隧道技术通过在IPv4网络中部署隧道，实现在IPv4网络上对IPv6业务的承载，保证业务的共存和过渡。隧道技术包括：6to4隧道；6over4隧道；ISATAP隧道\",\"NAT-PT技术：NAT-PT使用网关设备连接IPv6和IPv4网络。当IPv4和IPv6节点互相访问时，NAT-PT网关实现两种协议的转换翻译和地址的映射\"]},\"2216\":{\"h\":\"网络规划与设计\"},\"2217\":{\"h\":\"逻辑网络设计\",\"t\":[\"逻辑网络设计是体现网络设计核心思想的关键阶段，在这一阶段根据需求规范和通信规范，先择一种比较适宜的网络逻辑结构，并基于该逻辑结构实施后续的资源分配规划、安全规划等内容。利用需求分析和现有网络体系分析的结果来设计逻辑网络结构，最后得到一份逻辑网络设计文档\"]},\"2218\":{\"h\":\"物理网络设计\",\"t\":[\"物理网络设计是对逻辑网络设计的物理实现，通过对设备的具体物理分布、运行环境等确定，确保网络的物理连接符合逻辑连接的要求。在这一阶段，网络设计者需要确定具体的软/硬件、连接设备、布线和服务的部署方案，输出如下内容\",\"网络物理结构图和布线方案\",\"设备和部件的详细列表清单\",\"软硬件和安装费用的估算\",\"安装日程表，详细说明服务的时间以及期限\",\"安装后的测试计划\",\"用户的培训计划\"]},\"2219\":{\"h\":\"层次化网络设计\"},\"2220\":{\"h\":\"分层设计\",\"t\":[\"核心层：主要是高速数据交换，实现高速数据传输、出口路由，常用冗余机制\",\"汇聚层：网络访问策略控制、数据包处理和过滤、策略路由、广播域定义、寻址\",\"接入层：主要是针对用户端，实现用户接入、计费管理、MAC地址认证、MAC地址过滤、收集用户信息，可以使用集线器代替交换机\"]},\"2221\":{\"c\":[\"软考\"]},\"2222\":{\"c\":[\"软考\"]},\"2223\":{\"h\":\"数据库系统\"},\"2224\":{\"h\":\"数据库模式\"},\"2225\":{\"h\":\"关系表类型\",\"t\":[\"基本关系（通常又称为基本表或基表）：实际存在的表，实际存储数据的逻辑表示\",\"查询表:查询结果对应的表\",\"视图表：由基表或其他视图表导出的表，本身不独立存储，数据库只存放它的定义，常称为虚表\"]},\"2226\":{\"h\":\"数据库视图\",\"t\":[\"他是一个虚拟表（逻辑上的表），其内容由查询定义（仅保存SQL查询语句）。同真实的表一样，视图包含一系列带有名称的列和行数据。但是，视图并没有真正存储这些数据，而是通过查询原始表动态生成所需要的数据\"]},\"2227\":{\"h\":\"视图的优点\",\"t\":[\"视图能简化用户操作\",\"视图使用户能以多种角度看待同一数据\",\"视图对重构数据库提供了一定程度的逻辑独立性\",\"视图可以对机密数据提供安全保护\"]},\"2228\":{\"h\":\"物化视图\",\"t\":[\"它不是传统意义上虚拟视图，是实体化视图，其本身会存储数据。同时当原始表中的数据更新时，物化视图也会更新。\"]},\"2229\":{\"h\":\"分布式数据库\",\"t\":[\"数据独立性：除了数据的逻辑独立性与物理独立性外，还有数据分布独立性（分布透明性）\",\"集中与自治共享结合的控制结构。各局部的DBM可以独立地管理局不数据库，具有自治的功能。同时，系统又设有几种控制机制，协调各局部DBM的工作，执行全局应用\",\"适当增加数据冗余度。在不同的场地存储同一数据的多个副本,可以提高系统的可靠性和可用性，同时也能提高系统性能。提高系统的可用性，即当系统中某个节点发生故障时，因为数据有其他副本在非故障场地上，对其他所有场地来说，数据仍然是可用的，从而保证数据的完备性。\",\"全局的一致性、可串行性和可恢复性。\"]},\"2230\":{\"h\":\"组成\",\"t\":[\"LDBMS\",\"GDBMS\",\"全局数据字典\",\"通信管理\"]},\"2231\":{\"h\":\"结构\",\"t\":[\"全局控制集中DDBMS\",\"全局控制分散DDBMS\",\"全局控制部分分散的DDBMS\"]},\"2232\":{\"h\":\"分布透明性\",\"t\":[\"分片透明性 \",\"水平分片\",\"垂直分片\",\"混合分片\",\"位置透明性\",\"局部数据模型透明性\",\"分片透明：是指用户不必关心数据是如何分片的，他们对数据的操作在全局关系上进行，即如何分片对用户是透明的\",\"复制透明：用户不用关心数据库在网络中各个节点的复制情况,被复制的数据的更新都由系统自动完成\",\"位置透明：是指用户不必知道所操作的数据放在何处，即数据分配到哪个或哪些站点存储对用户是透明的\",\"局部映像透明性（逻辑透明）：是最低层次的透明性，该透明性提供数据到局部数据库的映像，即用户不必关心局部DBMS支持哪种数据模型、使用哪种数据操纵语言，数据模型和操纵语言的转换是由系统完成的。因此，局部映像透明性对异构型和同构异质的分布式数据库系统是非常重要的\"]},\"2233\":{\"h\":\"两阶段提交协议\"},\"2234\":{\"h\":\"2PC事务提交的两个阶段\",\"t\":[\"表决阶段，目的是形成一个共同的决定 执行阶段，目的是实现这个协调者的决定\"]},\"2235\":{\"h\":\"两条全局提交规则\",\"t\":[\"只要有一个参与者撤销事务，协调者就必须做出全局撤销决定 只有所有参与者都同意提交事务，协调者才能做出全局提交决定\"]},\"2236\":{\"h\":\"数据库设计过程\"},\"2237\":{\"h\":\"概念结构设计\"},\"2238\":{\"h\":\"逻辑结构设计\"},\"2239\":{\"h\":\"数据模型\",\"t\":[\"数据模型三要素：数据结构、数据操作、数据的约束条件\"]},\"2240\":{\"h\":\"相关概念\",\"t\":[\"目或度：关系模式中属性的个数\",\"候选吗（候选键）\",\"主码（主键）\",\"主属性与非主属性：组成候选吗的属性就是主属性，其它的就是非主属性\",\"外码（外键）\",\"全码（ALL-Key）：关系模式的所有属性组是这个关系的候选码\"]},\"2241\":{\"h\":\"完整性约束\",\"t\":[\"实体完整性约束：规定基本关系的主属性不能取空值\",\"参照完整性约束：关系与关系间的引用，其他关系的主键或空值\",\"用户自定义完整性约束：应用环境决定\"]},\"2242\":{\"h\":\"关系代数\"},\"2243\":{\"h\":\"规范化理论\"},\"2244\":{\"h\":\"价值与用途\",\"t\":[\"非规范化的关系模式，可能存在的问题包括：数据冗余、更新异常（修改操作一致性问题）、插入异常、删除异常\"]},\"2245\":{\"h\":\"键\",\"t\":[\"主属性与非主属性：组成候选码的属性就是主属性，其它的就是非主属性\"]},\"2246\":{\"h\":\"求候选键\",\"t\":[\"将关系模式的函数依赖关系用“有向图”的方式表示\",\"找入度为0的属性，并以该属性集合为起点，尝试遍历有向图，若能正常遍历图中所有节点，则该属性集即为关系模式的候选键\",\"若入度为0的属性不能遍历图中所有节点，则需要尝试性的将一些中间结点（即有入度，也有出度的结点）并入入度为0的属性集中，直至该集合能遍历所有结点，集合为候选键\"]},\"2247\":{\"h\":\"函数依赖\"},\"2248\":{\"h\":\"Armstrong公理\"},\"2249\":{\"h\":\"范式判断\"},\"2250\":{\"h\":\"第一范式\",\"t\":[\"在关系模式R中，当且仅当所有域只包含原子值，即每个属性都是不可再分的数据项，则称关系模式R是第一范式\",\"简单属性和复合属性、单值属性和多值属性NULL属性、派生属性\"]},\"2251\":{\"h\":\"第二范式\",\"t\":[\"当切仅当实体E时第一范式（1NF），且每一个非主属性完全依赖主键（不存在部分依赖）时，则称实体E是第二范式\"]},\"2252\":{\"h\":\"第三范式\",\"t\":[\"当切仅当实体E是第二范式（2NF），且E中没有非主属性传递依赖于码时，则称实体E是第三范式\"]},\"2253\":{\"h\":\"BC范式\",\"t\":[\"设R是一个关系模式，F是它的依赖集，R属于BCDF当切仅当其F中每个依赖的决定因素必定包含R的某个候选码\"]},\"2254\":{\"h\":\"模式分解\"},\"2255\":{\"h\":\"保持函数依赖分解\",\"t\":[\"设数据库模式p={R1,R2,...,Rk}是关系模式R的一个分解，F是R上的函数依赖集，p中每个模式Ri上的FD集是Fi。如果{F1,F2,...,Fk}与F是等价的（即相互逻辑蕴涵），那么称分解p保持FD\"]},\"2256\":{\"h\":\"无损分解\",\"t\":[\"有损：不能还原 无损：可以还原\",\"无损联接分解：指将一个关系模式分解成若干个关系模式后，通过自然联接和投影等运算仍能还原到原来的关系模式\"]},\"2257\":{\"h\":\"并发控制\"},\"2258\":{\"h\":\"事务的ACID特性\",\"t\":[\"事务\",\"原子性：是指事物包含的所有操作要么全部成功，要么全部失败回滚。这些操作是一个整体，不能部分地完成\",\"一致性：是指事物必须使数据库从一个一致性状态变换到另一个一致性状态，也就是说一个事物执行之前和执行之后都必须处于一致性状态\",\"隔离性：是指一个事物的执行不能被其他事物干扰，即一个事物内部的操作及使用的数据对并发的其他事物是隔离的\",\"持续性：是指一个事物一旦被提交了，那么数据库中的数据的改变就是永久性的，无论发送何种谷中，都不应对其有任何影响\"]},\"2259\":{\"h\":\"并发产生的问题\",\"t\":[\"丢失更新\",\"不可重复读问题\",\"“脏”数据的读出\"]},\"2260\":{\"h\":\"封锁协议\",\"t\":[\"一级封锁协议：事物T在修改数据R之前必须先对其加X锁，直到事物结束才释放。可防止丢失修改\",\"二级封锁协议：一级封锁协议加上事务T在读取数据R之前先对其加S锁，读完后即可释放S锁。可防止丢失修改，还可防止读“脏”数据\",\"三级封锁协议：一级封锁协议加上事务T在读取数据R之前先对其加S锁，直到事务结束才释放。可防止丢失修改、防读“脏”数据与防止数据（不可）重复读\",\"两段锁协议。可串行化的，可能发生死锁\"]},\"2261\":{\"h\":\"丢失更新加锁\"},\"2262\":{\"h\":\"读“脏”数数加锁\"},\"2263\":{\"h\":\"不可重读读加锁\"},\"2264\":{\"h\":\"数据库的安全性\"},\"2265\":{\"h\":\"数据库备份与恢复技术\",\"t\":[\"冷备份也称为静态备份，是将数据库正常关闭，在停止状态下，将数据库的文件全部备份（复制）下来\",\"热备份也称为动态备份，是利用备份软件，在数据库正常运行的状态下，将数据库中的数据文件备份出来\"]},\"2266\":{\"h\":\"数据备份\",\"t\":[\"完全备份：备份所有数据\",\"差量备份：仅备份上一次完全备份之后变化的数据\",\"增量备份：备份上一份备份之后变化的数据\",\"日志文件：事务日志是针对数据库改所做的记录，它可以记录针对数据库的任何操作，并将记录结果保存在独立的文件中\"]},\"2267\":{\"h\":\"数据库故障与恢复\",\"t\":[\"撤销事务：故障发生时未完成的事务，放入Undo撤销\",\"重做事务：故障发生前已提交的事务，放入Redo重做\"]},\"2268\":{\"c\":[\"软考\"]},\"2269\":{\"c\":[\"软考\"]},\"2270\":{\"h\":\"Lod\"},\"2271\":{\"c\":[\"threejs\"]},\"2272\":{\"c\":[\"Lod\"]},\"2273\":{\"h\":\"八叉树检测\"},\"2274\":{\"c\":[\"threejs\"]},\"2275\":{\"c\":[\"八叉树检测\"]},\"2276\":{\"h\":\"BufferGeometry\"},\"2277\":{\"h\":\"BufferGeometry\",\"t\":[\"是面片、线或点几何体的有效表述。包括顶点位置，面片索引、法相量、颜色值、UV 坐标和自定义缓存属性值。使用 BufferGeometry 可以有效减少向 GPU 传输上述数据所需的开销。\"]},\"2278\":{\"h\":\"代码示例\",\"t\":[\"const geometry = new THREE.BufferGeometry(); // 创建一个简单的矩形. 在这里我们左上和右下顶点被复制了两次。 // 因为在两个三角面片里，这两个顶点都需要被用到。 const vertices = new Float32Array( [ -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0 ] ); // itemSize = 3 因为每个顶点都是一个三元组。 geometry.setAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) ); const material = new THREE.MeshBasicMaterial( { color: 0xff0000 } ); const mesh = new THREE.Mesh( geometry, material );\"]},\"2279\":{\"h\":\"构造函数\"},\"2280\":{\"h\":\"BufferGeometry()\",\"t\":[\"创建一个新的 BufferGeometry. 同时将预置属性设置为默认值.\"]},\"2281\":{\"h\":\"属性\"},\"2282\":{\"h\":\".attributes : Object\",\"t\":[\"通过 hashmap 存储该几何体相关的属性，hashmap 的 id 是当前 attribute 的名称，值是相应的 buffer。 你可以通过 .setAttribute 和 .getAttribute 添加和访问与当前几何体有关的 attribute。\"]},\"2283\":{\"h\":\".boundingBox : Box3\",\"t\":[\"当前 bufferGeometry 的外边界矩形。可以通过 .computeBoundingBox() 计算。默认值是 null。\"]},\"2284\":{\"h\":\".boundingSphere : Sphere\",\"t\":[\"当前 bufferGeometry 的外边界球形。可以通过 .computeBoundingSphere() 计算。默认值是 null。\"]},\"2285\":{\"h\":\".drawRange : Object\",\"t\":[\"用于判断几何体的哪个部分需要被渲染。该值不应该直接被设置，而需要通过 .setDrawRange 进行设置。 默认值为\",\"{ start: 0, count: Infinity }\"]},\"2286\":{\"h\":\".groups : Array\",\"t\":[\"将当前几何体分割成组进行渲染，每个部分都会在单独的 WebGL 的 draw call 中进行绘制。该方法可以让当前的 bufferGeometry 可以使用一个材质队列进行描述。\",\"分割后的每个部分都是一个如下的表单：\",\"{ start: Integer, count: Integer, materialIndex: Integer }\",\"start 表明当前 draw call 中的没有索引的几何体的几何体的第一个顶点；或者第一个三角面片的索引。 count 指明当前分割包含多少顶点（或 indices）。 materialIndex 指出当前用到的材质队列的索引。\",\"通过 .addGroup 来增加组，而不是直接更改当前队列。\"]},\"2287\":{\"h\":\".id : Integer\",\"t\":[\"当前 bufferGeometry 的唯一编号。\"]},\"2288\":{\"h\":\".index : BufferAttribute\",\"t\":[\"允许顶点在多个三角面片间可以重用。这样的顶点被称为\\\"已索引的三角面片（indexed triangles)。 每个三角面片都和三个顶点的索引相关。该 attribute 因此所存储的是每个三角面片的三个顶点的索引。 如果该 attribute 没有设置过，则 renderer 假设每三个连续的位置代表一个三角面片。 默认值是 null。\"]},\"2289\":{\"h\":\".isBufferGeometry : Boolean\",\"t\":[\"Read-only标志，用于检查给定对象是否为BufferGeometry类型。\"]},\"2290\":{\"h\":\".morphAttributes : Object\",\"t\":[\"存储 BufferAttribute 的 Hashmap，存储了几何体 morph targets 的细节信息。\"]},\"2291\":{\"h\":\".morphTargetsRelative : Boolean\",\"t\":[\"用于控制变形目标的行为;当设置为true时，变形目标数据被视为相对偏移量，而不是绝对位置/法线。默认为false。\"]},\"2292\":{\"h\":\".name : String\",\"t\":[\"当前 bufferGeometry 实例的可选别名。默认值是空字符串。\"]},\"2293\":{\"h\":\".userData : Object\",\"t\":[\"存储 BufferGeometry 的自定义数据的对象。为保持对象在克隆时完整，该对象不应该包括任何函数的引用。\"]},\"2294\":{\"h\":\".uuid : String\",\"t\":[\"当前对象实例的 UUID，该值会自动被分配，且不应被修改。\"]},\"2295\":{\"h\":\"方法\"},\"2296\":{\"h\":\".setAttribute ( name : String, attribute : BufferAttribute ) : this\",\"t\":[\"为当前几何体设置一个 attribute 属性。在类的内部，有一个存储 .attributes 的 hashmap， 通过该 hashmap，遍历 attributes 的速度会更快。而使用该方法，可以向 hashmap 内部增加 attribute。 所以，你需要使用该方法来添加 attributes。\"]},\"2297\":{\"h\":\".addGroup ( start : Integer, count : Integer, materialIndex : Integer ) : undefined\",\"t\":[\"为当前几何体增加一个 group，详见 groups 属性。\"]},\"2298\":{\"h\":\".applyMatrix4 ( matrix : Matrix4 ) : this\",\"t\":[\"用给定矩阵转换几何体的顶点坐标。\"]},\"2299\":{\"h\":\".center () : this\",\"t\":[\"根据边界矩形将几何体居中。\"]},\"2300\":{\"h\":\".clone () : BufferGeometry\",\"t\":[\"克隆当前的 BufferGeometry。\"]},\"2301\":{\"h\":\".copy ( bufferGeometry : BufferGeometry ) : this\",\"t\":[\"将参数指定的 BufferGeometry 的值拷贝到当前 BufferGeometry 中。\"]},\"2302\":{\"h\":\".clearGroups ( ) : undefined\",\"t\":[\"清空所有的 groups。\"]},\"2303\":{\"h\":\".computeBoundingBox () : undefined\",\"t\":[\"计算当前几何体的的边界矩形，该操作会更新已有 [param:.boundingBox]。 边界矩形不会默认计算，需要调用该接口指定计算边界矩形，否则保持默认值 null。\"]},\"2304\":{\"h\":\".computeBoundingSphere () : undefined\",\"t\":[\"计算当前几何体的的边界球形，该操作会更新已有 [param:.boundingSphere]。 边界球形不会默认计算，需要调用该接口指定计算边界球形，否则保持默认值 null。\"]},\"2305\":{\"h\":\".computeTangents () : undefined\",\"t\":[\"计算并向该几何图形添加切线属性。\"]},\"2306\":{\"h\":\".computeVertexNormals () : undefined\",\"t\":[\"通过面片法向量的平均值计算每个顶点的法向量。\"]},\"2307\":{\"h\":\".dispose () : undefined\",\"t\":[\"从内存中销毁对象。 如果在运行是需要从内存中删除 BufferGeometry，则需要调用该函数。\"]},\"2308\":{\"h\":\".getAttribute ( name : String ) : BufferAttribute\",\"t\":[\"返回指定名称的 attribute。\"]},\"2309\":{\"h\":\".getIndex () : BufferAttribute\",\"t\":[\"返回缓存相关的 .index。\"]},\"2310\":{\"h\":\".hasAttribute ( name : String ) : Boolean\",\"t\":[\"如果具有指定名称的属性存在，则返回true。\"]},\"2311\":{\"h\":\".lookAt ( vector : Vector3 ) : this\",\"t\":[\"vector - 几何体所朝向的世界坐标。\",\"旋转几何体朝向控件中的一点。该过程通常在一次处理中完成，不会循环处理。典型的用法是过通过调用 Object3D.lookAt 实时改变 mesh 朝向。\"]},\"2312\":{\"h\":\".normalizeNormals () : undefined\",\"t\":[\"几何体中的每个法向量长度将会为 1。这样操作会更正光线在表面的效果。\"]},\"2313\":{\"h\":\".deleteAttribute ( name : String ) : BufferAttribute\",\"t\":[\"删除具有指定名称的 attribute。\"]},\"2314\":{\"h\":\".rotateX ( radians : Float ) : this\",\"t\":[\"在 X 轴上旋转几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。\"]},\"2315\":{\"h\":\".rotateY ( radians : Float ) : this\",\"t\":[\"在 Y 轴上旋转几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。\"]},\"2316\":{\"h\":\".rotateZ ( radians : Float ) : this\",\"t\":[\"在 Z 轴上旋转几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。\"]},\"2317\":{\"h\":\".scale ( x : Float, y : Float, z : Float ) : this\",\"t\":[\"缩放几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.scale 实时旋转几何体。\"]},\"2318\":{\"h\":\".setIndex ( index : BufferAttribute ) : this\",\"t\":[\"设置缓存的 .index。\"]},\"2319\":{\"h\":\".setDrawRange ( start : Integer, count : Integer ) : undefined\",\"t\":[\"设置缓存的 .drawRange。详见相关属性说明。\"]},\"2320\":{\"h\":\".setFromPoints ( points : Array ) : this\",\"t\":[\"通过点队列设置该 BufferGeometry 的 attribute。\"]},\"2321\":{\"h\":\".toJSON () : Object\",\"t\":[\"返回代表该 BufferGeometry 的 JSON 对象。\"]},\"2322\":{\"h\":\".toNonIndexed () : BufferGeometry\",\"t\":[\"返回已索引的 BufferGeometry 的非索引版本。\"]},\"2323\":{\"h\":\".translate ( x : Float, y : Float, z : Float ) : this\",\"t\":[\"移动几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。\"]},\"2324\":{\"c\":[\"threejs\"]},\"2325\":{\"c\":[\"几何体\"]},\"2326\":{\"h\":\"Cure\"},\"2327\":{\"h\":\"Curve\",\"t\":[\"用于创建包含插值方法的Curve对象的抽象基类。 有关Curve的数组，请参见CurePath。\"]},\"2328\":{\"h\":\"构造函数\"},\"2329\":{\"h\":\"Curve()\",\"t\":[\"创建一个 Curve.\"]},\"2330\":{\"h\":\"属性\"},\"2331\":{\"h\":\".arcLengthDivisions : Integer\",\"t\":[\"确定.GetLength计算曲线的累积分段长度时的分段量。 为确保.getSpacedPoints等方法时的精度，如果曲线非常大，建议增加.arcLengthDivisions。默认值为200\"]},\"2332\":{\"h\":\"方法\"},\"2333\":{\"h\":\".getPoint ( t : Float, optionalTarget : Vector ) : Vector\",\"t\":[\"t - 曲线上的位置。必须在[0,1]范围内\",\"optionalTarget — (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。\",\"返回曲线上给定位置的点。\"]},\"2334\":{\"h\":\".getPointAt ( u : Float, optionalTarget : Vector ) : Vector\",\"t\":[\"u - 根据弧长在曲线上的位置。必须在范围[0，1]内。\",\"optionalTarget — (可选) 如果需要, (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。\",\"根据弧长返回曲线上给定位置的点。\"]},\"2335\":{\"h\":\".getPoints ( divisions : Integer ) : Array\",\"t\":[\"divisions -- 要将曲线划分为的分段数。默认是 5.\",\"使用getPoint（t）返回一组divisions+1的点\"]},\"2336\":{\"h\":\".getSpacedPoints ( divisions : Integer ) : Array\",\"t\":[\"divisions -- 要将曲线划分为的分段数。默认是 5.\",\"使用getPointAt（u）返回一个分段+1的等距点的数组。\"]},\"2337\":{\"h\":\".getLength () : Float\",\"t\":[\"获取总曲线弧长。\"]},\"2338\":{\"h\":\".getLengths ( divisions : Integer ) : Array\",\"t\":[\"获取累积段长度的列表。\"]},\"2339\":{\"h\":\".updateArcLengths () : undefined\",\"t\":[\"更新累积段距离缓存。\"]},\"2340\":{\"h\":\".getUtoTmapping ( u : Float, distance : Float ) : Float\",\"t\":[\"给定范围（0..1）内的u，返回范围（0..1）内的t， 然后可以用t来使用 .getPoint给出与曲线末端等距的点。\"]},\"2341\":{\"h\":\".getTangent ( t : Float, optionalTarget : Vector ) : Vector\",\"t\":[\"t -在曲线上的点，必须在范围 [ 0, 1 ].\",\"optionalTarget — (可选) 如果需要, (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。\",\"返回t处的单位向量切线。如果派生曲线未实现其 切线求导，将使用相距一个小三角形的两个点来求与其实际梯度的近似值\"]},\"2342\":{\"h\":\".getTangentAt ( u : Float, optionalTarget : Vector ) : Vector\",\"t\":[\"u - 根据弧长在曲线上的位置，必须在范围[ 0, 1 ]。\",\"optionalTarget —(可选) 如果需要, (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。\",\"返回一个点处的切线，该点与 .getTangent中给定的曲线的端点距离相等\"]},\"2343\":{\"h\":\".computeFrenetFrames ( segments : Integer, closed : Boolean ) : Object\",\"t\":[\"生成Frenet帧。需要三维空间中的曲线定义。用于TubeGeometry或ExtradeGeometry等几何图形。\"]},\"2344\":{\"h\":\".clone () : Curve\",\"t\":[\"创建此实例的克隆。\"]},\"2345\":{\"h\":\".copy ( source : Curve ) : this\",\"t\":[\"将另一个Curve对象复制到此实例。\"]},\"2346\":{\"h\":\".toJSON () : Object\",\"t\":[\"返回此实例的JSON对象表示形式。\"]},\"2347\":{\"h\":\".fromJSON ( json : Object ) : this\",\"t\":[\"将给定的JSON数据复制到此实例。\"]},\"2348\":{\"c\":[\"threejs\"]},\"2349\":{\"c\":[\"几何体\"]},\"2350\":{\"h\":\"IcosahedronGeometry(二十面缓冲几何体)\"},\"2351\":{\"h\":\"IcosahedronGeometry\"},\"2352\":{\"c\":[\"threejs\"]},\"2353\":{\"c\":[\"几何体\"]},\"2354\":{\"h\":\"OctahedronGeometry(八面缓冲几何体)\"},\"2355\":{\"h\":\"OctahedronGeometry\"},\"2356\":{\"c\":[\"threejs\"]},\"2357\":{\"c\":[\"几何体\"]},\"2358\":{\"h\":\"ConvexGeometry(凸包几何体)\"},\"2359\":{\"h\":\"ConvexGeometry\",\"t\":[\"import { ConvexGeometry } from \\\"three/examples/jsm/geometries/ConvexGeometry\\\" const geometry = new ConvexGeometry( points ); const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} ); const mesh = new THREE.Mesh( geometry, material ); scene.add( mesh );\"]},\"2360\":{\"c\":[\"threejs\"]},\"2361\":{\"c\":[\"几何体\"]},\"2362\":{\"h\":\"DodecahedronGeometry(十二面缓冲几何体)\"},\"2363\":{\"h\":\"DodecahedronGeometry\"},\"2364\":{\"c\":[\"threejs\"]},\"2365\":{\"c\":[\"几何体\"]},\"2366\":{\"h\":\"TetrahedronGeometry(四面缓冲几何体)\"},\"2367\":{\"h\":\"TetrahedronGeometry\"},\"2368\":{\"c\":[\"threejs\"]},\"2369\":{\"c\":[\"几何体\"]},\"2370\":{\"h\":\"CircleGeometry(圆形缓冲几何体)\"},\"2371\":{\"h\":\"CircleGeometry\",\"t\":[\"const geometry = new THREE.CircleGeometry( 5, 32 ); const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } ); const circle = new THREE.Mesh( geometry, material ); scene.add( circle );\"]},\"2372\":{\"c\":[\"threejs\"]},\"2373\":{\"c\":[\"几何体\"]},\"2374\":{\"h\":\"CylinderGeometry(圆柱缓冲几何体)\"},\"2375\":{\"h\":\"CylinderGeometry\",\"t\":[\"const geometry = new THREE.CylinderGeometry( 5, 5, 20, 32 ); const material = new THREE.MeshBasicMaterial( {color: 0xffff00} ); const cylinder = new THREE.Mesh( geometry, material ); scene.add( cylinder );\"]},\"2376\":{\"c\":[\"threejs\"]},\"2377\":{\"c\":[\"几何体\"]},\"2378\":{\"h\":\"TorusGeometry(圆环缓冲几何体)\"},\"2379\":{\"h\":\"TorusGeometry\",\"t\":[\"const geometry = new THREE.TorusGeometry( 10, 3, 16, 100 ); const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } ); const torus = new THREE.Mesh( geometry, material ); scene.add( torus );\"]},\"2380\":{\"c\":[\"threejs\"]},\"2381\":{\"c\":[\"几何体\"]},\"2382\":{\"h\":\"RingGeometry(圆环缓冲几何体)\"},\"2383\":{\"h\":\"RingGeometry\",\"t\":[\"const geometry = new THREE.RingGeometry( 1, 5, 32 ); const material = new THREE.MeshBasicMaterial( { color: 0xffff00, side: THREE.DoubleSide } ); const mesh = new THREE.Mesh( geometry, material ); scene.add( mesh );\"]},\"2384\":{\"c\":[\"threejs\"]},\"2385\":{\"c\":[\"几何体\"]},\"2386\":{\"h\":\"TorusKnotGeometry(圆环缓冲扭结几何体)\"},\"2387\":{\"h\":\"TorusKnotGeometry\",\"t\":[\"const geometry = new THREE.TorusKnotGeometry( 10, 3, 100, 16 ); const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } ); const torusKnot = new THREE.Mesh( geometry, material ); scene.add( torusKnot );\"]},\"2388\":{\"c\":[\"threejs\"]},\"2389\":{\"c\":[\"几何体\"]},\"2390\":{\"h\":\"ConeGeometry(圆锥缓冲几何体)\"},\"2391\":{\"h\":\"圆锥缓冲几何体ConeGeometry\",\"t\":[\"const geometry = new THREE.ConeGeometry( 5, 20, 32 ); const material = new THREE.MeshBasicMaterial( {color: 0xffff00} ); const cone = new THREE.Mesh( geometry, material ); scene.add( cone );\"]},\"2392\":{\"c\":[\"threejs\"]},\"2393\":{\"c\":[\"几何体\"]},\"2394\":{\"h\":\"PolyhedronGeometry(多面缓冲几何体)\"},\"2395\":{\"h\":\"PolyhedronGeometry\",\"t\":[\"const verticesOfCube = [ -1,-1,-1, 1,-1,-1, 1, 1,-1, -1, 1,-1, -1,-1, 1, 1,-1, 1, 1, 1, 1, -1, 1, 1, ]; const indicesOfFaces = [ 2,1,0, 0,3,2, 0,4,7, 7,3,0, 0,1,5, 5,4,0, 1,2,6, 6,5,1, 2,3,7, 7,6,2, 4,5,6, 6,7,4 ]; const geometry = new THREE.PolyhedronGeometry( verticesOfCube, indicesOfFaces, 6, 2 );\"]},\"2396\":{\"c\":[\"threejs\"]},\"2397\":{\"c\":[\"几何体\"]},\"2398\":{\"h\":\"PlaneGeometry(平面缓冲几何体)\"},\"2399\":{\"h\":\"PlaneGeometry\",\"t\":[\"const geometry = new THREE.PlaneGeometry( 1, 1 ); const material = new THREE.MeshBasicMaterial( {color: 0xffff00, side: THREE.DoubleSide} ); const plane = new THREE.Mesh( geometry, material ); scene.add( plane );\"]},\"2400\":{\"c\":[\"threejs\"]},\"2401\":{\"c\":[\"几何体\"]},\"2402\":{\"h\":\"ShapeGeometry(形状缓冲几何体)\"},\"2403\":{\"h\":\"ShapeGeometry\",\"t\":[\"const x = 0, y = 0; const heartShape = new THREE.Shape(); heartShape.moveTo( x + 5, y + 5 ); heartShape.bezierCurveTo( x + 5, y + 5, x + 4, y, x, y ); heartShape.bezierCurveTo( x - 6, y, x - 6, y + 7,x - 6, y + 7 ); heartShape.bezierCurveTo( x - 6, y + 11, x - 3, y + 15.4, x + 5, y + 19 ); heartShape.bezierCurveTo( x + 12, y + 15.4, x + 16, y + 11, x + 16, y + 7 ); heartShape.bezierCurveTo( x + 16, y + 7, x + 16, y, x + 10, y ); heartShape.bezierCurveTo( x + 7, y, x + 5, y + 5, x + 5, y + 5 ); const geometry = new THREE.ShapeGeometry( heartShape ); const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } ); const mesh = new THREE.Mesh( geometry, material ) ; scene.add( mesh );\"]},\"2404\":{\"c\":[\"threejs\"]},\"2405\":{\"c\":[\"几何体\"]},\"2406\":{\"h\":\"ExtrudeGeometry(挤压缓冲几何体)\"},\"2407\":{\"h\":\"ExtrudeGeometry\",\"t\":[\"const length = 12, width = 8 const shape = new THREE.Shape() shape.moveTo(0, 0) shape.lineTo(0, width) shape.lineTo(length, width) shape.lineTo(length, 0) shape.lineTo(0, 0) const extrudeSettings = { steps: 2, depth: 16, bevelEnabled: true, bevelThickness: 1, bevelSize: 1, bevelOffset: 0, bevelSegments: 1, } const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings) const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 }) const mesh = new THREE.Mesh(geometry, material) scene.add(mesh)\"]},\"2408\":{\"c\":[\"threejs\"]},\"2409\":{\"c\":[\"几何体\"]},\"2410\":{\"h\":\"CatmullRomCurve3(曲线)\"},\"2411\":{\"h\":\"CatmullRomCurve3\",\"t\":[\"使用Catmull-Rom算法， 从一系列的点创建一条平滑的三维样条曲线。\",\"const curve = new THREE.CatmullRomCurve3( [ new THREE.Vector3( -10, 0, 10 ), new THREE.Vector3( -5, 5, 5 ), new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 5, -5, 5 ), new THREE.Vector3( 10, 0, 10 ) ] ); const points = curve.getPoints( 50 ); const geometry = new THREE.BufferGeometry().setFromPoints( points ); const material = new THREE.LineBasicMaterial( { color: 0xff0000 } ); const curveObject = new THREE.Line( geometry, material );\"]},\"2412\":{\"c\":[\"threejs\"]},\"2413\":{\"c\":[\"几何体\"]},\"2414\":{\"h\":\"曲线路径（CurvePath）\"},\"2415\":{\"h\":\"CurePath\",\"t\":[\"一个扩展了Curve的抽象基类。CurvePath仅仅是一个已连接的曲线的数组，但保留了曲线的API。\"]},\"2416\":{\"h\":\"构造函数\"},\"2417\":{\"h\":\"CurvePath()\",\"t\":[\"构造函数中不传入参数。\"]},\"2418\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类Cure。\"]},\"2419\":{\"h\":\".curves : Array\",\"t\":[\"Curves数组。\"]},\"2420\":{\"h\":\".autoClose : Boolean\",\"t\":[\"是否自动闭合路径。\"]},\"2421\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Cure。\"]},\"2422\":{\"h\":\".add ( curve : Curve ) : undefined\",\"t\":[\"添加一条曲线到.curves数组中。\"]},\"2423\":{\"h\":\".closePath () : undefined\",\"t\":[\"添加一条lineCurve用于闭合路径。\"]},\"2424\":{\"h\":\".getCurveLengths () : Array\",\"t\":[\"Get list of cumulative curve lengths of the curves in the .curves array.\"]},\"2425\":{\"h\":\".getPoints ( divisions : Integer ) : Array\",\"t\":[\"divisions -- 曲线分段数量。默认值为12。\",\"返回一组使用getPoint( t )获得的divisions + 1个点。\"]},\"2426\":{\"h\":\".getSpacedPoints ( divisions : Integer ) : Array\",\"t\":[\"divisions -- 曲线分段数量。默认值为40。\",\"返回一组使用getPointAt( u )获得的divisions + 1个均分点。\"]},\"2427\":{\"c\":[\"threejs\"]},\"2428\":{\"c\":[\"几何体\"]},\"2429\":{\"h\":\"SphereGeometry(球缓冲几何体)\"},\"2430\":{\"h\":\"SphereGeometry\",\"t\":[\"const geometry = new THREE.SphereGeometry( 15, 32, 16 ); const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } ); const sphere = new THREE.Mesh( geometry, material ); scene.add( sphere );\"]},\"2431\":{\"c\":[\"threejs\"]},\"2432\":{\"c\":[\"几何体\"]},\"2433\":{\"h\":\"BoxGeometry(立方缓冲几何体)\"},\"2434\":{\"h\":\"BoxGeometry\",\"t\":[\"const geometry = new THREE.BoxGeometry( 1, 1, 1 ); const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} ); const cube = new THREE.Mesh( geometry, material ); scene.add( cube );\"]},\"2435\":{\"c\":[\"threejs\"]},\"2436\":{\"c\":[\"几何体\"]},\"2437\":{\"h\":\"TubeGeometry(管道缓冲几何体)\"},\"2438\":{\"h\":\"TubeGeometry\",\"t\":[\"class CustomSinCurve extends THREE.Curve { constructor(scale = 1) { super() this.scale = scale } getPoint(t, optionalTarget = new THREE.Vector3()) { const tx = t * 3 - 1.5 const ty = Math.sin(2 * Math.PI * t) const tz = 0 return optionalTarget.set(tx, ty, tz).multiplyScalar(this.scale) } } const path = new CustomSinCurve(10) const geometry = new THREE.TubeGeometry(path, 20, 2, 8, false) const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 }) const mesh = new THREE.Mesh(geometry, material) scene.add(mesh)\"]},\"2439\":{\"c\":[\"threejs\"]},\"2440\":{\"c\":[\"几何体\"]},\"2441\":{\"h\":\"WireframeGeometry(网格几何体)\"},\"2442\":{\"h\":\"WireframeGeometry\",\"t\":[\"const geometry = new THREE.SphereGeometry( 100, 100, 100 ); const wireframe = new THREE.WireframeGeometry( geometry ); const line = new THREE.LineSegments( wireframe ); line.material.depthTest = false; line.material.opacity = 0.25; line.material.transparent = true; scene.add( line );\"]},\"2443\":{\"c\":[\"threejs\"]},\"2444\":{\"c\":[\"几何体\"]},\"2445\":{\"h\":\"LatheGeometry(车削缓冲几何体)\"},\"2446\":{\"h\":\"LatheGeometry\",\"t\":[\"const points = []; for ( let i = 0; i < 10; i ++ ) { points.push( new THREE.Vector2( Math.sin( i * 0.2 ) * 10 + 5, ( i - 5 ) * 2 ) ); } const geometry = new THREE.LatheGeometry( points ); const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } ); const lathe = new THREE.Mesh( geometry, material ); scene.add( lathe );\"]},\"2447\":{\"c\":[\"threejs\"]},\"2448\":{\"c\":[\"几何体\"]},\"2449\":{\"h\":\"EdgesGeometry(边缘几何体)\"},\"2450\":{\"h\":\"EdgesGeometry\",\"t\":[\"const geometry = new THREE.BoxGeometry(100, 100, 100) const edges = new THREE.EdgesGeometry(geometry) const line = new THREE.LineSegments( edges, new THREE.LineBasicMaterial({ color: 0xffffff }) ) scene.add(line)\"]},\"2451\":{\"c\":[\"threejs\"]},\"2452\":{\"c\":[\"几何体\"]},\"2453\":{\"h\":\"DefaultLoadingManager\"},\"2454\":{\"h\":\"DefaultLoadingManager\",\"t\":[\"LoadingManager是一个全局实例, 当其他加载器没有指定加载管理器时，它将被其他大多数的加载器设为默认的加载管理器。\",\"LoadingManager对于大多数加载器来说已经足够了，但有时您可能需要单独设置加载管理器，例如纹理、模型加载器。\"]},\"2455\":{\"h\":\"代码示例\",\"t\":[\"你可以选择性的为你的管理器设置 onStart, onLoad, onProgress, onError 这些方法。 当你的加载器使用默认加载管理器时，这些方法都将被应用到加载器上。\",\"请注意，个人的加载器的不应具有类似上面类似的命名函数，以避免混淆。因为这些函数时用于显示有关加载总体状态的信息，而不是处理已加载的数据。\",\"THREE.DefaultLoadingManager.onStart = function ( url, itemsLoaded, itemsTotal ) { console.log( 'Started loading file: ' + url + '.\\\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' ); }; THREE.DefaultLoadingManager.onLoad = function ( ) { console.log( 'Loading Complete!'); }; THREE.DefaultLoadingManager.onProgress = function ( url, itemsLoaded, itemsTotal ) { console.log( 'Loading file: ' + url + '.\\\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' ); }; THREE.DefaultLoadingManager.onError = function ( url ) { console.log( 'There was an error loading ' + url ); };\"]},\"2456\":{\"h\":\"属性\",\"t\":[\"有关LoadingManager属性的详细信息，请查看LoadingManager页面。\"]},\"2457\":{\"h\":\"方法\",\"t\":[\"有关LoadingManager方法的详细信息，请查看LoadingManager页面。\"]},\"2458\":{\"c\":[\"threejs\"]},\"2459\":{\"c\":[\"加载器\"]},\"2460\":{\"h\":\"LoadingManager\"},\"2461\":{\"h\":\"LoadingManager\",\"t\":[\"其功能是处理并跟踪已加载和待处理的数据。如果未手动设置加强管理器，则会为加载器创建和使用默认全局实例加载器管理器 - 请参阅DefaultLoadingManager.\",\"一般来说，默认的加载管理器已足够使用了，但有时候也需要设置单独的加载器 - 例如，如果你想为对象和纹理显示单独的加载条。\"]},\"2462\":{\"h\":\"代码示例\",\"t\":[\"const manager = new THREE.LoadingManager() manager.onStart = function (url, itemsLoaded, itemsTotal) { console.log( 'Started loading file: ' + url + '.\\\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' ) } manager.onLoad = function () { console.log('Loading complete!') } manager.onProgress = function (url, itemsLoaded, itemsTotal) { console.log( 'Loading file: ' + url + '.\\\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.' ) } manager.onError = function (url) { console.log('There was an error loading ' + url) } const loader = new THREE.OBJLoader(manager) loader.load('file.obj', function (object) { // })\",\"除了观察进度流程之外，还可以使用 LoadingManager 在加载期间覆写资源 URL。当某资源来自拖拽事件、 WebSockets、WebRTC 或其他 API 时，此方法可以有所帮助。下面显示了如何使用 Blob URL 加载内存模型的示例。\",\"// 将文件拖入网页时创建的Blob或File对象。 const blobs = { 'fish.gltf': blob1, 'diffuse.png': blob2, 'normal.png': blob3 } const manager = new THREE.LoadingManager() // 使用URL回调初始化加载管理器。 const objectURLs = [] manager.setURLModifier((url) => { url = URL.createObjectURL(blobs[url]) objectURLs.push(url) return url }) // 像通常一样加载，然后撤消blob URL const loader = new THREE.GLTFLoader(manager) loader.load('fish.gltf', (gltf) => { scene.add(gltf.scene) objectURLs.forEach((url) => URL.revokeObjectURL(url)) })\"]},\"2463\":{\"h\":\"构造方法\"},\"2464\":{\"h\":\"onLoad : Function\",\"t\":[\"onLoad — (可选) 所有加载器加载完成后，将调用此函数。\"]},\"2465\":{\"h\":\"onProgress : Function\",\"t\":[\"onProgress — (可选) 当每个项目完成后，将调用此函数。\"]},\"2466\":{\"h\":\"onError : Function\",\"t\":[\"onError — (可选) 当一个加载器遇到错误时，将调用此函数。\"]},\"2467\":{\"h\":\"属性\"},\"2468\":{\"h\":\".onStart : Function\",\"t\":[\"此函数在加载开始时被调用。 有如下参数：\",\"url — 被加载的项的url。\",\"itemsLoaded — 目前已加载项的个数。\",\"itemsTotal — 总共所需要加载项的个数。\",\"该函数默认为undefined。\"]},\"2469\":{\"h\":\".onLoad : Function\",\"t\":[\"所有的项目加载完成后将调用此函数。默认情况下，该函数是未定义的，除非在构造函数中传入。\"]},\"2470\":{\"h\":\".onProgress : Function\",\"t\":[\"此方法加载每一个项，加载完成时进行调用。 有如下参数：\",\"url — 被加载的项的url。\",\"itemsLoaded — 目前已加载项的个数。\",\"itemsTotal — 总共所需要加载项的个数。\",\"默认情况下，该函数为undefined，除非在构造函数中传入。\"]},\"2471\":{\"h\":\".onError : Function\",\"t\":[\"此方法将在任意项加载错误时，进行调用。 有如下参数：\",\"url — 加载发生错误的项目的url\",\"默认情况下，该函数为undefined，除非在构造函数中传入。\"]},\"2472\":{\"h\":\"方法\"},\"2473\":{\"h\":\".addHandler ( regex : Object, loader : Loader ) : this\",\"t\":[\"regex — A regular expression.\",\"loader — The loader.\",\"用给定的正则表达式注册一个加载器。可用于定义加载特定文件时应使用哪个加载器。一个典型的用例是覆盖纹理的默认加载器。\",\"manager.addHandler( /\\\\.tga$/i, new TGALoader() );\"]},\"2474\":{\"h\":\".getHandler ( file : String ) : Loader\",\"t\":[\"file — The file path.\",\"可用于检索给定文件路径的已注册加载器。\"]},\"2475\":{\"h\":\".removeHandler ( regex : Object ) : this\",\"t\":[\"regex — A regular expression.\",\"移除给定正则表达式的加载器。\"]},\"2476\":{\"h\":\".resolveURL ( url : String ) : String\",\"t\":[\"url — 所要加载的url\",\"给定URL，使用URL修饰符回调（如果有）并返回已解析的URL。如果未设置URL修饰符，则返回原始URL。\"]},\"2477\":{\"h\":\".setURLModifier ( callback : Function ) : this\",\"t\":[\"callback — 设置URL修饰符成功时回调。使用url参数进行回调，并且必须返回 resolvedURL 。\",\"如果设置了回调，则在发送请求之前将向每个资源URL传递回调。回调可以返回最初的URL，也可以返回新URL以覆盖加载行为。 此行为可用于从.ZIP、拖拽API和数据URI中加载资源文件。\"]},\"2478\":{\"h\":\".itemStart ( url : String ) : undefined\",\"t\":[\"url — 所要加载的url\",\"任何使用管理器的加载器都会调用此方法， 当加载器需要开始加载URL时。\"]},\"2479\":{\"h\":\".itemEnd ( url : String ) : undefined\",\"t\":[\"url — 所要加载的url\",\"任何使用管理器的加载器都会调用此方法， 当加载器需要加载URL结束时。\"]},\"2480\":{\"h\":\".itemError ( url : String ) : undefined\",\"t\":[\"url — 所要加载的url\",\"任何使用管理器的加载器都会调用此方法， 当加载器出现加载错误时。\"]},\"2481\":{\"c\":[\"threejs\"]},\"2482\":{\"c\":[\"加载器\"]},\"2483\":{\"h\":\"AnimationAction\"},\"2484\":{\"h\":\"AnimationAction\",\"t\":[\"AnimationActions 用来调度存储在AnimationClips中的动画。\",\"说明: AnimationAction的大多数方法都可以链式调用\"]},\"2485\":{\"c\":[\"threejs\"]},\"2486\":{\"c\":[\"动画\"]},\"2487\":{\"h\":\"AnimationClip\"},\"2488\":{\"h\":\"AnimationClip\",\"t\":[\"动画剪辑（AnimationClip）是一个可重用的关键帧轨道集，它代表动画。\"]},\"2489\":{\"c\":[\"threejs\"]},\"2490\":{\"c\":[\"动画\"]},\"2491\":{\"h\":\"AnimationMixer\"},\"2492\":{\"h\":\"AnimationMixer\",\"t\":[\"动画混合器是用于场景中特定对象的动画的播放器。当场景中的多个对象独立动画时，每个对象都可以使用同一个动画混合器。\"]},\"2493\":{\"c\":[\"threejs\"]},\"2494\":{\"c\":[\"动画\"]},\"2495\":{\"h\":\"光线投射Raycaster\"},\"2496\":{\"h\":\"光线投射 Raycaster\",\"t\":[\"这个类用于进行 raycasting（光线投射）。 光线投射用于进行鼠标拾取（在三维空间中计算出鼠标移过了什么物体）。\"]},\"2497\":{\"c\":[\"threejs\"]},\"2498\":{\"c\":[\"射线检测\"]},\"2499\":{\"h\":\"基本场景\"},\"2500\":{\"c\":[\"threejs\"]},\"2501\":{\"c\":[\"场景\"]},\"2502\":{\"h\":\"时钟\"},\"2503\":{\"c\":[\"threejs\"]},\"2504\":{\"c\":[\"Clock\"]},\"2505\":{\"h\":\"OrbitControls（轨道控制器）\"},\"2506\":{\"c\":[\"threejs\"]},\"2507\":{\"c\":[\"轨道控制器\"]},\"2508\":{\"h\":\"Camera（摄像机）\"},\"2509\":{\"h\":\"构造函数\"},\"2510\":{\"h\":\"Camera()\",\"t\":[\"创建一个新的Camera（摄像机）。注意：这个类并不是被直接调用的；你所想要的或许是一个 PerspectiveCamera（透视摄像机）或者 OrthographicCamera（正交摄像机）。\"]},\"2511\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类Object3D\"]},\"2512\":{\"h\":\".isCamera : Boolean\",\"t\":[\"Read-only标志，用于检查给定对象是否为Camera类型。\"]},\"2513\":{\"h\":\".layers : Layers\",\"t\":[\"摄像机是一个layers的成员. 这是一个从Object3D继承而来的属性。\",\"当摄像机的视点被渲染的时候，物体必须和当前被看到的摄像机共享至少一个层。\"]},\"2514\":{\"h\":\".matrixWorldInverse : Matrix4\",\"t\":[\"这是matrixWorld矩阵的逆矩阵。 MatrixWorld包含了相机的世界变换矩阵。\"]},\"2515\":{\"h\":\".projectionMatrix : Matrix4\",\"t\":[\"这是投影变换矩阵。\"]},\"2516\":{\"h\":\".projectionMatrixInverse : Matrix4\",\"t\":[\"这是投影变换矩阵的逆矩阵。\"]},\"2517\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Object3D。\"]},\"2518\":{\"h\":\".clone ( ) : Camera\",\"t\":[\"返回一个具有和当前相机的属性一样的新的相机。\"]},\"2519\":{\"h\":\".copy ( source : Camera, recursive : Boolean ) : this\",\"t\":[\"将源摄像机的属性复制到新摄像机中。\"]},\"2520\":{\"h\":\".getWorldDirection ( target : Vector3 ) : Vector3\",\"t\":[\"target — 调用该函数的结果将复制给该Vector3对象。\",\"返回一个能够表示当前摄像机所正视的世界空间方向的Vector3对象。 （注意：摄像机俯视时，其Z轴坐标为负。）\"]},\"2521\":{\"c\":[\"threejs\"]},\"2522\":{\"c\":[\"摄像机\"]},\"2523\":{\"h\":\"ArrayCamera（摄像机阵列）\"},\"2524\":{\"h\":\"ArrayCamera\"},\"2525\":{\"c\":[\"threejs\"]},\"2526\":{\"c\":[\"摄像机\"]},\"2527\":{\"h\":\"OrthographicCamera（正交相机）\"},\"2528\":{\"h\":\"PerspectiveCamera\",\"t\":[\"const camera = new THREE.OrthographicCamera( width / - 2, width / 2, height / 2, height / - 2, 1, 1000 ); scene.add( camera );\"]},\"2529\":{\"h\":\"构造器\"},\"2530\":{\"h\":\"OrthographicCamera( left : Number, right : Number, top : Number, bottom : Number, near : Number, far : Number )\",\"t\":[\"left — 摄像机视锥体左侧面。\",\"right — 摄像机视锥体右侧面。\",\"top — 摄像机视锥体上侧面。\",\"bottom — 摄像机视锥体下侧面。\",\"near — 摄像机视锥体近端面。\",\"far — 摄像机视锥体远端面。\",\"这些参数一起定义了摄像机的viewing frustum（视锥体）。\"]},\"2531\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类Camera。\",\"请注意，在大多数属性发生改变之后，你将需要调用.updateProjectionMatrix来使得这些改变生效。\"]},\"2532\":{\"h\":\".bottom : Float\",\"t\":[\"摄像机视锥体下侧面。\"]},\"2533\":{\"h\":\".far : Float\",\"t\":[\"摄像机视锥体远端面，其默认值为2000。\",\"该值必须大于near plane（摄像机视锥体近端面）的值。\"]},\"2534\":{\"h\":\".isOrthographicCamera : Boolean\",\"t\":[\"Read-only标志，用于检查给定对象是否为OrthographicCamera类型。\"]},\"2535\":{\"h\":\".left : Float\",\"t\":[\"摄像机视锥体左侧面。\"]},\"2536\":{\"h\":\".near : Float\",\"t\":[\"摄像机视锥体近端面。其默认值为0.1.\",\"其值的有效范围介于0和far（摄像机视锥体远端面）之间。 请注意，和PerspectiveCamera不同，0对于OrthographicCamera的近端面来说是一个有效值。\"]},\"2537\":{\"h\":\".right : Float\",\"t\":[\"摄像机视锥体右侧面。\"]},\"2538\":{\"h\":\".top : Float\",\"t\":[\"摄像机视锥体上侧面。\"]},\"2539\":{\"h\":\".view : Object\",\"t\":[\"这个值是由setViewOffset来设置的，其默认值为null。\"]},\"2540\":{\"h\":\".zoom : number\",\"t\":[\"获取或者设置摄像机的缩放倍数，其默认值为1。\"]},\"2541\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Camera。\"]},\"2542\":{\"h\":\".setViewOffset ( fullWidth : Float, fullHeight : Float, x : Float, y : Float, width : Float, height : Float ) : undefined\",\"t\":[\"fullWidth — 多视图的全宽设置\",\"fullHeight — 多视图的全高设置\",\"x — 副摄像机的水平偏移\",\"y — 副摄像机的垂直偏移\",\"width — 副摄像机的宽度\",\"height — 副摄像机的高度\",\"在较大的viewing frustum（视锥体）中设置偏移量，对于多窗口或者多显示器的设置是很有用的。 对于如何使用它，请查看PerspectiveCamera中的示例。\"]},\"2543\":{\"h\":\".clearViewOffset () : undefined\",\"t\":[\"清除任何由.setViewOffset设置的偏移量。\"]},\"2544\":{\"h\":\".updateProjectionMatrix () : undefined\",\"t\":[\"更新摄像机投影矩阵。在任何参数被改变以后必须被调用。\"]},\"2545\":{\"h\":\".toJSON (meta : Object) : Object\",\"t\":[\"meta -- 包含有元数据的对象，例如对象后代中的纹理或图像 将摄像机转换为 three.js JSON Object/Scene format（three.js JSON 物体/场景格式）。\"]},\"2546\":{\"c\":[\"threejs\"]},\"2547\":{\"c\":[\"摄像机\"]},\"2548\":{\"h\":\"StereoCamera（立体相机）\"},\"2549\":{\"h\":\"StereoCamera\"},\"2550\":{\"h\":\"构造器\"},\"2551\":{\"h\":\"StereoCamera()\"},\"2552\":{\"h\":\"属性\"},\"2553\":{\"h\":\".aspect : Float\",\"t\":[\"默认值是1.\"]},\"2554\":{\"h\":\".eyeSep : Float\",\"t\":[\"默认值是0.064.\"]},\"2555\":{\"h\":\".cameraL : PerspectiveCamera\",\"t\":[\"左摄像机，它被加入到了layer 1中 —— 需要被左摄像机渲染的物体也应当要加入到这一层中。\"]},\"2556\":{\"h\":\".cameraR : PerspectiveCamera\",\"t\":[\"右摄像机，它被加入到了layer 2中 —— 需要被右摄像机渲染的物体也应当要加入到这一层中。\"]},\"2557\":{\"h\":\"方法\"},\"2558\":{\"h\":\".update ( camera : PerspectiveCamera ) : undefined\",\"t\":[\"基于摄像机通过场景，更新立体摄像机。\"]},\"2559\":{\"c\":[\"threejs\"]},\"2560\":{\"c\":[\"摄像机\"]},\"2561\":{\"h\":\"CubeCamera（立方相机）\"},\"2562\":{\"h\":\"CubeCamera\",\"t\":[\"// Create cube render target const cubeRenderTarget = new THREE.WebGLCubeRenderTarget( 128, { generateMipmaps: true, minFilter: THREE.LinearMipmapLinearFilter } ); // Create cube camera const cubeCamera = new THREE.CubeCamera( 1, 100000, cubeRenderTarget ); scene.add( cubeCamera ); // Create car const chromeMaterial = new THREE.MeshLambertMaterial( { color: 0xffffff, envMap: cubeRenderTarget.texture } ); const car = new THREE.Mesh( carGeometry, chromeMaterial ); scene.add( car ); // Update the render target cube car.visible = false; cubeCamera.position.copy( car.position ); cubeCamera.update( renderer, scene ); // Render the scene car.visible = true; renderer.render( scene, camera );\"]},\"2563\":{\"c\":[\"threejs\"]},\"2564\":{\"c\":[\"摄像机\"]},\"2565\":{\"h\":\"PerspectiveCamera（透视相机）\"},\"2566\":{\"h\":\"PerspectiveCamera\",\"t\":[\"const camera = new THREE.PerspectiveCamera( 45, width / height, 1, 1000 ); scene.add( camera );\"]},\"2567\":{\"h\":\"构造器\"},\"2568\":{\"h\":\"PerspectiveCamera( fov : Number, aspect : Number, near : Number, far : Number )\",\"t\":[\"fov — 摄像机视锥体垂直视野角度\",\"aspect — 摄像机视锥体长宽比\",\"near — 摄像机视锥体近端面\",\"far — 摄像机视锥体远端面\",\"这些参数一起定义了摄像机的viewing frustum（视锥体）。\"]},\"2569\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类 Camera 。 请注意，在大多数属性发生改变之后，你将需要调用.updateProjectionMatrix来使得这些改变生效。\"]},\"2570\":{\"h\":\".aspect : Float\",\"t\":[\"摄像机视锥体的长宽比，通常是使用画布的宽/画布的高。默认值是1（正方形画布）。\"]},\"2571\":{\"h\":\".far : Float\",\"t\":[\"摄像机的远端面，默认值是2000。\",\"该值必须大于near plane（摄像机视锥体近端面）的值。\"]},\"2572\":{\"h\":\".filmGauge : Float\",\"t\":[\"胶片尺寸，其默认值为35（毫米）。 这个参数不会影响摄像机的投影矩阵，除非.filmOffset被设置为了一个非零的值。\"]},\"2573\":{\"h\":\".filmOffset : Float\",\"t\":[\"水平偏离中心偏移量，和.filmGauge单位相同。默认值为0。\"]},\"2574\":{\"h\":\".focus : Float\",\"t\":[\"用于立体视觉和景深效果的物体的距离。 这个参数不会影响摄像机的投影矩阵，除非使用了StereoCamera。 默认值是10。\"]},\"2575\":{\"h\":\".fov : Float\",\"t\":[\"摄像机视锥体垂直视野角度，从视图的底部到顶部，以角度来表示。默认值是50。\"]},\"2576\":{\"h\":\".isPerspectiveCamera : Boolean\",\"t\":[\"Read-only标志，用于检查给定对象是否为PerspectiveCamera类型。\"]},\"2577\":{\"h\":\".near : Float\",\"t\":[\"摄像机的近端面，默认值是0.1。\",\"其有效值范围是0到当前摄像机far plane（远端面）的值之间。 请注意，和OrthographicCamera不同，0对于PerspectiveCamera的近端面来说不是一个有效值。\"]},\"2578\":{\"h\":\".view : Object\",\"t\":[\"Frustum window specification or null. 这个值使用.setViewOffset方法来进行设置，使用.clearViewOffset方法来进行清除。\"]},\"2579\":{\"h\":\".zoom : number\",\"t\":[\"获取或者设置摄像机的缩放倍数，其默认值为1。\"]},\"2580\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Camera。\"]},\"2581\":{\"h\":\".clearViewOffset () : undefined\",\"t\":[\"清除任何由.setViewOffset设置的偏移量。\"]},\"2582\":{\"h\":\".getEffectiveFOV () : Float\",\"t\":[\"结合.zoom（缩放倍数），以角度返回当前垂直视野角度。\"]},\"2583\":{\"h\":\".getFilmHeight () : Float\",\"t\":[\"返回当前胶片上图像的高，如果.aspect小于或等于1（肖像格式、纵向构图），则结果等于.filmGauge。\"]},\"2584\":{\"h\":\".getFilmWidth () : Float\",\"t\":[\"返回当前胶片上图像的宽，如果.aspect大于或等于1（景观格式、横向构图），则结果等于.filmGauge。\"]},\"2585\":{\"h\":\".getFocalLength () : Float\",\"t\":[\"返回当前.fov（视野角度）相对于.filmGauge（胶片尺寸）的焦距。\"]},\"2586\":{\"h\":\".setFocalLength ( focalLength : Float ) : undefined\",\"t\":[\"通过相对于当前.filmGauge的焦距，设置FOV。\",\"默认情况下，焦距是为35mm（全画幅）摄像机而指定的。\"]},\"2587\":{\"h\":\".setViewOffset ( fullWidth : Float, fullHeight : Float, x : Float, y : Float, width : Float, height : Float ) : undefined\",\"t\":[\"fullWidth — 多视图的全宽设置\",\"fullHeight — 多视图的全高设置\",\"x — 副摄像机的水平偏移\",\"y — 副摄像机的垂直偏移\",\"width — 副摄像机的宽度\",\"height — 副摄像机的高度\"]},\"2588\":{\"h\":\".updateProjectionMatrix () : undefined\",\"t\":[\"更新摄像机投影矩阵。在任何参数被改变以后必须被调用。\"]},\"2589\":{\"h\":\".toJSON (meta : Object) : Object\",\"t\":[\"meta -- 包含有元数据的对象，例如对象后代中的纹理或图像 将摄像机转换为 three.js JSON Object/Scene format（three.js JSON 物体/场景格式）。\"]},\"2590\":{\"c\":[\"threejs\"]},\"2591\":{\"c\":[\"摄像机\"]},\"2592\":{\"h\":\"MeshLambertMaterial(Lambert网格材质)\"},\"2593\":{\"h\":\"MeshLambertMaterial\",\"t\":[\"一种非光泽表面的材质，没有镜面高光。\",\"该材质使用基于非物理的Lambertian模型来计算反射率。 这可以很好地模拟一些表面（例如未经处理的木材或石材），但不能模拟具有镜面高光的光泽表面（例如涂漆木材）。\",\"由于反射率和光照模型的简单性，MeshPhongMaterial，MeshStandardMaterial或者MeshPhysicalMaterial 上使用这种材质时会以一些图形精度为代价，得到更高的性能。\"]},\"2594\":{\"c\":[\"threejs\"]},\"2595\":{\"c\":[\"材质\"]},\"2596\":{\"h\":\"MeshDistanceMaterial\"},\"2597\":{\"h\":\"MeshDistanceMaterial\",\"t\":[\"MeshDistanceMaterial 在内部用于使用PointLight来实现阴影映射。 也可以用于通过将MeshDistanceMaterial实例指定给Object3D.customDistanceMaterial，来自定义物体阴影投射。 下列示例演示了这一方法，以确保物体的透明部分不投射阴影。\"]},\"2598\":{\"h\":\"构造器\"},\"2599\":{\"h\":\"parameters : Object\",\"t\":[\"parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)\"]},\"2600\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类Material\"]},\"2601\":{\"h\":\".alphaMap : Texture\",\"t\":[\"alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null。\",\"仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效。\"]},\"2602\":{\"h\":\".displacementMap : Texture\",\"t\":[\"位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象，以及充当真实的几何体。 位移纹理是指：网格的所有顶点被映射为图像中每个像素的值（白色是最高的），并且被重定位。\"]},\"2603\":{\"h\":\".displacementScale : Float\",\"t\":[\"位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为1。\"]},\"2604\":{\"h\":\".displacementBias : Float\",\"t\":[\"位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为0。\"]},\"2605\":{\"h\":\".farDistance : Float\",\"t\":[\"点光源的内部阴影相机的远值。\"]},\"2606\":{\"h\":\".map : Texture\",\"t\":[\"颜色贴图。可以选择包括一个alpha通道，通常与.transparent 或.alphaTest。默认为null。\"]},\"2607\":{\"h\":\".nearDistance : Float\",\"t\":[\"点光源的内部阴影相机的近值。\"]},\"2608\":{\"h\":\".referencePosition : Vector3\",\"t\":[\"光点在世界空间中的位置。\"]},\"2609\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Material\"]},\"2610\":{\"c\":[\"threejs\"]},\"2611\":{\"c\":[\"材质\"]},\"2612\":{\"h\":\"MeshPhongMaterial(Phong网格材质)\"},\"2613\":{\"h\":\"MeshPhongMaterial\",\"t\":[\"一种用于具有镜面高光的光泽表面的材质。\",\"该材质使用非物理的Blinn-Phong模型来计算反射率。 与MeshLambertMaterial中使用的Lambertian模型不同，该材质可以模拟具有镜面高光的光泽表面（例如涂漆木材）。\",\"在MeshStandardMaterial或MeshPhysicalMaterial上使用此材质时，性能通常会更高 ，但会牺牲一些图形精度。\"]},\"2614\":{\"c\":[\"threejs\"]},\"2615\":{\"c\":[\"材质\"]},\"2616\":{\"h\":\"RawShaderMaterial(原始着色器材质)\"},\"2617\":{\"h\":\"RawShaderMaterial\",\"t\":[\"此类的工作方式与ShaderMaterial类似，不同之处在于内置的uniforms和attributes的定义不会自动添加到GLSL shader代码中。\"]},\"2618\":{\"h\":\"构造器\"},\"2619\":{\"h\":\"parameters : Object\",\"t\":[\"parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。 材质的任何属性都可以从此处传入(包括从Material继承的任何属性)。\"]},\"2620\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类Material和ShaderMaterial。\"]},\"2621\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Material和 ShaderMaterial。\"]},\"2622\":{\"c\":[\"threejs\"]},\"2623\":{\"c\":[\"材质\"]},\"2624\":{\"h\":\"LineBasicMaterial(基础线条材质)\"},\"2625\":{\"h\":\"LineBasicMaterial\",\"t\":[\"一种用于绘制线框样式几何体的材质\"]},\"2626\":{\"c\":[\"threejs\"]},\"2627\":{\"c\":[\"材质\"]},\"2628\":{\"h\":\"MeshBasicMaterial(基础网格材质)\"},\"2629\":{\"h\":\"MeshBasicMaterial\",\"t\":[\"一个以简单着色（平面或线框）方式来绘制几何体的材质。这种材质不受光照的影响。\"]},\"2630\":{\"c\":[\"threejs\"]},\"2631\":{\"c\":[\"材质\"]},\"2632\":{\"h\":\"Material(材质)\"},\"2633\":{\"h\":\"Material\",\"t\":[\"材质的抽象基类。\",\"材质描述了对象objects的外观。它们的定义方式与渲染器无关， 因此，如果您决定使用不同的渲染器，不必重写材质。\",\"所有其他材质类型都继承了以下属性和方法（尽管它们可能具有不同的默认值）。\"]},\"2634\":{\"h\":\"构造函数\"},\"2635\":{\"h\":\"Material()\",\"t\":[\"该方法创建一个通用材质。\"]},\"2636\":{\"h\":\"属性\"},\"2637\":{\"h\":\".alphaTest : Float\",\"t\":[\"设置运行alphaTest时要使用的alpha值。如果不透明度低于此值，则不会渲染材质。默认值为0。\"]},\"2638\":{\"h\":\".alphaToCoverage : Boolean\",\"t\":[\"启用alpha to coverage. 只能在开启了MSAA的渲染环境中使用 (当渲染器创建的时候antialias 属性要true才能使用). 默认为 false.\"]},\"2639\":{\"h\":\".blendDst : Integer\",\"t\":[\"混合目标。默认值为OneMinusSrcAlphaFactor。 目标因子所有可能的取值请参阅constants。 必须将材质的blending设置为CustomBlending才能生效。\"]},\"2640\":{\"h\":\".blendDstAlpha : Integer\",\"t\":[\".blendDst的透明度。 默认值为 null.\"]},\"2641\":{\"h\":\".blendEquation : Integer\",\"t\":[\"使用混合时所采用的混合方程式。默认值为AddEquation。 混合方程式所有可能的取值请参阅constants。 必须将材质的blending设置为CustomBlending才能生效。\"]},\"2642\":{\"h\":\".blendEquationAlpha : Integer\",\"t\":[\".blendEquation 的透明度. 默认值为 null.\"]},\"2643\":{\"h\":\".blending : Blending\",\"t\":[\"在使用此材质显示对象时要使用何种混合。 必须将其设置为CustomBlending才能使用自定义blendSrc, blendDst 或者 [page:Constant blendEquation]。 混合模式所有可能的取值请参阅constants。默认值为NormalBlending。\"]},\"2644\":{\"h\":\".blendSrc : Integer\",\"t\":[\"混合源。默认值为SrcAlphaFactor。 源因子所有可能的取值请参阅constants。 必须将材质的blending设置为CustomBlending才能生效。\"]},\"2645\":{\"h\":\".blendSrcAlpha : Integer\",\"t\":[\".blendSrc的透明度。 默认值为 null.\"]},\"2646\":{\"h\":\".clipIntersection : Boolean\",\"t\":[\"更改剪裁平面的行为，以便仅剪切其交叉点，而不是它们的并集。默认值为 false。\"]},\"2647\":{\"h\":\".clippingPlanes : Array\",\"t\":[\"用户定义的剪裁平面，在世界空间中指定为THREE.Plane对象。这些平面适用于所有使用此材质的对象。空间中与平面的有符号距离为负的点被剪裁（未渲染）。 这需要WebGLRenderer.localClippingEnabled为true。 示例请参阅WebGL / clipping /intersection。默认值为 null。\"]},\"2648\":{\"h\":\".clipShadows : Boolean\",\"t\":[\"定义是否根据此材质上指定的剪裁平面剪切阴影。默认值为 false。\"]},\"2649\":{\"h\":\".colorWrite : Boolean\",\"t\":[\"是否渲染材质的颜色。 这可以与网格的renderOrder属性结合使用，以创建遮挡其他对象的不可见对象。默认值为true。\"]},\"2650\":{\"h\":\".defines : Object\",\"t\":[\"注入shader的自定义对象。 以键值对形式的对象传递，{ MY_CUSTOM_DEFINE: '' , PI2: Math.PI * 2 }。 这些键值对在顶点和片元着色器中定义。默认值为undefined。\"]},\"2651\":{\"h\":\".depthFunc : Integer\",\"t\":[\"使用何种深度函数。默认为LessEqualDepth。 深度模式所有可能的取值请查阅constants。\"]},\"2652\":{\"h\":\".depthTest : Boolean\",\"t\":[\"是否在渲染此材质时启用深度测试。默认为 true。\"]},\"2653\":{\"h\":\".depthWrite : Boolean\",\"t\":[\"渲染此材质是否对深度缓冲区有任何影响。默认为true。\",\"在绘制2D叠加时，将多个事物分层在一起而不创建z-index时，禁用深度写入会很有用。\"]},\"2654\":{\"h\":\".forceSinglePass : Boolean\",\"t\":[\"双面透明对象是否应该用单次传递渲染。默认为false。\"]},\"2655\":{\"h\":\".isMaterial : Boolean\",\"t\":[\"检查这个对象是否为材质Material的只读标记.\"]},\"2656\":{\"h\":\".stencilWrite : Boolean\",\"t\":[\"是否对模板缓冲执行模板操作，如果执行写入或者与模板缓冲进行比较，这个值需要设置为true。默认为false。\"]},\"2657\":{\"h\":\".stencilWriteMask : Integer\",\"t\":[\"写入模板缓冲区时所用的位元遮罩，默认为0xFF。\"]},\"2658\":{\"h\":\".stencilFunc : Integer\",\"t\":[\"使用模板比较时所用的方法，默认为AlwaysStencilFunc。在模板函数 constants 中查看可用的值\"]},\"2659\":{\"h\":\".stencilRef : Integer\",\"t\":[\"在进行模板比较或者模板操作的时候所用的基准值，默认为0。\"]},\"2660\":{\"h\":\".stencilFuncMask : Integer\",\"t\":[\"与模板缓冲进行比较时所使用的位元遮罩，默认为0xFF\"]},\"2661\":{\"h\":\".stencilFail : Integer\",\"t\":[\"当比较函数没有通过的时候要执行的模板操作，默认为KeepStencilOp，在模板操作 constants 查看可用值。\"]},\"2662\":{\"h\":\".stencilZFail : Integer\",\"t\":[\"当比较函数通过了但是深度检测没有通过的时候要执行的模板操作， 默认为KeepStencilOp，在模板操作 constants 查看可用值。\"]},\"2663\":{\"h\":\".stencilZPass : Integer\",\"t\":[\"当比较函数和深度检测都通过时要执行的模板操作，默认为KeepStencilOp，在模板操作constants 中查看可用值。\"]},\"2664\":{\"h\":\".id : Integer\",\"t\":[\"此材质实例的唯一编号。\"]},\"2665\":{\"h\":\".name : String\",\"t\":[\"对象的可选名称（不必是唯一的）。默认值为空字符串。\"]},\"2666\":{\"h\":\".needsUpdate : Boolean\",\"t\":[\"指定需要重新编译材质。\"]},\"2667\":{\"h\":\".opacity : Float\",\"t\":[\"在0.0 - 1.0的范围内的浮点数，表明材质的透明度。值0.0表示完全透明，1.0表示完全不透明。 如果材质的transparent属性未设置为true，则材质将保持完全不透明，此值仅影响其颜色。 默认值为1.0。\"]},\"2668\":{\"h\":\".polygonOffset : Boolean\",\"t\":[\"是否使用多边形偏移。默认值为false。这对应于WebGL的GL_POLYGON_OFFSET_FILL功能。\"]},\"2669\":{\"h\":\".polygonOffsetFactor : Integer\",\"t\":[\"设置多边形偏移系数。默认值为0。\"]},\"2670\":{\"h\":\".polygonOffsetUnits : Integer\",\"t\":[\"设置多边形偏移单位。默认值为0。\"]},\"2671\":{\"h\":\".precision : String\",\"t\":[\"重写此材质渲染器的默认精度。可以是\\\"highp\\\", \\\"mediump\\\" 或 \\\"lowp\\\"。默认值为null。\"]},\"2672\":{\"h\":\".premultipliedAlpha : Boolean\",\"t\":[\"是否预乘alpha（透明度）值。有关差异的示例，请参阅WebGL / Materials / Physical / Transmission。 默认值为false。\"]},\"2673\":{\"h\":\".dithering : Boolean\",\"t\":[\"是否对颜色应用抖动以消除条带的外观。默认值为 false。\"]},\"2674\":{\"h\":\".shadowSide : Integer\",\"t\":[\"定义投影的面。设置时，可以是THREE.FrontSide, THREE.BackSide, 或Materials。默认值为 null。 如果为null， 则面投射阴影确定如下：\",\"THREE.FrontSide 背面\",\"THREE.BackSide 前面\",\"THREE.DoubleSide 双面\"]},\"2675\":{\"h\":\".side : Integer\",\"t\":[\"定义将要渲染哪一面 - 正面，背面或两者。 默认为THREE.FrontSide。其他选项有THREE.BackSide 和 THREE.DoubleSide。\"]},\"2676\":{\"h\":\".toneMapped : Boolean\",\"t\":[\"定义这个材质是否会被渲染器的toneMapping设置所影响，默认为 true 。\"]},\"2677\":{\"h\":\".transparent : Boolean\",\"t\":[\"定义此材质是否透明。这对渲染有影响，因为透明对象需要特殊处理，并在非透明对象之后渲染。 设置为true时，通过设置材质的opacity属性来控制材质透明的程度。 默认值为false。\"]},\"2678\":{\"h\":\".type : String\",\"t\":[\"值是字符串'Material'。不应该被更改，并且可以用于在场景中查找此类型的所有对象。\"]},\"2679\":{\"h\":\".uuid : String\",\"t\":[\"此材质实例的UUID，会自动分配，不应该被更改。\"]},\"2680\":{\"h\":\".version : Integer\",\"t\":[\"开始为0，会记录 .needsUpdate : Boolean设置为true的次数。\"]},\"2681\":{\"h\":\".vertexColors : Boolean\",\"t\":[\"是否使用顶点着色。默认值为false。\"]},\"2682\":{\"h\":\".visible : Boolean\",\"t\":[\"此材质是否可见。默认为true。\"]},\"2683\":{\"h\":\".userData : Object\",\"t\":[\"一个对象，可用于存储有关Material的自定义数据。它不应该包含对函数的引用，因为这些函数不会被克隆。\"]},\"2684\":{\"h\":\"方法\"},\"2685\":{\"h\":\".clone ( ) : Material\",\"t\":[\"返回与此材质具有相同参数的新材质。\"]},\"2686\":{\"h\":\".copy ( material : material ) : this\",\"t\":[\"将被传入材质中的参数复制到此材质中。\"]},\"2687\":{\"h\":\".dispose () : undefined\",\"t\":[\"处理材质。材质的纹理不会被处理。需要通过Texture处理。\"]},\"2688\":{\"h\":\".onBeforeCompile ( shader : Shader, renderer : WebGLRenderer ) : undefined\",\"t\":[\"在编译shader程序之前立即执行的可选回调。此函数使用shader源码作为参数。用于修改内置材质。\",\"和其他属性不一样的是，这个回调在.clone()，.copy() 和 .toJSON() 中不支持。\"]},\"2689\":{\"h\":\".customProgramCacheKey () : String\",\"t\":[\"当用到onBeforeCompile回调的时候，这个回调函数可以用来定义在onBeforeCompile中使用的配置项，这样three.js就可以根据这个回调返回的字符串来判定使用一个缓存的编译好的着色器代码还是根据需求重新编译一个新的着色器代码。\"]},\"2690\":{\"h\":\".setValues ( values : Object ) : undefined\",\"t\":[\"values -- 具有参数的容器。 根据values设置属性。\"]},\"2691\":{\"h\":\".toJSON ( meta : Object ) : Object\",\"t\":[\"meta -- 包含有元数据的对象，例如该对象的纹理或图片。 将material对象转换为 three.js JSON Object/Scene format（three.js JSON 物体/场景格式）。\"]},\"2692\":{\"c\":[\"threejs\"]},\"2693\":{\"c\":[\"材质\"]},\"2694\":{\"h\":\"MeshMatcapMaterial(材质捕捉纹理材质)\"},\"2695\":{\"h\":\"MeshMatcapMaterial\",\"t\":[\"MeshMatcapMaterial 由一个材质捕捉（MatCap，或光照球（Lit Sphere））纹理所定义，其编码了材质的颜色与明暗。\",\"由于mapcap图像文件编码了烘焙过的光照，因此MeshMatcapMaterial 不对灯光作出反应。 它将会投射阴影到一个接受阴影的物体上(and shadow clipping works)，但不会产生自身阴影或是接受阴影。\"]},\"2696\":{\"h\":\"构造器\"},\"2697\":{\"h\":\"parameters : Object\",\"t\":[\"parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)\",\"属性color例外，其可以作为十六进制字符串传递，默认情况下为 0xffffff（白色），内部调用Color.set(color)。\"]},\"2698\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类Material\"]},\"2699\":{\"h\":\".alphaMap : Texture\",\"t\":[\"alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null。\",\"仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效。\"]},\"2700\":{\"h\":\".bumpMap : Texture\",\"t\":[\"用于创建凹凸贴图的纹理。黑色和白色值映射到与光照相关的感知深度。凹凸实际上不会影响对象的几何形状，只影响光照。如果定义了法线贴图，则将忽略该贴图。\"]},\"2701\":{\"h\":\".bumpScale : Float\",\"t\":[\"凹凸贴图会对材质产生多大影响。典型范围是0-1。默认值为1。\"]},\"2702\":{\"h\":\".color : Color\",\"t\":[\"材质的颜色(Color)，默认值为白色 (0xffffff)。\"]},\"2703\":{\"h\":\".displacementMap : Texture\",\"t\":[\"位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象， 以及充当真实的几何体。位移纹理是指：网格的所有顶点被映射为图像中每个像素的值（白色是最高的），并且被重定位。\"]},\"2704\":{\"h\":\".displacementScale : Float\",\"t\":[\"位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为1。\"]},\"2705\":{\"h\":\".displacementBias : Float\",\"t\":[\"位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为0。\"]},\"2706\":{\"h\":\".flatShading : Boolean\",\"t\":[\"定义材质是否使用平面着色进行渲染。默认值为false。\"]},\"2707\":{\"h\":\".fog : Boolean\",\"t\":[\"材质是否受雾影响。默认为true。\"]},\"2708\":{\"h\":\".map : Texture\",\"t\":[\"颜色贴图。可以选择包括一个alpha通道，通常与.transparent 或.alphaTest。默认为null。 纹理贴图颜色由漫反射颜色.color调节。\"]},\"2709\":{\"h\":\".matcap : Texture\",\"t\":[\"matcap贴图，默认为null。\"]},\"2710\":{\"h\":\".normalMap : Texture\",\"t\":[\"用于创建法线贴图的纹理。RGB值会影响每个像素片段的曲面法线，并更改颜色照亮的方式。法线贴图不会改变曲面的实际形状，只会改变光照。 In case the material has a normal map authored using the left handed convention, the y component of normalScale should be negated to compensate for the different handedness.\"]},\"2711\":{\"h\":\".normalMapType : Integer\",\"t\":[\"法线贴图的类型。\",\"选项为THREE.TangentSpaceNormalMap（默认）和THREE.ObjectSpaceNormalMap。\"]},\"2712\":{\"h\":\".normalScale : Vector2\",\"t\":[\"法线贴图对材质的影响程度。典型范围是0-1。默认值是Vector2设置为（1,1）。\"]},\"2713\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Material\"]},\"2714\":{\"c\":[\"threejs\"]},\"2715\":{\"c\":[\"材质\"]},\"2716\":{\"h\":\"MeshStandardMaterial(标准网格材质)\"},\"2717\":{\"h\":\"MeshStandardMaterial\",\"t\":[\"一种基于物理的标准材质，使用Metallic-Roughness工作流程。\",\"基于物理的渲染（PBR）最近已成为许多3D应用程序的标准，例如Unity， Unreal和 3D Studio Max。\",\"这种方法与旧方法的不同之处在于，不使用近似值来表示光与表面的相互作用，而是使用物理上正确的模型。 我们的想法是，不是在特定照明下调整材质以使其看起来很好，而是可以创建一种材质，能够“正确”地应对所有光照场景。\",\"在实践中，该材质提供了比MeshLambertMaterial 或MeshPhongMaterial 更精确和逼真的结果，代价是计算成本更高。\",\"请注意，为获得最佳效果，您在使用此材质时应始终指定environment map。\"]},\"2718\":{\"c\":[\"threejs\"]},\"2719\":{\"c\":[\"材质\"]},\"2720\":{\"h\":\"MeshNormalMaterial(法线网格材质)\"},\"2721\":{\"h\":\"MeshNormalMaterial\",\"t\":[\"一种把法向量映射到RGB颜色的材质。\"]},\"2722\":{\"c\":[\"threejs\"]},\"2723\":{\"c\":[\"材质\"]},\"2724\":{\"h\":\"MeshDepthMaterial(深度网格材质)\"},\"2725\":{\"h\":\"MeshDepthMaterial\",\"t\":[\"一种按深度绘制几何体的材质。深度基于相机远近平面。白色最近，黑色最远。\"]},\"2726\":{\"c\":[\"threejs\"]},\"2727\":{\"c\":[\"材质\"]},\"2728\":{\"h\":\"PointsMaterial(点材质)\"},\"2729\":{\"h\":\"PointsMaterial\",\"t\":[\"Points使用的默认材质。\"]},\"2730\":{\"c\":[\"threejs\"]},\"2731\":{\"c\":[\"材质\"]},\"2732\":{\"h\":\"SpriteMaterial(点精灵材质)\"},\"2733\":{\"h\":\"SpriteMaterial\",\"t\":[\"一种使用Sprite的材质。\"]},\"2734\":{\"c\":[\"threejs\"]},\"2735\":{\"c\":[\"材质\"]},\"2736\":{\"h\":\"MeshPhysicalMaterial(物理网格材质)\"},\"2737\":{\"h\":\"MeshPhysicalMaterial\",\"t\":[\"MeshStandardMaterial 的扩展，提供了更高级的基于物理的渲染属性：\",\"Clearcoat: 有些类似于车漆，碳纤，被水打湿的表面的材质需要在面上再增加一个透明的，具有一定反光特性的面。而且这个面说不定有一定的起伏与粗糙度。Clearcoat 可以在不需要重新创建一个透明的面的情况下做到类似的效果。\",\"基于物理的透明度:.opacity 属性有一些限制:在透明度比较高的时候，反射也随之减少。使用基于物理的透光性.transmission 属性可以让一些很薄的透明表面，例如玻璃，变得更真实一些。\",\"高级光线反射: 为非金属材质提供了更多更灵活的光线反射。\",\"Sheen: 可用于表示布料和织物材料。\",\"物理网格材质使用了更复杂的着色器功能，所以在每个像素的渲染都要比 three.js 中的其他材质更费性能，大部分的特性是默认关闭的，需要手动开启，每开启一项功能在开启的时候才会更耗性能。请注意，为获得最佳效果，您在使用此材质时应始终指定 environment map。\"]},\"2738\":{\"c\":[\"threejs\"]},\"2739\":{\"c\":[\"材质\"]},\"2740\":{\"h\":\"ShaderMaterial(着色器材质)\"},\"2741\":{\"h\":\"ShaderMaterial\",\"t\":[\"使用自定义 shader 渲染的材质。 shader 是一个用 GLSL 编写的小程序 ，在 GPU 上运行。 您可能需要使用自定义 shader，如果你要：\",\"要实现内置 materials 之外的效果。\",\"将许多对象组合成单个 BufferGeometry 以提高性能。\",\"使用 ShaderMaterial 时需要注意以下注意事项：\",\"ShaderMaterial 只有使用 WebGLRenderer 才可以绘制正常， 因为 vertexShader 和 fragmentShader 属性中 GLSL 代码必须使用 WebGL 来编译并运行在 GPU 中。\",\"从 THREE r72 开始，不再支持在 ShaderMaterial 中直接分配属性。 必须使用 BufferGeometry 实例，使用 BufferAttribute 实例来定义自定义属性。\",\"从 THREE r77 开始，WebGLRenderTarget 或 WebGLCubeRenderTarget 实例不再被用作 uniforms。 必须使用它们的 texture 属性。\",\"内置 attributes 和 uniforms 与代码一起传递到 shaders。 如果您不希望 WebGLProgram 向 shader 代码添加任何内容，则可以使用 RawShaderMaterial 而不是此类。\",\"您可以使用指令#pragma unroll_loop_start，#pragma unroll_loop_end 以便通过 shader 预处理器在 GLSL 中展开 for 循环。 该指令必须放在循环的正上方。循环格式必须与定义的标准相对应。 \",\"循环必须标准化 normalized。\",\"循环变量必须是 i。\"]},\"2742\":{\"h\":\"顶点着色器和片元着色器\",\"t\":[\"您可以为每种材质指定两种不同类型的 shaders：\",\"顶点着色器首先运行; 它接收 attributes， 计算/操纵每个单独顶点的位置，并将其他数据（varyings）传递给片元着色器。\",\"片元（或像素）着色器后运行; 它设置渲染到屏幕的每个单独的“片元”（像素）的颜色。\",\"shader 中有三种类型的变量: uniforms, attributes, 和 varyings:\",\"Uniforms 是所有顶点都具有相同的值的变量。 比如灯光，雾，和阴影贴图就是被储存在 uniforms 中的数据。 uniforms 可以通过顶点着色器和片元着色器来访问。\",\"Attributes 与每个顶点关联的变量。例如，顶点位置，法线和顶点颜色都是存储在 attributes 中的数据。attributes 只 可以在顶点着色器中访问。\",\"Varyings 是从顶点着色器传递到片元着色器的变量。对于每一个片元，每一个 varying 的值将是相邻顶点值的平滑插值。\",\"注意：在 shader 内部，uniforms 和 attributes 就像常量；你只能使用 JavaScript 代码通过缓冲区来修改它们的值。\"]},\"2743\":{\"h\":\"内置 attributes 和 uniforms\",\"t\":[\"WebGLRenderer 默认情况下为 shader 提供了许多 attributes 和 uniforms； 这些变量定义在 shader 程序编译时被自动添加到片元着色器和顶点着色器代码的前面，你不需要自己声明它们。 这些变量的描述请参见 WebGLProgram。\",\"这些 uniforms 或 attributes（例如，那些和照明，雾等相关的）要求属性设置在材质上， 以便 WebGLRenderer 来拷贝合适的值到 GPU 中。 如果你想在自己的 shader 中使用这些功能，请确保设置这些标志。\",\"如果你不希望 WebGLProgram 向你的 shader 代码中添加任何东西， 你可以使用 RawShaderMaterial 而不是这个类。\"]},\"2744\":{\"h\":\"自定义 attributes 和 uniforms\",\"t\":[\"自定义 attributes 和 uniforms 必须在 GLSL 着色器代码中声明（在 vertexShader 和/或 fragmentShader 中)。 自定义 uniforms 必须定义为 ShaderMaterial 的 uniforms 属性， 而任何自定义 attributes 必须通过 BufferAttribute 实例来定义。 注意 varyings 只需要在 shader 代码中声明（而不必在材质中）。\",\"要声明一个自定义属性，更多细节请参考 BufferGeometry 页面， 以及 BufferAttribute 页面关于 BufferAttribute 接口。\",\"当创建 attributes 时，您创建的用来保存属性数据的每个类型化数组（typed array）必须是您的数据类型大小的倍数。 比如，如果你的属性是一个 THREE.Vector3 类型，并且在你的缓存几何模型 BufferGeometry 中有 3000 个顶点， 那么你的类型化数组的长度必须是 3000 * 3，或者 9000（一个顶点一个值）。每个数据类型的尺寸如下表所示：\",\"GLSL 类型\",\"JavaScript 类型\",\"尺寸\",\"float\",\"Number\",\"1\",\"vec2\",\"THREE.Vector2\",\"2\",\"vec3\",\"THREE.Vector3\",\"3\",\"vec3\",\"THREE.Color 3\",\"3\",\"vec4\",\"THREE.Vector4\",\"4\",\"请注意，属性缓冲区 不会 在其值更改时自动刷新。要更新自定义属性， 需要在模型的 BufferAttribute 中设置 needsUpdate 为 true。\",\"要声明一个自定义的 Uniform，使用 uniforms 属性：\",\"uniforms: { time: { value: 1.0 }, resolution: { value: new THREE.Vector2() } }\",\"在 Object3D.onBeforeRender 中，建议根据 object 和 camera 来更新自定义 Uniform 的值。 因为 Material 可以被 meshes，Scene 的 matrixWorld 以及 Camera 共享， 会在 WebGLRenderer.render 中更新，并会对拥有私有 cameras 的 scene 的渲染造成影响。\"]},\"2745\":{\"h\":\"构造器\"},\"2746\":{\"h\":\"parameters : Object\",\"t\":[\"parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。 材质的任何属性都可以从此处传入(包括从 Material 继承的任何属性)。\"]},\"2747\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类 Material。\"]},\"2748\":{\"h\":\".clipping : Boolean\",\"t\":[\"定义此材质是否支持剪裁; 如果渲染器传递clippingPlanes uniform，则为true。默认值为false。\"]},\"2749\":{\"h\":\".defaultAttributeValues : Object\",\"t\":[\"当渲染的几何体不包含这些属性但材质包含这些属性时，这些默认值将传递给shaders。这可以避免在缓冲区数据丢失时出错。\",\"this.defaultAttributeValues = { 'color': [ 1, 1, 1 ], 'uv': [ 0, 0 ], 'uv2': [ 0, 0 ] };\"]},\"2750\":{\"h\":\".defines : Object\",\"t\":[\"使用 #define 指令在GLSL代码为顶点着色器和片段着色器定义自定义常量；每个键/值对产生一行定义语句：\",\"defines: { FOO: 15, BAR: true }\",\"这将在GLSL代码中产生如下定义语句：\",\"#define FOO 15 #define BAR true\"]},\"2751\":{\"h\":\".extensions : Object\",\"t\":[\"一个有如下属性的对象：\",\"this.extensions = { derivatives: false, // set to use derivatives fragDepth: false, // set to use fragment depth values drawBuffers: false, // set to use draw buffers shaderTextureLOD: false // set to use shader texture LOD };\"]},\"2752\":{\"h\":\".fog : Boolean\",\"t\":[\"定义材质颜色是否受全局雾设置的影响; 如果将fog uniforms传递给shader，则为true。默认值为false。\"]},\"2753\":{\"h\":\".fragmentShader : String\",\"t\":[\"片元着色器的GLSL代码。这是shader程序的实际代码。在上面的例子中， vertexShader 和 fragmentShader 代码是从DOM（HTML文档）中获取的； 它也可以作为一个字符串直接传递或者通过AJAX加载。\"]},\"2754\":{\"h\":\".glslVersion : String\",\"t\":[\"Defines the GLSL version of custom shader code. Only relevant for WebGL 2 in order to define whether to specify GLSL 3.0 or not. Valid values are THREE.GLSL1 or THREE.GLSL3. Default is null.\"]},\"2755\":{\"h\":\".index0AttributeName : String\",\"t\":[\"如果设置，则调用gl.bindAttribLocation 将通用顶点索引绑定到属性变量。默认值未定义。\"]},\"2756\":{\"h\":\".isShaderMaterial : Boolean\",\"t\":[\"Read-only flag to check if a given object is of type ShaderMaterial.\"]},\"2757\":{\"h\":\".lights : Boolean\",\"t\":[\"材质是否受到光照的影响。默认值为 false。如果传递与光照相关的uniform数据到这个材质，则为true。默认是false。\"]},\"2758\":{\"h\":\".linewidth : Float\",\"t\":[\"控制线框宽度。默认值为1。\",\"由于OpenGL Core Profile与大多数平台上WebGL渲染器的限制，无论如何设置该值，线宽始终为1。\"]},\"2759\":{\"h\":\".flatShading : Boolean\",\"t\":[\"定义材质是否使用平面着色进行渲染。默认值为false。\"]},\"2760\":{\"h\":\".uniforms : Object\",\"t\":[\"如下形式的对象：\",\"{ \\\"uniform1\\\": { value: 1.0 }, \\\"uniform2\\\": { value: 2 } }\",\"指定要传递给shader代码的uniforms；键为uniform的名称，值(value)是如下形式：\",\"{ value: 1.0 }\",\"这里 value 是uniform的值。名称必须匹配 uniform 的name，和GLSL代码中的定义一样。 注意，uniforms逐帧被刷新，所以更新uniform值将立即更新GLSL代码中的相应值。\"]},\"2761\":{\"h\":\".uniformsNeedUpdate : Boolean\",\"t\":[\"Can be used to force a uniform update while changing uniforms in Object3D.onBeforeRender(). Default is false.\"]},\"2762\":{\"h\":\".vertexColors : Boolean\",\"t\":[\"定义是否使用顶点着色。默认为false。\"]},\"2763\":{\"h\":\".vertexShader : String\",\"t\":[\"顶点着色器的GLSL代码。这是shader程序的实际代码。 在上面的例子中，vertexShader 和 fragmentShader 代码是从DOM（HTML文档）中获取的； 它也可以作为一个字符串直接传递或者通过AJAX加载。\"]},\"2764\":{\"h\":\".wireframe : Boolean\",\"t\":[\"将几何体渲染为线框(通过GL_LINES而不是GL_TRIANGLES)。默认值为false（即渲染为平面多边形）。\"]},\"2765\":{\"h\":\".wireframeLinewidth : Float\",\"t\":[\"控制线框宽度。默认值为1。\",\"由于OpenGL Core Profile与大多数平台上WebGL渲染器的限制，无论如何设置该值，线宽始终为1。\"]},\"2766\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Material。\"]},\"2767\":{\"h\":\".clone () : ShaderMaterial this : ShaderMaterial\",\"t\":[\"创建该材质的一个浅拷贝。需要注意的是，vertexShader和fragmentShader使用引用拷贝； attributes的定义也是如此; 这意味着，克隆的材质将共享相同的编译WebGLProgram； 但是，uniforms 是 值拷贝，这样对不同的材质我们可以有不同的uniforms变量。\"]},\"2768\":{\"c\":[\"threejs\"]},\"2769\":{\"c\":[\"材质\"]},\"2770\":{\"h\":\"LineDashedMaterial(虚线材质)\"},\"2771\":{\"h\":\"LineDashedMaterial\",\"t\":[\"一种用于绘制虚线样式几何体的材质\"]},\"2772\":{\"c\":[\"threejs\"]},\"2773\":{\"c\":[\"材质\"]},\"2774\":{\"h\":\"ShadowMaterial(阴影材质)\"},\"2775\":{\"h\":\"ShadowMaterial\",\"t\":[\"此材质可以接收阴影，但在其他方面完全透明。\"]},\"2776\":{\"h\":\"构造器\"},\"2777\":{\"h\":\"parameters : Object\",\"t\":[\"parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)\"]},\"2778\":{\"h\":\"属性\",\"t\":[\"共有属性请参见其基类Material\"]},\"2779\":{\"h\":\".color : Color\",\"t\":[\"Color of the material, by default set to black (0x000000).\"]},\"2780\":{\"h\":\".fog : Boolean\",\"t\":[\"材质是否受雾影响。默认为true。\"]},\"2781\":{\"h\":\".transparent : Boolean\",\"t\":[\"定义此材质是否透明。默认值为 true。\"]},\"2782\":{\"h\":\"方法\",\"t\":[\"共有方法请参见其基类Material\"]},\"2783\":{\"c\":[\"threejs\"]},\"2784\":{\"c\":[\"材质\"]},\"2785\":{\"h\":\"WebGLRenderer\"},\"2786\":{\"h\":\"WebGLRenderer\"},\"2787\":{\"h\":\"构造器\"},\"2788\":{\"h\":\"WebGLRenderer( parameters : Object )\",\"t\":[\"parameters - (可选) 该对象的属性定义了渲染器的行为。也可以完全不传参数。在所有情况下，当缺少参数时，它将采用合理的默认值。 以下是合法参数：\",\"canvas - 一个供渲染器绘制其输出的canvas 它和下面的domElement属性对应。 如果没有传这个参数，会创建一个新canvas\",\"context - 可用于将渲染器附加到已有的渲染环境(RenderingContext)中。默认值是null\",\"precision - 着色器精度. 可以是 \\\"highp\\\", \\\"mediump\\\" 或者 \\\"lowp\\\". 如果设备支持，默认为\\\"highp\\\"\",\"alpha - 控制默认的清除alpha值。当设置为true时，值为0。否则就是1。默认为false\",\"premultipliedAlpha - renderer是否假设颜色有 premultiplied alpha. 默认为true\",\"antialias - 是否执行抗锯齿。默认为false.\",\"stencil - 绘图缓存是否有一个至少8位的模板缓存(stencil buffer)。默认为true\",\"preserveDrawingBuffer -是否保留缓直到手动清除或被覆盖。 默认false.\",\"powerPreference - 提示用户代理怎样的配置更适用于当前WebGL环境。 可能是\\\"high-performance\\\", \\\"low-power\\\" 或 \\\"default\\\"。默认是\\\"default\\\". 详见WebGL spec\",\"failIfMajorPerformanceCaveat - 检测渲染器是否会因性能过差而创建失败。默认为false。详见 WebGL spec for details.\",\"depth - 绘图缓存是否有一个至少6位的深度缓存(depth buffer )。 默认是true.\",\"logarithmicDepthBuffer - 是否使用对数深度缓存。如果要在单个场景中处理巨大的比例差异，就有必要使用。\"]},\"2789\":{\"h\":\"属性\"},\"2790\":{\"h\":\".autoClear : Boolean\",\"t\":[\"定义渲染器是否在渲染每一帧之前自动清除其输出。\"]},\"2791\":{\"h\":\".autoClearColor : Boolean\",\"t\":[\"如果autoClear为true, 定义renderer是否清除颜色缓存。 默认是true\"]},\"2792\":{\"h\":\".autoClearDepth : Boolean\",\"t\":[\"如果autoClear是true, 定义renderer是否清除深度缓存。 默认是true\"]},\"2793\":{\"h\":\".autoClearStencil : Boolean\",\"t\":[\"如果autoClear是true, 定义renderer是否清除模板缓存. 默认是true\"]},\"2794\":{\"h\":\".debug : Object\",\"t\":[\"checkShaderErrors: 如果为true，定义是否检查材质着色器程序 编译和链接过程中的错误。 禁用此检查生产以获得性能增益可能很有用。 强烈建议在开发期间保持启用这些检查。 如果着色器没有编译和链接 - 它将无法工作，并且相关材料将不会呈现。 默认是true\"]},\"2795\":{\"h\":\".capabilities : Object\",\"t\":[\"一个包含当前渲染环境(RenderingContext)的功能细节的对象。\",\"floatFragmentTextures: 环境是否支持OES_texture_float扩展\",\"floatVertexTextures: 如果floatFragmentTextures和vertexTextures都是true， 则此值为true\",\"getMaxAnisotropy(): 返回最大可用各向异性。\",\"getMaxPrecision(): 返回顶点着色器和片元着色器的最大可用精度。\",\"isWebGL2: true if the context in use is a WebGL2RenderingContext object.\",\"logarithmicDepthBuffer: 如果logarithmicDepthBuffer在构造器中被设为true且 环境支持EXT_frag_depth扩展，则此值为true\",\"maxAttributes: gl.MAX_VERTEX_ATTRIBS的值\",\"maxCubemapSize: gl.MAX_CUBE_MAP_TEXTURE_SIZE 的值，着色器可使用的立方体贴图纹理的最大宽度*高度\",\"maxFragmentUniforms: gl.MAX_FRAGMENT_UNIFORM_VECTORS的值，片元着色器可使用的全局变量(uniforms)数量\",\"maxSamples: The value of gl.MAX_SAMPLES. Maximum number of samples in context of Multisample anti-aliasing (MSAA).\",\"maxTextureSize: gl.MAX_TEXTURE_SIZE的值，着色器可使用纹理的最大宽度*高度\",\"maxTextures: *gl.MAX_TEXTURE_IMAGE_UNITS的值，着色器可使用的纹理数量\",\"maxVaryings: gl.MAX_VARYING_VECTORS的值，着色器可使用矢量的数量\",\"maxVertexTextures: gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS的值，顶点着色器可使用的纹理数量。\",\"maxVertexUniforms: gl.MAX_VERTEX_UNIFORM_VECTORS的值，顶点着色器可使用的全局变量(uniforms)数量\",\"precision: 渲染器当前使用的着色器的精度\",\"vertexTextures: 如果 .maxVertexTextures : Integer大于0，此值为true (即可以使用顶点纹理)\"]},\"2796\":{\"h\":\".clippingPlanes : Array\",\"t\":[\"用户自定义的剪裁平面，在世界空间中被指定为THREE.Plane对象。 这些平面全局使用。空间中与该平面点积为负的点将被切掉。 默认值是[]\"]},\"2797\":{\"h\":\".domElement : DOMElement\",\"t\":[\"一个canvas，渲染器在其上绘制输出。 渲染器的构造函数会自动创建(如果没有传入canvas参数);你需要做的仅仅是像下面这样将它加页面里去:\",\"document.body.appendChild( renderer.domElement );\"]},\"2798\":{\"h\":\".extensions : Object\",\"t\":[\"get( extensionName : String ): 用于检查是否支持各种扩展，并返回一个对象，其中包含扩展的详细信息。 该方法检查以下扩展： \",\"WEBGL_depth_texture\",\"EXT_texture_filter_anisotropic\",\"WEBGL_compressed_texture_s3tc\",\"WEBGL_compressed_texture_pvrtc\",\"WEBGL_compressed_texture_etc1\"]},\"2799\":{\"h\":\".outputEncoding : number\",\"t\":[\"定义渲染器的输出编码。默认为THREE.LinearEncoding\",\"如果渲染目标已经使用 .setRenderTarget、之后将直接使用renderTarget.texture.encoding\",\"查看texture constants页面以获取其他格式细节\"]},\"2800\":{\"h\":\".info : Object\",\"t\":[\"一个对象，包含有关图形板内存和渲染过程的一系列统计信息。这些信息可用于调试或仅仅满足下好奇心。该对象包含以下字段:\",\"memory: \",\"geometries\",\"textures\",\"render: \",\"calls\",\"triangles\",\"points\",\"lines\",\"frame\",\"programs\",\"默认情况下，这些字段在每次渲染调用时都会重置，但是当每帧有多个渲染通道时（例如，使用后处理时），最好使用自定义模式重置。先将 autoReset 设置为 false.\",\"renderer.info.autoReset = false;\",\"然后在单个帧时渲染完成后调用 reset().\",\"renderer.info.reset();\"]},\"2801\":{\"h\":\".localClippingEnabled : Boolean\",\"t\":[\"定义渲染器是否考虑对象级剪切平面。 默认为false.\"]},\"2802\":{\"h\":\".physicallyCorrectLights : Boolean\",\"t\":[\"是否使用物理上正确的光照模式。 默认是false。 示例：lights / physical\"]},\"2803\":{\"h\":\".properties : Object\",\"t\":[\"渲染器内部使用，以跟踪各种子对象属性。\"]},\"2804\":{\"h\":\".renderLists : WebGLRenderLists\",\"t\":[\"在内部用于处理场景渲染对象的排序。\"]},\"2805\":{\"h\":\".shadowMap : WebGLShadowMap\",\"t\":[\"如果使用，它包含阴影贴图的引用。\",\"enabled: 如果设置开启，允许在场景中使用阴影贴图。默认是 false。\",\"autoUpdate: 启用场景中的阴影自动更新。默认是true 如果不需要动态光照/阴影, 则可以在实例化渲染器时将之设为false\",\"needsUpdate: 当被设为true, 场景中的阴影贴图会在下次render调用时刷新。默认是false 如果你已经禁用了阴影贴图的自动更新(shadowMap.autoUpdate = false), 那么想要在下一次渲染时更新阴影的话就需要将此值设为true\",\"type: 定义阴影贴图类型 (未过滤, 关闭部分过滤, 关闭部分双线性过滤), 可选值有:\",\"THREE.BasicShadowMap\",\"THREE.PCFShadowMap (默认)\",\"THREE.PCFSoftShadowMap\",\"THREE.VSMShadowMap\",\"详见Renderer constants\"]},\"2806\":{\"h\":\".sortObjects : Boolean\",\"t\":[\"定义渲染器是否应对对象进行排序。默认是true.\",\"说明: 排序用于尝试正确渲染出具有一定透明度的对象。根据定义，排序可能不总是有用。根据应用的需求，可能需要关闭排序并使其他方法来处理透明度的渲染，例如， 手动确定每个对象的渲染顺序。\"]},\"2807\":{\"h\":\".state : Object\",\"t\":[\"包含设置WebGLRenderer.context状态的各种属性的函数。\"]},\"2808\":{\"h\":\".toneMapping : Constant\",\"t\":[\"默认是NoToneMapping。查看Renderer constants以获取其它备选项\"]},\"2809\":{\"h\":\".toneMappingExposure : Number\",\"t\":[\"色调映射的曝光级别。默认是1\"]},\"2810\":{\"h\":\".xr : WebXRManager\",\"t\":[\"提供对呈现器的WebXR相关接口的访问\"]},\"2811\":{\"h\":\"方法\"},\"2812\":{\"h\":\".clear ( color : Boolean, depth : Boolean, stencil : Boolean ) : undefined\",\"t\":[\"告诉渲染器清除颜色、深度或模板缓存. 此方法将颜色缓存初始化为当前颜色。参数们默认都是true\"]},\"2813\":{\"h\":\".clearColor ( ) : undefined\",\"t\":[\"清除颜色缓存。 相当于调用.clear( true, false, false )\"]},\"2814\":{\"h\":\".clearDepth ( ) : undefined\",\"t\":[\"清除深度缓存。相当于调用.clear( false, true, false )\"]},\"2815\":{\"h\":\".clearStencil ( ) : undefined\",\"t\":[\"清除模板缓存。相当于调用.clear( false, false, true )\"]},\"2816\":{\"h\":\".compile ( scene : Object3D, camera : Camera ) : undefined\",\"t\":[\"使用相机编译场景中的所有材质。这对于在首次渲染之前预编译着色器很有用。\"]},\"2817\":{\"h\":\".copyFramebufferToTexture ( position : Vector2, texture : FramebufferTexture, level : Number ) : undefined\",\"t\":[\"将当前WebGLFramebuffer中的像素复制到2D纹理中。可访问WebGLRenderingContext.copyTexImage2D.\"]},\"2818\":{\"h\":\".copyTextureToTexture ( position : Vector2, srcTexture : Texture, dstTexture : Texture, level : Number ) : undefined\",\"t\":[\"将纹理的所有像素复制到一个已有的从给定位置开始的纹理中。可访问WebGLRenderingContext.texSubImage2D.\"]},\"2819\":{\"h\":\".dispose ( ) : undefined\",\"t\":[\"处理当前的渲染环境\"]},\"2820\":{\"h\":\".forceContextLoss () : undefined\",\"t\":[\"模拟WebGL环境的丢失。需要支持 WEBGL_lose_context 扩展才能用。\"]},\"2821\":{\"h\":\".forceContextRestore ( ) : undefined\",\"t\":[\"模拟WebGL环境的恢复。需要支持 WEBGL_lose_context 扩展才能用。\"]},\"2822\":{\"h\":\".getClearAlpha () : Float\",\"t\":[\"返回一个表示当前alpha值的float，范围0到1\"]},\"2823\":{\"h\":\".getClearColor ( target : Color ) : Color\",\"t\":[\"返回一个表示当前颜色值的THREE.Color实例\"]},\"2824\":{\"h\":\".getContext () : WebGL2RenderingContext\",\"t\":[\"返回当前WebGL环境\"]},\"2825\":{\"h\":\".getContextAttributes () : WebGLContextAttributes\",\"t\":[\"返回一个对象，这个对象中存有在WebGL环境在创建的时候所设置的属性\"]},\"2826\":{\"h\":\".getActiveCubeFace () : Integer\",\"t\":[\"Returns the current active cube face.\"]},\"2827\":{\"h\":\".getActiveMipmapLevel () : Integer\",\"t\":[\"Returns the current active mipmap level.\"]},\"2828\":{\"h\":\".getRenderTarget () : RenderTarget\",\"t\":[\"如果当前存在RenderTarget，则返回该值；否则返回null。\"]},\"2829\":{\"h\":\".getCurrentViewport () : RenderTarget\",\"t\":[\"返回当前视口\"]},\"2830\":{\"h\":\".getDrawingBufferSize () : Object\",\"t\":[\"返回一个包含渲染器绘图缓存宽度和高度(单位像素)的对象。\"]},\"2831\":{\"h\":\".getPixelRatio () : number\",\"t\":[\"返回当前使用设备像素比\"]},\"2832\":{\"h\":\".getSize ( target : Vector2 ) : Vector2\",\"t\":[\"返回包含渲染器输出canvas的宽度和高度(单位像素)的对象。\"]},\"2833\":{\"h\":\".initTexture ( texture : Texture ) : undefined\",\"t\":[\"初始化给定的纹理。用于预加载纹理而不是等到第一次渲染（可能会由于解码和 GPU 上传的开销而导致明显的延迟）.\"]},\"2834\":{\"h\":\".resetGLState ( ) : undefined\",\"t\":[\"将GL状态重置为默认值。WebGL环境丢失时会内部调用\"]},\"2835\":{\"h\":\".readRenderTargetPixels ( renderTarget : WebGLRenderTarget, x : Float, y : Float, width : Float, height : Float, buffer : TypedArray, activeCubeFaceIndex : Integer ) : undefined\",\"t\":[\"buffer - Uint8Array is the only destination type supported in all cases, other types are renderTarget and platform dependent. See WebGL spec for details.\",\"将renderTarget中的像素数据读取到传入的缓冲区中。这是WebGLRenderingContext.readPixels()的包装器 示例：interactive / cubes / gpu\",\"For reading out a WebGLCubeRenderTarget use the optional parameter activeCubeFaceIndex to determine which face should be read.\"]},\"2836\":{\"h\":\".render ( scene : Object3D, camera : Camera ) : undefined\",\"t\":[\"用相机(camera)渲染一个场景(scene)或是其它类型的object。 渲染一般是在canvas上完成的，或者是renderTarget(如果有指定) 如果forceClear值是true，那么颜色、深度及模板缓存将会在渲染之前清除，即使渲染器的autoClear属性值是false 即便forceClear设为true, 也可以通过将autoClearColor、autoClearStencil或autoClearDepth属性的值设为false来阻止对应缓存被清除。\"]},\"2837\":{\"h\":\".resetState () : undefined\",\"t\":[\"可用于重置内部 WebGL 状态。此方法主要与跨多个 WebGL 库共享单个 WebGL 上下文的应用程序相关。\"]},\"2838\":{\"h\":\".setAnimationLoop ( callback : Function ) : undefined\",\"t\":[\"callback — 每个可用帧都会调用的函数。 如果传入‘null’,所有正在进行的动画都会停止。\",\"可用来代替requestAnimationFrame的内置函数. 对于WebXR项目，必须使用此函数。\"]},\"2839\":{\"h\":\".setClearAlpha ( alpha : Float ) : undefined\",\"t\":[\"设置alpha。合法参数是一个0.0到 1.0之间的浮点数\"]},\"2840\":{\"h\":\".setClearColor ( color : Color, alpha : Float ) : undefined\",\"t\":[\"设置颜色及其透明度\"]},\"2841\":{\"h\":\".setPixelRatio ( value : number ) : undefined\",\"t\":[\"设置设备像素比。通常用于避免HiDPI设备上绘图模糊\"]},\"2842\":{\"h\":\".setRenderTarget ( renderTarget : WebGLRenderTarget, activeCubeFace : Integer, activeMipmapLevel : Integer ) : undefined\",\"t\":[\"renderTarget -- 需要被激活的renderTarget(可选)。若此参数为空，则将canvas设置成活跃render target。 activeCubeFace -- Specifies the active cube side (PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5) of WebGLCubeRenderTarget. When passing a WebGLArrayRenderTarget or WebGL3DRenderTarget this indicates the z layer to render in to (optional). activeMipmapLevel -- Specifies the active mipmap level (optional).\",\"该方法设置活跃rendertarget。\"]},\"2843\":{\"h\":\".setScissor ( x : Integer, y : Integer, width : Integer, height : Integer ) : undefined\",\"t\":[\"将剪裁区域设为(x, y)到(x + width, y + height) Sets the scissor area from\"]},\"2844\":{\"h\":\".setScissorTest ( boolean : Boolean ) : undefined\",\"t\":[\"启用或禁用剪裁检测. 若启用，则只有在所定义的裁剪区域内的像素才会受之后的渲染器影响。\"]},\"2845\":{\"h\":\".setSize ( width : Integer, height : Integer, updateStyle : Boolean ) : undefined\",\"t\":[\"将输出canvas的大小调整为(width, height)并考虑设备像素比，且将视口从(0, 0)开始调整到适合大小 将updateStyle设置为false以阻止对canvas的样式做任何改变。\"]},\"2846\":{\"h\":\".setViewport ( x : Integer, y : Integer, width : Integer, height : Integer ) : undefined\",\"t\":[\"将视口大小设置为(x, y)到 (x + width, y + height).\"]},\"2847\":{\"c\":[\"threejs\"]},\"2848\":{\"c\":[\"渲染器\"]},\"2849\":{\"h\":\"Light\"},\"2850\":{\"h\":\"Light\",\"t\":[\"光源的基类 - 所有其他的光类型都继承了该类描述的属性和方法。\"]},\"2851\":{\"h\":\"构造器\"},\"2852\":{\"h\":\"color : Integer\",\"t\":[\"color - (可选参数) 16进制表示光的颜色。 缺省值 0xffffff (白色)。\"]},\"2853\":{\"h\":\"intensity : Float\",\"t\":[\"intensity - (可选参数) 光照强度。 缺省值 1。\"]},\"2854\":{\"h\":\"属性\",\"t\":[\"公共属性请查看基类Object3D。\"]},\"2855\":{\"h\":\".color : Color\",\"t\":[\"光源的颜色。如果构造的时候没有传递，默认会创建一个新的 Color 并设置为白色。\"]},\"2856\":{\"h\":\".intensity : Float\",\"t\":[\"光照的强度，或者说能量。 在 physically correct 模式下, color 和强度 的乘积被解析为以坎德拉（candela）为单位的发光强度。 默认值 - 1.0\"]},\"2857\":{\"h\":\".isLight : Boolean\",\"t\":[\"只读标志，用于检查给定对象是否为Light类型。\"]},\"2858\":{\"h\":\"Methods\",\"t\":[\"公共方法请查看基类 Object3D。\"]},\"2859\":{\"h\":\".copy ( source : Light ) : this\",\"t\":[\"从source复制 color, intensity 的值到当前光源对象中。\"]},\"2860\":{\"h\":\".toJSON ( meta : Object ) : Object\",\"t\":[\"以JSON格式返回光数据。\",\"meta -- 包含有元数据的对象，例如该对象的材质、纹理或图片。 将该light对象转换为 three.js JSON Object/Scene format（three.js JSON 物体/场景格式）。\"]},\"2861\":{\"c\":[\"threejs\"]},\"2862\":{\"c\":[\"灯光\"]},\"2863\":{\"h\":\"HemisphereLight(半球光)\"},\"2864\":{\"h\":\"HemisphereLight\",\"t\":[\"光源直接放置于场景之上，光照颜色从天空光线颜色渐变到地面光线颜色。\",\"半球光不能投射阴影。\",\"const light = new THREE.HemisphereLight( 0xffffbb, 0x080820, 1 ); scene.add( light );\"]},\"2865\":{\"c\":[\"threejs\"]},\"2866\":{\"c\":[\"灯光\"]},\"2867\":{\"h\":\"DirectionalLight(平行光)\"},\"2868\":{\"h\":\"DirectionalLight\",\"t\":[\"平行光是沿着特定方向发射的光。这种光的表现像是无限远,从它发出的光线都是平行的。常常用平行光来模拟太阳光 的效果; 太阳足够远，因此我们可以认为太阳的位置是无限远，所以我们认为从太阳发出的光线也都是平行的。\",\"const directionalLight = new THREE.DirectionalLight( 0xffffff, 0.5 ); scene.add( directionalLight );\"]},\"2869\":{\"c\":[\"threejs\"]},\"2870\":{\"c\":[\"灯光\"]},\"2871\":{\"h\":\"RectAreaLight(平面光光源)\"},\"2872\":{\"h\":\"RectAreaLight\",\"t\":[\"平面光光源从一个矩形平面上均匀地发射光线。这种光源可以用来模拟像明亮的窗户或者条状灯光光源。\",\"注意事项:\",\"不支持阴影。\",\"只支持 MeshStandardMaterial 和 MeshPhysicalMaterial 两种材质。\",\"你必须在你的场景中加入 RectAreaLightUniformsLib ，并调用init()。\",\"const width = 10; const height = 10; const intensity = 1; const rectLight = new THREE.RectAreaLight( 0xffffff, intensity, width, height ); rectLight.position.set( 5, 5, 0 ); rectLight.lookAt( 0, 0, 0 ); scene.add( rectLight ) rectLightHelper = new RectAreaLightHelper( rectLight ); scene.add( rectLightHelper );\"]},\"2873\":{\"c\":[\"threejs\"]},\"2874\":{\"c\":[\"灯光\"]},\"2875\":{\"h\":\"PointLight(点光源)\"},\"2876\":{\"h\":\"PointLight\",\"t\":[\"从一个点向各个方向发射的光源。一个常见的例子是模拟一个灯泡发出的光。\",\"const light = new THREE.PointLight( 0xff0000, 1, 100 ); light.position.set( 50, 50, 50 ); scene.add( light );\"]},\"2877\":{\"c\":[\"threejs\"]},\"2878\":{\"c\":[\"灯光\"]},\"2879\":{\"h\":\"AmbientLight(环境光)\"},\"2880\":{\"h\":\"AmbientLight\",\"t\":[\"创建一个环境光对象。\",\"const light = new THREE.AmbientLight( 0x404040 ); scene.add( light );\"]},\"2881\":{\"c\":[\"threejs\"]},\"2882\":{\"c\":[\"灯光\"]},\"2883\":{\"h\":\"SpotLight(聚光灯)\"},\"2884\":{\"h\":\"SpotLight\",\"t\":[\"光线从一个点沿一个方向射出，随着光线照射的变远，光线圆锥体的尺寸也逐渐增大。创建一个新的聚光灯。\",\"const spotLight = new THREE.SpotLight( 0xffffff ); spotLight.position.set( 100, 1000, 100 ); spotLight.map = new THREE.TextureLoader().load( url ); spotLight.castShadow = true; spotLight.shadow.mapSize.width = 1024; spotLight.shadow.mapSize.height = 1024; spotLight.shadow.camera.near = 500; spotLight.shadow.camera.far = 4000; spotLight.shadow.camera.fov = 30; scene.add( spotLight );\"]},\"2885\":{\"c\":[\"threejs\"]},\"2886\":{\"c\":[\"灯光\"]},\"2887\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"2888\":{\"h\":\"其他\"},\"2889\":{\"h\":\"几何体\"},\"2890\":{\"h\":\"加载器\"},\"2891\":{\"h\":\"动画\"},\"2892\":{\"h\":\"基础\"},\"2893\":{\"h\":\"控制器\"},\"2894\":{\"h\":\"摄像机\"},\"2895\":{\"h\":\"材质\"},\"2896\":{\"h\":\"渲染器\"},\"2897\":{\"h\":\"灯光\"}},\"dirtCount\":0,\"index\":[[\"聚光灯\",{\"0\":{\"2883\":1}}],[\"聚类分析\",{\"1\":{\"1882\":1}}],[\"太阳足够远\",{\"1\":{\"2868\":1}}],[\"太理论化\",{\"1\":{\"1906\":1}}],[\"半球光不能投射阴影\",{\"1\":{\"2864\":1}}],[\"半球光\",{\"0\":{\"2863\":1}}],[\"灯光\",{\"0\":{\"2897\":1},\"2\":{\"2862\":1,\"2866\":1,\"2870\":1,\"2874\":1,\"2878\":1,\"2882\":1,\"2886\":1}}],[\"公共方法请查看基类\",{\"1\":{\"2858\":1}}],[\"公共属性请查看基类object3d\",{\"1\":{\"2854\":1}}],[\"公有云\",{\"1\":{\"2050\":1}}],[\"色调映射的曝光级别\",{\"1\":{\"2809\":1}}],[\"阴影\",{\"1\":{\"2805\":1}}],[\"阴影材质\",{\"0\":{\"2774\":1}}],[\"绘图缓存是否有一个至少6位的深度缓存\",{\"1\":{\"2788\":1}}],[\"绘图缓存是否有一个至少8位的模板缓存\",{\"1\":{\"2788\":1}}],[\"虚线材质\",{\"0\":{\"2770\":1}}],[\"虚拟中间件服务器\",{\"1\":{\"2049\":1}}],[\"虚拟化\",{\"1\":{\"2047\":1}}],[\"虚拟机风格\",{\"0\":{\"1990\":1}}],[\"虚拟代理\",{\"1\":{\"1794\":1}}],[\"虚拟dom的el属性指向真实dom\",{\"1\":{\"1528\":1}}],[\"虚拟dom转成真实dom\",{\"1\":{\"1528\":1}}],[\"虚拟dom\",{\"1\":{\"1527\":1}}],[\"虚拟\",{\"0\":{\"1528\":1},\"1\":{\"1520\":1}}],[\"虚拟节点会有一个el属性\",{\"1\":{\"1476\":1}}],[\"克隆的材质将共享相同的编译webglprogram\",{\"1\":{\"2767\":1}}],[\"克隆当前的\",{\"1\":{\"2300\":1}}],[\"尺寸\",{\"1\":{\"2744\":1}}],[\"雾等相关的\",{\"1\":{\"2743\":1}}],[\"雾\",{\"1\":{\"2742\":1}}],[\"着色器可使用矢量的数量\",{\"1\":{\"2795\":1}}],[\"着色器可使用的纹理数量\",{\"1\":{\"2795\":1}}],[\"着色器可使用的立方体贴图纹理的最大宽度\",{\"1\":{\"2795\":1}}],[\"着色器可使用纹理的最大宽度\",{\"1\":{\"2795\":1}}],[\"着色器精度\",{\"1\":{\"2788\":1}}],[\"着色器代码中声明\",{\"1\":{\"2744\":1}}],[\"着色器后运行\",{\"1\":{\"2742\":1}}],[\"着色器材质\",{\"0\":{\"2740\":1}}],[\"片元着色器可使用的全局变量\",{\"1\":{\"2795\":1}}],[\"片元着色器的glsl代码\",{\"1\":{\"2753\":1}}],[\"片元\",{\"1\":{\"2742\":2}}],[\"片上系统\",{\"1\":{\"2178\":1,\"2179\":1}}],[\"操纵每个单独顶点的位置\",{\"1\":{\"2742\":1}}],[\"操作更流畅\",{\"1\":{\"1769\":1}}],[\"操作时不会锁死浏览器\",{\"1\":{\"1670\":1}}],[\"操作时才使用它\",{\"1\":{\"1260\":1}}],[\"操作可以渐进执行的而不需每次都扫描整个内存空间\",{\"1\":{\"1650\":1}}],[\"操作一定是异步的\",{\"1\":{\"1201\":1}}],[\"操作模式\",{\"0\":{\"1055\":1}}],[\"操作的对象是系统命令\",{\"1\":{\"1049\":1}}],[\"操作命令\",{\"1\":{\"986\":1}}],[\"操作系统内核架构\",{\"0\":{\"2192\":1}}],[\"操作系统也有自己的\",{\"1\":{\"1684\":1}}],[\"操作系统缓存\",{\"0\":{\"1684\":1}}],[\"操作系统下有效\",{\"1\":{\"1018\":1}}],[\"操作系统的文件属性\",{\"1\":{\"1018\":1}}],[\"操作系统中的快捷方式\",{\"1\":{\"1002\":1}}],[\"操作系统\",{\"0\":{\"2148\":1},\"1\":{\"907\":1}}],[\"操作方法\",{\"0\":{\"700\":1}}],[\"操作数每右移一位\",{\"1\":{\"613\":1}}],[\"操作等\",{\"1\":{\"380\":1}}],[\"操作符除了可以获取对象的结构类型之外\",{\"1\":{\"1365\":1}}],[\"操作符获取\",{\"1\":{\"1365\":1,\"1366\":1}}],[\"操作符用于删除对象的某个属性或者数组元素\",{\"1\":{\"640\":1}}],[\"操作符位于变量的后面\",{\"1\":{\"602\":1}}],[\"操作符位于变量的前面\",{\"1\":{\"602\":1}}],[\"操作符都是二元操作符\",{\"1\":{\"601\":1}}],[\"操作符可以根据他们期待的操作符个数来分类\",{\"1\":{\"601\":1}}],[\"操作符\",{\"0\":{\"600\":1},\"1\":{\"641\":1,\"677\":1,\"1039\":1,\"1366\":1,\"1370\":1,\"1533\":1},\"2\":{\"648\":1}}],[\"操作符的功能类似于\",{\"1\":{\"322\":1,\"644\":1}}],[\"操作符的执行步骤如下\",{\"1\":{\"262\":1}}],[\"操作符来判断变量是否为\",{\"1\":{\"320\":1}}],[\"操作符来捕获剩余项\",{\"1\":{\"252\":1}}],[\"操作\",{\"1\":{\"249\":1,\"374\":1,\"737\":1,\"1199\":2,\"1478\":1,\"1860\":1}}],[\"操作逻辑更像是推送\",{\"1\":{\"118\":1}}],[\"碳纤\",{\"1\":{\"2737\":1}}],[\"您创建的用来保存属性数据的每个类型化数组\",{\"1\":{\"2744\":1}}],[\"您可以为每种材质指定两种不同类型的\",{\"1\":{\"2742\":1}}],[\"您可以使用指令\",{\"1\":{\"2741\":1}}],[\"您可以将文件或目录类型存成文本文件\",{\"1\":{\"1009\":1}}],[\"您可能需要使用自定义\",{\"1\":{\"2741\":1}}],[\"您在使用此材质时应始终指定\",{\"1\":{\"2737\":1}}],[\"您在使用此材质时应始终指定environment\",{\"1\":{\"2717\":1}}],[\"地应对所有光照场景\",{\"1\":{\"2717\":1}}],[\"地址空间增大了2^96倍\",{\"1\":{\"2214\":1}}],[\"地址总线和控制总线\",{\"1\":{\"2184\":1}}],[\"地址比较\",{\"1\":{\"1692\":1}}],[\"地址都是独一无二的\",{\"1\":{\"1692\":1}}],[\"地址发送\",{\"1\":{\"1691\":1}}],[\"地址解析\",{\"0\":{\"1678\":1}}],[\"地址\",{\"0\":{\"41\":1},\"1\":{\"1689\":1,\"1691\":1,\"1692\":2,\"1696\":1}}],[\"凹凸贴图会对材质产生多大影响\",{\"1\":{\"2701\":1}}],[\"凹凸实际上不会影响对象的几何形状\",{\"1\":{\"2700\":1}}],[\"纹理或图片\",{\"1\":{\"2860\":1}}],[\"纹理贴图颜色由漫反射颜色\",{\"1\":{\"2708\":1}}],[\"纹理所定义\",{\"1\":{\"2695\":1}}],[\"纹理压缩等\",{\"1\":{\"2179\":1}}],[\"背面或两者\",{\"1\":{\"2675\":1}}],[\"背面\",{\"1\":{\"2674\":1}}],[\"透明度\",{\"1\":{\"2672\":1}}],[\"透视相机\",{\"0\":{\"2565\":1}}],[\"透视摄像机\",{\"1\":{\"2510\":1}}],[\"点光源\",{\"0\":{\"2875\":1}}],[\"点光源的内部阴影相机的近值\",{\"1\":{\"2607\":1}}],[\"点光源的内部阴影相机的远值\",{\"1\":{\"2605\":1}}],[\"点精灵材质\",{\"0\":{\"2732\":1}}],[\"点材质\",{\"0\":{\"2728\":1}}],[\"点击下面蓝色的take\",{\"1\":{\"437\":1}}],[\"点击页面的按钮后\",{\"1\":{\"437\":1}}],[\"点击\",{\"1\":{\"340\":2,\"436\":1,\"1299\":1,\"1300\":1}}],[\"点击按钮会增加这个数字\",{\"1\":{\"1269\":1}}],[\"点击按钮后触发的方法\",{\"1\":{\"1204\":2}}],[\"点击按钮就会调用sendmsg\",{\"1\":{\"343\":1}}],[\"点击按钮\",{\"1\":{\"338\":1}}],[\"点击按钮时\",{\"1\":{\"240\":1}}],[\"点击实现一个功能\",{\"1\":{\"239\":1}}],[\"材质是否受到光照的影响\",{\"1\":{\"2757\":1}}],[\"材质是否受雾影响\",{\"1\":{\"2707\":1,\"2780\":1}}],[\"材质捕捉纹理材质\",{\"0\":{\"2694\":1}}],[\"材质描述了对象objects的外观\",{\"1\":{\"2633\":1}}],[\"材质的颜色\",{\"1\":{\"2702\":1}}],[\"材质的纹理不会被处理\",{\"1\":{\"2687\":1}}],[\"材质的抽象基类\",{\"1\":{\"2633\":1}}],[\"材质的任何属性都可以从此处传入\",{\"1\":{\"2599\":1,\"2619\":1,\"2697\":1,\"2746\":1,\"2777\":1}}],[\"材质\",{\"0\":{\"2632\":1,\"2895\":1},\"2\":{\"2595\":1,\"2611\":1,\"2615\":1,\"2623\":1,\"2627\":1,\"2631\":1,\"2693\":1,\"2715\":1,\"2719\":1,\"2723\":1,\"2727\":1,\"2731\":1,\"2735\":1,\"2739\":1,\"2769\":1,\"2773\":1,\"2784\":1}}],[\"焦距是为35mm\",{\"1\":{\"2586\":1}}],[\"焦点事件\",{\"1\":{\"233\":1}}],[\"横向构图\",{\"1\":{\"2584\":1}}],[\"景观格式\",{\"1\":{\"2584\":1}}],[\"纵向构图\",{\"1\":{\"2583\":1}}],[\"肖像格式\",{\"1\":{\"2583\":1}}],[\"毫米\",{\"1\":{\"2572\":1}}],[\"毫秒并停止\",{\"1\":{\"342\":1}}],[\"毫秒之后停止\",{\"1\":{\"342\":1}}],[\"毫秒\",{\"1\":{\"334\":1,\"342\":2,\"596\":2}}],[\"胶片尺寸\",{\"1\":{\"2572\":1,\"2585\":1}}],[\"画布的高\",{\"1\":{\"2570\":1}}],[\"画布内容生成\",{\"1\":{\"414\":1}}],[\"副摄像机的高度\",{\"1\":{\"2542\":1,\"2587\":1}}],[\"副摄像机的宽度\",{\"1\":{\"2542\":1,\"2587\":1}}],[\"副摄像机的垂直偏移\",{\"1\":{\"2542\":1,\"2587\":1}}],[\"副摄像机的水平偏移\",{\"1\":{\"2542\":1,\"2587\":1}}],[\"副作用与\",{\"1\":{\"1258\":1}}],[\"摄像机而指定的\",{\"1\":{\"2586\":1}}],[\"摄像机的近端面\",{\"1\":{\"2577\":1}}],[\"摄像机的远端面\",{\"1\":{\"2571\":1}}],[\"摄像机视锥体的长宽比\",{\"1\":{\"2570\":1}}],[\"摄像机视锥体长宽比\",{\"1\":{\"2568\":1}}],[\"摄像机视锥体垂直视野角度\",{\"1\":{\"2568\":1,\"2575\":1}}],[\"摄像机视锥体远端面\",{\"1\":{\"2530\":1,\"2533\":1,\"2536\":1,\"2568\":1}}],[\"摄像机视锥体近端面\",{\"1\":{\"2530\":1,\"2533\":1,\"2536\":1,\"2568\":1,\"2571\":1}}],[\"摄像机视锥体下侧面\",{\"1\":{\"2530\":1,\"2532\":1}}],[\"摄像机视锥体上侧面\",{\"1\":{\"2530\":1,\"2538\":1}}],[\"摄像机视锥体右侧面\",{\"1\":{\"2530\":1,\"2537\":1}}],[\"摄像机视锥体左侧面\",{\"1\":{\"2530\":1,\"2535\":1}}],[\"摄像机阵列\",{\"0\":{\"2523\":1}}],[\"摄像机俯视时\",{\"1\":{\"2520\":1}}],[\"摄像机是一个layers的成员\",{\"1\":{\"2513\":1}}],[\"摄像机\",{\"0\":{\"2508\":1,\"2894\":1},\"1\":{\"2510\":1},\"2\":{\"2522\":1,\"2526\":1,\"2547\":1,\"2560\":1,\"2564\":1,\"2591\":1}}],[\"轨道控制器\",{\"0\":{\"2505\":1},\"2\":{\"2507\":1}}],[\"射线检测\",{\"2\":{\"2498\":1}}],[\"射击游戏的\",{\"1\":{\"829\":1}}],[\"车削缓冲几何体\",{\"0\":{\"2445\":1}}],[\"车间层\",{\"1\":{\"1890\":1}}],[\"立方相机\",{\"0\":{\"2561\":1}}],[\"立方缓冲几何体\",{\"0\":{\"2433\":1}}],[\"立体相机\",{\"0\":{\"2548\":1}}],[\"立即地\",{\"1\":{\"1886\":2}}],[\"立即关机\",{\"1\":{\"920\":1}}],[\"立即执行防抖\",{\"1\":{\"831\":1}}],[\"立即执行\",{\"1\":{\"828\":1}}],[\"立即执行函数作为一个匿名函数\",{\"1\":{\"364\":1}}],[\"立即执行函数就是定义后立刻调用的匿名函数\",{\"1\":{\"364\":1}}],[\"立即执行函数\",{\"0\":{\"364\":1},\"1\":{\"444\":2,\"902\":1,\"903\":2}}],[\"立即输出cug\",{\"1\":{\"595\":1}}],[\"立即得到结果\",{\"1\":{\"555\":1}}],[\"立即调用函数表达式\",{\"1\":{\"465\":1}}],[\"球缓冲几何体\",{\"0\":{\"2429\":1}}],[\"曲线分段数量\",{\"1\":{\"2425\":1,\"2426\":1}}],[\"曲线路径\",{\"0\":{\"2414\":1}}],[\"曲线\",{\"0\":{\"2410\":1}}],[\"曲线上的位置\",{\"1\":{\"2333\":1}}],[\"挤压缓冲几何体\",{\"0\":{\"2406\":1}}],[\"凸包几何体\",{\"0\":{\"2358\":1}}],[\"缩放倍数\",{\"1\":{\"2582\":1}}],[\"缩放几何体\",{\"1\":{\"2317\":1}}],[\"缩进大小\",{\"1\":{\"23\":1,\"66\":1}}],[\"缩进风格\",{\"1\":{\"23\":1,\"66\":1}}],[\"缩进字节数\",{\"1\":{\"20\":1,\"63\":1}}],[\"轴上旋转几何体\",{\"1\":{\"2314\":1,\"2315\":1,\"2316\":1}}],[\"朝向\",{\"1\":{\"2311\":1}}],[\"坐标和自定义缓存属性值\",{\"1\":{\"2277\":1}}],[\"线宽始终为1\",{\"1\":{\"2758\":1,\"2765\":1}}],[\"线或点几何体的有效表述\",{\"1\":{\"2277\":1}}],[\"线程池\",{\"1\":{\"1762\":1}}],[\"线程还在工作\",{\"1\":{\"370\":1}}],[\"撤销事务\",{\"1\":{\"2267\":1}}],[\"撤销上一次操作\",{\"1\":{\"1056\":1}}],[\"差量备份\",{\"1\":{\"2266\":1}}],[\"差异对比\",{\"0\":{\"1632\":1}}],[\"差异如下\",{\"1\":{\"383\":1}}],[\"热备份也称为动态备份\",{\"1\":{\"2265\":1}}],[\"冷备份也称为静态备份\",{\"1\":{\"2265\":1}}],[\"脏\",{\"0\":{\"2262\":1},\"1\":{\"2259\":1,\"2260\":2}}],[\"丢失更新加锁\",{\"0\":{\"2261\":1}}],[\"丢失更新\",{\"1\":{\"2259\":1}}],[\"派生属性\",{\"1\":{\"2250\":1}}],[\"派发更新\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"派发事件\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"派发的异步任务\",{\"1\":{\"383\":1}}],[\"求候选键\",{\"0\":{\"2246\":1}}],[\"求解过程的记录等信息\",{\"1\":{\"1866\":1}}],[\"候选键\",{\"1\":{\"2240\":1}}],[\"候选吗\",{\"1\":{\"2240\":1}}],[\"候根据特征数据分割出来各个数据包\",{\"1\":{\"1730\":1}}],[\"汇聚层\",{\"1\":{\"2220\":1}}],[\"汇编语言\",{\"1\":{\"1969\":1}}],[\"隧道技术包括\",{\"1\":{\"2215\":1}}],[\"隧道技术通过在ipv4网络中部署隧道\",{\"1\":{\"2215\":1}}],[\"隧道技术\",{\"1\":{\"2215\":1}}],[\"站点本地地址\",{\"1\":{\"2214\":1}}],[\"站点根目录\",{\"1\":{\"1153\":1}}],[\"坏两个盘可恢复\",{\"1\":{\"2213\":1}}],[\"坏一个盘可恢复\",{\"1\":{\"2213\":2}}],[\"奇偶校验的独立磁盘\",{\"1\":{\"2213\":1}}],[\"镜像结构\",{\"1\":{\"2213\":1}}],[\"损坏无法恢复\",{\"1\":{\"2213\":1}}],[\"荣誉的形式\",{\"1\":{\"2212\":1}}],[\"租约默认为8天\",{\"1\":{\"2210\":1}}],[\"固定分配\",{\"1\":{\"2210\":1}}],[\"固定长度的散列值\",{\"1\":{\"2108\":1}}],[\"固定长度的原始二进制数据缓冲区\",{\"1\":{\"397\":1}}],[\"隔离性\",{\"1\":{\"2258\":1}}],[\"隔离冲突域功能等\",{\"1\":{\"2207\":1}}],[\"隔离复杂的系统资源\",{\"1\":{\"2025\":1}}],[\"桥接功能\",{\"1\":{\"2207\":1}}],[\"桥接模式\",{\"0\":{\"1820\":1},\"1\":{\"1820\":1},\"2\":{\"1822\":1}}],[\"极大地降低了建网和运维成本\",{\"1\":{\"2205\":1}}],[\"极限编程\",{\"1\":{\"1904\":1}}],[\"化架构\",{\"1\":{\"2205\":1}}],[\"化的组件\",{\"1\":{\"1210\":1}}],[\"化的子组件\",{\"1\":{\"1209\":1}}],[\"环型\",{\"1\":{\"2204\":1}}],[\"环境光\",{\"0\":{\"2879\":1}}],[\"环境支持ext\",{\"1\":{\"2795\":1}}],[\"环境是否支持oes\",{\"1\":{\"2795\":1}}],[\"环境变量配置文件的功能\",{\"0\":{\"1117\":1}}],[\"环境变量配置文件中主要是定义系统操作环境的生效的胸默认变量\",{\"1\":{\"1116\":1}}],[\"环境变量配置文件简介\",{\"0\":{\"1116\":1}}],[\"环境变量配置文件\",{\"0\":{\"1114\":1}}],[\"环境变量是全局变量\",{\"1\":{\"1099\":1}}],[\"环境变量\",{\"0\":{\"1099\":1}}],[\"环境的变更\",{\"0\":{\"1068\":1}}],[\"环境底层就是异步的\",{\"1\":{\"560\":1}}],[\"环境中采用\",{\"1\":{\"465\":1}}],[\"环境中不存在\",{\"1\":{\"390\":1}}],[\"环境\",{\"1\":{\"376\":2,\"1902\":1,\"2011\":1,\"2125\":1}}],[\"环境下\",{\"1\":{\"353\":1}}],[\"城域网\",{\"1\":{\"2203\":1}}],[\"局部映像透明性对异构型和同构异质的分布式数据库系统是非常重要的\",{\"1\":{\"2232\":1}}],[\"局部映像透明性\",{\"1\":{\"2232\":1}}],[\"局部数据模型透明性\",{\"1\":{\"2232\":1}}],[\"局部变量会在堆或栈中存储它们的值\",{\"1\":{\"1645\":1}}],[\"局部变量和全局变量\",{\"1\":{\"1645\":1}}],[\"局域网\",{\"1\":{\"2203\":1}}],[\"吞吐量和时延等不同方面来度量计算及网络的性能\",{\"1\":{\"2200\":1}}],[\"带宽\",{\"1\":{\"2200\":1}}],[\"带来的开销将是无法想象的\",{\"1\":{\"1660\":1}}],[\"带来的小优势都被其自身的开销抵消了\",{\"1\":{\"1269\":1}}],[\"带来不可预知的问题\",{\"1\":{\"507\":1}}],[\"伸缩性\",{\"1\":{\"2193\":1}}],[\"抢占式优先级调度算法\",{\"1\":{\"2190\":1}}],[\"划分\",{\"0\":{\"2188\":1}}],[\"短距离\",{\"1\":{\"2185\":1}}],[\"短轮询>长轮询>长连接\",{\"1\":{\"1737\":1}}],[\"短轮询的基本思路\",{\"1\":{\"1737\":1}}],[\"短轮询和长轮询的目的都是用于实现客户端和服务器端的一个即时通讯\",{\"1\":{\"1737\":1}}],[\"短轮询\",{\"0\":{\"1737\":1}}],[\"满足高效能机器学习和数据处理要求\",{\"1\":{\"2180\":1}}],[\"满足条件的元素会被返回\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"训练和推断\",{\"1\":{\"2180\":1}}],[\"国内外学术界一般倾向将soc定义为微处理器\",{\"1\":{\"2179\":1}}],[\"国家重点科研机构和国防建设等部门\",{\"1\":{\"2111\":1}}],[\"眼睛和手的系统\",{\"1\":{\"2179\":1}}],[\"心脏\",{\"1\":{\"2179\":1}}],[\"狭义角度\",{\"1\":{\"2179\":1}}],[\"追求产品系统最大包容的集成器件\",{\"1\":{\"2179\":1}}],[\"追加文件到已存在的归档中\",{\"1\":{\"1025\":1}}],[\"追加内容到文件\",{\"1\":{\"984\":1}}],[\"游戏机和一些移动设备上做图像和图形相关运算工作的处理器\",{\"1\":{\"2179\":1}}],[\"支撑软件以及应用软件组成\",{\"1\":{\"2176\":1}}],[\"支持网络\",{\"1\":{\"2061\":1}}],[\"支持多种数据格式及其相互转换\",{\"1\":{\"2040\":1}}],[\"支持多种可以广泛使用的传输协议\",{\"1\":{\"2040\":1}}],[\"支持多种的消息传递范型\",{\"1\":{\"2040\":1}}],[\"支持远程调试\",{\"1\":{\"2009\":1}}],[\"支持一个特定领域中多个应用的生成\",{\"1\":{\"1998\":1}}],[\"支持递增设计\",{\"1\":{\"1982\":1}}],[\"支持并行\",{\"1\":{\"1978\":1}}],[\"支持决策\",{\"1\":{\"1865\":1}}],[\"支持过程\",{\"1\":{\"1850\":1}}],[\"支持双向通信\",{\"1\":{\"1736\":1}}],[\"支持二进制储存\",{\"1\":{\"1670\":1}}],[\"支持事务\",{\"1\":{\"1670\":2}}],[\"支持路径模式匹配\",{\"1\":{\"1453\":2}}],[\"支持中间件\",{\"1\":{\"1275\":1}}],[\"支持使用\",{\"1\":{\"1006\":2}}],[\"支持使用通配符\",{\"1\":{\"1006\":1}}],[\"支持向上翻页和向下翻页\",{\"1\":{\"988\":1}}],[\"支持翻页和搜索\",{\"1\":{\"988\":1}}],[\"支持\",{\"1\":{\"473\":1,\"1162\":1,\"1177\":1,\"1186\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1,\"1427\":1,\"2016\":1}}],[\"支持构造函数\",{\"1\":{\"460\":1}}],[\"体积大大减小\",{\"1\":{\"2179\":1}}],[\"体积小\",{\"1\":{\"2176\":1}}],[\"体积和功耗等方面的严格要求\",{\"1\":{\"2176\":1}}],[\"体现为不同的接口或交互模式\",{\"1\":{\"2025\":1}}],[\"嵌入式本地数据库\",{\"1\":{\"2195\":1}}],[\"嵌入式网络数据库主要由三部分组成\",{\"1\":{\"2195\":1}}],[\"嵌入式网络数据库是把功能强大的远程数据库映射到本地数据库\",{\"1\":{\"2195\":1}}],[\"嵌入式网络数据库\",{\"0\":{\"2195\":1}}],[\"嵌入式\",{\"1\":{\"2193\":1}}],[\"嵌入式数据库系统有以下几个主要特点\",{\"1\":{\"2193\":1}}],[\"嵌入式数据库\",{\"0\":{\"2193\":1}}],[\"嵌入式非实时系统\",{\"1\":{\"2189\":1}}],[\"嵌入式实时操作系统调度算法\",{\"0\":{\"2190\":1}}],[\"嵌入式实时操作系统实时性的评价指标\",{\"1\":{\"2189\":1}}],[\"嵌入式实时操作系统兼具嵌入式操作系统的特点和实时操作系统的特点\",{\"1\":{\"2189\":1}}],[\"嵌入式实时操作系统\",{\"0\":{\"2189\":1}}],[\"嵌入式硬件\",{\"0\":{\"2178\":1}}],[\"嵌入式软件设计层面的功耗控制主要可以从以下方面展开\",{\"1\":{\"2177\":1}}],[\"嵌入式软件对安全性和可靠性的要求较高\",{\"1\":{\"2177\":1}}],[\"嵌入式软件对实时性的要求更高\",{\"1\":{\"2177\":1}}],[\"嵌入式软件的开发一般需要专门的开发工具\",{\"1\":{\"2177\":1}}],[\"嵌入式软件的开发与传统的软件开发方法存在比较大的差异\",{\"1\":{\"2177\":1}}],[\"嵌入式软件开发是要充分考虑代码规模\",{\"1\":{\"2177\":1}}],[\"嵌入式软件开发是在宿主机\",{\"1\":{\"2177\":1}}],[\"嵌入式软件开发的结果通常需要固化在目标系统的存储器或处理器内部存储器资源中\",{\"1\":{\"2177\":1}}],[\"嵌入式软件开发时更强调\",{\"1\":{\"2177\":1}}],[\"嵌入式软件开发\",{\"0\":{\"2177\":1}}],[\"嵌入式微处理器体系结构\",{\"0\":{\"2181\":1}}],[\"嵌入式微处理器\",{\"0\":{\"2179\":1},\"1\":{\"2176\":1}}],[\"嵌入式操作系统是一种用途广泛的系统软件\",{\"1\":{\"2187\":1}}],[\"嵌入式操作系统是指用于嵌入式系统的操作系统\",{\"1\":{\"2187\":1}}],[\"嵌入式操作系统的定义及特点\",{\"0\":{\"2187\":1}}],[\"嵌入式操作系统\",{\"0\":{\"2191\":1},\"1\":{\"2176\":1}}],[\"嵌入式系统的发展大致经历了五个阶段\",{\"1\":{\"2178\":1}}],[\"嵌入式系统主要由以下部件组成\",{\"1\":{\"2176\":1}}],[\"嵌入式系统是指嵌入各种设备及应用产品内部的计算机系统\",{\"1\":{\"2176\":1}}],[\"嵌入式系统是以应用为中心\",{\"1\":{\"2176\":1}}],[\"嵌入式系统\",{\"0\":{\"2175\":1}}],[\"嵌套解构\",{\"0\":{\"844\":1}}],[\"嵌套可以是任何层数\",{\"1\":{\"734\":1}}],[\"压力测试和可靠性测试\",{\"1\":{\"2171\":1}}],[\"压缩\",{\"1\":{\"1025\":1,\"1153\":1}}],[\"压缩的归档文件\",{\"1\":{\"1025\":2}}],[\"压缩效率就会愈高\",{\"1\":{\"1021\":1}}],[\"压缩效率\",{\"1\":{\"1021\":1}}],[\"压缩效率是一个介于\",{\"1\":{\"1018\":1,\"1021\":1}}],[\"压缩字尾字符串\",{\"1\":{\"1021\":1}}],[\"压缩时排除符合条件的文件\",{\"1\":{\"1018\":1}}],[\"压缩文件名\",{\"1\":{\"1024\":1}}],[\"压缩文件时\",{\"1\":{\"1018\":2,\"1021\":2}}],[\"压缩文件内不建立目录名称\",{\"1\":{\"1018\":1}}],[\"压缩文件\",{\"1\":{\"1018\":1}}],[\"压缩连续的空行\",{\"1\":{\"983\":1}}],[\"压缩包\",{\"1\":{\"909\":1}}],[\"阿姆达尔解决方案\",{\"0\":{\"2169\":1}}],[\"碎片小\",{\"1\":{\"2160\":1}}],[\"银行家算法\",{\"0\":{\"2157\":1}}],[\"信号处理器\",{\"1\":{\"2179\":1}}],[\"信号量混洗时间\",{\"1\":{\"2189\":1}}],[\"信号量\",{\"1\":{\"2154\":1}}],[\"信息不可篡改\",{\"1\":{\"2132\":1}}],[\"信息不泄露给未授权的用户\",{\"1\":{\"2006\":1}}],[\"信息摘要\",{\"1\":{\"2108\":1}}],[\"信息加解密技术\",{\"0\":{\"2104\":1}}],[\"信息泄露或丢失\",{\"1\":{\"2102\":1}}],[\"信息安全的保障体系\",{\"0\":{\"2110\":1}}],[\"信息安全的范围包括设备安全\",{\"1\":{\"2100\":1}}],[\"信息安全包括5个基本要素\",{\"1\":{\"2100\":1}}],[\"信息安全基础\",{\"0\":{\"2100\":1}}],[\"信息安全\",{\"0\":{\"2099\":1}}],[\"信息技术\",{\"1\":{\"1877\":1}}],[\"信息技术层面上对\",{\"1\":{\"1874\":1}}],[\"信息工程法\",{\"1\":{\"1876\":1}}],[\"信息孤岛\",{\"1\":{\"1875\":1,\"1879\":1,\"1885\":1}}],[\"信息人才的配置\",{\"1\":{\"1871\":1}}],[\"信息产业的发展\",{\"1\":{\"1871\":1}}],[\"信息化需求的3个层次\",{\"0\":{\"1874\":1}}],[\"信息化的三流\",{\"1\":{\"1879\":1}}],[\"信息化的目的\",{\"0\":{\"1872\":1}}],[\"信息化的主体是全社会成员\",{\"1\":{\"1871\":1}}],[\"信息化的概念\",{\"0\":{\"1871\":1}}],[\"信息化是指在国家宏观信息政策指导下\",{\"1\":{\"1871\":1}}],[\"信息用户和信息管理者\",{\"1\":{\"1864\":1}}],[\"信息处理器\",{\"1\":{\"1864\":1}}],[\"信息源\",{\"1\":{\"1864\":1}}],[\"信息系统核心的芯片集成\",{\"1\":{\"2179\":1}}],[\"信息系统战略规划\",{\"0\":{\"1876\":1}}],[\"信息系统建设方法\",{\"1\":{\"1875\":1}}],[\"信息系统建设原则\",{\"0\":{\"1856\":1}}],[\"信息系统的分类\",{\"0\":{\"1862\":1}}],[\"信息系统开发方法\",{\"0\":{\"1857\":1}}],[\"信息和反馈等进行分析\",{\"1\":{\"1843\":1}}],[\"信息流\",{\"1\":{\"1843\":1,\"1879\":1}}],[\"信息的数字化\",{\"1\":{\"1889\":1}}],[\"信息的\",{\"1\":{\"1661\":1}}],[\"磁带机等\",{\"1\":{\"2154\":1}}],[\"磁盘存储技术\",{\"0\":{\"2213\":1}}],[\"磁盘移臂调度算法\",{\"0\":{\"2143\":1}}],[\"磁盘基本结构与存取过程\",{\"0\":{\"2142\":1}}],[\"临界区\",{\"1\":{\"2154\":1}}],[\"临界资源\",{\"1\":{\"2154\":1}}],[\"临时生效alias\",{\"1\":{\"1080\":1}}],[\"临时修改\",{\"0\":{\"1047\":1}}],[\"临时目录\",{\"1\":{\"913\":1,\"1150\":3}}],[\"扫描算法\",{\"0\":{\"2146\":1}}],[\"扫描文件夹\",{\"1\":{\"1823\":1}}],[\"扇区\",{\"1\":{\"2142\":1}}],[\"寻址\",{\"1\":{\"2220\":1}}],[\"寻址能力方面的扩展\",{\"1\":{\"2214\":1}}],[\"寻道时间是指磁头移动到磁道所需的时间\",{\"1\":{\"2142\":1}}],[\"寻道时间\",{\"1\":{\"2142\":1}}],[\"寻找附近设备\",{\"1\":{\"118\":1}}],[\"突破冯诺依曼瓶颈\",{\"1\":{\"2141\":1}}],[\"突出重要内容\",{\"1\":{\"219\":1}}],[\"挖矿\",{\"1\":{\"2133\":1}}],[\"挖掘出隐藏在数据间的相互关系\",{\"1\":{\"1882\":1}}],[\"争夺记账权\",{\"1\":{\"2133\":1}}],[\"股份授权证明机制\",{\"1\":{\"2133\":1}}],[\"博弈论\",{\"1\":{\"2133\":1}}],[\"博客主页\",{\"0\":{\"0\":1}}],[\"哈希加密\",{\"1\":{\"2133\":1}}],[\"账户身份信息是高度加密的\",{\"1\":{\"2132\":1}}],[\"账号失效日期\",{\"1\":{\"940\":1}}],[\"抗抵赖由4个独立的阶段组成\",{\"1\":{\"2129\":1}}],[\"抗抵赖服务包括证据的生成\",{\"1\":{\"2129\":1}}],[\"抗抵赖框架\",{\"0\":{\"2129\":1}}],[\"申请鉴别信息和验证鉴别信息\",{\"1\":{\"2125\":1}}],[\"申诉\",{\"1\":{\"1869\":1}}],[\"鉴别信息的类型包括交换鉴别信息\",{\"1\":{\"2125\":1}}],[\"鉴别的方式如下\",{\"1\":{\"2125\":1}}],[\"鉴别的基本目的是防止其他实体占用和独立操作被鉴别实体的身份\",{\"1\":{\"2125\":1}}],[\"鉴于数组的常用性\",{\"1\":{\"678\":1}}],[\"伪造\",{\"1\":{\"2115\":1}}],[\"伪元素和\",{\"1\":{\"183\":1}}],[\"伪元素清除浮动\",{\"0\":{\"183\":1}}],[\"篡改数据得改掉51\",{\"1\":{\"2132\":1}}],[\"篡改\",{\"1\":{\"2115\":1}}],[\"尖端科技企业集团\",{\"1\":{\"2111\":1}}],[\"尖括号\",{\"0\":{\"1445\":1}}],[\"社会应急服务部门\",{\"1\":{\"2111\":1}}],[\"社区公安和水\",{\"1\":{\"1869\":1}}],[\"邮电通信\",{\"1\":{\"2111\":1}}],[\"邮箱不能为空\",{\"1\":{\"1789\":1}}],[\"邮箱地址\",{\"1\":{\"1118\":1}}],[\"金融机构\",{\"1\":{\"2111\":1}}],[\"金字塔结构\",{\"1\":{\"1864\":1}}],[\"法线和顶点颜色都是存储在\",{\"1\":{\"2742\":1}}],[\"法线网格材质\",{\"0\":{\"2720\":1}}],[\"法线贴图对材质的影响程度\",{\"1\":{\"2712\":1}}],[\"法线贴图的类型\",{\"1\":{\"2711\":1}}],[\"法线贴图不会改变曲面的实际形状\",{\"1\":{\"2710\":1}}],[\"法线\",{\"1\":{\"2291\":1}}],[\"法相量\",{\"1\":{\"2277\":1}}],[\"法人和其他组织权益有严重损害\",{\"1\":{\"2111\":1}}],[\"法人和其他组织权益有损害\",{\"1\":{\"2111\":1}}],[\"法律\",{\"1\":{\"1848\":1}}],[\"矩阵中的每一格标识所在行的主体对所在列的客体的访问授权\",{\"1\":{\"2107\":1}}],[\"客体\",{\"1\":{\"2106\":1,\"2118\":1}}],[\"客户机需要向dhcp服务器申请续租\",{\"1\":{\"2210\":1}}],[\"客户关系管理\",{\"1\":{\"2051\":1}}],[\"客户关系管理系统\",{\"0\":{\"1878\":1}}],[\"客户\",{\"1\":{\"1887\":1}}],[\"客户服务与支持\",{\"1\":{\"1878\":1}}],[\"客户实际上访问的是替身对象\",{\"1\":{\"1793\":1}}],[\"客户端主要负责提供接口给嵌入式程序\",{\"1\":{\"2195\":1}}],[\"客户端改为向代理服务器发送请求\",{\"1\":{\"1794\":1}}],[\"客户端只需要依赖抽象的工厂接口\",{\"1\":{\"1754\":1}}],[\"客户端只需要知道使用工厂方法来创建对象即可\",{\"1\":{\"1750\":1}}],[\"客户端不会关闭连接\",{\"1\":{\"1737\":1}}],[\"客户端javascript响应处理函数会在处理完服务器返回的信息后\",{\"1\":{\"1737\":1}}],[\"客户端可以与任意服务器通信\",{\"1\":{\"1736\":1}}],[\"客户端\",{\"1\":{\"1735\":1,\"2195\":1}}],[\"客户端向websocket服务器通知\",{\"1\":{\"1735\":1}}],[\"客户端向服务端发送连接请求报文段\",{\"1\":{\"1727\":1}}],[\"客户端也可以主动向服务器推送消息\",{\"1\":{\"1735\":1}}],[\"客户端会等待一段时间再关闭的原因\",{\"1\":{\"1729\":1}}],[\"客户端会发送一个\",{\"1\":{\"1728\":1}}],[\"客户端才进入closed状态\",{\"1\":{\"1728\":1}}],[\"客户端进入time\",{\"1\":{\"1728\":1}}],[\"客户端进行维护和存储\",{\"1\":{\"1658\":1}}],[\"客户端到服务端的连接释放\",{\"1\":{\"1728\":1}}],[\"客户端发完这个报文段后便进入\",{\"1\":{\"1727\":1}}],[\"客户端便进入\",{\"1\":{\"1727\":1}}],[\"客户端共发出了两个连接请求报文段\",{\"1\":{\"1727\":1}}],[\"客户端收到释放请求后\",{\"1\":{\"1729\":1}}],[\"客户端收到服务端的确认后\",{\"1\":{\"1728\":1}}],[\"客户端收到\",{\"1\":{\"1726\":1,\"1728\":1}}],[\"客户端给服务端发一个\",{\"1\":{\"1726\":1}}],[\"客户端得到\",{\"1\":{\"1659\":1}}],[\"审计\",{\"1\":{\"2103\":1}}],[\"破坏真实性\",{\"1\":{\"2115\":1}}],[\"破坏完整性\",{\"1\":{\"2115\":1}}],[\"破坏可用性\",{\"1\":{\"2115\":1}}],[\"破坏保密性\",{\"1\":{\"2115\":1}}],[\"破坏数据完整性\",{\"1\":{\"2102\":1}}],[\"破坏估计\",{\"1\":{\"2095\":1}}],[\"≠\",{\"1\":{\"2089\":1,\"2131\":1}}],[\"轮流将服务请求\",{\"1\":{\"2077\":1}}],[\"轮转算法\",{\"1\":{\"2077\":1}}],[\"轮询等待新的链接和请求等事件\",{\"1\":{\"379\":1}}],[\"哪两个质数的乘积\",{\"1\":{\"2133\":1}}],[\"哪些可降级\",{\"1\":{\"2075\":1}}],[\"哪个先结束\",{\"1\":{\"1478\":1}}],[\"哪个可写\",{\"1\":{\"120\":1}}],[\"降级的目的是保证核心服务可用\",{\"1\":{\"2075\":1}}],[\"降低了系统性价比\",{\"1\":{\"2199\":1}}],[\"降低了渲染优先级\",{\"1\":{\"1309\":1}}],[\"降低精度的设计\",{\"1\":{\"2180\":1}}],[\"降低成本\",{\"1\":{\"1899\":1}}],[\"降低耦合度\",{\"1\":{\"1837\":1}}],[\"私产\",{\"1\":{\"2056\":1}}],[\"私有云\",{\"1\":{\"2050\":1}}],[\"私有的方法和变量\",{\"1\":{\"1817\":1}}],[\"庞大的单体应用\",{\"1\":{\"2055\":1}}],[\"零信任原则\",{\"1\":{\"2053\":1}}],[\"零引用\",{\"1\":{\"1646\":1}}],[\"韧性原则\",{\"1\":{\"2053\":1}}],[\"弹性原则\",{\"1\":{\"2053\":1}}],[\"弹跳隐藏\",{\"1\":{\"1820\":1}}],[\"弹跳显示\",{\"1\":{\"1820\":1}}],[\"云技术推动下的嵌入式系统\",{\"1\":{\"2178\":1}}],[\"云原生架构\",{\"0\":{\"2052\":1}}],[\"云计算是集合了大量计算设备和资源\",{\"1\":{\"2046\":1}}],[\"云计算\",{\"0\":{\"2045\":1}}],[\"财务管理\",{\"1\":{\"2051\":1}}],[\"兼顾以上两种情况的云计算服务\",{\"1\":{\"2050\":1}}],[\"兼容格式的文件名称\",{\"1\":{\"1018\":1}}],[\"兼容\",{\"1\":{\"815\":2}}],[\"兼容写法\",{\"1\":{\"239\":1}}],[\"兼容性在ie9以及以上\",{\"1\":{\"1534\":1,\"1560\":1,\"1563\":1}}],[\"兼容性的嗅探\",{\"1\":{\"473\":1}}],[\"兼容性处理\",{\"1\":{\"237\":1}}],[\"兼容性\",{\"0\":{\"459\":1},\"1\":{\"208\":1}}],[\"互联网场景更适合\",{\"1\":{\"2044\":1}}],[\"互运行性\",{\"1\":{\"1958\":1}}],[\"顾名思义\",{\"1\":{\"2041\":1}}],[\"刻面检索法\",{\"1\":{\"2028\":1}}],[\"好的管理\",{\"1\":{\"2016\":1}}],[\"好的产品线架构\",{\"1\":{\"2016\":1}}],[\"刺激\",{\"1\":{\"2011\":1}}],[\"刺激源\",{\"1\":{\"2011\":1}}],[\"评估方法\",{\"0\":{\"2011\":1}}],[\"评估与反馈\",{\"1\":{\"1849\":1}}],[\"敏感点是一个或多个构件\",{\"1\":{\"2010\":1}}],[\"敏捷方法\",{\"0\":{\"1903\":1,\"1904\":1}}],[\"敏捷开发\",{\"1\":{\"1855\":1}}],[\"闭环控制风格\",{\"0\":{\"1994\":1}}],[\"闭包可以维持函数内局部变量\",{\"1\":{\"1653\":1}}],[\"闭包应用场景\",{\"0\":{\"902\":1}}],[\"闭包产生的本质就是\",{\"1\":{\"901\":1}}],[\"闭包产生原因\",{\"0\":{\"901\":1}}],[\"闭包这个概念为\",{\"1\":{\"900\":1}}],[\"闭包其实就是一个可以访问其他函数内部变量的函数\",{\"1\":{\"900\":1}}],[\"闭包让你可以在一个内层函数中访问到其外层函数的作用域\",{\"1\":{\"900\":1}}],[\"闭包基本概念\",{\"0\":{\"900\":1}}],[\"闭包是不可避免的\",{\"1\":{\"431\":1}}],[\"闭包\",{\"0\":{\"431\":1,\"894\":1,\"899\":1,\"1773\":1},\"1\":{\"1653\":1},\"2\":{\"905\":1}}],[\"典型范围是0\",{\"1\":{\"2701\":1,\"2712\":1}}],[\"典型的用法是通过调用\",{\"1\":{\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2323\":1}}],[\"典型的用法是过通过调用\",{\"1\":{\"2311\":1}}],[\"典型的应用场景有\",{\"1\":{\"1658\":1}}],[\"典型原因是由于程序中存在着大量的循环操作\",{\"1\":{\"2141\":1}}],[\"典型代表\",{\"1\":{\"2054\":1}}],[\"典型实例\",{\"0\":{\"1980\":1}}],[\"良好的隐蔽性\",{\"1\":{\"1978\":1}}],[\"良好的重用性\",{\"1\":{\"1978\":1,\"1982\":1,\"1986\":1}}],[\"良好的css命名方式减少沟通调试成本\",{\"1\":{\"216\":1}}],[\"弱用户交互\",{\"1\":{\"1977\":1}}],[\"萌芽阶段\",{\"1\":{\"1969\":1}}],[\"架构和任务\",{\"1\":{\"2180\":1}}],[\"架构模式\",{\"0\":{\"2054\":1}}],[\"架构持续演进原则\",{\"1\":{\"2053\":1}}],[\"架构\",{\"0\":{\"2051\":1}}],[\"架构很重要的一个功能就是将系统资源与应用构件隔离\",{\"1\":{\"2025\":1}}],[\"架构权衡分析法\",{\"1\":{\"2011\":1}}],[\"架构风格定义了用于描述系统的术语表和一组指导构建系统的规则\",{\"1\":{\"1976\":1}}],[\"架构配置\",{\"1\":{\"1972\":1}}],[\"架构的4+1视图\",{\"0\":{\"1970\":1}}],[\"架构的发展历程\",{\"0\":{\"1969\":1}}],[\"架构的作用\",{\"0\":{\"1968\":1}}],[\"架构的本质\",{\"0\":{\"1967\":1}}],[\"架构定义一个词汇表和一组约束\",{\"1\":{\"1967\":1}}],[\"架构设计就是需求分配\",{\"1\":{\"1966\":1}}],[\"贯穿于\",{\"1\":{\"1959\":1}}],[\"独立于任何实现技术的模型\",{\"1\":{\"1996\":1}}],[\"独立构件风格\",{\"0\":{\"1985\":1}}],[\"独立性\",{\"1\":{\"1900\":1}}],[\"独特工具包括\",{\"1\":{\"1959\":1}}],[\"风险点是指架构设计中潜在的\",{\"1\":{\"2010\":1}}],[\"风险\",{\"1\":{\"1958\":1}}],[\"健壮性\",{\"1\":{\"1958\":1}}],[\"质量效用树\",{\"0\":{\"2012\":1}}],[\"质量属性\",{\"0\":{\"2003\":1}}],[\"质量和功能需求的组合驱动架构设计\",{\"1\":{\"1974\":1}}],[\"质量控制是实时监控项目的具体结果\",{\"1\":{\"1959\":1}}],[\"质量审计和过程分析\",{\"1\":{\"1959\":1}}],[\"质量保证的主要目标\",{\"1\":{\"1959\":1}}],[\"质量保证\",{\"1\":{\"1959\":1}}],[\"质量管理\",{\"0\":{\"1957\":1}}],[\"质量认证\",{\"1\":{\"1869\":1}}],[\"甘特图直观\",{\"1\":{\"1956\":1}}],[\"甘特图\",{\"0\":{\"1956\":1}}],[\"松弛时间\",{\"1\":{\"1955\":1}}],[\"松耦合\",{\"1\":{\"1860\":1,\"1978\":1,\"1986\":1}}],[\"盈亏平衡时\",{\"1\":{\"1953\":1}}],[\"盈亏平衡分析\",{\"0\":{\"1953\":1}}],[\"影响系统的可修改性\",{\"1\":{\"2010\":1}}],[\"影响软件质量的3组因素\",{\"0\":{\"1958\":1}}],[\"影响可维护性的因素\",{\"0\":{\"1948\":1}}],[\"影响函数中的\",{\"1\":{\"711\":1}}],[\"遗留系统演化策略\",{\"0\":{\"1944\":1}}],[\"遗留的问题\",{\"1\":{\"1334\":1}}],[\"验收测试\",{\"1\":{\"1940\":1}}],[\"验证和记录\",{\"1\":{\"2129\":1}}],[\"验证软件与需求的一致性\",{\"1\":{\"1940\":1}}],[\"验证完整的软件配置项能否和系统正确连接\",{\"1\":{\"1940\":1}}],[\"验证该用户可以使用该方法\",{\"1\":{\"1696\":1}}],[\"验证虚拟主机是否接受此方法\",{\"1\":{\"1696\":1}}],[\"验证是否配置虚拟主机\",{\"1\":{\"1696\":1}}],[\"验证是否是\",{\"1\":{\"495\":1}}],[\"验证那个问题是否存在\",{\"1\":{\"1637\":1}}],[\"验证setstate是异步\",{\"1\":{\"1196\":1}}],[\"验证\",{\"0\":{\"1144\":1},\"1\":{\"1794\":1}}],[\"验证一次就好\",{\"1\":{\"832\":1}}],[\"判定表\",{\"1\":{\"1939\":1}}],[\"判断网络出现拥塞的根据就是没有收到确认\",{\"1\":{\"1720\":1}}],[\"判断丢包\",{\"1\":{\"1713\":1}}],[\"判断目标地址是否与当前地址处于同一网络中\",{\"1\":{\"1691\":1}}],[\"判断到底要不要执行用户传递的方法\",{\"1\":{\"1570\":1}}],[\"判断节点类型\",{\"1\":{\"1551\":1}}],[\"判断setimmediate\",{\"1\":{\"1542\":1}}],[\"判断source是对象还是数组\",{\"1\":{\"765\":1}}],[\"判断source是不是对象\",{\"1\":{\"765\":1}}],[\"判断虚拟dom\",{\"1\":{\"1528\":1}}],[\"判断传入的oldvnode是否是一个真实元素\",{\"1\":{\"1528\":1}}],[\"判断传入元素是否为\",{\"1\":{\"580\":1}}],[\"判断\",{\"1\":{\"1273\":1}}],[\"判断循环条件\",{\"1\":{\"888\":1}}],[\"判断数据i的类型\",{\"1\":{\"765\":1}}],[\"判断构造函数的prototype对象是否在对象的原型链上\",{\"1\":{\"657\":1}}],[\"判断构造函数的\",{\"1\":{\"641\":1}}],[\"判断其中一方是否为\",{\"1\":{\"627\":2}}],[\"判断两者类型是否为\",{\"1\":{\"627\":1}}],[\"判断奇偶\",{\"1\":{\"607\":1}}],[\"判断语句\",{\"1\":{\"501\":1}}],[\"判断函数的返回值类型\",{\"1\":{\"359\":1}}],[\"判断是否匹配目标元素\",{\"1\":{\"237\":1}}],[\"判断执行结果并进行转码\",{\"1\":{\"94\":1}}],[\"揭示不同问题\",{\"1\":{\"1939\":1}}],[\"括号不配对\",{\"1\":{\"1938\":1}}],[\"桌前检查\",{\"1\":{\"1938\":1}}],[\"灰盒测试法\",{\"1\":{\"1938\":1}}],[\"灰色指自身被标记\",{\"1\":{\"1650\":1}}],[\"白盒测试\",{\"1\":{\"1939\":1}}],[\"白盒测试与黑盒测试\",{\"0\":{\"1939\":1}}],[\"白盒测试法\",{\"1\":{\"1938\":1}}],[\"白色最近\",{\"1\":{\"2725\":1}}],[\"白色是最大位移\",{\"1\":{\"2603\":1,\"2704\":1}}],[\"白色是最高的\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"白色\",{\"1\":{\"2601\":1,\"2697\":1,\"2699\":1,\"2852\":1}}],[\"白色对象\",{\"1\":{\"1650\":1}}],[\"白色指的是未被标记的对象\",{\"1\":{\"1650\":1}}],[\"迪米特原则\",{\"1\":{\"1937\":1}}],[\"迪西\",{\"1\":{\"490\":3,\"492\":4}}],[\"李氏替换原则\",{\"1\":{\"1937\":1}}],[\"李四\",{\"1\":{\"652\":2,\"1774\":1}}],[\"耦合\",{\"0\":{\"1932\":1}}],[\"少数服从多数\",{\"1\":{\"2133\":1}}],[\"少数低版本手机系统\",{\"1\":{\"208\":1}}],[\"少扇出\",{\"1\":{\"1930\":1}}],[\"式用户隔离内部技术细节\",{\"1\":{\"1928\":1}}],[\"置于用户控制之下\",{\"1\":{\"1928\":1}}],[\"泛播地址\",{\"1\":{\"2214\":1}}],[\"泛化\",{\"1\":{\"1913\":1}}],[\"泛型工具类型\",{\"0\":{\"1364\":1}}],[\"泛型的小伙伴来说\",{\"1\":{\"1363\":1}}],[\"泛型变量\",{\"0\":{\"1363\":1}}],[\"泛型类\",{\"0\":{\"1362\":1}}],[\"泛型接口\",{\"0\":{\"1361\":1}}],[\"泛型\",{\"0\":{\"1360\":1},\"1\":{\"1360\":1},\"2\":{\"1384\":1}}],[\"黑色最远\",{\"1\":{\"2725\":1}}],[\"黑色和白色值映射到与光照相关的感知深度\",{\"1\":{\"2700\":1}}],[\"黑色是无位移\",{\"1\":{\"2603\":1,\"2704\":1}}],[\"黑色\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"黑色指自身和成员变量皆被标记\",{\"1\":{\"1650\":1}}],[\"黑盒测试\",{\"1\":{\"1939\":1}}],[\"黑盒测试法\",{\"1\":{\"1938\":1}}],[\"黑盒\",{\"1\":{\"1906\":1}}],[\"盒子结构\",{\"1\":{\"1906\":1}}],[\"统计测试和软件认证\",{\"1\":{\"1906\":1}}],[\"统计过程控制下的增量式开发\",{\"1\":{\"1906\":1}}],[\"统一建模语言\",{\"1\":{\"1969\":1}}],[\"统一过程\",{\"0\":{\"1901\":1}}],[\"统一管理状态更新时\",{\"1\":{\"1764\":1}}],[\"统一管理需要派发的行为标识\",{\"1\":{\"1159\":1,\"1183\":1}}],[\"统一资源定位符\",{\"1\":{\"1677\":1}}],[\"统一初始化数据的方法\",{\"1\":{\"1491\":1}}],[\"统一设置到原型对象中\",{\"1\":{\"479\":1}}],[\"统一模块定义\",{\"1\":{\"444\":1}}],[\"统一编辑器配置\",{\"0\":{\"23\":1,\"66\":1}}],[\"洁净室\",{\"1\":{\"1906\":1}}],[\"净室工程的核心\",{\"1\":{\"1906\":1}}],[\"净室即无尘室\",{\"1\":{\"1906\":1}}],[\"净室软件工程\",{\"0\":{\"1906\":1}}],[\"力图在比源代码更高抽象层次上建立程序的表示过程\",{\"1\":{\"1905\":1}}],[\"领域级\",{\"1\":{\"1905\":1}}],[\"领导想找小李问点事\",{\"1\":{\"813\":1}}],[\"领导想找小李汇报一下工作\",{\"1\":{\"813\":2}}],[\"逆向工程工具\",{\"1\":{\"1962\":1}}],[\"逆向工程是设计的恢复过程\",{\"1\":{\"1905\":1}}],[\"逆向工程是分析程序\",{\"1\":{\"1905\":1}}],[\"逆向工程\",{\"0\":{\"1905\":1},\"1\":{\"1905\":1}}],[\"倡导以业务为核心\",{\"1\":{\"1904\":1}}],[\"猜测\",{\"1\":{\"1904\":1}}],[\"水晶方法\",{\"1\":{\"1904\":1}}],[\"水平偏离中心偏移量\",{\"1\":{\"2573\":1}}],[\"水平分片\",{\"1\":{\"2232\":1}}],[\"水平原型\",{\"1\":{\"1861\":1}}],[\"水平垂直居中\",{\"0\":{\"164\":1}}],[\"近螺旋式的开发方法\",{\"1\":{\"1904\":1}}],[\"朴素\",{\"1\":{\"1904\":1}}],[\"价值与用途\",{\"0\":{\"2244\":1}}],[\"价值观\",{\"1\":{\"1904\":1}}],[\"价值链分析法\",{\"1\":{\"1876\":1}}],[\"姐搜变更的勇气\",{\"1\":{\"1904\":1}}],[\"勇气\",{\"1\":{\"1904\":2}}],[\"沟通\",{\"1\":{\"1904\":1}}],[\"细化\",{\"1\":{\"1901\":1}}],[\"叠加组装\",{\"1\":{\"1900\":1}}],[\"购买而不是重新构造\",{\"1\":{\"1900\":1}}],[\"购物车功能\",{\"1\":{\"1658\":1}}],[\"乐高积木\",{\"1\":{\"1899\":1}}],[\"安全规划等内容\",{\"1\":{\"2217\":1}}],[\"安全服务与安全机制的对应关系\",{\"0\":{\"2124\":1}}],[\"安全级别高的主体不能往低级别的客体写\",{\"1\":{\"2117\":1}}],[\"安全级别的的主体不能读安全级别高的客体\",{\"1\":{\"2117\":1}}],[\"安全模型\",{\"0\":{\"2116\":1}}],[\"安全架构设计\",{\"0\":{\"2114\":1}}],[\"安全标记保护级\",{\"1\":{\"2111\":1}}],[\"安全措施的目标\",{\"0\":{\"2103\":1}}],[\"安全性可修改性\",{\"1\":{\"2011\":1}}],[\"安全性又可划分为机密性\",{\"1\":{\"2006\":1}}],[\"安全性是指系统在向合法用户提供服务的同时能够阻止非授权用户使用的企图或拒绝服务的能力\",{\"1\":{\"2006\":1}}],[\"安全性\",{\"0\":{\"2006\":1},\"1\":{\"2132\":1}}],[\"安排任务更灵活\",{\"1\":{\"1899\":1}}],[\"安装后的测试计划\",{\"1\":{\"2218\":1}}],[\"安装日程表\",{\"1\":{\"2218\":1}}],[\"安装完毕\",{\"1\":{\"1847\":1}}],[\"安装完成之后\",{\"1\":{\"1582\":1}}],[\"安装阶段\",{\"1\":{\"1847\":1}}],[\"安装即可\",{\"1\":{\"1582\":1}}],[\"安装脚手架\",{\"0\":{\"1328\":1}}],[\"安装是否成功\",{\"0\":{\"1144\":1}}],[\"安装编译结果\",{\"1\":{\"1134\":1}}],[\"安装的包名\",{\"1\":{\"1072\":1}}],[\"安装\",{\"0\":{\"1128\":1,\"1129\":1,\"1140\":1,\"1143\":1,\"1582\":1},\"1\":{\"1071\":2,\"1472\":1}}],[\"安装body\",{\"0\":{\"193\":1}}],[\"安装cros\",{\"0\":{\"192\":1}}],[\"安装express\",{\"0\":{\"190\":1}}],[\"安装第三方库\",{\"0\":{\"35\":1,\"78\":1}}],[\"安装依赖库\",{\"0\":{\"1133\":1}}],[\"安装依赖\",{\"0\":{\"4\":1,\"14\":1,\"25\":1,\"29\":1,\"57\":1,\"68\":1,\"72\":1},\"1\":{\"21\":1,\"64\":1}}],[\"螺旋模型\",{\"0\":{\"1898\":1}}],[\"瀑布模型要求每个阶段一次性完全解决该阶段工作\",{\"1\":{\"1895\":1}}],[\"瀑布模型\",{\"0\":{\"1895\":1}}],[\"装置等\",{\"1\":{\"1890\":1}}],[\"装饰器模式能够很好的对已有功能进行拓展\",{\"1\":{\"1777\":1}}],[\"装饰器模式\",{\"0\":{\"1777\":1},\"2\":{\"1779\":1}}],[\"装饰器的分类\",{\"0\":{\"1465\":1}}],[\"装饰器是什么\",{\"0\":{\"1464\":1}}],[\"装饰器\",{\"0\":{\"1463\":1},\"2\":{\"1471\":1}}],[\"机密性机制\",{\"1\":{\"2127\":1}}],[\"机密性服务的目的是确保信息仅仅是对被授权者可用\",{\"1\":{\"2127\":1}}],[\"机密性框架\",{\"0\":{\"2127\":1}}],[\"机动性\",{\"1\":{\"1904\":1}}],[\"机器性能越好\",{\"1\":{\"2170\":1}}],[\"机器人可读或人工可读\",{\"1\":{\"1961\":1}}],[\"机器\",{\"1\":{\"1890\":1}}],[\"机制\",{\"1\":{\"903\":1,\"1650\":1}}],[\"仪器仪表\",{\"1\":{\"1890\":1}}],[\"智能制造体系\",{\"0\":{\"1890\":1}}],[\"垂直分片\",{\"1\":{\"2232\":1}}],[\"垂直架构\",{\"0\":{\"2059\":1}}],[\"垂直门户\",{\"1\":{\"1887\":1}}],[\"垂直原型\",{\"1\":{\"1861\":1}}],[\"烟囱架构\",{\"1\":{\"1885\":1}}],[\"持续性\",{\"1\":{\"2258\":1}}],[\"持续改进\",{\"1\":{\"1884\":1}}],[\"持久性\",{\"1\":{\"1279\":1}}],[\"彻底性的再设计\",{\"1\":{\"1884\":1}}],[\"彻底的\",{\"1\":{\"1875\":1}}],[\"颠覆原有流程\",{\"1\":{\"1884\":1}}],[\"侧重于项目管理\",{\"1\":{\"1904\":1}}],[\"侧重于代码和复用\",{\"1\":{\"1354\":1}}],[\"侧重点事分析数据间的前后关系\",{\"1\":{\"1882\":1}}],[\"采购合同等\",{\"1\":{\"1879\":1}}],[\"采用低功耗优化的编译技术\",{\"1\":{\"2177\":1}}],[\"采用主体\",{\"1\":{\"2118\":1}}],[\"采用网络\",{\"1\":{\"2057\":1}}],[\"采用子程序调用和参数传递的方式将构件组装起来\",{\"1\":{\"2028\":1}}],[\"采用图形\",{\"1\":{\"1923\":1}}],[\"采用策略模式可以避免多重条件判断\",{\"1\":{\"1787\":1}}],[\"采用三色标记法后我们在恢复执行时就好办多了\",{\"1\":{\"1650\":1}}],[\"采用并行策略后\",{\"1\":{\"1649\":1}}],[\"采用一小块内存频率较高的快速清理\",{\"1\":{\"1648\":1}}],[\"采用老生代的垃圾回收策略进行管理\",{\"1\":{\"1648\":1}}],[\"采用不同的垃圾回收器也就是不同的策略管理垃圾回收\",{\"1\":{\"1648\":1}}],[\"采用优雅降级\",{\"1\":{\"1542\":1}}],[\"采用函数表达式接口定义函数的方式时\",{\"1\":{\"1422\":1}}],[\"采用回调函数作为参数\",{\"1\":{\"1196\":1}}],[\"采用了两个垃圾回收器来管控\",{\"1\":{\"1648\":1}}],[\"采用了扩展运算符和\",{\"1\":{\"737\":1}}],[\"采用了错误冒泡的方式\",{\"1\":{\"569\":1}}],[\"采用\",{\"1\":{\"662\":1}}],[\"采用该规范\",{\"1\":{\"444\":1}}],[\"营销自动化\",{\"1\":{\"1878\":1}}],[\"销售额=固定成本+可变成本+税费\",{\"1\":{\"1953\":1}}],[\"销售额=固定成本+可变成本+税费+利润\",{\"1\":{\"1953\":1}}],[\"销售自动化\",{\"1\":{\"1878\":1}}],[\"销毁并回收它们所占用的内存空间\",{\"1\":{\"1646\":1}}],[\"销毁\",{\"1\":{\"1646\":1}}],[\"战略一致性模型\",{\"1\":{\"1876\":1}}],[\"战略栅格法\",{\"1\":{\"1876\":1}}],[\"战略数据规划法\",{\"1\":{\"1876\":1}}],[\"战略集合转化法\",{\"1\":{\"1876\":1}}],[\"战略需求\",{\"1\":{\"1874\":1}}],[\"围绕企业战略需求\",{\"1\":{\"1876\":1}}],[\"围绕企业整体需求\",{\"1\":{\"1876\":1}}],[\"围绕职能部门需求\",{\"1\":{\"1876\":1}}],[\"围绕核心业务推动信息化\",{\"1\":{\"1875\":1}}],[\"升级\",{\"1\":{\"1874\":1}}],[\"升序执行\",{\"1\":{\"284\":1,\"705\":1}}],[\"资金流\",{\"1\":{\"1879\":1}}],[\"资金管理\",{\"1\":{\"1873\":1}}],[\"资源共享\",{\"1\":{\"2199\":1}}],[\"资源层\",{\"1\":{\"2051\":1}}],[\"资源是外部的不可改变的对象\",{\"1\":{\"2020\":1}}],[\"资源是一个类型化的项的固定集合\",{\"1\":{\"2020\":1}}],[\"资源这个概念可以包含代码资源\",{\"1\":{\"2020\":1}}],[\"资源优化\",{\"1\":{\"1956\":1}}],[\"资源管理方法\",{\"1\":{\"1875\":1}}],[\"资源占用更少\",{\"1\":{\"1769\":1}}],[\"资源前面\",{\"1\":{\"1707\":1}}],[\"资源排在\",{\"1\":{\"1707\":1}}],[\"资源的名称\",{\"1\":{\"1677\":1}}],[\"资源初始化\",{\"1\":{\"334\":1}}],[\"病通过互联网及时了解和掌握新的技术信息\",{\"1\":{\"1873\":1}}],[\"技术较为成熟\",{\"1\":{\"2077\":1}}],[\"技术手段\",{\"1\":{\"1906\":1}}],[\"技术\",{\"1\":{\"1904\":1}}],[\"技术需求\",{\"1\":{\"1874\":1}}],[\"技术创新\",{\"1\":{\"1873\":1}}],[\"技术信息的采集\",{\"1\":{\"1869\":1}}],[\"团体和个人\",{\"1\":{\"1871\":1}}],[\"团队成员需要对责任链存在共识\",{\"1\":{\"1839\":1}}],[\"团队采用了一种特殊方式\",{\"1\":{\"1650\":1}}],[\"团队引入了并行回收机制\",{\"1\":{\"1649\":1}}],[\"急救\",{\"1\":{\"1869\":1}}],[\"医疗\",{\"1\":{\"1869\":1}}],[\"医药\",{\"1\":{\"1848\":1}}],[\"盗贼\",{\"1\":{\"1869\":1}}],[\"征求群众意见\",{\"1\":{\"1869\":1}}],[\"户口\",{\"1\":{\"1869\":1}}],[\"火堆国家安全造成严重损害\",{\"1\":{\"2111\":1}}],[\"火警等\",{\"1\":{\"1869\":1}}],[\"火\",{\"1\":{\"1869\":1}}],[\"投标\",{\"1\":{\"1869\":1}}],[\"许可证\",{\"1\":{\"1869\":1}}],[\"许多对象出现\",{\"1\":{\"1641\":1}}],[\"业单位及公民\",{\"1\":{\"1869\":1}}],[\"业务拆分\",{\"0\":{\"2084\":1}}],[\"业务高速迭代情况下的架构与业务平衡\",{\"1\":{\"2053\":1}}],[\"业务的分割和包容性\",{\"1\":{\"2025\":1}}],[\"业务逻辑\",{\"1\":{\"1936\":1}}],[\"业务逻辑更清晰明了\",{\"1\":{\"819\":1}}],[\"业务建模\",{\"1\":{\"1902\":1}}],[\"业务\",{\"1\":{\"1889\":1}}],[\"业务处理系统\",{\"0\":{\"1863\":1}}],[\"业务流程管理\",{\"1\":{\"1884\":1}}],[\"业务流程重组\",{\"1\":{\"1884\":1}}],[\"业务流程重构方法\",{\"1\":{\"1875\":1}}],[\"业务流程\",{\"1\":{\"1860\":1}}],[\"业务规则\",{\"1\":{\"1785\":1}}],[\"企业服务总线\",{\"0\":{\"2040\":1}}],[\"企业层\",{\"1\":{\"1890\":1}}],[\"企业内处理信息\",{\"1\":{\"1890\":1}}],[\"企业数字化转型的五个发展阶段\",{\"1\":{\"1889\":1}}],[\"企业及个人\",{\"1\":{\"1888\":1}}],[\"企业应用门户\",{\"1\":{\"1887\":1}}],[\"企业应用集成\",{\"0\":{\"1885\":1,\"1886\":1}}],[\"企业网站的基础上增加知识性内容\",{\"1\":{\"1887\":1}}],[\"企业知识门户\",{\"1\":{\"1887\":1}}],[\"企业信息门户\",{\"1\":{\"1887\":1}}],[\"企业信息化工程技术核心\",{\"0\":{\"1877\":1}}],[\"企业信息化方法\",{\"0\":{\"1875\":1}}],[\"企业信息化的具体目标是优化企业业务活动使之更加有效\",{\"1\":{\"1872\":1}}],[\"企业信息化与电子商务\",{\"0\":{\"1870\":1}}],[\"企业门户\",{\"0\":{\"1887\":1}}],[\"企业系统规划法\",{\"1\":{\"1876\":1}}],[\"企业\",{\"1\":{\"1871\":1,\"1889\":1}}],[\"企业向政府提建议\",{\"1\":{\"1869\":1}}],[\"企业向政府供应各种商品和服务\",{\"1\":{\"1869\":1}}],[\"企业向政府缴税\",{\"1\":{\"1869\":1}}],[\"企业资源计划\",{\"0\":{\"1868\":1},\"1\":{\"1868\":1}}],[\"企\",{\"1\":{\"1869\":1}}],[\"政府给企业颁发\",{\"1\":{\"1869\":1}}],[\"政府内部管理系统\",{\"1\":{\"1869\":1}}],[\"政府\",{\"1\":{\"1869\":1,\"1871\":1}}],[\"政府信息化与电子政务\",{\"0\":{\"1869\":1}}],[\"物体\",{\"1\":{\"2545\":1,\"2589\":1,\"2691\":1,\"2860\":1}}],[\"物体必须和当前被看到的摄像机共享至少一个层\",{\"1\":{\"2513\":1}}],[\"物化视图也会更新\",{\"1\":{\"2228\":1}}],[\"物化视图\",{\"0\":{\"2228\":1}}],[\"物理网格材质使用了更复杂的着色器功能\",{\"1\":{\"2737\":1}}],[\"物理网格材质\",{\"0\":{\"2736\":1}}],[\"物理网络设计是对逻辑网络设计的物理实现\",{\"1\":{\"2218\":1}}],[\"物理网络设计\",{\"0\":{\"2218\":1}}],[\"物理安全性\",{\"1\":{\"2101\":1}}],[\"物理退化\",{\"1\":{\"2089\":1}}],[\"物理像素\",{\"1\":{\"202\":1}}],[\"物联网分层架构\",{\"0\":{\"2036\":1}}],[\"物流\",{\"1\":{\"1879\":1}}],[\"物资\",{\"1\":{\"1873\":1}}],[\"物料需求计划\",{\"1\":{\"1868\":1}}],[\"办公设备\",{\"1\":{\"1867\":1}}],[\"办公自动化系统\",{\"0\":{\"1867\":1}}],[\"决策系统\",{\"1\":{\"1992\":1}}],[\"决策分析\",{\"1\":{\"1880\":1}}],[\"决策支持系统\",{\"0\":{\"1865\":1}}],[\"决定如何使用\",{\"1\":{\"565\":1}}],[\"决定\",{\"1\":{\"355\":1}}],[\"决定大小\",{\"1\":{\"207\":1}}],[\"辅助企业全面管理的信息系统\",{\"1\":{\"1864\":1}}],[\"辅助线程在执行垃圾回收的时候\",{\"1\":{\"1651\":2}}],[\"辅助线程能够在后台完成执行垃圾回收的操作\",{\"1\":{\"1651\":1}}],[\"联机实时处理\",{\"1\":{\"1863\":1}}],[\"联合类型通常与\",{\"1\":{\"1458\":1}}],[\"联合类型表示取值可以为多种类型中的一种\",{\"1\":{\"1458\":1}}],[\"联合类型的子类型\",{\"1\":{\"1366\":1}}],[\"联合类型\",{\"0\":{\"1457\":1,\"1458\":1},\"1\":{\"1341\":1,\"1343\":1},\"2\":{\"1462\":1}}],[\"批处理序列\",{\"1\":{\"1977\":1}}],[\"批处理\",{\"1\":{\"1863\":2}}],[\"批量更新\",{\"1\":{\"1199\":1}}],[\"批量复制方法\",{\"1\":{\"683\":1}}],[\"早期最初级的信息系统\",{\"1\":{\"1863\":1}}],[\"早期的\",{\"1\":{\"1201\":1}}],[\"演化式原型\",{\"1\":{\"1861\":1}}],[\"演示了使用这个\",{\"1\":{\"340\":1}}],[\"抛弃式原型\",{\"1\":{\"1861\":1}}],[\"抛出错误\",{\"1\":{\"1454\":3}}],[\"抛出异常\",{\"1\":{\"572\":1}}],[\"界面友好\",{\"1\":{\"2008\":1}}],[\"界面的视觉布局应该基于真实的世界的隐喻\",{\"1\":{\"1928\":1}}],[\"界面\",{\"1\":{\"1861\":1}}],[\"低耦合\",{\"1\":{\"1930\":1,\"1978\":1}}],[\"低\",{\"1\":{\"1860\":1}}],[\"低位补\",{\"1\":{\"606\":1}}],[\"粗粒度\",{\"1\":{\"1860\":1}}],[\"创新性原则\",{\"1\":{\"1856\":1}}],[\"创建该材质的一个浅拷贝\",{\"1\":{\"2767\":1}}],[\"创建此实例的克隆\",{\"1\":{\"2344\":1}}],[\"创建的对象的逻辑不是很复杂\",{\"1\":{\"1753\":1}}],[\"创建的对象数量较少\",{\"1\":{\"1753\":1}}],[\"创建的执行上下文如图所示\",{\"1\":{\"509\":1}}],[\"创建对象的逻辑分散在不同的工厂接口中\",{\"1\":{\"1752\":1}}],[\"创建对象的逻辑分布在不同的工厂类中\",{\"1\":{\"1752\":1}}],[\"创建对象的逻辑集中在单个工厂类中\",{\"1\":{\"1752\":1}}],[\"创建标签\",{\"0\":{\"1618\":1}}],[\"创建分支\",{\"0\":{\"1594\":1}}],[\"创建渲染\",{\"0\":{\"1558\":1}}],[\"创建虚拟dom文本\",{\"1\":{\"1527\":1}}],[\"创建虚拟dom元素\",{\"1\":{\"1527\":1}}],[\"创建虚拟\",{\"1\":{\"1520\":1}}],[\"创建watcher的核心\",{\"1\":{\"1491\":1}}],[\"创建映射表\",{\"1\":{\"1478\":1}}],[\"创建元素\",{\"1\":{\"1476\":1}}],[\"创建也很简单\",{\"1\":{\"1286\":1}}],[\"创建新的归档文件\",{\"1\":{\"1025\":1}}],[\"创建归档文件\",{\"1\":{\"1025\":1}}],[\"创建文件\",{\"1\":{\"983\":1,\"984\":1}}],[\"创建时间等\",{\"1\":{\"972\":1}}],[\"创建系统工作组\",{\"1\":{\"953\":1}}],[\"创建异步对象\",{\"1\":{\"864\":1,\"866\":1}}],[\"创建数组\",{\"1\":{\"679\":1}}],[\"创建执行上下文\",{\"0\":{\"509\":1}}],[\"创建了闭包\",{\"1\":{\"902\":1}}],[\"创建了哪些函数\",{\"1\":{\"502\":2}}],[\"创建了一个\",{\"1\":{\"434\":1}}],[\"创建实例化对象的时候\",{\"1\":{\"485\":1}}],[\"创建方式和普通函数没有区别\",{\"1\":{\"478\":1}}],[\"创建模块\",{\"1\":{\"465\":1}}],[\"创建符号时\",{\"1\":{\"316\":1}}],[\"创建一个环境光对象\",{\"1\":{\"2880\":1}}],[\"创建一个简单的矩形\",{\"1\":{\"2278\":1}}],[\"创建一个别名\",{\"1\":{\"1591\":1}}],[\"创建一个异步action\",{\"1\":{\"1168\":1}}],[\"创建一个经过\",{\"1\":{\"1025\":1}}],[\"创建一个新的聚光灯\",{\"1\":{\"2884\":1}}],[\"创建一个新的camera\",{\"1\":{\"2510\":1}}],[\"创建一个新的\",{\"1\":{\"2280\":1}}],[\"创建一个新的组\",{\"1\":{\"954\":1}}],[\"创建一个新对象\",{\"1\":{\"359\":1}}],[\"创建一个系统用户\",{\"1\":{\"945\":1}}],[\"创建一个非空\",{\"1\":{\"272\":1}}],[\"创建一个非空集合\",{\"1\":{\"271\":1}}],[\"创建一个空\",{\"1\":{\"272\":1}}],[\"创建一个空集合\",{\"1\":{\"271\":1}}],[\"创建一个\",{\"1\":{\"270\":1,\"864\":1,\"1167\":1,\"1168\":1,\"1217\":1,\"2329\":1}}],[\"创建一个对象\",{\"1\":{\"262\":1}}],[\"创建config\",{\"0\":{\"111\":1}}],[\"创建并导出store\",{\"1\":{\"83\":1}}],[\"创建项目\",{\"0\":{\"47\":1,\"1330\":1}}],[\"创建\",{\"0\":{\"388\":1,\"815\":1,\"1217\":1},\"1\":{\"19\":1,\"62\":1,\"338\":1,\"559\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1220\":1,\"1222\":1,\"1577\":1,\"1758\":1}}],[\"创建配置文件\",{\"0\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"知识的编辑求精及知识自学习\",{\"1\":{\"1866\":1}}],[\"知识获取\",{\"1\":{\"1866\":1}}],[\"知识库\",{\"1\":{\"1866\":1}}],[\"知识+推理=专家系统\",{\"1\":{\"1866\":1}}],[\"知识系统和问题处理系统3个互相关联的部分组成的\",{\"1\":{\"1865\":1}}],[\"知识驱动的\",{\"1\":{\"1855\":1}}],[\"知识维\",{\"0\":{\"1848\":1}}],[\"精益开发\",{\"1\":{\"1855\":1}}],[\"渐进迭代式开发\",{\"1\":{\"1855\":1}}],[\"部件及数据的集合\",{\"1\":{\"1961\":1}}],[\"部署简单\",{\"1\":{\"2077\":1}}],[\"部署图\",{\"0\":{\"1921\":1}}],[\"部署\",{\"1\":{\"1855\":1,\"1902\":1}}],[\"部分掉到下一行\",{\"1\":{\"159\":1}}],[\"部分的宽度\",{\"1\":{\"159\":1}}],[\"部分的最小宽度不能小于\",{\"1\":{\"159\":1}}],[\"部分\",{\"1\":{\"126\":1}}],[\"探索性研究\",{\"1\":{\"1854\":1}}],[\"探寻\",{\"1\":{\"1849\":1}}],[\"懂物理\",{\"1\":{\"1852\":1}}],[\"巨系统\",{\"1\":{\"1851\":1}}],[\"钱学森命名\",{\"1\":{\"1851\":1}}],[\"综合理论性能法\",{\"1\":{\"2170\":1}}],[\"综合使用成本也低\",{\"1\":{\"2047\":1}}],[\"综合考虑企业内外环境以集成为核心\",{\"1\":{\"1876\":1}}],[\"综合数据库\",{\"1\":{\"1866\":1}}],[\"综合集成法\",{\"0\":{\"1851\":1}}],[\"综上所述\",{\"1\":{\"1269\":1,\"1646\":1}}],[\"认证框架\",{\"0\":{\"2125\":1}}],[\"认证\",{\"1\":{\"2103\":1}}],[\"认为有效的软件开发需要3要素\",{\"1\":{\"1904\":1}}],[\"认为该\",{\"1\":{\"388\":1}}],[\"认识问题\",{\"1\":{\"1849\":1}}],[\"商业模式的变革\",{\"1\":{\"1889\":1}}],[\"商业智能\",{\"0\":{\"1880\":1},\"1\":{\"1878\":1,\"2051\":1}}],[\"商业\",{\"1\":{\"1848\":1}}],[\"商品\",{\"1\":{\"1752\":1}}],[\"研制阶段\",{\"1\":{\"1847\":1}}],[\"拟定方案\",{\"1\":{\"1847\":1}}],[\"谋求活动的规划与战略\",{\"1\":{\"1847\":1}}],[\"明明规则一般采用x\",{\"1\":{\"2109\":2}}],[\"明盒\",{\"1\":{\"1906\":1}}],[\"明事理\",{\"1\":{\"1852\":1}}],[\"明确问题\",{\"1\":{\"1846\":1}}],[\"明显简洁了不少\",{\"1\":{\"590\":1}}],[\"明显增加了代码的混乱程度\",{\"1\":{\"569\":1}}],[\"霍尔三维结构\",{\"0\":{\"1845\":1}}],[\"责任划分不清\",{\"1\":{\"1838\":1}}],[\"责任链模式可以将一个复杂的请求处理过程分散到多个处理者中\",{\"1\":{\"1837\":1}}],[\"责任链模式可以有效地减少对象间的耦合\",{\"1\":{\"1835\":1}}],[\"责任链模式让多个对象都有机会处理请求\",{\"1\":{\"1837\":1}}],[\"灵活的ip报文头部格式\",{\"1\":{\"2214\":1}}],[\"灵活性\",{\"1\":{\"1958\":1}}],[\"灵活性较强\",{\"1\":{\"1077\":1}}],[\"灵活分配责任\",{\"1\":{\"1837\":1}}],[\"职责链模式\",{\"0\":{\"1835\":1},\"2\":{\"1841\":1}}],[\"旋转几何体朝向控件中的一点\",{\"1\":{\"2311\":1}}],[\"旋转隐藏\",{\"1\":{\"1820\":1}}],[\"旋转显示\",{\"1\":{\"1820\":1}}],[\"滑动隐藏\",{\"1\":{\"1820\":1}}],[\"滑动显示\",{\"1\":{\"1820\":1}}],[\"滑动滑块就可以调节音频的音量和平移效果\",{\"1\":{\"338\":1}}],[\"⽆需了解哪些发布者存在\",{\"1\":{\"1810\":1}}],[\"⽆需了解哪些订阅者\",{\"1\":{\"1810\":1}}],[\"订阅者也可以在适当的时间订阅事件\",{\"1\":{\"1812\":1}}],[\"订阅者可以表达对⼀个或多个类别的兴趣\",{\"1\":{\"1810\":1}}],[\"订阅模式可能会导致事件流变得难以维护和理解\",{\"1\":{\"1813\":1}}],[\"订阅模式可能会存在性能问题\",{\"1\":{\"1813\":1}}],[\"订阅模式可以实现事件的广播\",{\"1\":{\"1812\":1}}],[\"订阅模式可以使发布者和订阅者之间解耦\",{\"1\":{\"1812\":1}}],[\"订阅模式在使用过程中需要手动管理订阅和取消订阅\",{\"1\":{\"1813\":1}}],[\"订阅模式支持动态添加新的订阅者和取消订阅者\",{\"1\":{\"1812\":1}}],[\"订阅模式支持异步操作\",{\"1\":{\"1812\":1}}],[\"订阅是⼀种消息范式\",{\"1\":{\"1810\":1}}],[\"订阅事件等\",{\"1\":{\"1243\":1}}],[\"筛选通知\",{\"1\":{\"1806\":1}}],[\"观察则会模式虽然实现了对象间依赖关系的低耦合\",{\"1\":{\"1806\":1}}],[\"观察者被动接收更新\",{\"1\":{\"1806\":1}}],[\"观察者通常是一些\",{\"1\":{\"1802\":1}}],[\"观察者是订阅了被观察者的状态变化\",{\"1\":{\"1802\":1}}],[\"观察者\",{\"1\":{\"1802\":2}}],[\"观察者模式将发布者与订阅者解耦\",{\"1\":{\"1804\":1}}],[\"观察者模式实现了发布者与订阅者之间的解耦\",{\"1\":{\"1804\":1}}],[\"观察者模式就是观察者和被观察者之间的通讯\",{\"1\":{\"1802\":1}}],[\"观察者模式属于行为型模式\",{\"1\":{\"1802\":1}}],[\"观察者模式是一种常用的设计模式\",{\"1\":{\"1802\":1}}],[\"观察者模式\",{\"0\":{\"1801\":1},\"1\":{\"1802\":1},\"2\":{\"1808\":1}}],[\"观测数组的返回值就是对应数组的observer实例对象\",{\"1\":{\"1563\":1}}],[\"观测值\",{\"1\":{\"1534\":1,\"1535\":1}}],[\"额外逻辑的执行等\",{\"1\":{\"1797\":1}}],[\"额外的选项\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"额外的检查\",{\"1\":{\"1454\":1}}],[\"拦截器\",{\"1\":{\"1794\":1}}],[\"屏蔽外界对策略的直接调用\",{\"1\":{\"1784\":1}}],[\"屏幕\",{\"1\":{\"201\":1,\"1061\":4}}],[\"屏幕覆盖的\",{\"1\":{\"201\":2}}],[\"⽬的就是将策略的实现和使用分离\",{\"1\":{\"1784\":1}}],[\"蒙层调用有两种形式\",{\"1\":{\"1766\":1}}],[\"层次化网络设计\",{\"0\":{\"2219\":1}}],[\"层次化存储结构\",{\"0\":{\"2140\":1}}],[\"层次组装\",{\"1\":{\"1900\":1}}],[\"层级众多\",{\"1\":{\"1752\":1}}],[\"层层遍历一直到value不是对象才停止\",{\"1\":{\"1534\":1}}],[\"产品配置是指一个产品在其生命周期各个阶段所产生的各种形式\",{\"1\":{\"1961\":1}}],[\"产品运行\",{\"1\":{\"1958\":1}}],[\"产品转移\",{\"1\":{\"1958\":1}}],[\"产品修改\",{\"1\":{\"1958\":1}}],[\"产品设计\",{\"1\":{\"1873\":1}}],[\"产品设计中使用计算机辅助设计系统\",{\"1\":{\"1873\":1}}],[\"产品设计开发期间\",{\"1\":{\"1850\":1}}],[\"产品种类\",{\"1\":{\"1752\":1}}],[\"产生了\",{\"1\":{\"376\":1}}],[\"偏平化扩展\",{\"1\":{\"1752\":1}}],[\"餐馆就相当于工厂\",{\"1\":{\"1747\":1}}],[\"严重浪费了服务器端和客户端的资源\",{\"1\":{\"1737\":1}}],[\"严格定义法\",{\"1\":{\"1923\":1}}],[\"严格定义模块接口\",{\"1\":{\"442\":1}}],[\"严格串行化\",{\"1\":{\"1895\":1}}],[\"严格区分阶段\",{\"1\":{\"1895\":1}}],[\"严格区分大小写\",{\"1\":{\"909\":1}}],[\"严格的数据交换标准\",{\"1\":{\"1879\":1}}],[\"严格的类型检查选项\",{\"1\":{\"1454\":1}}],[\"严格地说\",{\"1\":{\"1737\":1}}],[\"严格相等\",{\"0\":{\"708\":1}}],[\"严格模式不允许\",{\"1\":{\"353\":1}}],[\"严格模式下为\",{\"1\":{\"352\":1}}],[\"长距离\",{\"1\":{\"2186\":1}}],[\"长轮询的缺点在于\",{\"1\":{\"1737\":1}}],[\"长轮询的基本思路\",{\"1\":{\"1737\":1}}],[\"长轮询和短轮询比起来\",{\"1\":{\"1737\":1}}],[\"长轮询\",{\"0\":{\"1737\":1}}],[\"长连接多长时间没有通信自动断开\",{\"1\":{\"1153\":1}}],[\"于其前\",{\"1\":{\"1730\":1}}],[\"于是就向客户端发出确认报文段\",{\"1\":{\"1727\":1}}],[\"于是客户端再重传一次连接请求\",{\"1\":{\"1727\":1}}],[\"于是在\",{\"1\":{\"467\":1}}],[\"于是清理浮动就显着至关重要\",{\"1\":{\"179\":1}}],[\"封锁协议\",{\"0\":{\"2260\":1}}],[\"封闭原则\",{\"1\":{\"1937\":1}}],[\"封包\",{\"1\":{\"1730\":1}}],[\"封装上下文\",{\"1\":{\"1784\":1}}],[\"封装的策略算法一般是独立的\",{\"1\":{\"1784\":1}}],[\"封装性好\",{\"1\":{\"1750\":1}}],[\"封装之后就可以这样使用\",{\"1\":{\"590\":1}}],[\"封装前一个promise失败时执行的函数\",{\"1\":{\"581\":1}}],[\"封装前一个promise成功时执行的函数\",{\"1\":{\"581\":1}}],[\"封装了不同操作系统一些底层特性\",{\"1\":{\"378\":1}}],[\"封装\",{\"0\":{\"128\":1}}],[\"拆包是⽬前业内常⻅的解决⽅案了\",{\"1\":{\"1730\":1}}],[\"拆包\",{\"1\":{\"1730\":1}}],[\"纯对象\",{\"1\":{\"2020\":1}}],[\"纯属⾃废武功\",{\"1\":{\"1730\":1}}],[\"纯文本文档\",{\"1\":{\"388\":1}}],[\"⽅法来关闭\",{\"1\":{\"1730\":1}}],[\"⽽是将发布的消息分为不同的类别\",{\"1\":{\"1810\":1}}],[\"⽽对于处理粘包的问题\",{\"1\":{\"1730\":1}}],[\"⽽async\",{\"1\":{\"596\":1}}],[\"⼀次性接收到了\",{\"1\":{\"1730\":1}}],[\"⼀个函数的执⾏上下⽂\",{\"1\":{\"351\":1}}],[\"余下的部分以及\",{\"1\":{\"1730\":1}}],[\"余种\",{\"1\":{\"817\":1}}],[\"故障发生前已提交的事务\",{\"1\":{\"2267\":1}}],[\"故障发生时未完成的事务\",{\"1\":{\"2267\":1}}],[\"故需要四次挥手\",{\"1\":{\"1729\":1}}],[\"故最后返回结果为\",{\"1\":{\"577\":1}}],[\"终止等待2\",{\"1\":{\"1728\":1}}],[\"终止等待1\",{\"1\":{\"1728\":1}}],[\"终止于相关变量声明的一行\",{\"1\":{\"898\":1}}],[\"刚开始双方都处于\",{\"1\":{\"1728\":1}}],[\"刚开始客户端处于\",{\"1\":{\"1726\":1}}],[\"浪费资源\",{\"1\":{\"1727\":1}}],[\"序列模式分析\",{\"1\":{\"1882\":1}}],[\"序列化的结果会变成\",{\"1\":{\"763\":1}}],[\"序号seq=w\",{\"1\":{\"1728\":1}}],[\"序号seq=v\",{\"1\":{\"1728\":1}}],[\"序号seq=u\",{\"1\":{\"1728\":1}}],[\"序号seq=x+1\",{\"1\":{\"1726\":1}}],[\"段式与页式的综合体\",{\"1\":{\"2162\":1}}],[\"段式存储\",{\"0\":{\"2161\":1}}],[\"段页式存储\",{\"0\":{\"2162\":1}}],[\"段的长度可以不一样\",{\"1\":{\"2161\":1}}],[\"段的发送速率\",{\"1\":{\"1724\":1}}],[\"段\",{\"1\":{\"1724\":1}}],[\"送但确认的报文段\",{\"1\":{\"1724\":1}}],[\"送报文时\",{\"1\":{\"1724\":1}}],[\"果还有已发送但没有确认的报文段\",{\"1\":{\"1724\":1}}],[\"窗口大小的单位是字节\",{\"1\":{\"1723\":1}}],[\"窗口大小变化\",{\"1\":{\"1290\":1}}],[\"拥塞避免未必能够完全避免拥塞\",{\"1\":{\"1720\":1}}],[\"拥塞避免\",{\"0\":{\"1720\":1},\"1\":{\"1718\":1}}],[\"拥有的\",{\"1\":{\"2125\":1}}],[\"拥有对不同类型项目非常有效的敏捷过程\",{\"1\":{\"1904\":1}}],[\"拥有调用变量值\",{\"1\":{\"1089\":1}}],[\"拥有迭代器的对象还包括\",{\"1\":{\"286\":1,\"678\":1}}],[\"慢开始\",{\"0\":{\"1719\":1},\"1\":{\"1718\":1}}],[\"慢启动\",{\"0\":{\"1719\":1},\"1\":{\"1718\":1}}],[\"远端面\",{\"1\":{\"2577\":1}}],[\"远地主机的运输层在接收到udp报文后\",{\"1\":{\"1716\":1}}],[\"远程服务器负责维护服务器上的数据库数据\",{\"1\":{\"2195\":1}}],[\"远程登录\",{\"1\":{\"1715\":1}}],[\"远程分支到所在的分支\",{\"1\":{\"1609\":1}}],[\"远程仓库地址\",{\"1\":{\"1607\":1}}],[\"远程操作\",{\"0\":{\"1605\":1}}],[\"远程终端欢迎信息etc\",{\"1\":{\"1125\":1}}],[\"远程\",{\"1\":{\"393\":1}}],[\"速度要求高\",{\"1\":{\"1715\":1}}],[\"速度会比较快\",{\"1\":{\"1579\":1}}],[\"准确地理解构件至关重要\",{\"1\":{\"2028\":1}}],[\"准确高要求高\",{\"1\":{\"1715\":1}}],[\"准确来说就是从一个类似数组的可迭代对象中创建一个新的数组实例\",{\"1\":{\"286\":1,\"678\":1}}],[\"缓冲⼤⼩⻅\",{\"1\":{\"1730\":1}}],[\"缓解拥塞\",{\"1\":{\"1713\":1}}],[\"缓存降级\",{\"0\":{\"2075\":1}}],[\"缓存更新\",{\"0\":{\"2074\":1}}],[\"缓存预热\",{\"0\":{\"2073\":1}}],[\"缓存穿透\",{\"0\":{\"2072\":1}}],[\"缓存雪崩\",{\"0\":{\"2071\":1}}],[\"缓存技术对比\",{\"0\":{\"2063\":1}}],[\"缓存与数据库的数据一致性问题\",{\"0\":{\"2062\":1}}],[\"缓存数据等\",{\"1\":{\"1796\":1}}],[\"缓存代理\",{\"1\":{\"1794\":1,\"1798\":1}}],[\"缓存函数\",{\"0\":{\"1268\":1}}],[\"缓存组件的作用是一样的\",{\"1\":{\"1267\":1}}],[\"缓存组件\",{\"0\":{\"1267\":1}}],[\"缓存仍然保留\",{\"1\":{\"433\":1}}],[\"缓存\",{\"0\":{\"433\":1,\"1686\":1},\"1\":{\"2054\":1}}],[\"误码靠的是tcp的段编号以及确认号\",{\"1\":{\"1713\":1}}],[\"流式数据\",{\"1\":{\"1977\":1}}],[\"流程级发展阶段\",{\"1\":{\"1889\":1}}],[\"流程如下\",{\"1\":{\"119\":1}}],[\"流量控制就是为了让发送方发送数据的速度不要太快\",{\"1\":{\"1723\":1}}],[\"流就是指不间断的数据结构\",{\"1\":{\"1713\":1}}],[\"面片索引\",{\"1\":{\"2277\":1}}],[\"面对异常的抵御能力\",{\"1\":{\"2053\":1}}],[\"面向企业内部提供云计算服务\",{\"1\":{\"2050\":1}}],[\"面向企业经营管理的层级\",{\"1\":{\"1890\":1}}],[\"面向互联网用户需求\",{\"1\":{\"2050\":1}}],[\"面向需求\",{\"1\":{\"2025\":1}}],[\"面向对象的组装\",{\"1\":{\"2028\":1}}],[\"面向对象设计\",{\"0\":{\"1934\":1}}],[\"面向对象法\",{\"0\":{\"1859\":1}}],[\"面向工厂或车间生产管理的层级\",{\"1\":{\"1890\":1}}],[\"面向用户服务的\",{\"1\":{\"1866\":1}}],[\"面向服务的方法\",{\"0\":{\"1860\":1}}],[\"面向字节流\",{\"1\":{\"1713\":1}}],[\"面向连接\",{\"1\":{\"1713\":2}}],[\"面向报文\",{\"1\":{\"1712\":1}}],[\"面向无连接\",{\"1\":{\"1712\":1}}],[\"面板查看生成的cookie\",{\"1\":{\"1659\":1}}],[\"仍继续解析\",{\"1\":{\"1707\":1}}],[\"仍然使传统的子程序调用与参数传递\",{\"1\":{\"2028\":1}}],[\"仍然有一些特殊情况下\",{\"1\":{\"1201\":1}}],[\"仍然显示信息\",{\"1\":{\"1009\":1}}],[\"仍然会查找当前作用域\",{\"1\":{\"895\":1}}],[\"仍然会存在于全局对象中\",{\"1\":{\"428\":1}}],[\"仍然指向\",{\"1\":{\"353\":1}}],[\"仍然是\",{\"1\":{\"334\":1}}],[\"千万不要过度层叠\",{\"1\":{\"1706\":1}}],[\"千万别动这玩意\",{\"1\":{\"1153\":1}}],[\"身份信息等\",{\"1\":{\"1696\":1}}],[\"广域网\",{\"1\":{\"2203\":1}}],[\"广义角度\",{\"1\":{\"2179\":1}}],[\"广播域定义\",{\"1\":{\"2220\":1}}],[\"广播帧和组播帧向所有端口\",{\"1\":{\"2208\":1}}],[\"广播电视部门\",{\"1\":{\"2111\":1}}],[\"广播通信\",{\"1\":{\"1715\":1}}],[\"广播的功能\",{\"1\":{\"1712\":2}}],[\"广播\",{\"1\":{\"1692\":1,\"1715\":1}}],[\"广告\",{\"1\":{\"1658\":1}}],[\"帧\",{\"1\":{\"1692\":1}}],[\"协调者才能做出全局提交决定\",{\"1\":{\"2235\":1}}],[\"协调者就必须做出全局撤销决定\",{\"1\":{\"2235\":1}}],[\"协调各局部dbm的工作\",{\"1\":{\"2229\":1}}],[\"协调并进行活动等工作\",{\"1\":{\"2187\":1}}],[\"协作图\",{\"0\":{\"1916\":1}}],[\"协同层\",{\"1\":{\"1890\":1}}],[\"协议标识符是ws\",{\"1\":{\"1736\":1}}],[\"协议的可靠传输机制更像是窗口滑动协议和选择重传协议的一个混合体\",{\"1\":{\"1724\":1}}],[\"协议并不完全和滑动窗口协议相同\",{\"1\":{\"1724\":1}}],[\"协议在发送方维持了一个发送窗口\",{\"1\":{\"1724\":1}}],[\"协议和滑动窗口协议的\",{\"1\":{\"1724\":1}}],[\"协议\",{\"1\":{\"1692\":1}}],[\"协议查询它的\",{\"1\":{\"1691\":1}}],[\"协程不是被操作系统内核所管理\",{\"1\":{\"589\":1}}],[\"协程的父协程\",{\"1\":{\"589\":1}}],[\"协程称为\",{\"1\":{\"589\":1}}],[\"协程启动\",{\"1\":{\"589\":1}}],[\"协程中启动\",{\"1\":{\"589\":1}}],[\"协程恢复执行\",{\"1\":{\"589\":1}}],[\"协程暂停执行\",{\"1\":{\"589\":1}}],[\"协程就需要将主线程的控制权交给\",{\"1\":{\"589\":1}}],[\"协程\",{\"1\":{\"589\":5}}],[\"协程是\",{\"1\":{\"589\":1}}],[\"路由器发送时延大于交换机\",{\"1\":{\"2201\":1}}],[\"路由器也有自己的缓存\",{\"1\":{\"1685\":1}}],[\"路由器缓存\",{\"0\":{\"1685\":1}}],[\"路径测试覆盖最强\",{\"1\":{\"1939\":1}}],[\"路径等\",{\"1\":{\"1696\":1}}],[\"路径下的某个文件👇\",{\"1\":{\"1153\":1}}],[\"路径\",{\"1\":{\"464\":1,\"1006\":2,\"1119\":1,\"1659\":1}}],[\"路径或文件名\",{\"1\":{\"218\":1}}],[\"俗称网址\",{\"1\":{\"1677\":1}}],[\"储存空间大\",{\"1\":{\"1670\":1}}],[\"储存后离开\",{\"1\":{\"1067\":1}}],[\"受到同源限制\",{\"1\":{\"1670\":1}}],[\"拖拽api和数据uri中加载资源文件\",{\"1\":{\"2477\":1}}],[\"拖慢网页的表现\",{\"1\":{\"1670\":1}}],[\"拖放区域用于响应放置操作并从放置的项目中提取信息\",{\"1\":{\"392\":1}}],[\"攻击\",{\"1\":{\"1661\":1}}],[\"携带cookie信息根本没有用\",{\"1\":{\"1660\":1}}],[\"跑来跑去\",{\"1\":{\"1660\":1}}],[\"缺省值\",{\"1\":{\"2852\":1,\"2853\":1}}],[\"缺乏自动化能力的微服务\",{\"1\":{\"2055\":1}}],[\"缺陷\",{\"0\":{\"1660\":1},\"1\":{\"1949\":1}}],[\"缺点是这种方式由于需要不断的建立ht帅连接\",{\"1\":{\"1737\":1}}],[\"缺点也很明显\",{\"1\":{\"1730\":1}}],[\"缺点其实和原型式继承一样\",{\"1\":{\"492\":1}}],[\"缺点\",{\"0\":{\"179\":1,\"485\":1,\"487\":1,\"489\":1,\"491\":1,\"493\":1,\"1751\":1,\"1770\":1,\"1788\":1,\"1797\":1,\"1805\":1,\"1813\":1,\"1838\":1,\"1979\":1,\"1983\":1,\"1987\":1},\"1\":{\"159\":1,\"204\":1,\"205\":1,\"207\":1,\"208\":1,\"859\":1,\"1534\":1,\"1646\":2,\"1806\":1,\"1820\":1,\"1839\":1,\"1895\":1,\"1899\":1,\"1906\":1,\"1956\":1,\"2160\":1,\"2161\":1,\"2162\":1}}],[\"域\",{\"1\":{\"1659\":1}}],[\"域名系统\",{\"1\":{\"2211\":1}}],[\"域名\",{\"1\":{\"218\":1,\"855\":1,\"860\":1,\"1696\":1}}],[\"见下面例子\",{\"1\":{\"1659\":1}}],[\"记为ks\",{\"1\":{\"2106\":1}}],[\"记为o\",{\"1\":{\"2106\":1}}],[\"记为s\",{\"1\":{\"2106\":1}}],[\"记住密码\",{\"1\":{\"1658\":1}}],[\"记录\",{\"1\":{\"1889\":1}}],[\"记录用户浏览数据\",{\"1\":{\"1658\":1}}],[\"记录有多少dep依赖它\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"记录promise状态\",{\"1\":{\"584\":1}}],[\"记录传进来的参数中每个\",{\"1\":{\"323\":1,\"576\":1}}],[\"活动的总时差等于该活动最迟完成时间与最早完成时间之差\",{\"1\":{\"1955\":1}}],[\"活动图\",{\"0\":{\"1918\":1}}],[\"活动对象\",{\"1\":{\"1650\":1}}],[\"活动事件侦听器将防止在其范围内捕获的所有变量被垃圾收集\",{\"1\":{\"432\":1}}],[\"恢复能力和反击能力\",{\"1\":{\"2121\":1}}],[\"恢复和反击\",{\"1\":{\"2121\":1}}],[\"恢复到一个已知的正确状态中去\",{\"1\":{\"2095\":1}}],[\"恢复块方法\",{\"0\":{\"2094\":1}}],[\"恢复时直接从灰色的节点开始继续执行就可以\",{\"1\":{\"1650\":1}}],[\"恢复删除内容\",{\"0\":{\"1615\":1}}],[\"十二面缓冲几何体\",{\"0\":{\"2362\":1}}],[\"十个人\",{\"1\":{\"1649\":1}}],[\"十六进制的基是\",{\"1\":{\"662\":1}}],[\"十六进制\",{\"1\":{\"127\":2}}],[\"策略路由\",{\"1\":{\"2220\":1}}],[\"策略和技术\",{\"1\":{\"2121\":1}}],[\"策略相互独立\",{\"1\":{\"1788\":1}}],[\"策略可以很方便的进行扩展\",{\"1\":{\"1787\":1}}],[\"策略之间相互独立\",{\"1\":{\"1787\":1}}],[\"策略\",{\"1\":{\"1646\":1,\"1784\":1}}],[\"策略模式可以⽤来封装⼀系列的\",{\"1\":{\"1785\":1}}],[\"策略模式中主要有下面概念\",{\"1\":{\"1784\":1}}],[\"策略模式根据输入来调整采用哪个算法\",{\"1\":{\"1784\":1}}],[\"策略模式\",{\"0\":{\"1783\":1},\"1\":{\"1485\":2,\"1784\":1},\"2\":{\"1791\":1}}],[\"增强可扩展性\",{\"1\":{\"1837\":1}}],[\"增强安全性\",{\"1\":{\"1796\":1}}],[\"增强了代码的可维护性和可读性\",{\"1\":{\"1796\":1}}],[\"增量备份\",{\"1\":{\"2266\":1}}],[\"增量迭代\",{\"1\":{\"1903\":1}}],[\"增量标记可能会降低应用程序的吞吐量\",{\"1\":{\"1650\":1}}],[\"增量标记与惰性清理的出现\",{\"1\":{\"1650\":1}}],[\"增量标记与惰性清理的优缺\",{\"1\":{\"1650\":1}}],[\"增量标记与懒性清理\",{\"0\":{\"1650\":1}}],[\"增量回收使用\",{\"1\":{\"1650\":1}}],[\"增量中修改引用\",{\"1\":{\"1650\":2}}],[\"增量就是将一次\",{\"1\":{\"1650\":1}}],[\"增量收集\",{\"1\":{\"1641\":1}}],[\"增加复杂性\",{\"1\":{\"1797\":1}}],[\"增加复杂度\",{\"1\":{\"1751\":1}}],[\"增加可维护性\",{\"1\":{\"1787\":1}}],[\"增加代码的复杂性\",{\"1\":{\"1813\":1}}],[\"增加代码的复杂性和耦合度\",{\"1\":{\"1763\":1}}],[\"增加代码混乱度的问题\",{\"1\":{\"569\":1}}],[\"增加了系统开销\",{\"1\":{\"2160\":1}}],[\"增加了代码量\",{\"1\":{\"1751\":1}}],[\"增加了性能开销\",{\"1\":{\"1269\":1}}],[\"增加异步队列的机制\",{\"1\":{\"1540\":1}}],[\"增加一个新的元素\",{\"1\":{\"271\":1,\"272\":1}}],[\"增加测试\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"旧的\",{\"1\":{\"1641\":1}}],[\"问题在于除了编译器编译一个模块或包生成的资源外\",{\"1\":{\"2020\":1}}],[\"问题分析和变更描述\",{\"1\":{\"1926\":1}}],[\"问题出在后半段\",{\"1\":{\"1637\":1}}],[\"问题就是如何判断一个对象是不是数组\",{\"1\":{\"681\":1}}],[\"美化日志\",{\"0\":{\"1630\":1}}],[\"拉取标签\",{\"0\":{\"1622\":1}}],[\"拉拉在吃饭\",{\"1\":{\"495\":1}}],[\"拉拉\",{\"1\":{\"359\":1,\"490\":2,\"492\":2,\"495\":2}}],[\"展示标签\",{\"0\":{\"1617\":1}}],[\"展示区域\",{\"1\":{\"1256\":1}}],[\"签名并验证\",{\"1\":{\"1616\":1}}],[\"电子商务主要有2类角色\",{\"1\":{\"1888\":1}}],[\"电子商务\",{\"0\":{\"1888\":1}}],[\"电子政务主要有3类角色\",{\"1\":{\"1869\":1}}],[\"电子邮件地址\",{\"1\":{\"1616\":1}}],[\"电池状态等的地方\",{\"1\":{\"339\":1}}],[\"附注标签\",{\"1\":{\"1616\":1}}],[\"附属组列表\",{\"1\":{\"941\":1}}],[\"轻量标签\",{\"1\":{\"1616\":1}}],[\"处于\",{\"1\":{\"1728\":1}}],[\"处于p协议的上一层\",{\"1\":{\"1712\":1}}],[\"处\",{\"1\":{\"1615\":1}}],[\"处理当前的渲染环境\",{\"1\":{\"2819\":1}}],[\"处理材质\",{\"1\":{\"2687\":1}}],[\"处理时延\",{\"1\":{\"2201\":1}}],[\"处理器\",{\"1\":{\"2179\":1}}],[\"处理一次请求所需的全部信息\",{\"1\":{\"2078\":1}}],[\"处理来自于模型的事件和模型逻辑执行的结果\",{\"1\":{\"2031\":1}}],[\"处理功能\",{\"1\":{\"1933\":1}}],[\"处理和利用\",{\"1\":{\"1869\":1}}],[\"处理大量具有相同属性的小对象\",{\"1\":{\"1748\":1}}],[\"处理attrs属性\",{\"1\":{\"1551\":1}}],[\"处理\",{\"1\":{\"1478\":1,\"1653\":1,\"1883\":1}}],[\"处理新评论的提交\",{\"1\":{\"1211\":1}}],[\"处理在别处定义的\",{\"1\":{\"1168\":1}}],[\"处理指定目录以及其子目录下的所有文件\",{\"1\":{\"1035\":1}}],[\"处理了所有转换情况\",{\"1\":{\"806\":1}}],[\"处理请求的时间为30毫秒\",{\"1\":{\"2010\":1}}],[\"处理请求\",{\"0\":{\"1696\":1},\"1\":{\"575\":1,\"1676\":1}}],[\"处理的问题都是\",{\"1\":{\"565\":1}}],[\"处理方法其实有很多\",{\"1\":{\"151\":1}}],[\"处理搜索结果\",{\"1\":{\"128\":1}}],[\"某个日期之前\",{\"1\":{\"1626\":1}}],[\"某个日期之后\",{\"1\":{\"1626\":1}}],[\"某几次提交\",{\"1\":{\"1602\":1}}],[\"某一个人的电脑损坏不会影响到协作的其他人\",{\"1\":{\"1580\":1}}],[\"仓库风格\",{\"0\":{\"1993\":1}}],[\"仓库名称\",{\"1\":{\"1607\":1}}],[\"仓库\",{\"1\":{\"1583\":1}}],[\"集中与自治共享结合的控制结构\",{\"1\":{\"2229\":1}}],[\"集中式管理\",{\"1\":{\"1752\":1}}],[\"集中式版本控制系统的缺点就是必须联网才能使用\",{\"1\":{\"1579\":1}}],[\"集中式版本控制系统\",{\"0\":{\"1579\":1},\"1\":{\"1579\":1}}],[\"集中式版本控制和分布式版本控制\",{\"1\":{\"1578\":1}}],[\"集线功能\",{\"1\":{\"2207\":1}}],[\"集成在单一芯片上\",{\"1\":{\"2179\":1}}],[\"集成测试\",{\"0\":{\"1941\":1},\"1\":{\"1940\":1}}],[\"集成\",{\"1\":{\"1868\":1,\"1874\":1}}],[\"集团化大厂\",{\"1\":{\"1752\":1}}],[\"集合为候选键\",{\"1\":{\"2246\":1}}],[\"集合数据中的项\",{\"1\":{\"1832\":1}}],[\"集合实现了\",{\"1\":{\"271\":1}}],[\"集合\",{\"0\":{\"271\":1,\"842\":1},\"1\":{\"271\":1,\"719\":1,\"839\":1,\"1832\":1}}],[\"助力于多人协作同步进行大型项目开发\",{\"1\":{\"1578\":1}}],[\"维护工作就交给了\",{\"1\":{\"1577\":1}}],[\"维护了一个栈结构\",{\"1\":{\"510\":1}}],[\"稍后存放计算属性的\",{\"1\":{\"1569\":1}}],[\"稍后让watcher执行\",{\"1\":{\"1493\":1}}],[\"刷新页面\",{\"1\":{\"1558\":1}}],[\"截取剩余的字符串\",{\"1\":{\"1550\":1}}],[\"截取html字符串\",{\"1\":{\"1550\":1}}],[\"截取字符串\",{\"0\":{\"527\":1}}],[\"思考\",{\"1\":{\"1534\":1}}],[\"思路\",{\"1\":{\"767\":1,\"1719\":1,\"1720\":1}}],[\"思路和第一种递归方法是一样的\",{\"1\":{\"736\":1}}],[\"咱们这里只考虑普通文本和变量表达式\",{\"1\":{\"1551\":1}}],[\"咱们这里主要写了对于开始标签里面的属性的处理\",{\"1\":{\"1550\":1}}],[\"咱们传入的\",{\"1\":{\"1547\":1}}],[\"咱们主要关注\",{\"1\":{\"1533\":1}}],[\"咱们可以看出\",{\"1\":{\"1533\":1}}],[\"没啥特别的\",{\"1\":{\"1533\":1}}],[\"没有镜面高光\",{\"1\":{\"2593\":1}}],[\"没有设置过\",{\"1\":{\"2288\":1}}],[\"没有程序就没有进程\",{\"1\":{\"2151\":1}}],[\"没有中心节点\",{\"1\":{\"2133\":1}}],[\"没有接口\",{\"1\":{\"1770\":1}}],[\"没有同源限制\",{\"1\":{\"1736\":1}}],[\"没有则向\",{\"1\":{\"1684\":1}}],[\"没有则调用系统库函数进行查询\",{\"1\":{\"1683\":1}}],[\"没有清理的\",{\"1\":{\"1653\":1}}],[\"没有到达的元素就可以判断为非活动对象\",{\"1\":{\"1648\":1}}],[\"没有了引用关系\",{\"1\":{\"1644\":1}}],[\"没有单点故障\",{\"1\":{\"1581\":1}}],[\"没有区别\",{\"1\":{\"1429\":1}}],[\"没有就再找\",{\"1\":{\"1357\":1}}],[\"没有前一个值\",{\"1\":{\"1283\":1}}],[\"没有添加依赖数组\",{\"1\":{\"1244\":1}}],[\"没有经过定义\",{\"1\":{\"896\":1}}],[\"没有返回值\",{\"1\":{\"879\":1}}],[\"没有被执行\",{\"1\":{\"578\":1}}],[\"没有块级作用域\",{\"1\":{\"501\":1}}],[\"没有明确的异步任务去执行\",{\"1\":{\"376\":1}}],[\"今天只介绍初次渲染的逻辑\",{\"1\":{\"1528\":1}}],[\"今年$\",{\"1\":{\"864\":1,\"865\":1,\"866\":1}}],[\"真实节点\",{\"1\":{\"1528\":1}}],[\"真实的el选项赋值给实例的$el属性\",{\"1\":{\"1526\":1}}],[\"真正更新前\",{\"1\":{\"1235\":1}}],[\"真正的触发更新\",{\"1\":{\"1540\":1}}],[\"真正的应用场景不仅于此\",{\"1\":{\"1209\":1}}],[\"真正的目标节点正在处理事件的阶段\",{\"1\":{\"234\":1}}],[\"章节重点分析\",{\"1\":{\"1511\":1}}],[\"章节看过的相同操作\",{\"1\":{\"1418\":1}}],[\"混合源\",{\"1\":{\"2644\":1}}],[\"混合模式所有可能的取值请参阅constants\",{\"1\":{\"2643\":1}}],[\"混合方程式所有可能的取值请参阅constants\",{\"1\":{\"2641\":1}}],[\"混合目标\",{\"1\":{\"2639\":1}}],[\"混合分片\",{\"1\":{\"2232\":1}}],[\"混合云\",{\"1\":{\"2050\":1}}],[\"混合生命周期\",{\"1\":{\"1492\":1,\"1528\":1,\"1543\":1}}],[\"混淆的首字母大写的\",{\"1\":{\"1430\":1}}],[\"入口\",{\"2\":{\"1523\":1}}],[\"入口分析\",{\"0\":{\"1497\":1}}],[\"入口方法\",{\"1\":{\"1492\":1,\"1527\":1,\"1528\":1,\"1543\":1}}],[\"入门\",{\"0\":{\"188\":1,\"1585\":1}}],[\"侦听属性初始化\",{\"0\":{\"1491\":1},\"1\":{\"1491\":1}}],[\"侦听器属性原理\",{\"0\":{\"1490\":1},\"2\":{\"1496\":1}}],[\"乱序比对\",{\"1\":{\"1478\":1}}],[\"头部开销小\",{\"1\":{\"1712\":1}}],[\"头部移动到尾部\",{\"1\":{\"1478\":1}}],[\"头头\",{\"1\":{\"1478\":1}}],[\"头头比较\",{\"1\":{\"1478\":2}}],[\"头尾\",{\"1\":{\"1478\":2}}],[\"头尾比较\",{\"1\":{\"1478\":2}}],[\"尾头\",{\"1\":{\"1478\":2}}],[\"尾头比较\",{\"1\":{\"1478\":2}}],[\"尾尾\",{\"1\":{\"1478\":2}}],[\"尾尾比较\",{\"1\":{\"1478\":1}}],[\"尾巴移动到头部\",{\"1\":{\"1478\":1}}],[\"尾部\",{\"1\":{\"1478\":1}}],[\"儿子中没有\",{\"1\":{\"1485\":1}}],[\"儿子有父亲没有\",{\"1\":{\"1485\":1}}],[\"儿子没有\",{\"1\":{\"1485\":1}}],[\"儿子倒叙正序\",{\"1\":{\"1478\":1}}],[\"儿子比较氛围一下几种情况\",{\"1\":{\"1476\":1}}],[\"双面\",{\"1\":{\"2674\":1}}],[\"双面透明对象是否应该用单次传递渲染\",{\"1\":{\"2654\":1}}],[\"双栈技术通过节点对ipv4和ipv6双协议栈的支持\",{\"1\":{\"2215\":1}}],[\"双协议栈技术\",{\"1\":{\"2215\":1}}],[\"双机容错\",{\"0\":{\"2096\":1}}],[\"双生命周期模型\",{\"0\":{\"2015\":1}}],[\"双方已建立起了连接\",{\"1\":{\"1726\":1}}],[\"双方都有儿子\",{\"1\":{\"1476\":1}}],[\"双引号\",{\"1\":{\"1089\":1}}],[\"拿老的虚拟节点和新的虚拟节点做对比\",{\"1\":{\"1476\":1}}],[\"拿到属性对应的watcher\",{\"1\":{\"1570\":1}}],[\"拿到上一个watcher\",{\"1\":{\"1562\":1}}],[\"拿到\",{\"1\":{\"1372\":1}}],[\"拿到了\",{\"1\":{\"1220\":1}}],[\"拿到设备\",{\"1\":{\"119\":1}}],[\"报警服务\",{\"1\":{\"1869\":1}}],[\"报文的序列号值\",{\"1\":{\"1728\":2}}],[\"报文中会指定一个序列号\",{\"1\":{\"1728\":1}}],[\"报文作为应答\",{\"1\":{\"1726\":1,\"1728\":1}}],[\"报文之后才会进入\",{\"1\":{\"1728\":1}}],[\"报文之后\",{\"1\":{\"1726\":3,\"1728\":1}}],[\"报文后\",{\"1\":{\"1696\":1}}],[\"报文\",{\"1\":{\"1689\":1,\"1726\":3,\"1728\":3}}],[\"报告\",{\"1\":{\"1454\":2}}],[\"报错\",{\"1\":{\"653\":3,\"662\":2,\"1370\":1,\"1430\":1}}],[\"毕竟程序不能像人一样思考\",{\"1\":{\"1443\":1}}],[\"毕竟我们不知道变量\",{\"1\":{\"1418\":1}}],[\"似乎是小\",{\"1\":{\"1431\":1}}],[\"赋给\",{\"1\":{\"1430\":1}}],[\"赋给类型\",{\"1\":{\"1430\":1}}],[\"赋值给一个显示声明的\",{\"1\":{\"1416\":1}}],[\"赋值给其他类型\",{\"1\":{\"1400\":1}}],[\"赋值给其他变量\",{\"1\":{\"836\":1}}],[\"赋值操作符\",{\"0\":{\"638\":1}}],[\"赋值\",{\"1\":{\"428\":1}}],[\"赋值之后\",{\"1\":{\"354\":1}}],[\"姑且把它们称之为对象类型\",{\"1\":{\"1430\":1}}],[\"剩余的缓冲区空间的大小被称为窗口\",{\"1\":{\"1723\":1}}],[\"剩余的白色数据对象也就是待清理的垃圾对象\",{\"1\":{\"1650\":1}}],[\"剩余的对象内存位置是不变的\",{\"1\":{\"1646\":1}}],[\"剩余参数\",{\"0\":{\"1425\":1}}],[\"剩余类型\",{\"0\":{\"1413\":1}}],[\"剩下的几种解构赋值\",{\"1\":{\"254\":1}}],[\"喵喵喵\",{\"1\":{\"1392\":1}}],[\"抽象级别\",{\"1\":{\"1860\":1}}],[\"抽象登录类\",{\"1\":{\"1755\":1}}],[\"抽象工厂接口\",{\"1\":{\"1755\":1}}],[\"抽象工厂实际上就是实现子类继承父类的方法\",{\"1\":{\"1755\":1}}],[\"抽象工厂定义了一组用于创建产品的抽象方法\",{\"1\":{\"1755\":1}}],[\"抽象工厂和具体工厂\",{\"1\":{\"1755\":1}}],[\"抽象工厂模式通过提供一个接口来创建一系列相关的产品\",{\"1\":{\"1755\":1}}],[\"抽象工厂模式\",{\"0\":{\"1755\":1}}],[\"抽象工厂\",{\"1\":{\"1747\":1,\"1752\":2,\"1758\":1}}],[\"抽象方法只能出现在抽象类中并且抽象方法不能在抽象类中被具体实现\",{\"1\":{\"1392\":1}}],[\"抽象类不能实例化\",{\"1\":{\"1754\":1}}],[\"抽象类\",{\"1\":{\"1392\":1}}],[\"抽象类和抽象方法\",{\"0\":{\"1392\":1}}],[\"抽象度比较高的\",{\"1\":{\"590\":1}}],[\"静态算法\",{\"1\":{\"2077\":1}}],[\"静态测试\",{\"1\":{\"1938\":1}}],[\"静态方法\",{\"0\":{\"1391\":1}}],[\"静态属性\",{\"0\":{\"1391\":1}}],[\"静态资源目录\",{\"1\":{\"1146\":1}}],[\"能完成封装转发数据包功能的网络设备\",{\"1\":{\"2208\":1}}],[\"能动态连接\",{\"1\":{\"2162\":1}}],[\"能源与水源供给部门\",{\"1\":{\"2111\":1}}],[\"能很清晰地标识出每一项任务的起始时间与结束时间\",{\"1\":{\"1956\":1}}],[\"能作为一个独立实体在平台上运行\",{\"1\":{\"1900\":1}}],[\"能力等要素的开放共享和协同合作\",{\"1\":{\"1889\":1}}],[\"能遍历访问\",{\"1\":{\"1832\":1}}],[\"能通过各种http代理服务器\",{\"1\":{\"1736\":1}}],[\"能提高整个网络的吞吐量\",{\"1\":{\"1721\":1}}],[\"能尽早重传未被确认的报文段\",{\"1\":{\"1721\":1}}],[\"能赋值给\",{\"1\":{\"1378\":1}}],[\"能够\",{\"1\":{\"2717\":1}}],[\"能够在制定或者确定的时间内完成系统功能和外部或内部\",{\"1\":{\"2189\":1}}],[\"能够取得投资收益\",{\"1\":{\"1875\":1}}],[\"能够大幅低地提高技术水平和产品竞争力\",{\"1\":{\"1873\":1}}],[\"能够利用人类专家的知识和解决问题的方法来处理该领域的问题\",{\"1\":{\"1866\":1}}],[\"能够使一个单独的对象拥有公共\",{\"1\":{\"1817\":1}}],[\"能够延迟显示新页面的内容\",{\"1\":{\"1312\":1}}],[\"能够基于传入的参数进行计算\",{\"1\":{\"1274\":1}}],[\"能够缓存组件\",{\"1\":{\"1267\":1}}],[\"能够判断\",{\"1\":{\"1256\":1}}],[\"能够从指定的服务器自动下载\",{\"1\":{\"1071\":1}}],[\"能够表示的安全整数范围\",{\"1\":{\"650\":1}}],[\"能够将模块拆分为多个文件\",{\"1\":{\"460\":1}}],[\"能够读懂内容\",{\"1\":{\"213\":1}}],[\"能够被整除方便后面的计算\",{\"1\":{\"206\":1}}],[\"针对特定领域而不针对特定应用的设计\",{\"1\":{\"2180\":1}}],[\"针对每个层次的云计算服务都需要提供响应的访问接口\",{\"1\":{\"2051\":1}}],[\"针对未来\",{\"1\":{\"1949\":1}}],[\"针对接口编程\",{\"1\":{\"1937\":1}}],[\"针对需求不明确\",{\"1\":{\"1861\":1}}],[\"针对上述的代码\",{\"1\":{\"1366\":1}}],[\"针对入口文件\",{\"1\":{\"1357\":1}}],[\"换句话说\",{\"1\":{\"1407\":1,\"1613\":1}}],[\"换成\",{\"1\":{\"1363\":1}}],[\"换行符等其他空白符等\",{\"1\":{\"307\":1,\"538\":1}}],[\"换行符使用\",{\"1\":{\"20\":1,\"63\":1}}],[\"换行\",{\"0\":{\"136\":1},\"1\":{\"1057\":1}}],[\"估计会一脸懵逼\",{\"1\":{\"1363\":1}}],[\"起源于丰田\",{\"1\":{\"1855\":1}}],[\"起别名不会新建一个类型\",{\"1\":{\"1341\":1}}],[\"起始于函数开头\",{\"1\":{\"898\":1}}],[\"元组可用于定义具有有限数量的未命名属性的类型\",{\"1\":{\"1410\":1}}],[\"元组\",{\"0\":{\"1410\":1},\"1\":{\"1343\":1}}],[\"元组以及其它任何你需要手写的类型\",{\"1\":{\"1341\":1}}],[\"元素引用\",{\"1\":{\"1653\":1}}],[\"元素隐式地拥有\",{\"1\":{\"1366\":1}}],[\"元素进行交互\",{\"1\":{\"1281\":1}}],[\"元素添加的事件监听器应当在组件卸载或不再需要它们时被移除\",{\"1\":{\"1247\":1}}],[\"元素集合\",{\"1\":{\"724\":1}}],[\"元素所属的数组对象\",{\"1\":{\"709\":1}}],[\"元素是通过指定的分隔符进行分隔的\",{\"1\":{\"690\":1}}],[\"元素复制的起始位置\",{\"1\":{\"685\":1}}],[\"元素一项的数组\",{\"1\":{\"677\":1}}],[\"元素中\",{\"1\":{\"463\":1}}],[\"元素被移除\",{\"1\":{\"432\":1}}],[\"元素个数\",{\"1\":{\"407\":1}}],[\"元素上使用\",{\"1\":{\"395\":1}}],[\"元素并将其附加到\",{\"1\":{\"434\":1}}],[\"元素并将其\",{\"1\":{\"339\":1}}],[\"元素传输到\",{\"1\":{\"338\":1}}],[\"元素就不会有代码提示了\",{\"1\":{\"255\":1}}],[\"元素绑定\",{\"1\":{\"231\":1}}],[\"元素尺寸改变\",{\"1\":{\"224\":1}}],[\"元素的大小或位置\",{\"1\":{\"1256\":1}}],[\"元素的点击事件处理函数\",{\"1\":{\"1201\":1}}],[\"元素的拖拽功能实现\",{\"1\":{\"829\":1}}],[\"元素的变量\",{\"1\":{\"434\":1}}],[\"元素的空数组\",{\"1\":{\"286\":1,\"678\":1}}],[\"元素的事件委托到它的父层元素上\",{\"1\":{\"237\":1}}],[\"元素的位置和尺寸大小\",{\"1\":{\"224\":1}}],[\"元素的可见标题\",{\"1\":{\"215\":1}}],[\"元素的\",{\"0\":{\"207\":1},\"1\":{\"206\":1}}],[\"元素\",{\"0\":{\"434\":1,\"1281\":1},\"1\":{\"206\":1,\"240\":1,\"339\":2,\"402\":1,\"709\":1,\"839\":1,\"1476\":1,\"1843\":1}}],[\"元素出现在可视区域和离开可视区域触发\",{\"1\":{\"87\":1}}],[\"暴露配置项后根目录会出现\",{\"1\":{\"1332\":1}}],[\"暴露\",{\"1\":{\"1332\":1}}],[\"生态级数字化和泛在物联网级网络化\",{\"1\":{\"1889\":1}}],[\"生态级发展阶段\",{\"1\":{\"1889\":1}}],[\"生产计划\",{\"1\":{\"1879\":1}}],[\"生产制造过程的管理\",{\"1\":{\"1873\":1}}],[\"生产技术与信息技术相结合\",{\"1\":{\"1873\":1}}],[\"生产零部件及提出安装计划\",{\"1\":{\"1847\":1}}],[\"生产阶段\",{\"1\":{\"1847\":1,\"1854\":1}}],[\"生产实例\",{\"1\":{\"1752\":1}}],[\"生产环境\",{\"1\":{\"1332\":1}}],[\"生命周期处理等等\",{\"1\":{\"1533\":1}}],[\"生命周期钩子\",{\"1\":{\"1525\":1}}],[\"生命周期里面的this指向当前实例\",{\"1\":{\"1486\":1}}],[\"生命周期\",{\"0\":{\"1486\":1,\"1902\":1}}],[\"生命周期的合并\",{\"1\":{\"1485\":1}}],[\"生效\",{\"1\":{\"1334\":2}}],[\"生成frenet帧\",{\"1\":{\"2343\":1}}],[\"生成二进制代码后\",{\"1\":{\"2177\":1}}],[\"生成响应的子类\",{\"1\":{\"2028\":1}}],[\"生成方式\",{\"0\":{\"1659\":1}}],[\"生成子节点\",{\"1\":{\"1551\":1}}],[\"生成ast方法\",{\"1\":{\"1550\":1}}],[\"生成\",{\"0\":{\"1550\":1},\"1\":{\"1549\":2}}],[\"生成vnode\",{\"1\":{\"1527\":1}}],[\"生成虚拟dom\",{\"1\":{\"1526\":1}}],[\"生成到一个文件中\",{\"1\":{\"1454\":1}}],[\"生成不同的文件\",{\"1\":{\"1454\":1}}],[\"生成单个\",{\"1\":{\"1454\":1}}],[\"生成一个错误\",{\"1\":{\"1454\":1}}],[\"生成相应的\",{\"1\":{\"1454\":2}}],[\"生成名为\",{\"1\":{\"1025\":1}}],[\"生成器暂停执行后\",{\"1\":{\"589\":1}}],[\"生成器原理\",{\"0\":{\"589\":1}}],[\"生成器\",{\"1\":{\"587\":1}}],[\"生成视图\",{\"1\":{\"409\":1}}],[\"框架的核心\",{\"1\":{\"1332\":1}}],[\"脚手架中\",{\"1\":{\"1334\":1}}],[\"脚手架默认的\",{\"1\":{\"1332\":1}}],[\"脚手架为了让项目中目录看起来干净一些\",{\"1\":{\"1332\":1}}],[\"脚手架\",{\"0\":{\"1327\":1},\"2\":{\"1337\":1}}],[\"脚本调用\",{\"1\":{\"1661\":1}}],[\"脚本的执行\",{\"1\":{\"1649\":1}}],[\"脚本历史\",{\"0\":{\"1124\":1}}],[\"脚本文件\",{\"1\":{\"909\":1}}],[\"脚本\",{\"1\":{\"473\":1,\"1646\":1,\"1650\":1}}],[\"脚本中\",{\"1\":{\"1089\":1}}],[\"脚本中执行\",{\"1\":{\"646\":1}}],[\"脚本中不可用\",{\"1\":{\"467\":1}}],[\"脚本中会出现这种情况\",{\"1\":{\"467\":1}}],[\"脚本略有不同\",{\"1\":{\"467\":1}}],[\"脚本都可以访问全局变量\",{\"1\":{\"445\":1}}],[\"插槽\",{\"0\":{\"1315\":1},\"2\":{\"1317\":1}}],[\"插入异常\",{\"1\":{\"2244\":1}}],[\"插入到\",{\"1\":{\"1528\":1}}],[\"插入\",{\"1\":{\"703\":2}}],[\"外键\",{\"1\":{\"2240\":1}}],[\"外码\",{\"1\":{\"2240\":1}}],[\"外\",{\"1\":{\"2176\":1}}],[\"外层使用\",{\"1\":{\"1309\":1}}],[\"外部设备\",{\"1\":{\"2176\":1}}],[\"外部设计\",{\"1\":{\"1929\":1}}],[\"外部代码如果想要恢复生成器的执行\",{\"1\":{\"589\":1}}],[\"外部的代码便开始执行\",{\"1\":{\"589\":1}}],[\"外部打印其内部的私有变量\",{\"1\":{\"445\":1}}],[\"外部直接调用\",{\"1\":{\"445\":1}}],[\"外部环境\",{\"1\":{\"349\":1,\"1949\":1}}],[\"卡顿\",{\"1\":{\"1309\":1}}],[\"惰性初始化函数\",{\"0\":{\"1297\":1}}],[\"管道缓冲几何体\",{\"0\":{\"2437\":1}}],[\"管道\",{\"1\":{\"1977\":1}}],[\"管道符号\",{\"0\":{\"1085\":1,\"1087\":1}}],[\"管理集中化\",{\"1\":{\"2199\":1}}],[\"管理层\",{\"1\":{\"2051\":1}}],[\"管理机制和管理制度必须得到创新\",{\"1\":{\"1873\":1}}],[\"管理创新\",{\"1\":{\"1873\":1}}],[\"管理信息系统\",{\"0\":{\"1864\":1}}],[\"管理\",{\"1\":{\"1848\":1}}],[\"管理员分配\",{\"1\":{\"2210\":1}}],[\"管理员\",{\"1\":{\"1753\":2,\"1754\":1}}],[\"管理的\",{\"1\":{\"1290\":1}}],[\"范式判断\",{\"0\":{\"2249\":1}}],[\"范围0到1\",{\"1\":{\"2822\":1}}],[\"范围内\",{\"1\":{\"2333\":1}}],[\"范围\",{\"1\":{\"1275\":1}}],[\"范本样式\",{\"1\":{\"1014\":1}}],[\"初级阶段\",{\"1\":{\"1969\":1}}],[\"初次渲染\",{\"1\":{\"1528\":1}}],[\"初值\",{\"1\":{\"1274\":1}}],[\"初始\",{\"1\":{\"1901\":1}}],[\"初始级发展阶段\",{\"1\":{\"1889\":1}}],[\"初始为seq=x\",{\"1\":{\"1726\":1}}],[\"初始序号seq=y\",{\"1\":{\"1726\":1}}],[\"初始序号seq=x\",{\"1\":{\"1726\":1}}],[\"初始渲染总体思路就是根据虚拟\",{\"1\":{\"1528\":1}}],[\"初始渲染和后续更新都是共用这一个方法\",{\"1\":{\"1528\":1}}],[\"初始渲染原理\",{\"0\":{\"1524\":1}}],[\"初始渲染之前\",{\"1\":{\"1486\":1}}],[\"初始时\",{\"1\":{\"1283\":1}}],[\"初始状态是\",{\"1\":{\"1559\":1}}],[\"初始状态将被设置为调用\",{\"1\":{\"1273\":1}}],[\"初始状态将设置为\",{\"1\":{\"1273\":1}}],[\"初始状态的计算值\",{\"1\":{\"1273\":1}}],[\"初始状态\",{\"1\":{\"1273\":1}}],[\"初始值\",{\"1\":{\"284\":1,\"705\":1}}],[\"初始化给定的纹理\",{\"1\":{\"2833\":1}}],[\"初始化之后\",{\"1\":{\"1583\":1}}],[\"初始化的时候会去执行\",{\"1\":{\"1557\":1}}],[\"初始化data数据\",{\"1\":{\"1533\":1}}],[\"初始化可能会处理很多事情\",{\"1\":{\"1533\":1}}],[\"初始化了\",{\"1\":{\"1521\":1}}],[\"初始化事件系统\",{\"1\":{\"1510\":1}}],[\"初始化watch\",{\"1\":{\"1491\":1}}],[\"初始化数据之后\",{\"1\":{\"1486\":1}}],[\"初始化数据之前\",{\"1\":{\"1486\":1}}],[\"初始化状态\",{\"1\":{\"1486\":1,\"1525\":1,\"1533\":1,\"1548\":1}}],[\"初始化这个组件时\",{\"1\":{\"1274\":1}}],[\"初始化参数\",{\"1\":{\"1273\":1}}],[\"初始化赋值目标\",{\"1\":{\"766\":1,\"767\":1}}],[\"初始化完成后作用域消解\",{\"1\":{\"258\":1}}],[\"初始化项目\",{\"0\":{\"189\":1}}],[\"初始化蓝牙<\",{\"1\":{\"127\":1}}],[\"初始化蓝牙失败\",{\"1\":{\"117\":1,\"118\":1,\"119\":1,\"127\":1,\"128\":1}}],[\"初始化蓝牙成功\",{\"1\":{\"117\":1,\"118\":1,\"119\":1,\"127\":1,\"128\":2}}],[\"初始化蓝牙\",{\"1\":{\"117\":1,\"118\":1,\"119\":1,\"127\":1}}],[\"初始化阶段\",{\"0\":{\"117\":1}}],[\"初始化\",{\"0\":{\"7\":1,\"26\":1,\"50\":1,\"69\":1,\"1295\":1,\"1583\":1},\"1\":{\"116\":1,\"1509\":1,\"1510\":1,\"1514\":1}}],[\"初始化git\",{\"0\":{\"6\":1,\"49\":1}}],[\"考虑硬件因素\",{\"1\":{\"2177\":1}}],[\"考虑了节点的利用率\",{\"1\":{\"2077\":1}}],[\"考虑了风险问题\",{\"1\":{\"1898\":1}}],[\"考虑节点处理能力不同\",{\"1\":{\"2077\":1}}],[\"考虑动态负载\",{\"1\":{\"2077\":1}}],[\"考虑不同节点处理能力的差异\",{\"1\":{\"2077\":1}}],[\"考虑通过服务化进行拆分\",{\"1\":{\"2055\":1}}],[\"考虑到如果网络出现拥塞的话就不会收到好几个重复的确认\",{\"1\":{\"1722\":1}}],[\"考虑到一个人盖房子难\",{\"1\":{\"1649\":1}}],[\"考虑到分配的速度和效率\",{\"1\":{\"1646\":1}}],[\"考虑到\",{\"1\":{\"1267\":1,\"1665\":1}}],[\"考虑回退到\",{\"1\":{\"1260\":1}}],[\"何选字段\",{\"1\":{\"1712\":1}}],[\"何时使用\",{\"0\":{\"1258\":1,\"1259\":1}}],[\"何为原型链\",{\"0\":{\"482\":1}}],[\"蓝色方块\",{\"1\":{\"1255\":1}}],[\"蓝牙\",{\"2\":{\"130\":1}}],[\"蓝牙设备的id\",{\"1\":{\"119\":1,\"127\":1}}],[\"蓝牙设备名\",{\"1\":{\"118\":1}}],[\"红色方块\",{\"1\":{\"1255\":1}}],[\"库共享单个\",{\"1\":{\"2837\":1}}],[\"库存记录\",{\"1\":{\"1879\":1}}],[\"库\",{\"0\":{\"1250\":1},\"1\":{\"1288\":1}}],[\"聊天室\",{\"0\":{\"1248\":1}}],[\"卸载的时候\",{\"1\":{\"1244\":3}}],[\"延误到连接释放以后的某个时间才到达服务端\",{\"1\":{\"1727\":1}}],[\"延迟执行的函数\",{\"1\":{\"1303\":1}}],[\"延迟的重新渲染会很快完成\",{\"1\":{\"1237\":1}}],[\"延时效果\",{\"1\":{\"365\":1}}],[\"✅\",{\"1\":{\"1236\":1,\"1309\":1}}],[\"❌\",{\"1\":{\"1236\":1,\"1309\":1}}],[\"粒度化\",{\"0\":{\"1227\":1}}],[\"官方更推荐的方式\",{\"1\":{\"1267\":1}}],[\"官方建议提供一个有意义的默认值\",{\"1\":{\"1217\":1}}],[\"官网下载\",{\"1\":{\"1582\":1}}],[\"官网下载ffmeg\",{\"0\":{\"93\":1}}],[\"官网\",{\"0\":{\"1131\":1}}],[\"造成一些资源浪费\",{\"1\":{\"1788\":1}}],[\"造成\",{\"1\":{\"1212\":1}}],[\"造成了资源的浪费\",{\"1\":{\"489\":1}}],[\"底层关联\",{\"1\":{\"1211\":1}}],[\"底线命令模式可以输入单个或多个字符的命令\",{\"1\":{\"1058\":1}}],[\"底线命令模式\",{\"0\":{\"1058\":1}}],[\"想发就发\",{\"1\":{\"1712\":1}}],[\"想发数据就可以开始发送了\",{\"1\":{\"1712\":1}}],[\"想要只查看代码合并的记录\",{\"1\":{\"1628\":1}}],[\"想要通过计算或有副作用的方法获取初值\",{\"1\":{\"1286\":1}}],[\"想象一下\",{\"1\":{\"1236\":1}}],[\"想象一个场景\",{\"1\":{\"1235\":1,\"1311\":1}}],[\"想象这个场景\",{\"1\":{\"1209\":1,\"1269\":1}}],[\"想占满宽度\",{\"1\":{\"205\":1}}],[\"工艺设计\",{\"1\":{\"1873\":1}}],[\"工程\",{\"1\":{\"1848\":1}}],[\"工程化原则\",{\"1\":{\"1856\":1}}],[\"工程化\",{\"0\":{\"1179\":1}}],[\"工厂类会变得庞大且不易维护\",{\"1\":{\"1752\":1}}],[\"工厂类也会增多\",{\"1\":{\"1751\":1}}],[\"工厂方法模式将对象的创建延迟到子类中\",{\"1\":{\"1754\":1}}],[\"工厂方法模式定义了一个用于创建对象的工厂方法\",{\"1\":{\"1754\":1}}],[\"工厂方法\",{\"0\":{\"1754\":1},\"1\":{\"1747\":1,\"1752\":2}}],[\"工厂充当了一个生产标准规格商品的地方\",{\"1\":{\"1747\":1}}],[\"工厂模式主要是为了创建对象实例或者类簇\",{\"1\":{\"1758\":1}}],[\"工厂模式需要事先了解可能会创建的产品类\",{\"1\":{\"1751\":1}}],[\"工厂模式适合创建复杂对象的场景\",{\"1\":{\"1751\":1}}],[\"工厂模式可以将对象的创建和使用分离\",{\"1\":{\"1750\":1}}],[\"工厂模式可以将对象的创建过程封装在工厂类中\",{\"1\":{\"1747\":1}}],[\"工厂模式根据抽象程度的不同可以分为\",{\"1\":{\"1747\":1}}],[\"工厂模式中的抽象产品定义了产品的接口或抽象类\",{\"1\":{\"1747\":1}}],[\"工厂模式\",{\"0\":{\"1746\":1},\"2\":{\"1757\":1}}],[\"工作站\",{\"1\":{\"2179\":1}}],[\"工作集是进程运行时被频繁访问的页面集合\",{\"1\":{\"2141\":1}}],[\"工作集理论\",{\"1\":{\"2141\":1}}],[\"工作量证明\",{\"1\":{\"2133\":2}}],[\"工作\",{\"1\":{\"1959\":1}}],[\"工作阶段程式化\",{\"1\":{\"1858\":1}}],[\"工作目录下的文件存在两种状态\",{\"1\":{\"1584\":1}}],[\"工作区有一个隐藏目录\",{\"1\":{\"1584\":1}}],[\"工作区\",{\"1\":{\"1584\":2}}],[\"工作时\",{\"1\":{\"1579\":1}}],[\"工作原理\",{\"0\":{\"1308\":1}}],[\"工作进程\",{\"0\":{\"1847\":1},\"1\":{\"1153\":1}}],[\"工作方式的一种认识\",{\"1\":{\"500\":1}}],[\"🚀\",{\"1\":{\"1168\":3}}],[\"👆\",{\"1\":{\"1153\":1}}],[\"失败\",{\"1\":{\"1168\":1}}],[\"失败就调用reject函数\",{\"1\":{\"571\":1}}],[\"密钥管理技术\",{\"0\":{\"2109\":1}}],[\"密钥\",{\"1\":{\"1153\":1}}],[\"密码过期的宽限天数\",{\"1\":{\"940\":1}}],[\"密码\",{\"1\":{\"940\":1}}],[\"密码占位符\",{\"1\":{\"937\":1,\"939\":2}}],[\"证明确实是他统一向某人付款\",{\"1\":{\"2132\":1}}],[\"证明你已经把数据向外成功发送了\",{\"1\":{\"125\":1}}],[\"证据验证\",{\"1\":{\"2129\":1}}],[\"证据传输\",{\"1\":{\"2129\":1}}],[\"证据生成\",{\"1\":{\"2129\":1}}],[\"证书发行者对证书的签名\",{\"1\":{\"2109\":1}}],[\"证书所有人的公开密钥\",{\"1\":{\"2109\":1}}],[\"证书所有人的名称\",{\"1\":{\"2109\":1}}],[\"证书所使用的签名算法\",{\"1\":{\"2109\":1}}],[\"证书的有效期\",{\"1\":{\"2109\":1}}],[\"证书的发行机构名称\",{\"1\":{\"2109\":1}}],[\"证书的序列号\",{\"1\":{\"2109\":1}}],[\"证书的版本信息\",{\"1\":{\"2109\":1}}],[\"证书\",{\"1\":{\"1153\":1}}],[\"过期的化就去底层系统得到新数据并更新缓存\",{\"1\":{\"2074\":1}}],[\"过滤器\",{\"1\":{\"1977\":1}}],[\"过滤数组\",{\"1\":{\"879\":1}}],[\"过程控制\",{\"0\":{\"1994\":1}}],[\"过程视图\",{\"1\":{\"1906\":1}}],[\"过程的设计表示\",{\"1\":{\"1905\":1}}],[\"过程\",{\"1\":{\"1904\":1,\"1959\":1,\"2016\":1}}],[\"过多的\",{\"1\":{\"1660\":1}}],[\"过多的碎片会导致大对象无法分配到足够的连续内存\",{\"1\":{\"1648\":1}}],[\"过渡优化\",{\"0\":{\"1269\":1}}],[\"过度使用优化工具可能会导致更差的性能和更低的代码可读性\",{\"1\":{\"1269\":1}}],[\"过度使用\",{\"1\":{\"1212\":1}}],[\"过度优化\",{\"1\":{\"1212\":1}}],[\"过来的请求代理到哪里\",{\"1\":{\"1153\":1}}],[\"└──\",{\"1\":{\"1150\":5}}],[\"媒体类型\",{\"1\":{\"1150\":1}}],[\"媒体查询\",{\"0\":{\"204\":1}}],[\"│\",{\"1\":{\"1150\":21}}],[\"├──\",{\"1\":{\"1150\":25}}],[\"快重传要求接收方在收到一个失序的报文段后就立即发出重复确认\",{\"1\":{\"1721\":1}}],[\"快速恢复\",{\"0\":{\"1722\":1},\"1\":{\"1718\":1}}],[\"快速重传\",{\"0\":{\"1721\":1},\"1\":{\"1718\":1}}],[\"快速停止\",{\"1\":{\"1135\":1}}],[\"快捷键\",{\"1\":{\"989\":1}}],[\"星型\",{\"1\":{\"2204\":1}}],[\"星完整性规则\",{\"1\":{\"2118\":1}}],[\"星属性安全规则\",{\"1\":{\"2117\":1}}],[\"星\",{\"1\":{\"1121\":1}}],[\"登陆信息\",{\"0\":{\"1125\":1}}],[\"登陆名\",{\"1\":{\"1118\":1}}],[\"登录与退出\",{\"0\":{\"924\":1}}],[\"浮点型\",{\"1\":{\"1092\":1}}],[\"浮动的特点\",{\"1\":{\"178\":1}}],[\"浮动元素也参与计算\",{\"1\":{\"149\":1}}],[\"扩充功能和改善性能而进行的修改\",{\"1\":{\"1949\":1}}],[\"扩起来的是系统命令\",{\"1\":{\"1089\":1}}],[\"扩展才能用\",{\"1\":{\"2820\":1,\"2821\":1}}],[\"扩展不便\",{\"1\":{\"1752\":1}}],[\"扩展性\",{\"1\":{\"1752\":1,\"1804\":1}}],[\"扩展性强\",{\"1\":{\"1750\":1}}],[\"扩展性不好\",{\"0\":{\"181\":1}}],[\"扩展\",{\"0\":{\"1345\":1},\"1\":{\"1913\":1}}],[\"扩展操作符\",{\"0\":{\"630\":1},\"1\":{\"630\":1}}],[\"扩展名为\",{\"1\":{\"973\":1}}],[\"扩展名保存模块\",{\"1\":{\"474\":1}}],[\"扩展名保存模块并通过标志访问它来使用模块\",{\"1\":{\"474\":1}}],[\"扩展名是可以省略的\",{\"1\":{\"470\":1}}],[\"扩展运算符实现\",{\"0\":{\"737\":1}}],[\"扩展运算符有以下用途\",{\"1\":{\"264\":1}}],[\"扩展运算符\",{\"0\":{\"264\":1,\"756\":1},\"1\":{\"264\":1,\"756\":1}}],[\"｜命令\",{\"1\":{\"1087\":1}}],[\"案例\",{\"1\":{\"1086\":1}}],[\"条块化\",{\"1\":{\"2213\":1}}],[\"条历史命令\",{\"1\":{\"1084\":1}}],[\"条\",{\"1\":{\"1083\":1}}],[\"条件操作符\",{\"0\":{\"637\":1}}],[\"～\",{\"0\":{\"1119\":1},\"1\":{\"1083\":1,\"1648\":1}}],[\"绝对路径或者相对路径\",{\"1\":{\"1081\":1}}],[\"别名\",{\"0\":{\"1080\":1},\"1\":{\"1080\":1,\"1081\":1}}],[\"激活转义字符\",{\"1\":{\"1078\":1}}],[\"挂接在总线上的多个部件只能分时向总线发送数据\",{\"1\":{\"2184\":1}}],[\"挂载原型\",{\"0\":{\"1543\":1}}],[\"挂载\",{\"1\":{\"1521\":1}}],[\"挂起\",{\"1\":{\"1077\":1}}],[\"挂到\",{\"1\":{\"354\":1}}],[\"帮助我们在\",{\"1\":{\"1764\":1}}],[\"帮助文档\",{\"1\":{\"1146\":1}}],[\"帮助\",{\"1\":{\"1072\":1}}],[\"离开\",{\"1\":{\"1067\":1}}],[\"离开等指令\",{\"0\":{\"1067\":1}}],[\"亦即将filename这个档案内容加到游标所在行后面\",{\"1\":{\"1067\":1}}],[\"亦即由21行开始贴\",{\"1\":{\"1063\":1}}],[\"亦直接删除\",{\"1\":{\"995\":1}}],[\"↑\",{\"1\":{\"1061\":1}}],[\"←\",{\"1\":{\"1061\":1}}],[\"英文冒号\",{\"1\":{\"1058\":1}}],[\"光线圆锥体的尺寸也逐渐增大\",{\"1\":{\"2884\":1}}],[\"光线从一个点沿一个方向射出\",{\"1\":{\"2884\":1}}],[\"光线投射用于进行鼠标拾取\",{\"1\":{\"2496\":1}}],[\"光线投射\",{\"0\":{\"2496\":1},\"1\":{\"2496\":1}}],[\"光线投射raycaster\",{\"0\":{\"2495\":1}}],[\"光源直接放置于场景之上\",{\"1\":{\"2864\":1}}],[\"光源的颜色\",{\"1\":{\"2855\":1}}],[\"光源的基类\",{\"1\":{\"2850\":1}}],[\"光照颜色从天空光线颜色渐变到地面光线颜色\",{\"1\":{\"2864\":1}}],[\"光照的强度\",{\"1\":{\"2856\":1}}],[\"光照强度\",{\"1\":{\"2853\":1}}],[\"光点在世界空间中的位置\",{\"1\":{\"2608\":1}}],[\"光标移动到命令行尾\",{\"1\":{\"1082\":1}}],[\"光标移动到命令行首\",{\"1\":{\"1082\":1}}],[\"光标移动到这个屏幕的最下方那一行的第一个字符\",{\"1\":{\"1061\":1}}],[\"光标移动到这个屏幕的最上方那一行的第一个字符\",{\"1\":{\"1061\":1}}],[\"光标移动到这个屏幕的中央那一行的第一个字符\",{\"1\":{\"1061\":1}}],[\"光标移动到非空格符的上一行\",{\"1\":{\"1061\":1}}],[\"光标移动到非空格符的下一行\",{\"1\":{\"1061\":1}}],[\"光标会向右移动这一行的n个字符\",{\"1\":{\"1061\":1}}],[\"光标向下移动n行\",{\"1\":{\"1061\":1}}],[\"光标向下移动一个字符\",{\"1\":{\"1061\":1}}],[\"光标向右移动一个字符\",{\"1\":{\"1061\":1}}],[\"光标向上移动一个字符\",{\"1\":{\"1061\":1}}],[\"光标向左移动一个字符\",{\"1\":{\"1061\":1}}],[\"光标将变成竖线\",{\"1\":{\"1057\":1}}],[\"光驱等等\",{\"1\":{\"913\":1}}],[\"退役阶段\",{\"1\":{\"1854\":1}}],[\"退格键\",{\"1\":{\"1057\":1}}],[\"退出编辑模式\",{\"1\":{\"1065\":1}}],[\"退出输入模式\",{\"1\":{\"1057\":1}}],[\"退出less命令\",{\"1\":{\"989\":1}}],[\"退出\",{\"1\":{\"989\":1,\"1056\":1,\"1058\":1}}],[\"退出全屏\",{\"1\":{\"339\":1}}],[\"退出全屏模式并切换到正常模式\",{\"1\":{\"339\":1}}],[\"剪切光标所在的向下n行\",{\"1\":{\"1063\":1}}],[\"剪切游标所在的那一整行\",{\"1\":{\"1063\":1}}],[\"剪切当前行\",{\"1\":{\"1056\":1}}],[\"剪切和粘贴等剪贴板操作是应用程序中最常见的一些功能\",{\"1\":{\"344\":1}}],[\"永久修改\",{\"0\":{\"1048\":1}}],[\"永远不会相等\",{\"1\":{\"772\":1}}],[\"永远不会从任何函数返回\",{\"1\":{\"431\":1}}],[\"永远不成立\",{\"1\":{\"505\":1}}],[\"永远由第一次\",{\"1\":{\"355\":1}}],[\"掩码中指定的比特位设为\",{\"1\":{\"1040\":1}}],[\"历史\",{\"0\":{\"1577\":1}}],[\"历史命令条数\",{\"1\":{\"1102\":1}}],[\"历史命令保存文件\",{\"1\":{\"1083\":1}}],[\"历史命令\",{\"0\":{\"1083\":1}}],[\"历史上\",{\"1\":{\"1040\":1}}],[\"历史记录\",{\"1\":{\"128\":1}}],[\"粘贴剪贴板内容到光标上方\",{\"1\":{\"1056\":1}}],[\"粘贴剪贴板内容到光标下方\",{\"1\":{\"1056\":1}}],[\"粘贴位\",{\"1\":{\"1039\":1}}],[\"粘连\",{\"1\":{\"161\":1}}],[\"粘连布局\",{\"0\":{\"161\":1}}],[\"读完后即可释放s锁\",{\"1\":{\"2260\":1}}],[\"读入另一个档案的数据\",{\"1\":{\"1067\":1}}],[\"读\",{\"0\":{\"2262\":1},\"1\":{\"1039\":1,\"1040\":3}}],[\"读取磁盘数据的时间应包括以下三个部分\",{\"1\":{\"2142\":1}}],[\"读取配置文件\",{\"1\":{\"560\":1}}],[\"读取8个字节\",{\"1\":{\"411\":1}}],[\"读取4个字节\",{\"1\":{\"411\":3}}],[\"读取2个字节\",{\"1\":{\"411\":2}}],[\"读取1个字节\",{\"1\":{\"411\":2}}],[\"读取内存\",{\"0\":{\"411\":1}}],[\"读取完之后会将读取的结果放入对象的\",{\"1\":{\"394\":1}}],[\"读取指定\",{\"1\":{\"394\":4}}],[\"读取指令发送失败\",{\"1\":{\"126\":1}}],[\"读取指令发送成功\",{\"1\":{\"126\":1}}],[\"读取为不同的格式\",{\"1\":{\"393\":1}}],[\"读取低功耗设备特征值成功\",{\"1\":{\"128\":1}}],[\"读取低功耗设备特征值中\",{\"1\":{\"128\":1}}],[\"读取低功耗蓝牙设备的特征值的二进制数据值\",{\"1\":{\"124\":1}}],[\"读取数据<\",{\"1\":{\"127\":1}}],[\"读取数据\",{\"0\":{\"1664\":1},\"1\":{\"126\":1,\"127\":1}}],[\"读取\",{\"1\":{\"126\":1}}],[\"者\",{\"1\":{\"1038\":1}}],[\"权益证明\",{\"1\":{\"2133\":1}}],[\"权衡点是影响多个质量属性的特征\",{\"1\":{\"2010\":1}}],[\"权限管理\",{\"1\":{\"1753\":2,\"1754\":1}}],[\"权限掩码\",{\"1\":{\"1118\":1}}],[\"权限\",{\"0\":{\"1049\":1},\"1\":{\"1039\":2,\"1040\":1}}],[\"权限设定字串\",{\"1\":{\"1038\":1}}],[\"权重分数\",{\"1\":{\"218\":1}}],[\"权重\",{\"0\":{\"218\":1}}],[\"鼠标移入一个按钮\",{\"1\":{\"1256\":1}}],[\"鼠标\",{\"1\":{\"1029\":1}}],[\"鼠标事件\",{\"1\":{\"233\":1}}],[\"尝试遍历有向图\",{\"1\":{\"2246\":1}}],[\"尝试从localstorage中读取值\",{\"1\":{\"1274\":1}}],[\"尝试将它们分解成更小的\",{\"1\":{\"1227\":1}}],[\"尝试修复已损坏的压缩文件\",{\"1\":{\"1018\":1}}],[\"尝试去解读压缩文件的内容\",{\"1\":{\"1012\":1}}],[\"尝试在异步函数之外使用\",{\"1\":{\"334\":1}}],[\"详见renderer\",{\"1\":{\"2805\":1}}],[\"详见webgl\",{\"1\":{\"2788\":1}}],[\"详见相关属性说明\",{\"1\":{\"2319\":1}}],[\"详见\",{\"1\":{\"2297\":1,\"2788\":1}}],[\"详细说明服务的时间以及期限\",{\"1\":{\"2218\":1}}],[\"详细设计\",{\"1\":{\"1929\":1,\"1940\":1}}],[\"详细显示指令执行过程\",{\"1\":{\"1012\":1}}],[\"详情见下面两张图\",{\"1\":{\"817\":1}}],[\"找入度为0的属性\",{\"1\":{\"2246\":1}}],[\"找块\",{\"1\":{\"2142\":1}}],[\"找磁道的时间\",{\"1\":{\"2142\":1}}],[\"找并执行操作\",{\"1\":{\"1007\":1}}],[\"找到最大的分块\",{\"1\":{\"1646\":1}}],[\"找到大于等于\",{\"1\":{\"1646\":1}}],[\"找到他的父亲\",{\"1\":{\"1476\":1}}],[\"找到设备\",{\"1\":{\"128\":2}}],[\"找到新设备就触发该方法\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"找到目标设备进行\",{\"1\":{\"116\":1}}],[\"天灾等与公共安全有关的信息\",{\"1\":{\"1869\":1}}],[\"天前及更早更新过的文件列出\",{\"1\":{\"1007\":1}}],[\"天前修改过的文件\",{\"1\":{\"1007\":1}}],[\"天内状态发生改变的文件和目录\",{\"1\":{\"1007\":1}}],[\"天内被访问的文件\",{\"1\":{\"1007\":1}}],[\"匹配规则\",{\"1\":{\"1706\":1}}],[\"匹配规则是\",{\"1\":{\"740\":1}}],[\"匹配指针后移\",{\"1\":{\"1551\":1}}],[\"匹配到的\",{\"1\":{\"1551\":1}}],[\"匹配到了开始标签\",{\"1\":{\"1550\":1}}],[\"匹配花括号\",{\"1\":{\"1551\":1}}],[\"匹配开始标签\",{\"1\":{\"1550\":1}}],[\"匹配结束标签<\",{\"1\":{\"1550\":1}}],[\"匹配属性\",{\"1\":{\"1550\":1}}],[\"匹配标签结尾\",{\"1\":{\"1550\":1}}],[\"匹配标签结束\",{\"1\":{\"1550\":1}}],[\"匹配标签开始\",{\"1\":{\"1550\":1}}],[\"匹配标签名\",{\"1\":{\"1550\":1}}],[\"匹配特殊标签\",{\"1\":{\"1550\":1}}],[\"匹配不是中括号中的一个字符\",{\"1\":{\"1088\":1}}],[\"匹配中括号中任意一个字符\",{\"1\":{\"1088\":2}}],[\"匹配\",{\"1\":{\"1088\":1,\"1550\":1}}],[\"匹配一个任意字符\",{\"1\":{\"1088\":1}}],[\"匹配文件名和目录名\",{\"1\":{\"1088\":1}}],[\"匹配条件\",{\"1\":{\"1006\":1}}],[\"硬盘速率\",{\"1\":{\"2077\":1}}],[\"硬拆\",{\"1\":{\"2055\":1}}],[\"硬科学\",{\"0\":{\"1845\":1}}],[\"硬链接只有在同一个文件系统中才能创建\",{\"1\":{\"1002\":1}}],[\"硬链接\",{\"1\":{\"1002\":2}}],[\"硬链接不可以\",{\"1\":{\"1002\":1}}],[\"硬件\",{\"1\":{\"2218\":1}}],[\"硬件资源分配\",{\"1\":{\"2187\":1}}],[\"硬件划分\",{\"1\":{\"2179\":1}}],[\"硬件t\",{\"1\":{\"2179\":1}}],[\"硬件协同工作的效率和稳定性\",{\"1\":{\"2177\":1}}],[\"硬件集成于一体的专用计算机系统\",{\"1\":{\"2176\":1}}],[\"硬件较慢\",{\"1\":{\"2089\":1}}],[\"硬件失效主要是物理退化所致\",{\"1\":{\"2089\":1}}],[\"硬件可靠性\",{\"1\":{\"2089\":1}}],[\"硬件有关\",{\"1\":{\"202\":1}}],[\"硬件提供的服务id\",{\"1\":{\"127\":1}}],[\"跨文件系统\",{\"1\":{\"1002\":1}}],[\"跨域允许的请求方法\",{\"1\":{\"864\":1}}],[\"跨域情况\",{\"0\":{\"857\":1}}],[\"跨域的时机\",{\"0\":{\"856\":1}}],[\"跨域\",{\"0\":{\"854\":1,\"1335\":1},\"2\":{\"869\":1}}],[\"软硬件和安装费用的估算\",{\"1\":{\"2218\":1}}],[\"软硬件协同设计\",{\"1\":{\"2177\":1}}],[\"软考\",{\"2\":{\"1891\":1,\"1892\":1,\"1950\":1,\"1951\":1,\"1963\":1,\"1964\":1,\"2086\":1,\"2087\":1,\"2097\":1,\"2098\":1,\"2112\":1,\"2113\":1,\"2134\":1,\"2135\":1,\"2173\":1,\"2174\":1,\"2196\":1,\"2197\":1,\"2221\":1,\"2222\":1,\"2268\":1,\"2269\":1}}],[\"软科学方法论\",{\"0\":{\"1849\":1}}],[\"软件安全漏洞\",{\"1\":{\"2101\":1}}],[\"软件内部结构\",{\"1\":{\"2092\":1}}],[\"软件规模\",{\"1\":{\"2092\":1}}],[\"软件较快\",{\"1\":{\"2089\":1}}],[\"软件是唯一的\",{\"1\":{\"2089\":1}}],[\"软件不存在物理退化\",{\"1\":{\"2089\":1}}],[\"软件复杂性比硬件高\",{\"1\":{\"2089\":1}}],[\"软件复用\",{\"0\":{\"2027\":1},\"1\":{\"2025\":1,\"2027\":1}}],[\"软件可靠性\",{\"1\":{\"2089\":1}}],[\"软件可测试性是通过测试揭示软件缺陷的容易程度\",{\"1\":{\"2009\":1}}],[\"软件即服务\",{\"1\":{\"2049\":1}}],[\"软件元素\",{\"1\":{\"2027\":1}}],[\"软件构件可以被独立地部署并由第三方任意地组装\",{\"1\":{\"2019\":1}}],[\"软件构件是一种组装单元\",{\"1\":{\"2019\":1}}],[\"软件资源\",{\"1\":{\"2016\":1}}],[\"软件产品线\",{\"0\":{\"2013\":1}}],[\"软件的可靠性投入\",{\"1\":{\"2092\":1}}],[\"软件的开发方法和开发环境\",{\"1\":{\"2092\":1}}],[\"软件的\",{\"1\":{\"2011\":1}}],[\"软件的美妙之处在于进化\",{\"1\":{\"442\":1}}],[\"软件体系结构\",{\"1\":{\"1966\":1}}],[\"软件架构分析法\",{\"1\":{\"2011\":1}}],[\"软件架构评估\",{\"0\":{\"2002\":1,\"2010\":1}}],[\"软件架构风格\",{\"0\":{\"1971\":1,\"1976\":1}}],[\"软件架构风格是特定应用领域的惯用模式\",{\"1\":{\"1967\":1}}],[\"软件架构使推理和控制的更改更加简单\",{\"1\":{\"1968\":1}}],[\"软件架构是可传递和可复用的模型\",{\"1\":{\"1968\":1}}],[\"软件架构是项目干系人进行交流的手段\",{\"1\":{\"1968\":1}}],[\"软件架构为软件系统提供了一个结构\",{\"1\":{\"1967\":1}}],[\"软件架构\",{\"1\":{\"1966\":1}}],[\"软件架构的概念\",{\"0\":{\"1966\":1}}],[\"软件架构设计\",{\"0\":{\"1965\":1}}],[\"软件评价巩固\",{\"1\":{\"1962\":1}}],[\"软件管理和软件支持工具\",{\"1\":{\"1962\":1}}],[\"软件开发工具的评价和选择\",{\"1\":{\"1962\":1}}],[\"软件开发工具\",{\"1\":{\"1962\":1}}],[\"软件工具\",{\"0\":{\"1962\":1}}],[\"软件工程\",{\"0\":{\"1893\":1},\"1\":{\"1856\":1}}],[\"软件配置管理核心内容包括\",{\"1\":{\"1961\":1}}],[\"软件配置管理\",{\"0\":{\"1961\":1}}],[\"软件能力成熟度模型集成\",{\"0\":{\"1960\":1}}],[\"软件质量控制与质量保证\",{\"0\":{\"1959\":1}}],[\"软件运行环境的变化是软件维护的一种常见情形\",{\"1\":{\"1948\":1}}],[\"软件维护工具\",{\"1\":{\"1962\":1}}],[\"软件维护的类型\",{\"0\":{\"1949\":1}}],[\"软件维护\",{\"0\":{\"1947\":1}}],[\"软件测试阶段\",{\"0\":{\"1940\":1}}],[\"软件测试\",{\"0\":{\"1938\":1}}],[\"软件系统建模\",{\"0\":{\"1927\":1}}],[\"软件系统组成\",{\"1\":{\"1867\":1}}],[\"软件需求是指用户对系统在功能\",{\"1\":{\"1907\":1}}],[\"软件需求完整性\",{\"1\":{\"1895\":1}}],[\"软件过程模型\",{\"0\":{\"1894\":1}}],[\"软件版本控制系统的核心任务就是查阅项目历史操作记录\",{\"1\":{\"1578\":1}}],[\"软链接可以对目录进行链接\",{\"1\":{\"1002\":1}}],[\"软链接可以对一个不存在的文件名进行链接\",{\"1\":{\"1002\":1}}],[\"软链接可以\",{\"1\":{\"1002\":1}}],[\"软链接\",{\"1\":{\"1002\":2,\"1003\":1}}],[\"放入redo重做\",{\"1\":{\"2267\":1}}],[\"放入undo撤销\",{\"1\":{\"2267\":1}}],[\"放入捕获到的变量内容\",{\"1\":{\"1551\":1}}],[\"放在\",{\"1\":{\"1707\":1}}],[\"放到\",{\"1\":{\"1560\":1}}],[\"放上该文件\",{\"1\":{\"1002\":1}}],[\"放置一些用户安装的系统管理的必备程序\",{\"1\":{\"913\":1}}],[\"秒内\",{\"1\":{\"1649\":1}}],[\"秒就可以干完了\",{\"1\":{\"1649\":2}}],[\"秒就完事了\",{\"1\":{\"1649\":1}}],[\"秒的活现在\",{\"1\":{\"1649\":1}}],[\"秒好了\",{\"1\":{\"1649\":1}}],[\"秒数\",{\"1\":{\"1106\":1}}],[\"秒\",{\"1\":{\"992\":1,\"1649\":1}}],[\"秒后改变了一下模板里面\",{\"1\":{\"1475\":1}}],[\"秒后\",{\"1\":{\"578\":1}}],[\"秒后得到结果并打印\",{\"1\":{\"555\":1}}],[\"死锁\",{\"0\":{\"2156\":1}}],[\"死掉之后结束\",{\"1\":{\"992\":1}}],[\"死区\",{\"1\":{\"898\":1}}],[\"滚动一行\",{\"1\":{\"989\":1}}],[\"滚动一页\",{\"1\":{\"989\":1}}],[\"滚轮事件\",{\"1\":{\"233\":1}}],[\"忽略alpha通道\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"忽略错误信息\",{\"1\":{\"1035\":1}}],[\"忽略全部的空格字符\",{\"1\":{\"1009\":1}}],[\"忽略搜索时的大小写\",{\"1\":{\"989\":1}}],[\"忽略大小写进行匹配\",{\"1\":{\"1015\":1}}],[\"忽略大小写\",{\"1\":{\"535\":1}}],[\"逐步分解求精\",{\"1\":{\"1858\":1}}],[\"逐页显示testfile文档内容\",{\"1\":{\"987\":1}}],[\"逐个解析字符\",{\"1\":{\"663\":1}}],[\"欲显示内容的文档\",{\"1\":{\"986\":1}}],[\"哔\",{\"1\":{\"986\":1}}],[\"覆盖\",{\"0\":{\"1223\":1}}],[\"覆盖该文件的内容\",{\"1\":{\"984\":1}}],[\"覆盖配置文件\",{\"1\":{\"953\":1}}],[\"查询结果对应的表\",{\"1\":{\"2225\":1}}],[\"查询表\",{\"1\":{\"2225\":1}}],[\"查询\",{\"1\":{\"2177\":1}}],[\"查询无数据返回\",{\"1\":{\"2072\":1}}],[\"查询系统中默认所有已经生效的变量\",{\"1\":{\"1097\":1}}],[\"查看renderer\",{\"1\":{\"2808\":1}}],[\"查看texture\",{\"1\":{\"2799\":1}}],[\"查看可用值\",{\"1\":{\"2661\":1,\"2662\":1}}],[\"查看远程仓库\",{\"0\":{\"1606\":1}}],[\"查看贡献者\",{\"0\":{\"1604\":1}}],[\"查看分支\",{\"0\":{\"1593\":1}}],[\"查看所有配置\",{\"0\":{\"1590\":1}}],[\"查看类型声明文件有助于了解库的使用方式\",{\"1\":{\"1355\":1}}],[\"查看版本\",{\"0\":{\"1329\":1}}],[\"查看安装信息\",{\"0\":{\"1146\":1}}],[\"查看安装的nginx的版本\",{\"1\":{\"1144\":1}}],[\"查看运行状态\",{\"0\":{\"1145\":1}}],[\"查看nginx安装版本\",{\"1\":{\"1144\":1}}],[\"查看是否已经添加成功\",{\"0\":{\"1142\":1}}],[\"查看\",{\"0\":{\"1139\":1}}],[\"查看默认权限\",{\"1\":{\"1043\":1}}],[\"查看文件\",{\"1\":{\"990\":1}}],[\"查看文件的最后几行\",{\"1\":{\"984\":1}}],[\"查看文件内容\",{\"1\":{\"984\":1}}],[\"查找<\",{\"1\":{\"1550\":1}}],[\"查找过程如下\",{\"1\":{\"1357\":1}}],[\"查找过去\",{\"1\":{\"1007\":1}}],[\"查找声明文件\",{\"0\":{\"1357\":1}}],[\"查找路径\",{\"1\":{\"1118\":1}}],[\"查找软件包命令\",{\"1\":{\"1073\":1}}],[\"查找文件名中包含\",{\"1\":{\"1016\":1}}],[\"查找指定目录\",{\"1\":{\"1016\":1}}],[\"查找后缀有\",{\"1\":{\"1016\":1}}],[\"查找系统中所有文件长度为\",{\"1\":{\"1007\":1}}],[\"查找当前目录中文件属主具有读\",{\"1\":{\"1007\":1}}],[\"查找当前目录下名为\",{\"1\":{\"1007\":1}}],[\"查找在n分钟内被修改过的文件\",{\"1\":{\"1006\":1}}],[\"查找在n分钟内被访问过的文件\",{\"1\":{\"1006\":1}}],[\"查找在n分钟内状态发生变化的文件\",{\"1\":{\"1006\":1}}],[\"查找在n\",{\"1\":{\"1006\":3}}],[\"查找某个字符\",{\"1\":{\"520\":1,\"521\":1}}],[\"查找方式\",{\"1\":{\"510\":1}}],[\"查找\",{\"1\":{\"339\":1,\"1007\":3}}],[\"名称必须匹配\",{\"1\":{\"2760\":1}}],[\"名称定义一个方法\",{\"1\":{\"806\":1}}],[\"名字分支已经存在\",{\"1\":{\"1597\":1}}],[\"名字来引用那个类型\",{\"1\":{\"1341\":1}}],[\"名字中间只能由字母\",{\"1\":{\"1091\":1}}],[\"名为aaa的子目录删除\",{\"1\":{\"979\":1}}],[\"越新的排越后面\",{\"1\":{\"973\":1}}],[\"及可控性\",{\"1\":{\"2006\":1}}],[\"及时反馈\",{\"1\":{\"1904\":1}}],[\"及其子目录\",{\"1\":{\"1016\":1}}],[\"及\",{\"1\":{\"972\":1,\"1381\":1}}],[\"列出所有可安裝的软件清单命令\",{\"1\":{\"1073\":1}}],[\"列出所有可更新的软件清单命令\",{\"1\":{\"1073\":1}}],[\"列出所有扩展名为\",{\"1\":{\"973\":1}}],[\"列出归档文件中的所有文件和目录\",{\"1\":{\"1025\":1}}],[\"列出归档文件中的内容\",{\"1\":{\"1025\":2}}],[\"列出名为\",{\"1\":{\"1025\":1}}],[\"列出被解压的文件\",{\"1\":{\"1025\":2}}],[\"列出被添加到归档中的文件\",{\"1\":{\"1025\":3}}],[\"列出压缩文件的相关信息\",{\"1\":{\"1021\":1}}],[\"列出辨识结果时\",{\"1\":{\"1012\":1}}],[\"列出目前工作目录下所有名称是s开头的文件\",{\"1\":{\"973\":1}}],[\"列出目前工作目录所含的文件及子目录\",{\"1\":{\"971\":1}}],[\"列出以a\",{\"1\":{\"973\":1}}],[\"列出文件名为file\",{\"1\":{\"973\":1}}],[\"列出文件名为\",{\"1\":{\"973\":3}}],[\"列表之中有大量的列表项\",{\"1\":{\"236\":1}}],[\"群组名称\",{\"1\":{\"956\":1,\"959\":1,\"962\":1}}],[\"锁定用户密码\",{\"1\":{\"950\":1}}],[\"建设信息系统座位企业信息化的重点和关键\",{\"1\":{\"1875\":1}}],[\"建筑\",{\"1\":{\"1848\":1}}],[\"建造者模式将一个复杂对象的构建层于与其表示层相互分类\",{\"1\":{\"1758\":1}}],[\"建造者模式是一步一步的创建一个复杂的对象\",{\"1\":{\"1758\":1}}],[\"建造者模式属于创建型模式的一种\",{\"1\":{\"1758\":1}}],[\"建造者模式\",{\"0\":{\"1758\":1},\"2\":{\"1760\":1}}],[\"建立产品线\",{\"0\":{\"2016\":1}}],[\"建立过程\",{\"0\":{\"2000\":1}}],[\"建立有意义的缺省\",{\"1\":{\"1928\":1}}],[\"建立面向企业的核心业务的数据库\",{\"1\":{\"1875\":1}}],[\"建立概念模型\",{\"1\":{\"1849\":1}}],[\"建立价值体系或评价体系\",{\"1\":{\"1846\":1}}],[\"建立在tcp协议之上\",{\"1\":{\"1736\":1}}],[\"建立了连接\",{\"1\":{\"1727\":1}}],[\"建立tcp连接\",{\"1\":{\"1726\":1}}],[\"建立连接\",{\"1\":{\"1713\":1}}],[\"建立连接的方法是\",{\"1\":{\"1713\":1}}],[\"建立打开indexeddb\",{\"1\":{\"1671\":2}}],[\"建立parent和children关系\",{\"1\":{\"1550\":1}}],[\"建立目录之后的默认权限\",{\"1\":{\"1045\":1}}],[\"建立文件之后的默认权限\",{\"1\":{\"1044\":1}}],[\"建立一个名为test的子目录\",{\"1\":{\"976\":1}}],[\"建立一个名为runoob的子目录\",{\"1\":{\"976\":1}}],[\"建立用户且制定id\",{\"1\":{\"945\":1}}],[\"建立系统帐号\",{\"1\":{\"944\":1}}],[\"建议根据\",{\"1\":{\"2744\":1}}],[\"建议增加\",{\"1\":{\"2331\":1}}],[\"建议添加\",{\"1\":{\"1602\":1}}],[\"建议使用\",{\"1\":{\"1237\":1}}],[\"建议使用全等和不全等在做比较\",{\"1\":{\"627\":1}}],[\"建议在连接到设备之后就使用\",{\"1\":{\"118\":1}}],[\"制品\",{\"1\":{\"2011\":1}}],[\"制作产品发布版本\",{\"1\":{\"1901\":1}}],[\"制度创新\",{\"1\":{\"1873\":1}}],[\"制造技术\",{\"1\":{\"1877\":1}}],[\"制造资源计划\",{\"1\":{\"1868\":1}}],[\"制造过程\",{\"1\":{\"1850\":1}}],[\"制定用户的登入目录\",{\"1\":{\"944\":1}}],[\"制表符\",{\"1\":{\"307\":1,\"538\":1}}],[\"备份上一份备份之后变化的数据\",{\"1\":{\"2266\":1}}],[\"备份所有数据\",{\"1\":{\"2266\":1}}],[\"备份已存在的目标文件\",{\"1\":{\"1003\":1}}],[\"备用链路时\",{\"1\":{\"2212\":1}}],[\"备用路径不相同的情况\",{\"1\":{\"2212\":1}}],[\"备用路径都相同的情况\",{\"1\":{\"2212\":1}}],[\"备用路径的带宽\",{\"1\":{\"2212\":1}}],[\"备用路径\",{\"1\":{\"2212\":1}}],[\"备注信息使用\",{\"1\":{\"1618\":1}}],[\"备注文字会保存在passwd的备注栏位中\",{\"1\":{\"944\":1}}],[\"备忘函数中用\",{\"1\":{\"902\":1}}],[\"备忘模式就是应用闭包的特点的一个典型应用\",{\"1\":{\"902\":1}}],[\"备忘模式\",{\"1\":{\"902\":1}}],[\"帐号建好之后\",{\"1\":{\"943\":1}}],[\"预处理器在\",{\"1\":{\"2741\":1}}],[\"预警\",{\"1\":{\"2121\":1}}],[\"预防性维护\",{\"1\":{\"1949\":1}}],[\"预解析做的事情是提前加载资源\",{\"1\":{\"1703\":1}}],[\"预解析\",{\"0\":{\"1703\":1}}],[\"预定义变量\",{\"0\":{\"1105\":1}}],[\"预设值为\",{\"1\":{\"1021\":1}}],[\"预设会显示\",{\"1\":{\"1009\":1}}],[\"预设只会逐行比较文本文件\",{\"1\":{\"1009\":1}}],[\"预留给安装的软件和服务的\",{\"1\":{\"937\":1}}],[\"预检存活时间\",{\"1\":{\"860\":1}}],[\"qqfactory\",{\"1\":{\"1755\":2}}],[\"qqlogin\",{\"1\":{\"1755\":2}}],[\"qqauthfactory\",{\"1\":{\"1755\":2}}],[\"qq登录\",{\"1\":{\"1755\":2}}],[\"qq\",{\"1\":{\"1755\":2}}],[\"qq聊天\",{\"1\":{\"1715\":1}}],[\"qnamecapture\",{\"1\":{\"1550\":3}}],[\"ql\",{\"1\":{\"1146\":1}}],[\"qa\",{\"1\":{\"1144\":1}}],[\"q退出\",{\"1\":{\"986\":1}}],[\"q\",{\"1\":{\"986\":1,\"989\":3,\"992\":2,\"1018\":1,\"1019\":2,\"1056\":2,\"1058\":2,\"1067\":3,\"1072\":1}}],[\"q或\",{\"1\":{\"930\":1,\"1009\":1,\"1021\":1}}],[\"quiet\",{\"1\":{\"992\":1,\"1021\":1,\"1032\":1}}],[\"quit\",{\"1\":{\"986\":1,\"1135\":1,\"1137\":1}}],[\"query\",{\"1\":{\"859\":1,\"864\":3,\"866\":1}}],[\"querystring\",{\"1\":{\"864\":3}}],[\"queryslector\",{\"1\":{\"725\":1}}],[\"queryselectorall\",{\"1\":{\"725\":1}}],[\"queryselector\",{\"1\":{\"226\":1,\"240\":1,\"339\":2,\"721\":1,\"1525\":1,\"1548\":1}}],[\"queuewatcher\",{\"0\":{\"1541\":1},\"1\":{\"1493\":3,\"1540\":2,\"1541\":1,\"1571\":2}}],[\"queuemicrotask\",{\"1\":{\"584\":2}}],[\"queue\",{\"1\":{\"376\":2,\"1493\":4,\"1541\":5}}],[\"quotes\",{\"1\":{\"21\":1,\"64\":1}}],[\"quoteprops\",{\"1\":{\"20\":1,\"63\":1}}],[\"号不唯一的工作组\",{\"1\":{\"953\":1}}],[\"号\",{\"1\":{\"930\":1,\"1372\":1,\"1448\":1}}],[\"呆滞时间\",{\"1\":{\"929\":1}}],[\"档案里\",{\"1\":{\"921\":2}}],[\"档系统\",{\"1\":{\"919\":1}}],[\"强烈建议在开发期间保持启用这些检查\",{\"1\":{\"2794\":1}}],[\"强星属性安全规则\",{\"1\":{\"2117\":1}}],[\"强调重用可能牺牲其他指标\",{\"1\":{\"1899\":1}}],[\"强调三个方面\",{\"1\":{\"1850\":1}}],[\"强强联盒\",{\"1\":{\"1879\":1}}],[\"强三色不变性\",{\"1\":{\"1650\":1}}],[\"强行压缩文件\",{\"1\":{\"1021\":1}}],[\"强迫打开特殊文件\",{\"1\":{\"989\":1}}],[\"强迫重开机\",{\"1\":{\"921\":1}}],[\"强迫进行\",{\"1\":{\"919\":1}}],[\"强制客户端使用\",{\"1\":{\"1679\":1}}],[\"强制同步渲染\",{\"1\":{\"1203\":1}}],[\"强制终止当前命令\",{\"1\":{\"1082\":1}}],[\"强制写入该档案\",{\"1\":{\"1067\":1}}],[\"强制退出\",{\"1\":{\"1056\":1,\"1058\":1,\"1067\":1}}],[\"强制执行\",{\"1\":{\"1003\":1}}],[\"强制执行属性顺序\",{\"1\":{\"19\":1,\"62\":1}}],[\"强制复制\",{\"1\":{\"998\":1}}],[\"强制转换为数字\",{\"1\":{\"803\":1}}],[\"强制转换\",{\"0\":{\"661\":1},\"1\":{\"669\":1}}],[\"强制\",{\"0\":{\"28\":1,\"71\":1}}],[\"强制代码格式化\",{\"0\":{\"24\":1,\"67\":1}}],[\"强制每行的最大属性数\",{\"1\":{\"19\":1,\"62\":1}}],[\"强制每个组件都应该在自己的文件中\",{\"1\":{\"19\":1,\"62\":1}}],[\"盘\",{\"1\":{\"913\":1}}],[\"介绍\",{\"0\":{\"906\":1}}],[\"介绍完了基本数组类型的转化\",{\"1\":{\"804\":1}}],[\"往上找它的父级作用域链就是\",{\"1\":{\"903\":1}}],[\"往往会产生乱码\",{\"1\":{\"395\":1}}],[\"含竟\",{\"1\":{\"1869\":1}}],[\"含有具体的算法\",{\"1\":{\"1784\":1}}],[\"含有对\",{\"1\":{\"901\":1}}],[\"含义\",{\"1\":{\"202\":1,\"208\":2,\"937\":2,\"938\":1,\"939\":1,\"940\":1,\"1102\":1,\"1104\":1,\"1106\":1,\"1109\":1,\"1116\":1,\"1118\":1,\"1125\":1}}],[\"继续进行对象内存的分配\",{\"1\":{\"1648\":1}}],[\"继续重复上面的步骤\",{\"1\":{\"1637\":1}}],[\"继续其他的操作\",{\"1\":{\"1623\":1}}],[\"继续编译下去\",{\"1\":{\"895\":1}}],[\"继承的任何属性\",{\"1\":{\"2746\":1}}],[\"继承的规则\",{\"1\":{\"30\":1,\"73\":1}}],[\"继承\",{\"0\":{\"483\":1,\"1389\":1}}],[\"紧接着这段代码就会被执行\",{\"1\":{\"895\":1}}],[\"紧跟在<main>后面的元素<footer>会跟在<main>元素的后面\",{\"1\":{\"161\":1}}],[\"词法分析\",{\"1\":{\"895\":2}}],[\"词法环境中\",{\"1\":{\"510\":1}}],[\"词法环境\",{\"1\":{\"349\":1}}],[\"便可以在chrome\",{\"1\":{\"1659\":1}}],[\"便进入了命令模式\",{\"1\":{\"1056\":1}}],[\"便返回\",{\"1\":{\"879\":2}}],[\"便于理解\",{\"1\":{\"1956\":1}}],[\"便于排错或分析程序执行的情形\",{\"1\":{\"1012\":1}}],[\"便于被浏览器\",{\"1\":{\"215\":1}}],[\"便于阅读维护理解\",{\"1\":{\"213\":1}}],[\"否\",{\"1\":{\"879\":8,\"886\":10}}],[\"否则就是1\",{\"1\":{\"2788\":1}}],[\"否则就返回\",{\"1\":{\"715\":1,\"716\":1,\"876\":1}}],[\"否则保持默认值\",{\"1\":{\"2303\":1,\"2304\":1}}],[\"否则当看到一个方法莫名其妙的返回一个next时一定会很奇怪\",{\"1\":{\"1839\":1}}],[\"否则服务器会按照规则把请求重写到一个rest风格的url上\",{\"1\":{\"1698\":1}}],[\"否则丢弃\",{\"1\":{\"1692\":1}}],[\"否则使用路由表查找下一跳地址\",{\"1\":{\"1691\":1}}],[\"否则也会出现错误\",{\"1\":{\"1411\":1}}],[\"否则为\",{\"1\":{\"1307\":1}}],[\"否则它将重用之前的结果\",{\"1\":{\"1264\":1}}],[\"否则函数实例保持不变\",{\"1\":{\"1209\":1}}],[\"否则还是整块输出\",{\"1\":{\"1113\":1}}],[\"否则密码失效\",{\"1\":{\"940\":1}}],[\"否则不用带参数\",{\"1\":{\"816\":1}}],[\"否则拷贝到子元素\",{\"1\":{\"766\":1,\"767\":1}}],[\"否则将创建一个新向量\",{\"1\":{\"2333\":1,\"2334\":1,\"2341\":1,\"2342\":1}}],[\"否则将抛出\",{\"1\":{\"677\":1}}],[\"否则将返回\",{\"1\":{\"281\":1,\"524\":1}}],[\"否则结果为\",{\"1\":{\"607\":1}}],[\"否则导出为全局函数\",{\"1\":{\"465\":1}}],[\"否则的话\",{\"1\":{\"429\":1}}],[\"否则并会报错\",{\"1\":{\"322\":1,\"644\":1}}],[\"否则返回null\",{\"1\":{\"2828\":1}}],[\"否则返回initialvalue\",{\"1\":{\"1274\":1}}],[\"否则返回\",{\"1\":{\"279\":1,\"286\":1,\"289\":1,\"401\":1,\"520\":1,\"521\":1,\"522\":1,\"657\":1,\"678\":1,\"1378\":1}}],[\"否则无法撑起父级元素高度\",{\"1\":{\"182\":1}}],[\"否则会抛出一个错误\",{\"1\":{\"1670\":1}}],[\"否则会抛出异常\",{\"1\":{\"324\":1}}],[\"否则会出现\",{\"1\":{\"849\":1}}],[\"否则会报错\",{\"1\":{\"362\":1}}],[\"否则会\",{\"1\":{\"159\":1}}],[\"否则\",{\"1\":{\"117\":1,\"280\":1,\"523\":1,\"535\":1,\"775\":1,\"806\":1,\"807\":1,\"1265\":1,\"2028\":1}}],[\"林三心今年23岁啦\",{\"1\":{\"865\":1,\"867\":3}}],[\"林三心\",{\"1\":{\"865\":1}}],[\"跟踪远程存储库并将本地存储库连接到远程仓库\",{\"1\":{\"1607\":1}}],[\"跟踪\",{\"1\":{\"1287\":1}}],[\"跟\",{\"1\":{\"865\":1,\"866\":1,\"986\":1}}],[\"跟非\",{\"1\":{\"667\":1}}],[\"岁啦\",{\"1\":{\"864\":1,\"865\":1,\"866\":1}}],[\"收集用户信息\",{\"1\":{\"2220\":1}}],[\"收集数组的依赖\",{\"1\":{\"1563\":1}}],[\"收到\",{\"1\":{\"863\":1}}],[\"收缩\",{\"1\":{\"178\":1}}],[\"场景中的阴影贴图会在下次render调用时刷新\",{\"1\":{\"2805\":1}}],[\"场景格式\",{\"1\":{\"2545\":1,\"2589\":1,\"2691\":1,\"2860\":1}}],[\"场景可从六个方面进行描述\",{\"1\":{\"2011\":1}}],[\"场景\",{\"1\":{\"861\":1,\"867\":1,\"2011\":1},\"2\":{\"2501\":1}}],[\"老\",{\"1\":{\"1648\":1}}],[\"老生代的垃圾回收就比较容易理解了\",{\"1\":{\"1648\":1}}],[\"老生代垃圾回收\",{\"1\":{\"1648\":1}}],[\"老旧\",{\"1\":{\"1641\":1}}],[\"老的el节点下一个节点的前面\",{\"1\":{\"1528\":1}}],[\"老的虚拟节点\",{\"1\":{\"1478\":1}}],[\"老的元素就被移动走了\",{\"1\":{\"1478\":1}}],[\"老的节点\",{\"1\":{\"1478\":1}}],[\"老的索引指向的节点\",{\"1\":{\"1478\":1}}],[\"老的索引\",{\"1\":{\"1478\":1}}],[\"老的有新的没有\",{\"1\":{\"1477\":1}}],[\"老的有儿子\",{\"1\":{\"1476\":1}}],[\"老的样式中有\",{\"1\":{\"1477\":1}}],[\"老的style=\",{\"1\":{\"1477\":1}}],[\"老的没儿子\",{\"1\":{\"1476\":1}}],[\"老规矩\",{\"1\":{\"859\":1}}],[\"老版本的mac系统使用的是回车符cr\",{\"1\":{\"102\":1}}],[\"冒号后面的是要赋值属性\",{\"1\":{\"838\":1}}],[\"冒泡阶段\",{\"1\":{\"234\":1}}],[\"行为和接口设计更为抽象化\",{\"1\":{\"2028\":1}}],[\"行为和属性的高级抽象\",{\"1\":{\"1967\":1}}],[\"行为\",{\"1\":{\"1907\":1}}],[\"行为视图\",{\"1\":{\"1906\":1}}],[\"行为型模式关注的是对象之间的通讯\",{\"1\":{\"1802\":1}}],[\"行为触发\",{\"1\":{\"236\":1}}],[\"行把\",{\"1\":{\"1430\":1}}],[\"行尾\",{\"1\":{\"1057\":1}}],[\"行至文件末尾\",{\"1\":{\"993\":1}}],[\"行内容\",{\"1\":{\"992\":1}}],[\"行过长时间将超出部分舍弃\",{\"1\":{\"989\":1}}],[\"行开始显示testfile之文档内容\",{\"1\":{\"987\":1}}],[\"行\",{\"1\":{\"838\":2,\"984\":1,\"986\":2,\"993\":3,\"1430\":1}}],[\"防读\",{\"1\":{\"2260\":1}}],[\"防篡改\",{\"1\":{\"2108\":1,\"2133\":1}}],[\"防卫式程序设计\",{\"0\":{\"2095\":1}}],[\"防抖与节流的局限性\",{\"1\":{\"1237\":1}}],[\"防抖的关系\",{\"0\":{\"1237\":1}}],[\"防抖\",{\"0\":{\"830\":1}}],[\"防止非法用户进入系统\",{\"1\":{\"2106\":1}}],[\"防止信息被篡改\",{\"1\":{\"2006\":1}}],[\"防止数据在组件之间共享\",{\"1\":{\"1533\":1}}],[\"防止闪烁\",{\"1\":{\"1259\":1}}],[\"防止\",{\"1\":{\"507\":1}}],[\"出口路由\",{\"1\":{\"2220\":1}}],[\"出错时不好排查问题\",{\"1\":{\"1839\":1}}],[\"出错\",{\"1\":{\"1001\":1}}],[\"出来的\",{\"1\":{\"1602\":1}}],[\"出来\",{\"1\":{\"873\":1}}],[\"出于优化性能角度\",{\"1\":{\"827\":1}}],[\"出现了\",{\"1\":{\"1646\":1}}],[\"出现之后\",{\"1\":{\"569\":1,\"895\":1}}],[\"出现在\",{\"1\":{\"362\":1}}],[\"做binlog\",{\"1\":{\"2080\":1}}],[\"做准备\",{\"1\":{\"1521\":1}}],[\"做初始化操作\",{\"1\":{\"1492\":1,\"1527\":1,\"1528\":1,\"1543\":1}}],[\"做一个循环同时循环老的和新的\",{\"1\":{\"1478\":1}}],[\"做法与获取本地\",{\"1\":{\"823\":1}}],[\"做判断\",{\"1\":{\"681\":5}}],[\"启用或禁用剪裁检测\",{\"1\":{\"2844\":1}}],[\"启用场景中的阴影自动更新\",{\"1\":{\"2805\":1}}],[\"启用alpha\",{\"1\":{\"2638\":1}}],[\"启用严格模式解析\",{\"1\":{\"1653\":1}}],[\"启用严格的\",{\"1\":{\"1454\":1}}],[\"启用装饰器\",{\"1\":{\"1454\":1}}],[\"启用所有严格类型检查选项\",{\"1\":{\"1454\":1}}],[\"启用反向代理\",{\"1\":{\"1153\":2}}],[\"启动项目\",{\"0\":{\"1331\":1}}],[\"启动服务\",{\"1\":{\"1137\":1}}],[\"启动这个就是nginx的可执行文件\",{\"1\":{\"1135\":1}}],[\"启动相关文件\",{\"1\":{\"913\":1}}],[\"启动目录\",{\"1\":{\"913\":1}}],[\"启动\",{\"0\":{\"1135\":1},\"1\":{\"817\":1,\"866\":1}}],[\"启后\",{\"1\":{\"581\":2}}],[\"尚未调用\",{\"1\":{\"817\":1}}],[\"未过滤\",{\"1\":{\"2805\":1}}],[\"未渲染\",{\"1\":{\"2647\":1}}],[\"未确认的报文段和允许发送但还未发送的报文段\",{\"1\":{\"1724\":1}}],[\"未被标记\",{\"1\":{\"1650\":1}}],[\"未被纳入版本控制\",{\"1\":{\"1584\":1}}],[\"未缓存改动\",{\"0\":{\"1633\":1}}],[\"未使用\",{\"1\":{\"1614\":2}}],[\"未修改状态\",{\"1\":{\"1584\":1}}],[\"未跟踪的文件是尚未添加到\",{\"1\":{\"1584\":1}}],[\"未跟踪\",{\"1\":{\"1584\":1}}],[\"未指定其类型\",{\"1\":{\"1417\":1}}],[\"未指定为\",{\"1\":{\"1415\":1}}],[\"未变而产生的不必要的组件重渲染时\",{\"1\":{\"1267\":1}}],[\"未初始化\",{\"1\":{\"817\":1}}],[\"未能将子元素包裹住\",{\"1\":{\"153\":1}}],[\"形状缓冲几何体\",{\"0\":{\"2402\":1}}],[\"形成领域参考模型\",{\"1\":{\"1998\":1}}],[\"形成模块结构图\",{\"1\":{\"1929\":1}}],[\"形成需求基线\",{\"1\":{\"1907\":1}}],[\"形成需求规格\",{\"1\":{\"1907\":1}}],[\"形成srs\",{\"1\":{\"1907\":1}}],[\"形成对比\",{\"1\":{\"1670\":1}}],[\"形成了闭包\",{\"1\":{\"1653\":1}}],[\"形成内存碎片\",{\"1\":{\"1646\":1}}],[\"形成一个作用域链\",{\"1\":{\"901\":1}}],[\"形成一个event\",{\"1\":{\"378\":1}}],[\"形如\",{\"1\":{\"1550\":5}}],[\"形式变了\",{\"1\":{\"901\":1}}],[\"形式的响应数据\",{\"1\":{\"817\":1}}],[\"区块链是一个分布式账本\",{\"1\":{\"2133\":1}}],[\"区块链中的程序规则会自行判断活动是否有效\",{\"1\":{\"2132\":1}}],[\"区块链采用基于协商一直的规范和协议\",{\"1\":{\"2132\":1}}],[\"区块链上的\",{\"1\":{\"2132\":1}}],[\"区块链的特点\",{\"0\":{\"2132\":1}}],[\"区块链\",{\"1\":{\"2131\":1}}],[\"区块链技术\",{\"0\":{\"2130\":1}}],[\"区分同步跟异步两种情况\",{\"0\":{\"817\":1}}],[\"区别如下\",{\"1\":{\"713\":1}}],[\"区别\",{\"0\":{\"651\":1,\"1672\":1}}],[\"响应延迟和吞吐量等\",{\"1\":{\"2171\":1}}],[\"响应能力\",{\"1\":{\"2121\":1}}],[\"响应度量\",{\"1\":{\"2011\":1}}],[\"响应时间小于1s\",{\"1\":{\"2004\":1}}],[\"响应或事件\",{\"1\":{\"1794\":1}}],[\"响应的模式\",{\"1\":{\"1671\":1}}],[\"响应式数据\",{\"2\":{\"1538\":1}}],[\"响应式数据可以使用ob来获取\",{\"1\":{\"1535\":1}}],[\"响应式数据核心\",{\"1\":{\"1533\":1}}],[\"响应式数据原理\",{\"0\":{\"1532\":1}}],[\"响应式值包括\",{\"1\":{\"1241\":1}}],[\"响应\",{\"1\":{\"813\":1,\"2011\":1,\"2121\":1}}],[\"期望数字参数的内置\",{\"1\":{\"806\":1}}],[\"算法需要自由切换的场景\",{\"1\":{\"1785\":1}}],[\"算法是在服务端进⾏的包合并情况\",{\"1\":{\"1730\":1}}],[\"算法中将堆内存一分为二\",{\"1\":{\"1648\":1}}],[\"算法将其转换为原始值\",{\"1\":{\"807\":1}}],[\"算法\",{\"1\":{\"806\":2,\"807\":2,\"1646\":1,\"1648\":2,\"1722\":1,\"1730\":4,\"2077\":1}}],[\"算法使用\",{\"1\":{\"806\":1}}],[\"算法首先会尝试\",{\"1\":{\"806\":1}}],[\"算法根据\",{\"1\":{\"806\":1}}],[\"算法用于确定对象在特定上下文中应转换为什么的信号\",{\"1\":{\"805\":1}}],[\"算法可以分为两部分\",{\"1\":{\"804\":1}}],[\"算数运算符\",{\"1\":{\"667\":1}}],[\"触发更新前后的值相等\",{\"1\":{\"1273\":1}}],[\"触发某些动画或其他任务\",{\"1\":{\"1251\":1}}],[\"触发的\",{\"1\":{\"1244\":1}}],[\"触发统计事件\",{\"1\":{\"832\":1}}],[\"触发\",{\"1\":{\"789\":1}}],[\"确认测试\",{\"1\":{\"1940\":1}}],[\"确认测试和系统测试阶段\",{\"1\":{\"1939\":1}}],[\"确认号ack=u+1\",{\"1\":{\"1728\":2}}],[\"确认号ack=y+1\",{\"1\":{\"1726\":1}}],[\"确认号ack=x+1\",{\"1\":{\"1726\":1}}],[\"确认报文段ack=1\",{\"1\":{\"1726\":1}}],[\"确认使用以上信息提交\",{\"1\":{\"16\":1,\"59\":1}}],[\"确实很简单\",{\"1\":{\"1646\":1}}],[\"确实需要控制同步更新时\",{\"1\":{\"1203\":1}}],[\"确定\",{\"1\":{\"2331\":1}}],[\"确定每个模块的功能和调用关系\",{\"1\":{\"1929\":1}}],[\"确定系统范围\",{\"1\":{\"1901\":1}}],[\"确定目标\",{\"1\":{\"1846\":1}}],[\"确定问题出在前半部分还是后半部分\",{\"1\":{\"1637\":1}}],[\"确定赋值断言\",{\"0\":{\"1448\":1}}],[\"确定对象应转换为的原始值类型之后\",{\"1\":{\"806\":1}}],[\"确切地讲是\",{\"1\":{\"1443\":1}}],[\"确切地说是\",{\"1\":{\"1427\":1}}],[\"确保网络的物理连接符合逻辑连接的要求\",{\"1\":{\"2218\":1}}],[\"确保信息\",{\"1\":{\"2108\":1}}],[\"确保软件对最终用户是可用的\",{\"1\":{\"1901\":1}}],[\"确保数据的安全性和完整性\",{\"1\":{\"1796\":1}}],[\"确保了应用各个部分状态的一致性\",{\"1\":{\"1765\":1}}],[\"确保只创建一个类的实例\",{\"1\":{\"1762\":1}}],[\"确保仅当真正需要的数据更改时才重新渲染组件\",{\"1\":{\"1228\":1}}],[\"确保函数的引用在依赖没有改变时保持稳定\",{\"1\":{\"1211\":1}}],[\"确保在相同数据类型之间完成操作\",{\"1\":{\"774\":1}}],[\"深度及模板缓存将会在渲染之前清除\",{\"1\":{\"2836\":1}}],[\"深度或模板缓存\",{\"1\":{\"2812\":1}}],[\"深度基于相机远近平面\",{\"1\":{\"2725\":1}}],[\"深度网格材质\",{\"0\":{\"2724\":1}}],[\"深度模式所有可能的取值请查阅constants\",{\"1\":{\"2651\":1}}],[\"深度和宽度均不宜过高\",{\"1\":{\"1930\":1}}],[\"深度集成\",{\"1\":{\"1237\":1}}],[\"深度优先\",{\"1\":{\"766\":1}}],[\"深拷贝的实现\",{\"1\":{\"768\":1}}],[\"深拷贝对于一些对象可以使用\",{\"1\":{\"768\":1}}],[\"深拷贝相对浅拷贝而言\",{\"1\":{\"768\":1}}],[\"深拷贝是指\",{\"1\":{\"761\":1}}],[\"深拷贝\",{\"0\":{\"761\":1},\"1\":{\"768\":1}}],[\"深拷贝与浅拷贝\",{\"0\":{\"752\":1},\"2\":{\"770\":1}}],[\"拷贝\",{\"1\":{\"763\":1}}],[\"拷贝的对象中如果有函数\",{\"1\":{\"763\":1}}],[\"拷贝的就是内存地址\",{\"1\":{\"753\":1}}],[\"拷贝的就是基本数据类型的值\",{\"1\":{\"753\":1}}],[\"kakuqo\",{\"1\":{\"1412\":1,\"1413\":1,\"1426\":1,\"1467\":2}}],[\"k>>\",{\"1\":{\"1380\":1}}],[\"k3\",{\"1\":{\"1366\":1}}],[\"k2\",{\"1\":{\"1366\":1}}],[\"k1\",{\"1\":{\"1366\":1}}],[\"known\",{\"1\":{\"1338\":1}}],[\"koi8\",{\"1\":{\"1152\":1}}],[\"koi\",{\"1\":{\"1150\":2}}],[\"kobe\",{\"1\":{\"762\":1}}],[\"kb\",{\"1\":{\"1006\":1}}],[\"kerwineach\",{\"1\":{\"1832\":2}}],[\"kerwin2\",{\"1\":{\"1740\":2,\"1743\":3}}],[\"kerwin\",{\"1\":{\"1740\":2,\"1743\":3,\"1806\":1}}],[\"keepalive\",{\"1\":{\"1152\":2,\"1153\":1}}],[\"kemei\",{\"1\":{\"908\":1}}],[\"keyof\",{\"0\":{\"1366\":1},\"1\":{\"1366\":10,\"1370\":1,\"1371\":2,\"1372\":3,\"1373\":2,\"1374\":1,\"1375\":1,\"1376\":2,\"1380\":2}}],[\"key为undefined则拷贝到父元素\",{\"1\":{\"766\":1,\"767\":1}}],[\"keyup\",{\"1\":{\"432\":4,\"829\":1}}],[\"key2\",{\"1\":{\"313\":3}}],[\"key1\",{\"1\":{\"313\":3}}],[\"keycode\",{\"1\":{\"239\":1,\"343\":1}}],[\"keypress\",{\"1\":{\"233\":1}}],[\"keydown\",{\"1\":{\"233\":1,\"343\":1,\"829\":1}}],[\"key\",{\"1\":{\"88\":3,\"269\":17,\"295\":1,\"297\":1,\"356\":4,\"357\":4,\"760\":4,\"763\":1,\"766\":6,\"767\":7,\"768\":10,\"849\":5,\"859\":3,\"882\":1,\"884\":2,\"885\":2,\"902\":6,\"1152\":2,\"1153\":2,\"1193\":1,\"1195\":1,\"1363\":1,\"1366\":13,\"1370\":4,\"1467\":6,\"1468\":2,\"1469\":2,\"1477\":11,\"1478\":6,\"1485\":15,\"1514\":1,\"1527\":3,\"1528\":6,\"1533\":6,\"1534\":5,\"1535\":2,\"1551\":2,\"1560\":2,\"1563\":2,\"1569\":4,\"1570\":6,\"1798\":4,\"1832\":1,\"2061\":1,\"2240\":1}}],[\"keysmap\",{\"1\":{\"1478\":2}}],[\"keys\",{\"0\":{\"879\":1,\"882\":1},\"1\":{\"88\":1,\"295\":5,\"297\":1,\"710\":3,\"859\":1,\"879\":5,\"882\":3,\"883\":3,\"885\":4,\"886\":1,\"1367\":2,\"1370\":4,\"1534\":4}}],[\"key=\",{\"1\":{\"83\":1,\"1168\":1,\"1210\":1,\"1212\":1,\"1235\":1,\"1265\":1,\"1267\":2,\"1311\":1}}],[\"keyword\",{\"1\":{\"21\":1,\"64\":1,\"1505\":1}}],[\"k\",{\"1\":{\"766\":7,\"767\":7,\"919\":1,\"953\":1,\"989\":1,\"1006\":1,\"1018\":1,\"1061\":1,\"1363\":2,\"1366\":7,\"1370\":3,\"1375\":2,\"1376\":2,\"1380\":3,\"1491\":4}}],[\"浅拷贝可以使用\",{\"1\":{\"768\":1}}],[\"浅拷贝指的是将一个对象的属性值复制到另一个对象\",{\"1\":{\"768\":1}}],[\"浅拷贝的实现\",{\"1\":{\"760\":1,\"768\":1}}],[\"浅拷贝是指\",{\"1\":{\"753\":1}}],[\"浅拷贝\",{\"0\":{\"753\":1},\"1\":{\"768\":1,\"1173\":1}}],[\"倒序显示文件和目录\",{\"1\":{\"972\":1}}],[\"倒序遍历和上面实现思路类似\",{\"1\":{\"749\":1}}],[\"倒序遍历\",{\"0\":{\"749\":1}}],[\"倒序排序\",{\"1\":{\"698\":1}}],[\"随机分配\",{\"1\":{\"2077\":1}}],[\"随机算法\",{\"1\":{\"2077\":1}}],[\"随机产生一个除了索引为\",{\"1\":{\"748\":1}}],[\"随机产生一个索引值\",{\"1\":{\"748\":1}}],[\"随着光线照射的变远\",{\"1\":{\"2884\":1}}],[\"随着产品种类的增加\",{\"1\":{\"1752\":1}}],[\"随着请求的叠加\",{\"1\":{\"1660\":1}}],[\"随着项目复杂性的增加\",{\"1\":{\"1630\":1}}],[\"随后当垃圾回收器再次被启动\",{\"1\":{\"1650\":1}}],[\"随后会被移动到老生代中\",{\"1\":{\"1648\":1}}],[\"随后进入垃圾清理阶段\",{\"1\":{\"1648\":1}}],[\"随后\",{\"1\":{\"1283\":1}}],[\"随后才会清空其它微任务\",{\"1\":{\"383\":1}}],[\"达到了我们预期的效果\",{\"1\":{\"739\":1}}],[\"达到了预期的效果\",{\"1\":{\"737\":1}}],[\"达到数组扁平化的目的\",{\"1\":{\"737\":1}}],[\"达到承前启后的效果\",{\"1\":{\"581\":1}}],[\"拍平\",{\"1\":{\"734\":1}}],[\"举例来说\",{\"1\":{\"1062\":1,\"1063\":1}}],[\"举例\",{\"1\":{\"767\":1,\"1372\":1}}],[\"举例说明\",{\"1\":{\"482\":1}}],[\"举个简单的例子\",{\"1\":{\"734\":1}}],[\"借用\",{\"0\":{\"732\":1},\"1\":{\"731\":1}}],[\"借用数组方法\",{\"0\":{\"731\":1}}],[\"借助\",{\"0\":{\"486\":1}}],[\"借助事件代理\",{\"1\":{\"236\":1}}],[\"说起\",{\"1\":{\"898\":1}}],[\"说到暂时性死区\",{\"1\":{\"898\":1}}],[\"说到作用域那就不得不先说一说编译原理\",{\"1\":{\"895\":1}}],[\"说明该报文段以后的报文段很有可能发生丢失了\",{\"1\":{\"1724\":1}}],[\"说明没有变量在使用\",{\"1\":{\"1646\":1}}],[\"说明是一个计算属性\",{\"1\":{\"1571\":1}}],[\"说明\",{\"1\":{\"723\":1,\"864\":1,\"866\":1,\"1039\":3,\"1752\":1,\"2484\":1,\"2806\":1}}],[\"说完暂时性死区\",{\"1\":{\"898\":1}}],[\"说完\",{\"1\":{\"408\":1}}],[\"性能通常会更高\",{\"1\":{\"2613\":1}}],[\"性能最高\",{\"1\":{\"2213\":1}}],[\"性能评估\",{\"0\":{\"2171\":1}}],[\"性能评价方法\",{\"0\":{\"2170\":1}}],[\"性能调整\",{\"0\":{\"2168\":1}}],[\"性能指标\",{\"0\":{\"2167\":1}}],[\"性能降低\",{\"1\":{\"2055\":1}}],[\"性能场景示例\",{\"1\":{\"2011\":1}}],[\"性能是指系统的相应能力\",{\"1\":{\"2004\":1}}],[\"性能较差\",{\"1\":{\"1979\":1}}],[\"性能问题\",{\"1\":{\"1813\":1,\"1838\":1}}],[\"性能开销\",{\"1\":{\"1805\":1}}],[\"性能开销小\",{\"1\":{\"1736\":1}}],[\"性能损失\",{\"1\":{\"1797\":1}}],[\"性能检测工具\",{\"1\":{\"1332\":1}}],[\"性能\",{\"0\":{\"2004\":1,\"2166\":1},\"1\":{\"1274\":1,\"1907\":1,\"1940\":1,\"2011\":1}}],[\"性能考虑\",{\"1\":{\"1258\":1}}],[\"性能非常差不推荐使用\",{\"1\":{\"719\":1}}],[\"性能优化\",{\"0\":{\"1224\":1},\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1,\"1199\":1,\"1796\":1}}],[\"映射到真实dom上\",{\"1\":{\"1528\":1}}],[\"映射类型\",{\"0\":{\"1371\":1}}],[\"映射指令的值\",{\"1\":{\"1153\":1}}],[\"映射\",{\"1\":{\"719\":1}}],[\"遍历结束之后\",{\"1\":{\"1650\":1}}],[\"遍历过程中能到达的元素称为活动对象\",{\"1\":{\"1648\":1}}],[\"遍历整个空闲列表\",{\"1\":{\"1646\":2}}],[\"遍历父亲\",{\"1\":{\"1485\":1}}],[\"遍历不可枚举属性\",{\"1\":{\"886\":1}}],[\"遍历原型链\",{\"1\":{\"886\":1}}],[\"遍历基本属性\",{\"1\":{\"886\":1}}],[\"遍历具有\",{\"1\":{\"879\":1}}],[\"遍历\",{\"1\":{\"760\":1,\"768\":1,\"822\":1,\"886\":1,\"2296\":1},\"2\":{\"893\":1}}],[\"遍历参数操作\",{\"0\":{\"727\":1}}],[\"遍历获取的是对象的键值\",{\"1\":{\"719\":1}}],[\"遍历出来的是键值名\",{\"1\":{\"718\":1}}],[\"遍历出来的是数组的索引值\",{\"1\":{\"718\":1}}],[\"遍历对象的时候\",{\"1\":{\"718\":1}}],[\"遍历数组的方法还有\",{\"1\":{\"717\":1}}],[\"遍历循环\",{\"0\":{\"870\":1},\"1\":{\"268\":1}}],[\"迭代查询\",{\"1\":{\"2211\":1}}],[\"迭代和增量\",{\"1\":{\"1901\":1}}],[\"迭代器模式可以把迭代的过程从业务逻辑中分出来\",{\"1\":{\"1832\":1}}],[\"迭代器模式是指提供一种方法顺序访问一个聚合对象中的各个元素\",{\"1\":{\"1832\":1}}],[\"迭代器的对象的属性\",{\"1\":{\"879\":1}}],[\"迭代器方法\",{\"0\":{\"710\":1}}],[\"迭代方法\",{\"0\":{\"711\":1}}],[\"断言函数的返回值决定了相应索引的元素是否被认为匹配\",{\"1\":{\"709\":1}}],[\"断言函数\",{\"0\":{\"709\":1}}],[\"归根结底\",{\"1\":{\"1646\":1}}],[\"归并方法\",{\"0\":{\"704\":1}}],[\"归结其原因有两点\",{\"1\":{\"569\":1}}],[\"排队时延等组成\",{\"1\":{\"2201\":1}}],[\"排序可能不总是有用\",{\"1\":{\"2806\":1}}],[\"排序用于尝试正确渲染出具有一定透明度的对象\",{\"1\":{\"2806\":1}}],[\"排序等操作\",{\"1\":{\"1715\":1}}],[\"排序\",{\"1\":{\"698\":1}}],[\"排序方法\",{\"0\":{\"697\":1}}],[\"排开\",{\"1\":{\"178\":1}}],[\"称为基准测试程序\",{\"1\":{\"2170\":1}}],[\"称为订阅者\",{\"1\":{\"1810\":1}}],[\"称为发布者\",{\"1\":{\"1810\":1}}],[\"称为函数作用域\",{\"1\":{\"897\":1}}],[\"称为弹出\",{\"1\":{\"691\":1}}],[\"称为推入\",{\"1\":{\"691\":1}}],[\"众所周知\",{\"1\":{\"691\":1}}],[\"树形\",{\"1\":{\"2204\":1}}],[\"树形或有向无回路图结构\",{\"1\":{\"2028\":1}}],[\"树和\",{\"1\":{\"1707\":1}}],[\"树\",{\"1\":{\"682\":1,\"1707\":1}}],[\"树中移除时\",{\"1\":{\"437\":1}}],[\"树中删除该节点之后也是如此\",{\"1\":{\"434\":1}}],[\"推动与生态合作伙伴间资源\",{\"1\":{\"1889\":1}}],[\"推动改进企业与消费者之间的关系\",{\"1\":{\"1889\":1}}],[\"推动产业链的重构\",{\"1\":{\"1889\":1}}],[\"推理机\",{\"1\":{\"1866\":1}}],[\"推荐\",{\"1\":{\"1658\":1}}],[\"推荐通过\",{\"1\":{\"681\":1}}],[\"推送标签\",{\"0\":{\"1619\":1}}],[\"推送到远程仓库\",{\"0\":{\"1610\":1}}],[\"推送到\",{\"0\":{\"12\":1,\"55\":1}}],[\"推断参数\",{\"1\":{\"1442\":1}}],[\"推断出\",{\"1\":{\"1442\":1}}],[\"推断出返回值的类型也是\",{\"1\":{\"1442\":1}}],[\"项\",{\"1\":{\"677\":1}}],[\"项目参加者之间通常都存在交流上的困难\",{\"1\":{\"1923\":1}}],[\"项目经理\",{\"1\":{\"1904\":1}}],[\"项目管理工具\",{\"1\":{\"1962\":1}}],[\"项目管理\",{\"0\":{\"1952\":1},\"1\":{\"1902\":1}}],[\"项目迅速传播\",{\"1\":{\"1577\":1}}],[\"项目的根路径\",{\"1\":{\"1452\":1}}],[\"项目\",{\"1\":{\"1577\":1},\"2\":{\"42\":1,\"84\":1,\"90\":1}}],[\"×\",{\"1\":{\"677\":1,\"678\":1}}],[\"弊端\",{\"1\":{\"658\":1}}],[\"警戒值\",{\"1\":{\"656\":1}}],[\"啥都没有\",{\"1\":{\"653\":1}}],[\"隐藏复杂性\",{\"1\":{\"1796\":1}}],[\"隐藏输入的数据\",{\"1\":{\"1106\":1}}],[\"隐藏性\",{\"1\":{\"653\":1}}],[\"隐式转换\",{\"0\":{\"788\":1,\"794\":1},\"1\":{\"788\":1}}],[\"隐式类型转换也称为类型强制\",{\"1\":{\"774\":1}}],[\"隐式类型转换是将一种数据类型转换为另一种数据类型\",{\"1\":{\"774\":1}}],[\"隐式类型转换\",{\"0\":{\"774\":1},\"1\":{\"772\":1}}],[\"隐式绑定\",{\"0\":{\"354\":1},\"1\":{\"352\":1,\"360\":1}}],[\"唯一的区别就在单个数字参数的处理上\",{\"1\":{\"678\":1}}],[\"唯一的不同在于\",{\"1\":{\"323\":1,\"576\":1}}],[\"唯一性\",{\"1\":{\"653\":1,\"2089\":1}}],[\"复用者就必须借助设计信息和文档来修改构件\",{\"1\":{\"2028\":1}}],[\"复用者即可通过对实参的选取来调整构件的功能或行为\",{\"1\":{\"2028\":1}}],[\"复用老节点\",{\"1\":{\"1476\":1}}],[\"复杂算法\",{\"1\":{\"1861\":1}}],[\"复杂性和开销也随之增加\",{\"1\":{\"2162\":1}}],[\"复杂性较高\",{\"1\":{\"1979\":1}}],[\"复杂性低\",{\"1\":{\"1948\":1}}],[\"复杂性增加\",{\"1\":{\"1838\":1}}],[\"复杂性\",{\"1\":{\"1275\":1,\"2089\":1}}],[\"复杂计算与频繁的重新渲染\",{\"1\":{\"1212\":1}}],[\"复杂数据类型\",{\"1\":{\"652\":1}}],[\"复原前一个动作\",{\"1\":{\"1063\":1}}],[\"复制透明\",{\"1\":{\"2232\":1}}],[\"复制光标所在的那个字符到该行行尾的所有数据\",{\"1\":{\"1063\":1}}],[\"复制光标所在的那个字符到该行行首的所有数据\",{\"1\":{\"1063\":1}}],[\"复制光标所在的向下n行\",{\"1\":{\"1063\":1}}],[\"复制游标所在行到最后一行的所有数据\",{\"1\":{\"1063\":1}}],[\"复制游标所在行到第一行的所有数据\",{\"1\":{\"1063\":1}}],[\"复制游标所在的那一行\",{\"1\":{\"1063\":1}}],[\"复制与贴上\",{\"0\":{\"1063\":1}}],[\"复制粘贴\",{\"0\":{\"1060\":1}}],[\"复制当前行\",{\"1\":{\"1056\":1}}],[\"复制等\",{\"1\":{\"1006\":1}}],[\"复制文件\",{\"1\":{\"999\":1}}],[\"复制时保留链接\",{\"1\":{\"998\":1}}],[\"复制到指定目标索引位置\",{\"1\":{\"685\":1}}],[\"复制和填充方法\",{\"0\":{\"683\":1}}],[\"复制代码\",{\"1\":{\"275\":1}}],[\"复制\",{\"1\":{\"31\":1,\"74\":1,\"344\":1,\"2265\":1}}],[\"堆中的对象引用关系随时都有可能发生变化\",{\"1\":{\"1651\":1}}],[\"堆中的对象指针可能发生了变化\",{\"1\":{\"1650\":1}}],[\"堆\",{\"1\":{\"650\":1}}],[\"堆快照将显示分离的\",{\"1\":{\"434\":1}}],[\"栈内存中保存了一个地址\",{\"1\":{\"1644\":1}}],[\"栈结构用来存watcher\",{\"1\":{\"1562\":1}}],[\"栈结构\",{\"1\":{\"1550\":2}}],[\"栈是一种后进先出的结构\",{\"1\":{\"691\":1}}],[\"栈方法\",{\"0\":{\"691\":1}}],[\"栈\",{\"1\":{\"650\":1,\"766\":1}}],[\"栈底是函数最外层的变量\",{\"1\":{\"510\":1}}],[\"逗号操作符也没啥好说的\",{\"1\":{\"645\":1}}],[\"逗号操作符\",{\"0\":{\"645\":1}}],[\"共识算法\",{\"1\":{\"2133\":1}}],[\"共有方法请参见其基类material和\",{\"1\":{\"2621\":1}}],[\"共有方法请参见其基类material\",{\"1\":{\"2609\":1,\"2713\":1,\"2766\":1,\"2782\":1}}],[\"共有方法请参见其基类camera\",{\"1\":{\"2541\":1,\"2580\":1}}],[\"共有方法请参见其基类cure\",{\"1\":{\"2421\":1}}],[\"共有方法请参见其基类object3d\",{\"1\":{\"2517\":1}}],[\"共有属性请参见其基类material和shadermaterial\",{\"1\":{\"2620\":1}}],[\"共有属性请参见其基类material\",{\"1\":{\"2600\":1,\"2698\":1,\"2778\":1}}],[\"共有属性请参见其基类\",{\"1\":{\"2569\":1,\"2747\":1}}],[\"共有属性请参见其基类camera\",{\"1\":{\"2531\":1}}],[\"共有属性请参见其基类cure\",{\"1\":{\"2418\":1}}],[\"共有属性请参见其基类object3d\",{\"1\":{\"2511\":1}}],[\"共有八种数据类型\",{\"1\":{\"650\":1}}],[\"共有五种数据类型\",{\"1\":{\"642\":1}}],[\"共享数据库\",{\"1\":{\"1886\":1}}],[\"共享的问题\",{\"1\":{\"494\":1}}],[\"共享\",{\"1\":{\"490\":1,\"493\":1,\"2744\":1}}],[\"乘法减小\",{\"1\":{\"1722\":1}}],[\"乘法操作符用于计算两个数的乘积\",{\"1\":{\"618\":1}}],[\"乘法操作符\",{\"0\":{\"618\":1}}],[\"乘赋值操作符\",{\"1\":{\"638\":1}}],[\"感觉代码就有些难读懂了\",{\"1\":{\"637\":1}}],[\"感觉用处不大\",{\"1\":{\"542\":1}}],[\"↓\",{\"1\":{\"627\":4,\"1061\":1}}],[\"逻辑结构设计\",{\"0\":{\"2238\":1}}],[\"逻辑透明\",{\"1\":{\"2232\":1}}],[\"逻辑上的表\",{\"1\":{\"2226\":1}}],[\"逻辑上下文\",{\"0\":{\"795\":1}}],[\"逻辑网络设计是体现网络设计核心思想的关键阶段\",{\"1\":{\"2217\":1}}],[\"逻辑网络设计\",{\"0\":{\"2217\":1}}],[\"逻辑覆盖测试\",{\"1\":{\"1939\":1}}],[\"逻辑维\",{\"0\":{\"1846\":1}}],[\"逻辑的函数\",{\"1\":{\"1241\":1}}],[\"逻辑或\",{\"1\":{\"1086\":1}}],[\"逻辑或操作符也是具有短路特性\",{\"1\":{\"625\":1}}],[\"逻辑或操作符和逻辑与操作符类似\",{\"1\":{\"625\":1}}],[\"逻辑或操作符\",{\"0\":{\"625\":1}}],[\"逻辑与\",{\"1\":{\"1086\":1}}],[\"逻辑与操作符是一种短路操作符\",{\"1\":{\"624\":1}}],[\"逻辑与操作符的两个操作数都为真时\",{\"1\":{\"624\":1}}],[\"逻辑与操作符\",{\"0\":{\"624\":1}}],[\"逻辑表达式\",{\"1\":{\"795\":1}}],[\"逻辑判断相关的操作符\",{\"1\":{\"774\":1}}],[\"逻辑运算符\",{\"0\":{\"795\":1},\"1\":{\"666\":1,\"795\":1}}],[\"逻辑非操作规则如下\",{\"1\":{\"623\":1}}],[\"逻辑非操作符也可以用于将任何值转化为布尔值\",{\"1\":{\"623\":1}}],[\"逻辑非操作符首先会将操作数转化为布尔值\",{\"1\":{\"623\":1}}],[\"逻辑非操作符可以用于javascript中的任何值\",{\"1\":{\"623\":1}}],[\"逻辑非操作符\",{\"0\":{\"623\":1}}],[\"逻辑赋值操作符\",{\"0\":{\"329\":1}}],[\"干掉很多多余的id\",{\"1\":{\"622\":1}}],[\"减\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"减去\",{\"1\":{\"1044\":1,\"1045\":1}}],[\"减少整体系统费用\",{\"1\":{\"2199\":1}}],[\"减少了系统的体积和功耗\",{\"1\":{\"2179\":1}}],[\"减少了出错和被攻击的可能行\",{\"1\":{\"909\":1}}],[\"减少系统的持续运行时间\",{\"1\":{\"2177\":1}}],[\"减少维护负载均衡服务器成本\",{\"1\":{\"2077\":1}}],[\"减少对短期记忆的要求\",{\"1\":{\"1928\":1}}],[\"减少用户的记忆负担\",{\"1\":{\"1928\":1}}],[\"减少大量的if或switch语法\",{\"1\":{\"1839\":1}}],[\"减少处理时间\",{\"1\":{\"1703\":1}}],[\"减少\",{\"1\":{\"1229\":1}}],[\"减少内存消耗\",{\"1\":{\"236\":1}}],[\"减赋值操作符\",{\"1\":{\"638\":1}}],[\"减法操作和加法操作符类似\",{\"1\":{\"617\":1}}],[\"减法操作符\",{\"0\":{\"617\":1}}],[\"交易信息是公开的\",{\"1\":{\"2132\":1}}],[\"交通运输\",{\"1\":{\"2111\":1}}],[\"交流\",{\"1\":{\"1904\":1}}],[\"交叉类型是将多个类型合并为一个类型\",{\"1\":{\"1460\":1}}],[\"交叉类型\",{\"0\":{\"1457\":1,\"1460\":1},\"1\":{\"1460\":1},\"2\":{\"1462\":1}}],[\"交互性强\",{\"1\":{\"2034\":1}}],[\"交互性较差\",{\"1\":{\"1979\":1}}],[\"交互规则\",{\"1\":{\"2025\":1}}],[\"交互频度小\",{\"1\":{\"1886\":1}}],[\"交互频繁\",{\"1\":{\"1886\":2}}],[\"交互模式\",{\"1\":{\"1003\":1}}],[\"交互事件\",{\"1\":{\"376\":1}}],[\"交换机等设备之间的独立备用链路构成\",{\"1\":{\"2212\":1}}],[\"交换机重启或手动清空时地址表会清空\",{\"1\":{\"2208\":1}}],[\"交换机初始状态时地址表为空\",{\"1\":{\"2208\":1}}],[\"交换机需要实现的功能如下所述\",{\"1\":{\"2208\":1}}],[\"交换机可以\",{\"1\":{\"2208\":1}}],[\"交换机是一种基于mac地址识别\",{\"1\":{\"2208\":1}}],[\"交换机的功能包括\",{\"1\":{\"2207\":1}}],[\"交换技术\",{\"0\":{\"2207\":1}}],[\"交换tcp窗口大小信息\",{\"1\":{\"1726\":1}}],[\"交换变量\",{\"0\":{\"850\":1}}],[\"交换律\",{\"1\":{\"610\":1}}],[\"符号表\",{\"1\":{\"1905\":1}}],[\"符号包括\",{\"1\":{\"1704\":1}}],[\"符号化是词法分析的过程\",{\"1\":{\"1704\":1}}],[\"符号化\",{\"0\":{\"1704\":1}}],[\"符号开头的行是注释\",{\"1\":{\"1583\":1}}],[\"符号模式\",{\"0\":{\"1039\":1}}],[\"符号模式指定文件的权限\",{\"1\":{\"1037\":1}}],[\"符号链接\",{\"1\":{\"1003\":1,\"1006\":1}}],[\"符号位都是用\",{\"1\":{\"606\":1}}],[\"符合标准的交互模型\",{\"1\":{\"2025\":1}}],[\"符合某种标准化的构件模型\",{\"1\":{\"1900\":1}}],[\"符合人们的思维习惯\",{\"1\":{\"1859\":1}}],[\"符合单一职责\",{\"1\":{\"1839\":1}}],[\"符合软件设计原则\",{\"1\":{\"1750\":1}}],[\"符合开放封闭原则\",{\"1\":{\"1750\":1,\"1839\":1}}],[\"符合w3c标准\",{\"1\":{\"219\":1}}],[\"符合规则\",{\"1\":{\"32\":1,\"75\":1}}],[\"反射也随之减少\",{\"1\":{\"2737\":1}}],[\"反映其性能的指标主要有\",{\"1\":{\"2171\":1}}],[\"反模式\",{\"0\":{\"2055\":1}}],[\"反应速度快\",{\"1\":{\"2034\":1}}],[\"反复是完全需要和值得提倡的\",{\"1\":{\"1923\":1}}],[\"反馈\",{\"1\":{\"1904\":2}}],[\"反转\",{\"1\":{\"1478\":1}}],[\"反过来对象类型不兼容对应的原始类型\",{\"1\":{\"1430\":1}}],[\"反例\",{\"0\":{\"1269\":1}}],[\"反对\",{\"1\":{\"1162\":1,\"1177\":1,\"1186\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"反向代理服务器\",{\"1\":{\"2077\":1}}],[\"反向代理隐藏了真实的服务器\",{\"1\":{\"1794\":1}}],[\"反向代理\",{\"1\":{\"1794\":1}}],[\"反向\",{\"1\":{\"1062\":1}}],[\"反向查找\",{\"1\":{\"1015\":1,\"1016\":1}}],[\"反向重复前一个搜索\",{\"1\":{\"989\":1}}],[\"反码为\",{\"1\":{\"606\":1}}],[\"反码\",{\"1\":{\"606\":3,\"609\":1}}],[\"反码和补码\",{\"1\":{\"606\":1}}],[\"反之不可访问则需回收\",{\"1\":{\"1646\":1}}],[\"反之\",{\"1\":{\"574\":1}}],[\"反之也如此\",{\"1\":{\"149\":1}}],[\"右摄像机\",{\"1\":{\"2556\":1}}],[\"右补0\",{\"1\":{\"611\":1}}],[\"右边补0\",{\"1\":{\"611\":1}}],[\"右边丢弃\",{\"1\":{\"606\":1,\"613\":1}}],[\"右移运算符\",{\"0\":{\"612\":1}}],[\"右移\",{\"1\":{\"606\":1}}],[\"左摄像机\",{\"1\":{\"2555\":1}}],[\"左括号或者右括号\",{\"1\":{\"740\":1}}],[\"左补1得看被移数是正还是负\",{\"1\":{\"613\":1}}],[\"左补0\",{\"1\":{\"613\":1}}],[\"左移会保留他所操作数值的符号\",{\"1\":{\"611\":1}}],[\"左移操作符\",{\"0\":{\"611\":1},\"1\":{\"611\":1,\"638\":1}}],[\"左移\",{\"1\":{\"606\":1}}],[\"左边的二进制位丢弃\",{\"1\":{\"611\":1}}],[\"左边的变量就会被赋予对应的值\",{\"1\":{\"251\":1}}],[\"左边为\",{\"1\":{\"321\":1,\"643\":1}}],[\"递归查询\",{\"1\":{\"2211\":1}}],[\"递归查找子目录中的文件\",{\"1\":{\"1015\":1}}],[\"递归遍历这组根元素\",{\"1\":{\"1648\":1}}],[\"递归收集数组依赖\",{\"1\":{\"1563\":1}}],[\"递归创建生成code\",{\"1\":{\"1551\":1}}],[\"递归创建\",{\"1\":{\"1551\":1}}],[\"递归关键\",{\"1\":{\"1534\":1}}],[\"递归处理\",{\"1\":{\"1018\":1,\"1021\":1,\"1032\":1}}],[\"递归显示目录中的所有文件和子目录\",{\"1\":{\"972\":1}}],[\"递归的深度的深度太深就会引发栈内存的溢出\",{\"1\":{\"766\":1}}],[\"递归实现\",{\"0\":{\"735\":1,\"746\":1}}],[\"递减\",{\"1\":{\"602\":2}}],[\"递减操作符就是递减其操作数\",{\"1\":{\"602\":1}}],[\"递增操作符顾名思义就是递增其操作数\",{\"1\":{\"602\":1}}],[\"递增和递减操作符主要用于\",{\"1\":{\"602\":1}}],[\"递增和递减操作符在大学的计算机语言课\",{\"1\":{\"602\":1}}],[\"递增和递减操作符\",{\"0\":{\"602\":1}}],[\"功能测试\",{\"1\":{\"1939\":1}}],[\"功能需求分配给软件模块\",{\"1\":{\"1929\":1}}],[\"功能级\",{\"1\":{\"1905\":1}}],[\"功能耦合度降低\",{\"1\":{\"1806\":1}}],[\"功能\",{\"1\":{\"596\":1,\"1863\":1,\"2028\":1}}],[\"功能成功\",{\"1\":{\"118\":1}}],[\"⾮常优雅\",{\"1\":{\"596\":1}}],[\"顺着这条链传递该请求\",{\"1\":{\"1835\":1}}],[\"顺序图\",{\"0\":{\"1915\":1}}],[\"顺序组装\",{\"1\":{\"1900\":1}}],[\"顺序\",{\"1\":{\"1846\":1,\"1847\":1,\"1938\":1}}],[\"顺序就合恰相反了\",{\"1\":{\"1737\":1}}],[\"顺序执行了三个步骤\",{\"1\":{\"596\":1}}],[\"顺便学习一个es5的方法\",{\"1\":{\"481\":1}}],[\"核心层\",{\"1\":{\"2220\":1}}],[\"核心业务应用方法\",{\"1\":{\"1875\":1}}],[\"核心用户全程参与\",{\"1\":{\"1856\":1}}],[\"核心不是\",{\"1\":{\"1849\":1}}],[\"核心方法就是\",{\"1\":{\"1528\":1}}],[\"核心方法就是利用\",{\"1\":{\"1484\":1}}],[\"核心方法\",{\"0\":{\"1527\":1,\"1528\":1}}],[\"核心导出\",{\"1\":{\"1526\":1}}],[\"核心diff\",{\"1\":{\"1478\":1}}],[\"核心声明文件\",{\"1\":{\"1356\":1}}],[\"核心库的类型声明文件中\",{\"1\":{\"1356\":1}}],[\"核心\",{\"1\":{\"1311\":1}}],[\"核心对象\",{\"0\":{\"815\":1}}],[\"核心原理其实就是通过和\",{\"1\":{\"592\":1}}],[\"核心点就是模块的导入与导出\",{\"1\":{\"273\":1}}],[\"平行光是沿着特定方向发射的光\",{\"1\":{\"2868\":1}}],[\"平行光\",{\"0\":{\"2867\":1}}],[\"平面光光源从一个矩形平面上均匀地发射光线\",{\"1\":{\"2872\":1}}],[\"平面光光源\",{\"0\":{\"2871\":1}}],[\"平面或线框\",{\"1\":{\"2629\":1}}],[\"平面缓冲几何体\",{\"0\":{\"2398\":1}}],[\"平台层\",{\"1\":{\"2051\":1}}],[\"平台即服务\",{\"1\":{\"2049\":1}}],[\"平台无关\",{\"1\":{\"2044\":1}}],[\"平台相关模型\",{\"1\":{\"1996\":1}}],[\"平台独立模型\",{\"1\":{\"1996\":1}}],[\"平常在开发中类似的重复逻辑的场景也同样会有很多\",{\"1\":{\"590\":1}}],[\"平时在开发中\",{\"1\":{\"251\":1}}],[\"程序编译时被自动添加到片元着色器和顶点着色器代码的前面\",{\"1\":{\"2743\":1}}],[\"程序是一个静态的概念\",{\"1\":{\"2151\":1}}],[\"程序是典型的事件驱动型程序\",{\"1\":{\"554\":1}}],[\"程序能撤销错误状态\",{\"1\":{\"2095\":1}}],[\"程序结构设计\",{\"1\":{\"1969\":1}}],[\"程序变异测试\",{\"1\":{\"1939\":1}}],[\"程序代码\",{\"1\":{\"1933\":1}}],[\"程序和数据结构\",{\"1\":{\"1905\":1}}],[\"程序开发人员在地域上分布很广\",{\"1\":{\"1904\":1}}],[\"程序员和领域专家\",{\"1\":{\"1904\":1}}],[\"程序来分页\",{\"1\":{\"1009\":1}}],[\"程序就进入了执行阶段\",{\"1\":{\"895\":1}}],[\"程序中的代码在执行之后会经历三个步骤\",{\"1\":{\"895\":1}}],[\"程序如何找到它们\",{\"1\":{\"895\":1}}],[\"程序继续执行\",{\"1\":{\"587\":1}}],[\"程序会阻塞\",{\"1\":{\"587\":1}}],[\"阻挡其他对象\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"阻塞\",{\"1\":{\"587\":1}}],[\"阻止对媒体访问的机制\",{\"1\":{\"2128\":1}}],[\"阻止合法用户对系统资源的非法利用\",{\"1\":{\"2106\":1}}],[\"阻止任何父事件处理程序被执行\",{\"1\":{\"240\":1}}],[\"阻止默认行为去除特殊按键\",{\"1\":{\"239\":1}}],[\"待数组中的\",{\"1\":{\"582\":1}}],[\"待计时结束\",{\"1\":{\"376\":1}}],[\"参照完整性约束\",{\"1\":{\"2241\":1}}],[\"参与人员\",{\"0\":{\"1999\":1}}],[\"参考架构等组成的开发基础架构\",{\"1\":{\"1998\":1}}],[\"参考需求\",{\"1\":{\"1998\":1}}],[\"参考上面的例子和图\",{\"1\":{\"581\":1}}],[\"参见上图\",{\"1\":{\"1693\":1}}],[\"参数们默认都是true\",{\"1\":{\"2812\":1}}],[\"参数错误\",{\"1\":{\"1753\":1,\"1754\":1}}],[\"参数后面要加一个日志信息\",{\"1\":{\"1600\":1}}],[\"参数表示\",{\"1\":{\"1600\":1}}],[\"参数装饰器顾名思义\",{\"1\":{\"1469\":1}}],[\"参数装饰器声明\",{\"1\":{\"1469\":1}}],[\"参数装饰器\",{\"0\":{\"1469\":1},\"1\":{\"1465\":1}}],[\"参数默认值\",{\"0\":{\"1424\":1}}],[\"参数类型\",{\"1\":{\"1422\":1}}],[\"参数设置了类型\",{\"1\":{\"1366\":1}}],[\"参数还是之前的旧值\",{\"1\":{\"1200\":1}}],[\"参数指定的用户类型设置文件的\",{\"1\":{\"1039\":1}}],[\"参数相同\",{\"1\":{\"1021\":2}}],[\"参数时\",{\"1\":{\"1009\":1}}],[\"参数一并使用\",{\"1\":{\"1009\":1}}],[\"参数一是请求的类型\",{\"1\":{\"864\":1,\"866\":1}}],[\"参数组合\",{\"1\":{\"998\":1}}],[\"参数说明\",{\"1\":{\"983\":1,\"989\":1}}],[\"参数二是请求的url\",{\"1\":{\"864\":1,\"866\":1}}],[\"参数在\",{\"1\":{\"817\":1}}],[\"参数在被初始化时将形成一个独立作用域\",{\"1\":{\"258\":1}}],[\"参数可以打印出不符合条件行的内容\",{\"1\":{\"1016\":1}}],[\"参数可以传进\",{\"1\":{\"739\":1}}],[\"参数可以是一个普通数组\",{\"1\":{\"403\":1}}],[\"参数多少也可以不受限制\",{\"1\":{\"727\":1}}],[\"参数长度为\",{\"1\":{\"677\":2}}],[\"参数用来控制流程是顺利执行还是发生错误\",{\"1\":{\"578\":1}}],[\"参数将保存列出的蓝牙设备的信息\",{\"1\":{\"341\":1}}],[\"参数的逆运算\",{\"1\":{\"264\":1}}],[\"参数\",{\"1\":{\"258\":1,\"398\":1,\"916\":2,\"986\":1,\"989\":1,\"992\":1,\"1003\":1,\"1009\":1,\"1014\":1,\"1032\":1,\"1610\":1}}],[\"参数作用域\",{\"0\":{\"258\":1}}],[\"连续调⽤两次\",{\"1\":{\"1730\":1}}],[\"连续的多个\",{\"1\":{\"1197\":1}}],[\"连续更新状态\",{\"0\":{\"1197\":1}}],[\"连续向后删除n个字符\",{\"1\":{\"1063\":1}}],[\"连续输入文字后发送\",{\"1\":{\"832\":1}}],[\"连续多个\",{\"1\":{\"581\":1}}],[\"连接子数据模型的假设存在冲突引起的失配\",{\"1\":{\"2028\":1}}],[\"连接件\",{\"1\":{\"1972\":1}}],[\"连接挂起也会导致资源的浪费\",{\"1\":{\"1737\":1}}],[\"连接会启⽤延迟传送算法\",{\"1\":{\"1730\":1}}],[\"连接处于的是半释放的状态\",{\"1\":{\"1729\":1}}],[\"连接是双向的\",{\"1\":{\"1729\":1}}],[\"连接的每一端分配一个缓冲区来保存输入的数据\",{\"1\":{\"1723\":1}}],[\"连接的话\",{\"1\":{\"1102\":1}}],[\"连接文件\",{\"1\":{\"983\":1,\"984\":1}}],[\"连接它们\",{\"1\":{\"805\":1}}],[\"连接到字符串需要首先将\",{\"1\":{\"803\":1}}],[\"连接多个字符串\",{\"0\":{\"525\":1}}],[\"连接蓝牙的历史记录\",{\"1\":{\"128\":1}}],[\"连接蓝牙后写入数据类型\",{\"1\":{\"128\":1}}],[\"连接失败的回调\",{\"1\":{\"379\":1}}],[\"连接失败\",{\"1\":{\"119\":1,\"127\":1}}],[\"连接成功\",{\"1\":{\"119\":1,\"127\":3}}],[\"连接目标设备只需要\",{\"1\":{\"119\":1}}],[\"连接设备的所有服务\",{\"1\":{\"128\":1}}],[\"连接设备\",{\"0\":{\"119\":1},\"1\":{\"119\":2,\"127\":1,\"128\":1,\"2218\":1}}],[\"连接\",{\"1\":{\"116\":1,\"1690\":1}}],[\"承前\",{\"1\":{\"581\":2}}],[\"怎样解决\",{\"0\":{\"1226\":1}}],[\"怎样才能让爬虫更多的爬取到我们的网站\",{\"1\":{\"217\":1}}],[\"怎么保证后一个\",{\"1\":{\"581\":1}}],[\"异构枚举\",{\"0\":{\"1409\":1}}],[\"异或运算具有以下性质\",{\"1\":{\"610\":1}}],[\"异或\",{\"1\":{\"606\":1,\"610\":1}}],[\"异常信息被捕获并打印\",{\"1\":{\"578\":1}}],[\"异常抛出了\",{\"1\":{\"578\":1}}],[\"异步信息\",{\"1\":{\"2054\":1}}],[\"异步设计是为了防止大量数据的读写\",{\"1\":{\"1670\":1}}],[\"异步队列机制\",{\"1\":{\"1540\":1}}],[\"异步更新原理\",{\"0\":{\"1539\":1}}],[\"异步操作等\",{\"1\":{\"1275\":1}}],[\"异步操作成功\",{\"1\":{\"566\":1}}],[\"异步的\",{\"1\":{\"1259\":1}}],[\"异步的意义\",{\"0\":{\"1199\":1}}],[\"异步改变\",{\"1\":{\"1204\":1}}],[\"异步请求\",{\"0\":{\"1168\":1}}],[\"异步处理\",{\"1\":{\"817\":1}}],[\"异步函数始终返回promise对象\",{\"1\":{\"594\":1}}],[\"异步完成之后依次调用\",{\"1\":{\"581\":1}}],[\"异步调用发出后\",{\"1\":{\"555\":1}}],[\"异步编程的一个基本事实就是它破坏了异常处理\",{\"1\":{\"562\":1}}],[\"异步编程\",{\"0\":{\"554\":1},\"2\":{\"599\":1}}],[\"异步加载导致更好的启动时间\",{\"1\":{\"460\":1}}],[\"异步加载模块及其依赖项来解决这个问题\",{\"1\":{\"457\":1}}],[\"异步加载本地文件\",{\"1\":{\"378\":1}}],[\"异步模块加载机制\",{\"1\":{\"444\":1}}],[\"异步任务\",{\"1\":{\"372\":1}}],[\"异步http请求线程\",{\"1\":{\"371\":1}}],[\"异步\",{\"1\":{\"370\":1,\"555\":2,\"594\":1,\"816\":1,\"1670\":1,\"1812\":1,\"1886\":1}}],[\"异步执行原理\",{\"0\":{\"369\":1}}],[\"错误恢复\",{\"1\":{\"2095\":1}}],[\"错误检测\",{\"1\":{\"2095\":1}}],[\"错误推测\",{\"1\":{\"1939\":1}}],[\"错误驱动测试\",{\"1\":{\"1939\":1}}],[\"错误的示例\",{\"1\":{\"1303\":1}}],[\"错误示例\",{\"1\":{\"1301\":1,\"1302\":1}}],[\"错误日志路径\",{\"1\":{\"1153\":1}}],[\"错误日志文件\",{\"1\":{\"1150\":1}}],[\"错误页面优雅替代显示文件\",{\"1\":{\"1150\":1}}],[\"错误\",{\"1\":{\"898\":1,\"1285\":2,\"1430\":1,\"1443\":1,\"1454\":1}}],[\"错误处理友好\",{\"1\":{\"596\":1}}],[\"错误处理是所有编程范型都必须要考虑的问题\",{\"1\":{\"578\":1}}],[\"错误冒泡\",{\"1\":{\"569\":1}}],[\"穿透到外层\",{\"1\":{\"569\":1}}],[\"消除\",{\"1\":{\"1875\":1}}],[\"消费者不需要直接使用\",{\"1\":{\"1747\":1}}],[\"消耗提⾼性能\",{\"1\":{\"1730\":1}}],[\"消灭嵌套调用\",{\"1\":{\"569\":1}}],[\"消息集成\",{\"1\":{\"1886\":1}}],[\"消息的发送者\",{\"1\":{\"1810\":1}}],[\"消息来源地址\",{\"1\":{\"1731\":1}}],[\"消息监听失败\",{\"1\":{\"128\":1}}],[\"消息监听成功\",{\"1\":{\"128\":1}}],[\"消息监听\",{\"1\":{\"128\":1}}],[\"消息推送都为\",{\"1\":{\"122\":1}}],[\"消息步骤\",{\"1\":{\"16\":1,\"59\":1}}],[\"赏心悦目的\",{\"1\":{\"565\":1}}],[\"切线求导\",{\"1\":{\"2341\":1}}],[\"切入点是为企业资源管理提供强大的能力\",{\"1\":{\"1875\":1}}],[\"切克兰德方法\",{\"0\":{\"1849\":1}}],[\"切换时间\",{\"1\":{\"2212\":1}}],[\"切换标签\",{\"0\":{\"1620\":1}}],[\"切换选项卡\",{\"1\":{\"1311\":1}}],[\"切换内容\",{\"1\":{\"1311\":1}}],[\"切换光标为输入\",{\"1\":{\"1057\":1}}],[\"切换到程序这边\",{\"1\":{\"1649\":1}}],[\"切换到命令模式\",{\"1\":{\"1057\":1}}],[\"切换到底线命令模式\",{\"1\":{\"1056\":1}}],[\"切换到输入模式即可\",{\"1\":{\"1056\":1}}],[\"切换到输入模式\",{\"1\":{\"1056\":1}}],[\"切换到指定的路径\",{\"1\":{\"967\":1}}],[\"切换到失败态后\",{\"1\":{\"565\":1}}],[\"切换到了成功态后\",{\"1\":{\"565\":1}}],[\"切到源码的根目录下\",{\"1\":{\"98\":1}}],[\"各局部的dbm可以独立地管理局不数据库\",{\"1\":{\"2229\":1}}],[\"各段程序修改互不影响\",{\"1\":{\"2161\":1}}],[\"各类模型安全防范功能\",{\"0\":{\"2122\":1}}],[\"各类暂态数据用云服务保存\",{\"1\":{\"2054\":1}}],[\"各类报告\",{\"1\":{\"1961\":1}}],[\"各类计划\",{\"1\":{\"1961\":1}}],[\"各种终端都可调用\",{\"1\":{\"2044\":1}}],[\"各种证件和牌照的管理\",{\"1\":{\"1869\":1}}],[\"各种营业执照\",{\"1\":{\"1869\":1}}],[\"各种异步操作都可以用同样的方法进行处理\",{\"1\":{\"562\":1}}],[\"各项工作问题协调解决\",{\"1\":{\"1850\":1}}],[\"各部分解释如下\",{\"1\":{\"1677\":1}}],[\"各浏览器的cookie每一个name=value的value值大概在4k\",{\"1\":{\"1660\":1}}],[\"各二进制位全部右移若干位\",{\"1\":{\"606\":1}}],[\"各二进制位全部左移若干位\",{\"1\":{\"606\":1}}],[\"各个层次的组件形成不同功能级别的虚拟机\",{\"1\":{\"1984\":1}}],[\"各个处理者只需关注自己的责任范围\",{\"1\":{\"1837\":1}}],[\"各个厂商惠制作自己的发型版本\",{\"1\":{\"908\":1}}],[\"各个属性中如果使用百分比\",{\"1\":{\"205\":1}}],[\"各个子元素或属性的百分比是根据谁来设定呢\",{\"1\":{\"205\":1}}],[\"~也表示为\",{\"1\":{\"967\":1}}],[\"~当前用户的家目录\",{\"1\":{\"915\":1}}],[\"~6的值为\",{\"1\":{\"609\":1}}],[\"~6\",{\"1\":{\"609\":1}}],[\"~\",{\"0\":{\"609\":1,\"1120\":1},\"1\":{\"550\":1,\"606\":1,\"609\":3,\"915\":1,\"1036\":5,\"1080\":2,\"1116\":2,\"1123\":1,\"1124\":1,\"1150\":1,\"1152\":3,\"1168\":3}}],[\"补丁号\",{\"1\":{\"1618\":1}}],[\"补码为\",{\"1\":{\"606\":1}}],[\"补码\",{\"1\":{\"606\":2,\"609\":1}}],[\"补齐字符串长度\",{\"0\":{\"546\":1}}],[\"补充了属性\",{\"1\":{\"316\":1}}],[\"移位的顶点可以投射阴影\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"移交\",{\"1\":{\"1901\":1}}],[\"移除给定正则表达式的加载器\",{\"1\":{\"2475\":1}}],[\"移除和通知观察者的方法\",{\"1\":{\"1802\":1}}],[\"移除远程仓库\",{\"0\":{\"1608\":1}}],[\"移除真实dom的属性\",{\"1\":{\"1477\":1}}],[\"移除字符串收尾空白符\",{\"0\":{\"538\":1}}],[\"移动几何体\",{\"1\":{\"2323\":1}}],[\"移动性\",{\"1\":{\"2193\":1}}],[\"移动老的元素\",{\"1\":{\"1478\":1}}],[\"移动半页\",{\"1\":{\"1061\":2}}],[\"移动一页\",{\"1\":{\"1061\":2}}],[\"移动光标的方法\",{\"0\":{\"1061\":1}}],[\"移动光标到行首\",{\"1\":{\"1057\":1}}],[\"移动到这个档案的第一行\",{\"1\":{\"1061\":1}}],[\"移动到这个档案的第n行\",{\"1\":{\"1061\":1}}],[\"移动到这个档案的最后一行\",{\"1\":{\"1061\":1}}],[\"移动到这一行的最后面字符处\",{\"1\":{\"1061\":1}}],[\"移动到这一行的最前面字符处\",{\"1\":{\"1061\":1}}],[\"移动到目录名\",{\"1\":{\"1001\":1}}],[\"移动到目标目录\",{\"1\":{\"1001\":1}}],[\"移动到第一行\",{\"1\":{\"989\":1}}],[\"移动到最后一行\",{\"1\":{\"989\":1}}],[\"移动设备挂载目录\",{\"1\":{\"913\":1}}],[\"移动设备上的浏览器都会把自己默认的\",{\"1\":{\"201\":1}}],[\"移动端\",{\"2\":{\"210\":1}}],[\"移动端适配的目的是在不同尺寸的设备上\",{\"1\":{\"200\":1}}],[\"移动端适配的目的\",{\"0\":{\"200\":1}}],[\"移动端适配\",{\"0\":{\"199\":1}}],[\"究其原因还是变量的声明先与使用\",{\"1\":{\"511\":1}}],[\"恰恰相反\",{\"1\":{\"511\":1}}],[\"沿着词法环境的栈顶向下查询\",{\"1\":{\"510\":1}}],[\"沿当前路径向上逐级递归\",{\"1\":{\"454\":1}}],[\"了\",{\"1\":{\"507\":1,\"578\":1,\"903\":1,\"1527\":1}}],[\"了解软件的功能和如何运行的容易程度\",{\"1\":{\"1948\":1}}],[\"了解闭包的预期寿命和用法\",{\"1\":{\"431\":1}}],[\"了解何时创建闭包以及闭包保留了哪些对象\",{\"1\":{\"431\":1}}],[\"禁用此检查生产以获得性能增益可能很有用\",{\"1\":{\"2794\":1}}],[\"禁用深度写入会很有用\",{\"1\":{\"2653\":1}}],[\"禁用变量提升\",{\"0\":{\"507\":1}}],[\"禁止不规则的空白\",{\"1\":{\"19\":1,\"62\":1}}],[\"禁止在\",{\"1\":{\"19\":1,\"62\":1}}],[\"应主动增加预防性的新的功能\",{\"1\":{\"1949\":1}}],[\"应变\",{\"1\":{\"1949\":1}}],[\"应变能力差\",{\"1\":{\"1858\":1}}],[\"应⽤程序必须以消息为单位提取数据\",{\"1\":{\"1731\":1}}],[\"应该得到与第一次创建的对象完全相同的对象\",{\"1\":{\"1762\":1}}],[\"应该以下原则\",{\"1\":{\"1707\":1}}],[\"应该优先考虑使用\",{\"1\":{\"1203\":1}}],[\"应该谨慎使用\",{\"1\":{\"1203\":1}}],[\"应该是\",{\"1\":{\"1040\":3}}],[\"应该是与状态无关的\",{\"1\":{\"575\":1}}],[\"应该把它放在哪里\",{\"1\":{\"895\":1}}],[\"应该小心使用类型强制转换\",{\"1\":{\"788\":1}}],[\"应该先使用函数执行上下文中的变量\",{\"1\":{\"505\":1}}],[\"应用环境决定\",{\"1\":{\"2241\":1}}],[\"应用核心能力为一体的开放平台\",{\"1\":{\"2057\":1}}],[\"应用领域\",{\"1\":{\"2028\":1}}],[\"应用开发人员可以按照不同的业务进行功能的划分\",{\"1\":{\"2025\":1}}],[\"应用逻辑\",{\"1\":{\"1936\":1}}],[\"应用中跨组件共享状态\",{\"1\":{\"1764\":1}}],[\"应用中更好地管理和共享状态\",{\"1\":{\"1764\":1}}],[\"应用中\",{\"1\":{\"1764\":1}}],[\"应用中的所有\",{\"1\":{\"445\":1}}],[\"应用数据\",{\"1\":{\"1753\":4,\"1754\":2}}],[\"应用层负载均衡\",{\"1\":{\"2077\":1}}],[\"应用层将数据传递给传输层的udp协议\",{\"1\":{\"1712\":1}}],[\"应用层\",{\"0\":{\"1689\":1},\"1\":{\"2051\":1}}],[\"应用了\",{\"1\":{\"1601\":1}}],[\"应用\",{\"1\":{\"1256\":1}}],[\"应用场景\",{\"0\":{\"829\":1,\"832\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1},\"1\":{\"1848\":1}}],[\"应用存在的\",{\"1\":{\"817\":1}}],[\"应用上实现共享功能\",{\"1\":{\"345\":1}}],[\"应用程序的主题部分\",{\"1\":{\"2031\":1}}],[\"应用程序的功能\",{\"1\":{\"340\":1}}],[\"应用程序必须选择合适大小的报文\",{\"1\":{\"1712\":1}}],[\"应用程序经常发生崩溃\",{\"1\":{\"425\":1}}],[\"应用程序发出语音命令\",{\"1\":{\"340\":1}}],[\"应用程序中开启全屏模式\",{\"1\":{\"339\":1}}],[\"避开了这种设计缺陷\",{\"1\":{\"500\":1}}],[\"避免大规模访问数据库\",{\"1\":{\"2071\":1}}],[\"避免意外的全局变量\",{\"1\":{\"1653\":1}}],[\"避免内存碎片化\",{\"1\":{\"1641\":1}}],[\"避免出现新增了联合类型没有对应的实现\",{\"1\":{\"1416\":1}}],[\"避免出现意料之外的结果\",{\"1\":{\"627\":1}}],[\"避免在渲染期间读\",{\"0\":{\"1285\":1}}],[\"避免在组件渲染时进行不必要的重复计算\",{\"1\":{\"1264\":1}}],[\"避免过度使用\",{\"1\":{\"1260\":1}}],[\"避免使用\",{\"1\":{\"1212\":1}}],[\"避免了不必要的重复渲染和频繁的\",{\"1\":{\"1199\":1}}],[\"避免了合并问题\",{\"1\":{\"1197\":1}}],[\"避免重复的计算或请求\",{\"1\":{\"1794\":1}}],[\"避免重复的渲染\",{\"1\":{\"1199\":1}}],[\"避免重复创建\",{\"0\":{\"1286\":1}}],[\"避免重复获取数组长度\",{\"1\":{\"888\":1}}],[\"避免频繁的\",{\"1\":{\"1199\":1}}],[\"避免引发错误\",{\"1\":{\"646\":1}}],[\"避免编写重复代码\",{\"1\":{\"442\":1}}],[\"避免对象属性覆盖\",{\"0\":{\"270\":1}}],[\"避免常量值重复\",{\"0\":{\"269\":1}}],[\"避免节点层级过多\",{\"1\":{\"226\":1}}],[\"意外的全局变量\",{\"1\":{\"1653\":1}}],[\"意外全局变量\",{\"0\":{\"427\":1}}],[\"意味着回收器没有标记它们\",{\"1\":{\"1650\":1}}],[\"意味着可以将\",{\"1\":{\"1458\":1}}],[\"意味着变量和函数的声明会在物理层面移动到代码的最前面\",{\"1\":{\"500\":1}}],[\"意思是重复前一个动作的意思\",{\"1\":{\"1063\":1}}],[\"意思是跨域资源共享\",{\"1\":{\"860\":1}}],[\"被水打湿的表面的材质需要在面上再增加一个透明的\",{\"1\":{\"2737\":1}}],[\"被加载的项的url\",{\"1\":{\"2468\":1,\"2470\":1}}],[\"被复制的数据的更新都由系统自动完成\",{\"1\":{\"2232\":1}}],[\"被动攻击\",{\"1\":{\"2115\":1}}],[\"被操作的数据\",{\"1\":{\"2028\":1}}],[\"被观察者是维护一组观察者对象列表\",{\"1\":{\"1802\":1}}],[\"被观察者\",{\"1\":{\"1802\":1}}],[\"被构建\",{\"1\":{\"1707\":1}}],[\"被设置为设置\",{\"1\":{\"1659\":1}}],[\"被设计为大型应用的全局状态管理工具\",{\"1\":{\"1275\":1}}],[\"被遗忘的计时器或回调函数\",{\"1\":{\"1653\":1}}],[\"被纳入版本控制\",{\"1\":{\"1584\":1}}],[\"被装饰类的属性名\",{\"1\":{\"1467\":1}}],[\"被装饰的类\",{\"1\":{\"1466\":1,\"1467\":1,\"1468\":1,\"1469\":1}}],[\"被收窄为\",{\"1\":{\"1416\":2}}],[\"被调用构件的\",{\"1\":{\"1900\":1}}],[\"被调用并执行完毕后\",{\"1\":{\"1283\":1}}],[\"被调用时\",{\"1\":{\"581\":1}}],[\"被更新多次\",{\"1\":{\"1235\":1}}],[\"被当作了一个命令\",{\"1\":{\"1056\":1}}],[\"被保留项\",{\"1\":{\"940\":1}}],[\"被隐式转换为字符串\",{\"1\":{\"802\":1}}],[\"被\",{\"1\":{\"569\":1,\"806\":1}}],[\"被认为是更加紧急的\",{\"1\":{\"1308\":1}}],[\"被认为是\",{\"1\":{\"500\":1}}],[\"被赋值给这个新对象的\",{\"1\":{\"359\":1}}],[\"什么样序号的报文段能够被正确接收\",{\"1\":{\"1727\":1}}],[\"什么时候使用\",{\"0\":{\"1212\":1}}],[\"什么变量提升\",{\"0\":{\"500\":1}}],[\"什么是区块链\",{\"0\":{\"2131\":1}}],[\"什么是cookie\",{\"0\":{\"1658\":1}}],[\"什么是变量\",{\"0\":{\"1091\":1}}],[\"什么是\",{\"0\":{\"812\":1},\"1\":{\"817\":2}}],[\"什么是类型转换\",{\"0\":{\"772\":1}}],[\"什么是异步\",{\"0\":{\"555\":1}}],[\"什么是内存泄漏\",{\"0\":{\"425\":1}}],[\"什么是默认事件呢\",{\"1\":{\"239\":1}}],[\"什么是bfc\",{\"0\":{\"147\":1}}],[\"总共所需要加载项的个数\",{\"1\":{\"2468\":1,\"2470\":1}}],[\"总共有21次提交\",{\"1\":{\"1637\":1}}],[\"总共有\",{\"1\":{\"817\":1}}],[\"总线型\",{\"1\":{\"2204\":1}}],[\"总线通常是半双工的\",{\"1\":{\"2183\":1}}],[\"总线是一组能为多个部件分时共享的信息传送线\",{\"1\":{\"2183\":1}}],[\"总线\",{\"0\":{\"2182\":1}}],[\"总线逻辑\",{\"1\":{\"2176\":1}}],[\"总时差\",{\"1\":{\"1955\":1}}],[\"总体太大时必须采用抽样方法\",{\"1\":{\"1906\":1}}],[\"总体结构设计和过程设计等方面的信息\",{\"1\":{\"1905\":1}}],[\"总体思路\",{\"0\":{\"116\":1}}],[\"总之\",{\"1\":{\"895\":1}}],[\"总而言之\",{\"1\":{\"819\":1}}],[\"总结就以下四点\",{\"1\":{\"1716\":1}}],[\"总结来说\",{\"1\":{\"1279\":1}}],[\"总结一下\",{\"1\":{\"1274\":1}}],[\"总结\",{\"0\":{\"496\":1,\"669\":1,\"768\":1,\"886\":1,\"1257\":1,\"1521\":1},\"1\":{\"503\":1,\"587\":1,\"719\":1}}],[\"玩游戏\",{\"1\":{\"494\":1}}],[\"寄生组合式继承\",{\"0\":{\"494\":1}}],[\"寄生式继承\",{\"0\":{\"492\":1}}],[\"丁丁\",{\"1\":{\"490\":3,\"492\":4}}],[\"子系统有主从之分\",{\"1\":{\"1988\":1}}],[\"子程序和函数之间的接口一致性\",{\"1\":{\"1938\":1}}],[\"子组件的性能优化\",{\"1\":{\"1212\":1}}],[\"子组件\",{\"1\":{\"1210\":1,\"1218\":1}}],[\"子串中的字符数\",{\"1\":{\"529\":1}}],[\"子类可以替换父类\",{\"1\":{\"1937\":1}}],[\"子类可以添加\",{\"1\":{\"1829\":1}}],[\"子类可以对抽象类进行不同的实现\",{\"1\":{\"1392\":1}}],[\"子类方法种类和执行顺序都是不变的\",{\"1\":{\"1829\":1}}],[\"子类通过继承这个抽象类\",{\"1\":{\"1829\":1}}],[\"子类和其它任何地方都不可以访问\",{\"1\":{\"1390\":1}}],[\"子类\",{\"1\":{\"1390\":2}}],[\"子类继承父类后子类的实例就拥有了父类中的属性和方法\",{\"1\":{\"1389\":1}}],[\"子类中存在构造函数\",{\"1\":{\"495\":1}}],[\"子类虽然能够拿到父类的属性值\",{\"1\":{\"486\":1}}],[\"子元素的\",{\"1\":{\"205\":1}}],[\"子元素\",{\"1\":{\"205\":1}}],[\"吃东西\",{\"1\":{\"486\":1,\"488\":1,\"494\":1}}],[\"容量通常比较大\",{\"1\":{\"1648\":1}}],[\"容易制作\",{\"1\":{\"1956\":1}}],[\"容易出现很多空闲内存块\",{\"1\":{\"1646\":1}}],[\"容易导致资源的浪费\",{\"1\":{\"565\":1}}],[\"容易引起数据修改混乱\",{\"1\":{\"485\":1}}],[\"容错性更好\",{\"0\":{\"503\":1}}],[\"容器是一个隔离的容器\",{\"1\":{\"184\":1}}],[\"容器里面的子元素不会影响到外面的元素\",{\"1\":{\"149\":1}}],[\"张三\",{\"1\":{\"484\":3,\"486\":1,\"488\":1,\"494\":1,\"652\":1,\"1774\":1}}],[\"又可称为电子数据处理系统\",{\"1\":{\"1863\":1}}],[\"又称单片机\",{\"1\":{\"2179\":1}}],[\"又称委托模式\",{\"1\":{\"1793\":1}}],[\"又称blob\",{\"1\":{\"413\":1}}],[\"又找不到新版本的commit\",{\"1\":{\"1615\":1}}],[\"又不想储存\",{\"1\":{\"1067\":1}}],[\"又新增了块级作用域\",{\"1\":{\"895\":1}}],[\"又是如何在函数级作用域的基础之上\",{\"1\":{\"508\":1}}],[\"又要支持块级作用域的呢\",{\"1\":{\"508\":1}}],[\"又该如何查找\",{\"1\":{\"482\":1}}],[\"人员组织\",{\"1\":{\"2016\":1}}],[\"人工智能芯片四大类\",{\"1\":{\"2180\":1}}],[\"人工智能芯片的定义\",{\"1\":{\"2180\":1}}],[\"人工智能芯片\",{\"0\":{\"2180\":1}}],[\"人工智能的一个重要分支\",{\"1\":{\"1866\":1}}],[\"人工监测和计算机辅助分析\",{\"1\":{\"1938\":1}}],[\"人机界面设计\",{\"0\":{\"1928\":1}}],[\"人\",{\"1\":{\"1904\":1,\"2132\":1}}],[\"人力资源理论\",{\"1\":{\"1875\":1}}],[\"人力资源的管理\",{\"1\":{\"1873\":1}}],[\"人力资本投资方法\",{\"1\":{\"1875\":1}}],[\"人才培养\",{\"1\":{\"1874\":1}}],[\"人<\",{\"1\":{\"1163\":2,\"1178\":2,\"1187\":2,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":4}}],[\"人类继承对象类\",{\"1\":{\"482\":1}}],[\"人家\",{\"1\":{\"125\":1}}],[\"专用集成电路\",{\"1\":{\"2180\":1}}],[\"专用\",{\"1\":{\"1949\":1}}],[\"专家系统\",{\"0\":{\"1866\":1}}],[\"专业化\",{\"1\":{\"2189\":1}}],[\"专业科学知识\",{\"0\":{\"1848\":1}}],[\"专业术语称之为原型链\",{\"1\":{\"482\":1}}],[\"专注自身功能逻辑\",{\"1\":{\"1806\":1}}],[\"专门扩展了数组构造器\",{\"1\":{\"678\":1}}],[\"专门用来收敛\",{\"1\":{\"383\":1}}],[\"普通文件\",{\"1\":{\"1006\":1}}],[\"普通用户\",{\"1\":{\"1753\":2,\"1754\":1}}],[\"普通用户是$\",{\"1\":{\"915\":1}}],[\"普通用户的家目录\",{\"1\":{\"913\":1}}],[\"普通的基本命令\",{\"1\":{\"913\":1}}],[\"普通的递归思路很容易理解\",{\"1\":{\"735\":1}}],[\"普通的对象\",{\"1\":{\"481\":1}}],[\"普通人继承人类\",{\"1\":{\"482\":1}}],[\"普通函数\",{\"1\":{\"479\":1}}],[\"普通函数是直接调用\",{\"1\":{\"478\":1}}],[\"雄\",{\"1\":{\"478\":1}}],[\"旺财\",{\"1\":{\"478\":1}}],[\"男\",{\"1\":{\"478\":1}}],[\"孙悟空\",{\"1\":{\"478\":1}}],[\"原子性\",{\"1\":{\"2258\":1}}],[\"原则执行\",{\"1\":{\"2133\":1}}],[\"原料\",{\"1\":{\"1747\":1}}],[\"原始着色器材质\",{\"0\":{\"2616\":1}}],[\"原始服务器\",{\"1\":{\"1794\":1}}],[\"原始类型赋值给\",{\"1\":{\"1431\":1}}],[\"原始类型兼容对应的对象类型\",{\"1\":{\"1430\":1}}],[\"原始值\",{\"1\":{\"1343\":1}}],[\"原始的组件是简单的\",{\"1\":{\"1269\":1}}],[\"原始数据类型直接存储在栈\",{\"1\":{\"651\":1}}],[\"原始数据类型\",{\"1\":{\"650\":1}}],[\"原始数据的类文件对象\",{\"1\":{\"387\":1}}],[\"原生\",{\"1\":{\"1201\":1}}],[\"原因是变量\",{\"1\":{\"898\":1}}],[\"原因就在于后置递增递减操作是在包含它们的语句被求值之后才执行的\",{\"1\":{\"602\":1}}],[\"原理就是找到不再使用的变量\",{\"1\":{\"1645\":1}}],[\"原理之前\",{\"1\":{\"813\":1}}],[\"原理\",{\"0\":{\"813\":1,\"1542\":1}}],[\"原理和\",{\"1\":{\"666\":1}}],[\"原码就是一个数的二进制数\",{\"1\":{\"606\":1}}],[\"原码\",{\"1\":{\"606\":3}}],[\"原型开发阶段\",{\"1\":{\"1896\":1}}],[\"原型模型两个阶段\",{\"1\":{\"1896\":1}}],[\"原型模型\",{\"0\":{\"1896\":1}}],[\"原型模式\",{\"0\":{\"1743\":1},\"2\":{\"1745\":1}}],[\"原型法\",{\"0\":{\"1861\":1},\"1\":{\"1923\":1}}],[\"原型上\",{\"1\":{\"1518\":1,\"1520\":2}}],[\"原型上的\",{\"1\":{\"659\":1}}],[\"原型中声明的属性和对象自带的属性无法被删除\",{\"1\":{\"640\":1}}],[\"原型中依然没有找到\",{\"1\":{\"482\":1}}],[\"原型式继承是使用\",{\"1\":{\"490\":1}}],[\"原型式继承\",{\"0\":{\"490\":1}}],[\"原型继承缺点\",{\"1\":{\"484\":1}}],[\"原型对象如果有引用类型的属性\",{\"1\":{\"485\":1}}],[\"原型对象中包含一个指向构造函数的指针\",{\"1\":{\"484\":1}}],[\"原型对象中有一个属性\",{\"1\":{\"481\":1}}],[\"原型对象就相当于一个公共的区域\",{\"1\":{\"479\":1}}],[\"原型链上的各种方法\",{\"1\":{\"731\":1}}],[\"原型链上的\",{\"1\":{\"731\":1}}],[\"原型链的顶端\",{\"1\":{\"654\":1}}],[\"原型链继承涉及的是构造函数\",{\"1\":{\"484\":1}}],[\"原型链继承\",{\"0\":{\"484\":1},\"1\":{\"484\":1}}],[\"原型链\",{\"0\":{\"480\":1}}],[\"原型链与继承\",{\"0\":{\"477\":1}}],[\"原型\",{\"0\":{\"479\":1},\"1\":{\"484\":1,\"1533\":1},\"2\":{\"498\":1}}],[\"命令对象=>接受者如何处理\",{\"1\":{\"1826\":1}}],[\"命令对象command\",{\"1\":{\"1826\":1}}],[\"命令对于文件修改的缓存\",{\"1\":{\"1614\":1}}],[\"命令来查看\",{\"1\":{\"1614\":1}}],[\"命令来显示一个文件的属性以及文件所属的用户和组\",{\"1\":{\"1029\":1}}],[\"命令后加入参数\",{\"1\":{\"1609\":1}}],[\"命令最后需要指定要暂存的文件名称\",{\"1\":{\"1599\":1}}],[\"命令为我们提供了一种创建别名的方法\",{\"1\":{\"1591\":1}}],[\"命令适用于不同的级别\",{\"1\":{\"1586\":1}}],[\"命令可以用来比较文件的不同\",{\"1\":{\"1632\":1}}],[\"命令可以不用重新登录\",{\"1\":{\"1115\":1}}],[\"命令可以使用八进制数来指定权限\",{\"1\":{\"1040\":1}}],[\"命令只接收指定的字符数\",{\"1\":{\"1106\":1}}],[\"命令会一直等待用户输入\",{\"1\":{\"1106\":1}}],[\"命令会被提升到模块头部\",{\"1\":{\"275\":1}}],[\"命令之间没有任何逻辑联系\",{\"1\":{\"1086\":1}}],[\"命令快捷键\",{\"0\":{\"1082\":1}}],[\"命令的生效顺序\",{\"0\":{\"1081\":1}}],[\"命令的百分比\",{\"1\":{\"989\":1}}],[\"命令别名就是小名\",{\"1\":{\"1080\":1}}],[\"命令模式由三种角色构成\",{\"1\":{\"1826\":1}}],[\"命令模式只有一些最基本的命令\",{\"1\":{\"1056\":1}}],[\"命令模式\",{\"0\":{\"1056\":1}}],[\"命令必须写绝对路径\",{\"1\":{\"1050\":1}}],[\"命令chmod将修改who指定的用户类型对文件的访问权限\",{\"1\":{\"1039\":1}}],[\"命令链接\",{\"1\":{\"1002\":1}}],[\"命令用来为文件或目录改名\",{\"1\":{\"1000\":1}}],[\"命令用于删除一个文件或者目录\",{\"1\":{\"994\":1}}],[\"命令用于删除空目录\",{\"1\":{\"977\":1}}],[\"命令用于创建目录\",{\"1\":{\"974\":1}}],[\"命令用于显示指定工作目录下之内容\",{\"1\":{\"971\":1}}],[\"命令用于显示工作目录\",{\"1\":{\"969\":1}}],[\"命令用于改变当前工作目录的命令\",{\"1\":{\"967\":1}}],[\"命令主要用于复制文件或目录\",{\"1\":{\"997\":1}}],[\"命令行为\",{\"1\":{\"996\":1}}],[\"命令\",{\"0\":{\"1108\":1,\"1109\":1,\"1115\":1},\"1\":{\"916\":2,\"986\":1,\"989\":1,\"1086\":6,\"1087\":2}}],[\"命令格式\",{\"0\":{\"916\":1},\"1\":{\"1001\":1}}],[\"命令提示符\",{\"0\":{\"915\":1}}],[\"命令基本格式\",{\"0\":{\"914\":1}}],[\"命名导出\",{\"1\":{\"469\":1}}],[\"委员会将模块添加为\",{\"1\":{\"467\":1}}],[\"负载分担\",{\"1\":{\"2212\":1}}],[\"负载均衡\",{\"0\":{\"2077\":1},\"1\":{\"2076\":1,\"2199\":1,\"2212\":1}}],[\"负载动态模块\",{\"1\":{\"1153\":1}}],[\"负数使用补码存储\",{\"1\":{\"609\":1}}],[\"负数按补码形式参加按位或运算\",{\"1\":{\"608\":1}}],[\"负数按补码形式参加按位与运算\",{\"1\":{\"607\":1}}],[\"负数的补码是原码除符号位外的所有位取反即\",{\"1\":{\"606\":1}}],[\"负数的反码为除符号位\",{\"1\":{\"606\":1}}],[\"负数左补1\",{\"1\":{\"613\":1}}],[\"负数左补\",{\"1\":{\"606\":1}}],[\"负\",{\"1\":{\"606\":1}}],[\"负责嵌入式系统的全部软\",{\"1\":{\"2187\":1}}],[\"负责生产菜品\",{\"1\":{\"1747\":1}}],[\"负责\",{\"1\":{\"467\":1}}],[\"负margin\",{\"0\":{\"165\":1}}],[\"小规模软件的服务拆分\",{\"1\":{\"2055\":1}}],[\"小步快跑\",{\"1\":{\"1903\":1}}],[\"小作坊\",{\"1\":{\"1752\":1}}],[\"小\",{\"1\":{\"1431\":3,\"1648\":1}}],[\"小写\",{\"1\":{\"1056\":1}}],[\"小于等于\",{\"1\":{\"628\":1}}],[\"小于\",{\"1\":{\"628\":1,\"953\":1}}],[\"小数点\",{\"1\":{\"551\":1}}],[\"小波\",{\"1\":{\"490\":3,\"492\":4}}],[\"小而简洁\",{\"1\":{\"465\":1}}],[\"小维<\",{\"1\":{\"215\":1}}],[\"若启用\",{\"1\":{\"2844\":1}}],[\"若此参数为空\",{\"1\":{\"2842\":1}}],[\"若入度为0的属性不能遍历图中所有节点\",{\"1\":{\"2246\":1}}],[\"若能正常遍历图中所有节点\",{\"1\":{\"2246\":1}}],[\"若状态发生变化\",{\"1\":{\"1765\":1}}],[\"若客户端认为数据发送完成\",{\"1\":{\"1729\":1}}],[\"若占比过大\",{\"1\":{\"1648\":1}}],[\"若数据未备份\",{\"1\":{\"1579\":1}}],[\"若类型并且默认时字符串类型\",{\"1\":{\"1107\":1}}],[\"若为\",{\"1\":{\"1067\":1}}],[\"若曾修改过档案\",{\"1\":{\"1067\":1}}],[\"若想要编辑文本\",{\"1\":{\"1056\":1}}],[\"若该时间段内没有服务端的重发请求的话\",{\"1\":{\"1729\":1}}],[\"若该文件权限无法被更改也不要显示错误讯息\",{\"1\":{\"1038\":1}}],[\"若该文件权限确实已经更改\",{\"1\":{\"1038\":1}}],[\"若该用户在前一分钟之内有进行任何动作\",{\"1\":{\"930\":1}}],[\"若是在这个时间内没有收到发送数据的ack确认报文\",{\"1\":{\"1717\":1}}],[\"若是c则表示为装置文件里面的串行端口设备\",{\"1\":{\"1029\":1}}],[\"若是b则表示为装置文件里面的可供储存的接口设备\",{\"1\":{\"1029\":1}}],[\"若是l则表示为链接文档\",{\"1\":{\"1029\":1}}],[\"若没有发现任何差异\",{\"1\":{\"1009\":1}}],[\"若比较的文件为\",{\"1\":{\"1009\":1}}],[\"若使用\",{\"1\":{\"1009\":1}}],[\"若文件属性为\",{\"1\":{\"1067\":1}}],[\"若文件\",{\"1\":{\"1009\":1}}],[\"若文件不存在\",{\"1\":{\"980\":1}}],[\"若两个文件某一行内容相同\",{\"1\":{\"1009\":1}}],[\"若两个文件在某几行有所不同\",{\"1\":{\"1009\":1}}],[\"若两个都不存在\",{\"1\":{\"465\":1}}],[\"若test删除后\",{\"1\":{\"979\":1}}],[\"若runoob2目录原本不存在\",{\"1\":{\"976\":1}}],[\"若目录名称省略\",{\"1\":{\"967\":1}}],[\"若再加上\",{\"1\":{\"817\":1}}],[\"若左移时舍弃的高位不包含1\",{\"1\":{\"611\":1}}],[\"若未指定此参数\",{\"1\":{\"528\":1}}],[\"若有多个异步任务则需要在任务队列中排队等待\",{\"1\":{\"372\":1}}],[\"匿名性\",{\"1\":{\"2132\":1}}],[\"匿名函数\",{\"1\":{\"465\":1}}],[\"匿名内联函数用作事件侦听器\",{\"1\":{\"432\":1}}],[\"匿名内联函数\",{\"1\":{\"432\":1}}],[\"进程可以分期请求资源\",{\"1\":{\"2158\":1}}],[\"进程间需要互斥方式对其进行共享的资源\",{\"1\":{\"2154\":1}}],[\"进程的2个基本属性\",{\"1\":{\"2152\":1}}],[\"进程与线程\",{\"0\":{\"2152\":1}}],[\"进程与程序的区别\",{\"1\":{\"2151\":1}}],[\"进程与程序\",{\"0\":{\"2151\":1}}],[\"进程是系统进行资源分配和调度的独立单位\",{\"1\":{\"2151\":1}}],[\"进程是程序的一次执行过程\",{\"1\":{\"2151\":1}}],[\"进程是程序在一个数据集合上运行的过程\",{\"1\":{\"2150\":1}}],[\"进程控制块\",{\"1\":{\"2150\":1}}],[\"进程管理是操作系统的核心\",{\"1\":{\"2156\":1}}],[\"进程管理\",{\"0\":{\"2149\":1}}],[\"进程个数等\",{\"1\":{\"2077\":1}}],[\"进而包含模块\",{\"1\":{\"2020\":1}}],[\"进而还要扩展到客户关系管理\",{\"1\":{\"1873\":1}}],[\"进度控制\",{\"1\":{\"1956\":1}}],[\"进度管理计划\",{\"1\":{\"1961\":1}}],[\"进度管理\",{\"0\":{\"1954\":1}}],[\"进⾏封包\",{\"1\":{\"1730\":1}}],[\"进阶\",{\"0\":{\"1611\":1}}],[\"进阶技巧\",{\"0\":{\"1221\":1}}],[\"进入fin\",{\"1\":{\"1728\":2}}],[\"进入某个目录中\",{\"1\":{\"1613\":1}}],[\"进入页面的时候\",{\"1\":{\"1274\":1}}],[\"进入解压后的文件夹\",{\"1\":{\"1132\":1}}],[\"进入取代模式\",{\"1\":{\"1065\":1}}],[\"进入输入模式\",{\"1\":{\"1065\":3}}],[\"进入输入或取代的编辑模式\",{\"0\":{\"1065\":1}}],[\"进入了命令模式\",{\"1\":{\"1056\":1}}],[\"进入插入模式\",{\"1\":{\"1056\":1}}],[\"进入\",{\"1\":{\"1036\":1}}],[\"进入一个作用域块后\",{\"1\":{\"510\":1}}],[\"进一步传递给调用链\",{\"1\":{\"578\":1}}],[\"进来\",{\"1\":{\"464\":1}}],[\"进行调用\",{\"1\":{\"2471\":1}}],[\"进行设置\",{\"1\":{\"2285\":1}}],[\"进行转发\",{\"1\":{\"2208\":1}}],[\"进行转义\",{\"1\":{\"973\":1}}],[\"进行电源的有效管理\",{\"1\":{\"2177\":1}}],[\"进行系统监视通常有3种方式\",{\"1\":{\"2172\":1}}],[\"进行加工后再把输出返回调用者\",{\"1\":{\"1933\":1}}],[\"进行分析和设计建模\",{\"1\":{\"1906\":1}}],[\"进行测试\",{\"1\":{\"1901\":1}}],[\"进行三次握手的主要作用就是为了确认双方的接收能力和发送能力是否正常\",{\"1\":{\"1726\":1}}],[\"进行商品\",{\"1\":{\"1658\":1}}],[\"进行代码管理时\",{\"1\":{\"1583\":1}}],[\"进行的\",{\"1\":{\"1577\":1,\"1959\":1}}],[\"进行异步调用\",{\"1\":{\"1541\":1}}],[\"进行异步编程时\",{\"1\":{\"578\":1}}],[\"进行劫持\",{\"1\":{\"1534\":1}}],[\"进行属性劫持\",{\"1\":{\"1534\":1}}],[\"进行属性的拷贝\",{\"1\":{\"756\":1}}],[\"进行取值\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"进行模板渲染\",{\"1\":{\"1486\":1,\"1525\":1,\"1548\":1}}],[\"进行暴力对比\",{\"1\":{\"1478\":1}}],[\"进行复用\",{\"1\":{\"1475\":1}}],[\"进行描述\",{\"1\":{\"1338\":1}}],[\"进行状态更新\",{\"1\":{\"1308\":1}}],[\"进行图表绘制\",{\"1\":{\"1288\":1}}],[\"进行嵌套传值\",{\"1\":{\"1220\":1}}],[\"进行优化的子组件时\",{\"1\":{\"1212\":1}}],[\"进行前一个搜寻动作\",{\"1\":{\"1062\":1}}],[\"进行压缩\",{\"1\":{\"1025\":1}}],[\"进行比较时\",{\"1\":{\"805\":1}}],[\"进行处理之后\",{\"1\":{\"763\":1}}],[\"进行中\",{\"1\":{\"566\":1,\"1168\":2}}],[\"进行构造\",{\"1\":{\"494\":1}}],[\"进行多人协作开发时修改同一个函数减少不必要的行变更\",{\"1\":{\"296\":1}}],[\"进行遍历\",{\"1\":{\"271\":1,\"272\":1,\"1372\":1}}],[\"进行连接\",{\"1\":{\"119\":1}}],[\"进行监听\",{\"1\":{\"118\":1}}],[\"尽量在刚刚引入缺陷时即将其捕获\",{\"1\":{\"1959\":1}}],[\"尽量用\",{\"1\":{\"1706\":1}}],[\"尽量不要将异步代码与同步代码混用\",{\"1\":{\"463\":1}}],[\"尽管它们可能具有不同的默认值\",{\"1\":{\"2633\":1}}],[\"尽管它们可以被单独部署\",{\"1\":{\"2020\":1}}],[\"尽管它的返回值只在第一次渲染时被使用\",{\"1\":{\"1286\":1}}],[\"尽管可以做为文档的一种形式使用\",{\"1\":{\"1341\":1}}],[\"尽管实际上并不需要\",{\"1\":{\"1269\":1}}],[\"尽管我们使用了\",{\"1\":{\"1212\":1}}],[\"尽管原始类型和对象的转换逻辑各不相同\",{\"1\":{\"772\":1}}],[\"尽管在经典\",{\"1\":{\"467\":1}}],[\"尽管函数已经完成执行\",{\"1\":{\"431\":1}}],[\"尽管从未使用过\",{\"1\":{\"430\":1}}],[\"版本更新周期\",{\"1\":{\"2089\":1}}],[\"版本与先前版本兼容\",{\"1\":{\"1618\":1}}],[\"版本管理\",{\"1\":{\"1584\":2}}],[\"版本库中存储了很多配置信息\",{\"1\":{\"1584\":1}}],[\"版本库\",{\"1\":{\"1584\":1}}],[\"版本库可以不同\",{\"1\":{\"1580\":1}}],[\"版本库是集中存放在中央服务器的\",{\"1\":{\"1579\":1}}],[\"版本控制工具\",{\"1\":{\"1962\":1}}],[\"版本控制\",{\"1\":{\"1907\":1,\"1961\":1}}],[\"版本控制技术是团队协作开发的桥梁\",{\"1\":{\"1578\":1}}],[\"版本控制是指对软件开发过程中各种程序代码\",{\"1\":{\"1578\":1}}],[\"版本控制系统\",{\"0\":{\"1578\":1}}],[\"版本号\",{\"1\":{\"1472\":1}}],[\"版本可能会将\",{\"1\":{\"1201\":1}}],[\"版本中\",{\"1\":{\"1201\":1}}],[\"版本之前\",{\"1\":{\"1201\":1}}],[\"版本的\",{\"1\":{\"474\":1}}],[\"版本\",{\"0\":{\"908\":1},\"1\":{\"463\":1}}],[\"告诉渲染器清除颜色\",{\"1\":{\"2812\":1}}],[\"告诉客户端\",{\"1\":{\"1729\":1}}],[\"告诉对方\",{\"1\":{\"1727\":1}}],[\"告诉我们是否有一个\",{\"1\":{\"1308\":1}}],[\"告诉\",{\"1\":{\"463\":1,\"1443\":1}}],[\"旨在通过规范中定义的\",{\"1\":{\"457\":1}}],[\"事物t在修改数据r之前必须先对其加x锁\",{\"1\":{\"2260\":1}}],[\"事务日志是针对数据库改所做的记录\",{\"1\":{\"2266\":1}}],[\"事务\",{\"1\":{\"2258\":1}}],[\"事务的acid特性\",{\"0\":{\"2258\":1}}],[\"事前预防\",{\"1\":{\"1959\":1}}],[\"事\",{\"1\":{\"1869\":1}}],[\"事情并没有那么简单\",{\"1\":{\"1366\":1}}],[\"事实上\",{\"1\":{\"895\":1}}],[\"事实并非如此\",{\"1\":{\"455\":1}}],[\"事件驱动架构\",{\"1\":{\"2054\":1}}],[\"事件前或者后\",{\"1\":{\"1707\":1}}],[\"事件前\",{\"1\":{\"1707\":1}}],[\"事件回调引用外部函数\",{\"1\":{\"1653\":1}}],[\"事件系统\",{\"1\":{\"1521\":1}}],[\"事件方法\",{\"1\":{\"1518\":1}}],[\"事件调用\",{\"1\":{\"1201\":1}}],[\"事件调用此操作\",{\"1\":{\"345\":1}}],[\"事件监听\",{\"0\":{\"558\":1,\"1290\":1},\"1\":{\"902\":2}}],[\"事件监听器\",{\"0\":{\"432\":1,\"1247\":1},\"1\":{\"343\":1}}],[\"事件侦听器将一直有效\",{\"1\":{\"432\":1}}],[\"事件提供了两个属性\",{\"1\":{\"395\":1}}],[\"事件来监控文件的读取进度\",{\"1\":{\"395\":1}}],[\"事件处理器风格\",{\"0\":{\"1989\":1}}],[\"事件处理函数中同步更新\",{\"1\":{\"1203\":1}}],[\"事件处理函数\",{\"1\":{\"395\":1}}],[\"事件处理函数和\",{\"1\":{\"395\":1}}],[\"事件处理\",{\"0\":{\"395\":1},\"1\":{\"1533\":1}}],[\"事件处理程序\",{\"1\":{\"392\":1}}],[\"事件队列为空时渲染dom\",{\"1\":{\"376\":1}}],[\"事件触发线程\",{\"1\":{\"371\":1}}],[\"事件循环的流程\",{\"0\":{\"379\":1},\"1\":{\"379\":1}}],[\"事件循环的概念\",{\"0\":{\"378\":1}}],[\"事件循环机制也是它里面的实现的\",{\"1\":{\"378\":1}}],[\"事件循环\",{\"0\":{\"368\":1},\"1\":{\"378\":1},\"2\":{\"385\":1}}],[\"事件机制\",{\"2\":{\"243\":1}}],[\"事件上是输出的对象的tostring\",{\"1\":{\"478\":1}}],[\"事件上\",{\"1\":{\"240\":1}}],[\"事件委托\",{\"0\":{\"235\":1}}],[\"事件代理\",{\"0\":{\"235\":1}}],[\"事件先从\",{\"1\":{\"234\":1}}],[\"事件捕获的具体流程\",{\"1\":{\"234\":1}}],[\"事件从目标节点自下而上向\",{\"1\":{\"234\":1}}],[\"事件从\",{\"1\":{\"234\":1}}],[\"事件模型分为捕获和冒泡\",{\"1\":{\"234\":1}}],[\"事件模型和事件流\",{\"0\":{\"234\":1}}],[\"事件\",{\"1\":{\"232\":1,\"233\":1,\"239\":1,\"391\":1,\"829\":1,\"1290\":1,\"1705\":1}}],[\"事件名称\",{\"1\":{\"232\":1}}],[\"事件绑定方法\",{\"1\":{\"239\":1}}],[\"事件绑定\",{\"1\":{\"231\":1}}],[\"事件分为\",{\"1\":{\"230\":1}}],[\"事件级别\",{\"0\":{\"230\":1}}],[\"示例请参阅webgl\",{\"1\":{\"2647\":1}}],[\"示例1\",{\"1\":{\"1300\":1}}],[\"示例2\",{\"1\":{\"1299\":1}}],[\"示例代码如下\",{\"1\":{\"1256\":1}}],[\"示例分析\",{\"0\":{\"1235\":1}}],[\"示例\",{\"0\":{\"455\":1,\"1196\":1,\"1204\":1,\"1220\":1,\"1310\":1},\"1\":{\"1102\":1,\"1752\":1,\"1899\":1,\"2802\":1,\"2835\":1}}],[\"得出计算单元的理论性能\",{\"1\":{\"2170\":1}}],[\"得出了寄生组合式的继承方式\",{\"1\":{\"494\":1}}],[\"得到更高的性能\",{\"1\":{\"2593\":1}}],[\"得到记账权\",{\"1\":{\"2133\":1}}],[\"得到的结果返回给客户端\",{\"1\":{\"1794\":1}}],[\"得到的结果是\",{\"1\":{\"445\":1,\"616\":1}}],[\"得到数据后\",{\"1\":{\"823\":1}}],[\"得到数据后还要用\",{\"1\":{\"822\":1}}],[\"得益于\",{\"1\":{\"370\":1}}],[\"组成候选码的属性就是主属性\",{\"1\":{\"2245\":1}}],[\"组成候选吗的属性就是主属性\",{\"1\":{\"2240\":1}}],[\"组成\",{\"0\":{\"2230\":1}}],[\"组成的数组\",{\"1\":{\"295\":1,\"882\":1}}],[\"组播地址\",{\"1\":{\"2214\":1}}],[\"组网技术\",{\"0\":{\"2206\":1}}],[\"组装的三种方式\",{\"1\":{\"2028\":1}}],[\"组装构件\",{\"1\":{\"2028\":1}}],[\"组装和不能对数据包进行排序的缺点\",{\"1\":{\"1712\":1}}],[\"组织\",{\"1\":{\"1889\":1}}],[\"组织信息化的原动力\",{\"1\":{\"1874\":1}}],[\"组织对信息化的需求是\",{\"1\":{\"1874\":1}}],[\"组织和管理大型工程建设项目\",{\"1\":{\"1848\":1}}],[\"组织结构类型\",{\"1\":{\"2016\":1}}],[\"组织结构\",{\"1\":{\"1843\":1}}],[\"组合重用原则\",{\"1\":{\"1937\":1}}],[\"组合模式\",{\"0\":{\"1823\":1,\"1826\":1},\"2\":{\"1825\":1,\"1828\":1}}],[\"组合的联合类型\",{\"1\":{\"1428\":1}}],[\"组合\",{\"1\":{\"1057\":1}}],[\"组合键停止显示\",{\"1\":{\"993\":1}}],[\"组合继承\",{\"0\":{\"488\":1}}],[\"组管理者\",{\"1\":{\"938\":1}}],[\"组密码\",{\"1\":{\"938\":1}}],[\"组密码占位符都是\",{\"1\":{\"937\":1}}],[\"组中用户名列表\",{\"1\":{\"937\":1,\"938\":1}}],[\"组编号\",{\"1\":{\"937\":1,\"939\":2}}],[\"组编好为\",{\"1\":{\"937\":1}}],[\"组的名称\",{\"1\":{\"937\":1,\"938\":1}}],[\"组件间的集成架构模式\",{\"1\":{\"2054\":1}}],[\"组件或模块\",{\"1\":{\"1802\":1}}],[\"组件从\",{\"1\":{\"1765\":1}}],[\"组件更新\",{\"1\":{\"1492\":1,\"1528\":1,\"1543\":1}}],[\"组件更安全\",{\"1\":{\"1217\":1}}],[\"组件不会重新渲染\",{\"1\":{\"1279\":1}}],[\"组件会重新渲染\",{\"1\":{\"1279\":1}}],[\"组件被缓存\",{\"1\":{\"1267\":1}}],[\"组件卸载会执行这里面的代码\",{\"1\":{\"1245\":1}}],[\"组件挂载核心方法\",{\"0\":{\"1526\":1}}],[\"组件挂载入口\",{\"0\":{\"1525\":1}}],[\"组件挂载\",{\"1\":{\"1244\":3,\"1492\":1,\"1528\":1,\"1543\":1}}],[\"组件接受\",{\"1\":{\"1235\":1}}],[\"组件可显示文章的评论并允许用户提交新评论\",{\"1\":{\"1211\":1}}],[\"组件中\",{\"1\":{\"470\":1}}],[\"组件\",{\"1\":{\"443\":1,\"1210\":1,\"1256\":2}}],[\"易于传播\",{\"1\":{\"2034\":1}}],[\"易于理解\",{\"1\":{\"216\":1,\"1737\":1}}],[\"易用性关注的是对用户来说完成某个期望任务的容易程度和系统所提供的用户支持的种类\",{\"1\":{\"2008\":1}}],[\"易用性\",{\"0\":{\"2008\":1}}],[\"易重用\",{\"1\":{\"1899\":1}}],[\"易调试\",{\"1\":{\"1077\":1}}],[\"易编写\",{\"1\":{\"1077\":1}}],[\"易读\",{\"1\":{\"442\":1}}],[\"难以进行定量的计算和分析\",{\"1\":{\"1956\":1}}],[\"难以维护\",{\"1\":{\"1753\":1,\"1813\":1}}],[\"难以调试\",{\"1\":{\"442\":1}}],[\"难以测试\",{\"1\":{\"442\":1}}],[\"概要设计\",{\"1\":{\"1929\":1,\"1940\":1}}],[\"概念结构设计\",{\"0\":{\"2237\":1}}],[\"概念框架的互操作设计包括系统体系结构连接的所有框架间的互操作的规则\",{\"1\":{\"2020\":1}}],[\"概念阶段\",{\"1\":{\"1854\":1}}],[\"概念\",{\"0\":{\"442\":1,\"447\":1,\"457\":1,\"467\":1,\"1643\":1,\"1843\":1,\"1974\":1,\"2014\":1,\"2150\":1}}],[\"概述\",{\"0\":{\"586\":1,\"2115\":1},\"1\":{\"271\":1,\"272\":1}}],[\"绿色的线\",{\"1\":{\"436\":1}}],[\"识别和纠正软件错误\",{\"1\":{\"1949\":1}}],[\"识别出问题\",{\"1\":{\"1926\":1}}],[\"识别为命令\",{\"1\":{\"1056\":1}}],[\"识别分离的\",{\"0\":{\"437\":1},\"1\":{\"435\":1}}],[\"识别内存泄漏\",{\"0\":{\"435\":1}}],[\"节省开支\",{\"1\":{\"1878\":1}}],[\"节约了内存开支和实例化时的性能开支\",{\"1\":{\"1769\":1}}],[\"节约开支\",{\"1\":{\"1769\":1}}],[\"节约上下文切换时间的好处\",{\"1\":{\"370\":1}}],[\"节流\",{\"0\":{\"827\":1}}],[\"节流与防抖\",{\"0\":{\"826\":1},\"2\":{\"834\":1}}],[\"节点并替换掉\",{\"1\":{\"1528\":1}}],[\"节点并将大字符串设置到全局\",{\"1\":{\"436\":1}}],[\"节点来应用最新的\",{\"1\":{\"1475\":1}}],[\"节点的引用\",{\"1\":{\"1288\":1}}],[\"节点无法跨域操作\",{\"1\":{\"855\":1}}],[\"节点\",{\"0\":{\"437\":1},\"1\":{\"435\":1,\"437\":1,\"1478\":2}}],[\"节点具有来自\",{\"1\":{\"434\":1}}],[\"尤其是在3d图形处理中\",{\"1\":{\"2179\":1}}],[\"尤其是在链较长的情况下\",{\"1\":{\"1838\":1}}],[\"尤其是在开源世界中\",{\"1\":{\"1577\":1}}],[\"尤其是在回调的寿命未定义或不确定的情况下\",{\"1\":{\"430\":1}}],[\"尤其是用作回调时\",{\"1\":{\"431\":1}}],[\"计费管理\",{\"1\":{\"2220\":1}}],[\"计数器\",{\"1\":{\"2176\":1}}],[\"计数器的值保存在\",{\"1\":{\"1274\":1}}],[\"计划\",{\"1\":{\"1864\":1}}],[\"计划驱动方法\",{\"1\":{\"1855\":1}}],[\"计时器回调中对对象的引用就会保持活动状态\",{\"1\":{\"430\":1}}],[\"计时器\",{\"0\":{\"430\":1}}],[\"计算并向该几何图形添加切线属性\",{\"1\":{\"2305\":1}}],[\"计算当前几何体的的边界球形\",{\"1\":{\"2304\":1}}],[\"计算当前几何体的的边界矩形\",{\"1\":{\"2303\":1}}],[\"计算困难\",{\"1\":{\"2133\":1}}],[\"计算出来的账单结点哈希值前13个字符为0\",{\"1\":{\"2133\":1}}],[\"计算处理职能的本地化\",{\"1\":{\"2057\":1}}],[\"计算或数据存储单元\",{\"1\":{\"1972\":1}}],[\"计算器函数\",{\"1\":{\"1798\":1}}],[\"计算属性的初始化\",{\"0\":{\"1569\":1}}],[\"计算属性原理\",{\"0\":{\"1568\":1},\"2\":{\"1574\":1}}],[\"计算位置\",{\"1\":{\"1256\":1}}],[\"计算新的状态\",{\"1\":{\"1194\":1}}],[\"计算行数时\",{\"1\":{\"986\":1}}],[\"计算鼠标移动的距离\",{\"1\":{\"829\":1}}],[\"计算规则和上述运算符类似\",{\"1\":{\"620\":1}}],[\"计算机网络性能指标可以从速率\",{\"1\":{\"2200\":1}}],[\"计算机网络性能指标\",{\"0\":{\"2200\":1}}],[\"计算机网络可以极大扩展计算机系统的功能及其应用范围\",{\"1\":{\"2199\":1}}],[\"计算机网络功能\",{\"1\":{\"2199\":1}}],[\"计算机网络概述\",{\"0\":{\"2199\":1}}],[\"计算机网路\",{\"0\":{\"2198\":1}}],[\"计算机组成结构\",{\"0\":{\"2138\":1}}],[\"计算机系统概述\",{\"0\":{\"2137\":1}}],[\"计算机系统基础\",{\"0\":{\"2136\":1}}],[\"计算机信息系统安全保护等级\",{\"0\":{\"2111\":1}}],[\"计算机程序\",{\"1\":{\"1961\":1}}],[\"计算机运行\",{\"1\":{\"1938\":1}}],[\"计算机中的有符号数有三种表示方法\",{\"1\":{\"606\":1}}],[\"计算机对二进制数据进行的运算加减乘除等都是叫位运算\",{\"1\":{\"606\":1}}],[\"计算的结果一致\",{\"1\":{\"596\":1}}],[\"计算\",{\"1\":{\"224\":1,\"1707\":1,\"2057\":1,\"2283\":1,\"2284\":1,\"2742\":1}}],[\"计算不方便\",{\"1\":{\"208\":1}}],[\"计算bfc的高度时\",{\"1\":{\"149\":1}}],[\"成本\",{\"1\":{\"2176\":1}}],[\"成本低\",{\"1\":{\"2047\":1}}],[\"成本效益分析法\",{\"1\":{\"2011\":1}}],[\"成员变量\",{\"1\":{\"1650\":1}}],[\"成为\",{\"1\":{\"1418\":1}}],[\"成为一个全局变量\",{\"1\":{\"428\":1}}],[\"成功实现了软硬件的无缝结合\",{\"1\":{\"2179\":1}}],[\"成功或者失败\",{\"1\":{\"569\":1}}],[\"成功后拿到数据\",{\"1\":{\"569\":1}}],[\"成功\",{\"1\":{\"328\":2,\"1168\":1}}],[\"成功输出\",{\"1\":{\"122\":1}}],[\"垃圾收集器在运行时会给内存中的所有变量都加上一个标记\",{\"1\":{\"1646\":1}}],[\"垃圾收集器是\",{\"1\":{\"425\":1}}],[\"垃圾\",{\"1\":{\"1646\":1}}],[\"垃圾回收器会将所有的数据置为白色\",{\"1\":{\"1650\":1}}],[\"垃圾回收器会在运行的时候清理掉引用次数为\",{\"1\":{\"1646\":1}}],[\"垃圾回收机制的原理说白了也就是定期找出那些不再用到的内存\",{\"1\":{\"1646\":1}}],[\"垃圾回收\",{\"0\":{\"1640\":1,\"1642\":1},\"2\":{\"1655\":1}}],[\"垃圾回收语言中泄漏的主要原因是不需要的引用\",{\"1\":{\"425\":1}}],[\"垃圾回收语言通过定期检查哪些先前分配的内存仍然可以从应用程序的其他部分\",{\"1\":{\"425\":1}}],[\"释放不需要的内存\",{\"1\":{\"425\":1}}],[\"释放内存是自动完成的\",{\"1\":{\"425\":1}}],[\"释放内存\",{\"1\":{\"425\":1}}],[\"访问验证保护级\",{\"1\":{\"2111\":1}}],[\"访问控制决定开发系统环境中允许使用哪些资源\",{\"1\":{\"2126\":1}}],[\"访问控制框架\",{\"0\":{\"2126\":1}}],[\"访问控制列表\",{\"1\":{\"2107\":1}}],[\"访问控制矩阵按列分解\",{\"1\":{\"2107\":1}}],[\"访问控制矩阵\",{\"1\":{\"2107\":1}}],[\"访问控制的实现技术\",{\"0\":{\"2107\":1}}],[\"访问控制的三要素\",{\"1\":{\"2106\":1}}],[\"访问控制的目标有两个\",{\"1\":{\"2106\":1}}],[\"访问控制的基本模型\",{\"0\":{\"2106\":1}}],[\"访问控制技术\",{\"0\":{\"2105\":1}}],[\"访问控制\",{\"1\":{\"2103\":1}}],[\"访问时需要通过微服务\",{\"1\":{\"2056\":1}}],[\"访问者通过餐馆就可以拿到产品\",{\"1\":{\"1747\":1}}],[\"访问限制\",{\"1\":{\"1680\":1}}],[\"访问页面\",{\"1\":{\"1679\":1}}],[\"访问到的数据\",{\"1\":{\"1274\":1}}],[\"访问日志的路径\",{\"1\":{\"1153\":1}}],[\"访问日志文件\",{\"1\":{\"1150\":1}}],[\"访问变量的规则\",{\"1\":{\"895\":1}}],[\"访问\",{\"0\":{\"1138\":1,\"1281\":1},\"1\":{\"425\":1,\"467\":1,\"1514\":1,\"1521\":1}}],[\"访问其内容\",{\"1\":{\"390\":1}}],[\"甚至于创建对象的每一个细节\",{\"1\":{\"1758\":1}}],[\"甚至没有上限\",{\"1\":{\"1670\":1}}],[\"甚至会略微增加\",{\"1\":{\"1650\":1}}],[\"甚至它本身\",{\"1\":{\"802\":1}}],[\"甚至连\",{\"1\":{\"664\":1}}],[\"甚至一个单独的\",{\"1\":{\"501\":1}}],[\"甚至导致浏览器的崩溃\",{\"1\":{\"424\":1}}],[\"甚至可以调用函数\",{\"1\":{\"255\":1}}],[\"甚至可以声明与参数同名变量\",{\"1\":{\"250\":1}}],[\"促使我们更加关注与内存相关的\",{\"1\":{\"424\":1}}],[\"→\",{\"0\":{\"416\":1,\"417\":1,\"418\":1,\"419\":1,\"420\":1,\"421\":1},\"1\":{\"471\":2,\"482\":2,\"1061\":1}}],[\"看门狗电路\",{\"1\":{\"2176\":1}}],[\"看来\",{\"1\":{\"1443\":1}}],[\"看起来像是一个复杂版的\",{\"1\":{\"1279\":1}}],[\"看到\",{\"1\":{\"1269\":1,\"1363\":1}}],[\"看到上面的代码块时\",{\"1\":{\"463\":1}}],[\"看看是不是有一个叫\",{\"1\":{\"895\":1}}],[\"看看是不是已经有一个叫\",{\"1\":{\"895\":1}}],[\"看看效果\",{\"1\":{\"507\":1}}],[\"看下用\",{\"1\":{\"732\":1}}],[\"看下面的代码\",{\"1\":{\"503\":1}}],[\"看下面的例子\",{\"1\":{\"351\":1,\"689\":1}}],[\"看一个例子\",{\"1\":{\"637\":1}}],[\"看一下为指针的下一个元素是否存在\",{\"1\":{\"1478\":1}}],[\"看一下\",{\"1\":{\"590\":1}}],[\"看完这些基本的概念和使用\",{\"1\":{\"415\":1}}],[\"格式\",{\"1\":{\"1086\":1}}],[\"格式如下\",{\"1\":{\"1038\":1}}],[\"格式为每列一个文件名称\",{\"1\":{\"1012\":1}}],[\"格式与date指令相同\",{\"1\":{\"981\":1}}],[\"格式转化\",{\"0\":{\"415\":1}}],[\"格式进行展示\",{\"1\":{\"414\":1}}],[\"格式的图片字符串\",{\"1\":{\"1665\":1}}],[\"格式的图片\",{\"1\":{\"395\":1,\"414\":1}}],[\"格式的\",{\"1\":{\"394\":1}}],[\"转发路径学习\",{\"1\":{\"2208\":1}}],[\"转向技术\",{\"1\":{\"1873\":1}}],[\"转交请求并获得的内容\",{\"1\":{\"1794\":1}}],[\"转义符号\",{\"1\":{\"1089\":1}}],[\"转换系统描述形式\",{\"1\":{\"1905\":1}}],[\"转换成字符串\",{\"1\":{\"1702\":1}}],[\"转换成数组返回\",{\"1\":{\"740\":1}}],[\"转换规则如下\",{\"1\":{\"889\":1}}],[\"转换失败并提示\",{\"1\":{\"806\":1}}],[\"转换方法将对象转换为原始值\",{\"1\":{\"806\":1}}],[\"转换方法\",{\"1\":{\"804\":1}}],[\"转换为字符串\",{\"1\":{\"803\":1}}],[\"转换为\",{\"1\":{\"794\":2}}],[\"转换为只有一层的数组\",{\"1\":{\"734\":1}}],[\"转换的代码\",{\"1\":{\"495\":1}}],[\"转型函数\",{\"1\":{\"698\":1}}],[\"转化成真实\",{\"0\":{\"1528\":1}}],[\"转化成\",{\"1\":{\"1514\":1}}],[\"转化为一组机器指令\",{\"1\":{\"895\":1}}],[\"转化为可执行代码\",{\"1\":{\"895\":1}}],[\"转化为可打印的字符\",{\"1\":{\"414\":1}}],[\"转化为数字时\",{\"1\":{\"799\":1,\"800\":1}}],[\"转化为其对应的字符串形式\",{\"1\":{\"786\":1}}],[\"转化方法\",{\"0\":{\"686\":1}}],[\"转数字\",{\"1\":{\"663\":2}}],[\"转成\",{\"1\":{\"663\":4}}],[\"转成一个数组\",{\"1\":{\"636\":1}}],[\"转成对象\",{\"0\":{\"315\":1}}],[\"转为布尔型是\",{\"1\":{\"664\":1,\"669\":1}}],[\"转为原始类型再进行判断\",{\"1\":{\"627\":1}}],[\"转为\",{\"1\":{\"627\":1}}],[\"效率比http重定向高\",{\"1\":{\"2077\":1}}],[\"效率\",{\"1\":{\"1958\":1}}],[\"效率要求相对高\",{\"1\":{\"1715\":1}}],[\"效率要求相对低\",{\"1\":{\"1715\":1}}],[\"效率上需要消耗很多性能\",{\"1\":{\"236\":1}}],[\"效果等同于\",{\"1\":{\"1067\":2}}],[\"效果类似\",{\"1\":{\"1032\":1}}],[\"效果和在\",{\"1\":{\"872\":1}}],[\"效果如下\",{\"1\":{\"414\":1}}],[\"源因子所有可能的取值请参阅constants\",{\"1\":{\"2644\":1}}],[\"源地址哈希散列算法\",{\"1\":{\"2077\":1}}],[\"源代码\",{\"1\":{\"1577\":1,\"1961\":1}}],[\"源码这块包含了复杂的处理\",{\"1\":{\"1551\":1}}],[\"源码\",{\"0\":{\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1}}],[\"源码安装\",{\"0\":{\"1130\":1}}],[\"源文件或目录\",{\"1\":{\"1003\":1}}],[\"源文件\",{\"1\":{\"998\":1}}],[\"源\",{\"0\":{\"1141\":1},\"1\":{\"413\":1}}],[\"声\",{\"1\":{\"986\":1}}],[\"声明但不能使用的方法\",{\"1\":{\"1755\":1}}],[\"声明函数返回值为void\",{\"1\":{\"1415\":1}}],[\"声明一个\",{\"1\":{\"1415\":1}}],[\"声明一个类型变量并且对它进行使用\",{\"1\":{\"1368\":1}}],[\"声明一个引用类型的变量\",{\"1\":{\"652\":1}}],[\"声明文件\",{\"0\":{\"1355\":1}}],[\"声明环境变量\",{\"0\":{\"1111\":1}}],[\"声明变量的时候指定类型就可以进行数值\",{\"1\":{\"1112\":1}}],[\"声明变量\",{\"1\":{\"898\":1}}],[\"声明时\",{\"1\":{\"898\":1}}],[\"声明在当前块里的\",{\"1\":{\"511\":1}}],[\"声明给去掉\",{\"1\":{\"511\":1}}],[\"声明的关键字\",{\"1\":{\"507\":1}}],[\"声明的变量会先在作用域中被创建出来\",{\"1\":{\"511\":1}}],[\"声明的变量并没有被存放到词法环境中\",{\"1\":{\"509\":1}}],[\"声明的变量存放到变量环境中\",{\"1\":{\"507\":1}}],[\"声明的变量其值是不可以被改变的\",{\"1\":{\"507\":1}}],[\"声明的变量\",{\"1\":{\"507\":1,\"509\":2,\"510\":2,\"898\":1}}],[\"声明\",{\"1\":{\"507\":1}}],[\"声明提升还可以提高js代码的容错性\",{\"1\":{\"503\":1}}],[\"声明公共变量和函数\",{\"1\":{\"445\":1}}],[\"声明私有变量和函数\",{\"1\":{\"445\":1}}],[\"声卡之类的本机设备传送数据\",{\"1\":{\"408\":1}}],[\"声音效果\",{\"1\":{\"338\":1}}],[\"位移贴图在网格顶点上的偏移量\",{\"1\":{\"2604\":1,\"2705\":1}}],[\"位移贴图对网格的影响程度\",{\"1\":{\"2603\":1,\"2704\":1}}],[\"位移贴图会影响网格顶点的位置\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"位移纹理是指\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"位视图\",{\"0\":{\"2165\":1}}],[\"位置透明\",{\"1\":{\"2232\":1}}],[\"位置透明性\",{\"1\":{\"2232\":1}}],[\"位置信息\",{\"1\":{\"2150\":1}}],[\"位置\",{\"1\":{\"1256\":1,\"1551\":1}}],[\"位置参数变量\",{\"0\":{\"1104\":1}}],[\"位无符号整型\",{\"1\":{\"677\":1}}],[\"位无符号整数\",{\"1\":{\"402\":7}}],[\"位的有符号整数\",{\"1\":{\"642\":1}}],[\"位的单元中\",{\"1\":{\"642\":1}}],[\"位操作是在数值的底层完成的\",{\"1\":{\"606\":1}}],[\"位操作符\",{\"0\":{\"606\":1}}],[\"位整数即可\",{\"1\":{\"606\":1}}],[\"位整数\",{\"1\":{\"606\":1}}],[\"位格式存储\",{\"1\":{\"606\":1}}],[\"位\",{\"1\":{\"402\":1,\"606\":2}}],[\"位浮点\",{\"1\":{\"402\":2}}],[\"位浮点数\",{\"1\":{\"320\":1}}],[\"位有符号整数\",{\"1\":{\"402\":3}}],[\"适当增加数据冗余度\",{\"1\":{\"2229\":1}}],[\"适当的信息系统工具\",{\"1\":{\"1850\":1}}],[\"适应新的ai算法\",{\"1\":{\"2180\":1}}],[\"适应性维护\",{\"1\":{\"1949\":1}}],[\"适应性的\",{\"1\":{\"1903\":1}}],[\"适⽤于交互频率特别低的场景\",{\"1\":{\"1730\":1}}],[\"适合需求不明确的项目\",{\"1\":{\"1896\":1}}],[\"适合那些简单的初始化逻辑\",{\"1\":{\"1274\":1}}],[\"适合用于传输\",{\"1\":{\"397\":1}}],[\"适用站点都可以根据需要来指定\",{\"1\":{\"1659\":1}}],[\"适用场景\",{\"1\":{\"1237\":1}}],[\"适用于国防关键部门和依法需要对计算机信息系统实施特殊隔离的单位\",{\"1\":{\"2111\":1}}],[\"适用于中央级国家机关\",{\"1\":{\"2111\":1}}],[\"适用于地方各级国家机关\",{\"1\":{\"2111\":1}}],[\"适用于普通内联网用户\",{\"1\":{\"2111\":1}}],[\"适用于嵌入式系统\",{\"1\":{\"1994\":1}}],[\"适用于需要非阻塞操作的场景\",{\"1\":{\"1812\":1}}],[\"适用于少量对象的创建\",{\"1\":{\"1752\":1}}],[\"适用于机密信息的输入\",{\"1\":{\"1106\":1}}],[\"适用于服务器端和客户端\",{\"1\":{\"465\":1}}],[\"适用遍历\",{\"1\":{\"719\":1}}],[\"适配器模式让那些接口不兼容的类可以一起工作\",{\"1\":{\"1780\":1}}],[\"适配器模式\",{\"0\":{\"1780\":1},\"2\":{\"1782\":1}}],[\"适配iphone6\",{\"1\":{\"204\":2}}],[\"适配iphone4的css样式\",{\"1\":{\"204\":1}}],[\"适配方案\",{\"0\":{\"203\":1}}],[\"前趋图\",{\"0\":{\"2155\":1}}],[\"前期投入低\",{\"1\":{\"2047\":1}}],[\"前\",{\"1\":{\"1707\":1}}],[\"前依次执行\",{\"1\":{\"1707\":1}}],[\"前两次加一后减两\",{\"1\":{\"1197\":1}}],[\"前两种组合\",{\"0\":{\"488\":1}}],[\"前提是回调函数不能是箭头函数\",{\"1\":{\"872\":1}}],[\"前面我们也提过\",{\"1\":{\"1648\":1}}],[\"前面各个例子是查找并打印出符合条件的行\",{\"1\":{\"1016\":1}}],[\"前面\",{\"1\":{\"698\":1,\"2674\":1}}],[\"前面的abc\",{\"1\":{\"1550\":1}}],[\"前面的不生效\",{\"1\":{\"830\":1}}],[\"前面的\",{\"1\":{\"575\":1}}],[\"前置递增操作符\",{\"1\":{\"602\":1}}],[\"前缀版\",{\"1\":{\"602\":1}}],[\"前者用于表示异步调用顺利结束\",{\"1\":{\"578\":1}}],[\"前者的数组成员都是同一个数据类型\",{\"1\":{\"397\":1}}],[\"前端在做大数据量查询的时候\",{\"1\":{\"1236\":1}}],[\"前端渲染就需要延迟更新列表\",{\"1\":{\"1235\":1}}],[\"前端软件包管理器\",{\"1\":{\"1071\":1}}],[\"前端浏览器判断\",{\"1\":{\"860\":1}}],[\"前端跨域访问到后端\",{\"1\":{\"860\":1}}],[\"前端就能跨域请求后端呢\",{\"1\":{\"860\":1}}],[\"前端就可以跨域访问后端\",{\"1\":{\"860\":1}}],[\"前端代码\",{\"1\":{\"859\":1,\"860\":1,\"864\":1,\"865\":1,\"866\":1}}],[\"前端接收到这个字符串之后\",{\"1\":{\"859\":1}}],[\"前端模块化\",{\"0\":{\"440\":1},\"2\":{\"476\":1}}],[\"前端\",{\"1\":{\"83\":1}}],[\"种字面量类型\",{\"1\":{\"1427\":1}}],[\"种\",{\"1\":{\"817\":1}}],[\"种类型\",{\"1\":{\"817\":1}}],[\"种类型的视图\",{\"1\":{\"402\":1}}],[\"种方法中已经使用\",{\"1\":{\"740\":1}}],[\"种方式去判断一个对象是否为数组\",{\"1\":{\"681\":1}}],[\"种数据类型\",{\"1\":{\"656\":1}}],[\"种数据格式的视图\",{\"1\":{\"397\":1}}],[\"种比线程更加轻量级的存在\",{\"1\":{\"589\":1}}],[\"种情况\",{\"1\":{\"124\":1}}],[\"需求文档\",{\"1\":{\"1940\":2,\"1961\":1}}],[\"需求变更\",{\"0\":{\"1926\":1}}],[\"需求验证\",{\"0\":{\"1924\":1}}],[\"需求一旦确定\",{\"1\":{\"1923\":1}}],[\"需求定义\",{\"0\":{\"1923\":1}}],[\"需求开发\",{\"0\":{\"1922\":1}}],[\"需求基线的管理\",{\"1\":{\"1907\":1}}],[\"需求状态跟踪\",{\"1\":{\"1907\":1}}],[\"需求跟踪\",{\"0\":{\"1925\":1},\"1\":{\"1907\":1}}],[\"需求管理是对\",{\"1\":{\"1907\":1}}],[\"需求管理\",{\"1\":{\"1907\":1}}],[\"需求确认与验证\",{\"1\":{\"1907\":1}}],[\"需求分析工具\",{\"1\":{\"1962\":1}}],[\"需求分析\",{\"0\":{\"1909\":1},\"1\":{\"1907\":1}}],[\"需求获取\",{\"0\":{\"1908\":1},\"1\":{\"1907\":1}}],[\"需求工程主要活动的阶段划分\",{\"1\":{\"1907\":1}}],[\"需求工程\",{\"0\":{\"1907\":1}}],[\"需求到供方\",{\"1\":{\"1879\":1}}],[\"需求信息流\",{\"1\":{\"1879\":1}}],[\"需求阶段\",{\"0\":{\"1861\":1}}],[\"需求\",{\"1\":{\"1855\":1,\"1902\":1}}],[\"需等待垃圾回收完毕后再恢复脚本执行\",{\"1\":{\"1649\":1}}],[\"需修改请求的内容后再次发送请求\",{\"1\":{\"817\":1}}],[\"需读取总量\",{\"1\":{\"395\":1}}],[\"需要支持\",{\"1\":{\"2820\":1,\"2821\":1}}],[\"需要被激活的rendertarget\",{\"1\":{\"2842\":1}}],[\"需要被右摄像机渲染的物体也应当要加入到这一层中\",{\"1\":{\"2556\":1}}],[\"需要被左摄像机渲染的物体也应当要加入到这一层中\",{\"1\":{\"2555\":1}}],[\"需要三维空间中的曲线定义\",{\"1\":{\"2343\":1}}],[\"需要调用该接口指定计算边界球形\",{\"1\":{\"2304\":1}}],[\"需要调用该接口指定计算边界矩形\",{\"1\":{\"2303\":1}}],[\"需要满足应用对功能\",{\"1\":{\"2176\":1}}],[\"需要的硬件以及占用的内容也有所增加\",{\"1\":{\"2162\":1}}],[\"需要保密的非重要单位\",{\"1\":{\"2111\":1}}],[\"需要多人开发的业务模块\",{\"1\":{\"2055\":1}}],[\"需要多层级的工厂来管理\",{\"1\":{\"1752\":1}}],[\"需要维护的概率就会越低\",{\"1\":{\"1948\":1}}],[\"需要实际的\",{\"1\":{\"1923\":1}}],[\"需要从链头开始往后找\",{\"1\":{\"1839\":1}}],[\"需要一种松耦合的方式来设计程序\",{\"1\":{\"1826\":1}}],[\"需要一个像\",{\"1\":{\"460\":1}}],[\"需要一个强制对象\",{\"1\":{\"341\":1}}],[\"需要额外的开发和维护工作\",{\"1\":{\"1797\":1}}],[\"需要谨慎使用单例模式\",{\"1\":{\"1763\":1}}],[\"需要预先知道具体产品类\",{\"1\":{\"1751\":1}}],[\"需要经过时间等待计时器设置的时间2msl后\",{\"1\":{\"1728\":1}}],[\"需要过一阵子以确保服务端收到自己的\",{\"1\":{\"1728\":1}}],[\"需要客户端和服务器总共发送3个包\",{\"1\":{\"1726\":1}}],[\"需要\",{\"1\":{\"1649\":1}}],[\"需要分配内存空间来储存变量和值\",{\"1\":{\"1643\":1}}],[\"需要以标签指定的版本为基础版本\",{\"1\":{\"1623\":1}}],[\"需要手动开启\",{\"1\":{\"2737\":1}}],[\"需要手动删除\",{\"1\":{\"1614\":1}}],[\"需要手动指定constructor为指向自己的构造函数\",{\"1\":{\"488\":1}}],[\"需要修复上线\",{\"1\":{\"1601\":1}}],[\"需要先创建一个本地分支\",{\"1\":{\"1594\":1}}],[\"需要先动态设置\",{\"1\":{\"206\":1}}],[\"需要加缓存\",{\"1\":{\"1570\":1}}],[\"需要递归遍历收集\",{\"1\":{\"1563\":1}}],[\"需要递归判断\",{\"1\":{\"1535\":1}}],[\"需要观测\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"需要json\",{\"1\":{\"1527\":1}}],[\"需要根据key和\",{\"1\":{\"1478\":1}}],[\"需要删除属性\",{\"1\":{\"1477\":1}}],[\"需要包含的类型声明文件名列表\",{\"1\":{\"1454\":1}}],[\"需要创建一个新的对象或数组\",{\"1\":{\"1273\":1}}],[\"需要同步读取或更改\",{\"1\":{\"1259\":1}}],[\"需要为setstate传入回调函数\",{\"1\":{\"1197\":1}}],[\"需要连续对一个状态进行更改\",{\"1\":{\"1197\":1}}],[\"需要定义\",{\"1\":{\"986\":1}}],[\"需要前后端配合\",{\"1\":{\"859\":1}}],[\"需要前端后端配合\",{\"1\":{\"859\":1}}],[\"需要给\",{\"1\":{\"703\":2,\"895\":1}}],[\"需要串行时\",{\"1\":{\"571\":1}}],[\"需要把数据传给\",{\"1\":{\"569\":1}}],[\"需要把目标异步任务给放进去\",{\"1\":{\"565\":1}}],[\"需要把\",{\"1\":{\"511\":1}}],[\"需要把模块所需要的依赖都提前在依赖数组中声明\",{\"1\":{\"464\":1}}],[\"需要向下兼容\",{\"1\":{\"500\":1}}],[\"需要通过texture处理\",{\"1\":{\"2687\":1}}],[\"需要通过\",{\"1\":{\"473\":1}}],[\"需要通过向参数\",{\"1\":{\"464\":1}}],[\"需要在模型的\",{\"1\":{\"2744\":1}}],[\"需要在浏览器绘制前获取\",{\"1\":{\"1256\":1}}],[\"需要在其前面添加\",{\"1\":{\"469\":1}}],[\"需要在异步执行完成之后才能访问它\",{\"1\":{\"334\":1}}],[\"需要异步加载模块\",{\"1\":{\"464\":1}}],[\"需要将赋值表达式使用括号括起来\",{\"1\":{\"838\":1}}],[\"需要将所需模块作为依赖项导入\",{\"1\":{\"443\":1}}],[\"需要将变量名写在$\",{\"1\":{\"255\":1}}],[\"需要特别注意那些用于临时存储和处理大量信息的全局变量\",{\"1\":{\"429\":1}}],[\"需要特定的异步线程去执行\",{\"1\":{\"376\":1}}],[\"需要借助以下视图对象来读写\",{\"1\":{\"397\":1}}],[\"需要执行异步任务时\",{\"1\":{\"371\":1}}],[\"需要我们手动调用\",{\"1\":{\"355\":1}}],[\"需要查找的元素值\",{\"1\":{\"289\":1}}],[\"需要对传入的对象参数添加一个临时属性\",{\"1\":{\"270\":1}}],[\"需要使用工具卸载到目标机或固化在目标机存储器上运行\",{\"1\":{\"2177\":1}}],[\"需要使用写屏障技术来记录这些引用关系的变化\",{\"1\":{\"1650\":1}}],[\"需要使用该选项\",{\"1\":{\"998\":1}}],[\"需要使用此\",{\"1\":{\"806\":1}}],[\"需要使用\",{\"1\":{\"255\":1,\"260\":1}}],[\"需要注意以下特殊情况\",{\"1\":{\"617\":1,\"618\":1,\"619\":1,\"620\":1}}],[\"需要注意以下几点\",{\"1\":{\"255\":1,\"256\":1,\"763\":1}}],[\"需要注意加操作的顺序\",{\"1\":{\"616\":1}}],[\"需要注意一种情况\",{\"1\":{\"353\":1}}],[\"需要注意\",{\"1\":{\"261\":1,\"272\":1,\"324\":1,\"345\":1,\"355\":1,\"362\":1,\"403\":1,\"604\":1,\"607\":1,\"608\":1,\"611\":1,\"627\":1,\"633\":1,\"640\":1,\"689\":1,\"718\":1,\"806\":1,\"849\":1,\"901\":1,\"1595\":1,\"1608\":1,\"1614\":2,\"1615\":1}}],[\"需要注意的是\",{\"1\":{\"253\":1,\"1340\":1,\"2767\":1}}],[\"需要确定父级的大小\",{\"1\":{\"205\":1}}],[\"需要编写多套\",{\"1\":{\"204\":1}}],[\"需要发送的数据\",{\"1\":{\"128\":1}}],[\"需要监听那条特征值这需要你和硬件佬协商的\",{\"1\":{\"122\":1}}],[\"需要传入\",{\"1\":{\"363\":1}}],[\"需要传\",{\"1\":{\"122\":1}}],[\"需要改什么\",{\"1\":{\"109\":1}}],[\"完全不透明\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"完全透明\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"完全备份\",{\"1\":{\"2266\":1}}],[\"完工报告单\",{\"1\":{\"1879\":1}}],[\"完毕后会向客户端发送连接释放请求\",{\"1\":{\"1729\":1}}],[\"完善性维护\",{\"1\":{\"1949\":1}}],[\"完善\",{\"0\":{\"1561\":1,\"1562\":1}}],[\"完美的回来了\",{\"1\":{\"864\":1,\"866\":1}}],[\"完整性约束\",{\"0\":{\"2241\":1}}],[\"完整性机制的类型\",{\"1\":{\"2128\":1}}],[\"完整性框架的目的是通过阻止威胁或探测威胁\",{\"1\":{\"2128\":1}}],[\"完整性框架\",{\"0\":{\"2128\":1}}],[\"完整性级别描述安全策略要求\",{\"1\":{\"2118\":1}}],[\"完整性\",{\"1\":{\"1958\":1,\"2006\":1,\"2103\":1,\"2108\":1}}],[\"完整\",{\"0\":{\"584\":1}}],[\"完整代码\",{\"0\":{\"127\":1}}],[\"完成任务后因撤销而消亡\",{\"1\":{\"2151\":1}}],[\"完成系统的运行计划\",{\"1\":{\"1847\":1}}],[\"完成研制方案及生产计划\",{\"1\":{\"1847\":1}}],[\"完成他们的工作并很快死去\",{\"1\":{\"1641\":1}}],[\"完成\",{\"1\":{\"817\":1}}],[\"完成后\",{\"1\":{\"434\":1,\"581\":1}}],[\"完成之后\",{\"1\":{\"394\":4,\"1579\":1}}],[\"状态图\",{\"0\":{\"1917\":1}}],[\"状态盒\",{\"1\":{\"1906\":1}}],[\"状态变量\",{\"1\":{\"1719\":1}}],[\"状态更新是异步的\",{\"1\":{\"1273\":1}}],[\"状态改变就会调用\",{\"1\":{\"864\":1,\"866\":1}}],[\"状态码就达\",{\"1\":{\"817\":1}}],[\"状态码共分为\",{\"1\":{\"817\":1}}],[\"状态码\",{\"1\":{\"817\":2}}],[\"状态发生变化时\",{\"1\":{\"581\":1}}],[\"状态转变为\",{\"1\":{\"580\":2}}],[\"状态到底是fulfilled还是rejected\",{\"1\":{\"575\":1}}],[\"状态\",{\"0\":{\"1139\":1,\"2153\":1},\"1\":{\"563\":3,\"567\":1,\"577\":5,\"1203\":2,\"1251\":1,\"1312\":1,\"1726\":4,\"1727\":4,\"1728\":11,\"1729\":5,\"2150\":1,\"2837\":1}}],[\"状态的数字\",{\"1\":{\"394\":1}}],[\"状态无关的操作\",{\"1\":{\"300\":1}}],[\"日志文件\",{\"1\":{\"2266\":1}}],[\"日志记录等操作\",{\"1\":{\"1794\":1}}],[\"日志记录\",{\"0\":{\"1624\":1}}],[\"日志信息\",{\"1\":{\"1600\":1}}],[\"日志信息和文件版本信息等\",{\"1\":{\"1584\":1}}],[\"日志格式\",{\"1\":{\"1153\":1}}],[\"日常使用和修改的文件\",{\"1\":{\"1150\":1}}],[\"日以前的普通文件\",{\"1\":{\"1007\":1}}],[\"日期时间\",{\"1\":{\"1616\":1}}],[\"日期型\",{\"1\":{\"1092\":1}}],[\"日期对象\",{\"1\":{\"805\":1}}],[\"日期\",{\"0\":{\"787\":1}}],[\"日\",{\"1\":{\"391\":1}}],[\"月末\",{\"1\":{\"1886\":1}}],[\"月\",{\"1\":{\"391\":1,\"1577\":2}}],[\"年末\",{\"1\":{\"1886\":1}}],[\"年\",{\"1\":{\"391\":1,\"467\":1,\"1577\":2}}],[\"编制资源和费用计划\",{\"1\":{\"1956\":1}}],[\"编辑器的升级版\",{\"1\":{\"1054\":1}}],[\"编辑器\",{\"0\":{\"1054\":1},\"1\":{\"986\":1,\"1056\":2,\"1058\":3}}],[\"编译和链接过程中的错误\",{\"1\":{\"2794\":1}}],[\"编译率高\",{\"1\":{\"2179\":1}}],[\"编译优化\",{\"1\":{\"2177\":1}}],[\"编译\",{\"0\":{\"1451\":1},\"1\":{\"1134\":1},\"2\":{\"1456\":1}}],[\"编译安装\",{\"0\":{\"1134\":1}}],[\"编译阶段\",{\"1\":{\"895\":1}}],[\"编译时处理\",{\"1\":{\"895\":1}}],[\"编译器\",{\"1\":{\"1452\":1}}],[\"编译器并没有给出报错信息\",{\"1\":{\"1370\":1}}],[\"编译器会提示以下错误\",{\"1\":{\"1366\":1}}],[\"编译器会输出以下错误信息\",{\"1\":{\"1366\":1}}],[\"编译器会为引擎生成运行时所需要的代码\",{\"1\":{\"895\":1}}],[\"编译器会找遍当前作用域\",{\"1\":{\"895\":1}}],[\"编译器自动完成的\",{\"1\":{\"774\":1}}],[\"编译器完成的自动类型转换\",{\"1\":{\"772\":1}}],[\"编程中\",{\"1\":{\"555\":1}}],[\"编码与排错工具\",{\"1\":{\"1962\":1}}],[\"编码过程中\",{\"1\":{\"898\":1}}],[\"编码实践\",{\"1\":{\"424\":1}}],[\"编码格式的图片\",{\"1\":{\"414\":1}}],[\"编码\",{\"1\":{\"414\":1}}],[\"编码普遍应用于需要通过被设计为处理文本数据的媒介上储存和传输二进制数据而需要编码该二进制数据的场景\",{\"1\":{\"414\":1}}],[\"编码的\",{\"1\":{\"388\":1,\"395\":1}}],[\"编写的小程序\",{\"1\":{\"2741\":1}}],[\"编写一个同名不同后缀的\",{\"1\":{\"1357\":1}}],[\"编写一个\",{\"1\":{\"1357\":1}}],[\"编写执行\",{\"0\":{\"1079\":1}}],[\"编写适应不同分辨率设备的的\",{\"1\":{\"204\":1}}],[\"编写代码时要格外注意\",{\"1\":{\"774\":1}}],[\"编写代码\",{\"0\":{\"191\":1}}],[\"超大规模\",{\"1\":{\"2047\":1}}],[\"超文本检索法\",{\"1\":{\"2028\":1}}],[\"超级管理员\",{\"1\":{\"1753\":2,\"1754\":1}}],[\"超级用户是\",{\"1\":{\"915\":1}}],[\"超级用户的家目录\",{\"1\":{\"913\":1}}],[\"超过\",{\"1\":{\"1660\":1}}],[\"超过多长时间就不做了\",{\"1\":{\"574\":1}}],[\"超过最大值换行\",{\"1\":{\"20\":1,\"63\":1}}],[\"超时会被抛弃\",{\"1\":{\"1729\":1}}],[\"超时\",{\"1\":{\"379\":1,\"1153\":2}}],[\"阶段界限不明\",{\"1\":{\"1859\":1}}],[\"阶段执行\",{\"1\":{\"382\":1}}],[\"阶段执行回调\",{\"1\":{\"379\":3}}],[\"阶段没有任务\",{\"1\":{\"382\":1}}],[\"阶段会停止并且进入到\",{\"1\":{\"379\":1}}],[\"阶段控制\",{\"1\":{\"379\":1}}],[\"阶段\",{\"1\":{\"379\":6,\"382\":1,\"2178\":2}}],[\"才可以绘制正常\",{\"1\":{\"2741\":1}}],[\"才可以算得上执行了一次\",{\"1\":{\"379\":1}}],[\"才重新调用这个函数\",{\"1\":{\"1265\":1}}],[\"才考虑使用\",{\"1\":{\"1203\":1}}],[\"才将文件权限设置可执行\",{\"1\":{\"1039\":1}}],[\"才显示其更改动作\",{\"1\":{\"1038\":1}}],[\"才执行移动操作\",{\"1\":{\"1001\":1}}],[\"才返回\",{\"1\":{\"715\":1,\"876\":1}}],[\"才会去收集依赖\",{\"1\":{\"1563\":1}}],[\"才会出发依赖收集\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"才会更新为新的\",{\"1\":{\"1283\":1}}],[\"才会重新计算\",{\"1\":{\"1267\":1}}],[\"才会重新计算这个值\",{\"1\":{\"1264\":1}}],[\"才会把\",{\"1\":{\"1234\":1}}],[\"才会执行\",{\"1\":{\"1086\":2}}],[\"才会执行setdata方法\",{\"1\":{\"624\":1}}],[\"才会将这个文件与空白的文件做比较\",{\"1\":{\"1009\":1}}],[\"才会判断是否到了页面底部\",{\"1\":{\"829\":1}}],[\"才会返回true\",{\"1\":{\"627\":2}}],[\"才会进入下个阶段\",{\"1\":{\"379\":1}}],[\"才能被正确的识别\",{\"1\":{\"1357\":1}}],[\"才能实现最终的跨域获取数据\",{\"1\":{\"859\":1}}],[\"才能对数据对象进行垃圾收集\",{\"1\":{\"430\":1}}],[\"才能执行下一个任务\",{\"1\":{\"372\":1}}],[\"才能关住浮动\",{\"1\":{\"181\":1}}],[\"遇到开始标签\",{\"1\":{\"1550\":1}}],[\"遇到预期为布尔值的地方\",{\"1\":{\"666\":1}}],[\"遇到错误时\",{\"1\":{\"580\":1}}],[\"遇到第三个console\",{\"1\":{\"376\":1}}],[\"遇到第一个console\",{\"1\":{\"376\":1}}],[\"遇到promise\",{\"1\":{\"376\":1}}],[\"遇到new\",{\"1\":{\"376\":1}}],[\"遇到settimeout\",{\"1\":{\"376\":1}}],[\"遇到这种情形\",{\"1\":{\"151\":2}}],[\"微型化\",{\"1\":{\"2189\":1}}],[\"微处理器一般以某一种微处理内核为核心\",{\"1\":{\"2179\":1}}],[\"微处理器\",{\"1\":{\"2179\":1}}],[\"微控制器\",{\"1\":{\"2178\":1,\"2179\":1}}],[\"微服务与数据层之间的纵向约束\",{\"1\":{\"2056\":1}}],[\"微服务与微服务之间的横向关系\",{\"1\":{\"2056\":1}}],[\"微服务与soa的区别\",{\"0\":{\"2044\":1}}],[\"微服务个体约束\",{\"1\":{\"2056\":1}}],[\"微服务设计约束\",{\"0\":{\"2056\":1}}],[\"微服务接口更通用化\",{\"1\":{\"2044\":1}}],[\"微服务比soa更精细\",{\"1\":{\"2044\":1}}],[\"微服务\",{\"0\":{\"2041\":1},\"1\":{\"2052\":1,\"2054\":1}}],[\"微信登录\",{\"1\":{\"1755\":2}}],[\"微信小程序\",{\"1\":{\"124\":1}}],[\"微博登录\",{\"1\":{\"1755\":2}}],[\"微博\",{\"1\":{\"1755\":1}}],[\"微任务都早于宏任务执行\",{\"1\":{\"376\":1}}],[\"微任务的执行时长会影响当前宏任务的时长\",{\"1\":{\"376\":1}}],[\"微任务和宏任务是绑定的\",{\"1\":{\"376\":1}}],[\"微任务\",{\"1\":{\"376\":2}}],[\"宏任务队列和微任务队列\",{\"1\":{\"380\":1}}],[\"宏任务\",{\"1\":{\"376\":2,\"383\":1}}],[\"宏任务和微任务的本质区别如下\",{\"1\":{\"376\":1}}],[\"宏任务和微任务\",{\"0\":{\"376\":1,\"380\":1}}],[\"队列指针\",{\"1\":{\"2150\":1}}],[\"队列在队尾添加元素\",{\"1\":{\"694\":1}}],[\"队列是一种先进先出的数据结构\",{\"1\":{\"694\":1}}],[\"队列方法\",{\"0\":{\"694\":1}}],[\"队列中的任务\",{\"1\":{\"383\":1}}],[\"队列和其它队列\",{\"1\":{\"383\":1}}],[\"队列和宏任务\",{\"1\":{\"376\":1}}],[\"队列为空\",{\"1\":{\"379\":1}}],[\"队列为空时\",{\"1\":{\"379\":1}}],[\"队列不为空\",{\"1\":{\"379\":1}}],[\"队列\",{\"1\":{\"376\":1,\"383\":1,\"1541\":1}}],[\"去信任\",{\"1\":{\"2132\":1}}],[\"去中心化\",{\"0\":{\"2133\":1},\"1\":{\"2132\":1}}],[\"去掉空格\",{\"1\":{\"1550\":1}}],[\"去更新节点\",{\"1\":{\"1476\":1}}],[\"去更新状态\",{\"1\":{\"1222\":1}}],[\"去实现\",{\"1\":{\"1338\":1}}],[\"去访问后端\",{\"1\":{\"864\":1}}],[\"去发送请求\",{\"1\":{\"859\":1}}],[\"去除指定用户类型的权限\",{\"1\":{\"1039\":1}}],[\"去除无序数组中的重复元素并且返回新的无重复数组\",{\"1\":{\"741\":1}}],[\"去除注释\",{\"1\":{\"502\":1}}],[\"去判断一个值的类型\",{\"1\":{\"681\":1}}],[\"去执行微任务队列中所有任务\",{\"1\":{\"376\":1}}],[\"去取出异步任务的回调来执行\",{\"1\":{\"375\":1}}],[\"去重并保存连接记录\",{\"1\":{\"128\":1}}],[\"遵守以下的语法规则\",{\"1\":{\"1677\":1}}],[\"遵守css显示属性的默认值\",{\"1\":{\"20\":1,\"63\":1}}],[\"遵循的协议等等\",{\"1\":{\"1689\":1}}],[\"遵循依赖前置原则\",{\"1\":{\"464\":1}}],[\"遵循依赖就近原则\",{\"1\":{\"464\":1}}],[\"遵循先进先出的原则\",{\"1\":{\"375\":1}}],[\"遵循先进后出的原则\",{\"1\":{\"374\":1}}],[\"任播的目的站是一组计算机\",{\"1\":{\"2214\":1}}],[\"任播地址\",{\"1\":{\"2214\":1}}],[\"任意节点的权利和义务都是均等的\",{\"1\":{\"2132\":1}}],[\"任意嵌套层级的子组件可以去接受\",{\"1\":{\"1513\":1}}],[\"任意属性的值允许是\",{\"1\":{\"1340\":1}}],[\"任意属性\",{\"0\":{\"1340\":1}}],[\"任一个首部\",{\"1\":{\"817\":1}}],[\"任务切换时间\",{\"1\":{\"2189\":1}}],[\"任务调度\",{\"1\":{\"2187\":1}}],[\"任务\",{\"1\":{\"2077\":1}}],[\"任务分解也不能过细\",{\"1\":{\"1954\":1}}],[\"任务的执行顺序与代码的编写顺序无关\",{\"1\":{\"558\":1}}],[\"任务队列执行顺序如下\",{\"1\":{\"376\":1}}],[\"任务队列其实不止一种\",{\"1\":{\"376\":1}}],[\"任务队列使用到的是数据结构中的队列结构\",{\"1\":{\"375\":1}}],[\"任务队列\",{\"0\":{\"375\":1},\"1\":{\"375\":1}}],[\"任务队列类似于缓冲区\",{\"1\":{\"372\":1}}],[\"任务下一步会被移到执行栈然后主线程执行调用栈的任务\",{\"1\":{\"372\":1}}],[\"任何人为的干预不起作用\",{\"1\":{\"2132\":1}}],[\"任何类型的值都可以赋值给它\",{\"1\":{\"1418\":1}}],[\"任何类型的值可以赋值给\",{\"1\":{\"1418\":1}}],[\"任何类型都可以被归为\",{\"1\":{\"1417\":1}}],[\"任何由\",{\"1\":{\"1269\":1}}],[\"任何\",{\"1\":{\"895\":1}}],[\"任何值和nan做运算都得nan\",{\"1\":{\"667\":1}}],[\"任何未导出的代码都是模块私有的\",{\"1\":{\"469\":1}}],[\"任何不在函数内部的都是全局执行上下文\",{\"1\":{\"350\":1}}],[\"任何初始化此脚本的选项卡\",{\"1\":{\"343\":1}}],[\"任何使用管理器的加载器都会调用此方法\",{\"1\":{\"2478\":1,\"2479\":1,\"2480\":1}}],[\"任何使用\",{\"1\":{\"343\":1}}],[\"任何会改变元素几何信息\",{\"1\":{\"224\":1}}],[\"主属性与非主属性\",{\"1\":{\"2240\":1,\"2245\":1}}],[\"主键\",{\"1\":{\"2240\":1}}],[\"主键是独一无二的\",{\"1\":{\"1670\":1}}],[\"主码\",{\"1\":{\"2240\":1}}],[\"主机通过两个阶段分别获得链路本地地址和可聚合全球单播地址\",{\"1\":{\"2214\":1}}],[\"主机向本地域名服务器的查询采用递归查询\",{\"1\":{\"2211\":1}}],[\"主机名\",{\"1\":{\"1102\":1,\"1118\":1}}],[\"主动攻击的类别主要有\",{\"1\":{\"2115\":1}}],[\"主动攻击\",{\"1\":{\"2115\":1}}],[\"主动关闭tcp连接\",{\"1\":{\"1728\":1}}],[\"主体能够对一个客体进行写的前提是主体未对任何属于其他公司数据集进行过访问\",{\"1\":{\"2119\":1}}],[\"主体\",{\"1\":{\"2106\":1}}],[\"主库更新数据完成前\",{\"1\":{\"2080\":1}}],[\"主库做写操作\",{\"1\":{\"2080\":1}}],[\"主从复制步骤\",{\"1\":{\"2080\":1}}],[\"主从数据库结构特点\",{\"1\":{\"2080\":1}}],[\"主服务器故障\",{\"1\":{\"2005\":1}}],[\"主程序员\",{\"1\":{\"1904\":1}}],[\"主题数据库\",{\"1\":{\"1876\":1}}],[\"主题数据库方法\",{\"1\":{\"1875\":1}}],[\"主版本号\",{\"1\":{\"1618\":1}}],[\"主入口分析\",{\"0\":{\"1498\":1}}],[\"主应用组件\",{\"1\":{\"1312\":1}}],[\"主配置文件\",{\"1\":{\"1146\":1}}],[\"主线程也可以自由执行而不会被挂起\",{\"1\":{\"1651\":2}}],[\"主线程还是需要让出来的\",{\"1\":{\"1649\":1}}],[\"主线程会继续执行后面的同步任务\",{\"1\":{\"376\":1}}],[\"主线程\",{\"1\":{\"371\":1}}],[\"主要的实现方法是利用两个或多个网络接口和路径来同时传递流量\",{\"1\":{\"2212\":1}}],[\"主要的实现思路就是\",{\"1\":{\"748\":1}}],[\"主要表现在以下方面\",{\"1\":{\"2177\":1}}],[\"主要取决于以下因素\",{\"1\":{\"2016\":1}}],[\"主要针对\",{\"1\":{\"2011\":1}}],[\"主要通过系统的质量审计和过程分析来保证项目的质量\",{\"1\":{\"1959\":1}}],[\"主要采用了一种复制式的方法即\",{\"1\":{\"1648\":1}}],[\"主要在本地存储库上工作\",{\"1\":{\"1581\":1}}],[\"主要在原型定义了\",{\"1\":{\"1527\":1}}],[\"主要功能就是执行核心渲染页面的方法\",{\"1\":{\"1558\":1}}],[\"主要功能是将商品添加到购物车\",{\"1\":{\"455\":1}}],[\"主要包含处理文本核心\",{\"1\":{\"1551\":1}}],[\"主要是针对用户端\",{\"1\":{\"2220\":1}}],[\"主要是高速数据交换\",{\"1\":{\"2220\":1}}],[\"主要是监听dom变化\",{\"1\":{\"1542\":1}}],[\"主要是对象和数组\",{\"1\":{\"247\":1}}],[\"主要使用\",{\"1\":{\"1526\":1,\"1534\":1,\"1541\":1}}],[\"主要定义\",{\"1\":{\"1511\":1}}],[\"主要原因有两个\",{\"1\":{\"1279\":1}}],[\"主要关注点是单个值的延迟更新\",{\"1\":{\"1233\":1}}],[\"主要关注点是状态的过渡\",{\"1\":{\"1233\":1}}],[\"主要组的编号及名称\",{\"1\":{\"941\":1}}],[\"主要输出进行信息\",{\"1\":{\"913\":1}}],[\"主要用来创建同一类对象\",{\"1\":{\"1753\":1}}],[\"主要用来声明变量\",{\"1\":{\"246\":1}}],[\"主要用于集成测试\",{\"1\":{\"1939\":1}}],[\"主要用于单元测试阶段\",{\"1\":{\"1939\":1}}],[\"主要用于给组件添加状态变量\",{\"1\":{\"1294\":1}}],[\"主要用于循环对象属性\",{\"1\":{\"881\":1}}],[\"主要用于对数组或者对象的属性进行循环操作\",{\"1\":{\"718\":1}}],[\"主要发生在字符串的加法运算时\",{\"1\":{\"668\":1,\"669\":1}}],[\"主要有以下情况中的对象是类数组\",{\"1\":{\"721\":1}}],[\"主要有以下两种情况\",{\"1\":{\"504\":1}}],[\"主要有三种使用形式\",{\"1\":{\"703\":1}}],[\"主要有两种方法来获取\",{\"1\":{\"390\":1}}],[\"主要运行在服务端\",{\"1\":{\"448\":1}}],[\"主要区别在于调用时机的不同\",{\"1\":{\"382\":1}}],[\"主要执行系统级别的回调函数\",{\"1\":{\"379\":1}}],[\"主要分为以下三个步骤\",{\"1\":{\"217\":1}}],[\"渲染一般是在canvas上完成的\",{\"1\":{\"2836\":1}}],[\"渲染一个场景\",{\"1\":{\"2836\":1}}],[\"渲染器\",{\"0\":{\"2896\":1},\"2\":{\"2848\":1}}],[\"渲染器内部使用\",{\"1\":{\"2803\":1}}],[\"渲染器的构造函数会自动创建\",{\"1\":{\"2797\":1}}],[\"渲染器在其上绘制输出\",{\"1\":{\"2797\":1}}],[\"渲染器当前使用的着色器的精度\",{\"1\":{\"2795\":1}}],[\"渲染的材质\",{\"1\":{\"2741\":1}}],[\"渲染的过程判断仅在\",{\"1\":{\"1286\":1}}],[\"渲染此材质是否对深度缓冲区有任何影响\",{\"1\":{\"2653\":1}}],[\"渲染阻塞\",{\"1\":{\"1707\":1}}],[\"渲染树会忽略那些不需要渲染的节点\",{\"1\":{\"1707\":1}}],[\"渲染树\",{\"0\":{\"1707\":1}}],[\"渲染更新原理\",{\"0\":{\"1556\":1}}],[\"渲染watcher都会执行一次\",{\"1\":{\"1539\":1,\"1568\":1}}],[\"渲染原理\",{\"2\":{\"1531\":1,\"1546\":1,\"1567\":1}}],[\"渲染页面\",{\"0\":{\"1700\":1},\"1\":{\"1493\":1,\"1571\":1,\"1676\":1}}],[\"渲染完成之后\",{\"1\":{\"1486\":1}}],[\"渲染优先级会被降低\",{\"1\":{\"1235\":1}}],[\"渲染\",{\"1\":{\"370\":1}}],[\"像通常一样加载\",{\"1\":{\"2462\":1}}],[\"像四层交换机一般就采用了这种技术\",{\"1\":{\"2077\":1}}],[\"像\",{\"1\":{\"590\":1,\"605\":1}}],[\"像import关键字引入公共模块\",{\"1\":{\"511\":1}}],[\"像下面这种情况\",{\"1\":{\"362\":1}}],[\"像素\",{\"1\":{\"202\":2,\"2742\":1}}],[\"像素变少\",{\"1\":{\"201\":1}}],[\"像素变多\",{\"1\":{\"201\":1}}],[\"ƒ\",{\"1\":{\"362\":1,\"723\":1}}],[\"他是一个虚拟表\",{\"1\":{\"2226\":1}}],[\"他是一个产品\",{\"1\":{\"2179\":1}}],[\"他是方法\",{\"1\":{\"495\":1}}],[\"他会在自身保存一些数据\",{\"1\":{\"2078\":1}}],[\"他的根本目的在于提高企业竞争能力\",{\"1\":{\"1872\":1}}],[\"他在算法的实现细节上也会结合一些其他的算法\",{\"1\":{\"1641\":1}}],[\"他可以appendchild功能\",{\"1\":{\"1478\":1}}],[\"他可以用来定义单行字符串\",{\"1\":{\"255\":1}}],[\"他不是只读的\",{\"1\":{\"680\":1}}],[\"他必须从父类继承\",{\"1\":{\"495\":1}}],[\"他们对数据的操作在全局关系上进行\",{\"1\":{\"2232\":1}}],[\"他们都属于tcp\",{\"1\":{\"1711\":1}}],[\"他们可以很快被清理\",{\"1\":{\"1641\":1}}],[\"他们可能会花费时间思考为什么这里需要优化\",{\"1\":{\"1269\":1}}],[\"他们之间存在跨域问题\",{\"1\":{\"861\":1}}],[\"他们之间的本质区别是什么呢\",{\"1\":{\"376\":1}}],[\"他们也不符合同源策略\",{\"1\":{\"855\":1}}],[\"他们操作时会遵循以下规则\",{\"1\":{\"628\":1}}],[\"他们将被连接为一个字符串的一个或多个字符串对象\",{\"1\":{\"525\":1}}],[\"他们的都有三个参数\",{\"1\":{\"709\":1}}],[\"他们的所属类是\",{\"1\":{\"657\":1}}],[\"他们的\",{\"1\":{\"361\":1}}],[\"爱玩球\",{\"1\":{\"359\":1}}],[\"手机信息为主\",{\"1\":{\"2115\":1}}],[\"手机屏幕小的时候页面的内容也会缩小进行自适应\",{\"1\":{\"200\":1}}],[\"手段是现金社会生产工具\",{\"1\":{\"1871\":1}}],[\"手动确定每个对象的渲染顺序\",{\"1\":{\"2806\":1}}],[\"手动维护大龄微服务是不现实的\",{\"1\":{\"2055\":1}}],[\"手动获取焦点或测量元素尺寸\",{\"1\":{\"1281\":1}}],[\"手动更改浏览器的\",{\"1\":{\"1258\":1}}],[\"手动修改\",{\"1\":{\"1243\":1}}],[\"手动释放内存\",{\"1\":{\"654\":1}}],[\"手写实现深拷贝函数\",{\"0\":{\"765\":1}}],[\"手写实现浅拷贝\",{\"0\":{\"760\":1}}],[\"手写bind\",{\"0\":{\"358\":1}}],[\"手写apply\",{\"0\":{\"357\":1}}],[\"手写call\",{\"0\":{\"356\":1}}],[\"吗\",{\"1\":{\"355\":1,\"895\":1}}],[\"呢\",{\"1\":{\"354\":1,\"903\":3,\"1279\":1,\"1649\":1,\"1650\":1}}],[\"答案是肯定的\",{\"1\":{\"895\":1}}],[\"答案是\",{\"1\":{\"354\":1}}],[\"非规范化的关系模式\",{\"1\":{\"2244\":1}}],[\"非对称\",{\"1\":{\"2212\":1}}],[\"非法运用\",{\"1\":{\"2131\":1}}],[\"非授权访问\",{\"1\":{\"2102\":1}}],[\"非风险点是指不会带来隐患\",{\"1\":{\"2010\":1}}],[\"非基线配置项\",{\"1\":{\"1961\":1}}],[\"非常适合于事件驱动的数据计算任务\",{\"1\":{\"2054\":1}}],[\"非常简单\",{\"1\":{\"1646\":1}}],[\"非常相似\",{\"1\":{\"658\":1}}],[\"非空断言\",{\"0\":{\"1447\":1}}],[\"非空内容\",{\"1\":{\"151\":1}}],[\"非原始类型都可以赋给\",{\"1\":{\"1431\":1}}],[\"非\",{\"1\":{\"1105\":1}}],[\"非0数字为真\",{\"1\":{\"889\":1}}],[\"非严格模式下\",{\"1\":{\"353\":1}}],[\"显式类型转换\",{\"1\":{\"772\":1}}],[\"显式删除\",{\"1\":{\"432\":1}}],[\"显式绑定可以使用\",{\"1\":{\"355\":1}}],[\"显式绑定是指需要引用一个对象时进行强制绑定调用\",{\"1\":{\"355\":1}}],[\"显式绑定\",{\"1\":{\"352\":1}}],[\"显而易见\",{\"1\":{\"431\":1}}],[\"显示分辨率达到4k\",{\"1\":{\"2004\":1}}],[\"显示或隐藏全局加载指示器\",{\"1\":{\"1312\":1}}],[\"显示内核版本\",{\"1\":{\"1125\":1}}],[\"显示域名\",{\"1\":{\"1125\":1}}],[\"显示主机名\",{\"1\":{\"1125\":1}}],[\"显示硬件体系结构\",{\"1\":{\"1125\":1}}],[\"显示登陆的终端号\",{\"1\":{\"1125\":1}}],[\"显示登录的用户名\",{\"1\":{\"941\":1}}],[\"显示操作系统名称\",{\"1\":{\"1125\":1}}],[\"显示当前登陆用户的序列号\",{\"1\":{\"1125\":1}}],[\"显示当前登录系统的用户\",{\"1\":{\"931\":2}}],[\"显示当前系统时间\",{\"1\":{\"1125\":1}}],[\"显示当前系统信息\",{\"1\":{\"1125\":1}}],[\"显示权限变更的详细资料\",{\"1\":{\"1038\":1}}],[\"显示辅助说明\",{\"1\":{\"1035\":1,\"1038\":1}}],[\"显示更改的部分的信息\",{\"1\":{\"1035\":1}}],[\"显示详细输出\",{\"1\":{\"1025\":4}}],[\"显示详细的处理过程\",{\"1\":{\"1003\":1}}],[\"显示详细的处理信息\",{\"1\":{\"992\":1,\"1035\":1}}],[\"显示详细的复制过程\",{\"1\":{\"998\":1}}],[\"显示指定变量的被声明的类型\",{\"1\":{\"1109\":1}}],[\"显示指定用户信息\",{\"1\":{\"941\":1}}],[\"显示指令执行过程\",{\"1\":{\"1021\":1,\"1032\":1}}],[\"显示指令执行过程或显示版本信息\",{\"1\":{\"1018\":1}}],[\"显示版本\",{\"1\":{\"1035\":1,\"1038\":1}}],[\"显示版本与版权信息\",{\"1\":{\"1021\":1}}],[\"显示版本信息\",{\"1\":{\"930\":1,\"970\":1,\"1003\":1,\"1009\":1,\"1012\":1,\"1021\":1,\"1032\":1}}],[\"显示版权信息\",{\"1\":{\"1018\":1}}],[\"显示匹配行的行号\",{\"1\":{\"1015\":1}}],[\"显示差异所在的函数名称\",{\"1\":{\"1009\":1}}],[\"显示全部内文\",{\"1\":{\"1009\":1}}],[\"显示帮助\",{\"1\":{\"1009\":1}}],[\"显示帮助信息\",{\"1\":{\"1003\":1}}],[\"显示帮助界面\",{\"1\":{\"989\":1}}],[\"显示一直继续\",{\"1\":{\"993\":1}}],[\"显示一些非打印字符\",{\"1\":{\"983\":1}}],[\"显示的字节数\",{\"1\":{\"992\":1}}],[\"显示的资料包含了使用者\",{\"1\":{\"929\":1}}],[\"显示less的帮助文档\",{\"1\":{\"989\":1}}],[\"显示连续空行为一行\",{\"1\":{\"989\":1}}],[\"显示每行的行号\",{\"1\":{\"989\":1}}],[\"显示类似\",{\"1\":{\"989\":1}}],[\"显示类型转换\",{\"0\":{\"773\":1}}],[\"显示多个文件的内容\",{\"1\":{\"984\":1}}],[\"显示文件notes\",{\"1\":{\"993\":2}}],[\"显示文件的尾部\",{\"1\":{\"992\":1}}],[\"显示文件filename的最后\",{\"1\":{\"984\":1}}],[\"显示文件filename的内容\",{\"1\":{\"984\":5}}],[\"显示文件内容\",{\"1\":{\"983\":1}}],[\"显示行号\",{\"1\":{\"983\":2,\"1068\":1}}],[\"显示所有文件及目录\",{\"1\":{\"972\":1}}],[\"显示zhangsan用户所在的所有组\",{\"1\":{\"941\":1}}],[\"显示用户的信息状态栏\",{\"1\":{\"930\":1}}],[\"显示闲置时间\",{\"1\":{\"930\":1}}],[\"显示各栏位的标题信息列\",{\"1\":{\"930\":1}}],[\"显示转换\",{\"1\":{\"805\":1}}],[\"显示绑定\",{\"0\":{\"355\":1},\"1\":{\"360\":1}}],[\"显示网络状态\",{\"1\":{\"339\":1}}],[\"多视图的全高设置\",{\"1\":{\"2542\":1,\"2587\":1}}],[\"多视图的全宽设置\",{\"1\":{\"2542\":1,\"2587\":1}}],[\"多面缓冲几何体\",{\"0\":{\"2394\":1}}],[\"多道程序共享内存\",{\"1\":{\"2161\":1}}],[\"多层相互协同工作\",{\"1\":{\"1984\":1}}],[\"多扇入\",{\"1\":{\"1930\":1}}],[\"多次发送之前间隔⼀个等待时间\",{\"1\":{\"1730\":1}}],[\"多对一的方式\",{\"1\":{\"1712\":1}}],[\"多对多关系\",{\"1\":{\"1752\":1}}],[\"多对多\",{\"1\":{\"1712\":1}}],[\"多播地址\",{\"1\":{\"2214\":1}}],[\"多播\",{\"1\":{\"1712\":2,\"1715\":1}}],[\"多了的话内存也会受不了\",{\"1\":{\"1644\":1}}],[\"多命令执行符\",{\"1\":{\"1086\":1}}],[\"多命令顺序执行\",{\"0\":{\"1086\":1}}],[\"多个构件合并形成新构件\",{\"1\":{\"1900\":1}}],[\"多个算法只在行为上稍有不同的场景\",{\"1\":{\"1785\":1}}],[\"多个命令执行\",{\"1\":{\"1086\":1}}],[\"多个文件之间使用空格分开\",{\"1\":{\"1012\":1}}],[\"多个路径之间用空格分隔\",{\"1\":{\"1006\":1}}],[\"多个实例的引用类型属性指向相同的内存\",{\"1\":{\"490\":1}}],[\"多数的\",{\"1\":{\"601\":1}}],[\"多数情况下\",{\"1\":{\"352\":1}}],[\"多构造一次就多进行了一次性能开销\",{\"1\":{\"488\":1}}],[\"多线程的浏览器\",{\"0\":{\"371\":1}}],[\"多行溢出显示省略号\",{\"0\":{\"134\":1}}],[\"多行时尽可能打印尾随逗号\",{\"1\":{\"20\":1,\"63\":1}}],[\"执⾏上下⽂栈\",{\"0\":{\"351\":1}}],[\"执行全局应用\",{\"1\":{\"2229\":1}}],[\"执行全局的\",{\"1\":{\"383\":1}}],[\"执行慢开始算法\",{\"1\":{\"1720\":1}}],[\"执行任务程序时内存中标记好的对象引用关系被修改了\",{\"1\":{\"1650\":1}}],[\"执行第一种情况中的命令即可\",{\"1\":{\"1614\":1}}],[\"执行此语句\",{\"1\":{\"1613\":1}}],[\"执行以下命令即可\",{\"1\":{\"1583\":1,\"1614\":1,\"1623\":1}}],[\"执行以及其它用户\",{\"1\":{\"1040\":1}}],[\"执行以及暂停\",{\"1\":{\"588\":1}}],[\"执行真正的更新操作\",{\"1\":{\"1541\":1}}],[\"执行了get方法\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"执行了两次\",{\"1\":{\"488\":1}}],[\"执行vm\",{\"1\":{\"1486\":1,\"1558\":1}}],[\"执行void运算符\",{\"1\":{\"646\":1}}],[\"执行该函数后\",{\"1\":{\"1464\":1}}],[\"执行render函数\",{\"1\":{\"1197\":2,\"1200\":1}}],[\"执行setstate后立马打印message\",{\"1\":{\"1196\":1}}],[\"执行不正确\",{\"1\":{\"1086\":2}}],[\"执行权限\",{\"1\":{\"1039\":1}}],[\"执行pwd指令可立刻得知您目前所在的工作目录的绝对路径名称\",{\"1\":{\"969\":1}}],[\"执行阶段不确定\",{\"1\":{\"1707\":1}}],[\"执行阶段\",{\"1\":{\"895\":1,\"2234\":1}}],[\"执行与上面相同的操作\",{\"1\":{\"806\":1}}],[\"执行显式类型转换的最简单方法是使用\",{\"1\":{\"773\":1}}],[\"执行数学运算没有成功\",{\"1\":{\"656\":1}}],[\"执行数组中每个值的函数\",{\"1\":{\"284\":1,\"705\":1}}],[\"执行进度\",{\"1\":{\"588\":1}}],[\"执行回调函数\",{\"1\":{\"580\":2}}],[\"执行结果都取决于类型转化的结果\",{\"1\":{\"616\":1}}],[\"执行结果如下\",{\"1\":{\"578\":1,\"588\":1}}],[\"执行结果是\",{\"1\":{\"364\":1,\"819\":2}}],[\"执行每个任务都有两种可能的结果\",{\"1\":{\"569\":1}}],[\"执行每个微任务的时间是\",{\"1\":{\"376\":1}}],[\"执行器里的逻辑会立刻执行\",{\"1\":{\"565\":1}}],[\"执行一个全局替换\",{\"1\":{\"535\":1}}],[\"执行代码\",{\"0\":{\"510\":1}}],[\"执行这段代码\",{\"1\":{\"507\":1}}],[\"执行这段代码需要使用变量\",{\"1\":{\"505\":1}}],[\"执行宏任务的方式与浏览器不同\",{\"1\":{\"383\":1}}],[\"执行定时器队列回调\",{\"1\":{\"382\":1}}],[\"执行关闭请求的回调函数\",{\"1\":{\"379\":1}}],[\"执行timer\",{\"1\":{\"379\":1}}],[\"执行并出栈\",{\"1\":{\"376\":3}}],[\"执行完成之后\",{\"1\":{\"1646\":1}}],[\"执行完队列的事件之后再清空队列\",{\"1\":{\"1541\":1}}],[\"执行完之后\",{\"1\":{\"1637\":1}}],[\"执行完之后清空队列\",{\"1\":{\"1541\":1}}],[\"执行完之后执行\",{\"1\":{\"383\":1}}],[\"执行完之后不会失败\",{\"1\":{\"323\":1,\"576\":1}}],[\"执行完微任务队列中的任务\",{\"1\":{\"376\":1}}],[\"执行完毕后\",{\"1\":{\"376\":2}}],[\"执行栈使用到的是数据结构中的栈结构\",{\"1\":{\"374\":1}}],[\"执行栈\",{\"0\":{\"374\":1},\"1\":{\"374\":1}}],[\"执行栈与任务队列\",{\"0\":{\"373\":1}}],[\"执行后\",{\"1\":{\"360\":1}}],[\"执行时机\",{\"1\":{\"1274\":1}}],[\"执行时机是在\",{\"1\":{\"1255\":4}}],[\"执行时\",{\"1\":{\"354\":1}}],[\"执行在\",{\"1\":{\"350\":1}}],[\"执行上下文是评估和执行\",{\"1\":{\"350\":1}}],[\"执行上下文概念\",{\"0\":{\"350\":1}}],[\"执行上下文\",{\"0\":{\"349\":1}}],[\"执行振动的方法是\",{\"1\":{\"342\":1}}],[\"执行对应代码逻辑\",{\"1\":{\"269\":1}}],[\"执行的重新渲染是可中断的\",{\"1\":{\"1237\":1}}],[\"执行的代码块\",{\"1\":{\"718\":1,\"719\":1,\"881\":1}}],[\"执行的结果是\",{\"1\":{\"596\":1}}],[\"执行的时候\",{\"1\":{\"370\":1}}],[\"执行的\",{\"1\":{\"231\":1}}],[\"执行\",{\"1\":{\"33\":1,\"76\":1,\"360\":1,\"379\":3,\"451\":1,\"478\":1,\"580\":1,\"1040\":5,\"1204\":1,\"1707\":1}}],[\"执行信息校验\",{\"0\":{\"31\":1,\"74\":1}}],[\"全画幅\",{\"1\":{\"2586\":1}}],[\"全码\",{\"1\":{\"2240\":1}}],[\"全状态自动配置\",{\"1\":{\"2214\":1}}],[\"全球单播地址和回送地址\",{\"1\":{\"2214\":1}}],[\"全民记账\",{\"1\":{\"2133\":1}}],[\"全新软件产品线的开发\",{\"1\":{\"2016\":1}}],[\"全新软件产品线的演化\",{\"1\":{\"2016\":1}}],[\"全停顿\",{\"1\":{\"1649\":2,\"1650\":1}}],[\"全标记为\",{\"1\":{\"1646\":1}}],[\"全部解析完毕\",{\"1\":{\"1550\":1}}],[\"全部处理完成后\",{\"1\":{\"323\":1,\"576\":1}}],[\"全屏导航\",{\"1\":{\"989\":1}}],[\"全为真\",{\"1\":{\"889\":1}}],[\"全为假\",{\"1\":{\"889\":1}}],[\"全称是\",{\"1\":{\"860\":1}}],[\"全称为\",{\"1\":{\"387\":1,\"457\":1,\"464\":1}}],[\"全等\",{\"1\":{\"627\":1}}],[\"全程为\",{\"1\":{\"465\":1}}],[\"全局控制部分分散的ddbms\",{\"1\":{\"2231\":1}}],[\"全局控制分散ddbms\",{\"1\":{\"2231\":1}}],[\"全局控制集中ddbms\",{\"1\":{\"2231\":1}}],[\"全局数据字典\",{\"1\":{\"2230\":1}}],[\"全局的一致性\",{\"1\":{\"2229\":1}}],[\"全局视角下的微服务分布式约束\",{\"1\":{\"2056\":1}}],[\"全局常量\",{\"1\":{\"1767\":1}}],[\"全局方法\",{\"0\":{\"1767\":1},\"1\":{\"1767\":1}}],[\"全局loading\",{\"0\":{\"1766\":1}}],[\"全局访问点\",{\"1\":{\"1762\":1}}],[\"全局级别\",{\"1\":{\"1586\":1}}],[\"全局配置\",{\"0\":{\"1586\":1}}],[\"全局模块\",{\"0\":{\"1353\":1}}],[\"全局作用域的变量实际上被绑定到window\",{\"1\":{\"896\":1}}],[\"全局作用域\",{\"0\":{\"896\":1}}],[\"全局作用域中的对象在代码中的任何地方都可以访问\",{\"1\":{\"501\":1}}],[\"全局匹配\",{\"1\":{\"740\":1}}],[\"全局对象\",{\"1\":{\"467\":1}}],[\"全局对象是\",{\"1\":{\"353\":2,\"427\":1}}],[\"全局变量的生命周期会持续要页面卸载\",{\"1\":{\"1645\":1}}],[\"全局变量id\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"全局变量多会引发变量冲突问题\",{\"1\":{\"896\":1}}],[\"全局变量拥有全局作用域\",{\"1\":{\"896\":1}}],[\"全局变量是拥有全局的作用域\",{\"1\":{\"896\":1}}],[\"全局变量是挂载在\",{\"1\":{\"896\":1}}],[\"全局变量保存着\",{\"1\":{\"437\":1}}],[\"全局变量始终可以从全局对象\",{\"1\":{\"427\":1}}],[\"全局环境中\",{\"1\":{\"353\":1}}],[\"全局环境\",{\"0\":{\"353\":1}}],[\"全局执行上下文\",{\"1\":{\"350\":1}}],[\"现场可编程门阵列\",{\"1\":{\"2180\":1}}],[\"现场保护区等\",{\"1\":{\"2150\":1}}],[\"现阶段\",{\"1\":{\"2180\":1}}],[\"现代管理技术\",{\"1\":{\"1877\":1}}],[\"现代计算机中数据都是以二进制的形式存储的\",{\"1\":{\"606\":1}}],[\"现代异步剪贴板\",{\"1\":{\"344\":1}}],[\"现在通用的证书一般采用utc时间格式\",{\"1\":{\"2109\":1}}],[\"现在叫上了\",{\"1\":{\"1649\":1}}],[\"现在想恢复到新版本\",{\"1\":{\"1615\":1}}],[\"现在让我们看看当我们尝试对类型为\",{\"1\":{\"1418\":1}}],[\"现在t上所有属性都变成了可选啦\",{\"1\":{\"1372\":1}}],[\"现在这个泛型函数被定义了约束\",{\"1\":{\"1369\":1}}],[\"现在无法处理请求\",{\"1\":{\"817\":1}}],[\"现在用\",{\"1\":{\"596\":1}}],[\"现在也会引发暂时性死区的发生\",{\"1\":{\"511\":1}}],[\"现在\",{\"1\":{\"455\":1,\"1267\":1,\"1577\":1}}],[\"现在我们项目中已经完全放弃了\",{\"1\":{\"250\":1}}],[\"现在就可以用git\",{\"1\":{\"17\":1,\"60\":1}}],[\"频道\",{\"1\":{\"343\":2}}],[\"始化\",{\"1\":{\"343\":1}}],[\"始终在文件末尾插入一个新行\",{\"1\":{\"23\":1,\"66\":1}}],[\"浏览上下文指的是窗口\",{\"1\":{\"343\":1}}],[\"浏览器每隔一段时间向浏览器发送tp请求\",{\"1\":{\"1737\":1}}],[\"浏览器和服务器只需要完成一次握手\",{\"1\":{\"1735\":1}}],[\"浏览器容错进制\",{\"1\":{\"1705\":1}}],[\"浏览器需要一种方法来确定哪些样式才真正需要应用到对应元素\",{\"1\":{\"1707\":1}}],[\"浏览器需要根据文件指定编码\",{\"1\":{\"1702\":1}}],[\"浏览器需要重新计算元素的几何属性\",{\"1\":{\"223\":1}}],[\"浏览器解析是从上往下一行一行地解析的\",{\"1\":{\"1701\":1}}],[\"浏览器接收到来自服务器的响应资源后\",{\"1\":{\"1699\":1}}],[\"浏览器接受响应\",{\"0\":{\"1699\":1}}],[\"浏览器接着做其他事情\",{\"1\":{\"813\":1}}],[\"浏览器只能发送\",{\"1\":{\"1689\":1}}],[\"浏览器缓存\",{\"0\":{\"1683\":1}}],[\"浏览器还会进行一些额外的操作\",{\"1\":{\"1680\":1}}],[\"浏览器发出请求\",{\"1\":{\"1659\":1}}],[\"浏览器存储\",{\"0\":{\"1656\":1}}],[\"浏览器兼容\",{\"0\":{\"1334\":1}}],[\"浏览器就会延迟脚本执行\",{\"1\":{\"1707\":1}}],[\"浏览器就会根据响应\",{\"1\":{\"1697\":1}}],[\"浏览器就会调用回调函数\",{\"1\":{\"558\":1}}],[\"浏览器就不会实行跨域拦截\",{\"1\":{\"860\":1}}],[\"浏览器知道这个文件是以模块化的方式运行的\",{\"1\":{\"473\":1}}],[\"浏览器的内置工具可以帮助我们确定是否存在内存泄漏以及导致内存泄漏的对象\",{\"1\":{\"425\":1}}],[\"浏览器的事件循环\",{\"0\":{\"372\":1}}],[\"浏览器引擎不会将异步任务交给其他浏览器的线程去执行\",{\"1\":{\"376\":1}}],[\"浏览器才是真正执行发送请求这个任务的角色\",{\"1\":{\"371\":1}}],[\"浏览器中使用\",{\"1\":{\"450\":1}}],[\"浏览器中使用它\",{\"1\":{\"450\":1}}],[\"浏览器中包含的异步方式在\",{\"1\":{\"378\":1}}],[\"浏览器中还有定时器线程\",{\"1\":{\"371\":1}}],[\"浏览器中的\",{\"1\":{\"351\":1,\"554\":1,\"1762\":1}}],[\"浏览器会通过domcontentloaded事件来通知dom解析完成\",{\"1\":{\"1705\":1}}],[\"浏览器会开始构造一个\",{\"1\":{\"1689\":1}}],[\"浏览器会先检查是否在缓存中\",{\"1\":{\"1683\":1}}],[\"浏览器会另外启动一个线程去执行该任务\",{\"1\":{\"371\":1}}],[\"浏览器会自动将该节点变为图层\",{\"1\":{\"226\":1}}],[\"浏览器不允许脚本操作document\",{\"1\":{\"1661\":1}}],[\"浏览器不支持使用\",{\"1\":{\"448\":1}}],[\"浏览器不支持\",{\"1\":{\"232\":1}}],[\"浏览器不需重新计算元素的几何属性\",{\"1\":{\"223\":1}}],[\"浏览器窗口尺寸改变\",{\"1\":{\"224\":1}}],[\"浏览器\",{\"1\":{\"202\":1,\"383\":1},\"2\":{\"1654\":1,\"1673\":1,\"1708\":1}}],[\"浏览器上\",{\"1\":{\"201\":1}}],[\"选择合适的安全哲理\",{\"1\":{\"2101\":1}}],[\"选择\",{\"1\":{\"1849\":1}}],[\"选择模块解析策略\",{\"1\":{\"1454\":1}}],[\"选择参数\",{\"1\":{\"1003\":1}}],[\"选择另一个唯一的\",{\"1\":{\"953\":1}}],[\"选择符从右往左匹配查找\",{\"1\":{\"226\":1}}],[\"选项为three\",{\"1\":{\"2711\":1}}],[\"选项即可\",{\"1\":{\"1613\":1}}],[\"选项最后都会被解析成\",{\"1\":{\"1547\":1}}],[\"选项里面可以手动配置\",{\"1\":{\"1547\":1}}],[\"选项包括\",{\"1\":{\"1072\":1}}],[\"选项\",{\"0\":{\"1454\":1},\"1\":{\"916\":2,\"983\":1,\"1024\":1,\"1083\":2,\"1106\":2,\"1109\":2,\"1116\":1,\"1118\":1,\"1125\":1,\"1533\":1}}],[\"选项卡\",{\"1\":{\"343\":1}}],[\"选项的位置\",{\"1\":{\"1528\":1}}],[\"选项的\",{\"1\":{\"341\":1}}],[\"占用的系统资源更少\",{\"1\":{\"909\":1}}],[\"占据空间大\",{\"1\":{\"651\":1}}],[\"占据空间小\",{\"1\":{\"651\":1}}],[\"占据的内存长度\",{\"1\":{\"407\":1}}],[\"占据整个设备的视图\",{\"1\":{\"339\":1}}],[\"占满整个视口区域\",{\"1\":{\"208\":1}}],[\"系统又设有几种控制机制\",{\"1\":{\"2229\":1}}],[\"系统为每个人物分配一个相对固定的优先顺序\",{\"1\":{\"2190\":1}}],[\"系统内核\",{\"1\":{\"2187\":1}}],[\"系统内部会自动调用\",{\"1\":{\"666\":1}}],[\"系统复位处理\",{\"1\":{\"2176\":1}}],[\"系统监视\",{\"0\":{\"2172\":1}}],[\"系统是开放的\",{\"1\":{\"2132\":1}}],[\"系统审计保护级\",{\"1\":{\"2111\":1}}],[\"系统被破坏后\",{\"1\":{\"2111\":5}}],[\"系统可靠性分析与设计\",{\"0\":{\"2088\":1}}],[\"系统演变到这里\",{\"1\":{\"2076\":1}}],[\"系统上线后\",{\"1\":{\"2073\":1}}],[\"系统上以全屏模式显示所选元素\",{\"1\":{\"339\":1}}],[\"系统\",{\"1\":{\"2053\":1}}],[\"系统支持7\",{\"1\":{\"2005\":1}}],[\"系统故障\",{\"1\":{\"2005\":1}}],[\"系统有统一的目标\",{\"1\":{\"1988\":1}}],[\"系统由若干子系统构成且成为一个整体\",{\"1\":{\"1988\":1}}],[\"系统转换计划\",{\"0\":{\"1943\":1}}],[\"系统测试\",{\"0\":{\"1942\":1},\"1\":{\"1940\":1}}],[\"系统层级\",{\"1\":{\"1890\":1}}],[\"系统未互联互通\",{\"1\":{\"1885\":1}}],[\"系统的完善\",{\"1\":{\"1874\":1}}],[\"系统按照预期的用途开展服务\",{\"1\":{\"1847\":1}}],[\"系统决策\",{\"1\":{\"1846\":1}}],[\"系统方案的优化选择\",{\"1\":{\"1846\":1}}],[\"系统分析\",{\"1\":{\"1846\":1}}],[\"系统综合\",{\"1\":{\"1846\":1}}],[\"系统工程声明周期方法\",{\"0\":{\"1855\":1}}],[\"系统工程声明周期阶段\",{\"0\":{\"1854\":1}}],[\"系统工程生命周期\",{\"0\":{\"1853\":1}}],[\"系统工程方法\",{\"0\":{\"1844\":1},\"1\":{\"1843\":1}}],[\"系统工程\",{\"1\":{\"1843\":4}}],[\"系统工程与信息系统基础\",{\"0\":{\"1842\":1}}],[\"系统工作组的组\",{\"1\":{\"953\":1}}],[\"系统级别\",{\"1\":{\"1586\":1}}],[\"系统搜索路径\",{\"1\":{\"1103\":1}}],[\"系统命令\",{\"1\":{\"1077\":1}}],[\"系统会建立一个新的文件\",{\"1\":{\"980\":1}}],[\"系统管理者\",{\"1\":{\"918\":1}}],[\"系统设备等驱动程序信息\",{\"1\":{\"913\":1}}],[\"系统库保存目录\",{\"1\":{\"913\":1}}],[\"系统读取文件内容\",{\"1\":{\"393\":1}}],[\"系统主要做两件事\",{\"1\":{\"379\":1}}],[\"系统中的数据块由整个系统中具有维护功能的节点来共同维护\",{\"1\":{\"2132\":1}}],[\"系统中的快捷方式\",{\"1\":{\"998\":1}}],[\"系统中\",{\"1\":{\"33\":1,\"76\":1}}],[\"暂停后启用主线程去执行了应用程序中的一段\",{\"1\":{\"1650\":1}}],[\"暂停与恢复\",{\"1\":{\"1650\":1}}],[\"暂停和停止音频\",{\"1\":{\"338\":1}}],[\"暂存文件\",{\"0\":{\"1599\":1}}],[\"暂存或未跟踪\",{\"1\":{\"1584\":1}}],[\"暂存区不为空时\",{\"1\":{\"1633\":1}}],[\"暂存区为空时\",{\"1\":{\"1633\":1}}],[\"暂存区是一个临时保存修改文件的地方\",{\"1\":{\"1584\":1}}],[\"暂存区\",{\"1\":{\"1584\":1}}],[\"暂存区和存储库\",{\"1\":{\"1584\":1}}],[\"暂时还没有被用上\",{\"1\":{\"940\":1}}],[\"暂时性死区等知识点\",{\"1\":{\"499\":1}}],[\"暂时性死区\",{\"0\":{\"511\":1},\"1\":{\"249\":2,\"898\":1}}],[\"音量节点\",{\"1\":{\"338\":1}}],[\"音频源文件或音频网络流\",{\"1\":{\"338\":1}}],[\"音频源可以来自<audio>\",{\"1\":{\"338\":1}}],[\"按拓扑结构分\",{\"0\":{\"2204\":1}}],[\"按分布范围分\",{\"0\":{\"2203\":1}}],[\"按分支查看\",{\"0\":{\"1629\":1}}],[\"按技术架构分类\",{\"1\":{\"2180\":1}}],[\"按用户作业中的自然段来划分逻辑空间\",{\"1\":{\"2161\":1}}],[\"按最小连接数分配\",{\"1\":{\"2077\":1}}],[\"按最终结果分\",{\"1\":{\"1861\":1}}],[\"按部署方式分类\",{\"0\":{\"2050\":1}}],[\"按服务类型分类\",{\"0\":{\"2049\":1}}],[\"按需服务\",{\"1\":{\"2047\":1}}],[\"按软件过程活动将软件工具分为\",{\"1\":{\"1962\":1}}],[\"按顺序调用已经存在的构件\",{\"1\":{\"1900\":1}}],[\"按功能分\",{\"1\":{\"1861\":1}}],[\"按合并查看\",{\"0\":{\"1628\":1}}],[\"按时间查看\",{\"1\":{\"1626\":1}}],[\"按作者查看\",{\"0\":{\"1626\":1}}],[\"按键说明\",{\"0\":{\"1059\":1}}],[\"按esc键可随时退出底线命令模式\",{\"1\":{\"1058\":1}}],[\"按下小数点\",{\"1\":{\"1063\":1}}],[\"按下n则表示\",{\"1\":{\"1062\":1}}],[\"按下数字后再按空格键\",{\"1\":{\"1061\":1}}],[\"按下\",{\"1\":{\"1056\":1}}],[\"按修改时间查找\",{\"1\":{\"1006\":1}}],[\"按文件查看\",{\"0\":{\"1627\":1}}],[\"按文件所属组查找\",{\"1\":{\"1006\":1}}],[\"按文件所有者查找\",{\"1\":{\"1006\":1}}],[\"按文件大小查找\",{\"1\":{\"1006\":1}}],[\"按文件类型查找\",{\"1\":{\"1006\":1}}],[\"按文件名查找\",{\"1\":{\"1006\":1}}],[\"按b键就会往回back一页显示\",{\"1\":{\"985\":1}}],[\"按ctrl+d来保存并退出\",{\"1\":{\"983\":1}}],[\"按位异或运算符\",{\"0\":{\"610\":1},\"1\":{\"610\":1}}],[\"按位非的操作结果实际上是对数值进行取反并减1\",{\"1\":{\"609\":1}}],[\"按位非操作符\",{\"0\":{\"609\":1},\"1\":{\"609\":1}}],[\"按位或操作符\",{\"0\":{\"608\":1},\"1\":{\"608\":1}}],[\"按位与操作符\",{\"0\":{\"607\":1},\"1\":{\"607\":1}}],[\"按位取反\",{\"1\":{\"606\":1}}],[\"按钮会清除全局变量并覆盖\",{\"1\":{\"436\":1}}],[\"按钮会调用\",{\"1\":{\"340\":1,\"341\":1}}],[\"按钮并对着麦克风说话\",{\"1\":{\"340\":1}}],[\"按钮\",{\"1\":{\"338\":1,\"339\":1,\"436\":1}}],[\"按照人类的联想思维方式任意跳转到包含相关概念或构件的文档\",{\"1\":{\"2028\":1}}],[\"按照市场发展的要求\",{\"1\":{\"1873\":1}}],[\"按照页面中出现的顺序\",{\"1\":{\"1707\":1}}],[\"按照我们上面所说\",{\"1\":{\"1650\":1}}],[\"按照我们的方式做类型检查\",{\"1\":{\"1443\":1}}],[\"按照上文的引用计数策略\",{\"1\":{\"1646\":1}}],[\"按照上面的规律执行\",{\"1\":{\"748\":1}}],[\"按照\",{\"1\":{\"1604\":1}}],[\"按照官网给出的生命周期图\",{\"1\":{\"1547\":1}}],[\"按照$path环境变量定义的目录查找顺序\",{\"1\":{\"1081\":1}}],[\"按照严格相等搜索和按照断言函数搜索\",{\"1\":{\"707\":1}}],[\"按照顺序分别全部执行\",{\"1\":{\"376\":1}}],[\"按照bfc的定义\",{\"1\":{\"151\":1}}],[\"按照manifest\",{\"1\":{\"109\":1}}],[\"扬声器\",{\"1\":{\"338\":1}}],[\"依据\",{\"1\":{\"1940\":4}}],[\"依靠测试人员的经验和直觉\",{\"1\":{\"1939\":1}}],[\"依次执行\",{\"1\":{\"1707\":1}}],[\"依次执行subs里面的watcher更新方法\",{\"1\":{\"1562\":1}}],[\"依次执行回调\",{\"1\":{\"1542\":1}}],[\"依次执行生命周期对应的方法\",{\"1\":{\"1486\":1}}],[\"依然会每次生成新的引用\",{\"1\":{\"1236\":1}}],[\"依然通过\",{\"1\":{\"1220\":1}}],[\"依序辨识这些文件\",{\"1\":{\"1012\":1}}],[\"依赖倒置原则\",{\"1\":{\"1937\":1}}],[\"依赖收集\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"依赖更新\",{\"1\":{\"1285\":1}}],[\"依赖\",{\"0\":{\"1332\":1},\"1\":{\"1212\":2,\"1707\":1}}],[\"依赖数组说空的\",{\"1\":{\"1244\":1}}],[\"依赖数组添加了\",{\"1\":{\"1244\":1}}],[\"依赖数组可以不传递\",{\"1\":{\"1241\":1}}],[\"依赖数组\",{\"1\":{\"1210\":1,\"1241\":1}}],[\"依赖项数组\",{\"1\":{\"458\":1}}],[\"依赖模块必须根据模块的工厂函数优先级执行\",{\"1\":{\"458\":1}}],[\"依赖回退\",{\"1\":{\"334\":1}}],[\"依旧指向\",{\"1\":{\"261\":1}}],[\"顶点位置\",{\"1\":{\"2742\":1}}],[\"顶点着色器可使用的全局变量\",{\"1\":{\"2795\":1}}],[\"顶点着色器可使用的纹理数量\",{\"1\":{\"2795\":1}}],[\"顶点着色器的glsl代码\",{\"1\":{\"2763\":1}}],[\"顶点着色器首先运行\",{\"1\":{\"2742\":1}}],[\"顶点着色器和片元着色器\",{\"0\":{\"2742\":1}}],[\"顶级\",{\"1\":{\"334\":1}}],[\"顶层\",{\"1\":{\"334\":1,\"467\":1}}],[\"仅使用纹理的颜色\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"仅备份上一次完全备份之后变化的数据\",{\"1\":{\"2266\":1}}],[\"仅保存sql查询语句\",{\"1\":{\"2226\":1}}],[\"仅有50\",{\"1\":{\"2213\":1}}],[\"仅支持单播传输\",{\"1\":{\"1713\":1}}],[\"仅是从跟踪清单中删除\",{\"1\":{\"1613\":1}}],[\"仅包含非原始类型\",{\"1\":{\"1431\":1}}],[\"仅更新指定的软件命令\",{\"1\":{\"1073\":1}}],[\"仅安装指定的软件命令\",{\"1\":{\"1073\":1}}],[\"仅显示不同之处\",{\"1\":{\"1009\":1}}],[\"仅显示有无差异\",{\"1\":{\"1009\":1}}],[\"仅显示匹配模式的行\",{\"1\":{\"989\":1}}],[\"仅出现在某个目录中\",{\"1\":{\"1009\":1}}],[\"仅复制源文件中更新时间较新的文件\",{\"1\":{\"998\":1}}],[\"仅负责解决who指令其他版本的兼容性问题\",{\"1\":{\"930\":1}}],[\"仅适用于数组的遍历\",{\"1\":{\"872\":1,\"873\":1}}],[\"仅记录在\",{\"1\":{\"817\":1}}],[\"仅接受对象作为键\",{\"1\":{\"433\":1}}],[\"仅用于以安全的方式从用户\",{\"1\":{\"393\":1}}],[\"仅node\",{\"1\":{\"379\":1}}],[\"仅在客户端使用\",{\"1\":{\"1663\":1,\"1667\":1}}],[\"仅在开启\",{\"1\":{\"1236\":1}}],[\"仅在需要时才加载\",{\"1\":{\"471\":1}}],[\"仅在\",{\"1\":{\"334\":1}}],[\"仅仅返回一个简单的统计\",{\"1\":{\"1604\":1}}],[\"仅仅是为了\",{\"1\":{\"1212\":1}}],[\"仅仅是加载而已\",{\"1\":{\"275\":1}}],[\"仅仅用来查看环境变零\",{\"1\":{\"1101\":1}}],[\"仅仅使用了换行符lf\",{\"1\":{\"102\":1}}],[\"拒绝服务攻击\",{\"1\":{\"2102\":1}}],[\"拒绝\",{\"1\":{\"328\":1}}],[\"允许顶点在多个三角面片间可以重用\",{\"1\":{\"2288\":1}}],[\"允许用户将当前任务放入有意义的语境\",{\"1\":{\"1928\":1}}],[\"允许用户交互可以被中断和撤销\",{\"1\":{\"1928\":1}}],[\"允许多个set\",{\"1\":{\"1659\":1}}],[\"允许从没有设置默认导出的模块中默认导入\",{\"1\":{\"1454\":1}}],[\"允许从同源的不同浏览上下文进行消息或数据的通信\",{\"1\":{\"343\":1}}],[\"允许编译\",{\"1\":{\"1454\":1}}],[\"允许在场景中使用阴影贴图\",{\"1\":{\"2805\":1}}],[\"允许在实例属性和变量声明后面放置一个\",{\"1\":{\"1448\":1}}],[\"允许在媒体查询中转换\",{\"1\":{\"208\":1}}],[\"允许我们对\",{\"1\":{\"1417\":1}}],[\"允许我们延迟渲染新的路由内容\",{\"1\":{\"1312\":1}}],[\"允许我们在本地检查特定的提交\",{\"1\":{\"1603\":1}}],[\"允许我们在\",{\"1\":{\"334\":1,\"338\":1}}],[\"允许把http\",{\"1\":{\"1153\":1}}],[\"允许超级用户制作目录的硬链接\",{\"1\":{\"1003\":1}}],[\"允许添加组\",{\"1\":{\"953\":1}}],[\"允许的header类型\",{\"1\":{\"864\":1}}],[\"允许所有方法\",{\"1\":{\"864\":1}}],[\"允许所有域名\",{\"1\":{\"864\":1}}],[\"允许返回的头\",{\"1\":{\"860\":1}}],[\"允许携带cookie\",{\"1\":{\"860\":1}}],[\"允许携带那个头访问我\",{\"1\":{\"860\":1}}],[\"允许那个方法访问我\",{\"1\":{\"860\":1}}],[\"允许覆盖\",{\"1\":{\"806\":1}}],[\"允许遍历\",{\"1\":{\"719\":1}}],[\"允许加载未编写为\",{\"1\":{\"463\":1}}],[\"允许程序使用它\",{\"1\":{\"425\":1}}],[\"允许将\",{\"1\":{\"413\":1}}],[\"允许读取位于连接对象链深处的属性的值\",{\"1\":{\"322\":1,\"644\":1}}],[\"链表在多个节点存储\",{\"1\":{\"2133\":1}}],[\"链路地址更新\",{\"1\":{\"2208\":1}}],[\"链路跟踪和度量\",{\"1\":{\"2053\":1}}],[\"链路层\",{\"0\":{\"1692\":1}}],[\"链并不能凸显\",{\"1\":{\"596\":1}}],[\"链提供一种让错误正确传播的途经\",{\"1\":{\"562\":1}}],[\"链式操作符\",{\"1\":{\"322\":1,\"644\":1}}],[\"链判断运算符\",{\"1\":{\"322\":1,\"644\":1}}],[\"链接同一状态的进程\",{\"1\":{\"2150\":1}}],[\"链接\",{\"1\":{\"1729\":1}}],[\"链接<a>页内标签添加title属性\",{\"1\":{\"219\":1}}],[\"链接到\",{\"0\":{\"11\":1,\"54\":1}}],[\"块数\",{\"1\":{\"1006\":1}}],[\"块中输出\",{\"1\":{\"597\":1}}],[\"块之后\",{\"1\":{\"597\":1}}],[\"块是多余的\",{\"1\":{\"318\":1}}],[\"块级作用域就是通过词法环境的栈结构来实现的\",{\"1\":{\"510\":1}}],[\"块级作用域就是使用一对大括号包裹的一段代码\",{\"1\":{\"501\":1}}],[\"块级作用域\",{\"0\":{\"248\":1,\"898\":1}}],[\"块级格式上下文\",{\"1\":{\"184\":1}}],[\"块级格式化上下文\",{\"1\":{\"147\":1}}],[\"块级元素\",{\"1\":{\"149\":1}}],[\"几何体\",{\"0\":{\"2889\":1},\"2\":{\"2325\":1,\"2349\":1,\"2353\":1,\"2357\":1,\"2361\":1,\"2365\":1,\"2369\":1,\"2373\":1,\"2377\":1,\"2381\":1,\"2385\":1,\"2389\":1,\"2393\":1,\"2397\":1,\"2401\":1,\"2405\":1,\"2409\":1,\"2413\":1,\"2428\":1,\"2432\":1,\"2436\":1,\"2440\":1,\"2444\":1,\"2448\":1,\"2452\":1}}],[\"几何体中的每个法向量长度将会为\",{\"1\":{\"2312\":1}}],[\"几何体所朝向的世界坐标\",{\"1\":{\"2311\":1}}],[\"几何尺寸的变化\",{\"1\":{\"223\":1}}],[\"几乎独立的并可替换的一个部分\",{\"1\":{\"2019\":1}}],[\"几乎所有的软件开发\",{\"1\":{\"1577\":1}}],[\"几乎和同步代码一样\",{\"1\":{\"596\":1}}],[\"几乎相同\",{\"1\":{\"312\":1}}],[\"几行就完成了之前写的递归的那些操作\",{\"1\":{\"592\":1}}],[\"几次\",{\"1\":{\"355\":1}}],[\"空间中与该平面点积为负的点将被切掉\",{\"1\":{\"2796\":1}}],[\"空间中与平面的有符号距离为负的点被剪裁\",{\"1\":{\"2647\":1}}],[\"空间浪费小\",{\"1\":{\"2162\":1}}],[\"空间局部性\",{\"1\":{\"2141\":1}}],[\"空调温控\",{\"1\":{\"1994\":1}}],[\"空域是经济和社会的一切领域\",{\"1\":{\"1871\":1}}],[\"空闲区将翻转成使用区\",{\"1\":{\"1648\":1}}],[\"空闲区空间占用超过了\",{\"1\":{\"1648\":1}}],[\"空闲区\",{\"1\":{\"1648\":1}}],[\"空闲内存块是不连续的\",{\"1\":{\"1646\":1}}],[\"空对象类型和大\",{\"1\":{\"1431\":1}}],[\"空对象\",{\"1\":{\"1431\":1}}],[\"空对象转换为布尔类型也是\",{\"1\":{\"664\":1}}],[\"空白行不加\",{\"1\":{\"984\":1}}],[\"空白符包括\",{\"1\":{\"307\":1,\"538\":1}}],[\"空字符串为假\",{\"1\":{\"889\":1}}],[\"空\",{\"1\":{\"862\":1}}],[\"空数组\",{\"1\":{\"664\":1}}],[\"空值合并操作符\",{\"0\":{\"643\":1}}],[\"空值合并运算符\",{\"0\":{\"321\":1}}],[\"空格键\",{\"1\":{\"989\":1}}],[\"空格键向下滚动一屏\",{\"1\":{\"986\":1}}],[\"空格除外\",{\"1\":{\"797\":1}}],[\"空格等\",{\"1\":{\"317\":1}}],[\"空格\",{\"1\":{\"307\":1,\"538\":1}}],[\"空格被认为是不敏感的\",{\"1\":{\"20\":1,\"63\":1}}],[\"空格被认为是敏感的\",{\"1\":{\"20\":1,\"63\":1}}],[\"运作策略\",{\"1\":{\"1874\":1}}],[\"运作需求\",{\"1\":{\"1874\":1}}],[\"运用了模板方法模式的程序中\",{\"1\":{\"1829\":1}}],[\"运算相关的操作符\",{\"1\":{\"774\":1}}],[\"运算\",{\"1\":{\"610\":1}}],[\"运算规则如下\",{\"1\":{\"607\":1,\"608\":1,\"609\":1,\"610\":1}}],[\"运算规则\",{\"1\":{\"606\":1}}],[\"运算符定义了\",{\"1\":{\"1460\":1}}],[\"运算符的操作数是对象时\",{\"1\":{\"807\":1}}],[\"运算符的优先级比较高\",{\"1\":{\"646\":1}}],[\"运算符将对象与字符串\",{\"1\":{\"805\":1}}],[\"运算符既适用于字符串\",{\"1\":{\"805\":1}}],[\"运算符具有从左到右的关联性\",{\"1\":{\"802\":1}}],[\"运算符应用于\",{\"1\":{\"802\":1}}],[\"运算符来触发隐式字符串转换\",{\"1\":{\"781\":1}}],[\"运算符用于判断构造函数的\",{\"1\":{\"657\":1}}],[\"运算符用来测试一个对象在其原型链中是否存在一个构造函数的\",{\"1\":{\"657\":1}}],[\"运算符操作的操作数\",{\"1\":{\"646\":1}}],[\"运算符让表达式返回\",{\"1\":{\"646\":1}}],[\"运算符\",{\"0\":{\"775\":1,\"1107\":1},\"1\":{\"321\":1,\"606\":1,\"643\":1,\"807\":2}}],[\"运算符只能放在对象的最顶层\",{\"1\":{\"305\":1}}],[\"运行环境等确定\",{\"1\":{\"2218\":1}}],[\"运行环境\",{\"1\":{\"2092\":1}}],[\"运行环境和操作系统\",{\"1\":{\"2049\":1}}],[\"运行环境提供的模块规范\",{\"1\":{\"448\":1}}],[\"运行软件所需数据等\",{\"1\":{\"1961\":1}}],[\"运行阶段\",{\"1\":{\"1847\":1}}],[\"运行过程中线程就必须要暂停去执行一段时间的\",{\"1\":{\"1646\":1}}],[\"运行结果\",{\"1\":{\"1001\":1}}],[\"运行的时候如果传递的参数之前传递过\",{\"1\":{\"902\":1}}],[\"运行的时候可能会阻止\",{\"1\":{\"370\":1}}],[\"运行时处理\",{\"1\":{\"895\":1}}],[\"运行时环境\",{\"1\":{\"450\":1}}],[\"运行代码会得到这样的输出\",{\"1\":{\"597\":1}}],[\"运行\",{\"0\":{\"112\":1},\"1\":{\"467\":1,\"1612\":1}}],[\"运行项目\",{\"0\":{\"5\":1,\"48\":1}}],[\"循环变量必须是\",{\"1\":{\"2741\":1}}],[\"循环变量会泄漏为全局变量\",{\"1\":{\"248\":1}}],[\"循环必须标准化\",{\"1\":{\"2741\":1}}],[\"循环格式必须与定义的标准相对应\",{\"1\":{\"2741\":1}}],[\"循环扫描算法\",{\"0\":{\"2147\":1}}],[\"循环引用\",{\"1\":{\"1646\":1}}],[\"循环就停止\",{\"1\":{\"1478\":1}}],[\"循环就可以一直执行代码\",{\"1\":{\"889\":1}}],[\"循环创建新节点\",{\"1\":{\"1476\":1}}],[\"循环读取\",{\"1\":{\"992\":1}}],[\"循环时\",{\"1\":{\"903\":1}}],[\"循环输出问题\",{\"0\":{\"903\":1}}],[\"循环直至栈为空\",{\"1\":{\"766\":1}}],[\"循环不支持遍历普通对象\",{\"1\":{\"719\":1}}],[\"循环\",{\"1\":{\"719\":2,\"874\":1,\"2741\":1}}],[\"循环中使用\",{\"1\":{\"872\":1}}],[\"循环中的解构\",{\"0\":{\"848\":1}}],[\"循环中的代码每执行一次\",{\"1\":{\"718\":1,\"881\":1}}],[\"循环中\",{\"1\":{\"645\":1}}],[\"循环中控制计算器递增或递减\",{\"1\":{\"602\":1}}],[\"循环结束之后\",{\"1\":{\"506\":2}}],[\"循环语句\",{\"1\":{\"501\":1}}],[\"循环会处理一个宏任务和所有这次循环中产生的微任务\",{\"1\":{\"376\":1}}],[\"循环往复\",{\"1\":{\"376\":1,\"581\":1}}],[\"循环取出\",{\"1\":{\"324\":1}}],[\"循环使用\",{\"1\":{\"295\":1}}],[\"供应商都能够访问企业内部网络和因特网存储的各种自己所需的信息\",{\"1\":{\"1887\":1}}],[\"供应链管理\",{\"0\":{\"1879\":1}}],[\"供应链的管理乃至发展到电子商务\",{\"1\":{\"1873\":1}}],[\"供封装上下文调用\",{\"1\":{\"1784\":1}}],[\"供\",{\"1\":{\"295\":1,\"1533\":1}}],[\"页式存储\",{\"0\":{\"2160\":1}}],[\"页就显示为\",{\"1\":{\"293\":1}}],[\"页面关于\",{\"1\":{\"2744\":1}}],[\"页面的主机名\",{\"1\":{\"1659\":1}}],[\"页面取值的时候\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"页面\",{\"1\":{\"1332\":1,\"2744\":1}}],[\"页面上有多个\",{\"1\":{\"1311\":1}}],[\"页面上是继续显示\",{\"1\":{\"1236\":1}}],[\"页面每一次\",{\"1\":{\"1244\":1}}],[\"页面中应用的代码\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"页面有一个音量和平移的范围滑块\",{\"1\":{\"338\":1}}],[\"页面渲染\",{\"2\":{\"228\":1,\"1709\":1}}],[\"页面达到合理的展示\",{\"1\":{\"200\":1}}],[\"页面显示的效果不能合理的展示\",{\"1\":{\"200\":1}}],[\"页面才会被放大比例或者是缩小比例显示\",{\"1\":{\"200\":1}}],[\"笔者最近做的一个需求就是将返回的页数补齐为三位\",{\"1\":{\"293\":1,\"547\":1}}],[\"索引文件结构\",{\"0\":{\"2164\":1}}],[\"索引的文件\",{\"1\":{\"1584\":1}}],[\"索引访问\",{\"1\":{\"1370\":1}}],[\"索引类型查询和\",{\"1\":{\"1370\":1}}],[\"索引类型\",{\"0\":{\"1370\":1}}],[\"索引签名\",{\"1\":{\"1340\":1}}],[\"索引是当前元素的索引\",{\"1\":{\"709\":1}}],[\"索引\",{\"1\":{\"709\":1,\"878\":1}}],[\"索引处开始查找目标值\",{\"1\":{\"289\":1}}],[\"索引器将用户提交的搜索词与数据中的信息进行匹配\",{\"1\":{\"217\":1}}],[\"作用于\",{\"1\":{\"1959\":1}}],[\"作用是父组件提供数据\",{\"1\":{\"1513\":1}}],[\"作用是减少网络报文段的数量\",{\"1\":{\"1153\":1}}],[\"作用是用于查看和连接文件\",{\"1\":{\"982\":1}}],[\"作用\",{\"1\":{\"1086\":1,\"1105\":1}}],[\"作用和\",{\"1\":{\"658\":1,\"663\":1}}],[\"作用块内声明的变量不影响块外面的变量\",{\"1\":{\"507\":1}}],[\"作用同第二个参数\",{\"1\":{\"464\":1}}],[\"作用域也分为好几种\",{\"1\":{\"895\":1}}],[\"作用域指的是变量能够被访问到的范围\",{\"1\":{\"895\":1}}],[\"作用域块中通过\",{\"1\":{\"510\":1}}],[\"作用域分为两种\",{\"1\":{\"501\":1}}],[\"作用域就是变量与函数的可访问范围\",{\"1\":{\"501\":1}}],[\"作用域是指在程序中定义变量的区域\",{\"1\":{\"501\":1}}],[\"作用域\",{\"0\":{\"895\":1},\"1\":{\"286\":1,\"678\":1}}],[\"作为散列键从静态分配的散列表找出对应的节点\",{\"1\":{\"2077\":1}}],[\"作为发现和消除错误的主要机制\",{\"1\":{\"1906\":1}}],[\"作为自己\",{\"1\":{\"1728\":1}}],[\"作为ack\",{\"1\":{\"1726\":1}}],[\"作为开发者\",{\"1\":{\"1417\":1}}],[\"作为初始值\",{\"1\":{\"1286\":1}}],[\"作为参数\",{\"1\":{\"1274\":1}}],[\"作为属性\",{\"1\":{\"1235\":1}}],[\"作为经常使用的定时器\",{\"1\":{\"903\":1}}],[\"作为函数参数传递的形式\",{\"1\":{\"902\":1}}],[\"作为函数的参数\",{\"1\":{\"654\":1}}],[\"作为全局变量会被提升到全局作用域的顶端\",{\"1\":{\"500\":1}}],[\"作为一个模块\",{\"1\":{\"445\":1}}],[\"作为一个整体文件\",{\"1\":{\"397\":1}}],[\"作为第三个参数传递给\",{\"1\":{\"432\":1}}],[\"作为第一次调用\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"作为其参数\",{\"1\":{\"413\":1}}],[\"作为构造函数时\",{\"1\":{\"360\":1}}],[\"作为\",{\"1\":{\"355\":2,\"1726\":1,\"1728\":1}}],[\"作为对我们应该响应的新数据或信息的通知或物理反馈的一种方式\",{\"1\":{\"342\":1}}],[\"作为遍历一个对象的补充手段\",{\"1\":{\"295\":1}}],[\"包\",{\"0\":{\"1132\":1},\"1\":{\"1729\":1}}],[\"包并且安装\",{\"1\":{\"1071\":1}}],[\"包管理\",{\"1\":{\"1071\":1}}],[\"包裹切换选项卡的\",{\"1\":{\"1311\":1}}],[\"包裹\",{\"1\":{\"849\":1,\"1303\":1}}],[\"包装拆掉\",{\"1\":{\"597\":1}}],[\"包装成\",{\"1\":{\"592\":1,\"594\":1}}],[\"包装成一个库\",{\"1\":{\"592\":1}}],[\"包装起来就可以使用了\",{\"1\":{\"592\":1}}],[\"包装实例就会变成\",{\"1\":{\"577\":1}}],[\"包含设置webglrenderer\",{\"1\":{\"2807\":1}}],[\"包含有关图形板内存和渲染过程的一系列统计信息\",{\"1\":{\"2800\":1}}],[\"包含有元数据的对象\",{\"1\":{\"2545\":1,\"2589\":1,\"2691\":1,\"2860\":1}}],[\"包含打标签者的名字\",{\"1\":{\"1616\":1}}],[\"包含数组和对象\",{\"1\":{\"1563\":1}}],[\"包含数组比如\",{\"1\":{\"1534\":1}}],[\"包含类型声明的文件列表\",{\"1\":{\"1454\":1}}],[\"包含原始类型\",{\"1\":{\"1431\":1}}],[\"包含\",{\"1\":{\"1264\":1,\"1913\":1}}],[\"包含许多不同的状态值\",{\"1\":{\"1227\":1}}],[\"包含系统和隐藏文件\",{\"1\":{\"1018\":1}}],[\"包含对象自身的所有属性\",{\"1\":{\"885\":1}}],[\"包含了该对象自身的所有属性名\",{\"1\":{\"883\":1}}],[\"包含了变量环境\",{\"1\":{\"349\":1}}],[\"包含从\",{\"1\":{\"702\":1}}],[\"包含开始索引\",{\"1\":{\"683\":1}}],[\"包含四个参数\",{\"1\":{\"284\":1,\"705\":1}}],[\"包括从\",{\"1\":{\"2746\":1}}],[\"包括从material继承的任何属性\",{\"1\":{\"2599\":1,\"2619\":1,\"2697\":1,\"2777\":1}}],[\"包括顶点位置\",{\"1\":{\"2277\":1}}],[\"包括图像\",{\"1\":{\"2061\":1}}],[\"包括logging\",{\"1\":{\"2054\":1}}],[\"包括服务器\",{\"1\":{\"2049\":1}}],[\"包括逆向工程\",{\"1\":{\"1905\":1}}],[\"包括反映程序分量或程序诸实体与应用领域概念之间对应关系的信息\",{\"1\":{\"1905\":1}}],[\"包括反映程序分量之间相互依赖关系的信息\",{\"1\":{\"1905\":1}}],[\"包括反映程序段功能及程序段之间关系的信息\",{\"1\":{\"1905\":1}}],[\"包括程序的抽象语法树\",{\"1\":{\"1905\":1}}],[\"包括实现一些公共方法以及封装子类中所有方法的执行顺序\",{\"1\":{\"1829\":1}}],[\"包括报文中的比特错误\",{\"1\":{\"1717\":1}}],[\"包括文件和blobs\",{\"1\":{\"1669\":1}}],[\"包括由于系统对构件交互协议\",{\"1\":{\"2028\":1}}],[\"包括由于系统对构件基础设施\",{\"1\":{\"2028\":1}}],[\"包括由\",{\"1\":{\"1168\":1}}],[\"包括系统变量\",{\"1\":{\"1097\":1}}],[\"包括存取时间和更改时间\",{\"1\":{\"980\":1}}],[\"包括权限\",{\"1\":{\"972\":1}}],[\"包括用户标号\",{\"1\":{\"941\":1}}],[\"包括各种日志文件\",{\"1\":{\"913\":1}}],[\"包括硬件\",{\"1\":{\"909\":1}}],[\"包括字符串\",{\"1\":{\"839\":1}}],[\"包括包装对象\",{\"1\":{\"806\":1}}],[\"包括了函数的参数和其他属性\",{\"1\":{\"723\":1}}],[\"包括原型链上可枚举的属性\",{\"1\":{\"719\":1}}],[\"包括简单的赋值操作符\",{\"1\":{\"638\":1}}],[\"包括\",{\"1\":{\"272\":1,\"299\":1,\"400\":1,\"623\":1,\"891\":1,\"1670\":1}}],[\"包括对象\",{\"1\":{\"272\":1}}],[\"取最高的那个\",{\"1\":{\"1707\":1}}],[\"取过一次值之后就表示已经取过值了\",{\"1\":{\"1571\":1}}],[\"取出对应的值\",{\"1\":{\"1569\":1}}],[\"取出数组的第一个元素\",{\"1\":{\"748\":1}}],[\"取得相应的属性值的类\",{\"1\":{\"1372\":1}}],[\"取得地址后从堆中获得实体\",{\"1\":{\"651\":1}}],[\"取客户端真实\",{\"1\":{\"1153\":1}}],[\"取消修改有三种情况\",{\"1\":{\"1614\":1}}],[\"取消修改\",{\"0\":{\"1614\":1}}],[\"取消变量的类型属性\",{\"1\":{\"1109\":1}}],[\"取消遇见特殊字元^l时会暂停的功能\",{\"1\":{\"986\":1}}],[\"取消建立以用户名称为名的群组\",{\"1\":{\"944\":1}}],[\"取消目前已经进行中的关机动作\",{\"1\":{\"919\":1}}],[\"取消防抖\",{\"1\":{\"831\":1}}],[\"取消它\",{\"1\":{\"430\":1}}],[\"取余操作符用于计算一个数除以第二个数的余数\",{\"1\":{\"620\":1}}],[\"取余操作符\",{\"0\":{\"620\":1}}],[\"取决于有符号操作数的符号\",{\"1\":{\"618\":1,\"619\":2}}],[\"取反\",{\"1\":{\"606\":1}}],[\"取而代之的是层级简单\",{\"1\":{\"565\":1}}],[\"取整以后等于\",{\"1\":{\"282\":1,\"545\":1}}],[\"取值如下\",{\"1\":{\"394\":1}}],[\"取值\",{\"1\":{\"202\":1,\"1493\":1,\"1571\":1}}],[\"到软\",{\"1\":{\"2179\":1}}],[\"到目前为止的大多数浏览器的\",{\"1\":{\"1646\":1}}],[\"到当前分支\",{\"1\":{\"1622\":1}}],[\"到了\",{\"1\":{\"1577\":1}}],[\"到底能不能写入\",{\"1\":{\"1067\":1}}],[\"到底在等啥\",{\"0\":{\"595\":1}}],[\"到该行的最前面一个字符\",{\"1\":{\"1063\":1}}],[\"到该行的最后一个字符\",{\"1\":{\"1063\":1}}],[\"到数组结束的所有元素\",{\"1\":{\"702\":1}}],[\"到前一个\",{\"1\":{\"581\":1}}],[\"到原字符串结尾的字符串\",{\"1\":{\"528\":1}}],[\"到变量可以被访问之间的这段时间\",{\"1\":{\"511\":1}}],[\"到现在\",{\"1\":{\"388\":1}}],[\"到\",{\"0\":{\"1141\":1},\"1\":{\"282\":2,\"400\":1,\"402\":3,\"436\":1,\"520\":1,\"545\":2,\"702\":1,\"2843\":1,\"2846\":1}}],[\"次要版本号\",{\"1\":{\"1618\":1}}],[\"次数以及每次\",{\"1\":{\"1604\":1}}],[\"次<\",{\"1\":{\"1243\":1,\"1244\":2}}],[\"次`\",{\"1\":{\"1243\":1}}],[\"次就会创建\",{\"1\":{\"478\":1}}],[\"次\",{\"1\":{\"282\":1}}],[\"具备了一对一的能力\",{\"1\":{\"1692\":1}}],[\"具备其中的三部分\",{\"1\":{\"445\":1}}],[\"具体登录类\",{\"1\":{\"1755\":3}}],[\"具体工厂类\",{\"1\":{\"1755\":3}}],[\"具体工厂类根据不同的需求实现了抽象工厂中定义的方法\",{\"1\":{\"1755\":1}}],[\"具体来说就是\",{\"1\":{\"1712\":1}}],[\"具体示例如下\",{\"1\":{\"1416\":1,\"1427\":1}}],[\"具体可以查看ts\",{\"1\":{\"1356\":1}}],[\"具体取决于转换上下文\",{\"1\":{\"806\":1}}],[\"具名接口改default\",{\"1\":{\"276\":1}}],[\"具有一定反光特性的面\",{\"1\":{\"2737\":1}}],[\"具有一个或多个属性\",{\"1\":{\"2599\":1,\"2619\":1,\"2697\":1,\"2746\":1,\"2777\":1}}],[\"具有参数的容器\",{\"1\":{\"2690\":1}}],[\"具有自治的功能\",{\"1\":{\"2229\":1}}],[\"具有自动垃圾回收机制\",{\"1\":{\"1645\":1}}],[\"具有高抽象层次\",{\"1\":{\"1996\":1}}],[\"具有高优先级和右结合性\",{\"1\":{\"601\":1}}],[\"具有初始化值的变量\",{\"1\":{\"1442\":1}}],[\"具有很强的灵活性\",{\"1\":{\"678\":1}}],[\"具有全局标志\",{\"1\":{\"535\":1}}],[\"具有\",{\"1\":{\"252\":1,\"636\":1}}],[\"整合与优化\",{\"1\":{\"1879\":1}}],[\"整合\",{\"1\":{\"1868\":1}}],[\"整形\",{\"1\":{\"1092\":1}}],[\"整数\",{\"1\":{\"703\":1}}],[\"整数或小数\",{\"1\":{\"202\":3}}],[\"整个应用只创建一个\",{\"1\":{\"1765\":1}}],[\"整个数据报文的检验和\",{\"1\":{\"1712\":1}}],[\"整个数据报文的长度\",{\"1\":{\"1712\":1}}],[\"整个事务就都取消\",{\"1\":{\"1670\":1}}],[\"整个标记清除算法大致过程就像下面这样\",{\"1\":{\"1646\":1}}],[\"整个\",{\"1\":{\"1267\":1}}],[\"整个字符串就会被转为\",{\"1\":{\"663\":1}}],[\"整个字符串都会被分割\",{\"1\":{\"526\":1}}],[\"整个模块需要先下载并执行\",{\"1\":{\"471\":1}}],[\"整个流程分为六个阶段\",{\"1\":{\"379\":1}}],[\"整体架构设计\",{\"0\":{\"2120\":1}}],[\"整体性原则\",{\"1\":{\"1856\":1}}],[\"整体论原则\",{\"1\":{\"1851\":1}}],[\"整体最有\",{\"1\":{\"1843\":1}}],[\"整体代码\",{\"1\":{\"376\":1,\"380\":1}}],[\"整体输出\",{\"1\":{\"276\":1}}],[\"整体先导入再输出以及\",{\"1\":{\"276\":1}}],[\"先将\",{\"1\":{\"2800\":1}}],[\"先将这组根对象标记为灰色并推入到标记工作表中\",{\"1\":{\"1650\":1}}],[\"先择一种比较适宜的网络逻辑结构\",{\"1\":{\"2217\":1}}],[\"先分段\",{\"1\":{\"2162\":1}}],[\"先来先服务\",{\"0\":{\"2144\":1}}],[\"先来看下\",{\"1\":{\"723\":1}}],[\"先来看几个相关的概念\",{\"1\":{\"606\":1}}],[\"先来看一个例子\",{\"1\":{\"587\":1,\"836\":1}}],[\"先来看看mdn中对变量提升的描述\",{\"1\":{\"500\":1}}],[\"先后的请求时有关联的\",{\"1\":{\"2078\":1}}],[\"先执行原函数\",{\"1\":{\"1777\":1}}],[\"先进行前置函数调用\",{\"1\":{\"1777\":1}}],[\"先接收到了\",{\"1\":{\"1730\":1}}],[\"先接收到\",{\"1\":{\"1730\":2}}],[\"先同步把\",{\"1\":{\"1541\":1}}],[\"先保留数组原型\",{\"1\":{\"1535\":1}}],[\"先不考虑其他的合并\",{\"1\":{\"1484\":1}}],[\"先考虑生命周期\",{\"1\":{\"1484\":1}}],[\"先找\",{\"1\":{\"1357\":1}}],[\"先下载\",{\"1\":{\"866\":1}}],[\"先访问已设置\",{\"1\":{\"864\":1}}],[\"先引用\",{\"1\":{\"862\":1}}],[\"先上图\",{\"1\":{\"859\":1}}],[\"先判断对象是否在\",{\"1\":{\"767\":1}}],[\"先判断是否支持\",{\"1\":{\"465\":1}}],[\"先用数组的\",{\"1\":{\"737\":1}}],[\"先检查参数\",{\"1\":{\"592\":1}}],[\"先定义一个必定会失败的方法\",{\"1\":{\"578\":1}}],[\"先看下面这段代码\",{\"1\":{\"508\":1}}],[\"先导入后导出\",{\"1\":{\"276\":1}}],[\"先触发\",{\"1\":{\"239\":1}}],[\"圆锥缓冲几何体conegeometry\",{\"0\":{\"2391\":1}}],[\"圆锥缓冲几何体\",{\"0\":{\"2390\":1}}],[\"圆环缓冲扭结几何体\",{\"0\":{\"2386\":1}}],[\"圆环缓冲几何体\",{\"0\":{\"2378\":1,\"2382\":1}}],[\"圆柱缓冲几何体\",{\"0\":{\"2374\":1}}],[\"圆形缓冲几何体\",{\"0\":{\"2370\":1}}],[\"圆周长\",{\"1\":{\"275\":1,\"470\":1}}],[\"圆面积\",{\"1\":{\"275\":1,\"470\":1}}],[\"则此值为true\",{\"1\":{\"2795\":2}}],[\"则调用gl\",{\"1\":{\"2755\":1}}],[\"则调用这个对象的valueof\",{\"1\":{\"628\":1}}],[\"则面投射阴影确定如下\",{\"1\":{\"2674\":1}}],[\"则材质将保持完全不透明\",{\"1\":{\"2667\":1}}],[\"则称实体e是第三范式\",{\"1\":{\"2252\":1}}],[\"则称实体e是第二范式\",{\"1\":{\"2251\":1}}],[\"则称关系模式r是第一范式\",{\"1\":{\"2250\":1}}],[\"则开始练习其他的dhcp服务器\",{\"1\":{\"2210\":1}}],[\"则向所有端口转发也就是泛洪\",{\"1\":{\"2208\":1}}],[\"则进程就死锁了\",{\"1\":{\"2156\":1}}],[\"则进行响应\",{\"1\":{\"1737\":1}}],[\"则广播消息告知其它结点\",{\"1\":{\"2133\":1}}],[\"则符合规则\",{\"1\":{\"2133\":1}}],[\"则到达一定的时间限制才返回\",{\"1\":{\"1737\":1}}],[\"则它需要向服务端发送连接释放请求\",{\"1\":{\"1729\":1}}],[\"则它会忽略该字符以及之后的所有字符\",{\"1\":{\"551\":1}}],[\"则服务端一致等待客户端发送数据\",{\"1\":{\"1727\":1}}],[\"则重新发送所有已经发送\",{\"1\":{\"1724\":1}}],[\"则重新设置定时器\",{\"1\":{\"1724\":1}}],[\"则滑动窗口\",{\"1\":{\"1724\":1}}],[\"则对该报文进行重传\",{\"1\":{\"1717\":1}}],[\"则对字符串进行解析\",{\"1\":{\"551\":1}}],[\"则文档必须位于网站的根目录中\",{\"1\":{\"1677\":1}}],[\"则所有以\",{\"1\":{\"1659\":1}}],[\"则引用次数减\",{\"1\":{\"1646\":1}}],[\"则可能需要一些时间\",{\"1\":{\"1641\":1}}],[\"则可以在实例化渲染器时将之设为false\",{\"1\":{\"2805\":1}}],[\"则可以在任意属性中使用联合类型\",{\"1\":{\"1340\":1}}],[\"则可以使用\",{\"1\":{\"2741\":1}}],[\"则可以直接应用\",{\"1\":{\"2028\":1}}],[\"则可以中断或者延后更新\",{\"1\":{\"1308\":1}}],[\"则可以用最少的改动成本\",{\"1\":{\"903\":1}}],[\"则可以正常获取变量值\",{\"1\":{\"898\":1}}],[\"则必须要用强制删除选项\",{\"1\":{\"1613\":1}}],[\"则表示非原始类型\",{\"1\":{\"1431\":1}}],[\"则表示目前目录位置的上一层目录\",{\"1\":{\"967\":1}}],[\"则递归类型\",{\"1\":{\"1372\":1}}],[\"则允许我们可控地开始这种可能导致\",{\"1\":{\"1312\":1}}],[\"则自适应显示在按钮下方\",{\"1\":{\"1256\":1}}],[\"则显示在上方\",{\"1\":{\"1256\":1}}],[\"则命令\",{\"1\":{\"1086\":4}}],[\"则为true\",{\"1\":{\"2748\":1,\"2752\":1,\"2757\":1}}],[\"则为wss\",{\"1\":{\"1736\":1}}],[\"则为强制储存后离开\",{\"1\":{\"1067\":1}}],[\"则为空字符串\",{\"1\":{\"388\":1}}],[\"则按需求开发构件\",{\"1\":{\"2028\":1}}],[\"则按下p后\",{\"1\":{\"1063\":1}}],[\"则按下n后\",{\"1\":{\"1062\":1}}],[\"则按升序从\",{\"1\":{\"289\":1}}],[\"则光标会向后面移动20个字符距离\",{\"1\":{\"1061\":1}}],[\"则是下载完立即执行\",{\"1\":{\"1707\":1}}],[\"则是进行加密的网络传输\",{\"1\":{\"1677\":1}}],[\"则是文件\",{\"1\":{\"1029\":1}}],[\"则是表示目前所在的目录\",{\"1\":{\"967\":1}}],[\"则仅在左侧的栏位显示该行内容\",{\"1\":{\"1009\":1}}],[\"则不显示这两个文件的差异\",{\"1\":{\"1009\":1}}],[\"则不会渲染材质\",{\"1\":{\"2637\":1}}],[\"则不会应用此值\",{\"1\":{\"2603\":1,\"2604\":1,\"2704\":1,\"2705\":1}}],[\"则不会删除项目\",{\"1\":{\"703\":1}}],[\"则不会触发其他对象上该属性的修改\",{\"1\":{\"484\":1}}],[\"则bbb亦予删除\",{\"1\":{\"979\":1}}],[\"则顺便一并删除\",{\"1\":{\"978\":1}}],[\"则产生错误\",{\"1\":{\"976\":1}}],[\"则建立一个\",{\"1\":{\"976\":1}}],[\"则变换至使用者的\",{\"1\":{\"967\":1}}],[\"则随时可以改\",{\"1\":{\"940\":2}}],[\"则8天内不可改密码\",{\"1\":{\"940\":2}}],[\"则标示出\",{\"1\":{\"930\":1}}],[\"则标准化了异步错误处理\",{\"1\":{\"562\":1}}],[\"则计算并缓存\",{\"1\":{\"902\":1}}],[\"则整个表达式返回\",{\"1\":{\"876\":1}}],[\"则放在\",{\"1\":{\"817\":1}}],[\"则使用\",{\"1\":{\"807\":2}}],[\"则使用逗号作为分隔符\",{\"1\":{\"690\":1}}],[\"则在发送请求之前将向每个资源url传递回调\",{\"1\":{\"2477\":1}}],[\"则在修复存储库之前\",{\"1\":{\"1581\":1}}],[\"则在当前作用域里新增一个\",{\"1\":{\"895\":1}}],[\"则在操作需要数字的上下文中\",{\"1\":{\"805\":1}}],[\"则在调用上述三个方法后\",{\"1\":{\"689\":1}}],[\"则操作按以下方式完成\",{\"1\":{\"802\":1}}],[\"则先将其转换为原始类型\",{\"1\":{\"775\":1}}],[\"则先将其转换为数值\",{\"1\":{\"628\":1}}],[\"则后面的属性会覆盖前面的属性\",{\"1\":{\"755\":1}}],[\"则后面的对象的会覆盖前面对象的属性\",{\"1\":{\"633\":1}}],[\"则后者转为字符串\",{\"1\":{\"668\":1}}],[\"则转换为\",{\"1\":{\"663\":2}}],[\"则直接返回缓存的结果而不用再次发送请求\",{\"1\":{\"1794\":1}}],[\"则直接将其转换为数字\",{\"1\":{\"663\":1}}],[\"则直接执行对应状态的函数\",{\"1\":{\"580\":1}}],[\"则类型标签标志位的长度占三位\",{\"1\":{\"642\":1}}],[\"则类型标签标志位的长度只有一位\",{\"1\":{\"642\":1}}],[\"则比较两个字符串对应的字符编码值\",{\"1\":{\"628\":1}}],[\"则执行数值比较\",{\"1\":{\"628\":1}}],[\"则结果等于\",{\"1\":{\"2583\":1,\"2584\":1}}],[\"则结果并一定会返回布尔值\",{\"1\":{\"624\":1,\"625\":1}}],[\"则结果是零\",{\"1\":{\"620\":1}}],[\"则结果是被除数\",{\"1\":{\"620\":1}}],[\"则结果是+0\",{\"1\":{\"616\":2,\"617\":2}}],[\"则结果是\",{\"1\":{\"616\":2,\"617\":2}}],[\"则结果是infinity或\",{\"1\":{\"618\":1,\"619\":2}}],[\"则结果是infinity\",{\"1\":{\"616\":1,\"617\":1,\"618\":1,\"619\":1}}],[\"则结果是nan\",{\"1\":{\"616\":2,\"617\":2,\"618\":2,\"619\":2,\"620\":3}}],[\"则运算结果也是nan\",{\"1\":{\"617\":1}}],[\"则每左移一位\",{\"1\":{\"611\":1}}],[\"则状态改变必须等待前一个状态改变后再进行改变\",{\"1\":{\"580\":1}}],[\"则只有在所定义的裁剪区域内的像素才会受之后的渲染器影响\",{\"1\":{\"2844\":1}}],[\"则只有在第一个操作数的求值结果为true的情况下才会返回该对象\",{\"1\":{\"624\":1}}],[\"则只需要写一次\",{\"1\":{\"575\":1}}],[\"则只要两个值严格相等\",{\"1\":{\"272\":1}}],[\"则该属性集即为关系模式的候选键\",{\"1\":{\"2246\":1}}],[\"则该主体只能访问位于同一公司数据集的客体或在不同利益组的客体\",{\"1\":{\"2119\":1}}],[\"则该异常没有办法传播到异步操作的发起者\",{\"1\":{\"562\":1}}],[\"则该参数规定的是从字符串的尾部开始算起的位置\",{\"1\":{\"528\":1}}],[\"则\",{\"1\":{\"550\":1,\"551\":1,\"1008\":1,\"1009\":1,\"1586\":1,\"2010\":1,\"2288\":1}}],[\"则要提取的子串包括\",{\"1\":{\"528\":1}}],[\"则从左侧重新开始\",{\"1\":{\"1289\":1}}],[\"则从尾部开始截取\",{\"1\":{\"528\":1}}],[\"则从字符串的首字符开始检索\",{\"1\":{\"520\":1}}],[\"则合两种方式的导出结果是一样的\",{\"1\":{\"452\":1}}],[\"则需要调用该函数\",{\"1\":{\"2307\":1}}],[\"则需要尝试性的将一些中间结点\",{\"1\":{\"2246\":1}}],[\"则需要对空闲内存列表进行一次单向遍历找出大于等于\",{\"1\":{\"1646\":1}}],[\"则需要使用\",{\"1\":{\"1597\":1}}],[\"则需要导入\",{\"1\":{\"1354\":1}}],[\"则需要等它完成之后再触发新\",{\"1\":{\"581\":1}}],[\"则需要首先把它传递给\",{\"1\":{\"536\":1}}],[\"则需要在使用\",{\"1\":{\"495\":1}}],[\"则需要额外的工具\",{\"1\":{\"450\":1}}],[\"则需要通过配置文件告诉引擎查找的位置\",{\"1\":{\"275\":1,\"470\":1}}],[\"则侦听器函数将在处理一次事件后自动删除\",{\"1\":{\"432\":1}}],[\"则默认从标准输入中读取数据\",{\"1\":{\"1014\":1}}],[\"则默认从第一个字节开始\",{\"1\":{\"409\":1}}],[\"则默认为当前目录\",{\"1\":{\"1006\":1}}],[\"则默认为\",{\"1\":{\"389\":1}}],[\"则将canvas设置成活跃render\",{\"1\":{\"2842\":1}}],[\"则将忽略该贴图\",{\"1\":{\"2700\":1}}],[\"则将其转换为布尔值\",{\"1\":{\"795\":1}}],[\"则将其转换为字符串\",{\"1\":{\"779\":1}}],[\"则将其转换为原始类型\",{\"1\":{\"778\":1}}],[\"则将一个或两个非数字转换为数字\",{\"1\":{\"778\":1}}],[\"则将另一个参数转换为字符串并连接字符串\",{\"1\":{\"807\":1}}],[\"则将另一个转换为字符串\",{\"1\":{\"775\":1}}],[\"则将另一个操作数转换为一个数值\",{\"1\":{\"628\":1}}],[\"则将函数加入对应列表中\",{\"1\":{\"580\":1}}],[\"则将它作为要检索的直接量文本模式\",{\"1\":{\"535\":1}}],[\"则将模块公开到全局\",{\"1\":{\"465\":1}}],[\"则将创建该频道\",{\"1\":{\"343\":1}}],[\"则将从负值加上数组的长度而得到的值开始\",{\"1\":{\"287\":1,\"684\":1}}],[\"则返回该值\",{\"1\":{\"2828\":1}}],[\"则返回原始url\",{\"1\":{\"2476\":1}}],[\"则返回原字符串\",{\"1\":{\"293\":1,\"547\":1}}],[\"则返回true\",{\"1\":{\"2310\":1}}],[\"则返回它\",{\"1\":{\"1274\":1}}],[\"则返回空数组\",{\"1\":{\"875\":1}}],[\"则返回第一个操作数\",{\"1\":{\"625\":1}}],[\"则返回第一个操作对象\",{\"1\":{\"625\":1}}],[\"则返回第二个操作数\",{\"1\":{\"624\":2,\"625\":1}}],[\"则返回undefined\",{\"1\":{\"624\":1,\"625\":1}}],[\"则返回nan\",{\"1\":{\"624\":1,\"625\":1}}],[\"则返回null\",{\"1\":{\"624\":1,\"625\":1}}],[\"则返回引用类型的对象\",{\"1\":{\"359\":1}}],[\"则返回\",{\"1\":{\"322\":1,\"482\":1,\"537\":1,\"623\":8,\"644\":1,\"657\":1,\"708\":1,\"797\":2}}],[\"则取一个默认值\",{\"1\":{\"321\":1,\"643\":1}}],[\"则修复了这个问题\",{\"1\":{\"289\":1}}],[\"则一直填充到数组末尾\",{\"1\":{\"287\":1,\"684\":1}}],[\"则会为加载器创建和使用默认全局实例加载器管理器\",{\"1\":{\"2461\":1}}],[\"则会发送一个应答\",{\"1\":{\"1727\":1}}],[\"则会出现下面这种情况\",{\"1\":{\"1727\":1}}],[\"则会直接把这个文件返回\",{\"1\":{\"1698\":1}}],[\"则会递归删除整个目录中的所有子目录和文件\",{\"1\":{\"1613\":1}}],[\"则会先询问是否覆盖旧文件\",{\"1\":{\"1001\":1}}],[\"则会先转换成数字\",{\"1\":{\"282\":1,\"545\":1}}],[\"则会询问是否覆盖\",{\"1\":{\"998\":1}}],[\"则会显示\",{\"1\":{\"986\":1}}],[\"则会将其转换为布尔值\",{\"1\":{\"666\":1}}],[\"则会执行常规的除法运算\",{\"1\":{\"619\":1}}],[\"则会执行常规的乘法运算\",{\"1\":{\"618\":1}}],[\"则会进入\",{\"1\":{\"568\":1}}],[\"则会被清除\",{\"1\":{\"431\":1}}],[\"则会判断是否有\",{\"1\":{\"379\":1}}],[\"则会指向全局对象\",{\"1\":{\"352\":1}}],[\"则会隐式地使用\",{\"1\":{\"324\":1}}],[\"则会保留注释\",{\"1\":{\"317\":1}}],[\"则会截去超出位数的补全字符串\",{\"1\":{\"293\":1,\"547\":1}}],[\"则会返回\",{\"1\":{\"286\":1,\"678\":1}}],[\"则等同于\",{\"1\":{\"282\":1,\"545\":1}}],[\"经济\",{\"1\":{\"2011\":1}}],[\"经济性原则\",{\"1\":{\"1856\":1}}],[\"经常用两次故障之间的时间长度或者出现故障时能够恢复正常的速度来表示\",{\"1\":{\"2005\":1}}],[\"经常变化\",{\"1\":{\"1225\":1}}],[\"经典应用\",{\"1\":{\"1994\":1}}],[\"经典实例\",{\"1\":{\"1949\":1}}],[\"经典脚本中的变量可以在异步函数之外命名为\",{\"1\":{\"467\":1}}],[\"经过评审的srs\",{\"1\":{\"1907\":1}}],[\"经过封装后导出成\",{\"1\":{\"464\":1}}],[\"经过重命名后同一变量可以多次暴露出去\",{\"1\":{\"274\":1,\"469\":1}}],[\"经测试\",{\"1\":{\"109\":1}}],[\"每开启一项功能在开启的时候才会更耗性能\",{\"1\":{\"2737\":1}}],[\"每使用一个桥接元素都要增加一次函数调用\",{\"1\":{\"1820\":1}}],[\"每种产品一个独立工厂\",{\"1\":{\"1752\":1}}],[\"每种视图的构造函数都有一个\",{\"1\":{\"404\":1}}],[\"每条tcp传输连接只能有两个端点\",{\"1\":{\"1713\":1}}],[\"每层都要对数据进行封装\",{\"1\":{\"1688\":1}}],[\"每执行完一小步就让应用逻辑执行一会儿\",{\"1\":{\"1650\":1}}],[\"每台终端都可以保存版本库\",{\"1\":{\"1580\":1}}],[\"每三位为一组\",{\"1\":{\"1040\":1}}],[\"每次取值会调用此方法\",{\"1\":{\"1570\":1}}],[\"每次new\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"每次需要重置正则的lastindex属性\",{\"1\":{\"1551\":1}}],[\"每次匹配到了就往前继续匹配\",{\"1\":{\"1550\":1}}],[\"每次watcher进行更新的时候\",{\"1\":{\"1540\":1}}],[\"每次组件渲染时\",{\"1\":{\"1286\":1}}],[\"每次得到的结果都是重新计算得到的\",{\"1\":{\"902\":1}}],[\"每次\",{\"1\":{\"832\":1,\"1210\":1,\"1236\":1,\"1586\":1}}],[\"每次循环遍历时\",{\"1\":{\"767\":1}}],[\"每次执行一个方法\",{\"1\":{\"374\":1}}],[\"每创建一个\",{\"1\":{\"478\":1}}],[\"每个可用帧都会调用的函数\",{\"1\":{\"2838\":1}}],[\"每个键\",{\"1\":{\"2750\":1}}],[\"每个数据类型的尺寸如下表所示\",{\"1\":{\"2744\":1}}],[\"每个对象都可以使用同一个动画混合器\",{\"1\":{\"2492\":1}}],[\"每个三角面片都和三个顶点的索引相关\",{\"1\":{\"2288\":1}}],[\"每个部分都会在单独的\",{\"1\":{\"2286\":1}}],[\"每个模块实现特定的功能\",{\"1\":{\"2177\":1}}],[\"每个模块有自己的独立作用域\",{\"1\":{\"273\":1}}],[\"每个页的大小相同\",{\"1\":{\"2162\":1}}],[\"每个段中可以由若干页\",{\"1\":{\"2162\":1}}],[\"每个进程中访问临界资源的那段代码成为临界区\",{\"1\":{\"2154\":1}}],[\"每个整数都有一个唯一的证书序列号\",{\"1\":{\"2109\":1}}],[\"每个copy版本都一样\",{\"1\":{\"2089\":1}}],[\"每个节点处理能力相同的情况下\",{\"1\":{\"2077\":1}}],[\"每个微服务都是独立的\",{\"1\":{\"2056\":1}}],[\"每个资源对应一个唯一的资源标识\",{\"1\":{\"2039\":1}}],[\"每个psm都将被变换成代码\",{\"1\":{\"1996\":1}}],[\"每个过滤器都需要解析与合成数据\",{\"1\":{\"1979\":1}}],[\"每个阶段末\",{\"1\":{\"1959\":1}}],[\"每个阶段因果关系紧密相连\",{\"1\":{\"1895\":1}}],[\"每个热舞必须有明确定义的完成标准\",{\"1\":{\"1954\":1}}],[\"每个工作包要有一个交付成果\",{\"1\":{\"1954\":1}}],[\"每个请求都从链的开始处经过\",{\"1\":{\"1838\":1}}],[\"每个处理对象都包含对下一个处理对象的引用\",{\"1\":{\"1835\":1}}],[\"每个方法都会返回一个具体的产品对象\",{\"1\":{\"1755\":1}}],[\"每个提交都列出了修改过的文件\",{\"1\":{\"1631\":1}}],[\"每个开发人员都有自己的存储库\",{\"1\":{\"1581\":1}}],[\"每个人都要先从中央服务器获取最新的版本\",{\"1\":{\"1579\":1}}],[\"每个属性都有自己的dep\",{\"1\":{\"1559\":1,\"1562\":1}}],[\"每个属性都有一个关联的类型\",{\"1\":{\"1410\":1}}],[\"每个组件初始化的时候都会和options选项进行合并\",{\"1\":{\"1484\":1}}],[\"每个项目的设置可以用逗号隔开\",{\"1\":{\"1039\":1}}],[\"每个文件的属性由左边第一部分的\",{\"1\":{\"1029\":1}}],[\"每个文件彼此独立\",{\"1\":{\"442\":1}}],[\"每个值代表了不同的含义\",{\"1\":{\"817\":1}}],[\"每个迭代的属性值被分配给该变量\",{\"1\":{\"719\":1,\"874\":1}}],[\"每个索引都会调用这个函数\",{\"1\":{\"709\":1}}],[\"每个小块都和一个整数关联\",{\"1\":{\"674\":1}}],[\"每个单元包含一个小的\",{\"1\":{\"642\":1}}],[\"每个步骤都是异步的\",{\"1\":{\"596\":1}}],[\"每个功能都分布在各自的模块中\",{\"1\":{\"442\":1}}],[\"每个\",{\"1\":{\"391\":1}}],[\"每个宏任务在执行时\",{\"1\":{\"376\":1}}],[\"每一种衍生产品的处理器的内核都是一样的\",{\"1\":{\"2179\":1}}],[\"每一种视图都是一种构造函数\",{\"1\":{\"402\":1}}],[\"每一子系统有自己的事件收集和处理机制\",{\"1\":{\"1988\":1}}],[\"每一帧分为两个部分\",{\"1\":{\"1692\":1}}],[\"每一项数据都有一个键名和对应的值\",{\"1\":{\"1664\":1}}],[\"每一次更改背景色\",{\"1\":{\"1265\":1}}],[\"每一次更改查询框内容\",{\"1\":{\"1265\":1}}],[\"每一次循环就是一个事件周期\",{\"1\":{\"375\":1}}],[\"每一时刻\",{\"1\":{\"589\":1}}],[\"每一个\",{\"1\":{\"1692\":1,\"2742\":1}}],[\"每一个数据库对应创建它的域名\",{\"1\":{\"1670\":1}}],[\"每一个数据记录都有对应的主键\",{\"1\":{\"1670\":1}}],[\"每一个元素下标都添加\",{\"1\":{\"1534\":1}}],[\"每一个子函数都会拷贝上级的作用域\",{\"1\":{\"901\":1}}],[\"每一个构造函数都有一个原型对象\",{\"1\":{\"484\":1}}],[\"每一个对象数据类型\",{\"1\":{\"481\":1}}],[\"每一份就是\",{\"1\":{\"206\":1}}],[\"每当\",{\"1\":{\"1212\":1,\"1283\":1}}],[\"每当执行一次\",{\"1\":{\"587\":1}}],[\"每当一个\",{\"1\":{\"582\":1}}],[\"每当一个函数执行完成时\",{\"1\":{\"374\":1}}],[\"每当定义一个函数数据类型\",{\"1\":{\"479\":1}}],[\"每当进入某一个阶段的时候\",{\"1\":{\"379\":1}}],[\"每当语音识别捕获一条线时\",{\"1\":{\"340\":1}}],[\"首席结构设计师\",{\"1\":{\"1904\":1}}],[\"首页\",{\"1\":{\"1753\":6,\"1754\":3}}],[\"首部的同步位syn=1\",{\"1\":{\"1726\":1}}],[\"首字母大写\",{\"1\":{\"1431\":1}}],[\"首字母小写\",{\"1\":{\"1431\":1}}],[\"首先算出处理部件每个计算单元的有效计算率\",{\"1\":{\"2170\":1}}],[\"首先需要检测出失配问题\",{\"1\":{\"2028\":1}}],[\"首先需要知道蓝牙设备提供了那些服务\",{\"1\":{\"120\":1}}],[\"首先由客户端向服务器发起请求\",{\"1\":{\"1737\":1}}],[\"首先不可靠性体现在无连接上\",{\"1\":{\"1712\":1}}],[\"首先udp是不需要和tcp一样在发送数据前进行三次握手建立连接的\",{\"1\":{\"1712\":1}}],[\"首先查看\",{\"1\":{\"1699\":1}}],[\"首先判断输入的是一个合法的url还是一个待搜索的关键词\",{\"1\":{\"1678\":1}}],[\"首先判断两个参数是否为函数类型\",{\"1\":{\"580\":1}}],[\"首先是并没有减少主线程的总暂停的时间\",{\"1\":{\"1650\":1}}],[\"首先是标记阶段\",{\"1\":{\"1648\":1}}],[\"首先它需要一个计数器\",{\"1\":{\"1646\":1}}],[\"首先引用计数在引用值为\",{\"1\":{\"1646\":1}}],[\"首先通过\",{\"1\":{\"1372\":1}}],[\"首先定义了\",{\"1\":{\"1366\":1}}],[\"首先定义一个文件上传的\",{\"1\":{\"413\":1}}],[\"首先定义一个\",{\"1\":{\"395\":1}}],[\"首先定义一个拖放区域\",{\"1\":{\"392\":1}}],[\"首先定义一个输入类型为\",{\"1\":{\"391\":1}}],[\"首先使用\",{\"1\":{\"806\":2}}],[\"首先获取\",{\"1\":{\"659\":1}}],[\"首先看最高位\",{\"1\":{\"609\":1}}],[\"首先用\",{\"1\":{\"594\":1,\"596\":1}}],[\"首先执行的是\",{\"1\":{\"505\":1}}],[\"首先要从作用域说起\",{\"1\":{\"501\":1}}],[\"首先会判断两者类型是否相同\",{\"1\":{\"627\":1}}],[\"首先会分配一段指定长度的内存\",{\"1\":{\"400\":1}}],[\"首先会执行一个\",{\"1\":{\"374\":1}}],[\"首先创建了一个\",{\"1\":{\"395\":1}}],[\"首先\",{\"1\":{\"352\":1,\"505\":1,\"1217\":1,\"1430\":1}}],[\"首次支持原生模块化开发\",{\"1\":{\"273\":1}}],[\"虽然全局方法和常量本身并不是单例模式\",{\"1\":{\"1767\":1}}],[\"虽然没有收到确认可能是其他原因的分组丢失\",{\"1\":{\"1720\":1}}],[\"虽然小\",{\"1\":{\"1660\":1}}],[\"虽然它没有中心服务器\",{\"1\":{\"1580\":1}}],[\"虽然最初只用于\",{\"1\":{\"1577\":1}}],[\"虽然这两个页面存在于一个页面中\",{\"1\":{\"861\":1}}],[\"虽然这并不是什么大问题\",{\"1\":{\"836\":1}}],[\"虽然这种方法似乎是给出了预期的结果\",{\"1\":{\"334\":1}}],[\"虽然利用递归能实现一个深拷贝\",{\"1\":{\"765\":1}}],[\"虽然写法不一样\",{\"1\":{\"732\":1}}],[\"虽然concat\",{\"1\":{\"525\":1}}],[\"虽然在可以开发过程中\",{\"1\":{\"503\":1}}],[\"虽然浏览器会在文档卸载时自动释放\",{\"1\":{\"413\":1}}],[\"虽然\",{\"1\":{\"272\":1,\"353\":1,\"500\":1,\"698\":1,\"725\":1,\"1275\":1,\"1286\":1,\"1402\":1}}],[\"表明材质的透明度\",{\"1\":{\"2667\":1}}],[\"表明当前\",{\"1\":{\"2286\":1}}],[\"表明已经收到客户端的报文了\",{\"1\":{\"1728\":1}}],[\"表决阶段\",{\"1\":{\"2234\":1}}],[\"表属性状态转移\",{\"0\":{\"2039\":1}}],[\"表现在浏览器中就是系统卡顿减少\",{\"1\":{\"1769\":1}}],[\"表不能再向对方发送数据\",{\"1\":{\"1729\":1}}],[\"表单验证通过\",{\"1\":{\"1789\":1}}],[\"表单验证类\",{\"1\":{\"1789\":1}}],[\"表单信息不丢失\",{\"1\":{\"1667\":1}}],[\"表单的页面中\",{\"1\":{\"724\":1}}],[\"表达式分析\",{\"1\":{\"1938\":1}}],[\"表达式值为\",{\"1\":{\"1454\":1}}],[\"表达式为\",{\"1\":{\"657\":1}}],[\"表达式\",{\"1\":{\"646\":1,\"836\":1}}],[\"表达式的运算结果\",{\"1\":{\"595\":1}}],[\"表达式的运算结果就是它等到的内容\",{\"1\":{\"595\":1}}],[\"表达式的运算结果取决于它等的是什么\",{\"1\":{\"595\":1}}],[\"表面是针对同一个键\",{\"1\":{\"272\":1}}],[\"表示完整性级别高的主体不能从完整性级别低的客体读取数据\",{\"1\":{\"2118\":1}}],[\"表示完整性级别低的主体不能对完整性级别高的客体写数据\",{\"1\":{\"2118\":1}}],[\"表示集成\",{\"1\":{\"1886\":1}}],[\"表示已经收到了服务端的\",{\"1\":{\"1726\":1}}],[\"表示自己已经收到了客户端的\",{\"1\":{\"1726\":1}}],[\"表示和调度相关\",{\"1\":{\"1541\":1}}],[\"表示生命周期相关功能\",{\"1\":{\"1526\":1}}],[\"表示没有任何类型\",{\"1\":{\"1415\":1}}],[\"表示元素类型\",{\"1\":{\"1363\":1}}],[\"表示对象中的值类型\",{\"1\":{\"1363\":1}}],[\"表示对象中的键类型\",{\"1\":{\"1363\":1}}],[\"表示对请求资源的访问被服务器拒绝了\",{\"1\":{\"817\":1}}],[\"表示一个完整性级别低的主体不能从级别高的客体调用程序或服务\",{\"1\":{\"2118\":1}}],[\"表示一个集合中的一个对象对应另一个集合中的多个对象\",{\"1\":{\"1914\":1}}],[\"表示一个集合中的一个对象对应另一个集合中的一个或多个对象\",{\"1\":{\"1914\":1}}],[\"表示一个集合中的一个对象对应另一个集合中的0个或多个对象\",{\"1\":{\"1914\":1}}],[\"表示一个集合中的一个对象对应另一个集合中一个对象\",{\"1\":{\"1914\":1}}],[\"表示一个\",{\"1\":{\"1363\":1}}],[\"表示组件的属性\",{\"1\":{\"1194\":1}}],[\"表示组件当前的状态\",{\"1\":{\"1194\":1}}],[\"表示正确执行\",{\"1\":{\"1105\":1}}],[\"表示取消权限\",{\"1\":{\"1038\":1}}],[\"表示解压操作\",{\"1\":{\"1025\":1}}],[\"表示详细输出\",{\"1\":{\"1025\":2}}],[\"表示创建新的归档文件\",{\"1\":{\"1025\":1}}],[\"表示大于或小于指定大小\",{\"1\":{\"1006\":1}}],[\"表示在指定天数前或后\",{\"1\":{\"1006\":1}}],[\"表示在每次反复的间隔休眠\",{\"1\":{\"992\":1}}],[\"表示在进程\",{\"1\":{\"992\":1}}],[\"表示在读取文件时发生的错误\",{\"1\":{\"394\":1}}],[\"表示任意一个字符\",{\"1\":{\"973\":1}}],[\"表示匹配的属性\",{\"1\":{\"1550\":1}}],[\"表示匹配一个字符\",{\"1\":{\"973\":1}}],[\"表示匹配任意字符\",{\"1\":{\"973\":1}}],[\"表示传递给函数的初始值\",{\"1\":{\"877\":1}}],[\"表示服务器暂时处于超负载或正在进行停机维护\",{\"1\":{\"817\":1}}],[\"表示服务器端在执行请求时发生了错误\",{\"1\":{\"817\":1}}],[\"表示服务器上无法找到请求的资源\",{\"1\":{\"817\":1}}],[\"表示未授权\",{\"1\":{\"817\":1}}],[\"表示请求报文中存在语法错误\",{\"1\":{\"817\":1}}],[\"表示请求处理成功\",{\"1\":{\"817\":1}}],[\"表示客户端发送附带条件的请求时\",{\"1\":{\"817\":1}}],[\"表示临时性重定向\",{\"1\":{\"817\":1}}],[\"表示永久性重定向\",{\"1\":{\"817\":1}}],[\"表示从客户端发来的请求在服务器端被正常处理了\",{\"1\":{\"817\":1}}],[\"表示是否找到至少一个与指定元素匹配的项\",{\"1\":{\"708\":1}}],[\"表示是否匹配到指定的值\",{\"1\":{\"519\":1}}],[\"表示倒数\",{\"1\":{\"685\":1}}],[\"表示先执行语句\",{\"1\":{\"602\":1}}],[\"表示先递增\",{\"1\":{\"602\":1}}],[\"表示这个函数执行的时间\",{\"1\":{\"596\":1}}],[\"表示这种数据类型占据的字节数\",{\"1\":{\"404\":1}}],[\"表示着这是一个异步调用抛出的堆栈\",{\"1\":{\"578\":1}}],[\"表示操作失败\",{\"1\":{\"563\":1}}],[\"表示成功完成\",{\"1\":{\"563\":1}}],[\"表示进行中\",{\"1\":{\"563\":1}}],[\"表示异步操作的结果\",{\"1\":{\"562\":1}}],[\"表示要使用\",{\"1\":{\"1025\":2}}],[\"表示要查找的文件名\",{\"1\":{\"1014\":1}}],[\"表示要查找的字符串或正则表达式\",{\"1\":{\"1014\":1}}],[\"表示要解析的数字的基数\",{\"1\":{\"550\":1}}],[\"表示要创建数组缓冲区的大小\",{\"1\":{\"398\":1}}],[\"表示给定索引处的\",{\"1\":{\"518\":1}}],[\"表示字符在字符串中的索引值\",{\"1\":{\"517\":1}}],[\"表示字符串补齐之后的长度\",{\"1\":{\"293\":1,\"547\":1}}],[\"表示该模块要用到的其他模块\",{\"1\":{\"449\":1}}],[\"表示调用该模块的模块\",{\"1\":{\"449\":1}}],[\"表示模块是否已经完成加载\",{\"1\":{\"449\":1}}],[\"表示当前模块\",{\"1\":{\"449\":1}}],[\"表示开始读取的字节位置\",{\"1\":{\"411\":1}}],[\"表示将会被放入到\",{\"1\":{\"388\":1}}],[\"表示将原字符串重复n次\",{\"1\":{\"545\":1}}],[\"表示将原字符串重复\",{\"1\":{\"282\":1}}],[\"表示原始的类似文件的数据\",{\"1\":{\"387\":1}}],[\"表示所有剩下的参数\",{\"1\":{\"305\":1}}],[\"表示所有文件适用\",{\"1\":{\"23\":1,\"66\":1}}],[\"表示无论\",{\"1\":{\"300\":1}}],[\"表示加工函数执行时\",{\"1\":{\"286\":1,\"678\":1}}],[\"表示独一无二的值\",{\"1\":{\"268\":1}}],[\"表示的就是第一个有默认值参数之前的普通参数个数\",{\"1\":{\"257\":1}}],[\"表示相对于视口高度\",{\"1\":{\"208\":1}}],[\"表示相对于视口的宽度\",{\"1\":{\"208\":1}}],[\"表示\",{\"1\":{\"30\":1,\"73\":1,\"206\":1,\"394\":1,\"395\":1,\"399\":1,\"606\":2,\"627\":1,\"630\":1,\"1029\":1}}],[\"表示仅\",{\"1\":{\"23\":1,\"66\":1}}],[\"比特币采用了pow\",{\"1\":{\"2133\":1}}],[\"比特币的每笔交易\",{\"1\":{\"2132\":1}}],[\"比特币交易在我国定性为\",{\"1\":{\"2131\":1}}],[\"比特币底层采用了区块链技术\",{\"1\":{\"2131\":1}}],[\"比特币\",{\"1\":{\"2131\":1}}],[\"比起实例不断地销毁和重新实例化\",{\"1\":{\"1769\":1}}],[\"比起那些编译过程只有三个步骤的语言的编译器\",{\"1\":{\"895\":1}}],[\"比较及探寻\",{\"1\":{\"1849\":1}}],[\"比较耗时的情况\",{\"1\":{\"1649\":1}}],[\"比较两个节点的属性\",{\"1\":{\"1478\":1}}],[\"比较两个元素的标签\",{\"1\":{\"1476\":1}}],[\"比较两个文件\",{\"1\":{\"1010\":1}}],[\"比较子目录中的文件\",{\"1\":{\"1009\":1}}],[\"比较大文件时\",{\"1\":{\"1009\":1}}],[\"比较文本文件的异同处\",{\"1\":{\"1008\":1}}],[\"比较\",{\"1\":{\"708\":1,\"1849\":1}}],[\"比较操作符\",{\"0\":{\"626\":1}}],[\"比较字符串和字符时是区分大小写\",{\"1\":{\"289\":1}}],[\"比要提取的子串的最后一个字符在\",{\"1\":{\"530\":1}}],[\"比\",{\"1\":{\"272\":1,\"530\":1}}],[\"比如灯光\",{\"1\":{\"2742\":1}}],[\"比如说数据库\",{\"1\":{\"2078\":1}}],[\"比如说这个模块的\",{\"1\":{\"472\":1}}],[\"比如过程或者函数\",{\"1\":{\"2020\":1}}],[\"比如写文件操作时\",{\"1\":{\"1769\":1}}],[\"比如电话会议\",{\"1\":{\"1712\":1}}],[\"比如把rem转化为px\",{\"1\":{\"1707\":1}}],[\"比如设置了display\",{\"1\":{\"1707\":1}}],[\"比如遇到<\",{\"1\":{\"1704\":1}}],[\"比如遇到settimeout任务\",{\"1\":{\"376\":1}}],[\"比如img标签的src属性\",{\"1\":{\"1703\":1}}],[\"比如安全检查\",{\"1\":{\"1680\":1}}],[\"比如微博的\",{\"1\":{\"1668\":1}}],[\"比如刷新时\",{\"1\":{\"1667\":1}}],[\"比如图片\",{\"1\":{\"1698\":1}}],[\"比如图片内容丰富的电商网站会用它来存储\",{\"1\":{\"1665\":1}}],[\"比如图示\",{\"1\":{\"215\":1}}],[\"比如登陆后刷新\",{\"1\":{\"1658\":1}}],[\"比如一套公开透明的算法\",{\"1\":{\"2132\":1}}],[\"比如一次\",{\"1\":{\"1649\":1}}],[\"比如一个宏任务在执行过程中\",{\"1\":{\"376\":1}}],[\"比如列出以v1\",{\"1\":{\"1617\":1}}],[\"比如数据库连接\",{\"1\":{\"1762\":1,\"1769\":1}}],[\"比如数据是\",{\"1\":{\"1535\":1,\"1564\":1}}],[\"比如数据处理\",{\"1\":{\"1533\":1}}],[\"比如既是\",{\"1\":{\"1460\":1}}],[\"比如声明如下所示的一个类型\",{\"1\":{\"1429\":1}}],[\"比如我们能根据\",{\"1\":{\"1442\":1}}],[\"比如我们再加上只读\",{\"1\":{\"1371\":1}}],[\"比如我们定义一个接口\",{\"1\":{\"1371\":1}}],[\"比如我们此时按下\",{\"1\":{\"1056\":1}}],[\"比如删除\",{\"1\":{\"1006\":1}}],[\"比如你安装一个\",{\"1\":{\"913\":1}}],[\"比如下面的例子\",{\"1\":{\"1443\":1}}],[\"比如下面函数\",{\"1\":{\"902\":1}}],[\"比如下面代码中\",{\"1\":{\"896\":1}}],[\"比如下面这段代码可以将函数的参数默认进行求和操作\",{\"1\":{\"727\":1}}],[\"比如代码\",{\"1\":{\"895\":1}}],[\"比如有一个方法\",{\"1\":{\"849\":1}}],[\"比如借用数组的\",{\"1\":{\"731\":1}}],[\"比如创建一个长度为\",{\"1\":{\"677\":1}}],[\"比如上面提到的重定向\",{\"1\":{\"1699\":1}}],[\"比如上述例子\",{\"1\":{\"594\":1}}],[\"比如上传文件获取进度时\",{\"1\":{\"565\":1}}],[\"比如上传头像展示或者编辑\",{\"1\":{\"414\":1}}],[\"比如还是用上面那段代码\",{\"1\":{\"592\":1}}],[\"比如无法取消超时或消耗性能的异步调用\",{\"1\":{\"565\":1}}],[\"比如函数\",{\"1\":{\"501\":1}}],[\"比如分配给未声明的变量会报错\",{\"1\":{\"467\":1}}],[\"比如要修改某一段数据时\",{\"1\":{\"397\":1}}],[\"比如放置文件将显示在浏览器窗口中\",{\"1\":{\"392\":1}}],[\"比如socket\",{\"1\":{\"379\":1}}],[\"比如promise\",{\"1\":{\"376\":1}}],[\"比如主线程中需要发送数据请求\",{\"1\":{\"371\":1}}],[\"比如第1页就显示为001\",{\"1\":{\"547\":1}}],[\"比如第\",{\"1\":{\"293\":1}}],[\"比如拼接一个\",{\"1\":{\"255\":1}}],[\"比如在watcher更新之前可以执行beforeupdate方法\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"比如在作用域外面声明了变量\",{\"1\":{\"510\":1}}],[\"比如在\",{\"1\":{\"251\":1,\"465\":1,\"470\":1}}],[\"比如内层变量会覆盖外层的同名变量\",{\"1\":{\"248\":1}}],[\"比如对于链接标签\",{\"1\":{\"646\":1}}],[\"比如对于\",{\"1\":{\"226\":1}}],[\"比如用户在input框中输入文字\",{\"1\":{\"224\":1}}],[\"比如修改元素的宽\",{\"1\":{\"223\":1}}],[\"比如修改了颜色或背景色\",{\"1\":{\"223\":1}}],[\"比如\",{\"1\":{\"178\":1,\"181\":1,\"253\":1,\"379\":1,\"395\":3,\"414\":1,\"444\":1,\"445\":1,\"505\":1,\"518\":1,\"589\":1,\"611\":1,\"666\":1,\"677\":1,\"678\":1,\"836\":1,\"844\":1,\"900\":1,\"1356\":1,\"1365\":1,\"1366\":1,\"1373\":1,\"1407\":1,\"1411\":1,\"1417\":1,\"1427\":1,\"1443\":1,\"1549\":1,\"1550\":1,\"1551\":1,\"1563\":1,\"1583\":1,\"1677\":2,\"1699\":2,\"2744\":1}}],[\"比如小于屏幕的高度\",{\"1\":{\"161\":1}}],[\"比如边框\",{\"1\":{\"151\":1}}],[\"键为uniform的名称\",{\"1\":{\"2760\":1}}],[\"键\",{\"0\":{\"2245\":1}}],[\"键可以返回到普通模式\",{\"1\":{\"1057\":1}}],[\"键显示为规定的数字空格\",{\"1\":{\"989\":1}}],[\"键值\",{\"1\":{\"718\":4,\"881\":4}}],[\"键值对储存\",{\"1\":{\"1670\":1}}],[\"键值对\",{\"1\":{\"272\":1,\"1664\":1,\"1670\":1}}],[\"键名\",{\"1\":{\"718\":4,\"881\":4}}],[\"键盘事件\",{\"1\":{\"233\":1}}],[\"检索与提取构件\",{\"1\":{\"2028\":1}}],[\"检索字符串是否包含特定序列\",{\"0\":{\"519\":1}}],[\"检出标签实际上就是在标签的基础上进行其他开发或操作\",{\"1\":{\"1623\":1}}],[\"检出标签\",{\"0\":{\"1623\":1}}],[\"检查这个对象是否为材质material的只读标记\",{\"1\":{\"2655\":1}}],[\"检查表\",{\"1\":{\"2011\":1}}],[\"检查缓存\",{\"0\":{\"1681\":1}}],[\"检查提交\",{\"0\":{\"1603\":1}}],[\"检查备份文件内的每个文件是否正确无误\",{\"1\":{\"1018\":1}}],[\"检查对象中是否含有某个属性时\",{\"1\":{\"482\":1}}],[\"检查是否是文件模块\",{\"1\":{\"454\":1}}],[\"检查是否是核心模块\",{\"1\":{\"454\":1}}],[\"检查\",{\"1\":{\"272\":1,\"919\":1,\"1454\":1}}],[\"检查集合中是否包含某元素\",{\"1\":{\"271\":1}}],[\"检测渲染器是否会因性能过差而创建失败\",{\"1\":{\"2788\":1}}],[\"检测能力\",{\"1\":{\"2121\":1}}],[\"检测\",{\"1\":{\"658\":1,\"2121\":1}}],[\"检测是否在\",{\"1\":{\"1514\":1}}],[\"检测是否有该映射\",{\"1\":{\"272\":1}}],[\"检测是否存在某个值\",{\"1\":{\"271\":1}}],[\"检测附近存在的设备\",{\"1\":{\"116\":1}}],[\"返回顶点着色器和片元着色器的最大可用精度\",{\"1\":{\"2795\":1}}],[\"返回最大可用各向异性\",{\"1\":{\"2795\":1}}],[\"返回与此材质具有相同参数的新材质\",{\"1\":{\"2685\":1}}],[\"返回此实例的json对象表示形式\",{\"1\":{\"2346\":1}}],[\"返回t处的单位向量切线\",{\"1\":{\"2341\":1}}],[\"返回范围\",{\"1\":{\"2340\":1}}],[\"返回一组使用getpointat\",{\"1\":{\"2426\":1}}],[\"返回一组使用getpoint\",{\"1\":{\"2425\":1}}],[\"返回一组divisions+1的点\",{\"1\":{\"2335\":1}}],[\"返回一个包含渲染器绘图缓存宽度和高度\",{\"1\":{\"2830\":1}}],[\"返回一个对象\",{\"1\":{\"2825\":1}}],[\"返回一个对象或不存在\",{\"1\":{\"806\":1}}],[\"返回一个表示当前颜色值的three\",{\"1\":{\"2823\":1}}],[\"返回一个表示当前alpha值的float\",{\"1\":{\"2822\":1}}],[\"返回一个表示数据类型的字符串\",{\"1\":{\"656\":1}}],[\"返回一个能够表示当前摄像机所正视的世界空间方向的vector3对象\",{\"1\":{\"2520\":1}}],[\"返回一个具有和当前相机的属性一样的新的相机\",{\"1\":{\"2518\":1}}],[\"返回一个点处的切线\",{\"1\":{\"2342\":1}}],[\"返回一个分段+1的等距点的数组\",{\"1\":{\"2336\":1}}],[\"返回一个函数\",{\"1\":{\"1464\":1}}],[\"返回一个可变的\",{\"1\":{\"1279\":1}}],[\"返回一个数组\",{\"1\":{\"883\":1,\"885\":1}}],[\"返回一个新数组\",{\"1\":{\"713\":1}}],[\"返回一个新的数组\",{\"1\":{\"702\":1}}],[\"返回一个新的指定大小的\",{\"1\":{\"398\":1}}],[\"返回一个新的\",{\"1\":{\"323\":1,\"576\":1}}],[\"返回一个只包含\",{\"1\":{\"677\":1}}],[\"返回一个类型字符串\",{\"1\":{\"662\":1}}],[\"返回一个结果\",{\"1\":{\"581\":1}}],[\"返回一个\",{\"1\":{\"568\":1,\"646\":1}}],[\"返回一个64位浮点数\",{\"1\":{\"411\":1}}],[\"返回一个32位浮点数\",{\"1\":{\"411\":1}}],[\"返回一个32位整数\",{\"1\":{\"411\":1}}],[\"返回一个无符号的32位整数\",{\"1\":{\"411\":1}}],[\"返回一个无符号的16位整数\",{\"1\":{\"411\":1}}],[\"返回一个无符号的8位整数\",{\"1\":{\"411\":1}}],[\"返回一个16位整数\",{\"1\":{\"411\":1}}],[\"返回一个8位整数\",{\"1\":{\"411\":1}}],[\"返回曲线上给定位置的点\",{\"1\":{\"2333\":1}}],[\"返回已索引的\",{\"1\":{\"2322\":1}}],[\"返回代表该\",{\"1\":{\"2321\":1}}],[\"返回缓存相关的\",{\"1\":{\"2309\":1}}],[\"返回指定名称的\",{\"1\":{\"2308\":1}}],[\"返回风格\",{\"0\":{\"1981\":1}}],[\"返回大于等于\",{\"1\":{\"1646\":1}}],[\"返回生成的ast\",{\"1\":{\"1550\":1}}],[\"返回虚拟\",{\"1\":{\"1521\":1}}],[\"返回never的函数必须存在无法达到的终点\",{\"1\":{\"1416\":1}}],[\"返回两个参数\",{\"1\":{\"1273\":1}}],[\"返回属性\",{\"1\":{\"885\":1}}],[\"返回数组元素\",{\"1\":{\"879\":1}}],[\"返回数组的键值对\",{\"1\":{\"879\":2}}],[\"返回数组的元素\",{\"1\":{\"879\":1}}],[\"返回数组的索引值\",{\"1\":{\"879\":2}}],[\"返回包含渲染器输出canvas的宽度和高度\",{\"1\":{\"2832\":1}}],[\"返回包含符合条件的元素的数组\",{\"1\":{\"879\":1}}],[\"返回包含对象键名和键值的数组\",{\"1\":{\"295\":1,\"882\":1}}],[\"返回包含对象键名的数组\",{\"1\":{\"295\":1,\"882\":1}}],[\"返回包含对象键值的数组\",{\"1\":{\"295\":1,\"882\":1}}],[\"返回符合条件的元素的索引位置\",{\"1\":{\"878\":1}}],[\"返回符合条件的元素\",{\"1\":{\"878\":1}}],[\"返回来的数据再渲染页面\",{\"1\":{\"813\":1}}],[\"返回原始类型值\",{\"1\":{\"806\":1}}],[\"返回出最后函数的参数的累加结果\",{\"1\":{\"727\":1}}],[\"返回空数组\",{\"1\":{\"677\":1}}],[\"返回该数组的字符串形式\",{\"1\":{\"662\":1}}],[\"返回某个字符串对象的原始值\",{\"1\":{\"543\":1}}],[\"返回的原始值不会转换为数字\",{\"1\":{\"807\":1}}],[\"返回的类型是类数组对象\",{\"1\":{\"724\":1}}],[\"返回的结果是\",{\"1\":{\"723\":1}}],[\"返回的结果是一致的\",{\"1\":{\"678\":1}}],[\"返回的结果中会以空字符串来表示\",{\"1\":{\"689\":1}}],[\"返回的就是\",{\"1\":{\"597\":1}}],[\"返回的实例就会变成\",{\"1\":{\"577\":1}}],[\"返回的实例已经与\",{\"1\":{\"360\":1}}],[\"返回的子串不会多于这个参数指定的数组\",{\"1\":{\"526\":1}}],[\"返回的是数组的元素\",{\"1\":{\"879\":1}}],[\"返回的是第一个返回条件的值的索引值\",{\"1\":{\"878\":1,\"879\":1}}],[\"返回的是第一个符合条件的值\",{\"1\":{\"878\":1,\"879\":1}}],[\"返回的是第一个匹配的元素的索引\",{\"1\":{\"709\":1}}],[\"返回的是第一个匹配的元素\",{\"1\":{\"709\":1}}],[\"返回的是查找元素在数组中的索引值\",{\"1\":{\"708\":1}}],[\"返回的是\",{\"1\":{\"455\":1,\"723\":1}}],[\"返回的\",{\"1\":{\"445\":1,\"725\":1}}],[\"返回undefined\",{\"1\":{\"413\":1}}],[\"返回当前使用设备像素比\",{\"1\":{\"2831\":1}}],[\"返回当前视口\",{\"1\":{\"2829\":1}}],[\"返回当前视图从对应的arraybuffer对象的哪个字节开始\",{\"1\":{\"410\":1}}],[\"返回当前webgl环境\",{\"1\":{\"2824\":1}}],[\"返回当前\",{\"1\":{\"2585\":1}}],[\"返回当前胶片上图像的宽\",{\"1\":{\"2584\":1}}],[\"返回当前胶片上图像的高\",{\"1\":{\"2583\":1}}],[\"返回当前已经解析到的浮点数\",{\"1\":{\"551\":1}}],[\"返回当前的\",{\"1\":{\"272\":1}}],[\"返回当前的集合\",{\"1\":{\"271\":1}}],[\"返回占据的内存字节长度\",{\"1\":{\"410\":1}}],[\"返回对应的arraybuffer对象\",{\"1\":{\"410\":1}}],[\"返回值的类型也是数字\",{\"1\":{\"1442\":1}}],[\"返回值类型不变\",{\"1\":{\"1422\":1}}],[\"返回值永远是十进制值\",{\"1\":{\"663\":1}}],[\"返回值穿透\",{\"1\":{\"569\":1}}],[\"返回值是\",{\"1\":{\"518\":1}}],[\"返回值\",{\"1\":{\"398\":1,\"537\":1,\"873\":1}}],[\"返回新创建的对象\",{\"1\":{\"359\":1}}],[\"返回新的对象\",{\"1\":{\"262\":1}}],[\"返回结果的模式\",{\"1\":{\"1671\":1}}],[\"返回结果包括\",{\"1\":{\"656\":1}}],[\"返回结果\",{\"1\":{\"323\":1,\"576\":1,\"577\":1}}],[\"返回结果为\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"返回字符串对象本身\",{\"1\":{\"544\":1}}],[\"返回字符串\",{\"1\":{\"320\":2}}],[\"返回键名对象的键值\",{\"1\":{\"272\":1}}],[\"返回\",{\"1\":{\"271\":1,\"272\":2,\"407\":2,\"537\":1,\"551\":1,\"587\":1,\"695\":1}}],[\"返回布尔值\",{\"1\":{\"271\":2,\"272\":1}}],[\"返回集合的元素个数\",{\"1\":{\"271\":2}}],[\"导航\",{\"1\":{\"1312\":1}}],[\"导航到新页面\",{\"1\":{\"1312\":1}}],[\"导航到标记a处\",{\"1\":{\"989\":1}}],[\"导致订阅者关注的事件过多\",{\"1\":{\"1805\":1}}],[\"导致接收方通告一个零窗口\",{\"1\":{\"1723\":1}}],[\"导致无法赋值给\",{\"1\":{\"1416\":1}}],[\"导致\",{\"1\":{\"1210\":1}}],[\"导致只有最后一个调用的状态更新生效\",{\"1\":{\"1197\":1}}],[\"导致存在跨域问题\",{\"1\":{\"859\":1}}],[\"导致了可以使用\",{\"1\":{\"657\":1}}],[\"导致了很多与直觉不太相符的代码\",{\"1\":{\"500\":1}}],[\"导致在代码的不同部分使用了共享全局变量\",{\"1\":{\"445\":1}}],[\"导致调用\",{\"1\":{\"269\":1}}],[\"导出方法\",{\"1\":{\"1168\":1}}],[\"导出加减的方法\",{\"1\":{\"1167\":1}}],[\"导出内容可以是变量\",{\"1\":{\"469\":1}}],[\"导出default\",{\"1\":{\"276\":1}}],[\"导出默认的变量或方法可以有名字\",{\"1\":{\"274\":1,\"469\":1}}],[\"导出\",{\"0\":{\"469\":1},\"1\":{\"274\":1,\"443\":1,\"469\":1}}],[\"导出模块\",{\"0\":{\"274\":1}}],[\"导入辅助工具函数\",{\"1\":{\"1454\":1}}],[\"导入名称可以自定义\",{\"1\":{\"470\":1}}],[\"导入多个函数并使用\",{\"1\":{\"452\":1}}],[\"导入导出复合用法\",{\"0\":{\"276\":1}}],[\"导入模块必须了解这种模式才能正确使用它\",{\"1\":{\"334\":1}}],[\"导入模块位置可以是相对路径也可以是绝对路径\",{\"1\":{\"275\":1,\"470\":1}}],[\"导入模块\",{\"0\":{\"275\":1}}],[\"导入默认模块时不需要大括号\",{\"1\":{\"274\":1,\"469\":1}}],[\"导入\",{\"0\":{\"470\":1},\"1\":{\"274\":1,\"443\":1,\"469\":1,\"1204\":1}}],[\"导入body\",{\"1\":{\"193\":1}}],[\"导入cros模块\",{\"1\":{\"192\":1}}],[\"导入express框架\",{\"1\":{\"191\":1}}],[\"基准程序法是目前一致承认的测试系统性能的较好方法\",{\"1\":{\"2170\":1}}],[\"基准程序法\",{\"1\":{\"2170\":1}}],[\"基线配置项\",{\"1\":{\"1961\":1}}],[\"基于物理的透明度\",{\"1\":{\"2737\":1}}],[\"基于物理的渲染\",{\"1\":{\"2717\":1}}],[\"基于摄像机通过场景\",{\"1\":{\"2558\":1}}],[\"基于网络方式\",{\"1\":{\"2194\":1}}],[\"基于文件方式\",{\"1\":{\"2194\":1}}],[\"基于内存方式\",{\"1\":{\"2194\":1}}],[\"基于nat的负载均衡将一个外部ip地址映射为多个ip地址\",{\"1\":{\"2077\":1}}],[\"基于nat的负载均衡\",{\"1\":{\"2077\":1}}],[\"基于多租户技术实现\",{\"1\":{\"2049\":1}}],[\"基于数据的组装\",{\"1\":{\"2028\":1}}],[\"基于功能的组装\",{\"1\":{\"2028\":1}}],[\"基于关键字的检索\",{\"1\":{\"2028\":1}}],[\"基于中间件的软件可以方便地进行管理\",{\"1\":{\"2025\":1}}],[\"基于场景的方式\",{\"1\":{\"2011\":1}}],[\"基于度量的方式\",{\"1\":{\"2011\":1}}],[\"基于调查问卷\",{\"1\":{\"2011\":1}}],[\"基于规则的系统构成\",{\"1\":{\"1992\":1}}],[\"基于架构的软件开发方法\",{\"0\":{\"1973\":1}}],[\"基于函数的规范和设计\",{\"1\":{\"1906\":1}}],[\"基于构件的软件工程\",{\"0\":{\"1900\":1}}],[\"基于计算机的系统\",{\"1\":{\"1865\":1}}],[\"基于字节流的传输层通信协议\",{\"1\":{\"1713\":1}}],[\"基于上面的特点\",{\"1\":{\"1663\":1,\"1667\":1}}],[\"基于\",{\"1\":{\"1071\":1,\"1332\":1}}],[\"基于回调的异步编程会有一个很现实的问题\",{\"1\":{\"562\":1}}],[\"基于以上特性\",{\"1\":{\"268\":1}}],[\"基本场景\",{\"0\":{\"2499\":1}}],[\"基本关系\",{\"1\":{\"2225\":1}}],[\"基本交换原理\",{\"0\":{\"2208\":1}}],[\"基本规则\",{\"1\":{\"1995\":1}}],[\"基本过程\",{\"0\":{\"1935\":1}}],[\"基本步骤\",{\"1\":{\"1682\":1}}],[\"基本选项\",{\"1\":{\"1454\":1}}],[\"基本类型\",{\"1\":{\"1341\":1}}],[\"基本类型可以精确表示的最大整数是\",{\"1\":{\"320\":1}}],[\"基本用法\",{\"0\":{\"1193\":1,\"1294\":1}}],[\"基本配置文件\",{\"0\":{\"1151\":1}}],[\"基本的命令有\",{\"1\":{\"1058\":1}}],[\"基本的系统命令\",{\"1\":{\"913\":1}}],[\"基本概念\",{\"0\":{\"836\":1,\"1576\":1,\"1998\":1,\"2176\":1,\"2183\":1}}],[\"基本上\",{\"1\":{\"663\":1}}],[\"基本数据类型保存在内存中\",{\"1\":{\"652\":1}}],[\"基本数据类型\",{\"1\":{\"652\":1}}],[\"基本数据类型和引用数据类型\",{\"0\":{\"652\":1}}],[\"基本使用\",{\"0\":{\"394\":1}}],[\"基本\",{\"1\":{\"341\":1}}],[\"基础网格材质\",{\"0\":{\"2628\":1}}],[\"基础线条材质\",{\"0\":{\"2624\":1}}],[\"基础设施即服务\",{\"1\":{\"2049\":1}}],[\"基础日志\",{\"0\":{\"1625\":1}}],[\"基础操作\",{\"0\":{\"1598\":1}}],[\"基础类型\",{\"0\":{\"1396\":1}}],[\"基础定义\",{\"0\":{\"1296\":1}}],[\"基础使用\",{\"0\":{\"1234\":1,\"1243\":1}}],[\"基础用法\",{\"0\":{\"1216\":1,\"1265\":1,\"1273\":1}}],[\"基础流程\",{\"0\":{\"1167\":1}}],[\"基础\",{\"0\":{\"139\":1,\"912\":1,\"1077\":1,\"1172\":1,\"2892\":1}}],[\"且将视口从\",{\"1\":{\"2845\":1}}],[\"且e中没有非主属性传递依赖于码时\",{\"1\":{\"2252\":1}}],[\"且每一个非主属性完全依赖主键\",{\"1\":{\"2251\":1}}],[\"且这两个或多个维度都需要进行扩展\",{\"1\":{\"1820\":1}}],[\"且把服务端的序列号值\",{\"1\":{\"1728\":1}}],[\"且把客户端的序列号值\",{\"1\":{\"1728\":1}}],[\"且指定一个序列号\",{\"1\":{\"1728\":1}}],[\"且不应被修改\",{\"1\":{\"2294\":1}}],[\"且不同浏览器的\",{\"1\":{\"1646\":1}}],[\"且不能改变指向\",{\"1\":{\"262\":1}}],[\"且已经复制了10行数据\",{\"1\":{\"1063\":1}}],[\"且在取代前显示提示字符给用户确认confirm是否需要取代\",{\"1\":{\"1062\":1}}],[\"且均为rwx的三个参数的组合\",{\"1\":{\"1029\":1}}],[\"且原本runoob2目录不存在\",{\"1\":{\"976\":1}}],[\"且剩余的元素不会再进行检测\",{\"1\":{\"876\":2}}],[\"且另一方为\",{\"1\":{\"627\":1}}],[\"且可以用在任意的\",{\"1\":{\"390\":1}}],[\"且设定时间到达后执行\",{\"1\":{\"382\":1}}],[\"且因为箭头函数没有构造函数\",{\"1\":{\"362\":1}}],[\"且\",{\"1\":{\"262\":1,\"379\":1}}],[\"构件控制模型和构件数据模型的假设存在冲突引起的失配\",{\"1\":{\"2028\":1}}],[\"构件组装失配问题\",{\"1\":{\"2028\":1}}],[\"构件库中若无可修改使用的构件\",{\"1\":{\"2028\":1}}],[\"构件应用的语境或任意其他特征\",{\"1\":{\"2028\":1}}],[\"构件使用者只需要知道构件的接口\",{\"1\":{\"2025\":1}}],[\"构件对外发声作用或构件间的交互\",{\"1\":{\"2025\":1}}],[\"构件标准\",{\"0\":{\"2021\":1}}],[\"构件和原子构件之间的区别在于大多数原子构件永远都不会被单独部署\",{\"1\":{\"2020\":1}}],[\"构件和连接件都有一个顶部和一个底部\",{\"1\":{\"1995\":1}}],[\"构件框架是一种专门的体系结构\",{\"1\":{\"2020\":1}}],[\"构件系统体系结构由一组平台决策\",{\"1\":{\"2020\":1}}],[\"构件特征\",{\"0\":{\"2020\":1}}],[\"构件是一组通常需要同时部署的原子构件\",{\"1\":{\"2020\":1}}],[\"构件是一个独立发布的功能部分\",{\"1\":{\"2019\":1}}],[\"构件是某系统中有价值的\",{\"1\":{\"2019\":1}}],[\"构件概念\",{\"0\":{\"2019\":1}}],[\"构件与中间件技术\",{\"0\":{\"2017\":1}}],[\"构件之间不允许直连\",{\"1\":{\"1995\":1}}],[\"构件的功能与行为\",{\"1\":{\"2028\":1}}],[\"构件的复用\",{\"0\":{\"2028\":1}}],[\"构件的地步要连接到连接件的顶部\",{\"1\":{\"1995\":1}}],[\"构件的顶部要连接到连接件的底部\",{\"1\":{\"1995\":1}}],[\"构件的组装\",{\"1\":{\"1900\":1}}],[\"构件放弃了对系统计算的控制\",{\"1\":{\"1987\":1}}],[\"构件\",{\"0\":{\"2018\":1},\"1\":{\"1972\":1}}],[\"构件图与包图\",{\"0\":{\"1920\":1}}],[\"构件总是二进制形式的\",{\"1\":{\"1900\":1}}],[\"构建设计要求经验丰富的架构师\",{\"1\":{\"1899\":1}}],[\"构建组装模型\",{\"0\":{\"1899\":1}}],[\"构建会被暂停\",{\"1\":{\"1707\":1}}],[\"构建树\",{\"0\":{\"1705\":1}}],[\"构建和渲染\",{\"1\":{\"1332\":1}}],[\"构建\",{\"1\":{\"1332\":1,\"1855\":1}}],[\"构建的\",{\"1\":{\"450\":1}}],[\"构建过程或辅助工具的变动\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"构造方法\",{\"0\":{\"2463\":1}}],[\"构造\",{\"1\":{\"1901\":1}}],[\"构造器模式\",{\"0\":{\"1740\":1},\"2\":{\"1742\":1}}],[\"构造器功能一致\",{\"1\":{\"678\":1}}],[\"构造器\",{\"0\":{\"678\":1,\"2529\":1,\"2550\":1,\"2567\":1,\"2598\":1,\"2618\":1,\"2696\":1,\"2745\":1,\"2776\":1,\"2787\":1,\"2851\":1}}],[\"构造出来的\",{\"1\":{\"495\":1}}],[\"构造完成时生成\",{\"1\":{\"399\":1}}],[\"构造函数传入的数据参数增加了数组的判断\",{\"1\":{\"1535\":1}}],[\"构造函数传入要保存的元素\",{\"1\":{\"677\":1}}],[\"构造函数时\",{\"1\":{\"677\":1}}],[\"构造函数根据参数长度的不同\",{\"1\":{\"677\":1}}],[\"构造函数接受一个函数作为参数\",{\"1\":{\"566\":1}}],[\"构造函数会被调用两次\",{\"1\":{\"489\":1}}],[\"构造函数继承\",{\"0\":{\"486\":1}}],[\"构造函数创建多个对象\",{\"1\":{\"484\":1}}],[\"构造函数中不传入参数\",{\"1\":{\"2417\":1}}],[\"构造函数中\",{\"1\":{\"478\":1}}],[\"构造函数中的\",{\"1\":{\"262\":1}}],[\"构造函数就是一个普通的函数\",{\"1\":{\"478\":1}}],[\"构造函数模式中拥有了类和实例的概念\",{\"1\":{\"478\":1}}],[\"构造函数模式的目的就是为了创建一个自定义类\",{\"1\":{\"478\":1}}],[\"构造函数可以分配指定字节数量的缓冲区\",{\"1\":{\"398\":1}}],[\"构造函数来创建\",{\"1\":{\"389\":1}}],[\"构造函数来创建一个\",{\"1\":{\"388\":1,\"394\":1}}],[\"构造函数的\",{\"1\":{\"359\":1}}],[\"构造函数的上下文都将加入\",{\"1\":{\"343\":1}}],[\"构造函数this指向实例对象\",{\"1\":{\"356\":1,\"357\":1}}],[\"构造函数\",{\"0\":{\"359\":1,\"478\":1,\"677\":1,\"1772\":1,\"2279\":1,\"2328\":1,\"2416\":1,\"2509\":1,\"2634\":1},\"1\":{\"262\":1,\"343\":1,\"455\":1,\"478\":1,\"536\":1,\"1389\":1,\"1390\":1,\"1391\":1}}],[\"传播时延\",{\"1\":{\"2201\":1}}],[\"传统数据库中日志的思想\",{\"1\":{\"2069\":1}}],[\"传统数据库中快照的思想\",{\"1\":{\"2069\":1}}],[\"传统编译器\",{\"1\":{\"1980\":1}}],[\"传统的点对点通信\",{\"1\":{\"2214\":1}}],[\"传统的\",{\"1\":{\"255\":1}}],[\"传感器\",{\"1\":{\"1890\":1}}],[\"传送的信息只属于人们感兴趣的领域\",{\"1\":{\"1887\":1}}],[\"传送给所有使用者的警告讯息\",{\"1\":{\"919\":1}}],[\"传输上述数据所需的开销\",{\"1\":{\"2277\":1}}],[\"传输波特率可调整\",{\"1\":{\"2186\":1}}],[\"传输时间\",{\"1\":{\"2142\":1}}],[\"传输数码化\",{\"1\":{\"1889\":1}}],[\"传输数据报文时是很高效的\",{\"1\":{\"1712\":1}}],[\"传输协议把数据当作⼀条独⽴的消息在⽹上传输\",{\"1\":{\"1731\":1}}],[\"传输回来的其实都是一些二进制字节数据\",{\"1\":{\"1702\":1}}],[\"传输层负载均衡\",{\"1\":{\"2077\":1}}],[\"传输层会发起一条到达服务器的\",{\"1\":{\"1690\":1}}],[\"传输层\",{\"0\":{\"1690\":1}}],[\"传空数组和非空数组\",{\"1\":{\"1241\":1}}],[\"传的值需要动态变化\",{\"1\":{\"1222\":1}}],[\"传一个报文段\",{\"1\":{\"1724\":1}}],[\"传一个\",{\"1\":{\"863\":1}}],[\"传给后端\",{\"1\":{\"859\":1}}],[\"传给每个方法的函数接收三个参数\",{\"1\":{\"711\":1}}],[\"传给了\",{\"1\":{\"355\":1}}],[\"传递的\",{\"1\":{\"1200\":1}}],[\"传递到定时器中\",{\"1\":{\"903\":1}}],[\"传递参数\",{\"0\":{\"729\":1}}],[\"传递至少三个参数\",{\"1\":{\"703\":1}}],[\"传递两个参数\",{\"1\":{\"703\":1}}],[\"传递给片元着色器\",{\"1\":{\"2742\":1}}],[\"传递给已经通过\",{\"1\":{\"1212\":1}}],[\"传递给\",{\"1\":{\"863\":1,\"1236\":1,\"1309\":1}}],[\"传递给后面\",{\"1\":{\"567\":1}}],[\"传递给函数的值一般用\",{\"1\":{\"363\":1}}],[\"传入第二个参数\",{\"0\":{\"1195\":1}}],[\"传入的vm\",{\"1\":{\"1528\":1}}],[\"传入的参数就是一个对象\",{\"1\":{\"1533\":1}}],[\"传入的参数将按照顺序依次成为新数组的第\",{\"1\":{\"677\":1}}],[\"传入的参数等信息\",{\"1\":{\"352\":1}}],[\"传入的方法中\",{\"1\":{\"565\":1}}],[\"传入参数\",{\"1\":{\"260\":1,\"596\":1}}],[\"等异步队列清空之后再把标志变为false\",{\"1\":{\"1542\":1}}],[\"等属性值\",{\"1\":{\"1509\":1}}],[\"等价类划分\",{\"1\":{\"1939\":1}}],[\"等价\",{\"1\":{\"1442\":3}}],[\"等价于\",{\"1\":{\"260\":4,\"327\":2,\"1417\":1}}],[\"等钩子的输入特别有用\",{\"1\":{\"1210\":1}}],[\"等依赖发生改变时\",{\"1\":{\"1210\":1}}],[\"等的依赖项\",{\"1\":{\"1209\":1}}],[\"等环境变量写入对应的环境变量配置文件\",{\"1\":{\"1116\":1}}],[\"等号左右两边不能有空格\",{\"1\":{\"1093\":1}}],[\"等等\",{\"1\":{\"1072\":1}}],[\"等浏览器内存无法跨域访问\",{\"1\":{\"855\":1}}],[\"等浏览器可以通过proto得到\",{\"1\":{\"484\":1}}],[\"等扩展\",{\"1\":{\"817\":1}}],[\"等收到\",{\"1\":{\"813\":1}}],[\"等方法将数据类型显式转换为数字\",{\"1\":{\"796\":1}}],[\"等方法也不能改变箭头函数中\",{\"1\":{\"261\":1}}],[\"等函数\",{\"1\":{\"773\":1}}],[\"等拥有迭代器对象的集合\",{\"1\":{\"719\":1,\"874\":1}}],[\"等可迭代的数据结构等\",{\"1\":{\"719\":1}}],[\"等着\",{\"1\":{\"595\":1}}],[\"等状态改变时再调用\",{\"1\":{\"581\":1}}],[\"等到执行到具体的某一句时才会生效\",{\"1\":{\"501\":1}}],[\"等特性\",{\"1\":{\"473\":1,\"2006\":1}}],[\"等待时间为等待读写的扇区转到磁头下方所用的时间\",{\"1\":{\"2142\":1}}],[\"等待时间\",{\"1\":{\"2142\":1}}],[\"等待客户端的确认\",{\"1\":{\"1728\":1}}],[\"等待服务端发出的连接释放报文段\",{\"1\":{\"1728\":1}}],[\"等待服务端的确认\",{\"1\":{\"1728\":1}}],[\"等待下一轮垃圾回收\",{\"1\":{\"1646\":1}}],[\"等待所有同步代码执行完毕后再执行\",{\"1\":{\"1493\":1}}],[\"等待的是一个表达式\",{\"1\":{\"595\":1}}],[\"等待promise解决\",{\"1\":{\"594\":1}}],[\"等待它们加载\",{\"1\":{\"463\":1}}],[\"等待当前执行栈所有同步代码执行完成之后\",{\"1\":{\"375\":1}}],[\"等对象构成的\",{\"1\":{\"388\":1}}],[\"等请求数据返回之后\",{\"1\":{\"371\":1}}],[\"等于\",{\"1\":{\"355\":1,\"627\":1,\"806\":1}}],[\"等于或大于指定的最小长度\",{\"1\":{\"293\":1,\"547\":1}}],[\"等效指令速度法\",{\"1\":{\"2170\":1}}],[\"等效\",{\"1\":{\"290\":1}}],[\"等\",{\"1\":{\"286\":1,\"337\":1,\"343\":1,\"378\":1,\"380\":1,\"386\":1,\"656\":1,\"678\":1,\"774\":1,\"913\":1,\"1006\":1,\"1125\":1,\"1227\":1,\"1258\":1,\"1431\":1,\"1521\":1,\"1641\":1,\"1762\":1}}],[\"等值\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"等同于\",{\"1\":{\"269\":1,\"276\":1,\"322\":3,\"329\":3,\"575\":1,\"644\":3,\"851\":1}}],[\"等高布局是指子元素在父元素中高度相等的布局方式\",{\"1\":{\"160\":1}}],[\"等高布局\",{\"0\":{\"160\":1}}],[\"更精确和逼真的结果\",{\"1\":{\"2717\":1}}],[\"更稳定\",{\"1\":{\"2081\":1}}],[\"更倾向于分布式部署\",{\"1\":{\"2044\":1}}],[\"更好复用\",{\"1\":{\"1859\":1}}],[\"更好应变\",{\"1\":{\"1859\":1}}],[\"更好的灵活性\",{\"1\":{\"1855\":1}}],[\"更换具体工厂类\",{\"1\":{\"1755\":1}}],[\"更适合用来存储生命周期和它同步的会话级别的信息\",{\"1\":{\"1668\":1}}],[\"更清楚实际类型的情况\",{\"1\":{\"1443\":1}}],[\"更了解某个值的详细信息\",{\"1\":{\"1443\":1}}],[\"更宽泛的类型\",{\"1\":{\"1431\":1}}],[\"更新立体摄像机\",{\"1\":{\"2558\":1}}],[\"更新摄像机投影矩阵\",{\"1\":{\"2544\":1,\"2588\":1}}],[\"更新累积段距离缓存\",{\"1\":{\"2339\":1}}],[\"更新异常\",{\"1\":{\"2244\":1}}],[\"更新一次\",{\"1\":{\"2208\":1}}],[\"更新阶段\",{\"1\":{\"1847\":1}}],[\"更新方法改一下\",{\"1\":{\"1540\":1}}],[\"更新的改写\",{\"0\":{\"1540\":1}}],[\"更新的时候\",{\"1\":{\"1244\":2}}],[\"更新老值\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"更新之前\",{\"1\":{\"1486\":1}}],[\"更新子节点\",{\"0\":{\"1478\":1}}],[\"更新属性\",{\"1\":{\"1476\":1}}],[\"更新这个属性\",{\"1\":{\"1301\":1}}],[\"更新为\",{\"1\":{\"1300\":1}}],[\"更新状态\",{\"0\":{\"1298\":1}}],[\"更新时\",{\"1\":{\"1236\":1}}],[\"更新期间\",{\"1\":{\"1234\":1}}],[\"更新后的值会实时反应到调用\",{\"1\":{\"1222\":1}}],[\"更新在调用\",{\"1\":{\"1203\":1}}],[\"更新是异步批处理的\",{\"1\":{\"1203\":1}}],[\"更新\",{\"1\":{\"1203\":1,\"1559\":1,\"1560\":1}}],[\"更新所有软件命令\",{\"1\":{\"1073\":1}}],[\"更新现有的文件\",{\"1\":{\"1018\":1}}],[\"更新循环变量\",{\"1\":{\"888\":1}}],[\"更方便使用者逐页阅读\",{\"1\":{\"985\":1}}],[\"更改剪裁平面的行为\",{\"1\":{\"2646\":1}}],[\"更改加密的级别将对安全性和性能产生影响\",{\"1\":{\"2010\":1}}],[\"更改系统报表模块\",{\"1\":{\"2007\":1}}],[\"更改为禁止任何更改\",{\"1\":{\"1418\":1}}],[\"更改\",{\"1\":{\"1259\":1}}],[\"更改被应用并且组件已被重新渲染后\",{\"1\":{\"1255\":1}}],[\"更改文件属性\",{\"0\":{\"1030\":1}}],[\"更改压缩字尾字符串\",{\"1\":{\"1021\":1}}],[\"更改登录目录\",{\"1\":{\"951\":1}}],[\"更改引用对象属性的时间\",{\"1\":{\"20\":1,\"63\":1}}],[\"更多细节请参考\",{\"1\":{\"2744\":1}}],[\"更多配置信息\",{\"1\":{\"1153\":1}}],[\"更多实用字符界面\",{\"1\":{\"909\":1}}],[\"更多的是把他放在一个会返回期约的函数调用面前\",{\"1\":{\"594\":1}}],[\"更重要的是\",{\"1\":{\"569\":1}}],[\"更可靠的检查属性是否直接设置在对象上的方法\",{\"1\":{\"331\":1}}],[\"更简明\",{\"1\":{\"322\":1,\"644\":1}}],[\"更合适\",{\"1\":{\"272\":1}}],[\"更加简洁\",{\"0\":{\"260\":1}}],[\"箭头函数和方法上\",{\"1\":{\"594\":1}}],[\"箭头函数中的\",{\"1\":{\"362\":1}}],[\"箭头函数会根据其声明的地方来决定\",{\"1\":{\"362\":1}}],[\"箭头函数的\",{\"1\":{\"360\":1,\"362\":1}}],[\"箭头函数没有自己的\",{\"1\":{\"263\":1}}],[\"箭头函数不会创建自己的\",{\"1\":{\"261\":1}}],[\"箭头函数有以下特点\",{\"1\":{\"259\":1}}],[\"箭头函数\",{\"0\":{\"259\":1,\"362\":1}}],[\"箭头函数参数只有一个时是否要有小括号\",{\"1\":{\"20\":1,\"63\":1}}],[\"串行总线\",{\"0\":{\"2185\":1,\"2186\":1}}],[\"串口\",{\"1\":{\"2176\":1}}],[\"串联系统与并联系统\",{\"0\":{\"2091\":1}}],[\"串\",{\"1\":{\"255\":1}}],[\"语言无关\",{\"1\":{\"2044\":1}}],[\"语言不会把那些表达式识别为类型保护\",{\"1\":{\"1436\":1}}],[\"语言的程序码文件时\",{\"1\":{\"1009\":1}}],[\"语言输出的就是全局变量\",{\"1\":{\"505\":1}}],[\"语言中\",{\"1\":{\"255\":1}}],[\"语句覆盖最弱\",{\"1\":{\"1939\":1}}],[\"语句贯穿\",{\"1\":{\"1454\":1}}],[\"语句的\",{\"1\":{\"1454\":1}}],[\"语句的条件部分\",{\"1\":{\"666\":1}}],[\"语句推断函数返回的类型\",{\"1\":{\"1442\":1}}],[\"语句括号中的那部分\",{\"1\":{\"898\":1}}],[\"语句后面\",{\"1\":{\"898\":1}}],[\"语句及\",{\"1\":{\"898\":1}}],[\"语句包含了两个声明\",{\"1\":{\"895\":1}}],[\"语句创建一个循环来迭代可迭代的对象\",{\"1\":{\"719\":1,\"874\":1}}],[\"语句\",{\"1\":{\"467\":1,\"575\":3,\"719\":1,\"898\":1}}],[\"语句会在异步或者同步可迭代对象上创建一个迭代循环\",{\"1\":{\"299\":1,\"891\":1}}],[\"语法无效\",{\"1\":{\"1705\":1}}],[\"语法或提交哈希来检查过去的提交\",{\"1\":{\"1603\":1}}],[\"语法树\",{\"0\":{\"1550\":1}}],[\"语法糖\",{\"1\":{\"1466\":1}}],[\"语法做类型断言\",{\"1\":{\"1443\":1}}],[\"语法转换\",{\"1\":{\"1334\":1}}],[\"语法为\",{\"1\":{\"1041\":1}}],[\"语法错误\",{\"1\":{\"895\":1}}],[\"语法分析\",{\"1\":{\"895\":2}}],[\"语法形式如下\",{\"1\":{\"695\":1}}],[\"语法很复杂\",{\"1\":{\"460\":1}}],[\"语法\",{\"0\":{\"449\":1,\"458\":1,\"468\":1,\"919\":1,\"923\":1,\"926\":1,\"928\":1,\"930\":1,\"944\":1,\"947\":1,\"950\":1,\"953\":1,\"956\":1,\"959\":1,\"962\":1,\"968\":1,\"970\":1,\"972\":1,\"975\":1,\"978\":1,\"981\":1,\"983\":1,\"986\":1,\"989\":1,\"992\":1,\"995\":1,\"998\":1,\"1001\":1,\"1003\":1,\"1006\":1,\"1009\":1,\"1012\":1,\"1014\":1,\"1018\":1,\"1021\":1,\"1024\":1,\"1032\":1,\"1035\":1,\"1038\":1,\"1072\":1,\"1444\":1,\"1445\":1,\"1446\":1},\"1\":{\"756\":1}}],[\"语音识别开始时调用\",{\"1\":{\"340\":1}}],[\"语义化不明显\",{\"1\":{\"596\":1}}],[\"语义化书写html代码\",{\"1\":{\"219\":1}}],[\"语义化<\",{\"1\":{\"215\":1}}],[\"语义化的web页面一方面可以让机器在更少的人类干预情况下收集并研究网页的信息\",{\"1\":{\"213\":1}}],[\"语义化\",{\"0\":{\"212\":1},\"2\":{\"221\":1}}],[\"语义化与seo\",{\"0\":{\"211\":1}}],[\"模型加载器\",{\"1\":{\"2454\":1}}],[\"模型蕴涵的网络安全能力主要是预警能力\",{\"1\":{\"2121\":1}}],[\"模型与视图完全分离\",{\"1\":{\"2032\":1}}],[\"模型表示业务数据和业务逻辑\",{\"1\":{\"2031\":1}}],[\"模型\",{\"1\":{\"2011\":1,\"2031\":2}}],[\"模板方法模式是一种典型的通过封装变化提高系统扩展性的设计模式\",{\"1\":{\"1829\":1}}],[\"模板方法模式由两部分组成\",{\"1\":{\"1829\":1}}],[\"模板方法模式\",{\"0\":{\"1829\":1,\"1832\":1},\"2\":{\"1831\":1,\"1834\":1}}],[\"模板转化核心方法\",{\"0\":{\"1549\":1}}],[\"模板编译\",{\"2\":{\"1555\":1}}],[\"模板编译入口\",{\"0\":{\"1548\":1}}],[\"模板编译原理\",{\"0\":{\"1547\":1}}],[\"模板字符串中可以放任意的表达式\",{\"1\":{\"255\":1}}],[\"模板字符串中嵌入变量\",{\"1\":{\"255\":1}}],[\"模板字符串是增强版的字符串\",{\"1\":{\"255\":1}}],[\"模板字符串\",{\"0\":{\"255\":1}}],[\"模拟webgl环境的恢复\",{\"1\":{\"2821\":1}}],[\"模拟webgl环境的丢失\",{\"1\":{\"2820\":1}}],[\"模拟ip核\",{\"1\":{\"2179\":1}}],[\"模拟生命周期方法\",{\"1\":{\"1259\":1}}],[\"模拟网络请求\",{\"1\":{\"1188\":1}}],[\"模拟画板功能\",{\"1\":{\"829\":1}}],[\"模拟数组的一个类数组\",{\"1\":{\"731\":1}}],[\"模拟求差集\",{\"1\":{\"271\":1}}],[\"模拟求交集\",{\"1\":{\"271\":1}}],[\"模赋值操作符\",{\"1\":{\"638\":1}}],[\"模式下\",{\"1\":{\"2856\":1}}],[\"模式分解\",{\"0\":{\"2254\":1}}],[\"模式方案\",{\"0\":{\"2043\":1}}],[\"模式\",{\"0\":{\"443\":1},\"1\":{\"1511\":1}}],[\"模式匹配\",{\"1\":{\"251\":1}}],[\"模块间的接口\",{\"1\":{\"1940\":1}}],[\"模块间具有透明性\",{\"1\":{\"442\":1}}],[\"模块功能\",{\"1\":{\"1940\":1}}],[\"模块测试\",{\"1\":{\"1940\":1}}],[\"模块之间接口的一致性\",{\"1\":{\"1938\":1}}],[\"模块之间又能够互相调用和通信\",{\"1\":{\"442\":1}}],[\"模块四要素\",{\"0\":{\"1933\":1}}],[\"模块独立性原型\",{\"1\":{\"1930\":1}}],[\"模块话模式最初被定义为在传统软件工程中为类提供私有和公共封装的一种方法\",{\"1\":{\"1817\":1}}],[\"模块模式\",{\"0\":{\"1817\":1},\"2\":{\"1819\":1}}],[\"模块名到基于\",{\"1\":{\"1454\":1}}],[\"模块名称默认为模块加载器请求的指定脚本的路径\",{\"1\":{\"458\":1}}],[\"模块解析选项\",{\"1\":{\"1454\":1}}],[\"模块在其自身的作用域里执行\",{\"1\":{\"1354\":1}}],[\"模块和声明文件\",{\"0\":{\"1352\":1},\"2\":{\"1359\":1}}],[\"模块和经典\",{\"1\":{\"467\":1}}],[\"模块呢\",{\"1\":{\"474\":1}}],[\"模块是一组类和可能的非面向对象的结构提\",{\"1\":{\"2020\":1}}],[\"模块是一项实验性技术\",{\"1\":{\"474\":1}}],[\"模块是\",{\"1\":{\"1354\":1}}],[\"模块是在编译时就确定依赖关系\",{\"1\":{\"467\":1}}],[\"模块规范\",{\"1\":{\"474\":1}}],[\"模块方案\",{\"1\":{\"473\":1}}],[\"模块暴露特定上下文的元数据属性的对象\",{\"1\":{\"472\":1}}],[\"模块中\",{\"1\":{\"470\":1}}],[\"模块中的\",{\"1\":{\"467\":1}}],[\"模块支持两种类型的导出\",{\"1\":{\"469\":1}}],[\"模块有一个词法顶级作用域\",{\"1\":{\"467\":1}}],[\"模块默认启用严格模式\",{\"1\":{\"467\":1}}],[\"模块格式\",{\"1\":{\"465\":2}}],[\"模块由两部分组成\",{\"1\":{\"465\":1}}],[\"模块管理\",{\"1\":{\"465\":1}}],[\"模块需要被导出的\",{\"1\":{\"464\":1}}],[\"模块依赖\",{\"1\":{\"464\":1}}],[\"模块完整的\",{\"1\":{\"464\":1}}],[\"模块位于\",{\"1\":{\"463\":1}}],[\"模块的输入来源和输出去向都是同一个调用者\",{\"1\":{\"1933\":1}}],[\"模块的\",{\"1\":{\"464\":1,\"474\":1}}],[\"模块的库\",{\"1\":{\"463\":1}}],[\"模块的继承\",{\"0\":{\"277\":1}}],[\"模块内容定义\",{\"1\":{\"465\":1}}],[\"模块内容\",{\"1\":{\"463\":2}}],[\"模块内再发生变化不会影响到输出的值\",{\"1\":{\"449\":1}}],[\"模块导入\",{\"0\":{\"453\":1}}],[\"模块导出\",{\"0\":{\"452\":1}}],[\"模块导出值\",{\"1\":{\"449\":1}}],[\"模块加载顺序按照代码引入的顺序\",{\"1\":{\"449\":1}}],[\"模块可以被多次引用\",{\"1\":{\"449\":1}}],[\"模块可以等待资源加载\",{\"1\":{\"334\":1}}],[\"模块识别符\",{\"1\":{\"449\":1}}],[\"模块文件名\",{\"1\":{\"449\":1}}],[\"模块并没有被内置到\",{\"1\":{\"445\":1}}],[\"模块系统\",{\"1\":{\"444\":1}}],[\"模块\",{\"0\":{\"463\":1,\"466\":1},\"1\":{\"443\":1,\"448\":1,\"455\":2,\"463\":1,\"464\":1,\"465\":1,\"467\":2,\"473\":1}}],[\"模块包含三个部分\",{\"1\":{\"443\":1}}],[\"模块概述\",{\"0\":{\"441\":1}}],[\"模块化设计即将一个较大的程序按功能划分成若干程序模块\",{\"1\":{\"2177\":1}}],[\"模块化规范\",{\"1\":{\"448\":1}}],[\"模块化的浏览器\",{\"1\":{\"473\":1}}],[\"模块化的贯彻执行离不开相应的约定\",{\"1\":{\"444\":1}}],[\"模块化的特点如下\",{\"1\":{\"442\":1}}],[\"模块化是一种将系统分离成独立功能部分的方法\",{\"1\":{\"442\":1}}],[\"模块化\",{\"0\":{\"273\":1}}],[\"值拷贝\",{\"1\":{\"2767\":1}}],[\"值对产生一行定义语句\",{\"1\":{\"2750\":1}}],[\"值0\",{\"1\":{\"2667\":1}}],[\"值用来实现模块功能的程序\",{\"1\":{\"1933\":1}}],[\"值模块把输入转换成输出所作的工作\",{\"1\":{\"1933\":1}}],[\"值就是对应的值\",{\"1\":{\"1528\":1}}],[\"值得注意的是\",{\"1\":{\"1520\":1}}],[\"值发生变化时显示一个通知\",{\"1\":{\"1251\":1}}],[\"值中\",{\"1\":{\"863\":1}}],[\"值后\",{\"1\":{\"863\":1}}],[\"值不能转化为数值\",{\"1\":{\"604\":1}}],[\"值不能与其他类型数据进行运算\",{\"1\":{\"268\":1}}],[\"值是字符串\",{\"1\":{\"2678\":1}}],[\"值是相应的\",{\"1\":{\"2282\":1}}],[\"值是\",{\"1\":{\"505\":1}}],[\"值的描述需要通过\",{\"1\":{\"316\":1}}],[\"值为0\",{\"1\":{\"2788\":1}}],[\"值为\",{\"1\":{\"312\":1,\"360\":1}}],[\"值会转化为字符串\",{\"1\":{\"295\":1,\"882\":1}}],[\"值\",{\"0\":{\"1046\":1,\"1222\":1},\"1\":{\"263\":1,\"272\":3,\"297\":1,\"355\":1,\"363\":2,\"394\":1,\"516\":1,\"518\":1,\"580\":1,\"695\":1,\"711\":1,\"849\":1,\"863\":1,\"903\":1,\"1044\":1,\"1045\":1,\"1659\":1,\"2672\":1,\"2760\":1}}],[\"值等\",{\"1\":{\"251\":1}}],[\"值计算\",{\"0\":{\"207\":1}}],[\"引用未定义的变量\",{\"1\":{\"1938\":1}}],[\"引用计数的缺点想必大家也都很明朗了\",{\"1\":{\"1646\":1}}],[\"引用计数则不会释放\",{\"1\":{\"1646\":1}}],[\"引用计数\",{\"1\":{\"1646\":1}}],[\"引用计数算法的优点我们对比标记清除来看就会清晰很多\",{\"1\":{\"1646\":1}}],[\"引用计数算法\",{\"1\":{\"1646\":1}}],[\"引用不同的对象会被当作不同的值\",{\"1\":{\"1236\":1}}],[\"引用命令和转义的含义\",{\"1\":{\"1089\":1}}],[\"引用的地址改到\",{\"1\":{\"862\":1}}],[\"引用类型会变成空对象\",{\"1\":{\"763\":1}}],[\"引用数据类型保存在堆内存中\",{\"1\":{\"652\":1}}],[\"引用数据类型在栈中存储了指针\",{\"1\":{\"651\":1}}],[\"引用数据类型存储在堆\",{\"1\":{\"651\":1}}],[\"引用数据类型\",{\"1\":{\"493\":1,\"650\":1,\"652\":1}}],[\"引用\",{\"1\":{\"437\":1,\"464\":1,\"465\":1,\"640\":1}}],[\"引用移动到本地范围\",{\"1\":{\"434\":1}}],[\"引用回调中的某个对象是防止对象被垃圾收集的最常见方法\",{\"1\":{\"430\":1}}],[\"引用文件的文件大小\",{\"1\":{\"391\":1}}],[\"引用文件的文件名\",{\"1\":{\"391\":1}}],[\"引用文件的最后修改日期\",{\"1\":{\"391\":1}}],[\"引用文件最后修改日期\",{\"1\":{\"391\":1}}],[\"引入代理对象会增加代码的复杂性\",{\"1\":{\"1797\":1}}],[\"引入工厂模式会增加代码的复杂度和结构\",{\"1\":{\"1751\":1}}],[\"引入watcher的概念\",{\"1\":{\"1486\":1,\"1558\":1}}],[\"引入的一个新特性\",{\"1\":{\"1203\":1}}],[\"引入的第八种基本类型\",{\"1\":{\"320\":1}}],[\"引入对应的方法\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"引入相关的hooks\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"引入一个数组\",{\"1\":{\"767\":1}}],[\"引入标准的\",{\"1\":{\"575\":1}}],[\"引入\",{\"0\":{\"462\":1},\"1\":{\"1269\":1,\"1856\":1}}],[\"引入了\",{\"1\":{\"321\":1,\"322\":1,\"334\":1,\"507\":1,\"643\":1,\"644\":1}}],[\"引入插件并使用插件\",{\"1\":{\"83\":1}}],[\"引擎为了进行更好的优化\",{\"1\":{\"1641\":1}}],[\"引擎比较广泛采用的就是可达性中的标记清除算法\",{\"1\":{\"1641\":1}}],[\"引擎眼里\",{\"1\":{\"895\":1}}],[\"引擎要复杂的多\",{\"1\":{\"895\":1}}],[\"引擎进行编译的步骤和传统的编译语言非常相似\",{\"1\":{\"895\":1}}],[\"引擎首先会修剪前导和后置空格\",{\"1\":{\"797\":1}}],[\"引擎首先从宏任务队列中取出第一个任务\",{\"1\":{\"376\":1}}],[\"引擎在执行代码的时候\",{\"1\":{\"895\":1}}],[\"引擎在执行代码之前会对代码进行编译分析\",{\"1\":{\"249\":1}}],[\"引擎在编译时隐式完成\",{\"1\":{\"772\":1}}],[\"引擎将返回关键字后面的内容给外部\",{\"1\":{\"589\":1}}],[\"引擎就会抛出一个异常\",{\"1\":{\"895\":1}}],[\"引擎就同时支持了变量提升和块级作用域\",{\"1\":{\"510\":1}}],[\"引擎就已经知道声明的变量和函数\",{\"1\":{\"249\":1}}],[\"引擎\",{\"0\":{\"1641\":1},\"1\":{\"510\":1,\"1641\":1,\"1646\":3}}],[\"引擎会先对其进行编译并创建执行上下文\",{\"1\":{\"508\":1}}],[\"引擎会搜集所有的变量声明\",{\"1\":{\"501\":1}}],[\"引擎是通过变量环境实现函数级作用域的\",{\"1\":{\"508\":1}}],[\"引擎并不会把\",{\"1\":{\"507\":1}}],[\"引擎便开始执行\",{\"1\":{\"505\":1}}],[\"引擎用\",{\"1\":{\"500\":1}}],[\"引擎把变量的声明部分和函数的声明部分提升到代码开头的行为\",{\"1\":{\"500\":1}}],[\"引擎中的一个后台进程\",{\"1\":{\"425\":1}}],[\"引擎中名为\",{\"1\":{\"249\":1}}],[\"引擎的查找过程就是作用域链\",{\"1\":{\"895\":1}}],[\"引擎的\",{\"1\":{\"378\":1}}],[\"引擎线程去执行\",{\"1\":{\"371\":1}}],[\"引擎只会在执行到词法声明和赋值时才进行初始化\",{\"1\":{\"249\":1}}],[\"输出变得越来越难阅读\",{\"1\":{\"1630\":1}}],[\"输出变量值\",{\"0\":{\"1095\":1}}],[\"输出如下内容\",{\"1\":{\"2218\":1}}],[\"输出如下\",{\"1\":{\"1625\":1}}],[\"输出提示信息\",{\"1\":{\"1106\":1}}],[\"输出命令\",{\"1\":{\"1078\":1}}],[\"输出的格式类似\",{\"1\":{\"1009\":1}}],[\"输出的就是函数自身\",{\"1\":{\"723\":1}}],[\"输出文件名和当前行的行号\",{\"1\":{\"986\":1}}],[\"输出2\",{\"1\":{\"902\":2}}],[\"输出最后的一维数组\",{\"1\":{\"734\":1}}],[\"输出\",{\"1\":{\"275\":1,\"302\":2,\"303\":1,\"304\":1,\"354\":4,\"662\":3,\"901\":1,\"902\":6,\"1033\":1,\"1753\":3}}],[\"输出模板经常使用的是字符串拼接的形式\",{\"1\":{\"255\":1}}],[\"输出结果如下\",{\"1\":{\"284\":2,\"381\":1,\"382\":1,\"403\":3,\"405\":1,\"406\":1,\"587\":1,\"705\":2,\"706\":1,\"718\":1}}],[\"输出结果\",{\"1\":{\"248\":5,\"249\":1,\"252\":5,\"253\":6,\"254\":4,\"257\":3,\"279\":3,\"280\":3,\"281\":3,\"282\":8,\"293\":2,\"295\":3,\"328\":2,\"500\":2,\"507\":1,\"511\":1,\"515\":1,\"517\":5,\"520\":3,\"521\":2,\"522\":3,\"523\":3,\"524\":3,\"525\":2,\"526\":4,\"528\":5,\"529\":4,\"530\":5,\"532\":1,\"533\":2,\"535\":2,\"537\":1,\"539\":1,\"545\":8,\"547\":2,\"550\":9,\"551\":5,\"596\":1,\"679\":3,\"801\":1,\"873\":3,\"874\":1,\"875\":2,\"876\":2,\"877\":3,\"878\":2,\"879\":3,\"881\":1,\"882\":3,\"884\":1}}],[\"输入和输出\",{\"1\":{\"1933\":1}}],[\"输入url过程\",{\"0\":{\"1675\":1}}],[\"输入以下命令就可以查看有关当前提交的详细信息\",{\"1\":{\"1603\":1}}],[\"输入时\",{\"1\":{\"1106\":1}}],[\"输入字符\",{\"1\":{\"1057\":1}}],[\"输入字符时触发\",{\"1\":{\"233\":1}}],[\"输入模式\",{\"0\":{\"1057\":1}}],[\"输入n表示取消该操作\",{\"1\":{\"1001\":1}}],[\"输入y表示直接覆盖\",{\"1\":{\"1001\":1}}],[\"输入如下命令\",{\"1\":{\"999\":1}}],[\"输入相应的内容\",{\"1\":{\"864\":1,\"866\":1}}],[\"输入框的值直接与\",{\"1\":{\"1235\":1}}],[\"输入框用于上传文件\",{\"1\":{\"395\":1}}],[\"输入框最多只能输入六个字符\",{\"1\":{\"239\":1}}],[\"输入消息\",{\"1\":{\"343\":1}}],[\"输入法编辑器\",{\"1\":{\"233\":1}}],[\"之外的效果\",{\"1\":{\"2741\":1}}],[\"之下节约了资源\",{\"1\":{\"1737\":1}}],[\"之类的系统下有效\",{\"1\":{\"1018\":1}}],[\"之间\",{\"1\":{\"550\":1,\"2536\":1}}],[\"之间的所有不相同文件的差异对比\",{\"1\":{\"1634\":1}}],[\"之间的区别在于\",{\"1\":{\"1601\":1}}],[\"之间的通信\",{\"1\":{\"867\":1}}],[\"之间的整数\",{\"1\":{\"518\":1}}],[\"之间的小数\",{\"1\":{\"282\":2,\"545\":2}}],[\"之内打印出来的值是\",{\"1\":{\"507\":1}}],[\"之后将直接使用rendertarget\",{\"1\":{\"2799\":1}}],[\"之后将内容附加到textfile3文档里\",{\"1\":{\"984\":1}}],[\"之后涉及到计算属性就不一样了\",{\"1\":{\"1561\":1}}],[\"之后调用render函数可以使用call改变this\",{\"1\":{\"1549\":1}}],[\"之后再一起调用\",{\"1\":{\"1540\":1}}],[\"之后再把运算结果转化为\",{\"1\":{\"606\":1}}],[\"之后咱们还可以在这里检测到数组改变了之后从而触发视图更新的操作\",{\"1\":{\"1535\":1}}],[\"之后我们就可以使用\",{\"1\":{\"1365\":1}}],[\"之后的值不会再调用执行函数\",{\"1\":{\"878\":2}}],[\"之后拿着正则处理好的结果重新在外层包裹括号\",{\"1\":{\"740\":1}}],[\"之后代码变得更简洁了\",{\"1\":{\"736\":1}}],[\"之后就可以使用以下命令退出错误查找过程\",{\"1\":{\"1637\":1}}],[\"之后就可以用git\",{\"1\":{\"16\":1,\"59\":1}}],[\"之后就保存该实例返回的数据\",{\"1\":{\"582\":1}}],[\"之后则执行\",{\"1\":{\"582\":1}}],[\"之后都从缓存中直接读取结果\",{\"1\":{\"449\":1}}],[\"之后\",{\"1\":{\"318\":1,\"320\":1,\"353\":1,\"434\":1,\"505\":1,\"903\":1,\"1728\":2}}],[\"之后不会改变\",{\"1\":{\"261\":1}}],[\"之中\",{\"1\":{\"255\":1}}],[\"之前国产浏览器限制\",{\"1\":{\"1680\":1}}],[\"之前被同步地执行\",{\"1\":{\"1203\":1}}],[\"之前被添加到音频源\",{\"1\":{\"338\":1}}],[\"之前变量\",{\"1\":{\"903\":1}}],[\"之前只有全局作用域和函数作用域两种\",{\"1\":{\"895\":1}}],[\"之前的方法则会忽略这个空位\",{\"1\":{\"679\":1}}],[\"之前的javascript文档中找不到变量提升\",{\"1\":{\"500\":1}}],[\"之前首先调用\",{\"1\":{\"495\":1}}],[\"之前可以通过\",{\"1\":{\"297\":1}}],[\"之前\",{\"1\":{\"250\":1,\"256\":1,\"289\":1,\"307\":1,\"316\":1,\"318\":1,\"331\":1,\"445\":1,\"474\":1,\"500\":1,\"501\":1,\"681\":1}}],[\"之前是不支持块级作用域的\",{\"1\":{\"501\":1}}],[\"之前是不存在块级作用域的说法的\",{\"1\":{\"248\":1}}],[\"之前是存在变量提升的\",{\"1\":{\"249\":1}}],[\"至于如何回收\",{\"1\":{\"1646\":1}}],[\"至于它指向的数据结构就不可控制了\",{\"1\":{\"247\":1}}],[\"至第\",{\"1\":{\"677\":1}}],[\"至少对应一个\",{\"1\":{\"1914\":1}}],[\"至少有如下\",{\"1\":{\"681\":1}}],[\"至少包含了一个执行循环来检测任务队列中是否有新任务\",{\"1\":{\"375\":1}}],[\"至少会渲染一次\",{\"1\":{\"223\":1}}],[\"保护可能遭到不同方式危害的数据完整性和数据相关属性完整性\",{\"1\":{\"2128\":1}}],[\"保护能力\",{\"1\":{\"2121\":1}}],[\"保护\",{\"1\":{\"2121\":1}}],[\"保护代理可以用来限制对敏感操作或数据的访问权限\",{\"1\":{\"1794\":1}}],[\"保护代理\",{\"1\":{\"1794\":1}}],[\"保密\",{\"1\":{\"2103\":1}}],[\"保障阶段\",{\"1\":{\"1854\":1}}],[\"保持函数依赖分解\",{\"0\":{\"2255\":1}}],[\"保持与主库一致\",{\"1\":{\"2080\":1}}],[\"保持模块的大小适中\",{\"1\":{\"1930\":1}}],[\"保持界面的一致性\",{\"1\":{\"1928\":1}}],[\"保持数据的同步性\",{\"1\":{\"1804\":1}}],[\"保持\",{\"1\":{\"1311\":1}}],[\"保持不变的情况下有一个新的引用\",{\"1\":{\"1211\":1}}],[\"保留源文件的权限\",{\"1\":{\"998\":1}}],[\"保留\",{\"1\":{\"940\":1}}],[\"保证业务的共存和过渡\",{\"1\":{\"2215\":1}}],[\"保证了快速3d渲染能力\",{\"1\":{\"2179\":1}}],[\"保证不会有大量的线程对数据库一次性进行读写\",{\"1\":{\"2071\":1}}],[\"保证一个类只有一个实例\",{\"1\":{\"1762\":1}}],[\"保证代码的执行顺序为本轮事件循环的末尾\",{\"1\":{\"580\":2}}],[\"保证的并不是变量的值不能改动\",{\"1\":{\"247\":1}}],[\"保存用户传入的对象\",{\"1\":{\"1491\":1}}],[\"保存上一次的\",{\"0\":{\"1283\":1}}],[\"保存状态但不触发渲染\",{\"0\":{\"1282\":1}}],[\"保存并退出\",{\"1\":{\"1067\":1}}],[\"保存当前文件\",{\"1\":{\"1067\":1}}],[\"保存文件并退出\",{\"1\":{\"1058\":1}}],[\"保存文件\",{\"1\":{\"1056\":1,\"1058\":1}}],[\"保存原来的文件名称及时间戳记\",{\"1\":{\"1021\":1}}],[\"保存第一个被压缩文件所在磁盘的卷册名称\",{\"1\":{\"1018\":1}}],[\"保存\",{\"1\":{\"1018\":1}}],[\"保存了全局作用域\",{\"1\":{\"902\":1}}],[\"保存源数据\",{\"1\":{\"767\":1}}],[\"保存的数据长期存在\",{\"1\":{\"1663\":1}}],[\"保存的就是一个具体的值\",{\"1\":{\"652\":1}}],[\"保存的只是一个指针\",{\"1\":{\"247\":1}}],[\"保存前一个promise的this\",{\"1\":{\"581\":1}}],[\"保存定时器的id\",{\"1\":{\"430\":1}}],[\"布线和服务的部署方案\",{\"1\":{\"2218\":1}}],[\"布尔字面量只包含\",{\"1\":{\"1429\":1}}],[\"布尔字面量分别拥有与其值一样的字面量类型\",{\"1\":{\"1427\":1}}],[\"布尔字面量类型\",{\"1\":{\"1427\":1}}],[\"布尔转换\",{\"0\":{\"789\":1}}],[\"布尔操作符是很有用的\",{\"1\":{\"622\":1}}],[\"布尔操作符\",{\"0\":{\"622\":1}}],[\"布尔值转数字\",{\"1\":{\"663\":1}}],[\"布尔值会先转为数字\",{\"1\":{\"616\":1}}],[\"布尔值\",{\"0\":{\"783\":1,\"790\":1,\"791\":1,\"792\":1,\"793\":1,\"798\":1},\"1\":{\"247\":1,\"272\":1,\"449\":1,\"653\":1,\"772\":1}}],[\"布局的宽\",{\"1\":{\"201\":1}}],[\"布局视口的宽度限制\",{\"1\":{\"201\":1}}],[\"布局视口\",{\"1\":{\"201\":2}}],[\"布局错乱或者出现横向滚动条的情况\",{\"1\":{\"200\":1}}],[\"布局\",{\"1\":{\"226\":1},\"2\":{\"163\":1,\"176\":1}}],[\"布局规则\",{\"0\":{\"149\":1}}],[\"^>\",{\"1\":{\"1550\":1}}],[\"^$\",{\"1\":{\"658\":1}}],[\"^c\",{\"1\":{\"610\":1}}],[\"^\",{\"0\":{\"610\":1},\"1\":{\"239\":2,\"606\":1,\"610\":6,\"1088\":1,\"1335\":1,\"1550\":6,\"1789\":1}}],[\"很难找到一个合适的\",{\"1\":{\"1983\":1}}],[\"很难理解\",{\"1\":{\"637\":1}}],[\"很长时间才能看到结果\",{\"1\":{\"1895\":1}}],[\"很庞大\",{\"1\":{\"1753\":1}}],[\"很可能并不会立即关闭socket\",{\"1\":{\"1729\":1}}],[\"很显然\",{\"1\":{\"1460\":1}}],[\"很容易和原始类型\",{\"1\":{\"1430\":1}}],[\"很明显后者的性能开销更小\",{\"1\":{\"1475\":1}}],[\"很明显该异常信息是说变量\",{\"1\":{\"1448\":1}}],[\"很明显该方案并不是一个好的方案\",{\"1\":{\"1366\":1}}],[\"很明显使用泛型\",{\"1\":{\"1366\":1}}],[\"很像\",{\"1\":{\"1341\":1}}],[\"很有用\",{\"1\":{\"1282\":1}}],[\"很有可能会出现值重复的情况\",{\"1\":{\"269\":1}}],[\"很幸运地得到\",{\"1\":{\"482\":1}}],[\"很简单\",{\"1\":{\"392\":1}}],[\"很多库都运用到了ast\",{\"1\":{\"1549\":1}}],[\"很多时候我们不知道对象属性的\",{\"1\":{\"849\":1}}],[\"很多时候我们使用\",{\"1\":{\"239\":1}}],[\"很多工具系统和包都是使用\",{\"1\":{\"450\":1}}],[\"很多地方会用到模板字符串\",{\"1\":{\"255\":1}}],[\"很大程度上是网站经营者的一种商业行为\",{\"1\":{\"217\":1}}],[\"跳出循环\",{\"1\":{\"872\":1}}],[\"跳出语块之后\",{\"1\":{\"507\":1}}],[\"跳转页面\",{\"1\":{\"239\":1}}],[\"跳过初始渲染\",{\"0\":{\"1251\":1}}],[\"跳过第一个索引\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"跳过了上图所示的回流环节\",{\"1\":{\"223\":1}}],[\"跳过搜索\",{\"1\":{\"128\":1}}],[\"跳过问题\",{\"1\":{\"16\":1,\"59\":1}}],[\"把应用程序中用得最多\",{\"1\":{\"2170\":1}}],[\"把每条改变数据集的命令追加到aof文件末尾\",{\"1\":{\"2069\":1}}],[\"把每个参数进行区分\",{\"1\":{\"1104\":1}}],[\"把中间件框架\",{\"1\":{\"2054\":1}}],[\"把这些构件集成为产品\",{\"1\":{\"1901\":1}}],[\"把商业流程中功能不同的应用模块通过门户技术集成在一起\",{\"1\":{\"1887\":1}}],[\"把一部分企业的优秀员工看作是一种资本\",{\"1\":{\"1875\":1}}],[\"把一个字符串转换为一个浮点数\",{\"1\":{\"663\":1}}],[\"把一个文件当作一个模块\",{\"1\":{\"273\":1}}],[\"把抽象与实现隔离开\",{\"1\":{\"1820\":1}}],[\"把ssthresh门限减半\",{\"1\":{\"1722\":1}}],[\"把原来的空闲区变成使用区\",{\"1\":{\"1648\":1}}],[\"把原来的使用区变成空闲区\",{\"1\":{\"1648\":1}}],[\"把原有的\",{\"1\":{\"597\":1}}],[\"把所有内存中对象标记修改为\",{\"1\":{\"1646\":1}}],[\"把所有的变看数堪称一个整体\",{\"1\":{\"1104\":1}}],[\"把不是垃圾的节点改成\",{\"1\":{\"1646\":1}}],[\"把watcher加入到自身的subs容器\",{\"1\":{\"1562\":1}}],[\"把自身\",{\"1\":{\"1562\":1}}],[\"把自己\",{\"1\":{\"1561\":1}}],[\"把dep放到deps里面\",{\"1\":{\"1561\":1}}],[\"把data数据代理到vm\",{\"1\":{\"1533\":1}}],[\"把我们定义好的渲染\",{\"1\":{\"1560\":1}}],[\"把解析好的标签名和属性解析生成ast\",{\"1\":{\"1550\":1}}],[\"把对象解析成文本\",{\"1\":{\"1549\":1}}],[\"把html代码转成ast语法树\",{\"1\":{\"1549\":1}}],[\"把标志还原为false\",{\"1\":{\"1542\":1}}],[\"把全部的watcher都放到队列里面去\",{\"1\":{\"1541\":1}}],[\"把传入的选项混入到自己的\",{\"1\":{\"1484\":1}}],[\"把传给\",{\"1\":{\"902\":1}}],[\"把节点插入到当前儿子的头部\",{\"1\":{\"1478\":1}}],[\"把老的\",{\"1\":{\"1475\":1}}],[\"把上次渲染的真实\",{\"1\":{\"1475\":1}}],[\"把函数存储到\",{\"1\":{\"1303\":1}}],[\"把缓存中的历史命令写入命令保存文件\",{\"1\":{\"1083\":1}}],[\"把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同\",{\"1\":{\"1032\":1}}],[\"把压缩文件的日期设成指定的日期\",{\"1\":{\"1018\":1}}],[\"把符号链接视为一般目录\",{\"1\":{\"1003\":1}}],[\"把textfile1和textfile2的文档内容加上行号\",{\"1\":{\"984\":1}}],[\"把textfile1的文档内容加上行号后输入textfile2这个文档里\",{\"1\":{\"984\":1}}],[\"把此时的变量\",{\"1\":{\"903\":1}}],[\"把它们一个个封装起来\",{\"1\":{\"1784\":1}}],[\"把它当做\",{\"1\":{\"902\":1}}],[\"把它转换成数组\",{\"1\":{\"740\":1}}],[\"把\",{\"1\":{\"862\":1,\"863\":1,\"1018\":2,\"1332\":1,\"1363\":1,\"1484\":1,\"1528\":1,\"1533\":2}}],[\"把值放到\",{\"1\":{\"862\":1}}],[\"把数组的结果通过数组的\",{\"1\":{\"735\":1}}],[\"把需要解决的这一类问题\",{\"1\":{\"728\":1}}],[\"把任务的执行时机推迟到了点击这个动作发生时\",{\"1\":{\"558\":1}}],[\"把前面的继承有点结合\",{\"1\":{\"494\":1}}],[\"把依赖的模块\",{\"1\":{\"464\":1}}],[\"把微任务队列清空\",{\"1\":{\"383\":1}}],[\"把bind方法传入的参数与return\",{\"1\":{\"358\":1}}],[\"把容器的\",{\"1\":{\"236\":1}}],[\"把爬行的数据存入本地数据库\",{\"1\":{\"217\":1}}],[\"绑定一个监听函数\",{\"1\":{\"558\":1}}],[\"绑定是无法通过\",{\"1\":{\"362\":1}}],[\"绑定更高\",{\"1\":{\"360\":1}}],[\"绑定的优先级比显式\",{\"1\":{\"360\":1}}],[\"绑定的是新创建的构造函数的实例\",{\"1\":{\"359\":1}}],[\"绑定的是那个上下文对象\",{\"1\":{\"354\":1}}],[\"绑定中的\",{\"1\":{\"360\":1}}],[\"绑定修改了\",{\"1\":{\"360\":1}}],[\"绑定为\",{\"1\":{\"360\":2}}],[\"绑定\",{\"0\":{\"359\":1},\"1\":{\"352\":1,\"360\":1,\"1235\":1}}],[\"绑定事件不会触发\",{\"1\":{\"240\":1}}],[\"绑定方法即可\",{\"1\":{\"236\":1}}],[\"绑定和监听指定主机的端口\",{\"1\":{\"191\":1}}],[\"那三个人一块干一个人干\",{\"1\":{\"1649\":1}}],[\"那两个人\",{\"1\":{\"1649\":1}}],[\"那我们可不可以引入多个辅助线程来同时处理\",{\"1\":{\"1649\":1}}],[\"那我们的应用逻辑就得暂停\",{\"1\":{\"1649\":1}}],[\"那我们如何去阻止他呢\",{\"1\":{\"430\":1}}],[\"那在我们上图的例子中\",{\"1\":{\"1650\":1}}],[\"那在垃圾回收器执行了一段增量回收后\",{\"1\":{\"1650\":1}}],[\"那在进行垃圾回收时就会阻塞\",{\"1\":{\"1649\":1}}],[\"那在应用程序\",{\"1\":{\"1646\":1}}],[\"那上面代码首先我们声明了一个变量\",{\"1\":{\"1644\":1}}],[\"那些和照明\",{\"1\":{\"2743\":1}}],[\"那些不适应企业信息化的管理体制\",{\"1\":{\"1873\":1}}],[\"那些长期存活的对象会变得\",{\"1\":{\"1641\":1}}],[\"那些忘记被声明的变量无法在开发阶段被明显地察觉出来\",{\"1\":{\"507\":1}}],[\"那样还要负责源代码的管理\",{\"1\":{\"1580\":1}}],[\"那10行数据会贴在原本的20行之后\",{\"1\":{\"1063\":1}}],[\"那个是数字的0\",{\"1\":{\"1063\":1}}],[\"那个n表示\",{\"1\":{\"1061\":1}}],[\"那个修改一个对象的属性\",{\"1\":{\"484\":1}}],[\"那是不是只有返回函数才算是产生了闭包呢\",{\"1\":{\"901\":1}}],[\"那怎么办呢\",{\"1\":{\"867\":1}}],[\"那应该怎么办呢\",{\"1\":{\"861\":1}}],[\"那有没有不受跨域问题所束缚的东西呢\",{\"1\":{\"859\":1}}],[\"那就不是\",{\"1\":{\"1669\":1}}],[\"那就不得不讲浏览器的同源策略了\",{\"1\":{\"855\":1}}],[\"那就直接用新的去做更新即可\",{\"1\":{\"1477\":1}}],[\"那就比较一下对象的属性\",{\"1\":{\"902\":1}}],[\"那就是实现比较简单\",{\"1\":{\"1646\":1}}],[\"那就是用\",{\"1\":{\"1286\":1}}],[\"那就是他们的二级域名都是\",{\"1\":{\"867\":1}}],[\"那就是经常出现回调多层嵌套的情况\",{\"1\":{\"562\":1}}],[\"那也就是说null的类型标签也是000\",{\"1\":{\"642\":1}}],[\"那它就会不停地执行当前函数\",{\"1\":{\"723\":1}}],[\"那它什么都不做\",{\"1\":{\"604\":1}}],[\"那它和\",{\"1\":{\"517\":1}}],[\"那await到底在等待什么呢\",{\"1\":{\"595\":1}}],[\"那自身状态就会变成rejected\",{\"1\":{\"574\":1}}],[\"那自身的状态变成了resolved\",{\"1\":{\"574\":1}}],[\"那promise创建完了\",{\"1\":{\"571\":1}}],[\"那另外一个问题\",{\"1\":{\"569\":1}}],[\"那该使用哪个呢\",{\"1\":{\"505\":1}}],[\"那该如何解决这个问题呢\",{\"1\":{\"463\":1}}],[\"那该如何防止这个问题呢\",{\"1\":{\"431\":1,\"432\":1}}],[\"那该如何判断代码正在泄漏内存呢\",{\"1\":{\"425\":1}}],[\"那该如何处理这种二进制数据呢\",{\"1\":{\"395\":1}}],[\"那该如何使用\",{\"1\":{\"388\":1}}],[\"那为什么需要四次挥手呢\",{\"0\":{\"1729\":1}}],[\"那为什么要三次握手呢\",{\"0\":{\"1727\":1}}],[\"那为什么都是\",{\"1\":{\"903\":1}}],[\"那为什么\",{\"1\":{\"501\":1}}],[\"那为什么浏览器可以同时执行异步任务呢\",{\"1\":{\"371\":1}}],[\"那假如\",{\"1\":{\"482\":1}}],[\"那可能存在内存泄露\",{\"1\":{\"436\":1}}],[\"那们很有可能发生了内存泄漏\",{\"1\":{\"425\":1}}],[\"那这里为什么\",{\"1\":{\"642\":1}}],[\"那这时会创建一个新的购物车吗\",{\"1\":{\"455\":1}}],[\"那这个\",{\"1\":{\"413\":1}}],[\"那这段代码执行过程是怎么的呢\",{\"1\":{\"376\":1}}],[\"那类型化数组和数组有什么区别呢\",{\"1\":{\"402\":1}}],[\"那\",{\"1\":{\"397\":1,\"414\":1,\"462\":1,\"589\":1,\"590\":1,\"595\":1}}],[\"那单线程有什么好处呢\",{\"1\":{\"370\":1}}],[\"那如果对一个函数进行多次\",{\"1\":{\"355\":1}}],[\"那如果嵌套了多层对象\",{\"1\":{\"354\":1}}],[\"那如何找到合适的块呢\",{\"1\":{\"1646\":1}}],[\"那如何按顺序依次输出\",{\"1\":{\"903\":1}}],[\"那如何在小于等于\",{\"1\":{\"474\":1}}],[\"那如何让\",{\"1\":{\"354\":1}}],[\"那如何把每个模块联系起来呢\",{\"1\":{\"273\":1}}],[\"那对于内存消耗是非常大的\",{\"1\":{\"236\":1}}],[\"那么颜色\",{\"1\":{\"2836\":1}}],[\"那么想要在下一次渲染时更新阴影的话就需要将此值设为true\",{\"1\":{\"2805\":1}}],[\"那么你的类型化数组的长度必须是\",{\"1\":{\"2744\":1}}],[\"那么你应该尝试使用\",{\"1\":{\"1309\":1}}],[\"那么数据库中的数据的改变就是永久性的\",{\"1\":{\"2258\":1}}],[\"那么称分解p保持fd\",{\"1\":{\"2255\":1}}],[\"那么根本不⽤处理粘包的问题\",{\"1\":{\"1730\":1}}],[\"那么服务器就没有办法知道自己的序号是否\",{\"1\":{\"1727\":1}}],[\"那么接方会直接丢弃\",{\"1\":{\"1724\":1}}],[\"那么发送方会启用快速重传的机制\",{\"1\":{\"1724\":1}}],[\"那么对应的数据\",{\"1\":{\"1713\":1}}],[\"那么对象的访问链就会变得很长\",{\"1\":{\"836\":1}}],[\"那么剩下的所有白色对象都是无法到达的\",{\"1\":{\"1650\":1}}],[\"那么引用数加\",{\"1\":{\"1646\":1}}],[\"那么之前的对象引用关系就没有了\",{\"1\":{\"1644\":1}}],[\"那么版本控制将不可用\",{\"1\":{\"1579\":1}}],[\"那么继续push\",{\"1\":{\"1551\":1}}],[\"那么继续在变量环境中查找\",{\"1\":{\"510\":1}}],[\"那么证明接下来就是一个标签\",{\"1\":{\"1550\":1}}],[\"那么如何维护session的一致性\",{\"1\":{\"2076\":1}}],[\"那么如何使用\",{\"1\":{\"1370\":1}}],[\"那么如何限制属性名的范围呢\",{\"1\":{\"1366\":1}}],[\"那么当访问\",{\"1\":{\"1366\":1}}],[\"那么确定属性和可选属性的类型都必须是它的类型的子集\",{\"1\":{\"1340\":1}}],[\"那么我们访问a的时候\",{\"1\":{\"1563\":1}}],[\"那么我们使用a\",{\"1\":{\"1535\":1,\"1564\":1}}],[\"那么我们首先可以根据这个属性来防止已经被响应式观察的数据反复被观测\",{\"1\":{\"1535\":1}}],[\"那么我们根据下标可以直接修改数据也能触发\",{\"1\":{\"1534\":1}}],[\"那么我们还需要定义一下\",{\"1\":{\"1527\":1}}],[\"那么我们什么时候会需要这样使用\",{\"1\":{\"1303\":1}}],[\"那么我们只需要把\",{\"1\":{\"583\":1}}],[\"那么应该使用\",{\"1\":{\"1274\":1}}],[\"那么也可以使用\",{\"1\":{\"1267\":1}}],[\"那么也可以对于参数进行一些操作\",{\"1\":{\"727\":1}}],[\"那么可以使用策略模式来规避多重条件判断的情况\",{\"1\":{\"1785\":1}}],[\"那么可以猜想\",{\"1\":{\"1256\":1}}],[\"那么可能出现页面挤到一起\",{\"1\":{\"200\":1}}],[\"那么防抖和节流仍然是有用的\",{\"1\":{\"1237\":1}}],[\"那么这个对象会被直接晋升到老生代空间中\",{\"1\":{\"1648\":1}}],[\"那么这个\",{\"1\":{\"1602\":1}}],[\"那么这个函数就可以被视为一个工厂\",{\"1\":{\"1747\":1}}],[\"那么这个函数就是异步的\",{\"1\":{\"370\":1}}],[\"那么这个函数就是同步的\",{\"1\":{\"370\":1}}],[\"那么这个函数会被传入\",{\"1\":{\"464\":1}}],[\"那么这里应该能够编译通过\",{\"1\":{\"1416\":1}}],[\"那么这会引起大量的不必要的渲染\",{\"1\":{\"1225\":1}}],[\"那么没有理由使用\",{\"1\":{\"1212\":1}}],[\"那么每次父组件渲染时\",{\"1\":{\"1209\":1}}],[\"那么每次执行代码前都必须重新解析一遍该变量\",{\"1\":{\"502\":1}}],[\"那么给子组件hello传递的message参数还是之前的旧值\",{\"1\":{\"1200\":1}}],[\"那么原本的第20行会被推到变成30行\",{\"1\":{\"1063\":1}}],[\"那么按下n则会向上继续搜寻名称为vbird的字符串\",{\"1\":{\"1062\":1}}],[\"那么必须在距离1970\",{\"1\":{\"940\":1}}],[\"那么结合第三个参数\",{\"1\":{\"903\":1}}],[\"那么他们就形成了一条作用域链\",{\"1\":{\"901\":1}}],[\"那么有了变量之后\",{\"1\":{\"895\":1}}],[\"那么会立马更新message的值\",{\"1\":{\"1200\":1}}],[\"那么会将这个引用的地址复制给对象\",{\"1\":{\"768\":1}}],[\"那么会返回\",{\"1\":{\"604\":1}}],[\"那么其实也可以用\",{\"1\":{\"736\":1}}],[\"那么其代码块内部定义的变量在代码块外部是访问不到的\",{\"1\":{\"501\":1}}],[\"那么最后输出的结果就是扁平化后的数组\",{\"1\":{\"735\":1}}],[\"那么输出效果如下\",{\"1\":{\"734\":1}}],[\"那么还是围绕上面这个\",{\"1\":{\"732\":1}}],[\"那么切分的数组包含从\",{\"1\":{\"702\":1}}],[\"那么上面这\",{\"1\":{\"681\":1}}],[\"那么上下文会是什么呢\",{\"1\":{\"355\":1}}],[\"那么第二个操作数就不需要在进行判断了\",{\"1\":{\"625\":1}}],[\"那么执行以下命令\",{\"1\":{\"1637\":1}}],[\"那么执行\",{\"1\":{\"1563\":1}}],[\"那么执行结果就分别是计算出来的数值和拼接好的字符串\",{\"1\":{\"616\":1}}],[\"那么执行这\",{\"1\":{\"376\":1}}],[\"那么递增或递减的结果就是\",{\"1\":{\"602\":1}}],[\"那么整段代码将充斥着\",{\"1\":{\"596\":1}}],[\"那么为什么\",{\"1\":{\"592\":1}}],[\"那么race方法有什么实际作用呢\",{\"1\":{\"574\":1}}],[\"那么all方法的状态就会变成rejected\",{\"1\":{\"573\":1}}],[\"那么问题的解决思路就很清晰了\",{\"1\":{\"569\":1}}],[\"那么问题来了\",{\"1\":{\"376\":1,\"508\":1}}],[\"那么需要满足以下条件之一\",{\"1\":{\"1357\":1}}],[\"那么需要这样编写代码\",{\"1\":{\"569\":1}}],[\"那么需要清楚一个问题\",{\"1\":{\"205\":1}}],[\"那么调用\",{\"1\":{\"568\":1}}],[\"那么返回的子串会一直到字符串的结尾\",{\"1\":{\"530\":1}}],[\"那么返回从\",{\"1\":{\"529\":1}}],[\"那么该方法在提取子串之前会先交换这两个参数\",{\"1\":{\"530\":1}}],[\"那么该方法返回的就是一个空串\",{\"1\":{\"530\":1}}],[\"那么该参数声明从字符串的尾部开始算起的位置\",{\"1\":{\"529\":1}}],[\"那么该函数是单例模式\",{\"1\":{\"458\":1}}],[\"那么字符串中的每个字符之间都会被分割\",{\"1\":{\"526\":1}}],[\"那么子类将无法继承这些方法\",{\"1\":{\"486\":1}}],[\"那么模块导出的就是对象\",{\"1\":{\"464\":1}}],[\"那么就应该为其设置\",{\"1\":{\"1661\":1}}],[\"那么就可以直接合并\",{\"1\":{\"1602\":1}}],[\"那么就可以给构造函数传入一个数值\",{\"1\":{\"677\":1}}],[\"那么就相当于执行\",{\"1\":{\"1561\":1}}],[\"那么就返回缓存好的计算结果\",{\"1\":{\"902\":1}}],[\"那么就返回true\",{\"1\":{\"627\":1}}],[\"那么就忽略\",{\"1\":{\"895\":1}}],[\"那么就继续往下遍历\",{\"1\":{\"735\":1}}],[\"那么就会造成大量的内存不会被释放\",{\"1\":{\"1646\":1}}],[\"那么就会返回\",{\"1\":{\"1378\":1}}],[\"那么就会使用默认值\",{\"1\":{\"838\":1,\"843\":1}}],[\"那么就会将数组长度扩充至该索引值加一\",{\"1\":{\"680\":1}}],[\"那么就会创建一个长度为指定数字的数组\",{\"1\":{\"677\":1}}],[\"那么就无法再通过\",{\"1\":{\"452\":1}}],[\"那么就获取该属性\",{\"1\":{\"321\":1,\"643\":1}}],[\"那么缓存可以无限增长\",{\"1\":{\"433\":1}}],[\"那么指向最后一个调用这个方法的对象\",{\"1\":{\"354\":1}}],[\"那么它们的\",{\"1\":{\"1666\":1}}],[\"那么它们都会被保留在输出中\",{\"1\":{\"255\":1}}],[\"那么它会被识别为任意值类型\",{\"1\":{\"1417\":1}}],[\"那么它会在这个文件中创建一个本地的作用域\",{\"1\":{\"1354\":1}}],[\"那么它将输出\",{\"1\":{\"797\":1}}],[\"那么它规定的是从数组尾部开始算起的元素\",{\"1\":{\"702\":1}}],[\"那么它规定的是从字符串的尾部开始算起的位置\",{\"1\":{\"528\":1}}],[\"那么它规定从数组尾部开始算起的位置\",{\"1\":{\"702\":1}}],[\"那么它的父元素一定要有高度\",{\"1\":{\"181\":1}}],[\"那么css命名的语义化就是给人看的\",{\"1\":{\"216\":1}}],[\"那么\",{\"1\":{\"208\":1,\"354\":1,\"488\":1,\"508\":2,\"535\":1,\"577\":1,\"581\":1,\"589\":2,\"681\":1,\"695\":1,\"806\":2,\"1258\":1,\"1279\":1}}],[\"那么在选策略时一般会采用多重的条件判断\",{\"1\":{\"1787\":1}}],[\"那么在\",{\"1\":{\"1366\":1}}],[\"那么在每次组件渲染时都会执行\",{\"1\":{\"1274\":1}}],[\"那么在列表发生变化时\",{\"1\":{\"236\":1}}],[\"那么在显示时就可能出现一些偏差\",{\"1\":{\"207\":1}}],[\"那么在转换的时候\",{\"1\":{\"207\":1}}],[\"那么在计算时\",{\"1\":{\"207\":1}}],[\"那么以\",{\"1\":{\"206\":1}}],[\"那么一个潜在的原因可能是内存泄漏\",{\"1\":{\"425\":1}}],[\"那么一个\",{\"1\":{\"205\":1}}],[\"那么所谓的理想宽度就是浏览器\",{\"1\":{\"201\":1}}],[\"那么框\",{\"1\":{\"178\":1}}],[\"那么两个p便不属于同一个bfc\",{\"1\":{\"151\":1}}],[\"假如是客户端先发起关闭请求\",{\"1\":{\"1728\":1}}],[\"假如服务器配置了\",{\"1\":{\"1697\":1}}],[\"假如我们有\",{\"1\":{\"1650\":1}}],[\"假如我们正在开发迭代功能\",{\"1\":{\"1601\":1}}],[\"假如本来是主线程一个人干活\",{\"1\":{\"1649\":1}}],[\"假如一次\",{\"1\":{\"1649\":1}}],[\"假如此函数在程序中被多次调用\",{\"1\":{\"1646\":1}}],[\"假如第一次的提交的\",{\"1\":{\"1637\":1}}],[\"假如需要把代码回退到head\",{\"1\":{\"1615\":1}}],[\"假如你回退到某个旧版本\",{\"1\":{\"1615\":1}}],[\"假如这个数字是8\",{\"1\":{\"940\":2}}],[\"假如声明两个引用类型同时指向了一个地址的时候\",{\"1\":{\"652\":1}}],[\"假如尝试在声明前去使用这类变量\",{\"1\":{\"511\":1}}],[\"假定将\",{\"1\":{\"432\":1}}],[\"假定一个\",{\"1\":{\"207\":1}}],[\"假设每三个连续的位置代表一个三角面片\",{\"1\":{\"2288\":1}}],[\"假设每秒中用户交易请求的数量是10个\",{\"1\":{\"2010\":1}}],[\"假设丢失了\",{\"1\":{\"1713\":1}}],[\"假设我们新建对象分配内存时需要大小为\",{\"1\":{\"1646\":1}}],[\"假设我们有一个\",{\"1\":{\"1210\":1,\"1251\":1}}],[\"假设内存中所有对象都是垃圾\",{\"1\":{\"1646\":1}}],[\"假设\",{\"1\":{\"1211\":1}}],[\"假设有个名为\",{\"1\":{\"734\":1}}],[\"假设有一个列表\",{\"1\":{\"236\":1}}],[\"假设一个业务\",{\"1\":{\"596\":1}}],[\"假设现在要在\",{\"1\":{\"269\":1}}],[\"捕获花括号里面的内容\",{\"1\":{\"1551\":1}}],[\"捕获里面的标签名\",{\"1\":{\"1550\":2}}],[\"捕获错误\",{\"1\":{\"580\":1}}],[\"捕获是从上到下\",{\"1\":{\"234\":1}}],[\"捕获阶段\",{\"1\":{\"234\":1}}],[\"目或度\",{\"1\":{\"2240\":1}}],[\"目的是实现这个协调者的决定\",{\"1\":{\"2234\":1}}],[\"目的是形成一个共同的决定\",{\"1\":{\"2234\":1}}],[\"目的是让其在行业内占据领先地位\",{\"1\":{\"217\":1}}],[\"目的就是写出类型绝对安全的代码\",{\"1\":{\"1416\":1}}],[\"目标因子所有可能的取值请参阅constants\",{\"1\":{\"2639\":1}}],[\"目标系统和测试设备\",{\"1\":{\"2177\":1}}],[\"目标软件开发阶段\",{\"1\":{\"1896\":1}}],[\"目标\",{\"1\":{\"1874\":1}}],[\"目标者与观察者\",{\"1\":{\"1806\":1}}],[\"目标对象\",{\"1\":{\"1798\":1}}],[\"目标地址哈希散列算法\",{\"1\":{\"2077\":1}}],[\"目标地址\",{\"1\":{\"1689\":1}}],[\"目标版本\",{\"1\":{\"1454\":1}}],[\"目标文件或目录\",{\"1\":{\"1003\":1}}],[\"目标文件\",{\"1\":{\"998\":1}}],[\"目标阶段\",{\"1\":{\"234\":1}}],[\"目前已加载项的个数\",{\"1\":{\"2468\":1,\"2470\":1}}],[\"目前从内核架构来划分\",{\"1\":{\"2192\":1}}],[\"目前对系统信用卡支付业务逻辑的描述尚未达成共识\",{\"1\":{\"2010\":1}}],[\"目前除了e\",{\"1\":{\"1737\":1}}],[\"目前很少使用这种算法了\",{\"1\":{\"1646\":1}}],[\"目前在\",{\"1\":{\"1646\":1}}],[\"目前\",{\"1\":{\"1427\":1}}],[\"目前目录\",{\"1\":{\"972\":1}}],[\"目前主流浏览器都支持\",{\"1\":{\"473\":1}}],[\"目前我在项目中应用的较少\",{\"1\":{\"254\":1}}],[\"目录默认权限最大为\",{\"1\":{\"1045\":1}}],[\"目录中更改时间在\",{\"1\":{\"1007\":1}}],[\"目录下创建\",{\"1\":{\"1167\":3}}],[\"目录下新建文件\",{\"1\":{\"1335\":1}}],[\"目录下新建\",{\"1\":{\"1158\":1,\"1173\":1,\"1180\":1,\"1181\":1}}],[\"目录下\",{\"1\":{\"1019\":1,\"1157\":1,\"1332\":1}}],[\"目录下在\",{\"1\":{\"1007\":1}}],[\"目录下大于\",{\"1\":{\"1007\":1}}],[\"目录下的所有文件和子目录\",{\"1\":{\"1025\":1}}],[\"目录下的\",{\"1\":{\"866\":1,\"1584\":1}}],[\"目录名\",{\"1\":{\"1001\":2}}],[\"目录和二进制文件\",{\"1\":{\"989\":1}}],[\"目录则加\",{\"1\":{\"972\":1}}],[\"目录与文件\",{\"0\":{\"966\":1}}],[\"目录结构\",{\"0\":{\"913\":1,\"1149\":1,\"1150\":1}}],[\"目录\",{\"0\":{\"1045\":1},\"1\":{\"454\":1,\"913\":1,\"967\":2,\"1001\":4,\"1006\":1,\"1021\":1,\"1036\":1,\"1082\":1,\"1088\":1,\"1089\":1}}],[\"对其他所有场地来说\",{\"1\":{\"2229\":1}}],[\"对其他的业务产生影响\",{\"1\":{\"1777\":1}}],[\"对进程的请求可以推迟分配\",{\"1\":{\"2158\":1}}],[\"对信用的累积非常有帮助\",{\"1\":{\"2132\":1}}],[\"对信息的传播及内容具有控制的能力\",{\"1\":{\"2006\":1}}],[\"对国家安全造成特别严重损害\",{\"1\":{\"2111\":1}}],[\"对社会秩序和公共利益造成特别严重损害\",{\"1\":{\"2111\":1}}],[\"对社会秩序和公共利益造成严重损害\",{\"1\":{\"2111\":1}}],[\"对公民\",{\"1\":{\"2111\":2}}],[\"对每次连接请求动态地转换为一个内部节点的地址\",{\"1\":{\"2077\":1}}],[\"对用户屏蔽底层差异的分布式处理架构\",{\"1\":{\"2046\":1}}],[\"对用户来说就可能造成页面卡顿等问题\",{\"1\":{\"1649\":1}}],[\"对资源的各种操作不会改变资源的标识\",{\"1\":{\"2039\":1}}],[\"对该领域具备长期和深厚的经验\",{\"1\":{\"2016\":1}}],[\"对则这些质量属性进行评价和折中\",{\"1\":{\"2011\":1}}],[\"对交易请求处理时间的要求将影响系统的数据传输协议和处理过程的设计\",{\"1\":{\"2010\":1}}],[\"对web界面风格进行修改\",{\"1\":{\"2007\":1}}],[\"对websocket的理解\",{\"0\":{\"1735\":1}}],[\"对计算机的操作都有完整记录\",{\"1\":{\"2006\":1}}],[\"对计算属性进行属性劫持\",{\"0\":{\"1570\":1}}],[\"对以前未使用的变量再次赋值\",{\"1\":{\"1938\":1}}],[\"对修改封闭\",{\"1\":{\"1937\":1}}],[\"对扩展开放\",{\"1\":{\"1937\":1}}],[\"对扩展不友好\",{\"1\":{\"1770\":1}}],[\"对外提供新的接口\",{\"1\":{\"1900\":1}}],[\"对外提供统一的api\",{\"1\":{\"378\":1}}],[\"对紧急情况和机会做出快速反应\",{\"1\":{\"1872\":1}}],[\"对系统的结构\",{\"1\":{\"1843\":1}}],[\"对系统的组成要素\",{\"1\":{\"1843\":1}}],[\"对此发出确认报文段\",{\"1\":{\"1728\":1}}],[\"对准确性要求相对低的场景\",{\"1\":{\"1715\":1}}],[\"对响应资源做缓存\",{\"1\":{\"1699\":1}}],[\"对http协议进行解析\",{\"1\":{\"1696\":1}}],[\"对几乎所有现有的源代码管理系统抱有强烈的反感\",{\"1\":{\"1577\":1}}],[\"对当前的watcher求值\",{\"1\":{\"1570\":1}}],[\"对新增的每一项进行观测\",{\"1\":{\"1564\":1}}],[\"对attrs属性里面的style做特殊处理\",{\"1\":{\"1551\":1}}],[\"对文本进行处理\",{\"1\":{\"1550\":1}}],[\"对结束标签进行处理\",{\"1\":{\"1550\":1}}],[\"对开始标签进行处理\",{\"1\":{\"1550\":1}}],[\"对老的子节点进行递归\",{\"1\":{\"1478\":1}}],[\"对应真实节点\",{\"1\":{\"1476\":1}}],[\"对应的索引将老的内容生成程映射表\",{\"1\":{\"1478\":1}}],[\"对应的字符串字面量\",{\"1\":{\"1427\":1}}],[\"对应的布尔对象\",{\"1\":{\"664\":1}}],[\"对等号左侧进行类型限制\",{\"1\":{\"1422\":1}}],[\"对这种模式进行类型约束呢\",{\"1\":{\"1370\":1}}],[\"对刚接触\",{\"1\":{\"1363\":1}}],[\"对类的一部分行为进行抽象\",{\"1\":{\"1338\":1}}],[\"对参数和方法进行缓存\",{\"1\":{\"1229\":1}}],[\"对评论数据进行排序\",{\"1\":{\"1211\":1}}],[\"对\",{\"0\":{\"1647\":1},\"1\":{\"1153\":2,\"1273\":1,\"1334\":2,\"1521\":1,\"1535\":1}}],[\"对目前目录下的所有文件与子目录进行相同的权限变更\",{\"1\":{\"1038\":1}}],[\"对解构赋值的定义\",{\"1\":{\"837\":1}}],[\"对上面例子中的对象进行解构\",{\"1\":{\"836\":1}}],[\"对比\",{\"0\":{\"819\":1}}],[\"对引用类型开辟一个新的存储\",{\"1\":{\"760\":1}}],[\"对基础类型做一个最基本的一个拷贝\",{\"1\":{\"760\":1}}],[\"对空字符串的处理也不一样\",{\"1\":{\"663\":1}}],[\"对负数进行无符号右移操作之后就会变的特别大\",{\"1\":{\"614\":1}}],[\"对代码进行改造\",{\"1\":{\"591\":1}}],[\"对父类方法的重写\",{\"1\":{\"495\":1}}],[\"对函数的\",{\"1\":{\"317\":1}}],[\"对数据进行观测\",{\"1\":{\"1533\":1}}],[\"对数据的操作会改变原数组\",{\"1\":{\"713\":1}}],[\"对数组原型重写之前咱们先要理解这段代码\",{\"1\":{\"1535\":1}}],[\"对数组逆序操作\",{\"1\":{\"879\":1}}],[\"对数组正序操作\",{\"1\":{\"879\":1}}],[\"对数组的每个值都会调用\",{\"1\":{\"687\":1}}],[\"对数组进行解包\",{\"1\":{\"264\":1}}],[\"对数值和布尔值进行解构时\",{\"1\":{\"254\":1}}],[\"对象与关系数据之间的映射\",{\"1\":{\"2035\":1}}],[\"对象仓库中\",{\"1\":{\"1670\":1}}],[\"对象将被垃圾回收机制回收\",{\"1\":{\"1646\":1}}],[\"对象所占用的内存进行释放\",{\"1\":{\"1645\":1}}],[\"对象所包含的\",{\"1\":{\"388\":1}}],[\"对象被分成两组\",{\"1\":{\"1641\":1}}],[\"对象指的就是observer实例\",{\"1\":{\"1564\":1}}],[\"对象指向父类对象\",{\"1\":{\"482\":1}}],[\"对象新增或者删除的属性无法被\",{\"1\":{\"1534\":1}}],[\"对象长什么样\",{\"1\":{\"1366\":1}}],[\"对象更新\",{\"0\":{\"1301\":1}}],[\"对象下的变量\",{\"1\":{\"896\":1}}],[\"对象方法\",{\"1\":{\"886\":1}}],[\"对象遍历方法\",{\"0\":{\"880\":1}}],[\"对象处于什么状态\",{\"1\":{\"817\":1}}],[\"对象到数字的转换\",{\"1\":{\"806\":1}}],[\"对象到字符串的转换\",{\"1\":{\"806\":1}}],[\"对象到布尔值的转换不需要对象到原始类型算法\",{\"1\":{\"806\":1}}],[\"对象到布尔值的转换\",{\"1\":{\"806\":1}}],[\"对象使用\",{\"1\":{\"806\":1}}],[\"对象可以转换为字符串或数字\",{\"1\":{\"805\":1}}],[\"对象大小比较\",{\"1\":{\"805\":1}}],[\"对象通过内部的\",{\"1\":{\"804\":1}}],[\"对象类型转换\",{\"0\":{\"804\":1}}],[\"对象序列化\",{\"1\":{\"763\":1}}],[\"对象某个属性不存在\",{\"1\":{\"654\":2}}],[\"对象依然被\",{\"1\":{\"640\":1}}],[\"对象不是一个iterator对象\",{\"1\":{\"636\":1}}],[\"对象里面\",{\"1\":{\"592\":1}}],[\"对象进行配合\",{\"1\":{\"592\":1}}],[\"对象进入确定\",{\"1\":{\"567\":1}}],[\"对象最后状态如何\",{\"1\":{\"575\":1}}],[\"对象代表一个异步操作\",{\"1\":{\"566\":1}}],[\"对象声明中的\",{\"1\":{\"501\":1}}],[\"对象之间的继承关系\",{\"1\":{\"482\":1}}],[\"对象之外\",{\"1\":{\"389\":1}}],[\"对象和\",{\"1\":{\"1670\":1}}],[\"对象和对象之间也有关系\",{\"1\":{\"482\":1}}],[\"对象和通过\",{\"1\":{\"392\":1}}],[\"对象清空后\",{\"1\":{\"433\":1}}],[\"对象会保存在堆内存中\",{\"1\":{\"425\":1}}],[\"对象转化为一个\",{\"1\":{\"413\":1}}],[\"对象表示指定的\",{\"1\":{\"413\":1}}],[\"对象表示一个不可变\",{\"1\":{\"387\":1}}],[\"对象用作图像\",{\"1\":{\"413\":1}}],[\"对象用来表示通用的\",{\"1\":{\"397\":1}}],[\"对象一共提供\",{\"1\":{\"402\":1}}],[\"对象来访问\",{\"1\":{\"397\":1}}],[\"对象或其它值\",{\"1\":{\"595\":1}}],[\"对象或\",{\"1\":{\"397\":1,\"413\":1}}],[\"对象继承自\",{\"1\":{\"395\":1}}],[\"对象常用的事件如下\",{\"1\":{\"395\":1}}],[\"对象常见的应用\",{\"0\":{\"238\":1}}],[\"对象作为参数\",{\"1\":{\"394\":1}}],[\"对象提供了以下方法来加载文件\",{\"1\":{\"394\":1}}],[\"对象都包含文件的一些属性\",{\"1\":{\"391\":1}}],[\"对象是一个单例\",{\"1\":{\"1764\":1}}],[\"对象是节点的集合\",{\"1\":{\"725\":1}}],[\"对象是否在对象的原型链上\",{\"1\":{\"641\":1}}],[\"对象是完全一样的\",{\"1\":{\"392\":1}}],[\"对象是特殊类型的\",{\"1\":{\"390\":1}}],[\"对象是包含有只读原始数据的类文件对象\",{\"1\":{\"387\":1}}],[\"对象分片\",{\"1\":{\"389\":1}}],[\"对象内置了\",{\"1\":{\"389\":1}}],[\"对象切片\",{\"1\":{\"389\":1}}],[\"对象呢\",{\"1\":{\"388\":1}}],[\"对象看起来似乎我们还是没有啥用\",{\"1\":{\"388\":1}}],[\"对象中含有\",{\"1\":{\"763\":1}}],[\"对象中异步执行\",{\"1\":{\"595\":1}}],[\"对象中的\",{\"1\":{\"568\":2}}],[\"对象中找不到\",{\"1\":{\"482\":1}}],[\"对象中读写多种数值类型的底层接口\",{\"1\":{\"408\":1}}],[\"对象中\",{\"1\":{\"402\":1}}],[\"对象中只存在于浏览器环境中\",{\"1\":{\"390\":1}}],[\"对象中创建\",{\"1\":{\"389\":1}}],[\"对象中所包含数据的大小\",{\"1\":{\"388\":1}}],[\"对象中作为方法被引用\",{\"1\":{\"353\":1}}],[\"对象上的所有属性依次进行观测\",{\"1\":{\"1534\":1}}],[\"对象上的不同属性\",{\"1\":{\"1366\":1}}],[\"对象上不存在的属性时\",{\"1\":{\"1366\":1}}],[\"对象上定义了两个方法\",{\"1\":{\"455\":1}}],[\"对象上将前\",{\"1\":{\"400\":1}}],[\"对象上有两个属性\",{\"1\":{\"388\":1}}],[\"对象上即可\",{\"1\":{\"354\":1}}],[\"对象就是一个不可修改的二进制文件\",{\"1\":{\"387\":1}}],[\"对象为止\",{\"1\":{\"482\":1}}],[\"对象为\",{\"1\":{\"360\":1}}],[\"对象调用\",{\"1\":{\"340\":1}}],[\"对象以外\",{\"1\":{\"286\":1,\"678\":1}}],[\"对象的可选名称\",{\"1\":{\"2665\":1}}],[\"对象的创建比较复杂\",{\"1\":{\"1748\":1}}],[\"对象的依赖收集\",{\"0\":{\"1560\":1}}],[\"对象的数据劫持\",{\"0\":{\"1534\":1}}],[\"对象的数据源\",{\"1\":{\"409\":1}}],[\"对象的形状\",{\"1\":{\"1338\":1}}],[\"对象的内容不太相同\",{\"1\":{\"879\":1}}],[\"对象的每个属性都将被分配一个变量\",{\"1\":{\"838\":1}}],[\"对象的一个属性\",{\"1\":{\"817\":1}}],[\"对象的一个接口\",{\"1\":{\"724\":1}}],[\"对象的字符串表示形式\",{\"1\":{\"782\":1}}],[\"对象的字节长度\",{\"1\":{\"409\":1}}],[\"对象的中的某属性值为\",{\"1\":{\"767\":1}}],[\"对象的合并等多个用途\",{\"1\":{\"755\":1}}],[\"对象的状态改为\",{\"1\":{\"592\":1}}],[\"对象的状态改变\",{\"1\":{\"565\":1}}],[\"对象的原型没有原型\",{\"1\":{\"482\":1}}],[\"对象的原型\",{\"1\":{\"482\":1}}],[\"对象的第一个字节在\",{\"1\":{\"409\":1}}],[\"对象的置顶部分\",{\"1\":{\"400\":1}}],[\"对象的方式就是拖放\",{\"1\":{\"392\":1}}],[\"对象的属性值\",{\"1\":{\"879\":1}}],[\"对象的属性与要分配的属性一致时可以使用这种形式\",{\"1\":{\"838\":1}}],[\"对象的属性里面成环\",{\"1\":{\"765\":1}}],[\"对象的属性如果为引用类型\",{\"1\":{\"484\":1}}],[\"对象的属性和方法\",{\"1\":{\"359\":1}}],[\"对象的属性是没有顺序的\",{\"1\":{\"253\":1}}],[\"对象的\",{\"0\":{\"305\":1},\"1\":{\"350\":1,\"395\":1,\"583\":1}}],[\"对象的扩展运算符\",{\"0\":{\"301\":1}}],[\"对象的解构赋值\",{\"0\":{\"838\":1}}],[\"对象的解构赋值也是支持默认值的\",{\"1\":{\"253\":1}}],[\"对象的解构赋值的本质其实是先找到同名的属性\",{\"1\":{\"253\":1}}],[\"对象解构又称为对象属性分配模式\",{\"1\":{\"838\":1}}],[\"对象解构\",{\"0\":{\"253\":1},\"1\":{\"837\":1}}],[\"对象\",{\"0\":{\"785\":1,\"792\":1,\"800\":1},\"1\":{\"234\":2,\"261\":2,\"263\":1,\"340\":1,\"350\":1,\"354\":1,\"360\":1,\"362\":2,\"390\":4,\"391\":3,\"392\":1,\"394\":1,\"395\":2,\"398\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"409\":1,\"413\":2,\"433\":1,\"449\":2,\"451\":1,\"535\":2,\"536\":3,\"537\":1,\"566\":1,\"567\":1,\"568\":2,\"592\":1,\"594\":2,\"595\":5,\"597\":2,\"641\":1,\"650\":1,\"653\":1,\"656\":1,\"663\":1,\"763\":1,\"767\":1,\"800\":1,\"813\":1,\"879\":1,\"1217\":1,\"1236\":1,\"1279\":1,\"1464\":2,\"1491\":1,\"1644\":1,\"1646\":2,\"1670\":2,\"2321\":1}}],[\"对象传播的阶段\",{\"1\":{\"234\":1,\"240\":1}}],[\"对象自上而下向目标节点传播的阶段\",{\"1\":{\"234\":1}}],[\"对于webxr项目\",{\"1\":{\"2838\":1}}],[\"对于每一个片元\",{\"1\":{\"2742\":1}}],[\"对于rgb和rgba纹理\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"对于如何使用它\",{\"1\":{\"2542\":1}}],[\"对于多窗口或者多显示器的设置是很有用的\",{\"1\":{\"2542\":1}}],[\"对于多数编程语言\",{\"1\":{\"895\":1}}],[\"对于主路径\",{\"1\":{\"2212\":1}}],[\"对于著路径\",{\"1\":{\"2212\":1}}],[\"对于通信线路常见的设计目标主要有两个\",{\"1\":{\"2212\":1}}],[\"对于时间期限最近的任务\",{\"1\":{\"2190\":2}}],[\"对于程序中存在的错误和不一致性\",{\"1\":{\"2095\":1}}],[\"对于网络计划中以终点为完成节点的活动\",{\"1\":{\"1955\":1}}],[\"对于⽐较频繁的场景⽽⾔传输效率实在太低\",{\"1\":{\"1730\":1}}],[\"对于所有按序到达的报文段\",{\"1\":{\"1724\":1}}],[\"对于可靠传输\",{\"1\":{\"1713\":1}}],[\"对于可能在组件卸载后才完成的异步请求\",{\"1\":{\"1249\":1}}],[\"对于复杂的存储需求来说是不够用的\",{\"1\":{\"1660\":1}}],[\"对于大多数占用空间大\",{\"1\":{\"1648\":1}}],[\"对于新老两块内存区域的垃圾回收\",{\"1\":{\"1648\":1}}],[\"对于上述代码\",{\"1\":{\"1366\":1}}],[\"对于上述例子\",{\"1\":{\"395\":1}}],[\"对于需要计算得到的初始状态\",{\"1\":{\"1297\":1}}],[\"对于简单的状态管理\",{\"1\":{\"1275\":1}}],[\"对于简单数据类型直接拷贝他的值\",{\"1\":{\"761\":1}}],[\"对于后来查看代码的其他开发者来说\",{\"1\":{\"1269\":1}}],[\"对于没有经过\",{\"1\":{\"1212\":1}}],[\"对于改善用户的体验和页面性能很有帮助\",{\"1\":{\"812\":1}}],[\"对于任何数据类型\",{\"1\":{\"772\":1}}],[\"对于任何数x\",{\"1\":{\"610\":1}}],[\"对于引用数据类型\",{\"1\":{\"761\":1}}],[\"对于引用类型的值\",{\"1\":{\"640\":1}}],[\"对于数组的遍历\",{\"1\":{\"719\":1}}],[\"对于数组\",{\"1\":{\"700\":1}}],[\"对于特殊的数据类型\",{\"1\":{\"657\":1}}],[\"对于字面量方式创建出来的结果是基本的数据类型值\",{\"1\":{\"657\":1}}],[\"对于基本数据类型来说\",{\"1\":{\"657\":1}}],[\"对于基本类型的数据\",{\"1\":{\"247\":1}}],[\"对于不全等运算符\",{\"1\":{\"627\":1}}],[\"对于不等于运算符\",{\"1\":{\"627\":1}}],[\"对于全等运算符\",{\"1\":{\"627\":1}}],[\"对于负数的操作\",{\"1\":{\"614\":1}}],[\"对于正数\",{\"1\":{\"614\":1}}],[\"对于这四种即使通信协议\",{\"1\":{\"1737\":1}}],[\"对于这些类型\",{\"1\":{\"602\":1}}],[\"对于这段代码\",{\"1\":{\"354\":1}}],[\"对于异步编程来说\",{\"1\":{\"578\":1}}],[\"对于其他模块不可见\",{\"1\":{\"449\":1}}],[\"对于以下代码\",{\"1\":{\"445\":1}}],[\"对于某些类型的事件\",{\"1\":{\"432\":1}}],[\"对于微任务\",{\"1\":{\"376\":1}}],[\"对于单个参数\",{\"1\":{\"260\":1}}],[\"对于html体系而言\",{\"1\":{\"215\":1}}],[\"对于\",{\"1\":{\"33\":1,\"76\":1,\"413\":1,\"662\":1,\"698\":1,\"1211\":1,\"1646\":1}}],[\"变得更真实一些\",{\"1\":{\"2737\":1}}],[\"变形目标数据被视为相对偏移量\",{\"1\":{\"2291\":1}}],[\"变化的过渡\",{\"1\":{\"1312\":1}}],[\"变化\",{\"1\":{\"1269\":1}}],[\"变化造成子孙组件频繁的重新渲染\",{\"1\":{\"1229\":1}}],[\"变化而重新渲染的组件\",{\"1\":{\"1212\":1}}],[\"变化时\",{\"1\":{\"724\":1}}],[\"变更部分的正确性和对变更需求的符合性\",{\"1\":{\"1940\":1}}],[\"变更实现\",{\"1\":{\"1926\":1}}],[\"变更分析和成本计算\",{\"1\":{\"1926\":1}}],[\"变更控制\",{\"1\":{\"1907\":1,\"1961\":1}}],[\"变更预设值\",{\"1\":{\"944\":1}}],[\"变更状态\",{\"1\":{\"581\":1}}],[\"变\",{\"1\":{\"606\":6}}],[\"变成了一个对象字符串或数字\",{\"1\":{\"806\":1}}],[\"变成\",{\"1\":{\"577\":1}}],[\"变为十进制\",{\"1\":{\"609\":1}}],[\"变为\",{\"1\":{\"565\":2}}],[\"变动事件\",{\"1\":{\"233\":1}}],[\"变量没被声明\",{\"1\":{\"1653\":1}}],[\"变量没有被销毁\",{\"0\":{\"506\":1}}],[\"变量有多种写法\",{\"1\":{\"1514\":1}}],[\"变量类型设置为\",{\"1\":{\"1418\":1}}],[\"变量如果在声明的时候\",{\"1\":{\"1417\":1}}],[\"变量不正确执行\",{\"1\":{\"1105\":1}}],[\"变量作用也是固定的\",{\"1\":{\"1105\":1}}],[\"变量作用是固定的\",{\"1\":{\"1104\":1}}],[\"变量作为一个\",{\"1\":{\"900\":1}}],[\"变量可以自定义\",{\"1\":{\"1099\":1}}],[\"变量默认类型都是字符串\",{\"1\":{\"1091\":1}}],[\"变量名不能自定义\",{\"1\":{\"1105\":1}}],[\"变量名不能为数字开头\",{\"1\":{\"1093\":1}}],[\"变量名\",{\"1\":{\"1102\":1,\"1104\":2,\"1105\":1,\"1106\":1,\"1109\":1}}],[\"变量名=变量值\",{\"1\":{\"1100\":1}}],[\"变量名在有效范围内必须唯一\",{\"1\":{\"1091\":1}}],[\"变量名的长度不能超过\",{\"1\":{\"1091\":1}}],[\"变量必须以字母或下划线开头\",{\"1\":{\"1091\":1}}],[\"变量必须与属性同名才能去取到值\",{\"1\":{\"253\":1}}],[\"变量的类型并赋值给\",{\"1\":{\"1365\":1}}],[\"变量的分类\",{\"0\":{\"1092\":1}}],[\"变量的值\",{\"1\":{\"900\":1}}],[\"变量的存在\",{\"1\":{\"511\":1}}],[\"变量是会报错的\",{\"1\":{\"898\":1}}],[\"变量是在\",{\"1\":{\"897\":1}}],[\"变量是不具备这种能力的\",{\"1\":{\"896\":1}}],[\"变量在任何地方都是可以被访问到的\",{\"1\":{\"896\":1}}],[\"变量一般会分为全局变量和局部变量\",{\"1\":{\"896\":1}}],[\"变量环境中\",{\"1\":{\"510\":1}}],[\"变量被覆盖\",{\"0\":{\"505\":1}}],[\"变量被提升后\",{\"1\":{\"500\":1}}],[\"变量形式声明\",{\"1\":{\"500\":1}}],[\"变量会被添加到全局对象中\",{\"1\":{\"445\":1}}],[\"变量提升机制会导致很多误操作\",{\"1\":{\"507\":1}}],[\"变量提升导致的问题\",{\"0\":{\"504\":1}}],[\"变量提升可以在一定程度上提高js的容错性\",{\"1\":{\"503\":1}}],[\"变量提升和\",{\"1\":{\"501\":1}}],[\"变量提升是指在\",{\"1\":{\"500\":1}}],[\"变量提升的本质是\",{\"1\":{\"249\":1}}],[\"变量提升\",{\"0\":{\"249\":1,\"499\":1},\"1\":{\"500\":2,\"898\":1},\"2\":{\"513\":1}}],[\"变量指向数据的内存地址\",{\"1\":{\"247\":1}}],[\"变量\",{\"0\":{\"1090\":1},\"1\":{\"19\":1,\"62\":1,\"428\":1,\"500\":1,\"505\":1,\"506\":2,\"511\":1,\"712\":1,\"713\":1,\"872\":1,\"873\":1,\"875\":1,\"895\":2,\"898\":1,\"903\":2,\"1167\":1,\"1168\":1,\"1416\":1,\"1646\":1}}],[\"合法参数是一个0\",{\"1\":{\"2839\":1}}],[\"合作与学习\",{\"1\":{\"1904\":1}}],[\"合作伙伴\",{\"1\":{\"1887\":1}}],[\"合格证\",{\"1\":{\"1869\":1}}],[\"合并数据\",{\"1\":{\"1609\":1}}],[\"合并指定提交\",{\"0\":{\"1602\":1}}],[\"合并分支\",{\"0\":{\"1596\":1}}],[\"合并\",{\"0\":{\"1508\":1}}],[\"合并对象\",{\"1\":{\"1484\":1}}],[\"合并更新\",{\"1\":{\"1199\":1}}],[\"合并多个slice\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"合并多个任务的错误处理\",{\"1\":{\"569\":1}}],[\"合并各个模块的reducer\",{\"1\":{\"1159\":1,\"1183\":1}}],[\"合适的时机清除定时器\",{\"1\":{\"430\":1}}],[\"合成事件中\",{\"1\":{\"1201\":1}}],[\"合成事件\",{\"1\":{\"233\":1}}],[\"合理的设计title\",{\"1\":{\"219\":1}}],[\"代价是计算成本更高\",{\"1\":{\"2717\":1}}],[\"代理对象\",{\"1\":{\"1798\":1}}],[\"代理对象可以控制访问目标对象\",{\"1\":{\"1796\":1}}],[\"代理模式可以实现一些性能优化策略\",{\"1\":{\"1796\":1}}],[\"代理模式可以封装目标对象的复杂性\",{\"1\":{\"1796\":1}}],[\"代理模式的关键是\",{\"1\":{\"1793\":1}}],[\"代理模式\",{\"0\":{\"1792\":1},\"1\":{\"1793\":1},\"2\":{\"1800\":1}}],[\"代理到实例对象\",{\"1\":{\"1533\":1}}],[\"代理\",{\"1\":{\"1533\":1}}],[\"代理服务器转发请求的时候用的协议版本\",{\"1\":{\"1153\":1}}],[\"代表活动对象\",{\"1\":{\"1650\":1}}],[\"代表e已经被响应式观测了\",{\"1\":{\"1563\":1}}],[\"代表和观察者相关\",{\"1\":{\"1557\":1}}],[\"代表开始标签解析完毕\",{\"1\":{\"1550\":1}}],[\"代表一个标签匹配到结束的>了\",{\"1\":{\"1550\":1}}],[\"代表根节点\",{\"1\":{\"1550\":1}}],[\"代表了与生命周期相关\",{\"1\":{\"1525\":1}}],[\"代表的是该数据已经被响应式观察过了指向observer实例\",{\"1\":{\"1535\":1}}],[\"代表的是vue源码里面包含了compile编译功能\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"代表的是所有非原始类型\",{\"1\":{\"1431\":1}}],[\"代表传入的是定义好的methods方法\",{\"1\":{\"1491\":1}}],[\"代表所有拥有\",{\"1\":{\"1431\":1}}],[\"代表范围\",{\"1\":{\"1088\":1}}],[\"代表重复前一个搜寻的动作\",{\"1\":{\"1062\":1}}],[\"代表不论多少层都要展开\",{\"1\":{\"739\":1}}],[\"代表创建后独一无二且不可变的数据类型\",{\"1\":{\"650\":1}}],[\"代表异步javascript编程范式的迁移\",{\"1\":{\"594\":1}}],[\"代表数组中所有\",{\"1\":{\"582\":1}}],[\"代表事件句柄在冒泡阶段执行\",{\"1\":{\"232\":1}}],[\"代替if\",{\"1\":{\"607\":1}}],[\"代替\",{\"1\":{\"232\":1,\"2177\":1}}],[\"代码是从dom\",{\"1\":{\"2753\":1,\"2763\":1}}],[\"代码是这样写\",{\"1\":{\"1274\":1}}],[\"代码通过缓冲区来修改它们的值\",{\"1\":{\"2742\":1}}],[\"代码添加任何内容\",{\"1\":{\"2741\":1}}],[\"代码必须使用\",{\"1\":{\"2741\":1}}],[\"代码必须放在在页面第一次加载完成之前\",{\"1\":{\"207\":1}}],[\"代码质量高\",{\"1\":{\"2189\":1}}],[\"代码code\",{\"1\":{\"1996\":1}}],[\"代码走查\",{\"1\":{\"1938\":1}}],[\"代码审查\",{\"1\":{\"1938\":1}}],[\"代码也稍复杂\",{\"1\":{\"1752\":1}}],[\"代码运行时\",{\"1\":{\"1643\":1}}],[\"代码组织\",{\"1\":{\"1274\":1}}],[\"代码内部引用的所有响应式值的列表\",{\"1\":{\"1241\":1}}],[\"代码解释器会首先在当前的作用域查找\",{\"1\":{\"901\":1}}],[\"代码块的前后输出\",{\"1\":{\"898\":1}}],[\"代码块中定义的变量会被销毁\",{\"1\":{\"501\":1}}],[\"代码片段在执行之前都会被编译\",{\"1\":{\"895\":1}}],[\"代码片段在执行前都要进行编译\",{\"1\":{\"895\":1}}],[\"代码生成\",{\"1\":{\"895\":2}}],[\"代码精简许多\",{\"1\":{\"819\":1}}],[\"代码就精简了很多\",{\"1\":{\"624\":1}}],[\"代码就会更加清晰\",{\"1\":{\"442\":1}}],[\"代码读起来更加同步\",{\"1\":{\"596\":1}}],[\"代码不能很好地表示执行流程\",{\"1\":{\"596\":1}}],[\"代码仍然是异步的\",{\"1\":{\"594\":1}}],[\"代码仍然在引用它\",{\"1\":{\"437\":1}}],[\"代码如下\",{\"1\":{\"592\":1,\"731\":1,\"749\":1,\"903\":1,\"1311\":1}}],[\"代码虽然只有几行\",{\"1\":{\"590\":1}}],[\"代码往往都会采用这样的方式\",{\"1\":{\"590\":1}}],[\"代码可以这样写\",{\"1\":{\"569\":1}}],[\"代码单元\",{\"1\":{\"518\":1}}],[\"代码会正常运行\",{\"1\":{\"503\":1}}],[\"代码会变得难以阅读\",{\"1\":{\"442\":1}}],[\"代码执行也更快了\",{\"1\":{\"502\":1}}],[\"代码执行过程中\",{\"1\":{\"500\":1}}],[\"代码时就是这种情况\",{\"1\":{\"463\":1}}],[\"代码都可以在\",{\"1\":{\"462\":1}}],[\"代码输出结果如下\",{\"1\":{\"376\":1}}],[\"代码的生成\",{\"1\":{\"1454\":1}}],[\"代码的作用域以块级为单位进行执行\",{\"1\":{\"903\":1}}],[\"代码的可读性就变得非常差了\",{\"1\":{\"569\":1}}],[\"代码的\",{\"1\":{\"371\":1}}],[\"代码的环境的抽象概念\",{\"1\":{\"350\":1}}],[\"代码在运行时\",{\"1\":{\"350\":1}}],[\"代码清单等\",{\"1\":{\"215\":1}}],[\"代码示例\",{\"0\":{\"2278\":1,\"2455\":1,\"2462\":1},\"1\":{\"215\":1}}],[\"代码控制\",{\"1\":{\"207\":1}}],[\"代码中声明\",{\"1\":{\"2744\":1}}],[\"代码中添加任何东西\",{\"1\":{\"2743\":1}}],[\"代码中的空格在\",{\"1\":{\"895\":1}}],[\"代码中有两个\",{\"1\":{\"505\":1}}],[\"代码中只有⼀个全局执⾏上下⽂和⽆数个函数执⾏上下⽂\",{\"1\":{\"351\":1}}],[\"代码中\",{\"1\":{\"206\":1,\"506\":1}}],[\"代码中使用的逻辑像素\",{\"1\":{\"202\":1}}],[\"代码量大\",{\"1\":{\"204\":1}}],[\"代码没有变化\",{\"0\":{\"98\":1}}],[\"代码\",{\"0\":{\"94\":1},\"1\":{\"206\":1,\"383\":1,\"443\":1,\"864\":2,\"1650\":2,\"1702\":1}}],[\"代码格式化\",{\"0\":{\"18\":1,\"61\":1}}],[\"代码格式\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"例外\",{\"1\":{\"1089\":1}}],[\"例子\",{\"1\":{\"813\":1}}],[\"例5\",{\"1\":{\"239\":1}}],[\"例4\",{\"1\":{\"236\":1}}],[\"例3\",{\"1\":{\"234\":1}}],[\"例2\",{\"1\":{\"232\":1}}],[\"例1\",{\"1\":{\"231\":1}}],[\"例如该对象的材质\",{\"1\":{\"2860\":1}}],[\"例如该对象的纹理或图片\",{\"1\":{\"2691\":1}}],[\"例如玻璃\",{\"1\":{\"2737\":1}}],[\"例如unity\",{\"1\":{\"2717\":1}}],[\"例如utf\",{\"1\":{\"1702\":1}}],[\"例如涂漆木材\",{\"1\":{\"2593\":1,\"2613\":1}}],[\"例如未经处理的木材或石材\",{\"1\":{\"2593\":1}}],[\"例如对象后代中的纹理或图像\",{\"1\":{\"2545\":1,\"2589\":1}}],[\"例如纹理\",{\"1\":{\"2454\":1}}],[\"例如实体关系模型\",{\"1\":{\"1905\":1}}],[\"例如数据和控制流模型\",{\"1\":{\"1905\":1}}],[\"例如数组\",{\"1\":{\"328\":1}}],[\"例如调用图\",{\"1\":{\"1905\":1}}],[\"例如不同级别的日志记录器\",{\"1\":{\"1835\":1}}],[\"例如代理对象的创建\",{\"1\":{\"1797\":1}}],[\"例如延迟加载\",{\"1\":{\"1796\":1}}],[\"例如需要登录才能进行操作的功能或需要特定权限才能查看的数据\",{\"1\":{\"1794\":1}}],[\"例如微信\",{\"1\":{\"1755\":1}}],[\"例如我们在掘金社区控制台输入以下三句代码\",{\"1\":{\"1659\":1}}],[\"例如查看最近三次提交\",{\"1\":{\"1631\":1}}],[\"例如日志\",{\"1\":{\"1275\":1}}],[\"例如减少网络请求\",{\"1\":{\"1237\":1}}],[\"例如这个非常典型的案例\",{\"1\":{\"1212\":1}}],[\"例如事件处理器\",{\"1\":{\"1209\":1}}],[\"例如服务器名称\",{\"1\":{\"1153\":1}}],[\"例如出现502错误时会调用此页面\",{\"1\":{\"1150\":1}}],[\"例如向下删除10行\",{\"1\":{\"1063\":1}}],[\"例如要在档案内搜寻vbird这个字符串\",{\"1\":{\"1062\":1}}],[\"例如20yy则是复制20行\",{\"1\":{\"1063\":1}}],[\"例如20dd则是剪切20行\",{\"1\":{\"1063\":1}}],[\"例如20\",{\"1\":{\"1061\":1}}],[\"例如键盘\",{\"1\":{\"1029\":1}}],[\"例如删除\",{\"1\":{\"1007\":1}}],[\"例如权限校验\",{\"1\":{\"1796\":1}}],[\"例如权限\",{\"1\":{\"1006\":2}}],[\"例如外围设备代号\",{\"1\":{\"989\":1}}],[\"例如ls\",{\"1\":{\"983\":1}}],[\"例如cat\",{\"1\":{\"983\":1}}],[\"例如可执行档则加\",{\"1\":{\"972\":1}}],[\"例如二进制的基是\",{\"1\":{\"662\":1}}],[\"例如读取文件默认的\",{\"1\":{\"560\":1}}],[\"例如类型数组对象或\",{\"1\":{\"401\":1}}],[\"例如下面的代码\",{\"1\":{\"381\":1,\"382\":1}}],[\"例如表单一点击提交按钮\",{\"1\":{\"239\":1}}],[\"例如\",{\"1\":{\"20\":1,\"63\":1,\"205\":1,\"322\":1,\"386\":1,\"443\":1,\"467\":1,\"606\":3,\"607\":1,\"608\":1,\"609\":1,\"610\":1,\"611\":1,\"613\":1,\"644\":1,\"765\":1,\"772\":2,\"773\":1,\"774\":1,\"795\":1,\"804\":1,\"805\":2,\"806\":3,\"973\":3,\"1016\":1,\"1040\":1,\"1061\":1,\"1062\":1,\"1201\":1,\"1212\":1,\"1227\":1,\"1235\":1,\"1243\":1,\"1258\":1,\"1259\":2,\"1281\":1,\"1285\":1,\"1287\":1,\"1290\":1,\"1303\":1,\"1416\":1,\"1618\":1,\"1706\":1,\"1715\":2,\"1794\":3,\"2004\":1,\"2005\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2028\":2,\"2133\":1,\"2461\":1,\"2742\":1,\"2743\":1,\"2800\":1,\"2806\":1}}],[\"级数字化和产业互联网级网络化\",{\"1\":{\"1889\":1}}],[\"级联\",{\"1\":{\"1707\":1}}],[\"级事件也允许使用者自定义一些事件\",{\"1\":{\"233\":1}}],[\"级事件的基础上添加了更多的事件类型\",{\"1\":{\"233\":1}}],[\"级事件\",{\"0\":{\"231\":1,\"232\":1,\"233\":1},\"1\":{\"230\":1}}],[\"级事件处理和\",{\"1\":{\"230\":1}}],[\"级事件处理\",{\"1\":{\"230\":2}}],[\"级中没有事件的相关内容\",{\"1\":{\"230\":1}}],[\"级和\",{\"1\":{\"230\":1}}],[\"级\",{\"1\":{\"230\":3}}],[\"级别一共可以分为四个级别\",{\"1\":{\"230\":1}}],[\"动作等等\",{\"1\":{\"929\":1}}],[\"动作\",{\"1\":{\"919\":2,\"1006\":2}}],[\"动态分配\",{\"1\":{\"2210\":1}}],[\"动态主机配置协议\",{\"1\":{\"2210\":1}}],[\"动态算法\",{\"1\":{\"2077\":1}}],[\"动态测试\",{\"1\":{\"1938\":1}}],[\"动态系统开发方法\",{\"1\":{\"1904\":1}}],[\"动态原则\",{\"1\":{\"1851\":1}}],[\"动态的组织结构\",{\"1\":{\"2016\":1}}],[\"动态的扩展功能\",{\"1\":{\"1535\":1}}],[\"动态的传递参数starname到服务端\",{\"1\":{\"864\":1,\"866\":1}}],[\"动态创建的函数\",{\"1\":{\"1303\":1}}],[\"动态语言\",{\"1\":{\"895\":1}}],[\"动态属性解构\",{\"0\":{\"849\":1}}],[\"动态\",{\"0\":{\"1222\":1},\"1\":{\"471\":1,\"1812\":1}}],[\"动态导入可以在常规脚本中使用\",{\"1\":{\"471\":1}}],[\"动态导入\",{\"0\":{\"471\":1}}],[\"动态加载模块\",{\"1\":{\"334\":1}}],[\"动态绑定事件\",{\"1\":{\"236\":1}}],[\"动态配置\",{\"1\":{\"109\":1}}],[\"动画混合器是用于场景中特定对象的动画的播放器\",{\"1\":{\"2492\":1}}],[\"动画剪辑\",{\"1\":{\"2488\":1}}],[\"动画\",{\"0\":{\"2891\":1},\"2\":{\"2486\":1,\"2490\":1,\"2494\":1}}],[\"动画处理\",{\"0\":{\"1289\":1}}],[\"动画的启动或某些可见的快速\",{\"1\":{\"1259\":1}}],[\"动画速度越快\",{\"1\":{\"226\":1}}],[\"动画实现的速度的选择\",{\"1\":{\"226\":1}}],[\"替压缩文件加上注释\",{\"1\":{\"1018\":1}}],[\"替每个被压缩的文件加上注释\",{\"1\":{\"1018\":1}}],[\"替换老的vm\",{\"1\":{\"1479\":1}}],[\"替换原本的dom元素\",{\"1\":{\"1476\":1}}],[\"替换掉老节点\",{\"1\":{\"1476\":1}}],[\"替换模式\",{\"1\":{\"1057\":1}}],[\"替换规则可以是字符串或者正则表达式\",{\"1\":{\"326\":1}}],[\"替换\",{\"1\":{\"226\":1,\"703\":2}}],[\"替代\",{\"1\":{\"226\":1}}],[\"内的t\",{\"1\":{\"2340\":1}}],[\"内的u\",{\"1\":{\"2340\":1}}],[\"内\",{\"1\":{\"2176\":1,\"2334\":1}}],[\"内聚\",{\"0\":{\"1931\":1}}],[\"内未收到确认\",{\"1\":{\"1713\":1}}],[\"内置\",{\"0\":{\"2743\":1},\"1\":{\"2741\":1}}],[\"内置对象是指根据标准在全局作用域\",{\"1\":{\"1356\":1}}],[\"内置的一些\",{\"1\":{\"773\":1}}],[\"内置的\",{\"1\":{\"444\":1,\"1334\":1}}],[\"内核可以看到成连接应用程序和硬件的一座桥梁\",{\"1\":{\"2192\":1}}],[\"内核是操作系统的核心部分\",{\"1\":{\"2192\":1}}],[\"内核\",{\"1\":{\"1577\":1}}],[\"内核会等待将更多的字节组成一个数据包\",{\"1\":{\"1153\":1}}],[\"内核发动亲故以便运行程序的界面系统级程序\",{\"1\":{\"1077\":1}}],[\"内存或文件\",{\"1\":{\"2195\":1}}],[\"内存利用率低\",{\"1\":{\"2161\":1}}],[\"内存碎片浪费大\",{\"1\":{\"2161\":1}}],[\"内存碎片化\",{\"1\":{\"1646\":1}}],[\"内存碎片\",{\"1\":{\"1646\":1}}],[\"内存管理中有一个概念叫做\",{\"1\":{\"1646\":1}}],[\"内存资源信息和磁盘分析信息等\",{\"1\":{\"913\":1}}],[\"内存使用量却在逐渐增加\",{\"1\":{\"425\":1}}],[\"内存使用检查最快的方法就是查看浏览器的任务管理器\",{\"1\":{\"425\":1}}],[\"内存占用情况\",{\"1\":{\"425\":1}}],[\"内存由操作系统分配\",{\"1\":{\"425\":1}}],[\"内存是有生命周期的\",{\"1\":{\"425\":1}}],[\"内存泄漏的几种情况\",{\"0\":{\"1653\":1}}],[\"内存泄漏是很难被发现的\",{\"1\":{\"425\":1}}],[\"内存泄漏\",{\"0\":{\"424\":1,\"1652\":1},\"1\":{\"1805\":1,\"1813\":1},\"2\":{\"439\":1}}],[\"内存地址是不一样的\",{\"1\":{\"272\":1}}],[\"内容包含进程标识符\",{\"1\":{\"2150\":1}}],[\"内容安全和行为安全\",{\"1\":{\"2100\":1}}],[\"内容便无法共享\",{\"1\":{\"1666\":1}}],[\"内容\",{\"1\":{\"938\":1,\"939\":1,\"940\":1}}],[\"内容初始化为\",{\"1\":{\"398\":1}}],[\"内容中\",{\"1\":{\"340\":1}}],[\"内容变化\",{\"1\":{\"224\":1}}],[\"内使用\",{\"1\":{\"299\":1}}],[\"内部调用color\",{\"1\":{\"2697\":1}}],[\"内部增加\",{\"1\":{\"2296\":1}}],[\"内部确认测试\",{\"1\":{\"1940\":1}}],[\"内部数据\",{\"1\":{\"1933\":1}}],[\"内部设计\",{\"1\":{\"1929\":1}}],[\"内部采用对象仓库\",{\"1\":{\"1670\":1}}],[\"内部实现\",{\"1\":{\"1466\":2}}],[\"内部\",{\"1\":{\"1285\":1,\"2032\":1,\"2742\":1}}],[\"内部更新\",{\"1\":{\"1285\":1}}],[\"内部时的默认值\",{\"1\":{\"1217\":1}}],[\"内部命令\",{\"1\":{\"1081\":1}}],[\"内部进行布尔转换\",{\"1\":{\"795\":1}}],[\"内部抛出的错误\",{\"1\":{\"565\":1}}],[\"内部的代码就会立即被执行\",{\"1\":{\"565\":1}}],[\"内部的box垂直方向的距离由margin决定\",{\"1\":{\"149\":1}}],[\"内部的box会在垂直方向\",{\"1\":{\"149\":1}}],[\"内部通常不知道\",{\"1\":{\"300\":1}}],[\"内部使用\",{\"1\":{\"289\":1,\"1309\":1}}],[\"内部链接文字\",{\"1\":{\"218\":1}}],[\"宽度和高度\",{\"1\":{\"224\":1}}],[\"宽度自适应\",{\"1\":{\"205\":1}}],[\"边缘几何体\",{\"0\":{\"2449\":1}}],[\"边缘计算的本质\",{\"1\":{\"2057\":1}}],[\"边缘计算\",{\"0\":{\"2057\":1},\"1\":{\"2057\":1}}],[\"边界球形不会默认计算\",{\"1\":{\"2304\":1}}],[\"边界矩形不会默认计算\",{\"1\":{\"2303\":1}}],[\"边界值分析\",{\"1\":{\"1939\":1}}],[\"边界类\",{\"1\":{\"1936\":1}}],[\"边框\",{\"1\":{\"224\":1}}],[\"边距\",{\"1\":{\"224\":1}}],[\"填充的值\",{\"1\":{\"287\":1,\"684\":1}}],[\"填充\",{\"1\":{\"224\":1}}],[\"改\",{\"1\":{\"1949\":1}}],[\"改正性维护\",{\"1\":{\"1949\":1}}],[\"改进原有系统\",{\"1\":{\"1847\":1}}],[\"改名为目录名\",{\"1\":{\"1001\":1}}],[\"改为对象\",{\"1\":{\"1650\":1}}],[\"改为了对象\",{\"1\":{\"1650\":1}}],[\"改为目标文件名\",{\"1\":{\"1001\":1}}],[\"改为npx\",{\"1\":{\"27\":1,\"70\":1}}],[\"改造原型渲染更新方法\",{\"0\":{\"1479\":1}}],[\"改造一下\",{\"1\":{\"1370\":1}}],[\"改造之后的代码如下\",{\"1\":{\"903\":1}}],[\"改造后的代码如下\",{\"1\":{\"736\":1}}],[\"改写后\",{\"1\":{\"624\":1}}],[\"改变一下内部文本节点的\",{\"1\":{\"1475\":1}}],[\"改变时\",{\"1\":{\"1265\":1}}],[\"改变文件的群组属性\",{\"1\":{\"1033\":1}}],[\"改变群组\",{\"1\":{\"963\":1}}],[\"改变用户的uid\",{\"1\":{\"951\":1}}],[\"改变原数组的方法\",{\"1\":{\"682\":1}}],[\"改变\",{\"1\":{\"493\":1,\"1212\":1}}],[\"改变导致\",{\"1\":{\"493\":1}}],[\"改变了布局\",{\"1\":{\"226\":1}}],[\"改变父节点里的子节点很可能会导致父节点的一系列回流\",{\"1\":{\"223\":1}}],[\"还要向服务端发送一个确认报文\",{\"1\":{\"1727\":1}}],[\"还要从\",{\"1\":{\"898\":1}}],[\"还需要解决多客户端的并发问题\",{\"1\":{\"2195\":1}}],[\"还需要进行解压\",{\"1\":{\"1699\":1}}],[\"还需要注意以下特殊情况\",{\"1\":{\"616\":1}}],[\"还可防止读\",{\"1\":{\"2260\":1}}],[\"还可能存在其他的资源\",{\"1\":{\"2020\":1}}],[\"还可能会出现分配所需内存过大的对象时找不到合适的块\",{\"1\":{\"1646\":1}}],[\"还可以储存二进制数据\",{\"1\":{\"1670\":1}}],[\"还可以存储二进制数据\",{\"1\":{\"1669\":1}}],[\"还可以按照时间查看日志\",{\"1\":{\"1626\":1}}],[\"还可以根据条件来显示标签\",{\"1\":{\"1617\":1}}],[\"还可以指定返回到n次提交之前的阶段\",{\"1\":{\"1614\":1}}],[\"还可以添加一个\",{\"1\":{\"1603\":1,\"1604\":1}}],[\"还可以设置命令的颜色\",{\"1\":{\"1589\":1}}],[\"还可以表示类型\",{\"1\":{\"1427\":1}}],[\"还可以采用\",{\"1\":{\"732\":1}}],[\"还可以看出\",{\"1\":{\"731\":1}}],[\"还可以给\",{\"1\":{\"677\":1}}],[\"还可以处理基本数据类型的检测\",{\"1\":{\"658\":1}}],[\"还可以用\",{\"1\":{\"657\":1}}],[\"还可以用来判断一个属性是否属于对象原型链的一部分\",{\"1\":{\"639\":1}}],[\"还可以使用\",{\"1\":{\"1603\":1,\"2462\":1}}],[\"还可以使用嵌套的解构赋值语法来处理嵌套结构\",{\"1\":{\"836\":1}}],[\"还可以使用继承的对象的方法\",{\"1\":{\"490\":1}}],[\"还可以使用readasdataurl\",{\"1\":{\"414\":1}}],[\"还可以从\",{\"1\":{\"389\":1}}],[\"还可以通过\",{\"1\":{\"320\":1}}],[\"还保证了函数的参数类型\",{\"1\":{\"1428\":1}}],[\"还找不到就认为没有类型声明了\",{\"1\":{\"1357\":1}}],[\"还允许有其他的任意属性\",{\"1\":{\"1340\":1}}],[\"还不会在更新时触发渲染\",{\"1\":{\"1279\":1}}],[\"还能够缓存函数\",{\"1\":{\"1268\":1}}],[\"还提供了\",{\"1\":{\"1267\":1,\"1339\":1}}],[\"还提供了过渡标识\",{\"1\":{\"1233\":1}}],[\"还希望只有最后一次查询的数据被保留\",{\"1\":{\"1235\":1}}],[\"还原其中包含的文件和目录\",{\"1\":{\"1025\":1}}],[\"还原\",{\"1\":{\"763\":1}}],[\"还支持\",{\"1\":{\"578\":1}}],[\"还支持最新的\",{\"1\":{\"448\":1}}],[\"还也可以使用\",{\"1\":{\"566\":1}}],[\"还会把本地的\",{\"1\":{\"1610\":1}}],[\"还会遍历其原型链上的属性\",{\"1\":{\"718\":1,\"881\":1}}],[\"还会为函数生成预编译代码\",{\"1\":{\"502\":1}}],[\"还会不断重新渲染\",{\"1\":{\"223\":1}}],[\"还没有再找\",{\"1\":{\"1357\":1}}],[\"还没有赋值为一个函数\",{\"1\":{\"500\":1}}],[\"还没有加载任何数据\",{\"1\":{\"394\":1}}],[\"还是将其传递给链中的下一个对象\",{\"1\":{\"1835\":1}}],[\"还是一个功能相当强大的编程语言\",{\"1\":{\"1077\":1}}],[\"还是跟你对该档案的档案权限有关啊\",{\"1\":{\"1067\":1}}],[\"还是回到同源策略\",{\"1\":{\"864\":1}}],[\"还是有一些问题没有完全解决\",{\"1\":{\"765\":1}}],[\"还是有区别的\",{\"1\":{\"507\":1}}],[\"还是会排在\",{\"1\":{\"698\":1}}],[\"还是利用上面的输出文件的例子\",{\"1\":{\"591\":1}}],[\"还是尽量要避免变量先使用后声明的写法\",{\"1\":{\"503\":1}}],[\"还是\",{\"1\":{\"365\":1}}],[\"还是上面的结论\",{\"1\":{\"354\":1}}],[\"还得从执行上下文说起\",{\"1\":{\"349\":1}}],[\"还引入了指数操作符\",{\"1\":{\"290\":1}}],[\"还有数据分布独立性\",{\"1\":{\"2229\":1}}],[\"还有其他安全机制\",{\"1\":{\"2132\":1}}],[\"还有引用关系就被回收\",{\"1\":{\"1650\":1}}],[\"还有就是无法解决循环引用无法回收的问题\",{\"1\":{\"1646\":1}}],[\"还有用户自己手动调用的nexttick\",{\"1\":{\"1542\":1}}],[\"还有应用在\",{\"1\":{\"1373\":1}}],[\"还有\",{\"1\":{\"1363\":1,\"1873\":1}}],[\"还有很多操作方法\",{\"1\":{\"700\":1}}],[\"还有一个\",{\"1\":{\"723\":1}}],[\"还有一种使用场景就是有多个循环变量的\",{\"1\":{\"645\":1}}],[\"还有一些特殊的情况\",{\"1\":{\"361\":1}}],[\"还有多个线程\",{\"1\":{\"371\":1}}],[\"还有几个与其搭配一起使用的属性\",{\"1\":{\"202\":1}}],[\"还有在屏幕尺寸大小不同的手机上进行访问页面时\",{\"1\":{\"200\":1}}],[\"高效也可靠\",{\"1\":{\"2213\":1}}],[\"高效运维整个系统\",{\"1\":{\"2056\":1}}],[\"高效和大规模分布式的源代码管理系统\",{\"1\":{\"1577\":1}}],[\"高可伸缩性\",{\"1\":{\"2047\":1}}],[\"高可靠性\",{\"1\":{\"2047\":1}}],[\"高内聚\",{\"1\":{\"1930\":1,\"1978\":1}}],[\"高\",{\"1\":{\"1860\":1}}],[\"高层管理人员介入原则\",{\"1\":{\"1856\":1}}],[\"高阶组件包裹后\",{\"1\":{\"1267\":1}}],[\"高级光线反射\",{\"1\":{\"2737\":1}}],[\"高级阶段\",{\"1\":{\"1969\":1}}],[\"高级技巧\",{\"0\":{\"1284\":1}}],[\"高级用法\",{\"0\":{\"1266\":1}}],[\"高级应用\",{\"0\":{\"1224\":1}}],[\"高于普通运算符的优先级\",{\"1\":{\"646\":1}}],[\"高位丢弃\",{\"1\":{\"606\":1}}],[\"高延迟和性能差\",{\"1\":{\"425\":1}}],[\"高或隐藏元素等\",{\"1\":{\"223\":1}}],[\"高度\",{\"1\":{\"2795\":2}}],[\"高度集成化的人机信息系统\",{\"1\":{\"1864\":1}}],[\"高度不好设置\",{\"1\":{\"205\":1}}],[\"高度的盒子\",{\"1\":{\"181\":1}}],[\"时需要注意以下注意事项\",{\"1\":{\"2741\":1}}],[\"时钟\",{\"0\":{\"2502\":1}}],[\"时钟频率法\",{\"1\":{\"2170\":1}}],[\"时延是个很重要的性能指标\",{\"1\":{\"2201\":1}}],[\"时延是指数据\",{\"1\":{\"2201\":1}}],[\"时延\",{\"0\":{\"2201\":1}}],[\"时域是一个长期过程\",{\"1\":{\"1871\":1}}],[\"时就会在\",{\"1\":{\"1612\":1}}],[\"时的邮箱\",{\"1\":{\"1588\":1}}],[\"时的用户名\",{\"1\":{\"1587\":1}}],[\"时执行的方法\",{\"1\":{\"1507\":1}}],[\"时去计算或调用有副作用的方法\",{\"1\":{\"1286\":1}}],[\"时再修改\",{\"1\":{\"1173\":1}}],[\"时目标文件将被覆盖\",{\"1\":{\"998\":1}}],[\"时所在的目录\",{\"1\":{\"967\":1}}],[\"时使用的一些核心文件\",{\"1\":{\"913\":1}}],[\"时则会在得到结果之前继续执行\",{\"1\":{\"555\":1}}],[\"时代\",{\"1\":{\"500\":1}}],[\"时候\",{\"1\":{\"479\":1}}],[\"时创建的节点\",{\"1\":{\"436\":1}}],[\"时触发\",{\"1\":{\"395\":1}}],[\"时才能转变\",{\"1\":{\"580\":2}}],[\"时才返回右边的值\",{\"1\":{\"321\":1}}],[\"时才会使用默认值\",{\"1\":{\"252\":1}}],[\"时\",{\"1\":{\"223\":2,\"253\":1,\"281\":1,\"413\":1,\"445\":2,\"471\":1,\"510\":1,\"582\":1,\"606\":1,\"607\":1,\"677\":2,\"802\":1,\"803\":1,\"872\":1,\"878\":2,\"896\":1,\"902\":1,\"1067\":1,\"1203\":1,\"1224\":1,\"1281\":1,\"1286\":1,\"1288\":1,\"1299\":1,\"1300\":1,\"1415\":1,\"1430\":1,\"1507\":1,\"1514\":1,\"1646\":1,\"1651\":1,\"1660\":1,\"1706\":1,\"2210\":1,\"2251\":1,\"2462\":1,\"2744\":1}}],[\"时间局部性\",{\"1\":{\"2141\":1}}],[\"时间维\",{\"0\":{\"1847\":1}}],[\"时间上解耦\",{\"1\":{\"1806\":1}}],[\"时间等待\",{\"1\":{\"1728\":1}}],[\"时间也大大缩小了\",{\"1\":{\"1649\":1}}],[\"时间戳\",{\"1\":{\"828\":1}}],[\"时间\",{\"1\":{\"215\":1,\"1729\":1}}],[\"却并未影响其几何属性\",{\"1\":{\"223\":1}}],[\"重写此材质渲染器的默认精度\",{\"1\":{\"2671\":1}}],[\"重写规则\",{\"1\":{\"1698\":1}}],[\"重做事务\",{\"1\":{\"2267\":1}}],[\"重做上一个动作\",{\"1\":{\"1063\":1}}],[\"重做上一次撤销的操作\",{\"1\":{\"1056\":1}}],[\"重要物资储备单位\",{\"1\":{\"2111\":1}}],[\"重要字段\",{\"0\":{\"1453\":1}}],[\"重用\",{\"1\":{\"2027\":1}}],[\"重组\",{\"1\":{\"1905\":1}}],[\"重叠的开发阶段\",{\"1\":{\"1904\":1}}],[\"重点工程建设等单位\",{\"1\":{\"2111\":1}}],[\"重点\",{\"1\":{\"1762\":1}}],[\"重发\",{\"1\":{\"1715\":1}}],[\"重定向\",{\"0\":{\"1697\":1},\"1\":{\"1697\":1}}],[\"重大变化\",{\"1\":{\"1618\":1}}],[\"重命名分支\",{\"0\":{\"1597\":1}}],[\"重启命令\",{\"0\":{\"1145\":1}}],[\"重启\",{\"1\":{\"1137\":1}}],[\"重复读\",{\"1\":{\"2260\":1}}],[\"重复或失序的情况\",{\"1\":{\"1717\":1}}],[\"重复定义\",{\"1\":{\"1514\":1}}],[\"重复执行最后一条历史命令\",{\"1\":{\"1084\":1}}],[\"重复贴上等等动作\",{\"1\":{\"1063\":1}}],[\"重复删除多个数据\",{\"1\":{\"1063\":1}}],[\"重复前一个搜索\",{\"1\":{\"989\":1}}],[\"重复使用群组识别码\",{\"1\":{\"959\":1}}],[\"重复一个字符串\",{\"0\":{\"545\":1}}],[\"重复声明\",{\"0\":{\"250\":1}}],[\"重置\",{\"1\":{\"287\":4,\"684\":4}}],[\"重新设计流程\",{\"1\":{\"1875\":1}}],[\"重新设置\",{\"1\":{\"452\":1}}],[\"重新建立连接\",{\"1\":{\"1737\":1}}],[\"重新执行上面的过程\",{\"1\":{\"1697\":1}}],[\"重新发送\",{\"1\":{\"1697\":1}}],[\"重新生成代码\",{\"0\":{\"1551\":1},\"1\":{\"1549\":1}}],[\"重新渲染期间\",{\"1\":{\"1237\":1}}],[\"重新渲染会相应地延迟\",{\"1\":{\"1237\":1}}],[\"重新渲染会重复重排+重绘或者只有重绘\",{\"1\":{\"223\":1}}],[\"重新渲染时都重新排序评论\",{\"1\":{\"1211\":1}}],[\"重新渲染时\",{\"1\":{\"1210\":1,\"1236\":1}}],[\"重新加载系统服务\",{\"1\":{\"1137\":1}}],[\"重新加载配置\",{\"1\":{\"1135\":1}}],[\"重新启动\",{\"1\":{\"922\":1}}],[\"重新启动计算机\",{\"1\":{\"920\":1}}],[\"重新定义后的\",{\"1\":{\"1366\":1}}],[\"重新定义\",{\"1\":{\"903\":1}}],[\"重新定义了该如何处理这些空位\",{\"1\":{\"679\":1}}],[\"重新赋值\",{\"0\":{\"247\":1}}],[\"重排所需的成本比重绘高的多\",{\"1\":{\"223\":1}}],[\"重排必定会发生重绘\",{\"1\":{\"223\":1}}],[\"重排\",{\"1\":{\"223\":1}}],[\"重绘和重排会在我们设置节点样式时频繁出现\",{\"1\":{\"223\":1}}],[\"重绘不一定会引发重排\",{\"1\":{\"223\":1}}],[\"重绘\",{\"0\":{\"226\":1},\"1\":{\"223\":1}}],[\"重绘与回流\",{\"0\":{\"223\":1}}],[\"重绘与重排\",{\"0\":{\"222\":1}}],[\"重构工程\",{\"1\":{\"1905\":1}}],[\"重构是指在\",{\"1\":{\"1905\":1}}],[\"重构\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1,\"1905\":1}}],[\"标准网格材质\",{\"0\":{\"2716\":1}}],[\"标准接口适配\",{\"1\":{\"1978\":1}}],[\"标准化浏览器等\",{\"1\":{\"2187\":1}}],[\"标准化\",{\"1\":{\"1900\":1}}],[\"标准化和结构化\",{\"1\":{\"1860\":1}}],[\"标头\",{\"1\":{\"1692\":1}}],[\"标志\",{\"1\":{\"1602\":1,\"1603\":1,\"1604\":1}}],[\"标识指定了哪些域名可以接受cookie\",{\"1\":{\"1659\":1}}],[\"标识为\",{\"1\":{\"1571\":1}}],[\"标识元素和文本type\",{\"1\":{\"1550\":1}}],[\"标记的cookie\",{\"1\":{\"1661\":1}}],[\"标记的过程\",{\"1\":{\"1650\":1}}],[\"标记阶段可以正确标记\",{\"1\":{\"1650\":1}}],[\"标记阶段即为所有活动对象做上标记\",{\"1\":{\"1646\":1}}],[\"标记分块暂停后\",{\"1\":{\"1650\":1}}],[\"标记为黑色的数据对象就是活动对象\",{\"1\":{\"1650\":1}}],[\"标记前\",{\"1\":{\"1650\":1}}],[\"标记完成之后将使用区的活动对象复制进空闲区并进行排序\",{\"1\":{\"1648\":1}}],[\"标记整理算法会将活着的对象\",{\"1\":{\"1646\":1}}],[\"标记整理和标记清除相似\",{\"1\":{\"1641\":1}}],[\"标记清除\",{\"1\":{\"1646\":1}}],[\"标记清除算法在清除后会产生大量不连续的内存碎片\",{\"1\":{\"1648\":1}}],[\"标记清除算法需要遍历堆里的活动以及非活动对象来清除\",{\"1\":{\"1646\":1}}],[\"标记清除算法的缺点在于清除之后剩余的对象位置不变而导致的空闲内存不连续\",{\"1\":{\"1646\":1}}],[\"标记清除算法的优点只有一个\",{\"1\":{\"1646\":1}}],[\"标记清除算法或者说策略就有两个很明显的缺点\",{\"1\":{\"1646\":1}}],[\"标记清除算法有一个很大的缺点\",{\"1\":{\"1646\":1}}],[\"标记清除算法\",{\"1\":{\"1646\":1}}],[\"标记\",{\"1\":{\"1153\":1,\"1646\":1,\"1650\":1,\"1661\":1}}],[\"标记导航\",{\"1\":{\"989\":1}}],[\"标题title\",{\"1\":{\"218\":1}}],[\"标签名\",{\"1\":{\"1707\":1}}],[\"标签创建完成之后就可以使用以下命令将其推送到远程仓库\",{\"1\":{\"1619\":1}}],[\"标签有两种类型\",{\"1\":{\"1616\":1}}],[\"标签有两个属性\",{\"1\":{\"462\":1}}],[\"标签指的是某个分支某个特定时间点的状态\",{\"1\":{\"1616\":1}}],[\"标签操作\",{\"0\":{\"1616\":1}}],[\"标签一样\",{\"1\":{\"1476\":1}}],[\"标签一样直接复用即可\",{\"1\":{\"1476\":1}}],[\"标签不一样直接替换掉即可\",{\"1\":{\"1476\":1}}],[\"标签来嵌套才行\",{\"1\":{\"861\":1}}],[\"标签来说\",{\"1\":{\"226\":1}}],[\"标签内嵌了一个http\",{\"1\":{\"861\":1}}],[\"标签上添加\",{\"1\":{\"473\":1}}],[\"标签是一个异步调用\",{\"1\":{\"462\":1}}],[\"标签是块级元素\",{\"1\":{\"178\":1}}],[\"标签下添加以下代码来初始化\",{\"1\":{\"462\":1}}],[\"标签的\",{\"1\":{\"395\":2,\"413\":1}}],[\"标签的时候\",{\"1\":{\"239\":1}}],[\"标签获得的\",{\"1\":{\"392\":1}}],[\"标签添加\",{\"1\":{\"391\":1}}],[\"标签添加了三个属性\",{\"1\":{\"391\":1}}],[\"标签仅仅是想当做一个普通的按钮\",{\"1\":{\"239\":1}}],[\"标签默认页面跳转或是锚点定位等\",{\"1\":{\"239\":1}}],[\"标签绑定多个同类型事件的时候\",{\"1\":{\"231\":1}}],[\"标签中或者<a>和\",{\"1\":{\"413\":1}}],[\"标签中\",{\"1\":{\"202\":1}}],[\"标签中设置属性\",{\"1\":{\"185\":1}}],[\"标签存在一个属性\",{\"1\":{\"185\":1}}],[\"标签清浮动\",{\"0\":{\"185\":1}}],[\"标签\",{\"1\":{\"178\":1,\"215\":1,\"234\":4,\"391\":1,\"463\":1,\"859\":3}}],[\"存取时间\",{\"1\":{\"2142\":1}}],[\"存取器\",{\"0\":{\"1387\":1}}],[\"存入数据使用setitem方法\",{\"1\":{\"1664\":1}}],[\"存入\",{\"0\":{\"1664\":1}}],[\"存活时间长的对象作为老生代\",{\"1\":{\"1648\":1}}],[\"存活时间长的对象会被分配到老生代里\",{\"1\":{\"1648\":1}}],[\"存活时间短的对象作为新生代\",{\"1\":{\"1648\":1}}],[\"存储了几何体\",{\"1\":{\"2290\":1}}],[\"存储该几何体相关的属性\",{\"1\":{\"2282\":1}}],[\"存储器\",{\"1\":{\"2176\":1}}],[\"存储保护容易\",{\"1\":{\"2162\":1}}],[\"存储共享容易\",{\"1\":{\"2162\":1}}],[\"存储管理\",{\"0\":{\"2159\":1}}],[\"存储系统\",{\"0\":{\"2139\":1}}],[\"存储及恢复\",{\"1\":{\"2129\":1}}],[\"存储计算分离模式\",{\"1\":{\"2054\":1}}],[\"存储和网络等服务\",{\"1\":{\"2049\":1}}],[\"存储问题的状态描述\",{\"1\":{\"1866\":1}}],[\"存储求解实际问题的领域知识\",{\"1\":{\"1866\":1}}],[\"存储\",{\"1\":{\"1889\":1,\"2051\":1,\"2057\":1,\"2290\":1,\"2293\":1},\"2\":{\"1674\":1}}],[\"存储静态文件的\",{\"1\":{\"1660\":1}}],[\"存储在内存或者磁盘中\",{\"1\":{\"1658\":1}}],[\"存储在git仓库中的一个完整对象\",{\"1\":{\"1616\":1}}],[\"存储更改\",{\"0\":{\"1601\":1}}],[\"存储的\",{\"1\":{\"1560\":1}}],[\"存储当前系统中所有用户信息\",{\"1\":{\"937\":1,\"939\":1}}],[\"存储变量的数组中的每个变量都会映射到解构数组上相同索引处的相应项\",{\"1\":{\"843\":1}}],[\"存储不重复的数字\",{\"1\":{\"743\":1}}],[\"存储进已下载网页库中\",{\"1\":{\"217\":1}}],[\"存放数据\",{\"1\":{\"1670\":1}}],[\"存放dep的容器\",{\"1\":{\"1561\":1}}],[\"存放各种策略\",{\"1\":{\"1485\":1}}],[\"存放nginx日志文件\",{\"1\":{\"1146\":1}}],[\"存放当前系统中所有用户的密码信息\",{\"1\":{\"940\":1}}],[\"存放当前系统中用户组的密码信息\",{\"1\":{\"938\":1}}],[\"存放所有的系统管理所需要的配置文件和子目录\",{\"1\":{\"913\":1}}],[\"存放失败回调\",{\"1\":{\"584\":1}}],[\"存放成功回调\",{\"1\":{\"584\":1}}],[\"存在问题的架构决策所带来的隐患\",{\"1\":{\"2010\":1}}],[\"存在\",{\"1\":{\"1885\":1}}],[\"存在一个\",{\"1\":{\"898\":1}}],[\"存在的\",{\"1\":{\"658\":1}}],[\"存在变量提升这种特性\",{\"1\":{\"500\":1}}],[\"存在篡改的可能\",{\"1\":{\"490\":1}}],[\"存在则使用\",{\"1\":{\"465\":2}}],[\"存在很多使用场景\",{\"1\":{\"360\":1}}],[\"存在非法字符\",{\"1\":{\"123\":1,\"127\":1}}],[\"解释视图的输入\",{\"1\":{\"2031\":1}}],[\"解释器架构风格\",{\"0\":{\"1991\":1}}],[\"解释器是单线程的\",{\"1\":{\"351\":1}}],[\"解释程序\",{\"1\":{\"1866\":1}}],[\"解耦\",{\"1\":{\"1747\":1,\"1804\":1,\"1812\":1}}],[\"解压到当前目录\",{\"1\":{\"1132\":1}}],[\"解压\",{\"0\":{\"1132\":1},\"1\":{\"1025\":1}}],[\"解压一个已经被\",{\"1\":{\"1025\":1}}],[\"解压名为\",{\"1\":{\"1025\":1}}],[\"解压归档文件\",{\"1\":{\"1025\":3}}],[\"解开压缩文件\",{\"1\":{\"1021\":1}}],[\"解除密码锁定\",{\"1\":{\"950\":1}}],[\"解构函数参数\",{\"0\":{\"847\":1}}],[\"解构对象将被视为一个块语句\",{\"1\":{\"838\":1}}],[\"解构分类\",{\"0\":{\"837\":1}}],[\"解构赋值可以用于嵌套数组和嵌套对象\",{\"1\":{\"844\":1}}],[\"解构赋值语法可以用于变量声明或者变量赋值\",{\"1\":{\"836\":1}}],[\"解构赋值语法是一种\",{\"1\":{\"836\":1}}],[\"解构赋值就是将复杂的结构分解为简单的部分\",{\"1\":{\"836\":1}}],[\"解构赋值遵循\",{\"1\":{\"251\":1}}],[\"解构赋值\",{\"0\":{\"251\":1,\"835\":1,\"1411\":1},\"2\":{\"853\":1}}],[\"解决纠纷\",{\"1\":{\"2129\":1}}],[\"解决方案\",{\"1\":{\"2071\":1,\"2072\":1,\"2073\":1,\"2076\":1}}],[\"解决微服务模式中多数据源事务问题\",{\"1\":{\"2054\":1}}],[\"解决问题的逻辑过程\",{\"0\":{\"1846\":1}}],[\"解决资源多重占用\",{\"1\":{\"1769\":1}}],[\"解决此问题可以在\",{\"1\":{\"1609\":1}}],[\"解决这种场景下的\",{\"1\":{\"1286\":1}}],[\"解决这个问题\",{\"1\":{\"153\":1}}],[\"解决该问题\",{\"1\":{\"903\":1}}],[\"解决跨域方案\",{\"0\":{\"858\":1}}],[\"解决循环引用\",{\"0\":{\"767\":1}}],[\"解决递归爆栈\",{\"0\":{\"766\":1}}],[\"解决每次任务中判断错误\",{\"1\":{\"569\":1}}],[\"解决多层嵌套问题\",{\"1\":{\"569\":1}}],[\"解决效果也比较明显\",{\"1\":{\"569\":1}}],[\"解决了多层嵌套的问题\",{\"1\":{\"590\":1}}],[\"解决了多次调用构造函数构造的问题\",{\"1\":{\"494\":1}}],[\"解决了这两个问题\",{\"1\":{\"569\":1}}],[\"解决了第一种继承方式的弊端\",{\"1\":{\"486\":1}}],[\"解决普通对象的继承问题的\",{\"1\":{\"494\":1}}],[\"解码一个\",{\"1\":{\"414\":1}}],[\"解码\",{\"0\":{\"1702\":1},\"1\":{\"414\":1}}],[\"解析器就会处理它遇到的任何\",{\"1\":{\"1706\":1}}],[\"解析器获得这些标记\",{\"1\":{\"1705\":1}}],[\"解析的过程可以分为四个步骤\",{\"1\":{\"1701\":1}}],[\"解析完毕之后生成对应的\",{\"1\":{\"1550\":1}}],[\"解析标签生成ast核心\",{\"1\":{\"1550\":1}}],[\"解析\",{\"0\":{\"1550\":1},\"1\":{\"1707\":1}}],[\"解析vnode的data属性\",{\"1\":{\"1528\":1}}],[\"解析虚拟dom属性\",{\"1\":{\"1528\":1}}],[\"解析为可读数据\",{\"1\":{\"819\":1}}],[\"解析和预编译过程中的声明提升可以提高性能\",{\"1\":{\"503\":1}}],[\"解析一遍就够了\",{\"1\":{\"502\":1}}],[\"解析路径\",{\"1\":{\"454\":1}}],[\"解析模式\",{\"1\":{\"429\":1}}],[\"解析后的代码\",{\"1\":{\"378\":1}}],[\"解析dns\",{\"1\":{\"217\":1}}],[\"解绑\",{\"1\":{\"360\":1}}],[\"爬虫的爬取首先选取一部分精心挑选的种子url\",{\"1\":{\"217\":1}}],[\"爬行抓取\",{\"1\":{\"217\":1}}],[\"斜体等相关信息都有相应记录\",{\"1\":{\"217\":1}}],[\"加快报文转发\",{\"1\":{\"2214\":1}}],[\"加快了报文处理速度\",{\"1\":{\"2214\":1}}],[\"加快技术向生产的转化\",{\"1\":{\"1873\":1}}],[\"加权百分比算法\",{\"1\":{\"2077\":1}}],[\"加权最小连接数算法\",{\"1\":{\"2077\":1}}],[\"加权轮转算法\",{\"1\":{\"2077\":1}}],[\"加强面对面沟通\",{\"1\":{\"1904\":1}}],[\"加上了\",{\"1\":{\"1610\":1}}],[\"加上这两个参数之后就可以看到每个用户中的提交次数以及排名情况\",{\"1\":{\"1604\":1}}],[\"加上\",{\"1\":{\"1594\":1}}],[\"加上备注文字\",{\"1\":{\"944\":1}}],[\"加\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"加了\",{\"1\":{\"829\":1}}],[\"加赋值操作符\",{\"1\":{\"638\":1}}],[\"加法操作符\",{\"0\":{\"616\":1}}],[\"加减乘除操作符\",{\"0\":{\"615\":1}}],[\"加和减操作符既是一元操作符\",{\"1\":{\"603\":1}}],[\"加和减操作符\",{\"0\":{\"603\":1}}],[\"加入了各自阶段的任务队列\",{\"1\":{\"382\":1}}],[\"加入微任务队列\",{\"1\":{\"376\":1}}],[\"加入宏任务队列\",{\"1\":{\"376\":1}}],[\"加入执行栈\",{\"1\":{\"376\":3}}],[\"加工函数就可以是一个箭头函数\",{\"1\":{\"286\":1,\"678\":1}}],[\"加工函数\",{\"1\":{\"286\":1,\"678\":1}}],[\"加载发生错误的项目的url\",{\"1\":{\"2471\":1}}],[\"加载完成时进行调用\",{\"1\":{\"2470\":1}}],[\"加载内存模型的示例\",{\"1\":{\"2462\":1}}],[\"加载器\",{\"0\":{\"2890\":1},\"2\":{\"2459\":1,\"2482\":1}}],[\"加载模块化配置文件\",{\"1\":{\"1153\":1}}],[\"加载模块时执行的回调函数\",{\"1\":{\"458\":1}}],[\"加载不受束缚\",{\"1\":{\"859\":1}}],[\"加载资源路径\",{\"1\":{\"859\":3}}],[\"加载的\",{\"1\":{\"472\":1}}],[\"加载的是拷贝\",{\"1\":{\"467\":1}}],[\"加载时\",{\"1\":{\"462\":1}}],[\"加载脚本的正常方式\",{\"1\":{\"462\":1}}],[\"加载过程\",{\"0\":{\"454\":1}}],[\"加载某个模块\",{\"1\":{\"449\":1}}],[\"加载\",{\"1\":{\"449\":1}}],[\"加载整个模块\",{\"1\":{\"275\":2}}],[\"加载图片\",{\"1\":{\"87\":1}}],[\"加粗或斜体\",{\"1\":{\"218\":1}}],[\"加粗\",{\"1\":{\"217\":1}}],[\"颜色贴图\",{\"1\":{\"2606\":1,\"2708\":1}}],[\"颜色值\",{\"1\":{\"2277\":1}}],[\"颜色\",{\"1\":{\"217\":1}}],[\"摘要用途\",{\"1\":{\"2108\":1}}],[\"摘要\",{\"1\":{\"217\":1}}],[\"关联分析\",{\"1\":{\"1882\":1}}],[\"关联的\",{\"1\":{\"432\":1}}],[\"关注过多\",{\"1\":{\"1805\":1}}],[\"关心的是最终产出\",{\"1\":{\"1758\":1}}],[\"关机时\",{\"1\":{\"919\":2}}],[\"关机后停机\",{\"1\":{\"919\":1}}],[\"关机后重新开机\",{\"1\":{\"919\":1}}],[\"关机和重启命令\",{\"0\":{\"917\":1}}],[\"关系代数\",{\"0\":{\"2242\":1}}],[\"关系与关系间的引用\",{\"1\":{\"2241\":1}}],[\"关系模式的所有属性组是这个关系的候选码\",{\"1\":{\"2240\":1}}],[\"关系模式中属性的个数\",{\"1\":{\"2240\":1}}],[\"关系表类型\",{\"0\":{\"2225\":1}}],[\"关系运算符用于比较两个值之间的关系\",{\"1\":{\"807\":1}}],[\"关系运算符\",{\"1\":{\"807\":1}}],[\"关系操作符包括四种\",{\"1\":{\"628\":1}}],[\"关系操作符\",{\"0\":{\"628\":1}}],[\"关于正确性的推理就存在问题\",{\"1\":{\"1987\":1}}],[\"关于配置项\",{\"1\":{\"1961\":1}}],[\"关于第一点区别\",{\"1\":{\"817\":1}}],[\"关于数组的类型判断\",{\"1\":{\"657\":1}}],[\"关于\",{\"1\":{\"349\":1}}],[\"关键路径法沿着项目进度网络路线进行正向与反向分析\",{\"1\":{\"1955\":1}}],[\"关键路径法是在指定进度计划时使用的一种进度网络分析技术\",{\"1\":{\"1955\":1}}],[\"关键路径法\",{\"0\":{\"1955\":1}}],[\"关键业务流程及关键业务与设备设软硬行为活动等要素间的集成优化\",{\"1\":{\"1889\":1}}],[\"关键成功因素法\",{\"1\":{\"1876\":1}}],[\"关键是\",{\"1\":{\"1660\":1}}],[\"关键的是\",{\"1\":{\"592\":1}}],[\"关键词进行定义的变量\",{\"1\":{\"898\":1}}],[\"关键词的话还可以配合着\",{\"1\":{\"588\":1}}],[\"关键词的位置\",{\"1\":{\"587\":1}}],[\"关键词最后返回一个迭代器对象\",{\"1\":{\"588\":1}}],[\"关键词可以控制函数执行的顺序\",{\"1\":{\"587\":1}}],[\"关键词\",{\"1\":{\"469\":1,\"898\":1}}],[\"关键词时执行暂停\",{\"1\":{\"587\":1}}],[\"关键词时\",{\"1\":{\"253\":1}}],[\"关键词出现的位置\",{\"1\":{\"217\":1}}],[\"关键字添加泛型约束\",{\"1\":{\"1369\":1}}],[\"关键字约束\",{\"1\":{\"1366\":1}}],[\"关键字约束该类型必须是\",{\"1\":{\"1366\":1}}],[\"关键字了\",{\"1\":{\"594\":1}}],[\"关键字可以让函数具有异步特征\",{\"1\":{\"594\":1}}],[\"关键字可以重命名暴露出的变量或方法\",{\"1\":{\"274\":1}}],[\"关键字是如何影响执行上下文的呢\",{\"1\":{\"508\":1}}],[\"关键字是支持块级作用域的\",{\"1\":{\"507\":1}}],[\"关键字会创建块级作用域\",{\"1\":{\"508\":1}}],[\"关键字替换为\",{\"1\":{\"507\":1}}],[\"关键字声明一个异步函数\",{\"1\":{\"594\":1}}],[\"关键字声明变量\",{\"1\":{\"500\":1}}],[\"关键字声明的变量对于一个作用域内变量的重复声明是没有限制的\",{\"1\":{\"250\":1}}],[\"关键字声明的变量是可以被改变的\",{\"1\":{\"507\":1}}],[\"关键字声明的变量是\",{\"1\":{\"247\":1}}],[\"关键字用来声明变量\",{\"1\":{\"499\":1}}],[\"关键字来创建对象\",{\"1\":{\"1747\":1}}],[\"关键字来定义抽象类和抽象方法\",{\"1\":{\"1392\":1}}],[\"关键字来定义一个类\",{\"1\":{\"1386\":1}}],[\"关键字来实现继承\",{\"1\":{\"1389\":1}}],[\"关键字来暂停或者执行函数\",{\"1\":{\"587\":1}}],[\"关键字来调用\",{\"1\":{\"478\":1}}],[\"关键字来加载整个模块\",{\"1\":{\"470\":1}}],[\"关键字来将导入的变量\",{\"1\":{\"470\":1}}],[\"关键字来重命名需要暴露出的变量或方法\",{\"1\":{\"469\":1}}],[\"关键字只能在\",{\"1\":{\"334\":1}}],[\"关键字限制了变量提升\",{\"1\":{\"249\":1}}],[\"关键字有以下特点\",{\"1\":{\"246\":1}}],[\"关键字\",{\"0\":{\"1435\":1,\"1436\":1,\"1437\":1},\"1\":{\"217\":1,\"246\":1,\"274\":1,\"275\":1,\"334\":2,\"500\":1,\"507\":2,\"511\":1,\"589\":1}}],[\"关闭部分双线性过滤\",{\"1\":{\"2805\":1}}],[\"关闭部分过滤\",{\"1\":{\"2805\":1}}],[\"关闭前再次调用全屏\",{\"1\":{\"1766\":1}}],[\"关闭等待\",{\"1\":{\"1728\":1}}],[\"关闭indexeddb\",{\"1\":{\"1671\":1}}],[\"关闭防火墙\",{\"0\":{\"1136\":1},\"1\":{\"1136\":1}}],[\"关闭\",{\"1\":{\"953\":1,\"1730\":3}}],[\"关闭回调\",{\"1\":{\"378\":1}}],[\"关闭设备连接失败\",{\"1\":{\"128\":1}}],[\"关闭设备连接成功\",{\"1\":{\"128\":1}}],[\"关闭连接\",{\"1\":{\"128\":1}}],[\"关闭搜索附近蓝牙\",{\"1\":{\"128\":1}}],[\"关闭末尾空格修剪\",{\"1\":{\"23\":1,\"66\":1}}],[\"关闭最大行长度限制\",{\"1\":{\"23\":1,\"66\":1}}],[\"网格的所有顶点被映射为图像中每个像素的值\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"网格几何体\",{\"0\":{\"2441\":1}}],[\"网站无法做更多的改善和更强大的管理\",{\"1\":{\"2077\":1}}],[\"网卡的地址就是\",{\"1\":{\"1692\":1}}],[\"网卡\",{\"1\":{\"1692\":1}}],[\"网速慢的话\",{\"1\":{\"1579\":1}}],[\"网络访问策略控制\",{\"1\":{\"2220\":1}}],[\"网络物理结构图和布线方案\",{\"1\":{\"2218\":1}}],[\"网络设计者需要确定具体的软\",{\"1\":{\"2218\":1}}],[\"网络规划与设计\",{\"0\":{\"2216\":1}}],[\"网络中存在备用路径\",{\"1\":{\"2212\":1}}],[\"网络中的时延由以下几个不同部分组成\",{\"1\":{\"2201\":1}}],[\"网络冗余设计\",{\"0\":{\"2212\":1}}],[\"网络切片\",{\"1\":{\"2205\":1}}],[\"网络延迟=处理延迟+排队延迟+发送延迟+传播延迟\",{\"1\":{\"2201\":1}}],[\"网络安全威胁\",{\"0\":{\"2102\":1}}],[\"网络安全漏洞\",{\"0\":{\"2101\":1}}],[\"网络上的所有事务都被抽象为资源\",{\"1\":{\"2039\":1}}],[\"网络报文处理\",{\"1\":{\"1980\":1}}],[\"网络级发展阶段\",{\"1\":{\"1889\":1}}],[\"网络\",{\"1\":{\"2176\":1},\"2\":{\"1732\":1,\"1738\":1}}],[\"网络语音电话\",{\"1\":{\"1715\":1}}],[\"网络层将数据传递给传输层\",{\"1\":{\"1712\":1}}],[\"网络层\",{\"0\":{\"1691\":1},\"1\":{\"1717\":1}}],[\"网络请求\",{\"0\":{\"559\":1,\"810\":1}}],[\"网络爬虫通过特定规则跟踪网页的链接\",{\"1\":{\"217\":1}}],[\"网页只能访问自身域名下的数据库\",{\"1\":{\"1670\":1}}],[\"网页可以直接读取以前保存的数据\",{\"1\":{\"1663\":1}}],[\"网页文件\",{\"1\":{\"909\":1}}],[\"网页文字内容\",{\"1\":{\"217\":1}}],[\"网页内容\",{\"1\":{\"218\":1}}],[\"网页仍能维持基本的内容供给用户阅读\",{\"1\":{\"214\":1}}],[\"获得\",{\"1\":{\"817\":1}}],[\"获得字符串形式的响应数据\",{\"1\":{\"817\":1}}],[\"获得的divisions\",{\"1\":{\"2425\":1,\"2426\":1}}],[\"获得的\",{\"1\":{\"721\":2}}],[\"获得一个\",{\"1\":{\"578\":1}}],[\"获得品牌收益\",{\"1\":{\"217\":1}}],[\"获取或者设置摄像机的缩放倍数\",{\"1\":{\"2540\":1,\"2579\":1}}],[\"获取累积段长度的列表\",{\"1\":{\"2338\":1}}],[\"获取总曲线弧长\",{\"1\":{\"2337\":1}}],[\"获取域名对应的ip地址时\",{\"1\":{\"2077\":1}}],[\"获取nowplaying\",{\"1\":{\"1829\":1}}],[\"获取get方法\",{\"1\":{\"1569\":1}}],[\"获取文本\",{\"1\":{\"1550\":1}}],[\"获取值\",{\"1\":{\"1534\":1}}],[\"获取模板编译生成的render方法\",{\"1\":{\"1527\":1}}],[\"获取传入的数据对象\",{\"1\":{\"1491\":1}}],[\"获取到的永远是最新的值\",{\"1\":{\"1219\":1}}],[\"获取数据\",{\"1\":{\"1168\":1}}],[\"获取数据到后端\",{\"1\":{\"864\":1}}],[\"获取数据直接显示在页面上\",{\"1\":{\"817\":1}}],[\"获取https\",{\"1\":{\"823\":1}}],[\"获取构造函数的prototype对象\",{\"1\":{\"657\":1}}],[\"获取构造函数的\",{\"1\":{\"641\":1}}],[\"获取对象的原型\",{\"1\":{\"641\":1,\"657\":1}}],[\"获取字符串本身\",{\"0\":{\"542\":1}}],[\"获取字符串指定位置的值\",{\"0\":{\"516\":1}}],[\"获取字符串长度\",{\"0\":{\"515\":1}}],[\"获取时执行配置文件\",{\"1\":{\"462\":1}}],[\"获取的是对象的键名\",{\"1\":{\"719\":1}}],[\"获取的\",{\"1\":{\"392\":1}}],[\"获取一个\",{\"1\":{\"316\":1}}],[\"获取映射值\",{\"1\":{\"272\":1}}],[\"获取映射元素的个数\",{\"1\":{\"272\":1}}],[\"获取\",{\"1\":{\"226\":1,\"234\":2,\"862\":1,\"863\":1,\"1517\":1}}],[\"获取连接蓝牙的历史数据\",{\"1\":{\"128\":1}}],[\"获取指定服务的特征值\",{\"0\":{\"122\":1}}],[\"获取服务失败\",{\"1\":{\"127\":1}}],[\"获取服务成功\",{\"1\":{\"127\":1}}],[\"获取服务\",{\"1\":{\"121\":1,\"127\":1}}],[\"获取蓝牙服务<\",{\"1\":{\"127\":1}}],[\"获取蓝牙服务\",{\"0\":{\"121\":1}}],[\"获取蓝牙设备服务\",{\"1\":{\"120\":1}}],[\"获取特征值失败\",{\"1\":{\"127\":1}}],[\"获取特征值成功\",{\"1\":{\"127\":1}}],[\"获取特征值<\",{\"1\":{\"127\":1}}],[\"获取特征值\",{\"1\":{\"120\":1,\"122\":2,\"127\":1}}],[\"获取设备特征值失败\",{\"1\":{\"128\":2}}],[\"获取设备特征值成功\",{\"1\":{\"128\":2}}],[\"获取设备特征值中\",{\"1\":{\"128\":2}}],[\"获取设备特征值\",{\"1\":{\"128\":1}}],[\"获取设备服务失败\",{\"1\":{\"128\":2}}],[\"获取设备服务成功\",{\"1\":{\"128\":2}}],[\"获取设备服务中\",{\"1\":{\"128\":2}}],[\"获取设备所有服务\",{\"1\":{\"128\":1}}],[\"获取设备的特征值\",{\"1\":{\"126\":1}}],[\"获取设备\",{\"1\":{\"119\":1}}],[\"获取权限\",{\"0\":{\"33\":1,\"76\":1}}],[\"百度搜索下拉框提示和快递单号查询等等\",{\"1\":{\"812\":1}}],[\"百度一下\",{\"1\":{\"345\":1}}],[\"百度\",{\"1\":{\"345\":1}}],[\"百度百科对其的解释是一种方式\",{\"1\":{\"217\":1}}],[\"百分比\",{\"1\":{\"1707\":1}}],[\"百分比的值不好计算\",{\"1\":{\"205\":1}}],[\"百分比布局方案\",{\"0\":{\"205\":1}}],[\"照片\",{\"1\":{\"215\":1}}],[\"图形界面\",{\"1\":{\"2187\":1}}],[\"图形处理器\",{\"1\":{\"2179\":1}}],[\"图像是相对于\",{\"1\":{\"472\":1}}],[\"图像\",{\"1\":{\"388\":4}}],[\"图层能够阻止该节点的渲染行为影响别的节点\",{\"1\":{\"226\":1}}],[\"图表\",{\"1\":{\"215\":1}}],[\"图片预览的\",{\"1\":{\"413\":1}}],[\"图片img标签添加alt和title属性\",{\"1\":{\"219\":1}}],[\"图片\",{\"1\":{\"181\":1}}],[\"图片懒加载\",{\"0\":{\"86\":1},\"1\":{\"87\":1}}],[\"规约\",{\"1\":{\"1996\":1}}],[\"规划阶段\",{\"1\":{\"1847\":1}}],[\"规则\",{\"1\":{\"1992\":1}}],[\"规则集\",{\"1\":{\"1992\":1}}],[\"规则系统体系结构风格\",{\"0\":{\"1992\":1}}],[\"规则解释器\",{\"1\":{\"1866\":1,\"1992\":1}}],[\"规则树合并的过程\",{\"1\":{\"1707\":1}}],[\"规则时\",{\"1\":{\"1706\":1}}],[\"规则校验\",{\"1\":{\"1315\":1}}],[\"规定基本关系的主属性不能取空值\",{\"1\":{\"2241\":1}}],[\"规定添加\",{\"1\":{\"703\":1}}],[\"规定从何处结束选取\",{\"1\":{\"702\":1}}],[\"规定从何处开始选取\",{\"1\":{\"702\":1}}],[\"规定要匹配的模式的\",{\"1\":{\"536\":1}}],[\"规定要提取的子串的第一个字符在\",{\"1\":{\"530\":1}}],[\"规定了替换文本或生成替换文本的函数\",{\"1\":{\"535\":1}}],[\"规定子字符串或要替换的模式的\",{\"1\":{\"535\":1}}],[\"规定在字符串中开始检索的位置\",{\"1\":{\"520\":1}}],[\"规定需检索的字符串值\",{\"1\":{\"520\":1}}],[\"规定\",{\"1\":{\"511\":1}}],[\"规定函数的参数列表的结尾可以为逗号\",{\"1\":{\"296\":1}}],[\"规定文档的主内容\",{\"1\":{\"215\":1}}],[\"规定文档或节的页眉\",{\"1\":{\"215\":1}}],[\"规定自包含内容\",{\"1\":{\"215\":1}}],[\"规范化理论\",{\"0\":{\"2243\":1}}],[\"规范整合了\",{\"1\":{\"464\":1}}],[\"规范的\",{\"1\":{\"467\":1}}],[\"规范的一个实现\",{\"1\":{\"464\":1}}],[\"规范的一种实现\",{\"1\":{\"461\":1}}],[\"规范的特点\",{\"1\":{\"464\":1}}],[\"规范的理论\",{\"1\":{\"461\":1}}],[\"规范定义了一个全局函数\",{\"1\":{\"458\":1}}],[\"规范重要特性就是异步加载\",{\"1\":{\"457\":1}}],[\"规范具有以下特点\",{\"1\":{\"449\":1}}],[\"规范规定每个文件就是一个模块\",{\"1\":{\"449\":1}}],[\"规范加载模块是同步的\",{\"1\":{\"448\":1}}],[\"规范中\",{\"1\":{\"333\":1}}],[\"规范中的一个概念\",{\"1\":{\"147\":1}}],[\"规范\",{\"0\":{\"13\":1,\"28\":1,\"56\":1,\"71\":1},\"1\":{\"448\":1}}],[\"描述体系结构的构件与链接件的连接图\",{\"1\":{\"1972\":1}}],[\"描述了所创建的对象共同的属性和方法\",{\"1\":{\"1386\":1}}],[\"描述\",{\"0\":{\"316\":1},\"1\":{\"215\":1,\"388\":1,\"394\":1,\"402\":1,\"606\":1}}],[\"利用需求分析和现有网络体系分析的结果来设计逻辑网络结构\",{\"1\":{\"2217\":1}}],[\"利用率\",{\"1\":{\"2213\":1}}],[\"利用率高\",{\"1\":{\"2160\":1}}],[\"利用网络传播病毒\",{\"1\":{\"2102\":1}}],[\"利用facet描述构件执行的功能\",{\"1\":{\"2028\":1}}],[\"利用计算机作为工具\",{\"1\":{\"1843\":1}}],[\"利用正则\",{\"1\":{\"1550\":1}}],[\"利用立即执行函数的入参来缓存每一个循环中的\",{\"1\":{\"903\":1}}],[\"利用递归来实现数组的每一项的连接\",{\"1\":{\"735\":1}}],[\"利用\",{\"1\":{\"597\":1,\"737\":1,\"859\":1,\"903\":1}}],[\"利用了三大技术手段来解决回调地狱\",{\"1\":{\"569\":1}}],[\"利用浅拷贝的能力进行一些方法的增加\",{\"1\":{\"492\":1}}],[\"利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名\",{\"1\":{\"217\":1}}],[\"利用这点可以实现自适应两栏布局\",{\"1\":{\"149\":1}}],[\"利于seo\",{\"1\":{\"215\":1}}],[\"优势\",{\"1\":{\"1806\":1}}],[\"优雅关闭\",{\"1\":{\"1135\":1}}],[\"优缺点\",{\"0\":{\"450\":1,\"460\":1,\"1749\":1,\"1768\":1,\"1786\":1,\"1795\":1,\"1803\":1,\"1811\":1,\"1836\":1}}],[\"优先从缓存中加载\",{\"1\":{\"454\":1}}],[\"优先清空\",{\"1\":{\"383\":1}}],[\"优先级调度算法\",{\"1\":{\"2190\":1}}],[\"优先级更高\",{\"1\":{\"376\":1}}],[\"优先级\",{\"1\":{\"360\":1,\"2150\":1}}],[\"优化静态节点\",{\"1\":{\"1549\":2}}],[\"优化了\",{\"1\":{\"1478\":1}}],[\"优化的子组件或者那些不会因为\",{\"1\":{\"1212\":1}}],[\"优化\",{\"0\":{\"219\":1,\"1229\":1},\"1\":{\"1846\":1}}],[\"优化seo\",{\"1\":{\"214\":1}}],[\"优点2\",{\"1\":{\"1196\":1}}],[\"优点1\",{\"1\":{\"1196\":1}}],[\"优点主要有\",{\"1\":{\"819\":1}}],[\"优点是在父类的继承上增加了更多的方法\",{\"1\":{\"492\":1}}],[\"优点\",{\"0\":{\"214\":1,\"236\":1,\"1750\":1,\"1769\":1,\"1787\":1,\"1796\":1,\"1804\":1,\"1812\":1,\"1837\":1,\"1978\":1,\"1982\":1,\"1986\":1,\"2042\":1,\"2047\":1},\"1\":{\"204\":1,\"205\":1,\"207\":1,\"208\":1,\"1646\":2,\"1820\":1,\"1839\":1,\"1899\":1,\"1956\":1,\"2034\":1,\"2160\":1,\"2161\":1,\"2162\":1}}],[\"简单属性和复合属性\",{\"1\":{\"2250\":1}}],[\"简单完整性规则\",{\"1\":{\"2118\":1}}],[\"简单安全规则\",{\"1\":{\"2117\":1}}],[\"简单\",{\"1\":{\"1904\":1,\"1956\":1,\"2077\":1}}],[\"简单系统\",{\"1\":{\"1851\":1}}],[\"简单实例化对象\",{\"1\":{\"1752\":1}}],[\"简单工厂只适合以下情况\",{\"1\":{\"1753\":1}}],[\"简单工厂模式的优势就在于\",{\"1\":{\"1753\":1}}],[\"简单工厂模式又叫静态工厂模式\",{\"1\":{\"1753\":1}}],[\"简单工厂\",{\"0\":{\"1753\":1},\"1\":{\"1747\":1,\"1752\":2}}],[\"简单说就是用它取到函数返回值的类型方便之后使用\",{\"1\":{\"1368\":1}}],[\"简单组件\",{\"1\":{\"1212\":1}}],[\"简单地说\",{\"1\":{\"812\":1}}],[\"简单看两个例子\",{\"1\":{\"602\":1}}],[\"简单来说就是以下四步\",{\"1\":{\"1729\":1}}],[\"简单来说就是以下三步\",{\"1\":{\"1727\":1}}],[\"简单来说就是经历过新生代垃圾回收后还存活下来的对象\",{\"1\":{\"1648\":1}}],[\"简单来说就是新产生的对象\",{\"1\":{\"1648\":1}}],[\"简单来说就是将\",{\"1\":{\"895\":1}}],[\"简单来说就是把多维的数组\",{\"1\":{\"734\":1}}],[\"简单来说就是利于\",{\"1\":{\"213\":1}}],[\"简单来说是\",{\"1\":{\"724\":1}}],[\"简单来说\",{\"1\":{\"387\":1,\"401\":1,\"437\":1,\"501\":1,\"895\":1,\"1649\":1}}],[\"简写为以下方式\",{\"1\":{\"495\":1}}],[\"简化为\",{\"1\":{\"260\":1}}],[\"简称blp模型\",{\"1\":{\"2117\":1}}],[\"简称bfc\",{\"1\":{\"147\":1}}],[\"简称\",{\"1\":{\"467\":1,\"1577\":1}}],[\"简称ifc\",{\"1\":{\"147\":1}}],[\"让一部分应用的流量分摊到备用路径上\",{\"1\":{\"2212\":1}}],[\"让你用这种技术中可用的实现构造来描述系统的模型\",{\"1\":{\"1996\":1}}],[\"让子类决定实例化哪一个类\",{\"1\":{\"1752\":1}}],[\"让每⼀次\",{\"1\":{\"1730\":1}}],[\"让拥塞窗口cwnd缓慢的增大\",{\"1\":{\"1720\":1}}],[\"让用户与浏览器交互的过程变得更加流畅\",{\"1\":{\"1650\":1}}],[\"让dep也记住wathcer\",{\"1\":{\"1571\":1}}],[\"让depend存储渲染watcher\",{\"1\":{\"1571\":1}}],[\"让watcher记住dep的同时\",{\"1\":{\"1571\":1}}],[\"让计算属性的依赖值收集外层\",{\"1\":{\"1571\":1}}],[\"让开发者能够添加过渡反馈\",{\"1\":{\"1233\":1}}],[\"让这些内部变量的值始终可以保存在内存中\",{\"1\":{\"900\":1}}],[\"让方法执行\",{\"1\":{\"659\":1}}],[\"让其状态变更\",{\"1\":{\"581\":1}}],[\"让其内容消除对外界浮动元素的影响\",{\"1\":{\"152\":1}}],[\"让函数可以在执行时预先为变量分配栈空间\",{\"1\":{\"503\":1}}],[\"让我们使用下面的代码片段检查分离的\",{\"1\":{\"437\":1}}],[\"让我们可以访问手机上的低功耗蓝牙设备\",{\"1\":{\"341\":1}}],[\"让导入模块知道数据已经准备好了\",{\"1\":{\"334\":1}}],[\"让\",{\"1\":{\"273\":1,\"659\":1,\"903\":1,\"1012\":1}}],[\"让页面元素有含义\",{\"1\":{\"215\":1}}],[\"让页面具有良好的结构与含义\",{\"1\":{\"213\":1}}],[\"理想状态时直接复用构件库中现成的构件\",{\"1\":{\"2028\":1}}],[\"理想视口\",{\"1\":{\"201\":2}}],[\"理论上来说\",{\"1\":{\"1669\":1}}],[\"理论上\",{\"1\":{\"1665\":1}}],[\"理解与评价构件\",{\"1\":{\"2028\":1}}],[\"理解为代码块从而导致语法错误\",{\"1\":{\"253\":1}}],[\"理解\",{\"0\":{\"213\":1}}],[\"大多数rtos调度算法都是抢占方式\",{\"1\":{\"2190\":1}}],[\"大多数浏览器都支持\",{\"1\":{\"208\":1}}],[\"大数据处理能力\",{\"1\":{\"2180\":1}}],[\"大数据分层架构\",{\"0\":{\"2037\":1}}],[\"大致可分为mpu\",{\"1\":{\"2179\":1}}],[\"大致流程\",{\"0\":{\"1676\":1}}],[\"大型工商与信息技术企业\",{\"1\":{\"2111\":1}}],[\"大型网站系统架构演化\",{\"0\":{\"2058\":1}}],[\"大部分的特性是默认关闭的\",{\"1\":{\"2737\":1}}],[\"大部分失效来自于软件失效\",{\"1\":{\"2089\":1}}],[\"大部分缓存失效\",{\"1\":{\"2071\":1}}],[\"大量整体数据\",{\"1\":{\"1977\":1}}],[\"大得多\",{\"1\":{\"1670\":1}}],[\"大对象的分配效率会更慢\",{\"1\":{\"1646\":1}}],[\"大家试想\",{\"1\":{\"1660\":1}}],[\"大家一定不陌生\",{\"1\":{\"1547\":1}}],[\"大家一定非常熟悉\",{\"1\":{\"1533\":1}}],[\"大家应该就已经学过了\",{\"1\":{\"602\":1}}],[\"大文件暂存目录\",{\"1\":{\"1150\":1}}],[\"大写\",{\"1\":{\"1056\":1}}],[\"大小为5m左右\",{\"1\":{\"1663\":1,\"1667\":1}}],[\"大小\",{\"1\":{\"972\":1,\"1646\":1}}],[\"大小不固定\",{\"1\":{\"651\":1}}],[\"大小固定\",{\"1\":{\"651\":1}}],[\"大小写不做校验\",{\"1\":{\"30\":1,\"73\":1}}],[\"大于等于\",{\"1\":{\"628\":1}}],[\"大于\",{\"1\":{\"628\":1}}],[\"大\",{\"1\":{\"530\":1,\"1431\":5}}],[\"大到处理音频\",{\"1\":{\"337\":1}}],[\"直至该集合能遍历所有结点\",{\"1\":{\"2246\":1}}],[\"直至\",{\"1\":{\"1707\":1}}],[\"直至脚本完成执行\",{\"1\":{\"1707\":1}}],[\"直观地说\",{\"1\":{\"1418\":1}}],[\"直到事务结束才释放\",{\"1\":{\"2260\":1}}],[\"直到事物结束才释放\",{\"1\":{\"2260\":1}}],[\"直到有对象处理它为止\",{\"1\":{\"1838\":1}}],[\"直到被处理或者整个链都无法处理该请求\",{\"1\":{\"1835\":1}}],[\"直到接收方重新通告一个正的窗口\",{\"1\":{\"1723\":1}}],[\"直到没有可标记灰色的对象时\",{\"1\":{\"1650\":1}}],[\"直到函数执行结束\",{\"1\":{\"1645\":1}}],[\"直到成功找出那一次提交位为止\",{\"1\":{\"1637\":1}}],[\"直到中央存储库被修复\",{\"1\":{\"1581\":1}}],[\"直到数据加载完毕\",{\"1\":{\"1312\":1}}],[\"直到所需的数据被完全加载\",{\"1\":{\"1312\":1}}],[\"直到按下esc为止\",{\"1\":{\"1065\":1}}],[\"直到您按下\",{\"1\":{\"993\":1}}],[\"直到秘书告诉他小李已经到了\",{\"1\":{\"813\":1}}],[\"直到遍历完成\",{\"1\":{\"748\":1}}],[\"直到执行到内存溢出\",{\"1\":{\"723\":1}}],[\"直到执行完所有任务\",{\"1\":{\"375\":1}}],[\"直到遇到\",{\"1\":{\"587\":1}}],[\"直到到达数字的末端为止\",{\"1\":{\"551\":1}}],[\"直到找到能处理该请求的对象\",{\"1\":{\"1835\":1}}],[\"直到找到引入问题的那一次提交\",{\"1\":{\"1637\":1}}],[\"直到找到全局作用域\",{\"1\":{\"901\":1}}],[\"直到找到该变量或者不存在父级作用域中\",{\"1\":{\"901\":1}}],[\"直到找到\",{\"1\":{\"482\":1,\"901\":1}}],[\"直到指向\",{\"1\":{\"482\":1}}],[\"直到根目录的\",{\"1\":{\"454\":1}}],[\"直到\",{\"1\":{\"432\":1,\"555\":1,\"1550\":1}}],[\"直到应用程序停止\",{\"1\":{\"430\":1}}],[\"直到队列为空或者达到系统限制\",{\"1\":{\"379\":1}}],[\"直到两个\",{\"1\":{\"376\":1}}],[\"直到它的左边缘碰到包含框的左边缘\",{\"1\":{\"178\":1}}],[\"直接在微处理器片内嵌入操作系统的代码模块\",{\"1\":{\"2179\":1}}],[\"直接在渲染期间修改\",{\"1\":{\"1285\":1}}],[\"直接写个缓存刷新页面\",{\"1\":{\"2073\":1}}],[\"直接设置一个默认值放到缓存\",{\"1\":{\"2072\":1}}],[\"直接查数据库\",{\"1\":{\"2072\":1}}],[\"直接提供应用程序\",{\"1\":{\"2049\":1}}],[\"直接收到请求的服务器是代理服务器\",{\"1\":{\"1794\":1}}],[\"直接把数据通过\",{\"1\":{\"1692\":1}}],[\"直接进入清理阶段\",{\"1\":{\"1650\":1}}],[\"直接进行单位换算时百分比可能出现小数\",{\"1\":{\"208\":1}}],[\"直接切换到新创建的分支上\",{\"1\":{\"1594\":1}}],[\"直接调用dep的addsub方法\",{\"1\":{\"1561\":1}}],[\"直接调用函数作为第二个参数\",{\"1\":{\"1274\":4}}],[\"直接将模板赋值到el所在的外层html结构\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"直接删除老节点\",{\"1\":{\"1476\":1}}],[\"直接报错\",{\"1\":{\"1392\":1}}],[\"直接更新\",{\"0\":{\"1299\":1},\"1\":{\"1299\":1}}],[\"直接操作和第三方\",{\"0\":{\"1250\":1}}],[\"直接保存符号连接\",{\"1\":{\"1018\":1}}],[\"直接显示符号连接所指向的文件的类别\",{\"1\":{\"1012\":1}}],[\"直接覆盖旧文件\",{\"1\":{\"1001\":1}}],[\"直接返回\",{\"1\":{\"817\":1}}],[\"直接返回该对象\",{\"1\":{\"755\":1}}],[\"直接返回false\",{\"1\":{\"624\":1}}],[\"直接赋值\",{\"0\":{\"754\":1}}],[\"直接转换策略\",{\"1\":{\"1945\":1}}],[\"直接转换为\",{\"1\":{\"662\":2}}],[\"直接转化为数组实例\",{\"1\":{\"710\":1}}],[\"直接引用\",{\"1\":{\"592\":1}}],[\"直接导入的\",{\"1\":{\"334\":1}}],[\"直接为该元素绘制新的样式\",{\"1\":{\"223\":1}}],[\"由一个材质捕捉\",{\"1\":{\"2695\":1}}],[\"由一个工厂对象决定创建某一种产品对象类的实例\",{\"1\":{\"1753\":1}}],[\"由基表或其他视图表导出的表\",{\"1\":{\"2225\":1}}],[\"由路由器\",{\"1\":{\"2212\":1}}],[\"由嵌入式网络数据库\",{\"1\":{\"2195\":1}}],[\"由反向代理服务器根据算哒转发到具体的服务器\",{\"1\":{\"2077\":1}}],[\"由mesh进程完成\",{\"1\":{\"2054\":1}}],[\"由连接子引起的失配\",{\"1\":{\"2028\":1}}],[\"由构件引起的失配\",{\"1\":{\"2028\":1}}],[\"由计算机设备\",{\"1\":{\"1867\":1}}],[\"由语言系统\",{\"1\":{\"1865\":1}}],[\"由业务处理系统发展而成的\",{\"1\":{\"1864\":1}}],[\"由子类决定具体创建哪个类的对象\",{\"1\":{\"1754\":1}}],[\"由小到大增加拥塞窗口的大小\",{\"1\":{\"1719\":1}}],[\"由此可见\",{\"1\":{\"901\":1}}],[\"由此可以得出结论\",{\"1\":{\"877\":1}}],[\"由三个十进制数字组成\",{\"1\":{\"817\":1}}],[\"由开发人员完成的手动类型转换\",{\"1\":{\"772\":1}}],[\"由\",{\"1\":{\"338\":1,\"379\":1,\"388\":1,\"772\":1,\"1237\":1}}],[\"由上可知\",{\"1\":{\"272\":1}}],[\"由父节点的监听函数统一处理多个子元素的事件\",{\"1\":{\"235\":1}}],[\"由px换算单位成vw单位比较简单\",{\"1\":{\"208\":1}}],[\"由于opengl\",{\"1\":{\"2758\":1,\"2765\":1}}],[\"由于mapcap图像文件编码了烘焙过的光照\",{\"1\":{\"2695\":1}}],[\"由于反射率和光照模型的简单性\",{\"1\":{\"2593\":1}}],[\"由于管理软件的增加\",{\"1\":{\"2162\":1}}],[\"由于节点之间的交换遵循固定的算法\",{\"1\":{\"2132\":1}}],[\"由于使用分布式核算和存储\",{\"1\":{\"2132\":1}}],[\"由于系统成分对全局体系结构的假设存在冲突引起的失配等\",{\"1\":{\"2028\":1}}],[\"由于活动的自由时差时其总时差的构成部分\",{\"1\":{\"1955\":1}}],[\"由于所有订阅者都会收到发布者的通知\",{\"1\":{\"1805\":1}}],[\"由于不需要等待设置的重传计时器到期\",{\"1\":{\"1721\":1}}],[\"由于不同方法对空位数组的处理方式不同\",{\"1\":{\"679\":1}}],[\"由于tcp的下层网络\",{\"1\":{\"1717\":1}}],[\"由于安全隐患\",{\"1\":{\"1679\":1}}],[\"由于在http请求中的cookie是明文传递的\",{\"1\":{\"1660\":1}}],[\"由于是函数内定义函数\",{\"1\":{\"1653\":1}}],[\"由于空闲内存是间断的\",{\"1\":{\"1646\":1}}],[\"由于远程库是空的\",{\"1\":{\"1610\":1}}],[\"由于该命令不会自定合并数据\",{\"1\":{\"1609\":1}}],[\"由于它只在组件的初始化阶段执行一次\",{\"1\":{\"1274\":1}}],[\"由于数组会默认带一个\",{\"1\":{\"738\":1}}],[\"由于每次加法操作都是独立完成的\",{\"1\":{\"616\":1}}],[\"由于没有代码块\",{\"1\":{\"596\":1}}],[\"由于上面\",{\"1\":{\"577\":1}}],[\"由于if\",{\"1\":{\"505\":1}}],[\"由于变量提升的存在\",{\"1\":{\"504\":1,\"505\":1}}],[\"由于默认情况下模块是延迟的\",{\"1\":{\"473\":1}}],[\"由于代码之间会发生大量交互\",{\"1\":{\"442\":1}}],[\"由于我们没有对\",{\"1\":{\"430\":1}}],[\"由于箭头函数没有\",{\"1\":{\"362\":1}}],[\"由于集合中元素的唯一性\",{\"1\":{\"271\":1}}],[\"由于事件会在冒泡阶段向上传播到父节点\",{\"1\":{\"235\":1}}],[\"由于\",{\"1\":{\"230\":1,\"334\":1,\"350\":1,\"395\":1,\"507\":1,\"597\":1,\"604\":1,\"646\":1,\"903\":1,\"1274\":1,\"1283\":1,\"1285\":1,\"1577\":1}}],[\"由于容器内两个div元素浮动\",{\"1\":{\"153\":1}}],[\"由于历史原因\",{\"1\":{\"102\":1}}],[\"都由付款人用私钥签名\",{\"1\":{\"2132\":1}}],[\"都直接进行响应\",{\"1\":{\"1737\":1}}],[\"都不应对其有任何影响\",{\"1\":{\"2258\":1}}],[\"都不缓冲直接发送\",{\"1\":{\"1730\":1}}],[\"都不会卡顿\",{\"1\":{\"1311\":1}}],[\"都不会触发usememo\",{\"1\":{\"1265\":1}}],[\"都在采用标记清除算法\",{\"1\":{\"1646\":1}}],[\"都放到队列里面去\",{\"1\":{\"1541\":1}}],[\"都挂载到\",{\"1\":{\"1514\":1}}],[\"都表示数字\",{\"1\":{\"1402\":1}}],[\"都采用了\",{\"1\":{\"1275\":1}}],[\"都没有特殊含义\",{\"1\":{\"1089\":1}}],[\"都始终返回\",{\"1\":{\"793\":1}}],[\"都抽象成通用的方法\",{\"1\":{\"728\":1}}],[\"都需要指定已有数组实例上的一个范围\",{\"1\":{\"683\":1}}],[\"都是需要占用内存的\",{\"1\":{\"1644\":1}}],[\"都是通过接口进行的\",{\"1\":{\"2025\":1}}],[\"都是通过\",{\"1\":{\"1577\":1}}],[\"都是先判断\",{\"1\":{\"889\":1}}],[\"都是协议\",{\"1\":{\"865\":1}}],[\"都是一组有序的数据\",{\"1\":{\"674\":1}}],[\"都是在运行时确定依赖关系\",{\"1\":{\"467\":1}}],[\"都是在全局作用域下实现的\",{\"1\":{\"365\":1}}],[\"都返回新的\",{\"1\":{\"581\":1}}],[\"都要经历编译和执行阶段\",{\"1\":{\"501\":1}}],[\"都支持\",{\"1\":{\"473\":1}}],[\"都能用索引获取数组元素\",{\"1\":{\"402\":1}}],[\"都有可能会导致不一样的执行结果\",{\"1\":{\"504\":1}}],[\"都有一个\",{\"1\":{\"449\":1}}],[\"都有哪些常用的方法和属性\",{\"1\":{\"402\":1}}],[\"都有\",{\"1\":{\"402\":1,\"610\":1}}],[\"都添加了\",{\"1\":{\"392\":1}}],[\"都失败\",{\"1\":{\"328\":2}}],[\"都可以交给\",{\"1\":{\"1665\":1}}],[\"都可以访问\",{\"1\":{\"1390\":1}}],[\"都可以进行类型转换\",{\"1\":{\"772\":1}}],[\"都可以进行处理\",{\"1\":{\"286\":1,\"678\":1}}],[\"都可以把\",{\"1\":{\"732\":1}}],[\"都可以被看作是一个块级作用域\",{\"1\":{\"501\":1}}],[\"都可以采用数组形式的解构赋值\",{\"1\":{\"252\":1}}],[\"都可以理解为向外发送指令\",{\"1\":{\"116\":1}}],[\"都会携带\",{\"1\":{\"1660\":1}}],[\"都会运行并更新\",{\"1\":{\"1283\":1}}],[\"都会重新计算\",{\"1\":{\"1269\":1}}],[\"都会重新创建\",{\"1\":{\"1212\":1}}],[\"都会触发usememo\",{\"1\":{\"1265\":1}}],[\"都会触发重排\",{\"1\":{\"224\":1}}],[\"都会创建一个新的\",{\"1\":{\"1236\":1}}],[\"都会被当作非活动对象来清除掉\",{\"1\":{\"1646\":1}}],[\"都会被推断成\",{\"1\":{\"1442\":1}}],[\"都会被重新创建\",{\"1\":{\"1210\":1}}],[\"都会被判断为\",{\"1\":{\"656\":1}}],[\"都会为子组件传递一个新的函数实例\",{\"1\":{\"1209\":1}}],[\"都会为它生成独有的执行环境\",{\"1\":{\"374\":1}}],[\"都会先将对象转换为原始类型\",{\"1\":{\"804\":1}}],[\"都会返回true\",{\"1\":{\"792\":1}}],[\"都会将其展开并返回元素拼接好的字符串\",{\"1\":{\"784\":1}}],[\"都会消失\",{\"1\":{\"763\":1}}],[\"都会执行finally方法指定的回调函数\",{\"1\":{\"575\":1}}],[\"都会执行的操作\",{\"1\":{\"575\":1}}],[\"都会天生自带一个\",{\"1\":{\"479\":1}}],[\"都会从对应的回调队列中取出函数去执行\",{\"1\":{\"379\":1}}],[\"都会首先被交到全局对象手上\",{\"1\":{\"365\":1}}],[\"都会用到模板字符串\",{\"1\":{\"255\":1}}],[\"都会根据冒泡传播的传递机制\",{\"1\":{\"236\":1}}],[\"都会比较麻烦\",{\"1\":{\"208\":1}}],[\"所要加载的url\",{\"1\":{\"2476\":1,\"2478\":1,\"2479\":1,\"2480\":1}}],[\"所依赖的变量或值\",{\"1\":{\"1264\":1}}],[\"所属群组\",{\"1\":{\"1032\":1}}],[\"所需数据\",{\"1\":{\"859\":2}}],[\"所谓并行\",{\"1\":{\"1649\":1}}],[\"所谓扁平化\",{\"1\":{\"734\":1}}],[\"所谓异步加载\",{\"1\":{\"457\":1}}],[\"所谓的变量提升就是变量可以在声明之前使用\",{\"1\":{\"249\":1}}],[\"所有正在进行的动画都会停止\",{\"1\":{\"2838\":1}}],[\"所有其他的光类型都继承了该类描述的属性和方法\",{\"1\":{\"2850\":1}}],[\"所有其他材质类型都继承了以下属性和方法\",{\"1\":{\"2633\":1}}],[\"所有其他用户\",{\"1\":{\"1039\":1}}],[\"所有加载器加载完成后\",{\"1\":{\"2464\":1}}],[\"所有加载的其实都是引用\",{\"1\":{\"467\":1}}],[\"所有组成该处理部件的计算单元的理论性能之和即为ctp\",{\"1\":{\"2170\":1}}],[\"所有过程自动化原则\",{\"1\":{\"2053\":1}}],[\"所有需求都能被预先定义\",{\"1\":{\"1923\":1}}],[\"所有外部交互必须通过公开定义的接口进行\",{\"1\":{\"1900\":1}}],[\"所有订阅者都会实时接收到通知\",{\"1\":{\"1804\":1}}],[\"所有依赖于它的对象都将得到通知\",{\"1\":{\"1802\":1}}],[\"所有策略的合集\",{\"1\":{\"1784\":1}}],[\"所有配置都仅限于项目目录\",{\"1\":{\"1586\":1}}],[\"所有以\",{\"1\":{\"1583\":1}}],[\"所有文件和历史数据都存储在中央服务器上\",{\"1\":{\"1579\":1}}],[\"所有类型的数据都可以直接存入\",{\"1\":{\"1670\":1}}],[\"所有类型也都可以赋值给\",{\"1\":{\"1418\":1}}],[\"所有类型都可以赋值给\",{\"1\":{\"1418\":1}}],[\"所有使用了\",{\"1\":{\"1225\":1}}],[\"所有使用者都可使用\",{\"1\":{\"929\":1}}],[\"所有用户\",{\"1\":{\"1039\":1}}],[\"所有者的权限用数字表达\",{\"1\":{\"1040\":1}}],[\"所有者和时间戳信息\",{\"1\":{\"998\":1}}],[\"所有者\",{\"1\":{\"972\":1,\"1035\":2}}],[\"所有没有经过定义而直接被赋值的变量默认就是一个全局变量\",{\"1\":{\"896\":1}}],[\"所有的项目加载完成后将调用此函数\",{\"1\":{\"2469\":1}}],[\"所有的操作都是无状态的\",{\"1\":{\"2039\":1}}],[\"所有的活动之中\",{\"1\":{\"1959\":1}}],[\"所有的数据都是以文本格式保存\",{\"1\":{\"1664\":1}}],[\"所有的第三方声明的类型库都会带有这样的前缀\",{\"1\":{\"1356\":1}}],[\"所有的传参都在payload里面\",{\"1\":{\"1167\":1}}],[\"所有的\",{\"1\":{\"895\":1,\"1559\":1}}],[\"所有的页面元素都可以直接进行计算换算成\",{\"1\":{\"208\":1}}],[\"所有非空字符串为真\",{\"1\":{\"889\":1}}],[\"所有数学运算符在与符号一起使用时都会引发错误\",{\"1\":{\"803\":1}}],[\"所有数组的方法都可以在类型化数组上面使用\",{\"1\":{\"402\":1}}],[\"所有数组元素依次执行该函数\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"所有值都存储在\",{\"1\":{\"642\":1}}],[\"所有同一个类的实例都可以访问到这个原型对象\",{\"1\":{\"479\":1}}],[\"所有符合匹配规则的字符都将被替换掉\",{\"1\":{\"326\":1}}],[\"所以更新uniform值将立即更新glsl代码中的相应值\",{\"1\":{\"2760\":1}}],[\"所以要篡改成功\",{\"1\":{\"2133\":1}}],[\"所以服务端仍旧可以发送数据给客户端\",{\"1\":{\"1729\":1}}],[\"所以只能先回复一个ack报文\",{\"1\":{\"1729\":1}}],[\"所以只要解决这一点\",{\"1\":{\"1646\":1}}],[\"所以发送窗口可以移动到已确认报文段的后面\",{\"1\":{\"1724\":1}}],[\"所以发送方现在认为网络可能没有出现拥塞\",{\"1\":{\"1722\":1}}],[\"所以都当做拥塞来处理\",{\"1\":{\"1720\":1}}],[\"所以很适合像\",{\"1\":{\"1707\":1}}],[\"所以为避免跨域脚本\",{\"1\":{\"1661\":1}}],[\"所以为了方便计算\",{\"1\":{\"206\":1}}],[\"所以安全性成问题\",{\"1\":{\"1660\":1}}],[\"所以4k并不是一个域名下所有的cookie共享的\",{\"1\":{\"1660\":1}}],[\"所以增量标记缺点也很明显\",{\"1\":{\"1650\":1}}],[\"所以还需要同步更新引用这些对象的指针\",{\"1\":{\"1649\":1}}],[\"所以老生代垃圾回收器来管理其垃圾回收执行\",{\"1\":{\"1648\":1}}],[\"所以引擎试图将垃圾收集工作分成几部分来做\",{\"1\":{\"1641\":1}}],[\"所以对git来说事未知的\",{\"1\":{\"1614\":1}}],[\"所以对于那些计算密集的初始化操作\",{\"1\":{\"1274\":1}}],[\"所以对于字体的适配更好的做法就是使用\",{\"1\":{\"207\":1}}],[\"所以该命令执行完后需要手动执行\",{\"1\":{\"1609\":1}}],[\"所以该类型同时拥有\",{\"1\":{\"1460\":1}}],[\"所以暂存区有时也叫作索引\",{\"1\":{\"1584\":1}}],[\"所以网络流量会减慢每个人的速度\",{\"1\":{\"1581\":1}}],[\"所以把他们收集到自己的observer实例的dep里面\",{\"1\":{\"1563\":1}}],[\"所以需要双方分别释放到对方的连接\",{\"1\":{\"1729\":1}}],[\"所以需要加上一部分多人协同\",{\"1\":{\"1649\":1}}],[\"所以需要对数组递归进行依赖收集\",{\"1\":{\"1563\":1}}],[\"所以需要简单了解一下几个基本的概念\",{\"1\":{\"202\":1}}],[\"所以五大收集依赖\",{\"1\":{\"1563\":1}}],[\"所以此时不执行慢开始算法\",{\"1\":{\"1722\":1}}],[\"所以此时的\",{\"1\":{\"362\":1,\"1201\":1}}],[\"所以此方法只用来劫持对象\",{\"1\":{\"1534\":1}}],[\"所以另建\",{\"1\":{\"1533\":1}}],[\"所以划分不同文件引入利于代码分割\",{\"1\":{\"1533\":1}}],[\"所以是真实dom\",{\"1\":{\"1528\":1}}],[\"所以是不能被访问的\",{\"1\":{\"511\":1}}],[\"所以是不能执行fn方法的\",{\"1\":{\"500\":1}}],[\"所以上面的示例中提示了一个\",{\"1\":{\"1443\":1}}],[\"所以上述代码最后输出的是\",{\"1\":{\"507\":1}}],[\"所以大\",{\"1\":{\"1431\":1}}],[\"所以大端字节序或小端字节序是可以自行设定的\",{\"1\":{\"408\":1}}],[\"所以所有原始类型\",{\"1\":{\"1431\":1}}],[\"所以静态方法里面只能访问类的静态属性和方法\",{\"1\":{\"1391\":1}}],[\"所以报错了\",{\"1\":{\"1340\":1}}],[\"所以可能会在浏览器的下一个绘制周期之后才执行\",{\"1\":{\"1255\":1}}],[\"所以可以通过\",{\"1\":{\"864\":1}}],[\"所以可以把数组直接转换成逗号分隔的字符串\",{\"1\":{\"738\":1}}],[\"所以可以将他们的内容通过\",{\"1\":{\"710\":1}}],[\"所以可以将参数\",{\"1\":{\"269\":1}}],[\"所以可以在其结果的\",{\"1\":{\"581\":1}}],[\"所以可以在\",{\"1\":{\"339\":1}}],[\"所以可以使用扩展运算符和\",{\"1\":{\"271\":1,\"272\":1}}],[\"所以可以使用\",{\"1\":{\"126\":1}}],[\"所以可以分解成以下\",{\"1\":{\"118\":1}}],[\"所以输入框会实时显示用户的输入\",{\"1\":{\"1235\":1}}],[\"所以输出\",{\"1\":{\"355\":1}}],[\"所以正如预期的那样返回了true\",{\"1\":{\"772\":1}}],[\"所以如果属性值里边出现函数或者\",{\"1\":{\"768\":1}}],[\"所以如果右边是这两个值\",{\"1\":{\"254\":1}}],[\"所以第一个参数不能为\",{\"1\":{\"755\":1}}],[\"所以就需要被清理\",{\"1\":{\"1644\":1}}],[\"所以就需要利用下面这几个方法去借用数组的方法\",{\"1\":{\"731\":1}}],[\"所以就会出现浏览器出现横向滚动条的情况\",{\"1\":{\"201\":1}}],[\"所以放入栈中存储\",{\"1\":{\"651\":1}}],[\"所以不推荐使用\",{\"1\":{\"1646\":1}}],[\"所以不会回收\",{\"1\":{\"1645\":1}}],[\"所以不会被回收\",{\"1\":{\"640\":1}}],[\"所以不能当做构造函数使用\",{\"1\":{\"262\":1}}],[\"所以最终结果是一个字符串\",{\"1\":{\"616\":1}}],[\"所以最后打印出来的是\",{\"1\":{\"506\":1}}],[\"所以最后输出为timeout\",{\"1\":{\"382\":1}}],[\"所以运算速度会相对于其他运算符快很多\",{\"1\":{\"606\":1}}],[\"所以我们认为从太阳发出的光线也都是平行的\",{\"1\":{\"2868\":1}}],[\"所以我们写\",{\"1\":{\"1706\":1}}],[\"所以我们可以利用该特点\",{\"1\":{\"666\":1}}],[\"所以我们可以用触发两个元素的\",{\"1\":{\"184\":1}}],[\"所以我们只需要考虑\",{\"1\":{\"606\":1}}],[\"所以下面这个示例完全可以正确运行\",{\"1\":{\"595\":1}}],[\"所以下面代码会报错\",{\"1\":{\"253\":1}}],[\"所以自然需要一种暂停和恢复执行的能力\",{\"1\":{\"594\":1}}],[\"所以体现在代码中就需要对每个任务的执行结果做两次判断\",{\"1\":{\"569\":1}}],[\"所以面对某些需要持续响应的场景时就会变得力不从心\",{\"1\":{\"565\":1}}],[\"所以当\",{\"1\":{\"506\":1}}],[\"所以获取到的\",{\"1\":{\"505\":1}}],[\"所以变量提升在很长时间内还会继续存在\",{\"1\":{\"500\":1}}],[\"所以浏览器也不会有任何反应\",{\"1\":{\"463\":1}}],[\"所以加载比较快\",{\"1\":{\"448\":1}}],[\"所以其\",{\"1\":{\"429\":1}}],[\"所以也只能通过直接调用类的方法和属性来访问\",{\"1\":{\"1391\":1}}],[\"所以也不可以使用\",{\"1\":{\"362\":1}}],[\"所以也没有第三个参数\",{\"1\":{\"232\":1}}],[\"所以使用本机的字节序就可以了\",{\"1\":{\"408\":1}}],[\"所以使用\",{\"1\":{\"359\":1}}],[\"所以结果永远是\",{\"1\":{\"355\":1}}],[\"所以会有不同的视图\",{\"1\":{\"1974\":1}}],[\"所以会看到在\",{\"1\":{\"897\":1}}],[\"所以会被判定为object\",{\"1\":{\"642\":1}}],[\"所以会输出全局对象\",{\"1\":{\"363\":1}}],[\"所以会输出\",{\"1\":{\"354\":1}}],[\"所以会返回true\",{\"1\":{\"524\":1}}],[\"所以会返回\",{\"1\":{\"272\":1,\"281\":1}}],[\"所以这些变量在整个函数体内部的任何地方都是能被访问的\",{\"1\":{\"501\":1}}],[\"所以这里是一一对应的\",{\"1\":{\"1564\":1}}],[\"所以这里可以利用闭包的特点来实现一个简单的缓存\",{\"1\":{\"902\":1}}],[\"所以这里会很容易造成误解\",{\"1\":{\"505\":1}}],[\"所以这里的异步不是\",{\"1\":{\"371\":1}}],[\"所以这里只介绍全局执行上下文和函数执行上下文\",{\"1\":{\"350\":1}}],[\"所以这时候不能使用\",{\"1\":{\"184\":1}}],[\"所以将它解析为从回调函数中获取一个参数\",{\"1\":{\"341\":1}}],[\"所以通常使用\",{\"1\":{\"324\":1}}],[\"所以通常在\",{\"1\":{\"300\":1}}],[\"所以计算精度和表示范围都有一定限制\",{\"1\":{\"320\":1}}],[\"所以存在对\",{\"1\":{\"289\":1}}],[\"所以写的位置不是那么重要\",{\"1\":{\"275\":1}}],[\"所以箭头函数中\",{\"1\":{\"261\":1}}],[\"所以它属于面向服务架构中的一种\",{\"1\":{\"2041\":1}}],[\"所以它使用一个叫做specificity的公式\",{\"1\":{\"1707\":1}}],[\"所以它需要额外实现一些读写锁机制来控制这一点\",{\"1\":{\"1651\":1}}],[\"所以它可以立即回收垃圾\",{\"1\":{\"1646\":1}}],[\"所以它就是全局变量\",{\"1\":{\"896\":1}}],[\"所以它永远无法被清除和删除数据\",{\"1\":{\"430\":1}}],[\"所以它的作用域是\",{\"1\":{\"898\":1}}],[\"所以它的作用域也就是函数的内部\",{\"1\":{\"897\":1}}],[\"所以它的\",{\"1\":{\"364\":1}}],[\"所以它没有自己的\",{\"1\":{\"261\":1}}],[\"所以它不占据空间\",{\"1\":{\"178\":1}}],[\"所以参数中的\",{\"1\":{\"258\":1}}],[\"所以在每个像素的渲染都要比\",{\"1\":{\"2737\":1}}],[\"所以在掘金社区上读取不到第三条代码存储cookie值\",{\"1\":{\"1659\":1}}],[\"所以在定义变量时应该注意作用域的问题\",{\"1\":{\"896\":1}}],[\"所以在网页中的任何位置都可以使用并且访问到这个全局变量\",{\"1\":{\"896\":1}}],[\"所以在使用时应该使用小括号明确\",{\"1\":{\"646\":1}}],[\"所以在编译阶段\",{\"1\":{\"507\":1}}],[\"所以在其中定义属性或者方法要写this\",{\"1\":{\"495\":1}}],[\"所以在实际应用中\",{\"1\":{\"271\":1}}],[\"所以在这种场景下更适合使用\",{\"1\":{\"269\":1}}],[\"所以在\",{\"1\":{\"249\":1,\"507\":1,\"898\":1}}],[\"所以在代码执行之前\",{\"1\":{\"249\":1}}],[\"所以在控制台无法用肉眼观察到\",{\"1\":{\"123\":1}}],[\"所以没有数组类型上自带的那些方法\",{\"1\":{\"731\":1}}],[\"所以没有\",{\"1\":{\"230\":1}}],[\"所以\",{\"1\":{\"118\":1,\"207\":1,\"208\":1,\"253\":1,\"321\":1,\"360\":1,\"376\":1,\"445\":1,\"505\":1,\"507\":1,\"594\":1,\"595\":3,\"614\":1,\"643\":1,\"698\":1,\"788\":1,\"897\":1,\"1644\":1,\"1753\":1,\"1755\":1,\"1955\":1,\"2296\":1}}],[\"以json格式返回光数据\",{\"1\":{\"2860\":1}}],[\"以跟踪各种子对象属性\",{\"1\":{\"2803\":1}}],[\"以提高性能\",{\"1\":{\"2741\":1}}],[\"以提高性能和优化渲染\",{\"1\":{\"1201\":1}}],[\"以键值对形式的对象传递\",{\"1\":{\"2650\":1}}],[\"以键值对的形式展示\",{\"1\":{\"1659\":1}}],[\"以创建遮挡其他对象的不可见对象\",{\"1\":{\"2649\":1}}],[\"以确保物体的透明部分不投射阴影\",{\"1\":{\"2597\":1}}],[\"以角度返回当前垂直视野角度\",{\"1\":{\"2582\":1}}],[\"以角度来表示\",{\"1\":{\"2575\":1}}],[\"以避免混淆\",{\"1\":{\"2455\":1}}],[\"以避免更新之间的不一致状态\",{\"1\":{\"1203\":1}}],[\"以较少的信号线传输更多的信息\",{\"1\":{\"2184\":1}}],[\"以较小的单位来做比较\",{\"1\":{\"1009\":1}}],[\"以internet为基础的嵌入式系统\",{\"1\":{\"2178\":1}}],[\"以计算机技术为基础\",{\"1\":{\"2176\":1}}],[\"以机器运算速度的单位是mips\",{\"1\":{\"2170\":1}}],[\"以时钟频率高低衡量速度\",{\"1\":{\"2170\":1}}],[\"以页为单位将程序调入内存\",{\"1\":{\"2160\":1}}],[\"以保护系统的信息完整性\",{\"1\":{\"2118\":1}}],[\"以便\",{\"1\":{\"2743\":1}}],[\"以便通过\",{\"1\":{\"2741\":1}}],[\"以便仅剪切其交叉点\",{\"1\":{\"2646\":1}}],[\"以便能正常更新缓存\",{\"1\":{\"2072\":1}}],[\"以便在适当的时候更改或更新它们\",{\"1\":{\"1303\":1}}],[\"以便在组件的生命周期中更改或更新它\",{\"1\":{\"1303\":1}}],[\"以容器\",{\"1\":{\"2052\":1}}],[\"以满足新系统的需求\",{\"1\":{\"2028\":1}}],[\"以应对新需求\",{\"1\":{\"2028\":1}}],[\"以消除产生质量问题的原因\",{\"1\":{\"1959\":1}}],[\"以判断他们是否符合相关质量标准\",{\"1\":{\"1959\":1}}],[\"以判断数据类型为例\",{\"1\":{\"590\":1}}],[\"以不断进展的方式揭示信息\",{\"1\":{\"1928\":1}}],[\"以不强迫用户进入不必要的或不希望的动作方式来定义交互方式\",{\"1\":{\"1928\":1}}],[\"以改善其整体质量\",{\"1\":{\"1905\":1}}],[\"以人为本\",{\"1\":{\"1903\":1}}],[\"以架构为中心\",{\"1\":{\"1901\":1}}],[\"以扩展\",{\"1\":{\"1899\":1}}],[\"以快速原型为基础+瀑布模型\",{\"1\":{\"1898\":1}}],[\"以商业流程和企业应用为核心\",{\"1\":{\"1887\":1}}],[\"以企业内部mis为核心\",{\"1\":{\"1876\":1}}],[\"以数据处理为核心\",{\"1\":{\"1876\":1}}],[\"以此减少信息不一致的现象\",{\"1\":{\"1856\":1}}],[\"以此类推\",{\"1\":{\"528\":1,\"529\":1,\"702\":1}}],[\"以客户为中心的过程\",{\"1\":{\"1855\":1}}],[\"以达到最优规划\",{\"1\":{\"1843\":1}}],[\"以达到预期的效果\",{\"1\":{\"727\":1}}],[\"以求\",{\"1\":{\"1843\":1}}],[\"以控制对目标对象的访问\",{\"1\":{\"1793\":1}}],[\"以太网规定了连入网络的所有设备都必须具备\",{\"1\":{\"1692\":1}}],[\"以太网协议\",{\"0\":{\"1692\":1},\"1\":{\"1692\":1}}],[\"以报文段为单位\",{\"1\":{\"1690\":1}}],[\"以忽略合并提交的次数\",{\"1\":{\"1604\":1}}],[\"以在远程仓库添加这个分支\",{\"1\":{\"1594\":1}}],[\"以在最底一行输入命令\",{\"1\":{\"1056\":1}}],[\"以使用系统适应各类变化而不被淘汰\",{\"1\":{\"1949\":1}}],[\"以使输出具有更高的可读性\",{\"1\":{\"1589\":1}}],[\"以使运算符或函数正常工作\",{\"1\":{\"774\":1}}],[\"以严格模式检查每个模块\",{\"1\":{\"1454\":1}}],[\"以后所有继承的子类必须按照规范去实现自己的具体逻辑\",{\"1\":{\"1392\":1}}],[\"以后应使用资源现在所指的\",{\"1\":{\"817\":1}}],[\"以上这些命令标识符都可以组合使用\",{\"1\":{\"1631\":1}}],[\"以上命令会将本地所有tag都推送到远程仓库\",{\"1\":{\"1619\":1}}],[\"以上面的的形式创建的标签都属于轻量标签\",{\"1\":{\"1618\":1}}],[\"以上代码我们定义了一个\",{\"1\":{\"1467\":1}}],[\"以上代码中\",{\"1\":{\"1368\":1}}],[\"以上结果表明\",{\"1\":{\"286\":1,\"678\":1}}],[\"以一个简单的\",{\"1\":{\"1366\":1}}],[\"以外\",{\"1\":{\"1338\":1}}],[\"以外的字符\",{\"1\":{\"551\":1}}],[\"以更新状态并触发重新渲染\",{\"1\":{\"1273\":1}}],[\"以防止设置已卸载组件的状态\",{\"1\":{\"1249\":1}}],[\"以防止它在组件不在\",{\"1\":{\"1246\":1}}],[\"以获得更好的性能和用户体验\",{\"1\":{\"1203\":1}}],[\"以优化性能并提高用户体验\",{\"1\":{\"1203\":1}}],[\"以三个为一组\",{\"1\":{\"1029\":1}}],[\"以压缩文件内拥有最新更改时间的文件为准\",{\"1\":{\"1018\":1}}],[\"以递归的方式查找符合条件的文件\",{\"1\":{\"1016\":1}}],[\"以并列的方式显示文件的异同之处\",{\"1\":{\"1009\":1}}],[\"以合并的方式来显示文件内容的不同\",{\"1\":{\"1009\":1}}],[\"以逐行的方式\",{\"1\":{\"1008\":1}}],[\"以文件副本的形式存在\",{\"1\":{\"1002\":1}}],[\"以路径的形式存在\",{\"1\":{\"1002\":1}}],[\"以实际上的行数\",{\"1\":{\"986\":1}}],[\"以长格式显示文件和目录信息\",{\"1\":{\"972\":1}}],[\"以替代\",{\"1\":{\"719\":1,\"874\":1}}],[\"以每一项为参数运行的函数和可选的作为函数运行上下文的作用域对象\",{\"1\":{\"711\":1}}],[\"以得到最终的字符串\",{\"1\":{\"687\":1}}],[\"以第二个参数为基数转换数值\",{\"1\":{\"663\":1}}],[\"以供后续的调用\",{\"1\":{\"569\":1}}],[\"以字节为单位\",{\"1\":{\"398\":1}}],[\"以来的毫秒数\",{\"1\":{\"391\":1}}],[\"以异步的方式将任务的执行结果返回给v8引擎\",{\"1\":{\"378\":1}}],[\"以渲染进程为例\",{\"1\":{\"371\":1}}],[\"以简化输出信息\",{\"1\":{\"1603\":1}}],[\"以简化\",{\"1\":{\"334\":1}}],[\"以前\",{\"1\":{\"318\":1,\"344\":1}}],[\"以前这个方法只会输出函数代码\",{\"1\":{\"317\":1}}],[\"以及充当真实的几何体\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"以及在解决纠纷时随机进行的证据恢复和再次验证\",{\"1\":{\"2129\":1}}],[\"以及在确保状态更新后执行其他逻辑\",{\"1\":{\"1196\":1}}],[\"以及计划的优化等\",{\"1\":{\"1956\":1}}],[\"以及企业与合作伙伴之间的关系\",{\"1\":{\"1889\":1}}],[\"以及使用\",{\"1\":{\"1691\":1}}],[\"以及其中添加和移除的行数\",{\"1\":{\"1631\":1}}],[\"以及其他的标签信息\",{\"1\":{\"1616\":1}}],[\"以及其子\",{\"1\":{\"1099\":1}}],[\"以及直接在组件主体中声明的所有变量和函数\",{\"1\":{\"1241\":1}}],[\"以及\",{\"1\":{\"763\":1,\"1071\":1,\"1695\":1,\"2744\":2}}],[\"以及填充数组方法\",{\"1\":{\"683\":1}}],[\"以及当前要存储值的真实数据\",{\"1\":{\"642\":1}}],[\"以及一些复合赋值操作符\",{\"1\":{\"638\":1}}],[\"以及最终函数的执行进度都可以很好地控制\",{\"1\":{\"588\":1}}],[\"以及复用父类方法的逻辑\",{\"1\":{\"495\":1}}],[\"以及操作dom\",{\"1\":{\"370\":1}}],[\"以及引用对象的属性\",{\"1\":{\"255\":1}}],[\"以及和其他元素的关系和相互作用\",{\"1\":{\"147\":1}}],[\"以下称\",{\"1\":{\"1431\":3}}],[\"以下这三个标签加载资源路径是不受束缚的\",{\"1\":{\"859\":1}}],[\"以下是合法参数\",{\"1\":{\"2788\":1}}],[\"以下是我们在之前\",{\"1\":{\"1418\":1}}],[\"以下是普通模式常用的几个命令\",{\"1\":{\"1056\":1}}],[\"以下是\",{\"1\":{\"495\":1}}],[\"以下是不支持事件捕获的\",{\"1\":{\"232\":1}}],[\"以下面的代码为例\",{\"1\":{\"436\":1}}],[\"以下行为会导致变量从局部范围泄露到全局范围\",{\"1\":{\"427\":1}}],[\"以下情况就会导致不需要的引用\",{\"1\":{\"426\":1}}],[\"以下两个函数都不会报错\",{\"1\":{\"250\":1}}],[\"以下的\",{\"1\":{\"232\":1}}],[\"以\",{\"1\":{\"207\":1,\"1273\":1,\"1583\":1,\"1664\":1,\"2133\":1}}],[\"实体完整性约束\",{\"1\":{\"2241\":1}}],[\"实体类\",{\"1\":{\"1936\":1}}],[\"实用性\",{\"1\":{\"2011\":1}}],[\"实质是\",{\"1\":{\"1866\":1}}],[\"实质上其实就是连接服务器指定端口\",{\"1\":{\"1726\":1}}],[\"实践准则\",{\"1\":{\"1852\":1}}],[\"实施计划\",{\"1\":{\"1846\":1}}],[\"实时旋转几何体\",{\"1\":{\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2323\":1}}],[\"实时改变\",{\"1\":{\"2311\":1}}],[\"实时操作系统的最核心特点是实时性强\",{\"1\":{\"2189\":1}}],[\"实时性\",{\"1\":{\"2193\":1}}],[\"实时性强\",{\"1\":{\"2189\":1}}],[\"实时性更强\",{\"1\":{\"1736\":1}}],[\"实时接收目标者更新状态\",{\"1\":{\"1806\":1}}],[\"实时通知\",{\"1\":{\"1804\":1}}],[\"实现用户接入\",{\"1\":{\"2220\":1}}],[\"实现高速数据传输\",{\"1\":{\"2220\":1}}],[\"实现在ipv4网络上对ipv6业务的承载\",{\"1\":{\"2215\":1}}],[\"实现网络功能的灵活定制和按需组合\",{\"1\":{\"2205\":1}}],[\"实现分布式处理\",{\"1\":{\"2199\":1}}],[\"实现策略\",{\"1\":{\"2095\":1}}],[\"实现级\",{\"1\":{\"1905\":1}}],[\"实现跨企业间业务协同的层级\",{\"1\":{\"1890\":1}}],[\"实现检测和控制物理流程等层级\",{\"1\":{\"1890\":1}}],[\"实现以数据为驱动的业务模式创新\",{\"1\":{\"1889\":1}}],[\"实现信息化战略目标\",{\"1\":{\"1874\":1}}],[\"实现简单\",{\"1\":{\"1752\":1,\"2077\":1}}],[\"实现者\",{\"1\":{\"1747\":1}}],[\"实现会将失序的报文段给缓存起来\",{\"1\":{\"1724\":1}}],[\"实现起来也很简单\",{\"1\":{\"1649\":1}}],[\"实现协同开发\",{\"1\":{\"1578\":1}}],[\"实现双向记忆\",{\"1\":{\"1571\":1}}],[\"实现异步队列机制\",{\"1\":{\"1541\":1}}],[\"实现队列机制\",{\"0\":{\"1541\":1}}],[\"实现路由流畅切换\",{\"0\":{\"1312\":1}}],[\"实现代码如下\",{\"1\":{\"902\":1}}],[\"实现一个浅拷贝的大致思路分为两点\",{\"1\":{\"760\":1}}],[\"实现原理\",{\"1\":{\"657\":1}}],[\"实现是一样的\",{\"1\":{\"596\":1}}],[\"实现错误冒泡后一站式处理\",{\"1\":{\"569\":1}}],[\"实现链式调用\",{\"1\":{\"569\":1}}],[\"实现对块级作用域的支持呢\",{\"1\":{\"508\":1}}],[\"实现继承\",{\"0\":{\"495\":1}}],[\"实现\",{\"0\":{\"742\":1,\"743\":1,\"745\":1,\"828\":1,\"831\":1,\"1752\":1,\"1771\":1,\"1789\":1,\"1798\":1,\"1806\":1,\"1814\":1,\"1839\":1},\"1\":{\"494\":1,\"1902\":1}}],[\"实现模块化的规范有很多\",{\"1\":{\"444\":1}}],[\"实现的继承方式其实是寄生组合式继承\",{\"1\":{\"495\":1}}],[\"实现的\",{\"1\":{\"392\":1}}],[\"实现的一段代码\",{\"1\":{\"323\":1,\"576\":1}}],[\"实现文字转语音和语音转文字\",{\"1\":{\"340\":1}}],[\"实现了标准的协议\",{\"1\":{\"2025\":1}}],[\"实现了文本共享\",{\"1\":{\"345\":1}}],[\"实现了对此的支持\",{\"1\":{\"256\":1}}],[\"实现了对数组的结构\",{\"1\":{\"252\":1}}],[\"实现了等比适配\",{\"1\":{\"206\":1}}],[\"实例来定义\",{\"1\":{\"2744\":1}}],[\"实例来定义自定义属性\",{\"1\":{\"2741\":1}}],[\"实例不再被用作\",{\"1\":{\"2741\":1}}],[\"实例调用\",{\"1\":{\"1533\":1}}],[\"实例化的时候如果是计算属性\",{\"1\":{\"1571\":1}}],[\"实例化的过程\",{\"1\":{\"1533\":1}}],[\"实例化就会默认调用get方法\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"实例化\",{\"1\":{\"1507\":1}}],[\"实例化对象数据共享问题\",{\"1\":{\"491\":1}}],[\"实例化对象\",{\"1\":{\"484\":1}}],[\"实例对象也放到渲染\",{\"1\":{\"1560\":1}}],[\"实例对象\",{\"1\":{\"1486\":1,\"1525\":1,\"1533\":1,\"1548\":1}}],[\"实例数组\",{\"1\":{\"583\":1}}],[\"实例都执行完毕\",{\"1\":{\"582\":1}}],[\"实例都变成\",{\"1\":{\"577\":1}}],[\"实例创建后\",{\"1\":{\"565\":1}}],[\"实例创建后的初始态\",{\"1\":{\"563\":1}}],[\"实例只能\",{\"1\":{\"565\":1}}],[\"实例被创建时\",{\"1\":{\"565\":1}}],[\"实例有一个变成\",{\"1\":{\"577\":1}}],[\"实例有两个过程\",{\"0\":{\"564\":1}}],[\"实例有三个状态\",{\"0\":{\"563\":1}}],[\"实例中\",{\"1\":{\"1029\":1}}],[\"实例中的回调函数中即可\",{\"1\":{\"583\":1}}],[\"实例中包含一个原型对象的指针\",{\"1\":{\"484\":1}}],[\"实例中没有\",{\"1\":{\"482\":1}}],[\"实例提供了以下方法来写入内存\",{\"1\":{\"412\":1}}],[\"实例提供了以下方法来读取内存\",{\"1\":{\"411\":1}}],[\"实例的可选别名\",{\"1\":{\"2292\":1}}],[\"实例的相关方法\",{\"1\":{\"1535\":1}}],[\"实例的状态都转为\",{\"1\":{\"582\":1}}],[\"实例的状态\",{\"1\":{\"565\":1}}],[\"实例的\",{\"1\":{\"405\":1,\"406\":1,\"1533\":1}}],[\"实例的执行结果\",{\"1\":{\"300\":1}}],[\"实例或者\",{\"1\":{\"401\":1}}],[\"实例\",{\"0\":{\"920\":1,\"922\":1,\"931\":1,\"945\":1,\"948\":1,\"951\":1,\"954\":1,\"957\":1,\"960\":1,\"963\":1,\"973\":1,\"976\":1,\"979\":1,\"984\":1,\"987\":1,\"990\":1,\"993\":1,\"996\":1,\"999\":1,\"1004\":1,\"1007\":1,\"1010\":1,\"1016\":1,\"1019\":1,\"1022\":1,\"1025\":1,\"1033\":1,\"1036\":1,\"1041\":1},\"1\":{\"400\":1,\"401\":1,\"481\":1,\"581\":2,\"1033\":1,\"1535\":1,\"1765\":1,\"1766\":1,\"2741\":1}}],[\"实例上还有一个\",{\"1\":{\"400\":1}}],[\"实例上有一个\",{\"1\":{\"399\":1}}],[\"实例保存在\",{\"1\":{\"339\":1}}],[\"实例并将其设置为\",{\"1\":{\"338\":1}}],[\"实例最终成功或失败都会执行的方法\",{\"1\":{\"300\":1}}],[\"实际存储数据的逻辑表示\",{\"1\":{\"2225\":1}}],[\"实际存在的表\",{\"1\":{\"2225\":1}}],[\"实际修改的是\",{\"1\":{\"1050\":1}}],[\"实际没有得到执行\",{\"1\":{\"578\":1}}],[\"实际使用的是那\",{\"1\":{\"403\":1}}],[\"实际应用的是默认绑定规则\",{\"1\":{\"355\":1}}],[\"实际应用中我们不大可能给所有的盒子加高度\",{\"1\":{\"181\":1}}],[\"实际上初始化的是父组件在模板中使用\",{\"1\":{\"1521\":1}}],[\"实际上访问的是\",{\"1\":{\"1514\":1,\"1521\":1}}],[\"实际上是一个类\",{\"1\":{\"1520\":1}}],[\"实际上是实例化\",{\"1\":{\"1517\":1}}],[\"实际上是\",{\"1\":{\"1517\":1}}],[\"实际上是父组件在模板中使用\",{\"1\":{\"1510\":1}}],[\"实际上是保存在\",{\"1\":{\"943\":1}}],[\"实际上只是在编译阶段进行代码检查\",{\"1\":{\"1388\":1}}],[\"实际上就是在使用闭包\",{\"1\":{\"902\":1}}],[\"实际上就是调用的\",{\"1\":{\"662\":1}}],[\"实际上会使用迭代器将所需要的值与结构源分开\",{\"1\":{\"839\":1}}],[\"实际上变量和函数声明在代码里的位置是不会动的\",{\"1\":{\"500\":1}}],[\"实际上获得的是它外层函数的\",{\"1\":{\"263\":1}}],[\"实际上第二步就是将函数中的\",{\"1\":{\"262\":1}}],[\"实际上\",{\"1\":{\"202\":1,\"286\":1,\"349\":1,\"359\":1,\"387\":1,\"390\":1,\"562\":1,\"678\":1,\"694\":1,\"836\":1,\"844\":1,\"1273\":1,\"1341\":1,\"1428\":1,\"1431\":1,\"2195\":1}}],[\"实际上覆盖住了框\",{\"1\":{\"178\":1}}],[\"实际当中此方法用的比较多\",{\"1\":{\"181\":1}}],[\"份\",{\"1\":{\"206\":1}}],[\"再按不同字长加以调整\",{\"1\":{\"2170\":1}}],[\"再分页\",{\"1\":{\"2162\":1}}],[\"再判断这个请求所用到的缓存是否过期\",{\"1\":{\"2074\":1}}],[\"再判断是否支持\",{\"1\":{\"465\":1}}],[\"再工程工具\",{\"1\":{\"1962\":1}}],[\"再工程是对现有系统的重新开发过程\",{\"1\":{\"1905\":1}}],[\"再工程\",{\"1\":{\"1905\":1}}],[\"再工程和正向工程\",{\"1\":{\"1905\":1}}],[\"再返回给客户端\",{\"1\":{\"1794\":1}}],[\"再返回计算的结果\",{\"1\":{\"902\":1}}],[\"再者网络环境时好时坏\",{\"1\":{\"1712\":1}}],[\"再把自己添加\",{\"1\":{\"1579\":1}}],[\"再把数据传到前端\",{\"1\":{\"864\":1}}],[\"再拓展一下\",{\"1\":{\"1373\":1}}],[\"再用\",{\"1\":{\"943\":1}}],[\"再让后端\",{\"1\":{\"864\":1}}],[\"再上代码\",{\"1\":{\"859\":1}}],[\"再比较\",{\"1\":{\"777\":1}}],[\"再使用\",{\"1\":{\"763\":1}}],[\"再进行判断\",{\"1\":{\"627\":1}}],[\"再进行减法操作\",{\"1\":{\"617\":1}}],[\"再进行计算\",{\"1\":{\"616\":1}}],[\"再进行运算\",{\"1\":{\"616\":1}}],[\"再进行位操作\",{\"1\":{\"606\":1}}],[\"再在这个数值上进行加一或减一操作\",{\"1\":{\"602\":1}}],[\"再同时使用\",{\"1\":{\"588\":1}}],[\"再执行后置函数\",{\"1\":{\"1777\":1}}],[\"再执行原函数\",{\"1\":{\"1777\":1}}],[\"再执行\",{\"1\":{\"581\":1,\"888\":1,\"889\":1}}],[\"再执行当前模块的回调函数\",{\"1\":{\"457\":1}}],[\"再导出\",{\"1\":{\"452\":1}}],[\"再次请求真正的集群\",{\"1\":{\"2077\":1}}],[\"再次发出请求\",{\"1\":{\"1737\":1}}],[\"再次比较\",{\"1\":{\"777\":2,\"778\":1}}],[\"再次上传二进制图片时\",{\"1\":{\"395\":1}}],[\"再次将\",{\"1\":{\"376\":1}}],[\"再将微任务中的所有任务取出\",{\"1\":{\"376\":1}}],[\"再将\",{\"1\":{\"371\":1}}],[\"再来加一个初始值试试\",{\"1\":{\"877\":1}}],[\"再来加一个初始值看看\",{\"1\":{\"284\":1,\"705\":1}}],[\"再来看一个嵌套数组解构的例子\",{\"1\":{\"844\":1}}],[\"再来看一个例子\",{\"1\":{\"355\":1}}],[\"再来看下\",{\"1\":{\"731\":1}}],[\"再来定义一个名为\",{\"1\":{\"463\":1}}],[\"再来使用\",{\"1\":{\"413\":1}}],[\"再暂停\",{\"1\":{\"342\":1}}],[\"再计算出其他页面元素以\",{\"1\":{\"206\":1}}],[\"再继续找就是浪费资源\",{\"1\":{\"119\":1}}],[\"方舱医院\",{\"1\":{\"1899\":1}}],[\"方便用户使用云计算服务所需的各种支撑服务\",{\"1\":{\"2051\":1}}],[\"方便服务器接受时能够准确地还原报文信息\",{\"1\":{\"1690\":1}}],[\"方便进行依赖收集\",{\"1\":{\"1561\":1}}],[\"方便code里面的变量取值\",{\"1\":{\"1549\":1}}],[\"方式来绘制几何体的材质\",{\"1\":{\"2629\":1}}],[\"方式来实现这三个步骤的处理\",{\"1\":{\"596\":1}}],[\"方式表达\",{\"1\":{\"2010\":1}}],[\"方式\",{\"1\":{\"817\":1}}],[\"方式执行效果本质上是一样的\",{\"1\":{\"591\":1}}],[\"方式加载模块\",{\"1\":{\"465\":1}}],[\"方式二\",{\"1\":{\"274\":1}}],[\"方式一\",{\"1\":{\"274\":1}}],[\"方向键\",{\"1\":{\"239\":1,\"1057\":1}}],[\"方案\",{\"0\":{\"206\":1,\"208\":1},\"1\":{\"473\":1}}],[\"方法论\",{\"0\":{\"1845\":1}}],[\"方法专门用于计算属性重新计算\",{\"1\":{\"1571\":1}}],[\"方法只是把计算\",{\"1\":{\"1571\":1}}],[\"方法只会遍历当前对象的属性\",{\"1\":{\"874\":1}}],[\"方法只会调用一次回调函数\",{\"1\":{\"557\":1}}],[\"方法前后分别把自身赋值给\",{\"1\":{\"1561\":1}}],[\"方法挂载在\",{\"1\":{\"1533\":1}}],[\"方法渲染视图\",{\"1\":{\"1486\":1,\"1558\":1}}],[\"方法中参数的索引值\",{\"1\":{\"1469\":1}}],[\"方法中的控制流程\",{\"1\":{\"1416\":1}}],[\"方法中的\",{\"1\":{\"659\":1}}],[\"方法名\",{\"1\":{\"1468\":1,\"1469\":1}}],[\"方法装饰器顾名思义\",{\"1\":{\"1468\":1}}],[\"方法装饰器声明\",{\"1\":{\"1468\":1}}],[\"方法装饰器\",{\"0\":{\"1468\":1},\"1\":{\"1465\":1}}],[\"方法总是穷尽了\",{\"1\":{\"1416\":1}}],[\"方法触发的时候会有三种状态\",{\"1\":{\"1168\":1}}],[\"方法触发监听到的消息\",{\"1\":{\"123\":1}}],[\"方法与\",{\"1\":{\"883\":1}}],[\"方法接收一个函数作为累加器\",{\"1\":{\"877\":1}}],[\"方法接受一个data\",{\"1\":{\"413\":1}}],[\"方法接受的是一个参数数组\",{\"1\":{\"355\":1}}],[\"方法接受的是参数列表\",{\"1\":{\"355\":1}}],[\"方法仅适用于检测数组\",{\"1\":{\"875\":1}}],[\"方法适用遍历\",{\"1\":{\"874\":1}}],[\"方法有返回值\",{\"1\":{\"873\":1}}],[\"方法有两个参数\",{\"1\":{\"363\":1}}],[\"方法遍历数组时会返回一个新数组\",{\"1\":{\"873\":1}}],[\"方法无法遍历对象\",{\"1\":{\"872\":1,\"873\":1}}],[\"方法无法读取该键\",{\"1\":{\"272\":1}}],[\"方法由\",{\"1\":{\"806\":1}}],[\"方法不仅会遍历当前的对象所有的可枚举属性\",{\"1\":{\"881\":1}}],[\"方法不支持遍历普通对象\",{\"1\":{\"874\":1}}],[\"方法不会对空数组进行检测\",{\"1\":{\"873\":1,\"875\":1}}],[\"方法不会改变原数组\",{\"1\":{\"872\":1}}],[\"方法不同\",{\"1\":{\"806\":1}}],[\"方法不太一样的地方\",{\"1\":{\"323\":1,\"576\":1}}],[\"方法转化null或undefined时\",{\"1\":{\"793\":1}}],[\"方法转化数组或对象时\",{\"1\":{\"792\":1}}],[\"方法转化数字时\",{\"1\":{\"791\":1}}],[\"方法转化字符串时\",{\"1\":{\"790\":1}}],[\"方法拼接到最后要返回的\",{\"1\":{\"735\":1}}],[\"方法以创建可用的结果\",{\"1\":{\"803\":1}}],[\"方法以及展开运算符的方法来将类数组转化为数组\",{\"1\":{\"732\":1}}],[\"方法以接收两个参数的回调作为最后一个参数\",{\"1\":{\"560\":1}}],[\"方法实现了参数转化的真数组\",{\"1\":{\"731\":1}}],[\"方法满足了我们想要实现添加元素的诉求\",{\"1\":{\"731\":1}}],[\"方法并不会修改数组\",{\"1\":{\"702\":1}}],[\"方法时会得到一个逗号分隔的数组值的字符串\",{\"1\":{\"689\":1}}],[\"方法相同的结果\",{\"1\":{\"689\":1}}],[\"方法会为数组中的每一个元素依次执行回调函数\",{\"1\":{\"877\":1}}],[\"方法会对数组中的每一项进行遍历\",{\"1\":{\"876\":2}}],[\"方法会将\",{\"1\":{\"786\":1}}],[\"方法会将对象转化为\",{\"1\":{\"785\":1}}],[\"方法会将数组元素通过逗号连接起来\",{\"1\":{\"784\":1}}],[\"方法会将布尔值转化为对应的字符串形式\",{\"1\":{\"783\":1}}],[\"方法会返回指定\",{\"1\":{\"782\":1}}],[\"方法会返回一个新的数组\",{\"1\":{\"875\":1}}],[\"方法会返回一个新数组\",{\"1\":{\"713\":1,\"873\":1}}],[\"方法会返回一个全新的字符串\",{\"1\":{\"326\":1}}],[\"方法会返回布尔值\",{\"1\":{\"708\":1}}],[\"方法会从数组结尾元素开始向前搜索\",{\"1\":{\"708\":1}}],[\"方法会在每一个元素上调用\",{\"1\":{\"698\":1}}],[\"方法会按照升序重新排列数组元素\",{\"1\":{\"698\":1}}],[\"方法会按照指定范围来浅复制数组中的部分内容\",{\"1\":{\"685\":1}}],[\"方法会删除数组的第一项\",{\"1\":{\"695\":1}}],[\"方法对参数进行累加操作\",{\"1\":{\"732\":1}}],[\"方法对入参的输出\",{\"1\":{\"597\":1}}],[\"方法对数组中的每个元素执行一个\",{\"1\":{\"284\":1,\"705\":1}}],[\"方法内部的\",{\"1\":{\"597\":1}}],[\"方法内执行的是与\",{\"1\":{\"300\":1}}],[\"方法生产出来的函数\",{\"1\":{\"590\":1}}],[\"方法传入的\",{\"1\":{\"569\":1}}],[\"方法传递一个参数\",{\"1\":{\"568\":1}}],[\"方法和的\",{\"1\":{\"877\":1}}],[\"方法和\",{\"1\":{\"568\":1}}],[\"方法和变量就是导入使用\",{\"1\":{\"445\":1}}],[\"方法就是注册回调函数的函数\",{\"1\":{\"557\":1}}],[\"方法可从已有的数组中返回选定的元素\",{\"1\":{\"702\":1}}],[\"方法可向数组的开头添加一个或更多元素\",{\"1\":{\"696\":1}}],[\"方法可能是数组中的最强大的方法之一了\",{\"1\":{\"703\":1}}],[\"方法可能是一个回调函数\",{\"1\":{\"557\":1}}],[\"方法可能会返回和\",{\"1\":{\"689\":1}}],[\"方法可解析一个字符串\",{\"1\":{\"551\":1}}],[\"方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象\",{\"1\":{\"762\":1}}],[\"方法可以把键值对列表转换为一个对象\",{\"1\":{\"313\":1}}],[\"方法可以在删除元素的同事在指定位置插入新的元素\",{\"1\":{\"703\":1}}],[\"方法可以接收任意数量的参数\",{\"1\":{\"692\":1}}],[\"方法可以进行访问\",{\"1\":{\"653\":1}}],[\"方法可以用来匹配或者替换字符\",{\"1\":{\"534\":1}}],[\"方法可以用于字符串的大小写转换\",{\"1\":{\"531\":1}}],[\"方法可以返回指定位置的字符\",{\"1\":{\"517\":1}}],[\"方法可以向一个已有数组中插入全部或部分相同的值\",{\"1\":{\"287\":1,\"684\":1}}],[\"方法都用于将字符串转为数字\",{\"1\":{\"549\":1}}],[\"方法都会返回字符串本身的值\",{\"1\":{\"542\":1}}],[\"方法都可以用来截取字符串\",{\"1\":{\"527\":1}}],[\"方法都可以通过索引来获取指定位置的值\",{\"1\":{\"516\":1}}],[\"方法将在虚拟\",{\"1\":{\"1511\":1}}],[\"方法将其转换为原始类型\",{\"1\":{\"804\":1}}],[\"方法将不进行任何操作\",{\"1\":{\"695\":1}}],[\"方法将替换所有匹配的子串\",{\"1\":{\"535\":1}}],[\"方法将将其转化为一个\",{\"1\":{\"388\":1}}],[\"方法是正序遍历的\",{\"1\":{\"877\":1}}],[\"方法是正序执行的\",{\"1\":{\"706\":1}}],[\"方法是\",{\"1\":{\"758\":1}}],[\"方法是我们常用给的数组排序方法\",{\"1\":{\"698\":1}}],[\"方法是专门用来拼接字符串的\",{\"1\":{\"525\":1}}],[\"方法是作为对象的属性调用的\",{\"1\":{\"354\":1}}],[\"方法获取的是指定为值得字符的\",{\"1\":{\"516\":1}}],[\"方法获取到的是指定位置的字符\",{\"1\":{\"516\":1}}],[\"方法调用\",{\"1\":{\"488\":1}}],[\"方法把虚拟dom渲染到页面\",{\"1\":{\"1526\":1}}],[\"方法把字符串重新转换为数组\",{\"1\":{\"738\":1}}],[\"方法把数组中仍然是组数的项过滤出来\",{\"1\":{\"737\":1}}],[\"方法把上传的文件转为base64格式的data\",{\"1\":{\"414\":1}}],[\"方法把\",{\"1\":{\"414\":1}}],[\"方法把键值对列表转换为一个对象\",{\"1\":{\"313\":1}}],[\"方法从内存中清除它来释放内存\",{\"1\":{\"413\":1}}],[\"方法创建真实\",{\"1\":{\"1528\":1}}],[\"方法创建一个data\",{\"1\":{\"413\":1}}],[\"方法创建将给出的对象的\",{\"1\":{\"413\":1}}],[\"方法改为\",{\"1\":{\"395\":1}}],[\"方法读取\",{\"1\":{\"395\":1}}],[\"方法语法如下\",{\"1\":{\"363\":1}}],[\"方法修改的\",{\"1\":{\"362\":1}}],[\"方法构造的函数\",{\"1\":{\"360\":1}}],[\"方法执行时\",{\"1\":{\"354\":1}}],[\"方法访问值进行依赖收集\",{\"1\":{\"1571\":1}}],[\"方法访问\",{\"1\":{\"345\":1}}],[\"方法进行实例挂载\",{\"1\":{\"1526\":1}}],[\"方法进行索引\",{\"1\":{\"332\":1}}],[\"方法进行了扩展\",{\"1\":{\"317\":1}}],[\"方法提供的业务场景的代码进行改造\",{\"1\":{\"323\":1,\"576\":1}}],[\"方法的类型\",{\"1\":{\"1431\":1}}],[\"方法的请求报文中包含\",{\"1\":{\"817\":1}}],[\"方法的语法\",{\"1\":{\"739\":1}}],[\"方法的\",{\"1\":{\"731\":1}}],[\"方法的参数是动态的\",{\"1\":{\"849\":1}}],[\"方法的参数设置为\",{\"1\":{\"739\":1}}],[\"方法的参数\",{\"1\":{\"698\":1}}],[\"方法的参数如果是对象\",{\"1\":{\"662\":1}}],[\"方法的区别是\",{\"1\":{\"689\":1}}],[\"方法的基模式\",{\"1\":{\"662\":1}}],[\"方法的第一个参数是一个函数\",{\"1\":{\"557\":1}}],[\"方法的返回值\",{\"1\":{\"478\":1}}],[\"方法的对象\",{\"1\":{\"354\":1}}],[\"方法的逆过程\",{\"1\":{\"313\":1}}],[\"方法的的行为与trim\",{\"1\":{\"540\":1,\"541\":1}}],[\"方法的的行为与\",{\"1\":{\"308\":1,\"309\":1}}],[\"方法使用映射函数映射每个元素\",{\"1\":{\"312\":1}}],[\"方法被称为异步迭代器\",{\"1\":{\"299\":1}}],[\"方法返回对象自身的\",{\"1\":{\"884\":1}}],[\"方法返回传入一个测试函数符合条件的数组第一个元素位置\",{\"1\":{\"878\":1}}],[\"方法返回通过函数内判断的数组的第一个元素的值\",{\"1\":{\"878\":1}}],[\"方法返回索引值对的迭代器\",{\"1\":{\"710\":1}}],[\"方法返回数组元素的迭代器\",{\"1\":{\"710\":1}}],[\"方法返回数组索引的迭代器\",{\"1\":{\"710\":1}}],[\"方法返回的是数组本身\",{\"1\":{\"688\":1}}],[\"方法返回的是由数组中每个值的等效字符串拼接而成的一个逗号分隔的字符串\",{\"1\":{\"687\":1}}],[\"方法返回的数组中的值都是字符串\",{\"1\":{\"295\":1,\"882\":1}}],[\"方法返回一个新的\",{\"1\":{\"581\":1}}],[\"方法返回一个新字符串\",{\"1\":{\"282\":1,\"545\":1}}],[\"方法返回一个\",{\"1\":{\"577\":1}}],[\"方法返回一个给定对象自身可枚举属性的键值对数组\",{\"1\":{\"313\":1}}],[\"方法用来更新\",{\"1\":{\"1561\":1}}],[\"方法用来将\",{\"1\":{\"389\":1}}],[\"方法用来判断一个数组是否包含一个指定的值\",{\"1\":{\"289\":1}}],[\"方法用于\",{\"1\":{\"806\":1}}],[\"方法用于合并两个或多个数组\",{\"1\":{\"759\":1}}],[\"方法用于调用数组的每个元素\",{\"1\":{\"712\":1,\"872\":1}}],[\"方法用于连接两个或多个数组\",{\"1\":{\"701\":1}}],[\"方法用于连接两个或多个字符串\",{\"1\":{\"525\":1}}],[\"方法用于颠倒数组中元素的顺序\",{\"1\":{\"699\":1}}],[\"方法用于删除并返回数组的最后一个元素\",{\"1\":{\"693\":1}}],[\"方法用于把数组中的所有元素放入一个字符串\",{\"1\":{\"690\":1}}],[\"方法用于把一个字符串分割成字符串数组\",{\"1\":{\"526\":1}}],[\"方法用于可解析一个字符串\",{\"1\":{\"550\":1}}],[\"方法用于移除字符串首尾空白符\",{\"1\":{\"539\":1}}],[\"方法用于移除字符串首尾的头尾空白符\",{\"1\":{\"307\":1}}],[\"方法用于检索字符串中指定的子字符串\",{\"1\":{\"537\":1}}],[\"方法用于提取字符串中介于两个指定下标之间的字符\",{\"1\":{\"530\":1}}],[\"方法用于提取字符串的某个部分\",{\"1\":{\"528\":1}}],[\"方法用于在字符串中抽取从开始下标开始的指定数目的字符\",{\"1\":{\"529\":1}}],[\"方法用于创建并返回一个新数组\",{\"1\":{\"311\":1,\"720\":1}}],[\"方法用于补齐字符串的长度\",{\"1\":{\"292\":1,\"546\":1}}],[\"方法用于过滤数组\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"方法\",{\"0\":{\"732\":1,\"740\":1,\"764\":1,\"1485\":1,\"1506\":1,\"2295\":1,\"2332\":1,\"2421\":1,\"2457\":1,\"2472\":1,\"2517\":1,\"2541\":1,\"2557\":1,\"2580\":1,\"2609\":1,\"2621\":1,\"2684\":1,\"2713\":1,\"2766\":1,\"2782\":1,\"2811\":1},\"1\":{\"272\":1,\"284\":1,\"295\":1,\"300\":1,\"307\":1,\"316\":2,\"339\":1,\"355\":1,\"363\":1,\"400\":1,\"401\":1,\"478\":2,\"492\":1,\"494\":1,\"568\":3,\"580\":2,\"582\":2,\"583\":1,\"587\":2,\"588\":1,\"589\":1,\"592\":1,\"597\":1,\"623\":1,\"628\":1,\"659\":1,\"662\":3,\"681\":1,\"687\":1,\"689\":2,\"700\":1,\"705\":1,\"709\":1,\"713\":2,\"729\":1,\"731\":3,\"740\":1,\"742\":1,\"743\":1,\"806\":3,\"817\":4,\"874\":1,\"877\":1,\"879\":1,\"1507\":1,\"1511\":1,\"1517\":1,\"1519\":1,\"1520\":2,\"1525\":1,\"1526\":1,\"1527\":1,\"1534\":1,\"1557\":1,\"1571\":1,\"1689\":2}}],[\"方法来实现数组扁平化\",{\"1\":{\"739\":1}}],[\"方法来实现继承\",{\"1\":{\"490\":1}}],[\"方法来按照进度一步步执行\",{\"1\":{\"588\":1}}],[\"方法来绑定\",{\"1\":{\"355\":1}}],[\"方法来判断变量是否为\",{\"1\":{\"320\":1}}],[\"方法来移除数组中的\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"方法来将数组集合转化为数组\",{\"1\":{\"271\":1}}],[\"方法来阻止\",{\"1\":{\"239\":1}}],[\"方法阻止事件冒泡到父元素\",{\"1\":{\"240\":1}}],[\"方法三\",{\"1\":{\"239\":1}}],[\"方法二\",{\"1\":{\"239\":1}}],[\"方法一样\",{\"1\":{\"280\":1,\"523\":1,\"605\":1,\"685\":1}}],[\"方法一\",{\"1\":{\"239\":1}}],[\"方法简单\",{\"1\":{\"204\":1}}],[\"方法里可以传入一个对象\",{\"1\":{\"118\":1}}],[\"无损联接分解\",{\"1\":{\"2256\":1}}],[\"无损\",{\"1\":{\"2256\":1}}],[\"无损分解\",{\"0\":{\"2256\":1}}],[\"无状态自动配置\",{\"1\":{\"2214\":1}}],[\"无状态服务对单次请求的处理\",{\"1\":{\"2078\":1}}],[\"无固定的校验盘\",{\"1\":{\"2213\":3}}],[\"无冗余\",{\"1\":{\"2213\":1}}],[\"无限长的ip地址\",{\"1\":{\"2210\":1}}],[\"无架构阶段\",{\"1\":{\"1969\":1}}],[\"无超时\",{\"1\":{\"1716\":1}}],[\"无引用到\",{\"1\":{\"1650\":1}}],[\"无须我们再写明类型注解\",{\"1\":{\"1442\":1}}],[\"无须繁琐地一次次下载\",{\"1\":{\"1071\":1}}],[\"无\",{\"1\":{\"1040\":1}}],[\"无需用户交互\",{\"1\":{\"1977\":1}}],[\"无需了解链中其他处理者的细节\",{\"1\":{\"1837\":1}}],[\"无需了解具体的创建细节\",{\"1\":{\"1750\":1}}],[\"无需知道对象创建的具体细节\",{\"1\":{\"1753\":1}}],[\"无需逐一确认\",{\"1\":{\"995\":1}}],[\"无需额外工具即可在浏览器中工作\",{\"1\":{\"460\":1}}],[\"无效地址\",{\"1\":{\"2210\":1}}],[\"无效等价类\",{\"1\":{\"1939\":1}}],[\"无效\",{\"1\":{\"656\":4}}],[\"无符号右移赋值操作符\",{\"1\":{\"638\":1}}],[\"无符号右移操作符将负数的二进制表示当成正数的二进制表示来处理\",{\"1\":{\"614\":1}}],[\"无符号右移操作符\",{\"0\":{\"614\":1},\"1\":{\"614\":1}}],[\"无法达到的语句\",{\"1\":{\"1938\":1}}],[\"无法胜任的\",{\"1\":{\"1665\":1}}],[\"无法创建抽象类的实例\",{\"1\":{\"1392\":1}}],[\"无法被实例化\",{\"1\":{\"1392\":1}}],[\"无法处理\",{\"1\":{\"1334\":1}}],[\"无法还原\",{\"1\":{\"1332\":1}}],[\"无法开启usetransition\",{\"1\":{\"1236\":1}}],[\"无法拷贝对象的循环应用\",{\"1\":{\"763\":1}}],[\"无法拷贝对象的原型链\",{\"1\":{\"763\":1}}],[\"无法拷贝不可枚举的属性\",{\"1\":{\"763\":1}}],[\"无法在该模块之被外访问\",{\"1\":{\"469\":1}}],[\"无法删除它\",{\"1\":{\"432\":1}}],[\"无法使用父类原型链上的方法\",{\"1\":{\"487\":1}}],[\"无法使用\",{\"1\":{\"275\":1,\"872\":1}}],[\"无论如何设置该值\",{\"1\":{\"2758\":1,\"2765\":1}}],[\"无论发送何种谷中\",{\"1\":{\"2258\":1}}],[\"无论点到哪一个\",{\"1\":{\"1311\":1}}],[\"无论在何处都可以使用它\",{\"1\":{\"896\":2}}],[\"无论数组和对象是否有内容\",{\"1\":{\"792\":1}}],[\"无论对象是否为空对象\",{\"1\":{\"785\":1}}],[\"无论嵌套多少层\",{\"1\":{\"784\":1}}],[\"无论导出的名称是什么\",{\"1\":{\"470\":1}}],[\"无论什么情况下\",{\"1\":{\"376\":1}}],[\"无论是在慢开始阶段还是在拥塞避免阶段\",{\"1\":{\"1720\":1}}],[\"无论是原始类型还是对象\",{\"1\":{\"772\":1}}],[\"无论是\",{\"1\":{\"365\":1}}],[\"无输出\",{\"1\":{\"275\":1}}],[\"无关\",{\"1\":{\"205\":1,\"1258\":1}}],[\"无历史连接数据\",{\"1\":{\"128\":1}}],[\"调度给不同的节点\",{\"1\":{\"2077\":1}}],[\"调度函数\",{\"1\":{\"1273\":1}}],[\"调研\",{\"1\":{\"1847\":1}}],[\"调整可执行的自动解压缩文件\",{\"1\":{\"1018\":1}}],[\"调整完之后的代码如下\",{\"1\":{\"903\":1}}],[\"调整屏幕宽度时不用刷新页面就可以响应页面布局\",{\"1\":{\"204\":1}}],[\"调试困难\",{\"1\":{\"1813\":1}}],[\"调试器并不会进⼊后续的\",{\"1\":{\"596\":1}}],[\"调试友好\",{\"1\":{\"596\":1}}],[\"调试内存问题是一项复杂的工作\",{\"1\":{\"435\":1}}],[\"调用该函数的结果将复制给该vector3对象\",{\"1\":{\"2520\":1}}],[\"调用属性规则\",{\"1\":{\"2118\":1}}],[\"调用适当的视图为用户提供反馈\",{\"1\":{\"2031\":1}}],[\"调用并不存在的子程序\",{\"1\":{\"1938\":1}}],[\"调用接收者对应接口处理发布者的请求\",{\"1\":{\"1826\":1}}],[\"调用命令对象\",{\"1\":{\"1826\":1}}],[\"调用自己\",{\"1\":{\"1653\":1}}],[\"调用gen函数进行递归创建\",{\"1\":{\"1551\":1}}],[\"调用watcher的run方法\",{\"1\":{\"1541\":1}}],[\"调用observer实例的observearray对数组每一项进行观测\",{\"1\":{\"1535\":1}}],[\"调用原生\",{\"1\":{\"1528\":1}}],[\"调用生成的render函数\",{\"1\":{\"1526\":1}}],[\"调用对应的组件生命周期钩子\",{\"1\":{\"1521\":1}}],[\"调用expororfn\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"调用vm\",{\"1\":{\"1491\":1}}],[\"调用后\",{\"1\":{\"1273\":1}}],[\"调用可能会立即更新组件\",{\"1\":{\"1201\":1}}],[\"调用可能在同一批次中被合并执行\",{\"1\":{\"1197\":1}}],[\"调用展示了一个常见的陷阱\",{\"1\":{\"1197\":1}}],[\"调用～\",{\"1\":{\"1119\":1}}],[\"调用被转换数据类型的\",{\"1\":{\"662\":1}}],[\"调用其\",{\"1\":{\"581\":1}}],[\"调用all方法时的结果成功的时候是回调函数的参数也是一个数组\",{\"1\":{\"573\":1}}],[\"调用resolve函数\",{\"1\":{\"571\":1}}],[\"调用链被中断了\",{\"1\":{\"578\":1}}],[\"调用链\",{\"1\":{\"565\":1}}],[\"调用回调函数\",{\"1\":{\"560\":1}}],[\"调用之前调用了\",{\"1\":{\"452\":1}}],[\"调用之后使用\",{\"1\":{\"117\":1}}],[\"调用node\",{\"1\":{\"378\":1}}],[\"调用者还不能够得到预期结果\",{\"1\":{\"370\":1}}],[\"调用者就能够得到预期结果\",{\"1\":{\"370\":1}}],[\"调用构造函数时\",{\"1\":{\"359\":1}}],[\"调用时\",{\"1\":{\"359\":1,\"360\":1}}],[\"调用栈\",{\"1\":{\"352\":1}}],[\"调用它将使浏览器提示用户使用设备选择器\",{\"1\":{\"341\":1}}],[\"调用\",{\"0\":{\"1084\":1,\"1512\":1,\"1516\":1,\"1981\":1},\"1\":{\"284\":2,\"362\":1,\"445\":1,\"555\":1,\"567\":1,\"578\":1,\"587\":2,\"705\":2,\"986\":1,\"1120\":1,\"1121\":1,\"1199\":1,\"1201\":1}}],[\"样式处理\",{\"1\":{\"1477\":1}}],[\"样式代码之前\",{\"1\":{\"207\":1}}],[\"样式\",{\"1\":{\"204\":2,\"1707\":1}}],[\"属组的那个权限位数字的相加的总和\",{\"1\":{\"1040\":1}}],[\"属组名\",{\"1\":{\"1035\":1}}],[\"属主的那三个权限位的数字加起来的总和\",{\"1\":{\"1040\":1}}],[\"属于一个完全不同的利益冲突组的可以访问\",{\"1\":{\"2119\":1}}],[\"属于应用层协议\",{\"1\":{\"1735\":1}}],[\"属于跨域通信\",{\"1\":{\"867\":1}}],[\"属于两个不同的内存地址\",{\"1\":{\"761\":1}}],[\"属于被频繁使用数据\",{\"1\":{\"651\":1}}],[\"属于同一个bfc的两个相邻box的margin会发生重叠\",{\"1\":{\"149\":1}}],[\"属性缓冲区\",{\"1\":{\"2744\":1}}],[\"属性可以让一些很薄的透明表面\",{\"1\":{\"2737\":1}}],[\"属性有一些限制\",{\"1\":{\"2737\":1}}],[\"属性color例外\",{\"1\":{\"2697\":1}}],[\"属性要true才能使用\",{\"1\":{\"2638\":1}}],[\"属性名和属性值\",{\"1\":{\"1704\":1}}],[\"属性a对应的值是一个数组\",{\"1\":{\"1563\":1}}],[\"属性描述符\",{\"1\":{\"1468\":1}}],[\"属性装饰器顾名思义\",{\"1\":{\"1467\":1}}],[\"属性装饰器声明\",{\"1\":{\"1467\":1}}],[\"属性装饰器\",{\"0\":{\"1467\":1},\"1\":{\"1465\":1}}],[\"属性为数字字面量类型\",{\"1\":{\"1429\":1}}],[\"属性为布尔字面量类型\",{\"1\":{\"1429\":1}}],[\"属性为字符串字面量类型\",{\"1\":{\"1429\":1}}],[\"属性改变时\",{\"1\":{\"1279\":1}}],[\"属性组成的数组\",{\"1\":{\"884\":1}}],[\"属性时\",{\"1\":{\"838\":1}}],[\"属性就是函数参数的长度\",{\"1\":{\"723\":1}}],[\"属性就会被自动创建并保存这个值\",{\"1\":{\"677\":1}}],[\"属性就会从\",{\"1\":{\"482\":1}}],[\"属性是否出现在对象的原型链中的任何位置\",{\"1\":{\"657\":1}}],[\"属性代表返回值以及是否完成\",{\"1\":{\"588\":1}}],[\"属性被多个对象共享\",{\"1\":{\"484\":1}}],[\"属性都支持使用base64\",{\"1\":{\"414\":1}}],[\"属性会返回内存中对应的\",{\"1\":{\"405\":1}}],[\"属性也可以在类型化数组的实例上获取\",{\"1\":{\"404\":1}}],[\"属性中指定的配置文件\",{\"1\":{\"462\":1}}],[\"属性中使用这个\",{\"1\":{\"413\":1}}],[\"属性中\",{\"1\":{\"394\":1,\"2741\":1}}],[\"属性中将包含一个字符串以表示所读取的文件内容\",{\"1\":{\"394\":1}}],[\"属性中将包含一个\",{\"1\":{\"394\":1}}],[\"属性中将包含所读取文件的原始二进制数据\",{\"1\":{\"394\":1}}],[\"属性中保存的将是被读取文件的\",{\"1\":{\"394\":1}}],[\"属性的改变\",{\"1\":{\"484\":1}}],[\"属性的脚本\",{\"1\":{\"473\":1}}],[\"属性的\",{\"1\":{\"392\":1}}],[\"属性的值依然是一个对象\",{\"1\":{\"1563\":1}}],[\"属性的值\",{\"1\":{\"224\":1}}],[\"属性来指定某脚本为\",{\"1\":{\"473\":1}}],[\"属性来限制文件大小\",{\"1\":{\"391\":1}}],[\"属性来确定\",{\"1\":{\"339\":1}}],[\"属性和函数可用于执行小到访问\",{\"1\":{\"337\":1}}],[\"属性和方法\",{\"1\":{\"271\":1,\"272\":1}}],[\"属性类型比较适合用于两类场景中\",{\"1\":{\"268\":1}}],[\"属性通常用来表示函数参数的个数\",{\"1\":{\"257\":1}}],[\"属性值发生变化时\",{\"1\":{\"1225\":1}}],[\"属性值是当前实例所属类的原型\",{\"1\":{\"481\":1}}],[\"属性值\",{\"0\":{\"257\":1}}],[\"属性\",{\"0\":{\"2281\":1,\"2330\":1,\"2418\":1,\"2456\":1,\"2467\":1,\"2511\":1,\"2531\":1,\"2552\":1,\"2569\":1,\"2600\":1,\"2620\":1,\"2636\":1,\"2698\":1,\"2747\":1,\"2778\":1,\"2789\":1,\"2854\":1},\"1\":{\"202\":1,\"224\":1,\"254\":1,\"262\":1,\"295\":1,\"395\":1,\"399\":1,\"402\":1,\"404\":1,\"449\":1,\"473\":1,\"479\":1,\"484\":1,\"515\":1,\"641\":1,\"657\":1,\"674\":1,\"680\":1,\"723\":1,\"882\":1,\"884\":2,\"1369\":1,\"1454\":1,\"2296\":1,\"2297\":1,\"2741\":1,\"2744\":2}}],[\"除redis系统自带的缓存失效策略\",{\"1\":{\"2074\":1}}],[\"除数为零\",{\"1\":{\"1938\":1}}],[\"除外\",{\"1\":{\"1431\":1}}],[\"除赋值操作符\",{\"1\":{\"638\":1}}],[\"除法操作符用于计算一个操作数除以第二个操作数的商\",{\"1\":{\"619\":1}}],[\"除法操作符\",{\"0\":{\"619\":1}}],[\"除非使用了stereocamera\",{\"1\":{\"2574\":1}}],[\"除非在构造函数中传入\",{\"1\":{\"2469\":1,\"2470\":1,\"2471\":1}}],[\"除非篡改51\",{\"1\":{\"2133\":1}}],[\"除非有迫不得已的理由不要改变它\",{\"1\":{\"1928\":1}}],[\"除非用https\",{\"1\":{\"1660\":1}}],[\"除非你把它导出\",{\"1\":{\"1354\":1}}],[\"除非\",{\"1\":{\"1211\":1,\"2572\":1}}],[\"除非依赖项发生变化\",{\"1\":{\"1209\":1}}],[\"除非通过\",{\"1\":{\"452\":1}}],[\"除非达到了系统限制\",{\"1\":{\"383\":1}}],[\"除非是手动进行了缩放\",{\"1\":{\"200\":1}}],[\"除箭头函数外\",{\"1\":{\"352\":1}}],[\"除此之外\",{\"1\":{\"253\":1,\"254\":1,\"371\":1,\"378\":1,\"395\":1,\"414\":1,\"436\":1,\"442\":1,\"444\":1,\"445\":1,\"458\":1,\"464\":1,\"500\":1,\"517\":1,\"566\":1,\"616\":2,\"674\":2,\"718\":1,\"817\":1,\"836\":1,\"1212\":1,\"1579\":1,\"1603\":1,\"1604\":1,\"1614\":1,\"1618\":1}}],[\"除了观察进度流程之外\",{\"1\":{\"2462\":1}}],[\"除了数据的逻辑独立性与物理独立性外\",{\"1\":{\"2229\":1}}],[\"除了数组\",{\"1\":{\"332\":1}}],[\"除了result\",{\"1\":{\"1671\":1}}],[\"除了保存期限的长短不同\",{\"1\":{\"1666\":1}}],[\"除了渲染watcher\",{\"1\":{\"1542\":1}}],[\"除了可以按照作者来查看日志之外\",{\"1\":{\"1626\":1}}],[\"除了可以应用于\",{\"1\":{\"1373\":1}}],[\"除了可以继承\",{\"1\":{\"490\":1}}],[\"除了可用于\",{\"1\":{\"1338\":1}}],[\"除了缓存数据和组件\",{\"1\":{\"1268\":1}}],[\"除了这个函数内部\",{\"1\":{\"897\":1}}],[\"除了加法运算符\",{\"1\":{\"669\":1}}],[\"除了字符串的加法运算\",{\"1\":{\"667\":1}}],[\"除了支持\",{\"1\":{\"578\":1}}],[\"除了变量提升\",{\"1\":{\"500\":1}}],[\"除了手动赋值的元素\",{\"1\":{\"403\":1}}],[\"除了使用\",{\"1\":{\"389\":1}}],[\"除了已经指定的属性之外\",{\"1\":{\"305\":1}}],[\"除了上面几种\",{\"1\":{\"361\":1}}],[\"除了上面代码中的应用\",{\"1\":{\"255\":1}}],[\"除了上述两个基本的设置之外\",{\"1\":{\"1589\":1}}],[\"除了上述方法\",{\"1\":{\"717\":1}}],[\"除了上述\",{\"1\":{\"286\":1,\"678\":1}}],[\"除了\",{\"1\":{\"202\":1,\"363\":1,\"1267\":1,\"1416\":1}}],[\"分割后的每个部分都是一个如下的表单\",{\"1\":{\"2286\":1}}],[\"分布透明性\",{\"0\":{\"2232\":1},\"1\":{\"2229\":1}}],[\"分布式数据库\",{\"0\":{\"2229\":1}}],[\"分布式奇偶校验的独立磁盘\",{\"1\":{\"2213\":1}}],[\"分布式服务\",{\"0\":{\"2085\":1}}],[\"分布式事务模式\",{\"1\":{\"2054\":1}}],[\"分布式版本控制系统的安全性要高很多\",{\"1\":{\"1580\":1}}],[\"分布式版本控制系统\",{\"0\":{\"1580\":1},\"1\":{\"1580\":1}}],[\"分层设计\",{\"0\":{\"2220\":1}}],[\"分组甚至比特\",{\"1\":{\"2201\":1}}],[\"分段转换策略\",{\"1\":{\"1945\":1}}],[\"分类分析法的逆过程\",{\"1\":{\"1882\":1}}],[\"分类分析\",{\"1\":{\"1882\":1}}],[\"分类\",{\"0\":{\"2048\":1,\"2194\":1,\"2202\":1},\"1\":{\"1882\":1}}],[\"分多个刻面\",{\"1\":{\"2028\":1}}],[\"分多个层级\",{\"1\":{\"1864\":1}}],[\"分多个步骤完成\",{\"1\":{\"596\":1}}],[\"分散请求的处理\",{\"1\":{\"1837\":1}}],[\"分为四层\",{\"1\":{\"1688\":1}}],[\"分为内核版本和发型版本\",{\"1\":{\"908\":1}}],[\"分成了很多小步\",{\"1\":{\"1650\":1}}],[\"分代式机制把一些新\",{\"1\":{\"1648\":1}}],[\"分代式垃圾回收\",{\"0\":{\"1648\":1}}],[\"分代收集\",{\"1\":{\"1641\":1}}],[\"分隔每个类型\",{\"1\":{\"1458\":1}}],[\"分支关联起来\",{\"1\":{\"1610\":1}}],[\"分支和远程的\",{\"1\":{\"1610\":1}}],[\"分支内容推送的远程新的\",{\"1\":{\"1610\":1}}],[\"分支时\",{\"1\":{\"1610\":1}}],[\"分支去修复\",{\"1\":{\"1601\":1}}],[\"分支\",{\"1\":{\"1596\":2,\"1610\":1}}],[\"分支合并到\",{\"1\":{\"1596\":1}}],[\"分支是源代码控制的核心概念\",{\"1\":{\"1592\":1}}],[\"分支操作\",{\"0\":{\"1592\":1}}],[\"分支的\",{\"1\":{\"1416\":1}}],[\"分支里面\",{\"1\":{\"1416\":1}}],[\"分钟后关机\",{\"1\":{\"920\":1}}],[\"分配方式\",{\"1\":{\"2210\":1}}],[\"分配最高的优先级\",{\"1\":{\"2190\":2}}],[\"分配及管理简单\",{\"1\":{\"2160\":1}}],[\"分配资源的原则\",{\"0\":{\"2158\":1}}],[\"分配速度慢\",{\"1\":{\"1646\":1}}],[\"分配给类型\",{\"1\":{\"1443\":1}}],[\"分配了一个默认值\",{\"1\":{\"838\":1}}],[\"分配内存是自动完成的\",{\"1\":{\"425\":1}}],[\"分配内存\",{\"1\":{\"425\":1,\"895\":1}}],[\"分离的\",{\"0\":{\"434\":1}}],[\"分片透明\",{\"1\":{\"2232\":1}}],[\"分片透明性\",{\"1\":{\"2232\":1}}],[\"分片\",{\"0\":{\"389\":1}}],[\"分别要执行哪些不同的动作\",{\"1\":{\"1939\":1}}],[\"分别发送两段数据\",{\"1\":{\"1730\":1}}],[\"分别为源端口\",{\"1\":{\"1712\":1}}],[\"分别为\",{\"1\":{\"817\":1,\"1366\":1}}],[\"分别是链路本地地址\",{\"1\":{\"2214\":1}}],[\"分别是声明循环变量\",{\"1\":{\"888\":1}}],[\"分别是当前元素\",{\"1\":{\"711\":1}}],[\"分别是\",{\"1\":{\"650\":1,\"709\":1,\"711\":1}}],[\"分别用来添加购物车和计算总价\",{\"1\":{\"455\":1}}],[\"分别将\",{\"1\":{\"382\":1}}],[\"分别创建一个用于回调的宏任务和微任务\",{\"1\":{\"376\":1}}],[\"分别包括和不包括\",{\"1\":{\"20\":1,\"63\":1}}],[\"分享失败\",{\"1\":{\"345\":1}}],[\"分享成功\",{\"1\":{\"345\":1}}],[\"分析与设计\",{\"1\":{\"1902\":1}}],[\"分析及传输\",{\"1\":{\"1883\":1}}],[\"分析历史数据预判未来\",{\"1\":{\"1880\":1}}],[\"分析其中的其他url\",{\"1\":{\"217\":1}}],[\"分析已抓取url队列中的url\",{\"1\":{\"217\":1}}],[\"分辨率\",{\"1\":{\"202\":1}}],[\"与每个顶点关联的变量\",{\"1\":{\"2742\":1}}],[\"与代码一起传递到\",{\"1\":{\"2741\":1}}],[\"与代码形成强耦合的某一个具体的字符串或者数值\",{\"1\":{\"269\":1}}],[\"与模板缓冲进行比较时所使用的位元遮罩\",{\"1\":{\"2660\":1}}],[\"与meshlambertmaterial中使用的lambertian模型不同\",{\"1\":{\"2613\":1}}],[\"与mpu相比mcu的最大优点在于单片化\",{\"1\":{\"2179\":1}}],[\"与仅影响材质的光照和阴影的其他贴图不同\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"与f是等价的\",{\"1\":{\"2255\":1}}],[\"与传统数据库相比\",{\"1\":{\"2193\":1}}],[\"与传统的http协议不同\",{\"1\":{\"1737\":1}}],[\"与主体曾经访问过的信息属于同一公司数据集合的信息\",{\"1\":{\"2119\":1}}],[\"与环境的隔离等机制\",{\"1\":{\"2025\":1}}],[\"与中间件的意图也是一致的\",{\"1\":{\"2025\":1}}],[\"与逆向工程相关的概念有重构\",{\"1\":{\"1905\":1}}],[\"与一般访问流程相比\",{\"1\":{\"1794\":1}}],[\"与一个空白的文件比较\",{\"1\":{\"1009\":1}}],[\"与单一职责原则冲突\",{\"1\":{\"1770\":1}}],[\"与http协议有着良好的兼容性\",{\"1\":{\"1736\":1}}],[\"与最后一次commit之间的的所有不相同文件的差异对比\",{\"1\":{\"1635\":1}}],[\"与类型别名不同\",{\"1\":{\"1344\":1}}],[\"与接口不同\",{\"1\":{\"1343\":1}}],[\"与第三方库的集成\",{\"1\":{\"1303\":1}}],[\"与第三方库集成\",{\"0\":{\"1288\":1}}],[\"与前者不同的地方在于\",{\"1\":{\"1273\":1}}],[\"与防抖和节流不同\",{\"1\":{\"1237\":1}}],[\"与<suspense>结合使用\",{\"1\":{\"1236\":1}}],[\"与上一次渲染不同的引用\",{\"1\":{\"1236\":1}}],[\"与set\",{\"1\":{\"1068\":1}}],[\"与n刚好相反\",{\"1\":{\"1062\":1}}],[\"与其所属同一个群体者可写入\",{\"1\":{\"1041\":1}}],[\"与执行\",{\"1\":{\"1009\":1}}],[\"与vi相似\",{\"1\":{\"985\":1}}],[\"与对象解构不同的是\",{\"1\":{\"843\":1}}],[\"与对象解构一样\",{\"1\":{\"843\":1}}],[\"与对象到数字的转换不同\",{\"1\":{\"807\":1}}],[\"与请求本地文本不同的是\",{\"1\":{\"822\":1}}],[\"与静态导入不同\",{\"1\":{\"471\":1}}],[\"与浏览器无差\",{\"1\":{\"383\":1}}],[\"与系统剪贴板进行交互\",{\"1\":{\"344\":1}}],[\"与函数调用一起使用时\",{\"1\":{\"322\":1,\"644\":1}}],[\"与\",{\"0\":{\"654\":1,\"819\":1,\"909\":1,\"1275\":1,\"1287\":1},\"1\":{\"232\":1,\"378\":1,\"397\":1,\"606\":1,\"653\":1,\"658\":1,\"729\":1,\"806\":1,\"867\":1,\"981\":2,\"989\":2,\"992\":2,\"1009\":1,\"1018\":1,\"1041\":1,\"1194\":1,\"1273\":1,\"1287\":1,\"1418\":1,\"1454\":1,\"1581\":1,\"1707\":1,\"1850\":1}}],[\"与detachevent\",{\"1\":{\"232\":1}}],[\"与父元素无关\",{\"1\":{\"205\":1}}],[\"与设备无关的逻辑像素\",{\"1\":{\"202\":1}}],[\"与设备\",{\"1\":{\"202\":1}}],[\"与此同时按钮的另一个点击事件也不触发\",{\"1\":{\"240\":1}}],[\"与此同时\",{\"1\":{\"151\":1}}],[\"控制默认的清除alpha值\",{\"1\":{\"2788\":1}}],[\"控制线框宽度\",{\"1\":{\"2758\":1,\"2765\":1}}],[\"控制信息\",{\"1\":{\"2150\":1}}],[\"控制策略\",{\"1\":{\"2106\":1}}],[\"控制器\",{\"0\":{\"2893\":1},\"1\":{\"2031\":2}}],[\"控制流测试\",{\"1\":{\"1939\":1}}],[\"控制流分析\",{\"1\":{\"1938\":1}}],[\"控制类\",{\"1\":{\"1936\":1}}],[\"控制迭代\",{\"1\":{\"1906\":1}}],[\"控制集成\",{\"1\":{\"1886\":1}}],[\"控制机构进行分析研究的科学方法\",{\"1\":{\"1843\":1}}],[\"控制访问\",{\"1\":{\"1796\":1}}],[\"控制用户对文件的权限的命令\",{\"1\":{\"1037\":1}}],[\"控制台得到一个\",{\"1\":{\"1671\":1}}],[\"控制台会显示\",{\"1\":{\"898\":1}}],[\"控制台就会输出一个\",{\"1\":{\"391\":1,\"392\":1}}],[\"控制台打印\",{\"1\":{\"286\":1,\"678\":1}}],[\"控制\",{\"1\":{\"206\":1,\"207\":1,\"1334\":2,\"1864\":1,\"2187\":1}}],[\"控制设备显示的单位\",{\"1\":{\"202\":1}}],[\"控制换行类型\",{\"1\":{\"23\":1,\"66\":1}}],[\"衡量页面上的内容大小\",{\"1\":{\"202\":1}}],[\"端⼝等信息\",{\"1\":{\"1731\":1}}],[\"端不能正常关闭\",{\"1\":{\"1729\":1}}],[\"端口\",{\"1\":{\"1153\":1}}],[\"端口号这三者必须都相同才符合同源策略\",{\"1\":{\"855\":1}}],[\"端浏览器设计的网站\",{\"1\":{\"201\":1}}],[\"端的视口是浏览器窗口区域\",{\"1\":{\"201\":1}}],[\"端的页面放到手机端进行访问\",{\"1\":{\"200\":1}}],[\"端视口是不同的\",{\"1\":{\"201\":1}}],[\"视野角度\",{\"1\":{\"2585\":1}}],[\"视锥体\",{\"1\":{\"2530\":1,\"2542\":1,\"2568\":1}}],[\"视角与视图\",{\"1\":{\"1974\":1}}],[\"视为同步操作\",{\"1\":{\"1201\":1}}],[\"视图可以对机密数据提供安全保护\",{\"1\":{\"2227\":1}}],[\"视图对重构数据库提供了一定程度的逻辑独立性\",{\"1\":{\"2227\":1}}],[\"视图使用户能以多种角度看待同一数据\",{\"1\":{\"2227\":1}}],[\"视图能简化用户操作\",{\"1\":{\"2227\":1}}],[\"视图的优点\",{\"0\":{\"2227\":1}}],[\"视图的区别主要是字节序\",{\"1\":{\"397\":1}}],[\"视图并没有真正存储这些数据\",{\"1\":{\"2226\":1}}],[\"视图包含一系列带有名称的列和行数据\",{\"1\":{\"2226\":1}}],[\"视图表\",{\"1\":{\"2225\":1}}],[\"视图\",{\"1\":{\"2031\":2}}],[\"视图渲染的核心\",{\"1\":{\"1332\":1}}],[\"视图是一个可以从\",{\"1\":{\"408\":1}}],[\"视图会开辟一段新的内存\",{\"1\":{\"403\":1}}],[\"视图和\",{\"1\":{\"397\":1}}],[\"视图就会返回到普通视图\",{\"1\":{\"339\":1}}],[\"视频播放就是这样的例子\",{\"1\":{\"1737\":1}}],[\"视频\",{\"1\":{\"338\":1,\"2061\":1}}],[\"视频这样的复杂任务\",{\"1\":{\"337\":1}}],[\"视频转码失败\",{\"1\":{\"94\":1}}],[\"视频转码成功\",{\"1\":{\"94\":1}}],[\"视频转码\",{\"1\":{\"94\":2}}],[\"视同为\",{\"1\":{\"282\":1}}],[\"视觉视口变小\",{\"1\":{\"201\":1}}],[\"视觉视口变大\",{\"1\":{\"201\":1}}],[\"视觉视口\",{\"1\":{\"201\":2}}],[\"视口高度\",{\"1\":{\"208\":1}}],[\"视口宽度\",{\"1\":{\"208\":1}}],[\"视口宽度为\",{\"1\":{\"208\":1}}],[\"视口宽度是\",{\"1\":{\"208\":2}}],[\"视口宽度都会被等分为\",{\"1\":{\"206\":1}}],[\"视口\",{\"1\":{\"201\":1}}],[\"因特网\",{\"1\":{\"2203\":1}}],[\"因果图\",{\"1\":{\"1939\":1}}],[\"因此我们可以认为太阳的位置是无限远\",{\"1\":{\"2868\":1}}],[\"因此我们期望用户输入的属性是对象上已存在的属性\",{\"1\":{\"1366\":1}}],[\"因此meshmatcapmaterial\",{\"1\":{\"2695\":1}}],[\"因此所存储的是每个三角面片的三个顶点的索引\",{\"1\":{\"2288\":1}}],[\"因此所有策略都需向外暴露\",{\"1\":{\"1788\":1}}],[\"因此交易对手无须通过公开身份的方式让对方自己产生信任\",{\"1\":{\"2132\":1}}],[\"因此一些复杂的算法逻辑无法共享\",{\"1\":{\"1788\":1}}],[\"因此基于场景复杂程度又有多个工厂模式\",{\"1\":{\"1752\":1}}],[\"因此握手时不容易屏蔽\",{\"1\":{\"1736\":1}}],[\"因此不能一起发送\",{\"1\":{\"1729\":1}}],[\"因此不会污染全局空间\",{\"1\":{\"449\":1}}],[\"因此udp的头部开销小\",{\"1\":{\"1712\":1}}],[\"因此中央存储库是否损坏并不重要\",{\"1\":{\"1581\":1}}],[\"因此他决定编写自己的源代码管理系列\",{\"1\":{\"1577\":1}}],[\"因此此时\",{\"1\":{\"1377\":1}}],[\"因此此页面将接收从其他上下文发送的消息\",{\"1\":{\"343\":1}}],[\"因此它不再是适用于任意类型\",{\"1\":{\"1369\":1}}],[\"因此它的每个字符占用\",{\"1\":{\"388\":1}}],[\"因此立刻读取状态可能仍是旧的\",{\"1\":{\"1273\":1}}],[\"因此仍要依靠底线命令行模式输入更多命令\",{\"1\":{\"1056\":1}}],[\"因此仍然会输出\",{\"1\":{\"354\":1}}],[\"因此最后输出的连续就都是\",{\"1\":{\"903\":1}}],[\"因此循环结束后\",{\"1\":{\"903\":1}}],[\"因此使用闭包的作用\",{\"1\":{\"900\":1}}],[\"因此在reset之前建议使用stash将本地修改储存\",{\"1\":{\"1615\":1}}],[\"因此在组件的渲染过程中\",{\"1\":{\"1283\":1}}],[\"因此在一些情况下\",{\"1\":{\"1201\":1}}],[\"因此在相应花括号形成的作用域中\",{\"1\":{\"898\":1}}],[\"因此在\",{\"1\":{\"895\":1}}],[\"因此如果有一个表达式\",{\"1\":{\"802\":1}}],[\"因此对象获得的一个新的引用类型而不是一个原有类型的引用\",{\"1\":{\"768\":1}}],[\"因此两个对象会有同一个引用类型的引用\",{\"1\":{\"768\":1}}],[\"因此尽量避免使用空位数组\",{\"1\":{\"679\":1}}],[\"因此是不会有\",{\"1\":{\"658\":1}}],[\"因此这个操作符不能用于\",{\"1\":{\"604\":1}}],[\"因此这里的\",{\"1\":{\"354\":1}}],[\"因此通过额外的一个方法调用符号\",{\"1\":{\"597\":1}}],[\"因此有必要把执行的代码进行封装优化\",{\"1\":{\"590\":1}}],[\"因此第三行的\",{\"1\":{\"578\":1}}],[\"因此打印出\",{\"1\":{\"568\":1}}],[\"因此更容易阅读和理解\",{\"1\":{\"562\":1}}],[\"因此可知\",{\"1\":{\"698\":1}}],[\"因此可能还希望以延迟方式加载\",{\"1\":{\"473\":1}}],[\"因此可以互相代替\",{\"1\":{\"1784\":1}}],[\"因此可以确保数组创建后再也不能被修改\",{\"1\":{\"1339\":1}}],[\"因此可以输出全局的变量\",{\"1\":{\"902\":1}}],[\"因此可以这样修改上面的代码\",{\"1\":{\"901\":1}}],[\"因此可以这样写\",{\"1\":{\"849\":1}}],[\"因此可以用if\",{\"1\":{\"607\":1}}],[\"因此可以采用链式写法\",{\"1\":{\"571\":1}}],[\"因此可以给这个属性进行解构赋值\",{\"1\":{\"254\":1}}],[\"因此可以把子节点的监听函数定义在父节点上\",{\"1\":{\"235\":1}}],[\"因此只能使用\",{\"1\":{\"432\":1}}],[\"因此重要的是\",{\"1\":{\"431\":1}}],[\"因此还可以使用\",{\"1\":{\"395\":1}}],[\"因此进入check\",{\"1\":{\"382\":1}}],[\"因此输出的结果还是\",{\"1\":{\"901\":1}}],[\"因此输出\",{\"1\":{\"353\":1}}],[\"因此模块可以通过将代码包装在\",{\"1\":{\"334\":1}}],[\"因此早期会有这样的问题\",{\"1\":{\"320\":1}}],[\"因此等同于常量\",{\"1\":{\"247\":1}}],[\"因此\",{\"1\":{\"200\":1,\"272\":1,\"340\":1,\"360\":1,\"362\":1,\"365\":1,\"433\":1,\"445\":2,\"462\":1,\"467\":1,\"474\":1,\"511\":1,\"555\":1,\"607\":1,\"608\":1,\"609\":1,\"610\":1,\"839\":1,\"901\":1,\"1211\":2,\"1428\":1,\"1442\":1,\"1460\":1,\"1649\":1,\"1712\":1,\"1724\":1,\"2232\":1,\"2633\":1}}],[\"因为透明对象需要特殊处理\",{\"1\":{\"2677\":1}}],[\"因为数据有其他副本在非故障场地上\",{\"1\":{\"2229\":1}}],[\"因为所有交互都发生在一个地方\",{\"1\":{\"2032\":1}}],[\"因为i构件总可以通过标识机制进行划分\",{\"1\":{\"2025\":1}}],[\"因为软件的复杂性越大\",{\"1\":{\"1948\":1}}],[\"因为不知道到底在哪个责任中出的错\",{\"1\":{\"1839\":1}}],[\"因为事件的广播需要循环遍历所有订阅者\",{\"1\":{\"1813\":1}}],[\"因为事件的发布和订阅是分布式的\",{\"1\":{\"1813\":1}}],[\"因为订阅者对象仍然存在\",{\"1\":{\"1805\":1}}],[\"因为单例模式一般自行实例化\",{\"1\":{\"1770\":1}}],[\"因为系统的不同部分可能会以不可预见的方式相互影响\",{\"1\":{\"1770\":1}}],[\"因为只有一个实例\",{\"1\":{\"1769\":1}}],[\"因为只有访问数据触发了\",{\"1\":{\"1563\":1}}],[\"因为许多的\",{\"1\":{\"1724\":1}}],[\"因为传输中需要对数据确认\",{\"1\":{\"1715\":1}}],[\"因为tcp连接的两端都设有缓存\",{\"1\":{\"1713\":1}}],[\"因为顺序无关\",{\"1\":{\"1707\":1}}],[\"因为回调函数中包含对\",{\"1\":{\"1653\":1}}],[\"因为就算此轮不清理等下一轮\",{\"1\":{\"1650\":1}}],[\"因为老生代中的对象通常比较大\",{\"1\":{\"1648\":1}}],[\"因为即便是使用\",{\"1\":{\"1646\":1}}],[\"因为新建的文件还没加入到git管理系统重\",{\"1\":{\"1614\":1}}],[\"因为要删的分支可能有未提交的代码\",{\"1\":{\"1595\":1}}],[\"因为要根据父级的大小进行计算\",{\"1\":{\"205\":1}}],[\"因为每个顶点都是一个三元组\",{\"1\":{\"2278\":1}}],[\"因为每个人电脑里都有完整的版本库\",{\"1\":{\"1580\":1}}],[\"因为每次\",{\"1\":{\"581\":1,\"1269\":1}}],[\"因为对数组下标的拦截太浪费性能\",{\"1\":{\"1535\":1}}],[\"因为我们也不知道被引用数量的上限\",{\"1\":{\"1646\":1}}],[\"因为我们组件初始渲染前后对应有\",{\"1\":{\"1525\":1}}],[\"因为我们并没有删除这些节点\",{\"1\":{\"436\":1}}],[\"因为任何类型都不能满足同时属于多种原子类型\",{\"1\":{\"1460\":1}}],[\"因为会让代码增加阅读难度\",{\"1\":{\"1386\":1}}],[\"因为泛型会保留参数类型\",{\"1\":{\"1360\":1}}],[\"因为输入框是需要实时更新的\",{\"1\":{\"1309\":1}}],[\"因为直接修改\",{\"1\":{\"1285\":1}}],[\"因为其没有迭代器对象\",{\"1\":{\"874\":1}}],[\"因为其更加简单\",{\"1\":{\"525\":1}}],[\"因为他们的域名不相同\",{\"1\":{\"867\":1}}],[\"因为他们端口号不同\",{\"1\":{\"861\":1}}],[\"因为浏览器同源策略的存在\",{\"1\":{\"859\":1}}],[\"因为没有迭代器对象\",{\"1\":{\"719\":1}}],[\"因为没有将钩子\",{\"1\":{\"33\":1,\"76\":1}}],[\"因为箭头函数没有\",{\"1\":{\"712\":1,\"872\":1}}],[\"因为这些函数不会被克隆\",{\"1\":{\"2683\":1}}],[\"因为这些函数时用于显示有关加载总体状态的信息\",{\"1\":{\"2455\":1}}],[\"因为这些方法返回的都是迭代器\",{\"1\":{\"710\":1}}],[\"因为这是引擎为我们分配的\",{\"1\":{\"1644\":1}}],[\"因为这里不是它的作用域\",{\"1\":{\"898\":1}}],[\"因为这两个参数是可选参数\",{\"1\":{\"580\":1}}],[\"因为调试器只能跟踪同步代码的每⼀步\",{\"1\":{\"596\":1}}],[\"因为异步函数主要针对不会马上完成的任务\",{\"1\":{\"594\":1}}],[\"因为母方法\",{\"1\":{\"578\":1}}],[\"因为一个\",{\"1\":{\"565\":1}}],[\"因为变量\",{\"1\":{\"502\":1}}],[\"因为变量的声明被提升了\",{\"1\":{\"500\":1}}],[\"因为此时fn只是一个变量\",{\"1\":{\"500\":1}}],[\"因为函数内部的变量声明会被提升至函数作用域的顶端\",{\"1\":{\"500\":1}}],[\"因为子类本身并没有自己的this对象\",{\"1\":{\"495\":1}}],[\"因为两个实例使用的是同一个原型对象\",{\"1\":{\"484\":1}}],[\"因为支持\",{\"1\":{\"473\":1}}],[\"因为当服务端收到客户端的syn连接请求报文后\",{\"1\":{\"1729\":1}}],[\"因为当我们将模块移动到项目中的另一个位置时\",{\"1\":{\"463\":1}}],[\"因为当缺少\",{\"1\":{\"253\":1}}],[\"因为它可能会引入全局状态\",{\"1\":{\"1763\":1}}],[\"因为它可能会阻塞渲染并影响性能\",{\"1\":{\"1203\":1}}],[\"因为它需要考虑主线程在执行\",{\"1\":{\"1651\":1}}],[\"因为它会生成标准化的提交消息\",{\"1\":{\"1602\":1}}],[\"因为它会与文件内的代码命名冲突\",{\"1\":{\"1353\":1}}],[\"因为它是同步的\",{\"1\":{\"1260\":1}}],[\"因为它是引用的入口\",{\"1\":{\"463\":1}}],[\"因为它不会阻塞浏览器渲染\",{\"1\":{\"1258\":1}}],[\"因为它不再处于文档流中\",{\"1\":{\"178\":1}}],[\"因为它们的引用数量不会变成\",{\"1\":{\"1646\":1}}],[\"因为它们都依赖于输入的引用恒定性\",{\"1\":{\"1210\":1}}],[\"因为它们被比较并且不被使用\",{\"1\":{\"807\":1}}],[\"因为仍有一个变量指向\",{\"1\":{\"434\":1}}],[\"因为包裹箭头函数的第一个普通函数是\",{\"1\":{\"362\":1}}],[\"因为将\",{\"1\":{\"355\":1}}],[\"因为如果异步函数执行花费的时间超过\",{\"1\":{\"334\":1}}],[\"因为返回的是遍历器\",{\"1\":{\"324\":1}}],[\"因为代码中使用了魔术字符串\",{\"1\":{\"269\":1}}],[\"因为\",{\"1\":{\"232\":1,\"445\":1,\"583\":1,\"592\":1,\"595\":1,\"640\":1,\"755\":1,\"903\":1,\"1234\":1,\"1366\":1,\"1443\":1,\"1730\":1,\"2741\":1,\"2744\":1}}],[\"因为需要去获取正确的值\",{\"1\":{\"226\":1}}],[\"因为前者只会引起重绘\",{\"1\":{\"226\":1}}],[\"因为在dxt压缩和未压缩rgb\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"因为在两个三角面片里\",{\"1\":{\"2278\":1}}],[\"因为在当前环境中\",{\"1\":{\"901\":1}}],[\"因为在函数执行过程中\",{\"1\":{\"505\":1}}],[\"因为在其他不相关的单元中也可以访问和修改这些全局变量\",{\"1\":{\"445\":1}}],[\"因为在\",{\"1\":{\"207\":1,\"507\":1,\"1533\":1,\"1581\":1}}],[\"因为设计稿一般是根据\",{\"1\":{\"206\":1}}],[\"因为使用了一些折行敏感型的渲染器\",{\"1\":{\"20\":1,\"63\":1}}],[\"数数加锁\",{\"0\":{\"2262\":1}}],[\"数用化\",{\"1\":{\"1889\":1}}],[\"数模化\",{\"1\":{\"1889\":1}}],[\"数码化\",{\"1\":{\"1889\":1}}],[\"数量化\",{\"1\":{\"1889\":1}}],[\"数量从多到少的顺利对用户进行排序\",{\"1\":{\"1604\":1}}],[\"数量\",{\"1\":{\"1287\":1,\"2795\":2}}],[\"数量就达\",{\"1\":{\"817\":1}}],[\"数学\",{\"1\":{\"805\":1}}],[\"数据备份\",{\"0\":{\"2266\":1}}],[\"数据与防止数据\",{\"1\":{\"2260\":1}}],[\"数据冗余\",{\"1\":{\"2244\":1}}],[\"数据操作\",{\"1\":{\"2239\":1}}],[\"数据模型三要素\",{\"1\":{\"2239\":1}}],[\"数据模型\",{\"0\":{\"2239\":1}}],[\"数据模型和操纵语言的转换是由系统完成的\",{\"1\":{\"2232\":1}}],[\"数据仍然是可用的\",{\"1\":{\"2229\":1}}],[\"数据独立性\",{\"1\":{\"2229\":1}}],[\"数据泛洪\",{\"1\":{\"2208\":1}}],[\"数据转发\",{\"1\":{\"2208\":1}}],[\"数据转换与迁移\",{\"0\":{\"1946\":1}}],[\"数据在网络中转发通常离不开交换机\",{\"1\":{\"2207\":1}}],[\"数据在多个节点存储了多份\",{\"1\":{\"2132\":1}}],[\"数据通信\",{\"1\":{\"2199\":1}}],[\"数据通信及网络设备\",{\"1\":{\"1867\":1}}],[\"数据传输方式可以使用多种\",{\"1\":{\"2186\":1}}],[\"数据传输完毕后\",{\"1\":{\"1727\":1}}],[\"数据是一位一位地进行传输的\",{\"1\":{\"2186\":1}}],[\"数据是微服务的\",{\"1\":{\"2056\":1}}],[\"数据精度\",{\"1\":{\"2180\":1}}],[\"数据不一致时\",{\"1\":{\"2133\":1}}],[\"数据不存在\",{\"1\":{\"767\":1}}],[\"数据安全\",{\"1\":{\"2100\":1}}],[\"数据依赖\",{\"1\":{\"2055\":1}}],[\"数据访问层设计\",{\"0\":{\"2035\":1}}],[\"数据访问逻辑\",{\"1\":{\"1936\":1}}],[\"数据选择及工作内存\",{\"1\":{\"1992\":1}}],[\"数据交换的问题\",{\"1\":{\"1987\":1}}],[\"数据环境\",{\"1\":{\"1949\":1}}],[\"数据流风格\",{\"0\":{\"1977\":1}}],[\"数据流测试\",{\"1\":{\"1939\":1}}],[\"数据流分析\",{\"1\":{\"1938\":1}}],[\"数据流图平衡原则\",{\"0\":{\"1911\":1}}],[\"数据流图\",{\"0\":{\"1910\":1}}],[\"数据量不大时\",{\"1\":{\"2073\":1}}],[\"数据量大\",{\"1\":{\"1886\":1}}],[\"数据量小\",{\"1\":{\"1886\":1}}],[\"数据集成\",{\"1\":{\"1886\":1}}],[\"数据湖既支持数据分析处理\",{\"1\":{\"1883\":1}}],[\"数据湖是一个存储企业的各种各样原始数据的大型仓库\",{\"1\":{\"1883\":1}}],[\"数据湖\",{\"0\":{\"1883\":1}}],[\"数据挖掘\",{\"0\":{\"1882\":1}}],[\"数据仓库仅支持数据分析处理\",{\"1\":{\"1883\":1}}],[\"数据仓库\",{\"0\":{\"1881\":1}}],[\"数据和模型是dss的主要资源\",{\"1\":{\"1865\":1}}],[\"数据处理速率法\",{\"1\":{\"2170\":1}}],[\"数据处理\",{\"1\":{\"1863\":2}}],[\"数据输入\",{\"1\":{\"1863\":1}}],[\"数据缓存等\",{\"1\":{\"1796\":1}}],[\"数据格式比较轻量\",{\"1\":{\"1736\":1}}],[\"数据包处理和过滤\",{\"1\":{\"2220\":1}}],[\"数据包交付到一组见算计中的每一个\",{\"1\":{\"2214\":1}}],[\"数据包都是从一块网卡传递到另一块网卡\",{\"1\":{\"1692\":1}}],[\"数据包具体内容\",{\"1\":{\"1692\":1}}],[\"数据包的发送者\",{\"1\":{\"1692\":1}}],[\"数据以\",{\"1\":{\"1670\":1}}],[\"数据被清空\",{\"1\":{\"1666\":1}}],[\"数据工作流程如下\",{\"1\":{\"1598\":1}}],[\"数据就会丢失\",{\"1\":{\"1579\":1}}],[\"数据更新时就可以通知\",{\"1\":{\"1560\":1}}],[\"数据劫持核心是\",{\"1\":{\"1534\":1}}],[\"数据劫持\",{\"1\":{\"1533\":1}}],[\"数据初始化\",{\"0\":{\"1533\":1}}],[\"数据变化后应该让watcher从新执行\",{\"1\":{\"1492\":1}}],[\"数据应该依赖这个watcher\",{\"1\":{\"1492\":1}}],[\"数据获取\",{\"1\":{\"1243\":1,\"1258\":1}}],[\"数据按日期进行排序得到\",{\"1\":{\"1211\":1}}],[\"数据请求完触发\",{\"1\":{\"1168\":1}}],[\"数据\",{\"0\":{\"822\":1},\"1\":{\"819\":1,\"822\":1,\"864\":1,\"866\":1,\"895\":1,\"1692\":1,\"1936\":1,\"2260\":1}}],[\"数据一般是这样\",{\"1\":{\"819\":1}}],[\"数据比较相关的操作符\",{\"1\":{\"774\":1}}],[\"数据已经存在\",{\"1\":{\"767\":1}}],[\"数据项的插入\",{\"1\":{\"691\":1}}],[\"数据都存储在更底层的\",{\"1\":{\"402\":1}}],[\"数据的读出\",{\"1\":{\"2259\":1}}],[\"数据的约束条件\",{\"1\":{\"2239\":1}}],[\"数据的\",{\"1\":{\"395\":1}}],[\"数据的格式取决于使用哪个方法来启动读取操作\",{\"1\":{\"394\":1}}],[\"数据对象\",{\"1\":{\"394\":1}}],[\"数据正在被加载\",{\"1\":{\"394\":1}}],[\"数据类型转换\",{\"0\":{\"660\":1}}],[\"数据类型检测\",{\"0\":{\"655\":1}}],[\"数据类型\",{\"0\":{\"649\":1},\"1\":{\"320\":1,\"1692\":1},\"2\":{\"671\":1}}],[\"数据类型的变量\",{\"1\":{\"270\":1}}],[\"数据结构\",{\"1\":{\"272\":1,\"2239\":1}}],[\"数据库故障与恢复\",{\"0\":{\"2267\":1}}],[\"数据库备份与恢复技术\",{\"0\":{\"2265\":1}}],[\"数据库的安全性\",{\"0\":{\"2264\":1}}],[\"数据库设计过程\",{\"0\":{\"2236\":1}}],[\"数据库视图\",{\"0\":{\"2226\":1}}],[\"数据库只存放它的定义\",{\"1\":{\"2225\":1}}],[\"数据库模式\",{\"0\":{\"2224\":1}}],[\"数据库系统\",{\"0\":{\"2223\":1}}],[\"数据库读写分离\",{\"0\":{\"2080\":1}}],[\"数据库崩溃\",{\"1\":{\"2071\":1}}],[\"数据库维护\",{\"1\":{\"1863\":1}}],[\"数据库回滚到事务发生之前的状态\",{\"1\":{\"1670\":1}}],[\"数据库则就可以放到这个目录下\",{\"1\":{\"913\":1}}],[\"数据库\",{\"0\":{\"196\":1}}],[\"数值运算的方法\",{\"0\":{\"1112\":1}}],[\"数值是\",{\"1\":{\"739\":1}}],[\"数值类型\",{\"1\":{\"320\":1}}],[\"数值和布尔值解构赋值\",{\"1\":{\"254\":1}}],[\"数值\",{\"1\":{\"247\":1,\"653\":1}}],[\"数组引用越界\",{\"1\":{\"1938\":1}}],[\"数组派发更新\",{\"1\":{\"1564\":1}}],[\"数组包含数组的情况\",{\"1\":{\"1563\":1}}],[\"数组里面\",{\"1\":{\"1560\":1}}],[\"数组里的方法\",{\"1\":{\"581\":1}}],[\"数组更新\",{\"0\":{\"1302\":1}}],[\"数组遍历方法\",{\"0\":{\"871\":1}}],[\"数组拷贝\",{\"0\":{\"851\":1}}],[\"数组结构一个很实用的功能就是实现交换局部变量\",{\"1\":{\"850\":1}}],[\"数组元素\",{\"0\":{\"801\":1}}],[\"数组元素的类型可以是任意的\",{\"1\":{\"676\":1}}],[\"数组元素的排列顺序和正常循环遍历该对象时返回的顺序一致\",{\"1\":{\"295\":1,\"882\":1}}],[\"数组乱序\",{\"0\":{\"747\":1}}],[\"数组求和\",{\"0\":{\"744\":1}}],[\"数组去重\",{\"0\":{\"741\":1}}],[\"数组上\",{\"1\":{\"735\":1}}],[\"数组扁平化\",{\"0\":{\"734\":1}}],[\"数组常见操作\",{\"0\":{\"733\":1}}],[\"数组有两个方法可以对数组进行重新排序\",{\"1\":{\"697\":1}}],[\"数组提高了\",{\"1\":{\"691\":1}}],[\"数组判断\",{\"0\":{\"681\":1}}],[\"数组长度始终比数组最后一个值的索引大\",{\"1\":{\"680\":1}}],[\"数组长度\",{\"1\":{\"680\":1}}],[\"数组索引\",{\"0\":{\"680\":1}}],[\"数组空位\",{\"0\":{\"679\":1}}],[\"数组每个元素的值都是\",{\"1\":{\"677\":1}}],[\"数组创建\",{\"0\":{\"675\":1}}],[\"数组拥有一个\",{\"1\":{\"674\":1}}],[\"数组跟其他语言的数组一样\",{\"1\":{\"674\":1}}],[\"数组是被等分为许多小块的连续内存段\",{\"1\":{\"674\":1}}],[\"数组是我们最常用的数据类型之一\",{\"1\":{\"674\":1}}],[\"数组是从事件参数的\",{\"1\":{\"392\":1}}],[\"数组概述\",{\"0\":{\"674\":1}}],[\"数组基础\",{\"0\":{\"673\":1}}],[\"数组和函数\",{\"1\":{\"650\":1}}],[\"数组先把传给then的函数暂存起来\",{\"1\":{\"581\":1}}],[\"数组的派发更新\",{\"0\":{\"1564\":1}}],[\"数组的依赖收集\",{\"0\":{\"1563\":1}}],[\"数组的观测\",{\"0\":{\"1535\":1}}],[\"数组的解构赋值\",{\"0\":{\"839\":1}}],[\"数组的解构赋值按照位置将值与变量对应\",{\"1\":{\"252\":1}}],[\"数组的一个方法\",{\"1\":{\"758\":1}}],[\"数组的\",{\"1\":{\"731\":1}}],[\"数组的转化方法主要有四个\",{\"1\":{\"686\":1}}],[\"数组的创建方式有以下两种\",{\"1\":{\"675\":1}}],[\"数组的长度也是动态的\",{\"1\":{\"674\":1}}],[\"数组的每一项都是一个promise对象\",{\"1\":{\"573\":1}}],[\"数组中的每个值\",{\"1\":{\"877\":1}}],[\"数组中的每个值都会调用回调函数\",{\"1\":{\"872\":1}}],[\"数组中的元素为原始数组元素调用函数处理后的值\",{\"1\":{\"713\":1,\"873\":1}}],[\"数组中取出\",{\"1\":{\"836\":1}}],[\"数组中每个槽位可以存储任意类型的数据\",{\"1\":{\"674\":1}}],[\"数组中每个元素需要调用的函数\",{\"1\":{\"363\":1}}],[\"数组中提前注册的回调\",{\"1\":{\"581\":1}}],[\"数组中\",{\"1\":{\"581\":2}}],[\"数组中当前被处理的元素\",{\"1\":{\"284\":1,\"705\":1}}],[\"数组方法实现数组浅拷贝\",{\"0\":{\"757\":1}}],[\"数组方法\",{\"0\":{\"283\":1,\"363\":1,\"682\":1}}],[\"数组转化为set集合\",{\"1\":{\"271\":1}}],[\"数组还可以实现不完全解构\",{\"1\":{\"252\":1}}],[\"数组解构赋值可以使用\",{\"1\":{\"252\":1}}],[\"数组解构\",{\"0\":{\"252\":1},\"1\":{\"837\":1}}],[\"数组\",{\"0\":{\"672\":1,\"784\":1,\"792\":1,\"800\":1,\"841\":1,\"1110\":1},\"1\":{\"208\":1,\"391\":1,\"392\":1,\"403\":1,\"449\":1,\"719\":2,\"800\":1,\"839\":1,\"874\":1},\"2\":{\"751\":1}}],[\"数组括号与文字之间加空格\",{\"1\":{\"20\":1,\"63\":1}}],[\"数字ip核和存储器\",{\"1\":{\"2179\":1}}],[\"数字证书的内容\",{\"1\":{\"2109\":1}}],[\"数字签名技术\",{\"0\":{\"2108\":1}}],[\"数字化\",{\"1\":{\"1889\":2}}],[\"数字化转型\",{\"0\":{\"1889\":1}}],[\"数字字面量\",{\"1\":{\"1427\":1}}],[\"数字字面量类型和布尔字面量类型的使用与字符串字面量类型的使用类似\",{\"1\":{\"1429\":1}}],[\"数字字面量类型及布尔字面量类型\",{\"0\":{\"1429\":1}}],[\"数字字面量类型\",{\"1\":{\"1427\":1}}],[\"数字枚举\",{\"0\":{\"1407\":1}}],[\"数字下划线组成\",{\"1\":{\"1091\":1}}],[\"数字时的执行过程\",{\"1\":{\"806\":1}}],[\"数字或\",{\"1\":{\"805\":1}}],[\"数字转换\",{\"0\":{\"796\":1}}],[\"数字就像是一个森林\",{\"1\":{\"682\":1}}],[\"数字0～9的unicode编码范围是\",{\"1\":{\"518\":1}}],[\"数字分隔符可以在数字之间创建可视化分隔符\",{\"1\":{\"327\":1}}],[\"数字分隔符\",{\"0\":{\"327\":1}}],[\"数字\",{\"0\":{\"782\":1,\"791\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1},\"1\":{\"208\":4,\"272\":1,\"551\":1,\"772\":1,\"802\":1,\"804\":1,\"1061\":1}}],[\"来拷贝合适的值到\",{\"1\":{\"2743\":1}}],[\"来编译并运行在\",{\"1\":{\"2741\":1}}],[\"来编写和其他语言相同逻辑的代码\",{\"1\":{\"504\":1}}],[\"来自定义物体阴影投射\",{\"1\":{\"2597\":1}}],[\"来自适应设置\",{\"1\":{\"1256\":1}}],[\"来增加组\",{\"1\":{\"2286\":1}}],[\"来提高性能\",{\"1\":{\"2212\":1}}],[\"来提升代码的可复用性\",{\"1\":{\"728\":1}}],[\"来管理应用的状态\",{\"1\":{\"1764\":1}}],[\"来⼀个包拼⼀个包就好了\",{\"1\":{\"1730\":1}}],[\"来决定调用什么类型的动态文件解释器来处理这个请求\",{\"1\":{\"1698\":1}}],[\"来决定大小的\",{\"1\":{\"206\":1}}],[\"来做\",{\"1\":{\"1665\":1}}],[\"来说\",{\"1\":{\"1646\":1}}],[\"来对|进行转义\",{\"1\":{\"1626\":1}}],[\"来对数据\",{\"1\":{\"1534\":1}}],[\"来强制重命名\",{\"1\":{\"1597\":1}}],[\"来表示开始和结束标签\",{\"1\":{\"1550\":1}}],[\"来执行\",{\"1\":{\"1541\":1}}],[\"来比对\",{\"1\":{\"1476\":1}}],[\"来生成真实dom\",{\"1\":{\"1476\":1}}],[\"来跟踪用户对属性的操作\",{\"1\":{\"1467\":1}}],[\"来使用装饰器\",{\"1\":{\"1466\":1}}],[\"来构造一个新的类型\",{\"1\":{\"1380\":1}}],[\"来指定添加还是删除\",{\"1\":{\"1371\":1}}],[\"来设置过渡状态的样式\",{\"1\":{\"1308\":1}}],[\"来获得对真实\",{\"1\":{\"1288\":1}}],[\"来获取数组元素\",{\"1\":{\"674\":1}}],[\"来获取对象所有的\",{\"1\":{\"297\":1}}],[\"来获取对象的所有键名\",{\"1\":{\"268\":1}}],[\"来获取一个对象所有的\",{\"1\":{\"297\":1}}],[\"来达到目的\",{\"1\":{\"1283\":1}}],[\"来缓存这个组件\",{\"1\":{\"1267\":1}}],[\"来缓存排序结果\",{\"1\":{\"1211\":1}}],[\"来更新自定义\",{\"1\":{\"2744\":1}}],[\"来更新\",{\"1\":{\"1312\":1}}],[\"来更新状态的\",{\"1\":{\"1273\":1}}],[\"来更新显示的位置\",{\"1\":{\"1256\":1}}],[\"来更新组件的状态时\",{\"1\":{\"1199\":1}}],[\"来访问这个\",{\"1\":{\"1219\":1}}],[\"来确保函数引用的稳定性\",{\"1\":{\"1211\":1}}],[\"来启动\",{\"1\":{\"1077\":1}}],[\"来中断循环遍历\",{\"1\":{\"874\":1}}],[\"来打印\",{\"1\":{\"803\":1}}],[\"来测试两个值的相等性\",{\"1\":{\"772\":1}}],[\"来反序列化\",{\"1\":{\"763\":1}}],[\"来迭代\",{\"1\":{\"725\":1}}],[\"来将变量转为为布尔值\",{\"1\":{\"795\":1}}],[\"来将其转换为布尔值\",{\"1\":{\"666\":1}}],[\"来将一个其他的数据类型转换为布尔值\",{\"1\":{\"666\":1}}],[\"来将消息发布到频道\",{\"1\":{\"343\":1}}],[\"来捕捉\",{\"1\":{\"597\":1}}],[\"来处理组件的懒加载\",{\"1\":{\"1312\":1}}],[\"来处理异步代码\",{\"1\":{\"597\":1}}],[\"来处理文件或原始文件数据\",{\"1\":{\"386\":1}}],[\"来模拟异步操作\",{\"1\":{\"596\":1}}],[\"来创建\",{\"1\":{\"566\":1}}],[\"来改变\",{\"1\":{\"565\":1}}],[\"来声明变量\",{\"1\":{\"507\":1}}],[\"来安装\",{\"1\":{\"462\":1}}],[\"来导出模块内容\",{\"1\":{\"452\":1}}],[\"来导出和导入模块\",{\"1\":{\"449\":1}}],[\"来检查值是否有变化\",{\"1\":{\"1236\":1}}],[\"来检查对象自身中是否含有该属性\",{\"1\":{\"482\":1}}],[\"来检查分离的dom节点\",{\"1\":{\"437\":1}}],[\"来检查一个属性是否属于对象\",{\"1\":{\"331\":1}}],[\"来识别内存图和一些内存泄漏\",{\"1\":{\"435\":1}}],[\"来解决此问题\",{\"1\":{\"433\":1}}],[\"来解决垂直边距折叠问题\",{\"1\":{\"184\":1}}],[\"来注销事件侦听器\",{\"1\":{\"432\":1}}],[\"来避免这一切\",{\"1\":{\"429\":1}}],[\"来避免这个问题\",{\"1\":{\"270\":1}}],[\"来帮助开发人员管理内存\",{\"1\":{\"425\":1}}],[\"来手动释放它\",{\"1\":{\"413\":1}}],[\"来限制上传文件的格式等\",{\"1\":{\"391\":1}}],[\"来用于数据操作\",{\"1\":{\"387\":1}}],[\"来消除振动\",{\"1\":{\"342\":1}}],[\"来简化\",{\"1\":{\"321\":1,\"643\":1}}],[\"来简单看一下\",{\"1\":{\"254\":1}}],[\"来判断新老子节点的头头\",{\"1\":{\"1478\":1}}],[\"来判断输出的是\",{\"1\":{\"731\":1}}],[\"来判断的话\",{\"1\":{\"724\":1}}],[\"来判断a是不是偶数\",{\"1\":{\"607\":1}}],[\"来判断数字的基数\",{\"1\":{\"550\":1}}],[\"来判断数组中是否包含某个指定值\",{\"1\":{\"289\":1}}],[\"来判等\",{\"1\":{\"289\":1}}],[\"来求两个数组的交集和并集\",{\"1\":{\"271\":1}}],[\"来实现数组的拼接\",{\"1\":{\"736\":1}}],[\"来实现数组去重\",{\"1\":{\"271\":1}}],[\"来实现\",{\"1\":{\"731\":1}}],[\"来实现类似栈的行为\",{\"1\":{\"691\":1}}],[\"来实现呢\",{\"1\":{\"596\":1}}],[\"来实现的\",{\"1\":{\"464\":1}}],[\"来实现模块\",{\"1\":{\"448\":1}}],[\"来实现适配\",{\"1\":{\"206\":1}}],[\"来转义\",{\"1\":{\"255\":1}}],[\"来定义常量\",{\"1\":{\"250\":1}}],[\"来定义变量\",{\"1\":{\"250\":1}}],[\"来看个示例\",{\"1\":{\"1210\":1}}],[\"来看下面代码\",{\"1\":{\"898\":1}}],[\"来看下面的代码\",{\"1\":{\"363\":1,\"505\":1,\"578\":1}}],[\"来看下改造完的代码和执行结果\",{\"1\":{\"577\":1}}],[\"来看一个示例\",{\"1\":{\"1583\":1}}],[\"来看一个简单的例子\",{\"1\":{\"413\":1}}],[\"来看一个例子\",{\"1\":{\"354\":1,\"409\":1,\"1591\":1}}],[\"来看看这些都是什么意思\",{\"1\":{\"402\":1}}],[\"来看例子\",{\"1\":{\"399\":1,\"400\":1,\"517\":1}}],[\"来看代码\",{\"1\":{\"353\":1}}],[\"来看\",{\"1\":{\"124\":1}}],[\"用相机\",{\"1\":{\"2836\":1}}],[\"用给定的正则表达式注册一个加载器\",{\"1\":{\"2473\":1}}],[\"用给定矩阵转换几何体的顶点坐标\",{\"1\":{\"2298\":1}}],[\"用以实现从确定系统功能开始\",{\"1\":{\"2179\":1}}],[\"用以探测对数据或数据项序列的非授权修改的机制\",{\"1\":{\"2128\":1}}],[\"用以下方法可以进行数组与集合的相互转化\",{\"1\":{\"271\":1}}],[\"用软件产品线替代现有产品集\",{\"1\":{\"2016\":1}}],[\"用源代码对系统的描述\",{\"1\":{\"1996\":1}}],[\"用例用来捕获功能需求\",{\"1\":{\"1974\":1}}],[\"用例图\",{\"0\":{\"1913\":1}}],[\"用例驱动\",{\"1\":{\"1901\":1}}],[\"用服务方式使用全屏\",{\"1\":{\"1766\":1}}],[\"用双引号括起来\",{\"1\":{\"1600\":1}}],[\"用新的创建的元素\",{\"1\":{\"1479\":1}}],[\"用新的去老的中查找\",{\"1\":{\"1478\":1}}],[\"用新的虚拟节点的属性和老的比较\",{\"1\":{\"1476\":1}}],[\"用vnode\",{\"1\":{\"1476\":1}}],[\"用接口定义函数类型\",{\"0\":{\"1422\":1}}],[\"用一个例子来看\",{\"1\":{\"1265\":1}}],[\"用函数作为参数\",{\"0\":{\"1194\":1}}],[\"用原来的值再把它改回来\",{\"1\":{\"1153\":1}}],[\"用p\",{\"1\":{\"1063\":2}}],[\"用到相同的文件时\",{\"1\":{\"1002\":1}}],[\"用强迫的方式杀掉所有执行中的程序后自行关机\",{\"1\":{\"919\":1}}],[\"用法如下\",{\"1\":{\"1267\":1}}],[\"用法详解\",{\"0\":{\"1242\":1}}],[\"用法\",{\"0\":{\"1192\":1},\"1\":{\"755\":1,\"758\":1}}],[\"用法几乎一致\",{\"1\":{\"706\":1,\"877\":1}}],[\"用得比较少\",{\"1\":{\"678\":1}}],[\"用途如下\",{\"1\":{\"1211\":1}}],[\"用途与缓存的内容不同\",{\"1\":{\"1211\":1}}],[\"用途\",{\"1\":{\"607\":1,\"913\":1,\"1082\":1,\"1088\":1,\"1089\":1,\"1211\":2,\"1880\":1}}],[\"用的最多的是\",{\"1\":{\"558\":1}}],[\"用在需要源链接的地方\",{\"1\":{\"395\":1}}],[\"用户定义的剪裁平面\",{\"1\":{\"2647\":1}}],[\"用户不用关心数据库在网络中各个节点的复制情况\",{\"1\":{\"2232\":1}}],[\"用户不需要指定内部的具体构造细节\",{\"1\":{\"1758\":1}}],[\"用户的培训计划\",{\"1\":{\"2218\":1}}],[\"用户的请求其实已经到了http重定向负载均衡服务器\",{\"1\":{\"2077\":1}}],[\"用户的请求由谁来转发到具体的应用服务器\",{\"1\":{\"2076\":1}}],[\"用户自主保护级\",{\"1\":{\"2111\":1}}],[\"用户自定义的剪裁平面\",{\"1\":{\"2796\":1}}],[\"用户自定义完整性约束\",{\"1\":{\"2241\":1}}],[\"用户自定义watch的写法可能是数组\",{\"1\":{\"1491\":1}}],[\"用户自定义变量\",{\"0\":{\"1093\":1}}],[\"用户收到重定向请求后\",{\"1\":{\"2077\":1}}],[\"用户如果每次访问到的服务器不一样\",{\"1\":{\"2076\":1}}],[\"用户访问层\",{\"1\":{\"2051\":1}}],[\"用户看到并与之交互的界面\",{\"1\":{\"2031\":1}}],[\"用户信息数据库授权必须保证99\",{\"1\":{\"2006\":1}}],[\"用户界面与model的接口\",{\"1\":{\"2031\":1}}],[\"用户界面\",{\"1\":{\"1936\":1}}],[\"用户根据文档来判断构件是否满足需求\",{\"1\":{\"1900\":1}}],[\"用户深度参与\",{\"1\":{\"1856\":1}}],[\"用户确定范围\",{\"1\":{\"1856\":1}}],[\"用户参与开发原则\",{\"1\":{\"1856\":1}}],[\"用户依然可以进行其他操作\",{\"1\":{\"1670\":1}}],[\"用户去vm\",{\"1\":{\"1533\":1}}],[\"用户回调\",{\"1\":{\"1492\":1}}],[\"用户可以用\",{\"1\":{\"1077\":1}}],[\"用户可以在其中选择一个设备或取消请求\",{\"1\":{\"341\":1}}],[\"用户刚刚启动\",{\"1\":{\"1056\":1}}],[\"用户类型由一个或者多个字母who的位置来说明\",{\"1\":{\"1039\":1}}],[\"用户类型\",{\"1\":{\"1039\":3}}],[\"用户组的权限用数字表达\",{\"1\":{\"1040\":1}}],[\"用户组\",{\"1\":{\"1037\":1,\"1040\":1}}],[\"用户组是具有相同系统权限的一组用户\",{\"1\":{\"935\":1}}],[\"用户使用该指令复制目录时\",{\"1\":{\"999\":1}}],[\"用户帐号\",{\"1\":{\"944\":1,\"947\":1,\"950\":1}}],[\"用户命令\",{\"0\":{\"941\":1}}],[\"用户注释信息\",{\"1\":{\"939\":1}}],[\"用户登录shell\",{\"1\":{\"939\":1}}],[\"用户主目录\",{\"1\":{\"939\":2}}],[\"用户全名\",{\"1\":{\"939\":1}}],[\"用户编号\",{\"1\":{\"939\":2}}],[\"用户名\",{\"1\":{\"939\":2,\"940\":2,\"941\":1,\"1118\":1}}],[\"用户手动创建的用户组从\",{\"1\":{\"937\":1}}],[\"用户和用户组操作\",{\"0\":{\"942\":1}}],[\"用户和用户组\",{\"0\":{\"934\":1,\"935\":1}}],[\"用户和文件\",{\"1\":{\"909\":1}}],[\"用户能够访问系统剪贴板并执行基本的剪贴板操作\",{\"1\":{\"344\":1}}],[\"用户通过屏幕看到的页面区域\",{\"1\":{\"201\":1}}],[\"用于预加载纹理而不是等到第一次渲染\",{\"1\":{\"2833\":1}}],[\"用于检查是否支持各种扩展\",{\"1\":{\"2798\":1}}],[\"用于检查给定对象是否为light类型\",{\"1\":{\"2857\":1}}],[\"用于检查给定对象是否为perspectivecamera类型\",{\"1\":{\"2576\":1}}],[\"用于检查给定对象是否为orthographiccamera类型\",{\"1\":{\"2534\":1}}],[\"用于检查给定对象是否为camera类型\",{\"1\":{\"2512\":1}}],[\"用于检查给定对象是否为buffergeometry类型\",{\"1\":{\"2289\":1}}],[\"用于控制整个表面的不透明度\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"用于控制变形目标的行为\",{\"1\":{\"2291\":1}}],[\"用于定义材质外观的对象\",{\"1\":{\"2599\":1,\"2619\":1,\"2697\":1,\"2746\":1,\"2777\":1}}],[\"用于定位互联网上资源\",{\"1\":{\"1677\":1}}],[\"用于立体视觉和景深效果的物体的距离\",{\"1\":{\"2574\":1}}],[\"用于tubegeometry或extradegeometry等几何图形\",{\"1\":{\"2343\":1}}],[\"用于创建法线贴图的纹理\",{\"1\":{\"2710\":1}}],[\"用于创建凹凸贴图的纹理\",{\"1\":{\"2700\":1}}],[\"用于创建包含插值方法的curve对象的抽象基类\",{\"1\":{\"2327\":1}}],[\"用于创建一个新的工作组\",{\"1\":{\"952\":1}}],[\"用于判断几何体的哪个部分需要被渲染\",{\"1\":{\"2285\":1}}],[\"用于单个接口的标识符\",{\"1\":{\"2214\":1}}],[\"用于动态web应用以减轻数据库负载\",{\"1\":{\"2061\":1}}],[\"用于解决简单闭环控制问题\",{\"1\":{\"1994\":1}}],[\"用于解析非相对模块名称的基目录\",{\"1\":{\"1454\":1}}],[\"用于构件之间交互建模的体系结构构造块及其支配这些交互的规则\",{\"1\":{\"1972\":1}}],[\"用于辅助决策\",{\"1\":{\"1865\":1}}],[\"用于建立对象之间的一对多依赖关系\",{\"1\":{\"1802\":1}}],[\"用于建立用户帐号\",{\"1\":{\"943\":1}}],[\"用于客户端存储大量结构化数据\",{\"1\":{\"1669\":1}}],[\"用于管理应用的状态\",{\"1\":{\"1764\":1}}],[\"用于管理\",{\"1\":{\"1577\":1}}],[\"用于管理块级元素\",{\"1\":{\"147\":1}}],[\"用于配置\",{\"1\":{\"1452\":1,\"1464\":1}}],[\"用于配置系统守护进程\",{\"1\":{\"1146\":1}}],[\"用于标识\",{\"1\":{\"1452\":1}}],[\"用于将所有属性变为可选\",{\"1\":{\"1372\":1}}],[\"用于将参数依次转化为数组项\",{\"1\":{\"678\":1}}],[\"用于调用\",{\"1\":{\"1273\":1}}],[\"用于调用变量的值\",{\"1\":{\"1089\":1}}],[\"用于返回初始状态\",{\"1\":{\"1273\":1}}],[\"用于返回与过滤器匹配的蓝牙设备\",{\"1\":{\"341\":1}}],[\"用于缓存函数本身\",{\"1\":{\"1211\":1}}],[\"用于缓存复杂函数的计算结果或者构造的值\",{\"1\":{\"1211\":1}}],[\"用于设置文件所有者和文件关联组的命令\",{\"1\":{\"1034\":1}}],[\"用于变更文件或目录的所属群组\",{\"1\":{\"1031\":1}}],[\"用于压缩文件\",{\"1\":{\"1017\":1,\"1020\":1}}],[\"用于查找文件里符合条件的字符串或正则表达式\",{\"1\":{\"1014\":1}}],[\"用于查看文件的内容\",{\"1\":{\"991\":1}}],[\"用于辨识文件类型\",{\"1\":{\"1011\":1}}],[\"用于比较文件的差异\",{\"1\":{\"1008\":1}}],[\"用于对匹配到的文件执行操作\",{\"1\":{\"1006\":1}}],[\"用于复制目录及其所有的子目录和文件\",{\"1\":{\"998\":1}}],[\"用于修改内置材质\",{\"1\":{\"2688\":1}}],[\"用于修改文件或者目录的时间属性\",{\"1\":{\"980\":1}}],[\"用于修改用户帐号\",{\"1\":{\"949\":1}}],[\"用于登入另一个群组\",{\"1\":{\"961\":1}}],[\"用于登入系统\",{\"1\":{\"927\":1}}],[\"用于更改群组识别码或名称\",{\"1\":{\"958\":1}}],[\"用于删除群组\",{\"1\":{\"955\":1}}],[\"用于删除用户帐号\",{\"1\":{\"946\":1}}],[\"用于显示系统中有哪些使用者正在上面\",{\"1\":{\"929\":1}}],[\"用于退出系统\",{\"1\":{\"925\":1}}],[\"用于用来重新启动计算机\",{\"1\":{\"921\":1}}],[\"用于启动系统\",{\"1\":{\"913\":1}}],[\"用于函数的\",{\"1\":{\"877\":1}}],[\"用于函数传参\",{\"0\":{\"635\":1}}],[\"用于其他情况\",{\"1\":{\"806\":1}}],[\"用于\",{\"1\":{\"806\":1}}],[\"用于指定编译的文件\",{\"1\":{\"1452\":1}}],[\"用于指定查找的条件\",{\"1\":{\"1006\":1}}],[\"用于指定包含行结束符\",{\"1\":{\"388\":1}}],[\"用于指出数字类型中的错误情况\",{\"1\":{\"656\":1}}],[\"用于表示一个独一无二的值\",{\"1\":{\"653\":1}}],[\"用于具有\",{\"0\":{\"636\":1}}],[\"用于展开字符串\",{\"0\":{\"634\":1}}],[\"用于展开对象\",{\"0\":{\"633\":1}}],[\"用于展开数组\",{\"0\":{\"631\":1}}],[\"用于从另一个模块中导入所有命名导出\",{\"1\":{\"470\":1}}],[\"用于识别无法访问的对象\",{\"1\":{\"425\":1}}],[\"用于读取文件并提取其内容以供进一步使用\",{\"1\":{\"393\":1}}],[\"用于在某些情况下强制同步地执行\",{\"1\":{\"1203\":1}}],[\"用于在指定目录下查找文件和目录\",{\"1\":{\"1005\":1}}],[\"用于在\",{\"1\":{\"339\":1}}],[\"用于通过给定索引来获取数组元素\",{\"1\":{\"332\":1}}],[\"用于把单一的错误集合在一起\",{\"1\":{\"328\":1}}],[\"用于移除字符串首尾空白符\",{\"1\":{\"307\":1}}],[\"用于尾部补全\",{\"1\":{\"294\":1,\"548\":1}}],[\"用于头部补全\",{\"1\":{\"293\":1,\"547\":1}}],[\"用5填充索引大于等于\",{\"1\":{\"287\":1,\"684\":1}}],[\"用5填充索引大于等于1且小于等于3的元素\",{\"1\":{\"287\":1,\"684\":1}}],[\"用5填充索引大于等于3的元素\",{\"1\":{\"287\":1,\"684\":1}}],[\"用5填充整个数组\",{\"1\":{\"287\":1,\"684\":1}}],[\"用逗号分割\",{\"1\":{\"260\":1}}],[\"用反引号``来标识\",{\"1\":{\"255\":1}}],[\"用\",{\"1\":{\"206\":1,\"507\":1,\"565\":1,\"606\":1,\"721\":2,\"729\":1,\"731\":1,\"817\":1,\"1233\":1,\"1478\":1,\"2177\":1}}],[\"用来调度存储在animationclips中的动画\",{\"1\":{\"2484\":1}}],[\"用来连接过个部件并为之提供信息交换通路\",{\"1\":{\"2183\":1}}],[\"用来进行cpu调试的常用接口\",{\"1\":{\"2176\":1}}],[\"用来临时存放双向通信的数据\",{\"1\":{\"1713\":1}}],[\"用来提升网页首屏渲染速度\",{\"1\":{\"1663\":1}}],[\"用来存储所有组件的共享状态\",{\"1\":{\"1765\":1}}],[\"用来存储已经拷贝的数组\",{\"1\":{\"767\":1}}],[\"用来存放watcher的\",{\"1\":{\"1571\":1}}],[\"用来存放全局的配置\",{\"1\":{\"1484\":1}}],[\"用来装饰类的方法\",{\"1\":{\"1468\":1}}],[\"用来装饰类的属性\",{\"1\":{\"1467\":1}}],[\"用来控制输出目录结构\",{\"1\":{\"1454\":1}}],[\"用来表示原始类型\",{\"1\":{\"1431\":1}}],[\"用来描述拥有明确成员的实用的集合\",{\"1\":{\"1428\":1}}],[\"用来得到一个函数的返回值类型\",{\"1\":{\"1377\":1}}],[\"用来遍历枚举类型\",{\"1\":{\"1367\":1}}],[\"用来声明变量类型\",{\"1\":{\"1109\":1}}],[\"用来声明异步函数\",{\"1\":{\"594\":1}}],[\"用来说明一个类具有相应的优先级\",{\"1\":{\"1040\":1}}],[\"用来显示其他命令的输出\",{\"1\":{\"983\":1}}],[\"用来显示网页的那部分区域\",{\"1\":{\"201\":1}}],[\"用来创建一个\",{\"1\":{\"895\":1}}],[\"用来绑定参数函数内部的\",{\"1\":{\"875\":1}}],[\"用来绑定回调函数内部\",{\"1\":{\"712\":1,\"872\":1}}],[\"用来标识当前\",{\"1\":{\"817\":1}}],[\"用来去重dep\",{\"1\":{\"1561\":1}}],[\"用来去重\",{\"1\":{\"767\":1}}],[\"用来做\",{\"1\":{\"764\":1}}],[\"用来判断哪个值应该排在前面\",{\"1\":{\"698\":1}}],[\"用来规定排序顺序\",{\"1\":{\"698\":1}}],[\"用来指定要使用的分隔符\",{\"1\":{\"690\":1}}],[\"用来操作一个表达式\",{\"1\":{\"601\":1}}],[\"用来生成内存的视图\",{\"1\":{\"397\":2}}],[\"用来阻止默认事件\",{\"1\":{\"392\":1}}],[\"用来直接访问描述\",{\"1\":{\"316\":1}}],[\"用来更为方便的进行指数计算\",{\"1\":{\"290\":1}}],[\"用来解决命名冲突的问题\",{\"1\":{\"268\":1}}],[\"用来简化函数的定义\",{\"1\":{\"259\":1}}],[\"用来设置视口的一些行为\",{\"1\":{\"202\":1}}],[\"用这种方法就会把多的部分裁切掉\",{\"1\":{\"184\":1}}],[\"给定url\",{\"1\":{\"2476\":1}}],[\"给定范围\",{\"1\":{\"2340\":1}}],[\"给这个元素添加属性\",{\"1\":{\"1528\":1}}],[\"给基本类型起别名通常没什么用\",{\"1\":{\"1341\":1}}],[\"给子组件\",{\"1\":{\"1200\":1}}],[\"给变量设定类型属性\",{\"1\":{\"1109\":1}}],[\"给对象添加一个可枚举的\",{\"1\":{\"884\":1}}],[\"给对象添加一个不可枚举的\",{\"1\":{\"884\":1}}],[\"给\",{\"1\":{\"731\":1,\"829\":1,\"863\":1,\"1357\":1,\"1514\":1}}],[\"给数组添加了几个方法来使它像栈一样\",{\"1\":{\"691\":1}}],[\"给覆盖了\",{\"1\":{\"658\":1}}],[\"给目标\",{\"1\":{\"558\":1}}],[\"给其\",{\"1\":{\"239\":1}}],[\"给父层元素绑定事件\",{\"1\":{\"237\":1}}],[\"给父元素使用\",{\"0\":{\"184\":1}}],[\"给即将删去的元素解绑事件\",{\"1\":{\"236\":1}}],[\"给元素的事件行为绑定方法\",{\"1\":{\"231\":1}}],[\"给元素设置百分比\",{\"1\":{\"205\":1}}],[\"给浮动元素的父元素添加高度\",{\"0\":{\"181\":1}}],[\"给你的话\",{\"1\":{\"118\":1}}],[\"清理所有标记为\",{\"1\":{\"1646\":1}}],[\"清理浮动\",{\"0\":{\"180\":1}}],[\"清屏\",{\"1\":{\"1082\":1}}],[\"清零\",{\"1\":{\"607\":1}}],[\"清空所有的\",{\"1\":{\"2302\":1}}],[\"清空标识id\",{\"1\":{\"1493\":1}}],[\"清空watcher队列\",{\"1\":{\"1493\":1}}],[\"清空微任务队列的手法比较特别\",{\"1\":{\"383\":1}}],[\"清空\",{\"1\":{\"272\":1}}],[\"清空集合\",{\"1\":{\"271\":2}}],[\"清除模板缓存\",{\"1\":{\"2815\":1}}],[\"清除深度缓存\",{\"1\":{\"2814\":1}}],[\"清除颜色缓存\",{\"1\":{\"2813\":1}}],[\"清除任何由\",{\"1\":{\"2543\":1,\"2581\":1}}],[\"清除阶段老生代垃圾回收器会直接将非活动对象\",{\"1\":{\"1648\":1}}],[\"清除阶段则把没有标记\",{\"1\":{\"1646\":1}}],[\"清除函数的作用\",{\"0\":{\"1245\":1}}],[\"清除历史命令\",{\"1\":{\"1083\":1}}],[\"清除缓存目录下旧的\",{\"1\":{\"1073\":1}}],[\"清除缓存目录下的\",{\"1\":{\"1073\":1}}],[\"清除缓存目录下的软件包及旧的\",{\"1\":{\"1073\":1}}],[\"清除缓存目录下的软件包\",{\"1\":{\"1073\":1}}],[\"清除缓存命令\",{\"1\":{\"1073\":1}}],[\"清除\",{\"1\":{\"272\":1,\"436\":1,\"1646\":1}}],[\"清除浮动\",{\"0\":{\"153\":1,\"177\":1},\"1\":{\"149\":1},\"2\":{\"187\":1}}],[\"清除定时器\",{\"0\":{\"1246\":1},\"1\":{\"128\":1}}],[\"其可以作为十六进制字符串传递\",{\"1\":{\"2697\":1}}],[\"其可以添加两个参数\",{\"1\":{\"1604\":1}}],[\"其编码了材质的颜色与明暗\",{\"1\":{\"2695\":1}}],[\"其默认值为35\",{\"1\":{\"2572\":1}}],[\"其默认值为1\",{\"1\":{\"2540\":1,\"2579\":1}}],[\"其默认值为null\",{\"1\":{\"2539\":1}}],[\"其默认值为0\",{\"1\":{\"2536\":1}}],[\"其默认值为2000\",{\"1\":{\"2533\":1}}],[\"其默认值才会生效\",{\"1\":{\"253\":1}}],[\"其z轴坐标为负\",{\"1\":{\"2520\":1}}],[\"其功能是处理并跟踪已加载和待处理的数据\",{\"1\":{\"2461\":1}}],[\"其本身会存储数据\",{\"1\":{\"2228\":1}}],[\"其本意是用来描述元素内容的\",{\"1\":{\"216\":1}}],[\"其开发还应满足某些领域对设计和代码审定\",{\"1\":{\"2177\":1}}],[\"其典型情况是程序顺序执行\",{\"1\":{\"2141\":1}}],[\"其附近的存储单元也将被访问\",{\"1\":{\"2141\":1}}],[\"其数据交互是无需信任的\",{\"1\":{\"2132\":1}}],[\"其访问客体控制的安全规则如下\",{\"1\":{\"2119\":1}}],[\"其安全规则如下\",{\"1\":{\"2118\":1}}],[\"其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的性能瓶颈和环节\",{\"1\":{\"2081\":1}}],[\"其用户与提供实际服务的计算资源是相分离的\",{\"1\":{\"2046\":1}}],[\"其优点包括\",{\"1\":{\"2032\":1}}],[\"其自由时差必然为零\",{\"1\":{\"1955\":1}}],[\"其自由时差与总时差相等\",{\"1\":{\"1955\":1}}],[\"其核心是三个非线形的\",{\"1\":{\"1904\":1}}],[\"其方法的外观相同\",{\"1\":{\"1784\":1}}],[\"其标记流程即在执行一次完整的\",{\"1\":{\"1650\":1}}],[\"其操作仍是一个\",{\"1\":{\"1646\":1}}],[\"其命令合适如下\",{\"1\":{\"1637\":1}}],[\"其命令格式如下\",{\"1\":{\"1618\":1}}],[\"其组合内容表示项目运行时的结构内容\",{\"1\":{\"1454\":1}}],[\"其余的成员会从\",{\"1\":{\"1407\":1}}],[\"其余参数是源对象\",{\"1\":{\"755\":1}}],[\"其返回类型是联合类型\",{\"1\":{\"1366\":2}}],[\"其内容由查询定义\",{\"1\":{\"2226\":1}}],[\"其内容有一个或多个文件名称时\",{\"1\":{\"1012\":1}}],[\"其内部和外部信息互联和共享\",{\"1\":{\"1890\":1}}],[\"其内部含有某个领域具有专家水平的大量知识与经验\",{\"1\":{\"1866\":1}}],[\"其内部定义的变量就会从词法环境的栈顶弹出\",{\"1\":{\"510\":1}}],[\"其内部已经对将\",{\"1\":{\"360\":1}}],[\"其作用等于\",{\"1\":{\"998\":1}}],[\"其它的就是非主属性\",{\"1\":{\"2240\":1,\"2245\":1}}],[\"其它的目录下用\",{\"1\":{\"1002\":1}}],[\"其它结点更新数据\",{\"1\":{\"2133\":1}}],[\"其它任何地方不能访问\",{\"1\":{\"1390\":1}}],[\"其它任何地方外边都可以访问\",{\"1\":{\"1390\":1}}],[\"其它用户权限位的数字相加的总和\",{\"1\":{\"1040\":1}}],[\"其它用户的权限数字表达\",{\"1\":{\"1040\":1}}],[\"其它用户\",{\"1\":{\"1037\":1}}],[\"其它有用的命令\",{\"1\":{\"989\":1}}],[\"其它导航\",{\"1\":{\"989\":1}}],[\"其适用语法如下\",{\"1\":{\"701\":1}}],[\"其判断规则如下\",{\"1\":{\"627\":1}}],[\"其存在两个属性\",{\"1\":{\"587\":1}}],[\"其输出结果就和预期是一致的\",{\"1\":{\"507\":1}}],[\"其输出结果如下\",{\"1\":{\"431\":1}}],[\"其值的有效范围介于0和far\",{\"1\":{\"2536\":1}}],[\"其值为\",{\"1\":{\"1307\":1}}],[\"其值为1\",{\"1\":{\"608\":1}}],[\"其值是\",{\"1\":{\"505\":1}}],[\"其值是javascript\",{\"1\":{\"505\":1}}],[\"其值就保存在变量指向的那个内存地址\",{\"1\":{\"247\":1}}],[\"其生命周期伴随着页面的生命周期\",{\"1\":{\"501\":1}}],[\"其包含一个执行加法操作的函数\",{\"1\":{\"463\":1}}],[\"其包含两个参数\",{\"1\":{\"458\":1}}],[\"其包含三个参数\",{\"1\":{\"458\":1}}],[\"其执行上下文和变量环境早已消失\",{\"1\":{\"431\":1}}],[\"其执行上下文的\",{\"1\":{\"350\":1}}],[\"其参数接受一个\",{\"1\":{\"576\":1}}],[\"其参数和返回值如下\",{\"1\":{\"398\":1}}],[\"其参数如下\",{\"1\":{\"287\":1,\"363\":1,\"684\":1,\"685\":1,\"702\":1,\"703\":1}}],[\"其有效值范围是0到当前摄像机far\",{\"1\":{\"2577\":1}}],[\"其有三个参数\",{\"1\":{\"389\":1,\"409\":1}}],[\"其有两个参数\",{\"1\":{\"388\":1,\"465\":1}}],[\"其正在创建一个类似文件的对象\",{\"1\":{\"388\":1}}],[\"其次由于写屏障机制的成本\",{\"1\":{\"1650\":1}}],[\"其次我们还做了一层数据代理\",{\"1\":{\"1533\":1}}],[\"其次\",{\"1\":{\"352\":1,\"1535\":1}}],[\"其次才会执行自己的默认行为\",{\"1\":{\"239\":1}}],[\"其运行在执行上下文中\",{\"1\":{\"350\":1}}],[\"其使用语法如下\",{\"1\":{\"284\":1,\"690\":1,\"698\":1,\"699\":1,\"702\":1,\"703\":1,\"705\":1,\"718\":1}}],[\"其语法形式如下\",{\"1\":{\"692\":1,\"693\":1,\"696\":1}}],[\"其语法如下\",{\"1\":{\"281\":1,\"289\":1,\"320\":1,\"389\":1,\"409\":1,\"517\":1,\"520\":1,\"524\":1,\"525\":1,\"526\":1,\"528\":1,\"529\":1,\"530\":1,\"535\":1,\"536\":1,\"537\":1,\"550\":1,\"551\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"881\":1}}],[\"其语法和上面的includes\",{\"1\":{\"523\":1}}],[\"其语法和上面的\",{\"1\":{\"280\":1}}],[\"其实本质就是一个构造函数\",{\"1\":{\"1557\":1}}],[\"其实这就是一个\",{\"1\":{\"1707\":1}}],[\"其实这些大写字母并没有什么本质的区别\",{\"1\":{\"1363\":1}}],[\"其实这也就是暂时性死区的本质\",{\"1\":{\"511\":1}}],[\"其实也不是\",{\"1\":{\"901\":1}}],[\"其实也能知道多个请求发出去之后\",{\"1\":{\"323\":1,\"576\":1}}],[\"其实他们有一个共同点\",{\"1\":{\"867\":1}}],[\"其实上面这两个正常情况下是无法通信的\",{\"1\":{\"867\":1}}],[\"其实不止一个\",{\"1\":{\"860\":1}}],[\"其实是有的\",{\"1\":{\"859\":1}}],[\"其实是一个对象\",{\"1\":{\"731\":1}}],[\"其实同样也可以设置成\",{\"1\":{\"739\":1}}],[\"其实就是指建立一个tcp连接时\",{\"1\":{\"1726\":1}}],[\"其实就是怎样发现这些不可达的对象\",{\"1\":{\"1646\":1}}],[\"其实就是在数据被访问的时候\",{\"1\":{\"1560\":1}}],[\"其实就是一个构造函数\",{\"1\":{\"1533\":1}}],[\"其实就是一个语法糖\",{\"1\":{\"495\":1}}],[\"其实就是对数组的每一项进行处理\",{\"1\":{\"736\":1}}],[\"其实就是将一个嵌套多层的数组\",{\"1\":{\"734\":1}}],[\"其实赋值操作符有很多种\",{\"1\":{\"638\":1}}],[\"其实在将字符串分割成数组时\",{\"1\":{\"526\":1}}],[\"其实多数场景就是基于data\",{\"1\":{\"414\":1}}],[\"其实blob\",{\"1\":{\"413\":1}}],[\"其实输出的仍然是全局对象\",{\"1\":{\"363\":1}}],[\"其实导出的是default变量\",{\"1\":{\"276\":1}}],[\"其实\",{\"1\":{\"247\":1,\"286\":1,\"352\":1,\"365\":1,\"465\":1,\"510\":1,\"511\":1,\"589\":1,\"591\":1,\"594\":1,\"678\":1,\"866\":1}}],[\"其中数据可供存取\",{\"1\":{\"1883\":1}}],[\"其中数组\",{\"1\":{\"656\":1}}],[\"其中ack报文是用来应答的\",{\"1\":{\"1729\":1}}],[\"其中需要注意的点\",{\"1\":{\"1689\":1}}],[\"其中包括\",{\"1\":{\"1689\":1}}],[\"其中包含扩展的详细信息\",{\"1\":{\"2798\":1}}],[\"其中包含完整系统并有嵌入软件的全部内容\",{\"1\":{\"2179\":1}}],[\"其中包含了自己剩余的缓冲区大小\",{\"1\":{\"1723\":1}}],[\"其中包含\",{\"1\":{\"1583\":1}}],[\"其中包含着事件的详细信息\",{\"1\":{\"558\":1}}],[\"其中最常见的类型是\",{\"1\":{\"1677\":1}}],[\"其中最核心的依赖是浏览器提供的\",{\"1\":{\"813\":1}}],[\"其中一种情况就是闭包\",{\"1\":{\"1645\":1}}],[\"其中一个请求耗时较长\",{\"1\":{\"1311\":1}}],[\"其中一个用途就是可以进行浅拷贝\",{\"1\":{\"755\":1}}],[\"其中end就是最近的提交\",{\"1\":{\"1637\":1}}],[\"其中n是一个正整数\",{\"1\":{\"1631\":1}}],[\"其中已跟踪状态可以细分为以下三种状态\",{\"1\":{\"1584\":1}}],[\"其中初始化\",{\"1\":{\"1514\":1}}],[\"其中某些更新\",{\"1\":{\"1308\":1}}],[\"其中有一个\",{\"1\":{\"1210\":1}}],[\"其中实现的结果和前一段代码的效果其实是一样的\",{\"1\":{\"901\":1}}],[\"其中冒号前面的是源对象中的属性\",{\"1\":{\"838\":1}}],[\"其中先把传入的数组转换成字符串\",{\"1\":{\"740\":1}}],[\"其中仍然采用了将\",{\"1\":{\"740\":1}}],[\"其中两个参数\",{\"1\":{\"718\":1,\"719\":1,\"881\":1}}],[\"其中元素是数组中当前搜索的元素\",{\"1\":{\"709\":1}}],[\"其中的\",{\"1\":{\"578\":1,\"1730\":1}}],[\"其中的标签应该都是语义化地定义了文档的结构\",{\"1\":{\"215\":1}}],[\"其中第一个丢失\",{\"1\":{\"1727\":1}}],[\"其中第一个参数是一个\",{\"1\":{\"403\":1}}],[\"其中第一个参数是一个数字\",{\"1\":{\"293\":1,\"547\":1}}],[\"其中第二种和第三种都是用\",{\"1\":{\"732\":1}}],[\"其中第二个参数可以省略\",{\"1\":{\"571\":1}}],[\"其中参数\",{\"1\":{\"525\":1,\"690\":1,\"698\":1,\"701\":1}}],[\"其中前两个方法得到的指定元素的索引值\",{\"1\":{\"519\":1}}],[\"其中这个\",{\"1\":{\"383\":1}}],[\"其中libuv引擎中的事件循环分为\",{\"1\":{\"379\":1}}],[\"其中每个元素都是回调函数的结果\",{\"1\":{\"312\":1}}],[\"其中\",{\"1\":{\"246\":1,\"320\":1,\"343\":1,\"379\":1,\"445\":2,\"588\":1,\"650\":1,\"739\":1,\"806\":1,\"973\":1,\"1029\":1,\"1194\":1,\"1234\":1,\"1373\":1,\"1443\":1,\"1513\":1,\"1600\":1,\"1607\":1,\"1720\":1}}],[\"其宽度不再是占满一行\",{\"1\":{\"178\":1}}],[\"其他关系的主键或空值\",{\"1\":{\"2241\":1}}],[\"其他部件\",{\"1\":{\"2176\":1}}],[\"其他人无法伪造\",{\"1\":{\"2132\":1}}],[\"其他原则\",{\"1\":{\"1856\":1}}],[\"其他浏览器都支持\",{\"1\":{\"1737\":1}}],[\"其他参数\",{\"1\":{\"1689\":1}}],[\"其他标志\",{\"0\":{\"1631\":1}}],[\"其他开发人员无法提交他们的代码\",{\"1\":{\"1581\":1}}],[\"其他选项有three\",{\"1\":{\"2675\":1}}],[\"其他选项\",{\"1\":{\"1454\":1}}],[\"其他类型\",{\"0\":{\"1404\":1}}],[\"其他类型数据转换为\",{\"0\":{\"662\":1,\"663\":1,\"664\":1}}],[\"其他路由\",{\"1\":{\"1312\":1}}],[\"其他组件和逻辑\",{\"1\":{\"1267\":1}}],[\"其他代码\",{\"1\":{\"1236\":1}}],[\"其他代码暂时是无法执行的\",{\"1\":{\"555\":1}}],[\"其他配置文件\",{\"0\":{\"1122\":1}}],[\"其他符号\",{\"0\":{\"1089\":1}}],[\"其他地方都是不能访问到它的\",{\"1\":{\"897\":1}}],[\"其他遍历方法\",{\"0\":{\"887\":1}}],[\"其他情况\",{\"1\":{\"806\":1}}],[\"其他情况会返回\",{\"1\":{\"791\":1}}],[\"其他情况都会返回\",{\"1\":{\"790\":1}}],[\"其他操作\",{\"0\":{\"1680\":1}}],[\"其他操作也类似\",{\"1\":{\"727\":1}}],[\"其他操作符\",{\"0\":{\"629\":1}}],[\"其他方法强调集中办公\",{\"1\":{\"1904\":1}}],[\"其他方法\",{\"0\":{\"717\":1}}],[\"其他两个方法则会从数组开始元素向后进行搜索\",{\"1\":{\"708\":1}}],[\"其他两列的背景并不会自动填充\",{\"1\":{\"159\":1}}],[\"其他运算符都会把运算子自动转成数值\",{\"1\":{\"669\":1}}],[\"其他的都是\",{\"1\":{\"664\":1,\"669\":1}}],[\"其他判断都正确\",{\"1\":{\"656\":1}}],[\"其他语言最后一步输出的值应该是\",{\"1\":{\"507\":1}}],[\"其他语言则普遍支持块级作用域\",{\"1\":{\"501\":1}}],[\"其他对象的属性也会改变\",{\"1\":{\"484\":1}}],[\"其他用法\",{\"0\":{\"472\":1}}],[\"其他元素的初始值都是\",{\"1\":{\"403\":1}}],[\"其他元素的几何属性和位置也会因此受到影响\",{\"1\":{\"223\":1}}],[\"其他解构赋值\",{\"0\":{\"254\":1}}],[\"其他所有的属性值都可以类似这样计算\",{\"1\":{\"207\":1}}],[\"其他蓝牙相关\",{\"1\":{\"117\":1}}],[\"其他\",{\"0\":{\"2888\":1},\"2\":{\"95\":1,\"96\":1}}],[\"其他时间为false\",{\"1\":{\"39\":1}}],[\"会记录\",{\"1\":{\"2680\":1}}],[\"会通知所有订阅者进行相应的更新操作\",{\"1\":{\"1802\":1}}],[\"会增加一定的开销\",{\"1\":{\"1797\":1}}],[\"会一直等着服务器发过来的新的数据流\",{\"1\":{\"1737\":1}}],[\"会一直保存在内存中\",{\"1\":{\"430\":1}}],[\"会连续不断地发送过来\",{\"1\":{\"1737\":1}}],[\"会缓冲到⼀起作⼀次发送\",{\"1\":{\"1730\":1}}],[\"会告诉应用层要释放\",{\"1\":{\"1729\":1}}],[\"会发送\",{\"1\":{\"1728\":1}}],[\"会发送一个\",{\"1\":{\"1726\":1}}],[\"会发生读取和写入操作\",{\"1\":{\"425\":1}}],[\"会以自己的\",{\"1\":{\"1726\":1}}],[\"会依次发送窗口内的所有报文段\",{\"1\":{\"1724\":1}}],[\"会依次输出\",{\"1\":{\"241\":1}}],[\"会阻塞后面的\",{\"1\":{\"1707\":1}}],[\"会阻塞\",{\"1\":{\"1707\":1}}],[\"会阻塞之后的代码执行\",{\"1\":{\"555\":1}}],[\"会向检查域名是否存在本地的\",{\"1\":{\"1684\":1}}],[\"会向下继续搜寻下一个名称为vbird的字符串\",{\"1\":{\"1062\":1}}],[\"会向下取整\",{\"1\":{\"282\":1,\"545\":1}}],[\"会话级别的浏览器存储\",{\"1\":{\"1667\":1}}],[\"会带来资源耗费严重\",{\"1\":{\"1762\":1}}],[\"会带来巨大的性能浪费\",{\"1\":{\"1660\":1}}],[\"会带有参数\",{\"1\":{\"318\":1}}],[\"会变成一个全局变量\",{\"1\":{\"1653\":1}}],[\"会启动了多个线程来负责新生代中的垃圾清理操作\",{\"1\":{\"1649\":1}}],[\"会定期对那些不再使用的变量\",{\"1\":{\"1645\":1}}],[\"会拒绝删除本地分支\",{\"1\":{\"1595\":1}}],[\"会匹配到栈顶<span>元素对应的ast\",{\"1\":{\"1550\":1}}],[\"会怎么处理来显示最新的值呢\",{\"1\":{\"1475\":1}}],[\"会怎样呢\",{\"1\":{\"578\":1}}],[\"会给一个类型起个新名字\",{\"1\":{\"1341\":1}}],[\"会给变量设置默认值为\",{\"1\":{\"500\":1}}],[\"会中断当前的渲染并处理新的更新\",{\"1\":{\"1237\":1}}],[\"会实现\",{\"1\":{\"1223\":1}}],[\"会立马更新\",{\"1\":{\"1200\":1}}],[\"会合并相邻的\",{\"1\":{\"1199\":1}}],[\"会确保在调用函数之前\",{\"1\":{\"1194\":2}}],[\"会比较目录中相同文件名的文件\",{\"1\":{\"1008\":1}}],[\"会为其创建一个备份\",{\"1\":{\"1001\":1}}],[\"会拿到父级作用域中的变量\",{\"1\":{\"901\":1}}],[\"会针对这个变量形成一个封闭的块级作用域\",{\"1\":{\"898\":1}}],[\"会针对每一个元素执行提供的函数\",{\"1\":{\"713\":1}}],[\"会尝试在当前任务中同步地处理更新\",{\"1\":{\"1203\":1}}],[\"会尝试使用\",{\"1\":{\"806\":1}}],[\"会尝试查找\",{\"1\":{\"463\":1}}],[\"会转化为\",{\"1\":{\"791\":1,\"798\":2}}],[\"会转换失败\",{\"1\":{\"768\":1}}],[\"会遍历\",{\"1\":{\"1514\":1}}],[\"会遍历对象的整个原型链\",{\"1\":{\"719\":1}}],[\"会遍历回调队列并同步执行\",{\"1\":{\"379\":1}}],[\"会使用不同的第三方登录方式\",{\"1\":{\"1755\":1}}],[\"会使用\",{\"1\":{\"1679\":1}}],[\"会使用这个新状态对象合并到当前状态中\",{\"1\":{\"1194\":1}}],[\"会使用全等\",{\"1\":{\"708\":1}}],[\"会使用默认的绑定规则\",{\"1\":{\"355\":1}}],[\"会改变原数组\",{\"1\":{\"698\":1}}],[\"会把所有进程的id号写到此文件\",{\"1\":{\"1150\":1}}],[\"会把识别的设备挂载到这个目录下\",{\"1\":{\"913\":1}}],[\"会把对象的值转换为字符串\",{\"1\":{\"782\":1}}],[\"会把参数变成数组里的一项\",{\"1\":{\"678\":1}}],[\"会把每个key\",{\"1\":{\"636\":1}}],[\"会随着数据的增删而改变\",{\"1\":{\"674\":1}}],[\"会首先检索其在栈中的地址\",{\"1\":{\"651\":1}}],[\"会先寻找所有的p标签然后判断它的父元素是否为div\",{\"1\":{\"1706\":1}}],[\"会先进行\",{\"1\":{\"1690\":1}}],[\"会先判断执行条件\",{\"1\":{\"888\":1}}],[\"会先判断是否在对比\",{\"1\":{\"627\":1}}],[\"会先将参数转为对象然后返回\",{\"1\":{\"755\":1}}],[\"会先将操作数转化为数值\",{\"1\":{\"605\":1}}],[\"会直接返回true\",{\"1\":{\"625\":1}}],[\"会直接跳过\",{\"1\":{\"311\":1}}],[\"会遵循以下规则\",{\"1\":{\"624\":1,\"625\":1}}],[\"会得到\",{\"1\":{\"611\":1}}],[\"会对资源进行分析\",{\"1\":{\"1699\":1}}],[\"会对连接进行处理\",{\"1\":{\"1696\":1}}],[\"会对数据进行分割\",{\"1\":{\"1690\":1}}],[\"会对参加运算的一个数据按二进制进行取反运算\",{\"1\":{\"609\":1}}],[\"会对参加运算的两个数据按二进制位进行\",{\"1\":{\"610\":1}}],[\"会对参加运算的两个数据按二进制位进行与运算\",{\"1\":{\"607\":1}}],[\"会对参加运算的两个对象按二进制位进行或运算\",{\"1\":{\"608\":1}}],[\"会对该位置之前的数据进行切片\",{\"1\":{\"389\":1}}],[\"会是这样\",{\"1\":{\"596\":1}}],[\"会生产出定制化的函数\",{\"1\":{\"590\":1}}],[\"会生成如下执行上下文\",{\"1\":{\"507\":1}}],[\"会打印\",{\"1\":{\"568\":1}}],[\"会调用每个值的\",{\"1\":{\"689\":1}}],[\"会调用\",{\"1\":{\"568\":1}}],[\"会让系统更稳定\",{\"1\":{\"909\":1}}],[\"会让\",{\"1\":{\"567\":1}}],[\"会接收一个执行器\",{\"1\":{\"565\":1}}],[\"会造成代码难以理解\",{\"1\":{\"562\":1}}],[\"会大量使用异步\",{\"1\":{\"555\":1}}],[\"会根据上下文环境自动推断出变量的类型\",{\"1\":{\"1442\":1}}],[\"会根据\",{\"1\":{\"550\":1}}],[\"会更方便\",{\"1\":{\"518\":1}}],[\"会优先从当前的执行上下文中查找变量\",{\"1\":{\"505\":1}}],[\"会统计声明了哪些变量\",{\"1\":{\"502\":1}}],[\"会进行统一转化\",{\"1\":{\"1514\":1}}],[\"会进行语法检查和预编译\",{\"1\":{\"502\":1}}],[\"会进入\",{\"1\":{\"383\":1}}],[\"会提升\",{\"1\":{\"467\":1}}],[\"会自动分配\",{\"1\":{\"2679\":1}}],[\"会自动调用父类的construct\",{\"1\":{\"495\":1}}],[\"会自动调用这个函数\",{\"1\":{\"495\":1}}],[\"会自动为\",{\"1\":{\"463\":1}}],[\"会自动按照\",{\"1\":{\"453\":1}}],[\"会加载\",{\"1\":{\"462\":1}}],[\"会等待回调被加入到队列中并立即执行回调\",{\"1\":{\"379\":1}}],[\"会等于第一个参数中的\",{\"1\":{\"258\":1}}],[\"会出现什么情况\",{\"1\":{\"1366\":1}}],[\"会出现以下情况\",{\"1\":{\"379\":2}}],[\"会出现不能被整除或者出现小数的情况比如\",{\"1\":{\"207\":1}}],[\"会交给定时器触发线程去执行\",{\"1\":{\"376\":1}}],[\"会将\",{\"1\":{\"1201\":1}}],[\"会将之前的state和props传递给函数\",{\"1\":{\"1196\":1}}],[\"会将文件\",{\"1\":{\"1009\":1}}],[\"会将这些更新批量处理\",{\"1\":{\"1199\":1}}],[\"会将这些调用合并成一个更新操作\",{\"1\":{\"1199\":1}}],[\"会将这些值转换为\",{\"1\":{\"667\":1}}],[\"会将这个初始值放在数组的最后一位\",{\"1\":{\"877\":1}}],[\"会将逗号之间相应索引位置的值当成空位\",{\"1\":{\"679\":1}}],[\"会将其转化为数值\",{\"1\":{\"618\":1,\"619\":1}}],[\"会将数值的32位全部右移\",{\"1\":{\"614\":1}}],[\"会将数值的32位全部右移若干位\",{\"1\":{\"613\":1}}],[\"会将运算对象的各二进制位全部左移若干位\",{\"1\":{\"611\":1}}],[\"会将他们转化为数值\",{\"1\":{\"602\":1}}],[\"会将此任务交给其他线程来执行\",{\"1\":{\"376\":1}}],[\"会将同步的代码按照顺序排在执行栈中\",{\"1\":{\"375\":1}}],[\"会创建一个新canvas\",{\"1\":{\"2788\":1}}],[\"会创建一个执行上下文\",{\"1\":{\"352\":1}}],[\"会创建\",{\"1\":{\"505\":1}}],[\"会创建自己的微任务队列\",{\"1\":{\"376\":1}}],[\"会被强制改为灰色\",{\"1\":{\"1650\":1}}],[\"会被自动合并为单个接口\",{\"1\":{\"1344\":1}}],[\"会被自动指向\",{\"1\":{\"365\":1}}],[\"会被初始化为\",{\"1\":{\"1283\":1}}],[\"会被存放在词法环境的一个单独的区域中\",{\"1\":{\"510\":1}}],[\"会被所有的示例对象所共享\",{\"1\":{\"485\":1}}],[\"会被缓存\",{\"1\":{\"449\":1,\"817\":1}}],[\"会被移出执⾏上下⽂栈\",{\"1\":{\"351\":1}}],[\"会传递给\",{\"1\":{\"363\":1}}],[\"会执行以下操作\",{\"1\":{\"359\":1}}],[\"会指向\",{\"1\":{\"354\":1}}],[\"会关闭其他应用程序以及浏览器和系统\",{\"1\":{\"339\":1}}],[\"会抛出异常\",{\"1\":{\"326\":1}}],[\"会在\",{\"1\":{\"1707\":1,\"2744\":1}}],[\"会在每一行的前缀显示该行的行号\",{\"1\":{\"1068\":1}}],[\"会在输出的每一行前加上行号\",{\"1\":{\"983\":1}}],[\"会在头部或尾部补全\",{\"1\":{\"292\":1,\"546\":1}}],[\"会在子元素和父元素之间传播\",{\"1\":{\"234\":1}}],[\"会从索引\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"会忽略操作数的返回值\",{\"1\":{\"646\":1}}],[\"会忽略默认导出\",{\"1\":{\"470\":1}}],[\"会忽略\",{\"1\":{\"275\":1,\"277\":1}}],[\"会导致其他对象的这个属性也会被修改\",{\"1\":{\"484\":1}}],[\"会导致回流\",{\"1\":{\"226\":1}}],[\"会导出默认输出\",{\"1\":{\"274\":1}}],[\"会报错fn不是一个函数\",{\"1\":{\"500\":1}}],[\"会报错\",{\"1\":{\"255\":1,\"282\":1,\"545\":1,\"662\":1,\"755\":1,\"898\":1,\"1390\":3}}],[\"会独占一行\",{\"1\":{\"178\":1}}],[\"会返回所有属性\",{\"1\":{\"885\":1}}],[\"会返回一个布尔值\",{\"1\":{\"876\":1}}],[\"会返回一条消息给你\",{\"1\":{\"125\":1}}],[\"会返回数组中所有可枚举的属性\",{\"1\":{\"719\":1}}],[\"会返回连接两个或多个字符串的新字符串\",{\"1\":{\"525\":1}}],[\"会返回空字符串\",{\"1\":{\"517\":1,\"784\":1}}],[\"会返回\",{\"1\":{\"517\":1,\"799\":1,\"800\":1}}],[\"会返回错误\",{\"1\":{\"117\":1}}],[\"另外还有一种情况\",{\"1\":{\"1648\":1}}],[\"另外一个是定时时间\",{\"1\":{\"903\":1}}],[\"另外一个在\",{\"1\":{\"505\":1}}],[\"另外一个也随之进行了变化\",{\"1\":{\"484\":1}}],[\"另外一种\",{\"1\":{\"181\":1}}],[\"另外就是调用方式的不同\",{\"1\":{\"478\":1}}],[\"另外\",{\"1\":{\"272\":1,\"324\":1,\"414\":1,\"663\":1,\"723\":1,\"1646\":1,\"1659\":1,\"1730\":1,\"1747\":1}}],[\"另外两个框向左浮动直到碰到前一个浮动框\",{\"1\":{\"178\":1}}],[\"另一个是负载分担\",{\"1\":{\"2212\":1}}],[\"另一个是数字或字符串\",{\"1\":{\"777\":1}}],[\"另一个是字符串\",{\"1\":{\"777\":1}}],[\"另一个不会发生改变\",{\"1\":{\"761\":1}}],[\"另一个对象也会发生变化\",{\"1\":{\"753\":1}}],[\"另一个值为非字符串\",{\"1\":{\"668\":1}}],[\"另一个操作数也会被转化为字符串\",{\"1\":{\"616\":1}}],[\"另一个与模块相关的新功能是import\",{\"1\":{\"472\":1}}],[\"另一个方法是导出一个\",{\"1\":{\"334\":1}}],[\"另一种情况是只需要部分代码的变动\",{\"1\":{\"1602\":1}}],[\"另一种情况是你叫蓝牙设备给你发点信息\",{\"1\":{\"124\":1}}],[\"另一种是\",{\"1\":{\"1418\":1}}],[\"另一种获取\",{\"1\":{\"392\":1}}],[\"另一方面它可以让开发人员读懂结构和用户以及屏幕阅读器\",{\"1\":{\"213\":1}}],[\"另一列撑满剩余宽度的布局方式\",{\"1\":{\"158\":1}}],[\"当被设为true\",{\"1\":{\"2805\":1}}],[\"当被观察者的状态发生改变时\",{\"1\":{\"1802\":1}}],[\"当缺少参数时\",{\"1\":{\"2788\":1}}],[\"当渲染的几何体不包含这些属性但材质包含这些属性时\",{\"1\":{\"2749\":1}}],[\"当渲染器创建的时候antialias\",{\"1\":{\"2638\":1}}],[\"当创建\",{\"1\":{\"2744\":1}}],[\"当比较函数和深度检测都通过时要执行的模板操作\",{\"1\":{\"2663\":1}}],[\"当比较函数通过了但是深度检测没有通过的时候要执行的模板操作\",{\"1\":{\"2662\":1}}],[\"当比较函数没有通过的时候要执行的模板操作\",{\"1\":{\"2661\":1}}],[\"当摄像机的视点被渲染的时候\",{\"1\":{\"2513\":1}}],[\"当场景中的多个对象独立动画时\",{\"1\":{\"2492\":1}}],[\"当加载器出现加载错误时\",{\"1\":{\"2480\":1}}],[\"当加载器需要加载url结束时\",{\"1\":{\"2479\":1}}],[\"当加载器需要开始加载url时\",{\"1\":{\"2478\":1}}],[\"当每个项目完成后\",{\"1\":{\"2465\":1}}],[\"当每次\",{\"1\":{\"903\":1}}],[\"当每次点击打印按钮时\",{\"1\":{\"436\":1}}],[\"当设置为true时\",{\"1\":{\"2291\":1,\"2788\":1}}],[\"当设定了\",{\"1\":{\"379\":1}}],[\"当切仅当实体e是第二范式\",{\"1\":{\"2252\":1}}],[\"当切仅当实体e时第一范式\",{\"1\":{\"2251\":1}}],[\"当且仅当所有域只包含原子值\",{\"1\":{\"2250\":1}}],[\"当ipv4和ipv6节点互相访问时\",{\"1\":{\"2215\":1}}],[\"当租约超过87\",{\"1\":{\"2210\":1}}],[\"当租约过半时\",{\"1\":{\"2210\":1}}],[\"当系统现有的资源不能满足进程尚需资源数时\",{\"1\":{\"2158\":1}}],[\"当有用户请求过来时\",{\"1\":{\"2074\":1}}],[\"当有多个选项时\",{\"1\":{\"916\":1}}],[\"当两个连接件进行直接连接时\",{\"1\":{\"1995\":1}}],[\"当活动的总时差为零时\",{\"1\":{\"1955\":1}}],[\"当技能级别增加时可以使交互流水化并允许定制交互\",{\"1\":{\"1928\":1}}],[\"当订阅者数量庞大时\",{\"1\":{\"1805\":1}}],[\"当发布者状态发生改变时\",{\"1\":{\"1804\":1}}],[\"当发送方收到接收方的三个冗余的确认应答后\",{\"1\":{\"1724\":1}}],[\"当发送方向接收方发\",{\"1\":{\"1724\":1}}],[\"当发送方连续收到三个重复确认时\",{\"1\":{\"1722\":1}}],[\"当⼀个对象的状态发⽣改变时\",{\"1\":{\"1802\":1}}],[\"当客户不⽅便直接访问⼀个对象或者不满⾜需要时\",{\"1\":{\"1793\":1}}],[\"当客户端收到连接同意的应答后\",{\"1\":{\"1727\":1}}],[\"当服务器收到客户端发来的请求后\",{\"1\":{\"1737\":1}}],[\"当服务端收到确认应答后\",{\"1\":{\"1729\":1}}],[\"当服务端收到fin报文时\",{\"1\":{\"1729\":1}}],[\"当cnwd\",{\"1\":{\"1719\":3}}],[\"当cookie的过期时间被设定时\",{\"1\":{\"1659\":1}}],[\"当网络出现拥塞的时候\",{\"1\":{\"1713\":1}}],[\"当网页生成的时候\",{\"1\":{\"223\":1}}],[\"当报文发送之后\",{\"1\":{\"1712\":1}}],[\"当脚本下载完后立即执行\",{\"1\":{\"1707\":1}}],[\"当整个解析的过程完成以后\",{\"1\":{\"1705\":1}}],[\"当会话结束\",{\"1\":{\"1666\":1}}],[\"当回收器从标记工作表中弹出对象并访问它的引用对象时\",{\"1\":{\"1650\":1}}],[\"当完成\",{\"1\":{\"1648\":1}}],[\"当开始进行垃圾回收时\",{\"1\":{\"1648\":1}}],[\"当声明了一个变量并且将一个引用类型赋值给该变量的时候这个值的引用次数就为\",{\"1\":{\"1646\":1}}],[\"当局部变量被外部函数使用时\",{\"1\":{\"1645\":1}}],[\"当函数结束后\",{\"1\":{\"1646\":1}}],[\"当函数执行结束后\",{\"1\":{\"1645\":1}}],[\"当函数被调用时\",{\"1\":{\"352\":1}}],[\"当变量不在参与运行时\",{\"1\":{\"1643\":1}}],[\"当已缓存改动时\",{\"1\":{\"1634\":1}}],[\"当工作区有改动\",{\"1\":{\"1633\":2}}],[\"当想再次继续开发此功能时\",{\"1\":{\"1601\":1}}],[\"当安装\",{\"1\":{\"1586\":1}}],[\"当安装过程提示选择全部为\",{\"1\":{\"1072\":1}}],[\"当时非常需要一个快速\",{\"1\":{\"1577\":1}}],[\"当数据到达时\",{\"1\":{\"1723\":1}}],[\"当数据变动的时候通知自身\",{\"1\":{\"1559\":1}}],[\"当数据变动之后\",{\"1\":{\"1557\":1}}],[\"当数组较大时优化效果会比较明显\",{\"1\":{\"888\":1}}],[\"当数组中的任何值发生变化时\",{\"1\":{\"1264\":1}}],[\"当数组中的元素在函数条件时返回\",{\"1\":{\"878\":1}}],[\"当数组中的元素在测试条件时返回\",{\"1\":{\"878\":1}}],[\"当数组中所有的promise的状态都达到resolved时\",{\"1\":{\"573\":1}}],[\"当做观察者\",{\"1\":{\"1557\":1}}],[\"当去当前实例上取值时\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"当代码成功运行后\",{\"1\":{\"1467\":1}}],[\"当过渡状态仍在进行中时\",{\"1\":{\"1307\":1}}],[\"当你的加载器使用默认加载管理器时\",{\"1\":{\"2455\":1}}],[\"当你开启新的会话时\",{\"1\":{\"1668\":1}}],[\"当你开始在一个新的\",{\"1\":{\"1353\":1}}],[\"当你使用\",{\"1\":{\"1308\":1}}],[\"当你希望启动一个新的过渡状态时调用它\",{\"1\":{\"1307\":1}}],[\"当你想避免因为\",{\"1\":{\"1267\":1}}],[\"当你想避免因为数据变化而产生的不必要的计算时\",{\"1\":{\"1267\":1}}],[\"当你在性能较差的设备上肉眼可以明显看到区别\",{\"1\":{\"1255\":1}}],[\"当你将函数作为\",{\"1\":{\"1212\":1}}],[\"当组件首次渲染时\",{\"1\":{\"1251\":1,\"1283\":1}}],[\"当同一个\",{\"1\":{\"1236\":1}}],[\"当同时声明多个变量时会用到\",{\"1\":{\"645\":1}}],[\"当其他加载器没有指定加载管理器时\",{\"1\":{\"2454\":1}}],[\"当其它高优先级的状态更新完成\",{\"1\":{\"1234\":1}}],[\"当其所包含的文档结构发生改变时\",{\"1\":{\"724\":1}}],[\"当调用\",{\"1\":{\"1199\":1,\"1203\":1}}],[\"当正确退出计算机的时候历史记录会写入文件\",{\"1\":{\"1124\":1}}],[\"当命令\",{\"1\":{\"1086\":4}}],[\"当源文件比目标文件新或者目标文件不存在时\",{\"1\":{\"1001\":1}}],[\"当目标文件或目录存在时\",{\"1\":{\"1001\":1}}],[\"当将某些行添加至notes\",{\"1\":{\"993\":1}}],[\"当与路由结合使用时\",{\"1\":{\"1312\":1}}],[\"当与\",{\"1\":{\"953\":1}}],[\"当识别后\",{\"1\":{\"913\":1}}],[\"当多个组件都有状态更新时\",{\"1\":{\"1199\":1}}],[\"当多个场景同时出现时\",{\"1\":{\"360\":1}}],[\"当多次执行\",{\"1\":{\"902\":1}}],[\"当访问一个变量时\",{\"1\":{\"901\":1}}],[\"当对源对象上不存在\",{\"1\":{\"838\":1}}],[\"当对应的值为\",{\"1\":{\"252\":1}}],[\"当错误发生时\",{\"1\":{\"817\":1}}],[\"当某资源来自拖拽事件\",{\"1\":{\"2462\":1}}],[\"当某一部分的数据发生变化时\",{\"1\":{\"1227\":1}}],[\"当某一代码执行异步过程调用发出后\",{\"1\":{\"555\":1}}],[\"当某些\",{\"1\":{\"807\":1}}],[\"当把字符串转换为数字时\",{\"1\":{\"797\":1}}],[\"当任何数据类型使用+运算符与字符串连接时会发生到字符串的转换\",{\"1\":{\"788\":1}}],[\"当文件被执行时\",{\"1\":{\"1039\":1}}],[\"当文件显示结束后\",{\"1\":{\"989\":1}}],[\"当文件名包含空格\",{\"1\":{\"973\":1}}],[\"当文件上传成功时\",{\"1\":{\"395\":1}}],[\"当文档中的\",{\"1\":{\"724\":1}}],[\"当解释器寻找引用值时\",{\"1\":{\"651\":1}}],[\"当进行减法操作时\",{\"1\":{\"617\":1}}],[\"当进入函数的作用域块时\",{\"1\":{\"510\":1}}],[\"当按位取反为负数时\",{\"1\":{\"609\":1}}],[\"当计数器变为\",{\"1\":{\"582\":1}}],[\"当最先执行完的事件执行完之后\",{\"1\":{\"574\":1}}],[\"当写有顺序的异步事件时\",{\"1\":{\"571\":1}}],[\"当promise执行的内容符合成功条件时\",{\"1\":{\"571\":1}}],[\"当用到onbeforecompile回调的时候\",{\"1\":{\"2689\":1}}],[\"当用\",{\"1\":{\"565\":1}}],[\"当用户增加时\",{\"1\":{\"1737\":1}}],[\"当用户通过键盘在页面上执行操作时触发\",{\"1\":{\"233\":1}}],[\"当用户通过鼠标在页面执行操作时触发如\",{\"1\":{\"233\":1}}],[\"当用户与页面上的元素交互时触发\",{\"1\":{\"233\":1}}],[\"当请求成功时\",{\"1\":{\"559\":1}}],[\"当遇到一个script标签时\",{\"1\":{\"1707\":1}}],[\"当遇到第一个结束标签<\",{\"1\":{\"1550\":1}}],[\"当遇到第一个不是数字的字符为止\",{\"1\":{\"550\":1}}],[\"当遇到有连续两行以上的空白行\",{\"1\":{\"986\":1}}],[\"当遇到异步任务时\",{\"1\":{\"375\":1}}],[\"当参数不是对象时\",{\"1\":{\"755\":1}}],[\"当参数是一个时\",{\"1\":{\"678\":1}}],[\"当参数为对象时\",{\"1\":{\"755\":1}}],[\"当参数为\",{\"1\":{\"678\":1}}],[\"当参数\",{\"1\":{\"550\":2}}],[\"当程序的控制流程在新的作用域进行实例化时\",{\"1\":{\"511\":1}}],[\"当作用域块执行结束之后\",{\"1\":{\"510\":1}}],[\"当作用域执行完成之后\",{\"1\":{\"510\":1}}],[\"当刚执行\",{\"1\":{\"505\":1}}],[\"当读取实例的属性时\",{\"1\":{\"482\":1}}],[\"当读取操作完成时打印读取结果\",{\"1\":{\"395\":1}}],[\"当导出模块代码时\",{\"1\":{\"469\":1}}],[\"当定义很多全局变量时\",{\"1\":{\"896\":1}}],[\"当定义模块的时候\",{\"1\":{\"464\":1}}],[\"当定义的变量在对象中不存在时\",{\"1\":{\"253\":1}}],[\"当浏览器加载\",{\"1\":{\"463\":1}}],[\"当页面加载完配置文件之后\",{\"1\":{\"462\":1}}],[\"当页面的宽度发生变化时\",{\"1\":{\"206\":1}}],[\"当所有依赖模块都加载完成之后\",{\"1\":{\"457\":1}}],[\"当需要在\",{\"1\":{\"1764\":1}}],[\"当需要确保在整个应用中只有一个实例存在\",{\"1\":{\"1763\":1}}],[\"当需要更换或扩展对象实现时\",{\"1\":{\"1747\":1}}],[\"当需要将对象转换为数字时\",{\"1\":{\"806\":1}}],[\"当需要将对象转换为字符串时\",{\"1\":{\"806\":1}}],[\"当需要执行一个任务\",{\"1\":{\"574\":1}}],[\"当需要使用此模块时\",{\"1\":{\"455\":1}}],[\"当需要对二进制数据进行操作时\",{\"1\":{\"397\":1}}],[\"当试图在\",{\"1\":{\"445\":2}}],[\"当上面的代码运行时\",{\"1\":{\"445\":1}}],[\"当上传大文件时\",{\"1\":{\"395\":1}}],[\"当应用被结构化为模块时\",{\"1\":{\"442\":1}}],[\"当应用被组织成模块时\",{\"1\":{\"442\":1}}],[\"当应用变得越来越复杂时\",{\"1\":{\"442\":1}}],[\"当一个加载器遇到错误时\",{\"1\":{\"2466\":1}}],[\"当一个进程对资源的最大需求量不超过系统中的资源数时可以接纳该进程\",{\"1\":{\"2158\":1}}],[\"当一个对象接收到请求后\",{\"1\":{\"1835\":1}}],[\"当一个对象经过多次复制后依然存活\",{\"1\":{\"1648\":1}}],[\"当一个连接建立时\",{\"1\":{\"1723\":1}}],[\"当一个值不能被强制转换为一个数字时\",{\"1\":{\"796\":1}}],[\"当一个值为字符串\",{\"1\":{\"668\":1}}],[\"当一个操作数是字符串时\",{\"1\":{\"781\":1}}],[\"当一个发生变化的时候\",{\"1\":{\"484\":1}}],[\"当一个节点从\",{\"1\":{\"437\":1}}],[\"当一个函数被调用时\",{\"1\":{\"350\":1}}],[\"当点击清除按钮时\",{\"1\":{\"436\":1}}],[\"当点击上传文件时\",{\"1\":{\"391\":1}}],[\"当内存中应该在垃圾回收周期中清理的对象\",{\"1\":{\"425\":1}}],[\"当在\",{\"1\":{\"463\":1}}],[\"当在代码中使用分配的变量时\",{\"1\":{\"425\":1}}],[\"当在文档中输入文本时触发\",{\"1\":{\"233\":1}}],[\"当拖放文件到拖放区域时\",{\"1\":{\"392\":1}}],[\"当选择文件并上传之后触发\",{\"1\":{\"391\":1}}],[\"当这个值的引用次数变为\",{\"1\":{\"1646\":1}}],[\"当这个函数被执行完之后\",{\"1\":{\"897\":1}}],[\"当这个方法执行完成后\",{\"1\":{\"374\":1}}],[\"当这段代码执行时\",{\"1\":{\"508\":1}}],[\"当这六个阶段执行完一次之后\",{\"1\":{\"379\":1}}],[\"当队列为空或者执行的回调函数数量到达系统设定的阈值\",{\"1\":{\"379\":1}}],[\"当执行\",{\"1\":{\"804\":1}}],[\"当执行到作用域块中的console\",{\"1\":{\"510\":1}}],[\"当执行到作用域内部时\",{\"1\":{\"510\":1}}],[\"当执行到代码块中时\",{\"1\":{\"510\":1}}],[\"当执行完\",{\"1\":{\"428\":1}}],[\"当执行完毕后就从栈中弹出了\",{\"1\":{\"374\":1}}],[\"当执行栈中的任务执行完之后\",{\"1\":{\"376\":1}}],[\"当执行promise\",{\"1\":{\"376\":1}}],[\"当执行这段代码时\",{\"1\":{\"374\":1,\"430\":1}}],[\"当再使用\",{\"1\":{\"360\":1}}],[\"当然类似于\",{\"1\":{\"1641\":1}}],[\"当然也可以搜索多个作者的提交信息\",{\"1\":{\"1626\":1}}],[\"当然我们也可以设置\",{\"1\":{\"1407\":1}}],[\"当然全局作用域有相应的缺点\",{\"1\":{\"896\":1}}],[\"当然如果判断的层数过多\",{\"1\":{\"637\":1}}],[\"当然如果你更熟悉正则表达式\",{\"1\":{\"518\":1}}],[\"当然\",{\"1\":{\"334\":1,\"395\":1,\"403\":1,\"452\":1,\"461\":1,\"463\":1,\"469\":2,\"503\":1,\"804\":1,\"1209\":1,\"1386\":1,\"1713\":1,\"1726\":1}}],[\"当给出负整数索引时\",{\"1\":{\"332\":1}}],[\"当给定索引为正时\",{\"1\":{\"332\":1}}],[\"当给函数的参数设置了默认值之后\",{\"1\":{\"258\":1}}],[\"当尝试访问可能不存在的对象属性时\",{\"1\":{\"322\":1,\"644\":1}}],[\"当\",{\"1\":{\"321\":1,\"350\":1,\"371\":1,\"463\":1,\"517\":1,\"565\":1,\"581\":1,\"643\":1,\"677\":2,\"767\":1,\"1225\":1,\"1274\":1,\"1279\":1,\"1454\":1,\"1660\":1,\"1765\":1}}],[\"当前对象实例的\",{\"1\":{\"2294\":1}}],[\"当前watcher出栈\",{\"1\":{\"1562\":1}}],[\"当前watcher实例\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"当前父元素就是栈顶的上一个元素\",{\"1\":{\"1550\":1}}],[\"当前状态\",{\"1\":{\"1273\":1}}],[\"当前进程的\",{\"1\":{\"1105\":1}}],[\"当前登陆的用户\",{\"1\":{\"1102\":1}}],[\"当前操作环境如果是用\",{\"1\":{\"1102\":1}}],[\"当前的状态\",{\"1\":{\"1273\":1}}],[\"当前的\",{\"1\":{\"1102\":1}}],[\"当前的执行上下文中就包含了if\",{\"1\":{\"505\":1}}],[\"当前主机名\",{\"1\":{\"915\":1}}],[\"当前用户\",{\"1\":{\"915\":1}}],[\"当前\",{\"1\":{\"902\":6,\"2283\":1,\"2284\":1,\"2287\":1,\"2292\":1}}],[\"当前环境中存在指向父级作用域的引用\",{\"1\":{\"901\":1}}],[\"当前被处理的元素\",{\"1\":{\"877\":1}}],[\"当前请求需要用户验证\",{\"1\":{\"817\":1}}],[\"当前存储的数据是布尔值\",{\"1\":{\"642\":1}}],[\"当前存储的数据是一个\",{\"1\":{\"642\":1}}],[\"当前存储的数据指向一个字符串\",{\"1\":{\"642\":1}}],[\"当前存储的数据指向一个双精度的浮点数\",{\"1\":{\"642\":1}}],[\"当前存储的数据指向一个对象\",{\"1\":{\"642\":1}}],[\"当前执行的是\",{\"1\":{\"589\":1}}],[\"当前一个\",{\"1\":{\"581\":1}}],[\"当前元素属于的数组对象\",{\"1\":{\"873\":1,\"875\":1,\"876\":1}}],[\"当前元素的索引\",{\"1\":{\"877\":1,\"878\":1}}],[\"当前元素的索引值\",{\"1\":{\"363\":1,\"711\":1,\"872\":1,\"873\":1,\"875\":1,\"876\":1}}],[\"当前元素的值\",{\"1\":{\"873\":1,\"875\":1,\"876\":1}}],[\"当前元素所属的数对象\",{\"1\":{\"711\":1}}],[\"当前元素所属的数组对象\",{\"1\":{\"363\":1,\"872\":1,\"877\":1,\"878\":1}}],[\"当前元素\",{\"1\":{\"363\":1,\"872\":1,\"878\":1}}],[\"当前元素在数组中的索引\",{\"1\":{\"284\":1,\"705\":1}}],[\"当前元素值\",{\"1\":{\"284\":1,\"705\":1}}],[\"当前索引\",{\"1\":{\"284\":1,\"705\":1}}],[\"当第二个参数设置为5时\",{\"1\":{\"524\":1}}],[\"当第二个参数设置为\",{\"1\":{\"281\":1}}],[\"当引入函数默认值之后\",{\"1\":{\"257\":1}}],[\"当使用区快被写满时\",{\"1\":{\"1648\":1}}],[\"当使用解构赋值时\",{\"1\":{\"838\":1}}],[\"当使用\",{\"1\":{\"772\":2,\"798\":1,\"799\":1,\"800\":1,\"803\":1,\"1248\":1}}],[\"当使用过\",{\"1\":{\"763\":1}}],[\"当使用变量形式声明函数时\",{\"1\":{\"500\":1}}],[\"当使用函数默认值时\",{\"1\":{\"256\":1}}],[\"当使用鼠标滚轮或类似设备时触发\",{\"1\":{\"233\":1}}],[\"当我们每一次改变数据的时候\",{\"1\":{\"1539\":1,\"1568\":1}}],[\"当我们在使用\",{\"1\":{\"1224\":1}}],[\"当我们调用多个相同\",{\"1\":{\"1223\":1}}],[\"当我们需要复杂的状态逻辑且希望避免额外的渲染时\",{\"1\":{\"1287\":1}}],[\"当我们需要直接与\",{\"1\":{\"1281\":1}}],[\"当我们需要在不同的目录\",{\"1\":{\"1002\":1}}],[\"当我们需要循环中的对象键值时\",{\"1\":{\"848\":1}}],[\"当我们将\",{\"1\":{\"802\":1}}],[\"当我们想要创建一个操作并且操作数类型之一是字符串时\",{\"1\":{\"788\":1}}],[\"当我们使用数组字面量初始化数组时\",{\"1\":{\"679\":1}}],[\"当我们使用createobjecturl\",{\"1\":{\"413\":1}}],[\"当我们创建数组时\",{\"1\":{\"677\":1}}],[\"当我们进行大量的异步链式调用时\",{\"1\":{\"565\":1}}],[\"当我们访问对象的一个属性或方法时\",{\"1\":{\"482\":1}}],[\"当我们直接在页面中打印一个对象时\",{\"1\":{\"478\":1}}],[\"当我们㤇创建多个实例时\",{\"1\":{\"455\":1}}],[\"当我们点击最里层的元素\",{\"1\":{\"241\":1}}],[\"当我们点击\",{\"1\":{\"239\":1}}],[\"当我们对着麦克风说话时\",{\"1\":{\"340\":1}}],[\"当我们对\",{\"1\":{\"223\":2}}],[\"当底层\",{\"1\":{\"233\":1}}],[\"当为d则是目录\",{\"1\":{\"1029\":1}}],[\"当为\",{\"1\":{\"233\":1,\"1029\":1}}],[\"当元素获得或失去焦点时触发\",{\"1\":{\"233\":1}}],[\"当事件触发时\",{\"1\":{\"232\":1}}],[\"当希望为同一个元素\",{\"1\":{\"231\":1}}],[\"当视口容器发生变化时就可以动态设置\",{\"1\":{\"206\":1}}],[\"当放大的时候\",{\"1\":{\"201\":1}}],[\"当缩小的时候\",{\"1\":{\"201\":1}}],[\"当框\",{\"1\":{\"178\":1}}],[\"当<main>元素比较短的时候\",{\"1\":{\"161\":1}}],[\"当<main>的高康足够长的时候\",{\"1\":{\"161\":1}}],[\"字样的文件中包含\",{\"1\":{\"1016\":1}}],[\"字数\",{\"1\":{\"1006\":1}}],[\"字段只有8个\",{\"1\":{\"2214\":1}}],[\"字段指定的入口文件\",{\"1\":{\"1357\":1}}],[\"字段指定一个类型声明文件地址\",{\"1\":{\"1357\":1}}],[\"字段让\",{\"1\":{\"1168\":1}}],[\"字段到前端\",{\"1\":{\"860\":1}}],[\"字段里保存了该服务的所有特征值\",{\"1\":{\"122\":1}}],[\"字符编码等操作\",{\"1\":{\"1678\":1}}],[\"字符数\",{\"1\":{\"1106\":1}}],[\"字符按键以及\",{\"1\":{\"1057\":1}}],[\"字符置换成\",{\"1\":{\"1018\":2}}],[\"字符以便对齐\",{\"1\":{\"1009\":1}}],[\"字符展开\",{\"1\":{\"1009\":1}}],[\"字符\",{\"1\":{\"797\":1,\"1018\":2}}],[\"字符串生成\",{\"0\":{\"1552\":1}}],[\"字符串字面量类型\",{\"0\":{\"1428\":1},\"1\":{\"1427\":1}}],[\"字符串枚举\",{\"0\":{\"1408\":1}}],[\"字符串重复执行最后一条以该字符串开头的命令\",{\"1\":{\"1084\":1}}],[\"字符串的文件\",{\"1\":{\"1016\":1}}],[\"字符串的自动转换\",{\"1\":{\"668\":1,\"669\":1}}],[\"字符串相同\",{\"1\":{\"930\":1}}],[\"字符串和布尔值\",{\"1\":{\"804\":1}}],[\"字符串而生成的\",{\"1\":{\"690\":1}}],[\"字符串转换\",{\"0\":{\"781\":1}}],[\"字符串转数字\",{\"1\":{\"663\":1}}],[\"字符串转为数字\",{\"0\":{\"549\":1}}],[\"字符串会被传递给\",{\"1\":{\"578\":1}}],[\"字符串开头和结尾的空格是允许的\",{\"1\":{\"550\":1}}],[\"字符串模式匹配\",{\"0\":{\"534\":1}}],[\"字符串大小写转换\",{\"0\":{\"531\":1}}],[\"字符串或正则表达式\",{\"1\":{\"526\":1}}],[\"字符串分割成数组\",{\"0\":{\"526\":1}}],[\"字符串也可以通过索引值来直接获取对应字符\",{\"1\":{\"517\":1}}],[\"字符串也可以使用\",{\"1\":{\"332\":1}}],[\"字符串以表示所读取文件的内容\",{\"1\":{\"394\":1}}],[\"字符串方法\",{\"0\":{\"278\":1}}],[\"字符串中调用函数\",{\"1\":{\"255\":1}}],[\"字符串中嵌入变量\",{\"1\":{\"255\":1}}],[\"字符串解构规则\",{\"1\":{\"254\":1}}],[\"字符串解构\",{\"1\":{\"254\":1}}],[\"字符串\",{\"0\":{\"514\":1,\"782\":1,\"783\":1,\"784\":1,\"785\":1,\"786\":1,\"787\":1,\"790\":1,\"797\":1,\"840\":1},\"1\":{\"208\":1,\"247\":1,\"272\":2,\"388\":2,\"414\":3,\"653\":1,\"719\":2,\"763\":1,\"772\":1,\"806\":1,\"874\":1,\"888\":1,\"930\":1,\"989\":4,\"1092\":1,\"1491\":1,\"1550\":1},\"2\":{\"553\":1}}],[\"字面量不仅可以表示值\",{\"1\":{\"1427\":1}}],[\"字面量类型\",{\"0\":{\"1427\":1},\"1\":{\"1460\":1}}],[\"字面量\",{\"0\":{\"676\":1}}],[\"字面量方式创建出来的结果和实例方式创建的是有一定的区别的\",{\"1\":{\"657\":1}}],[\"字节\",{\"1\":{\"388\":1,\"402\":1,\"1006\":1}}],[\"字典\",{\"1\":{\"388\":1}}],[\"字体\",{\"1\":{\"217\":1}}],[\"字围\",{\"1\":{\"178\":1}}],[\"字围和收缩\",{\"1\":{\"178\":1}}],[\"贴边\",{\"1\":{\"178\":2}}],[\"脱胎于传统软件工程\",{\"1\":{\"1906\":1}}],[\"脱标\",{\"1\":{\"178\":2}}],[\"脱离了文档流\",{\"1\":{\"153\":1}}],[\"定理2\",{\"1\":{\"2119\":1}}],[\"定理1\",{\"1\":{\"2119\":1}}],[\"定速巡航\",{\"1\":{\"1994\":1}}],[\"定时\",{\"1\":{\"2176\":1}}],[\"定时清理过期的缓存\",{\"1\":{\"2074\":1}}],[\"定时刷新缓存\",{\"1\":{\"2073\":1}}],[\"定时图\",{\"0\":{\"1919\":1}}],[\"定时器溢出则中断\",{\"1\":{\"2176\":1}}],[\"定时器外面的\",{\"1\":{\"1653\":1}}],[\"定时器第三个参数\",{\"1\":{\"903\":1}}],[\"定时器\",{\"0\":{\"557\":1},\"1\":{\"902\":1}}],[\"定时器的标识符\",{\"1\":{\"430\":1}}],[\"定时器触发线程\",{\"1\":{\"371\":1}}],[\"定位问题\",{\"0\":{\"1637\":1}}],[\"定位\",{\"0\":{\"165\":1,\"166\":1,\"167\":1,\"168\":1}}],[\"定义阴影贴图类型\",{\"1\":{\"2805\":1}}],[\"定义渲染器是否应对对象进行排序\",{\"1\":{\"2806\":1}}],[\"定义渲染器是否考虑对象级剪切平面\",{\"1\":{\"2801\":1}}],[\"定义渲染器是否在渲染每一帧之前自动清除其输出\",{\"1\":{\"2790\":1}}],[\"定义渲染器的输出编码\",{\"1\":{\"2799\":1}}],[\"定义renderer是否清除模板缓存\",{\"1\":{\"2793\":1}}],[\"定义renderer是否清除深度缓存\",{\"1\":{\"2792\":1}}],[\"定义renderer是否清除颜色缓存\",{\"1\":{\"2791\":1}}],[\"定义材质颜色是否受全局雾设置的影响\",{\"1\":{\"2752\":1}}],[\"定义材质是否使用平面着色进行渲染\",{\"1\":{\"2706\":1,\"2759\":1}}],[\"定义此材质是否支持剪裁\",{\"1\":{\"2748\":1}}],[\"定义此材质是否透明\",{\"1\":{\"2677\":1,\"2781\":1}}],[\"定义这个材质是否会被渲染器的tonemapping设置所影响\",{\"1\":{\"2676\":1}}],[\"定义将要渲染哪一面\",{\"1\":{\"2675\":1}}],[\"定义投影的面\",{\"1\":{\"2674\":1}}],[\"定义是否检查材质着色器程序\",{\"1\":{\"2794\":1}}],[\"定义是否使用顶点着色\",{\"1\":{\"2762\":1}}],[\"定义是否根据此材质上指定的剪裁平面剪切阴影\",{\"1\":{\"2648\":1}}],[\"定义是否允许用户手动缩放页面\",{\"1\":{\"202\":1}}],[\"定义3\",{\"1\":{\"2019\":1}}],[\"定义3种抽象层次\",{\"1\":{\"1906\":1}}],[\"定义2\",{\"1\":{\"2019\":1}}],[\"定义1\",{\"1\":{\"2019\":1}}],[\"定义直觉性的捷径\",{\"1\":{\"1928\":1}}],[\"定义最终产品视图和业务模型\",{\"1\":{\"1901\":1}}],[\"定义表单验证策略对象\",{\"1\":{\"1789\":1}}],[\"定义了6种关键的项目角色\",{\"1\":{\"1904\":1}}],[\"定义了一种一对多的关系\",{\"1\":{\"1802\":1}}],[\"定义了一个接口用于创建对象\",{\"1\":{\"1752\":1}}],[\"定义了很多使用回调和事件的\",{\"1\":{\"560\":1}}],[\"定义服务器上的路径\",{\"1\":{\"1677\":1}}],[\"定义主机上的端口号\",{\"1\":{\"1677\":1}}],[\"定义因特网域名\",{\"1\":{\"1677\":1}}],[\"定义因特网服务的类型\",{\"1\":{\"1677\":1}}],[\"定义域主机\",{\"1\":{\"1677\":1}}],[\"定义异步方法\",{\"1\":{\"1542\":1}}],[\"定义$nexttick\",{\"1\":{\"1520\":1}}],[\"定义$on\",{\"1\":{\"1518\":1}}],[\"定义为\",{\"1\":{\"1484\":1}}],[\"定义全局\",{\"0\":{\"1484\":1}}],[\"定义单个的字面量类型并没有太大的用处\",{\"1\":{\"1428\":1}}],[\"定义实例的属性\",{\"1\":{\"1389\":1}}],[\"定义反向代理服务器\",{\"1\":{\"1153\":1}}],[\"定义变量\",{\"0\":{\"1094\":1}}],[\"定义变量的方式\",{\"1\":{\"903\":2}}],[\"定义连接字符串函数\",{\"0\":{\"728\":1}}],[\"定义并初始化变量的值\",{\"1\":{\"646\":1}}],[\"定义一个渲染\",{\"1\":{\"1558\":1}}],[\"定义一个减的方法\",{\"1\":{\"1167\":1}}],[\"定义一个加的方法\",{\"1\":{\"1167\":1}}],[\"定义一个\",{\"1\":{\"464\":1}}],[\"定义模块也是通过一个全局函数\",{\"1\":{\"464\":1}}],[\"定义模块时需要注意\",{\"1\":{\"463\":1}}],[\"定义模块的方法之一\",{\"1\":{\"463\":1}}],[\"定义的类型变量都属于泛型\",{\"1\":{\"1363\":1}}],[\"定义的对象属性不能使用\",{\"1\":{\"268\":1}}],[\"定义的变量比接口多或少了一些属性是不允许的\",{\"1\":{\"1338\":1}}],[\"定义的变量添加到\",{\"1\":{\"249\":1}}],[\"定义的变量存在块级作用域\",{\"1\":{\"248\":1}}],[\"定义对象的大括号\",{\"1\":{\"261\":1}}],[\"定义日期\",{\"1\":{\"215\":1}}],[\"定义\",{\"0\":{\"448\":1,\"463\":1,\"1208\":1,\"1241\":1,\"1264\":1,\"1279\":1,\"1307\":1,\"1557\":1,\"1559\":1,\"1747\":1,\"1762\":1,\"1784\":1,\"1793\":1,\"1802\":1,\"1810\":1,\"2046\":1},\"1\":{\"215\":1,\"1167\":1,\"1279\":1,\"1517\":2,\"1520\":1,\"1752\":1,\"1998\":1}}],[\"定义导航链接\",{\"1\":{\"215\":1}}],[\"定义重要的或强调的文本\",{\"1\":{\"215\":1}}],[\"定义文档\",{\"1\":{\"1677\":1}}],[\"定义文档中的节\",{\"1\":{\"215\":1}}],[\"定义文档或节的页脚\",{\"1\":{\"215\":1}}],[\"定义文章\",{\"1\":{\"215\":1}}],[\"定义<figure>元素的标题\",{\"1\":{\"215\":1}}],[\"定义用户能够查看或隐藏的额外细节\",{\"1\":{\"215\":1}}],[\"定义页面内容以外的内容\",{\"1\":{\"215\":1}}],[\"定义放大最大比例\",{\"1\":{\"202\":1}}],[\"定义缩小最小比例\",{\"1\":{\"202\":1}}],[\"定义初始缩放值\",{\"1\":{\"202\":1}}],[\"定义视口的高度\",{\"1\":{\"202\":1}}],[\"定义视口的宽度\",{\"1\":{\"202\":1}}],[\"定义设备像素与设备独立像素比的关系\",{\"1\":{\"202\":1}}],[\"定义规则类型\",{\"1\":{\"30\":1,\"73\":1}}],[\"定义之前使用它们\",{\"1\":{\"19\":1,\"62\":1}}],[\"旁边两侧固定宽度\",{\"1\":{\"159\":1}}],[\"两段锁协议\",{\"1\":{\"2260\":1}}],[\"两条全局提交规则\",{\"0\":{\"2235\":1}}],[\"两阶段提交协议\",{\"0\":{\"2233\":1}}],[\"两方面功能\",{\"1\":{\"1866\":1}}],[\"两次不行吗\",{\"0\":{\"1727\":1}}],[\"两者之间就直接可以创建持久性的连接\",{\"1\":{\"1735\":1}}],[\"两者都不会阻止\",{\"1\":{\"1707\":1}}],[\"两者都可以用来描述对象或函数的类型\",{\"1\":{\"1342\":1}}],[\"两者都可以用于初始化状态\",{\"1\":{\"1274\":1}}],[\"两者执行顺序不确定\",{\"1\":{\"1707\":1}}],[\"两者共同使用\",{\"1\":{\"737\":1}}],[\"两者的语法如下\",{\"1\":{\"876\":1}}],[\"两者的区别\",{\"1\":{\"663\":1}}],[\"两者的长度之和超过了指定的最小长度\",{\"1\":{\"293\":1,\"547\":1}}],[\"两者就会有较大的差异\",{\"1\":{\"614\":1}}],[\"两种材质\",{\"1\":{\"2872\":1}}],[\"两种存储的奇偶校验\",{\"1\":{\"2213\":1}}],[\"两种状态\",{\"1\":{\"606\":1}}],[\"两种类型的结果是不一样的\",{\"1\":{\"602\":1}}],[\"两种技术结合产生了链式调用的效果\",{\"1\":{\"569\":1}}],[\"两列自适应布局是指一列由内容撑开\",{\"1\":{\"158\":1}}],[\"两列自适应布局\",{\"0\":{\"158\":1}}],[\"两个十六位的端口号\",{\"1\":{\"1712\":1}}],[\"两个对象都不在作用域中\",{\"1\":{\"1646\":1}}],[\"两个缺点都可以完美解决了\",{\"1\":{\"1646\":1}}],[\"两个阶段\",{\"1\":{\"1646\":1}}],[\"两个参数\",{\"1\":{\"1366\":1}}],[\"两个参数都可选\",{\"1\":{\"758\":1,\"759\":1}}],[\"两个方法否不会改变原数组\",{\"1\":{\"878\":1}}],[\"两个方法对于空数组\",{\"1\":{\"878\":1}}],[\"两个方法对于空数组是不会执行回调函数的\",{\"1\":{\"877\":1}}],[\"两个方法几乎一样\",{\"1\":{\"878\":1}}],[\"两个方法的语法如下\",{\"1\":{\"878\":1}}],[\"两个方法的第一个参数为回调函数\",{\"1\":{\"876\":1,\"878\":1}}],[\"两个方法如果添加初始值\",{\"1\":{\"877\":1}}],[\"两个方法都仅适用于检测数组\",{\"1\":{\"876\":1}}],[\"两个方法都不会对空数组进行检测\",{\"1\":{\"876\":1}}],[\"两个方法都不会改变原数组\",{\"1\":{\"876\":1,\"877\":1}}],[\"两个方法来共同实现数组扁平化\",{\"1\":{\"738\":1}}],[\"两个操作数\",{\"1\":{\"775\":1,\"777\":1,\"778\":1}}],[\"两个操作数都会进行强制类型转换\",{\"1\":{\"627\":1}}],[\"两个位相同为\",{\"1\":{\"606\":1}}],[\"两个位都为\",{\"1\":{\"606\":1}}],[\"两个属性\",{\"1\":{\"588\":1,\"1167\":1}}],[\"两个\",{\"1\":{\"392\":1,\"772\":1}}],[\"两个div元素的间距为40px\",{\"1\":{\"151\":1}}],[\"两个元素才有可能发生垂直margin的重叠\",{\"1\":{\"151\":1}}],[\"单值属性和多值属性null属性\",{\"1\":{\"2250\":1}}],[\"单播地址\",{\"1\":{\"2214\":1}}],[\"单片微型计算机\",{\"1\":{\"2178\":1}}],[\"单向散列函数\",{\"1\":{\"2108\":1}}],[\"单向加密后的密码\",{\"1\":{\"940\":1}}],[\"单体架构到第二阶段\",{\"0\":{\"2059\":1}}],[\"单体应用\",{\"1\":{\"2055\":1}}],[\"单元层\",{\"1\":{\"1890\":1}}],[\"单元级发展阶段\",{\"1\":{\"1889\":1}}],[\"单元测试\",{\"1\":{\"1332\":1,\"1940\":1,\"2032\":1}}],[\"单例能节约更多资源\",{\"1\":{\"1769\":1}}],[\"单例类通常自己负责管理它的创建和生命周期\",{\"1\":{\"1762\":1}}],[\"单例模式本质上提供了一个全局状态\",{\"1\":{\"1770\":1}}],[\"单例模式可以解决对资源的多重占用\",{\"1\":{\"1769\":1}}],[\"单例模式在创建后在内存中只存在一个实例\",{\"1\":{\"1769\":1}}],[\"单例模式是一个不错的选择\",{\"1\":{\"1763\":1}}],[\"单例模式\",{\"0\":{\"1761\":1},\"1\":{\"1762\":1},\"2\":{\"1776\":1}}],[\"单一职责原则\",{\"1\":{\"1937\":1}}],[\"单一实例\",{\"1\":{\"1762\":1}}],[\"单一的\",{\"1\":{\"596\":1}}],[\"单独一方的连接释放\",{\"1\":{\"1729\":1}}],[\"单纯使用黑色和白色来标记数据就可以了\",{\"1\":{\"1650\":1}}],[\"单引号\",{\"1\":{\"1089\":1,\"1550\":1}}],[\"单个方法\",{\"1\":{\"806\":1}}],[\"单个参数的简化\",{\"1\":{\"260\":1}}],[\"单页应用程序\",{\"1\":{\"424\":1}}],[\"单线程的javascript\",{\"0\":{\"370\":1}}],[\"单击\",{\"1\":{\"341\":1}}],[\"单位像素\",{\"1\":{\"2830\":1,\"2832\":1}}],[\"单位可以是\",{\"1\":{\"1006\":1}}],[\"单位时间只能发射一颗子弹\",{\"1\":{\"829\":1}}],[\"单位为字节\",{\"1\":{\"407\":1}}],[\"单位为像素\",{\"1\":{\"202\":2}}],[\"单位转换为\",{\"1\":{\"208\":1}}],[\"单位换算\",{\"1\":{\"208\":1}}],[\"单位是根据根元素\",{\"1\":{\"207\":1}}],[\"单位都会被转换\",{\"1\":{\"207\":1}}],[\"单位都是相对于根元素\",{\"1\":{\"206\":1}}],[\"单位\",{\"1\":{\"206\":1,\"208\":4}}],[\"单列布局\",{\"0\":{\"157\":1}}],[\"单行导航\",{\"1\":{\"989\":1}}],[\"单行溢出显示省略号\",{\"0\":{\"133\":1}}],[\"单行数组永远不会出现逗号结尾\",{\"1\":{\"20\":1,\"63\":1}}],[\"常常用平行光来模拟太阳光\",{\"1\":{\"2868\":1}}],[\"常称为虚表\",{\"1\":{\"2225\":1}}],[\"常⻅的解决⽅案有\",{\"1\":{\"1730\":1}}],[\"常用冗余机制\",{\"1\":{\"2220\":1}}],[\"常用的apache\",{\"1\":{\"2077\":1}}],[\"常用的办法是给父元素设置overflow\",{\"1\":{\"153\":1}}],[\"常用层次式架构\",{\"0\":{\"2030\":1}}],[\"常用环境变量\",{\"0\":{\"1102\":1}}],[\"常用命令\",{\"0\":{\"1073\":1}}],[\"常用\",{\"1\":{\"1061\":7,\"1062\":3,\"1063\":9,\"1065\":5,\"1067\":3}}],[\"常用选项\",{\"0\":{\"1015\":1}}],[\"常用于\",{\"1\":{\"646\":1}}],[\"常量\",{\"0\":{\"1767\":1}}],[\"常量名\",{\"1\":{\"394\":1}}],[\"常量中加入一个\",{\"1\":{\"269\":1}}],[\"常量值和对象属性\",{\"1\":{\"268\":1}}],[\"常见采用一下两种\",{\"1\":{\"2074\":1}}],[\"常见缓存技术\",{\"0\":{\"2061\":1}}],[\"常见操作\",{\"0\":{\"1671\":1}}],[\"常见版本控制主要有两种\",{\"1\":{\"1578\":1}}],[\"常见用途\",{\"0\":{\"1280\":1}}],[\"常见运用场景有表单验证是否登入成功\",{\"1\":{\"812\":1}}],[\"常见类型转换\",{\"0\":{\"780\":1}}],[\"常见的web服务器性能评测方式有基准性能测试\",{\"1\":{\"2171\":1}}],[\"常见的协议有\",{\"1\":{\"1677\":1}}],[\"常见的状态码\",{\"1\":{\"817\":1}}],[\"常见的位运算有以下几种\",{\"1\":{\"606\":1}}],[\"常见的内存泄漏\",{\"0\":{\"426\":1}}],[\"常见的微任务\",{\"1\":{\"380\":1}}],[\"常见的宏任务\",{\"1\":{\"380\":1}}],[\"常见的任务如下\",{\"1\":{\"376\":1}}],[\"常见的\",{\"1\":{\"337\":1,\"388\":1}}],[\"常见引起重绘属性和方法\",{\"0\":{\"225\":1}}],[\"常见引起重排属性和方法\",{\"0\":{\"224\":1}}],[\"常见布局\",{\"0\":{\"156\":1}}],[\"即可以使用顶点纹理\",{\"1\":{\"2795\":1}}],[\"即可执行其他代码\",{\"1\":{\"555\":1}}],[\"即渲染为平面多边形\",{\"1\":{\"2764\":1}}],[\"即相互逻辑蕴涵\",{\"1\":{\"2255\":1}}],[\"即有入度\",{\"1\":{\"2246\":1}}],[\"即用户不必关心局部dbms支持哪种数据模型\",{\"1\":{\"2232\":1}}],[\"即用户不需要知道模块中输出的名字\",{\"1\":{\"274\":1}}],[\"即数据分配到哪个或哪些站点存储对用户是透明的\",{\"1\":{\"2232\":1}}],[\"即如何分片对用户是透明的\",{\"1\":{\"2232\":1}}],[\"即如果后面跟的是一个目录做为参数\",{\"1\":{\"1613\":1}}],[\"即如果两个相应位相同则为0\",{\"1\":{\"610\":1}}],[\"即当系统中某个节点发生故障时\",{\"1\":{\"2229\":1}}],[\"即当前函数一般都会存在上层函数的作用域的引用\",{\"1\":{\"901\":1}}],[\"即单片机时代\",{\"1\":{\"2178\":1}}],[\"即软件的设计要与硬件的匹配\",{\"1\":{\"2177\":1}}],[\"即旋转延迟时间\",{\"1\":{\"2142\":1}}],[\"即程序在一段时间内所访问的地址可能集中在一定范围内\",{\"1\":{\"2141\":1}}],[\"即cpu与存储系统间数据传送带宽限制\",{\"1\":{\"2141\":1}}],[\"即check阶段\",{\"1\":{\"382\":1}}],[\"即墙内信息可以访问\",{\"1\":{\"2119\":1}}],[\"即禁止合法用户的越权访问\",{\"1\":{\"2106\":1}}],[\"即内容分发网络\",{\"1\":{\"2081\":1}}],[\"即插即用\",{\"1\":{\"2025\":1}}],[\"即设计师集中精力于业务逻辑本身\",{\"1\":{\"2025\":1}}],[\"即要经过多长时间才能对某个事件做出响应\",{\"1\":{\"2004\":1}}],[\"即要删除的第一个元素的位置和要删除的元素的数量\",{\"1\":{\"703\":1}}],[\"即强调由业务\",{\"1\":{\"1974\":1}}],[\"即时性要求低\",{\"1\":{\"1886\":1}}],[\"即时通讯的实现\",{\"0\":{\"1737\":1}}],[\"即时通讯\",{\"1\":{\"1715\":1}}],[\"即给每个数据包在发送之前\",{\"1\":{\"1730\":1}}],[\"即客户端收到服务端的连接释放报文段后\",{\"1\":{\"1728\":1}}],[\"即服务端没有要向客户端发出的数据\",{\"1\":{\"1728\":1}}],[\"即服务端收到连接释放报文段后即发出确认报文段\",{\"1\":{\"1728\":1}}],[\"即发出连接释放报文段\",{\"1\":{\"1728\":1}}],[\"即发生高度塌陷\",{\"1\":{\"153\":1}}],[\"即每个属性都是不可再分的数据项\",{\"1\":{\"2250\":1}}],[\"即每经过一个返回时间rtt就把发送方的拥塞控制窗口加一\",{\"1\":{\"1720\":1}}],[\"即每次任务执行结束后分别处理成功和失败的情况怎么解决的呢\",{\"1\":{\"569\":1}}],[\"即一个事物内部的操作及使用的数据对并发的其他事物是隔离的\",{\"1\":{\"2258\":1}}],[\"即一个模块从调用者那取得输入\",{\"1\":{\"1933\":1}}],[\"即一个定义在函数内部的函数\",{\"1\":{\"900\":1}}],[\"即一旦有黑色对象引用白色对象\",{\"1\":{\"1650\":1}}],[\"即等待回收\",{\"1\":{\"1650\":1}}],[\"即对象\",{\"1\":{\"1646\":1}}],[\"即对象成环\",{\"1\":{\"763\":1}}],[\"即不需要清理的对象\",{\"1\":{\"1646\":1}}],[\"即不能作为构造函数\",{\"1\":{\"362\":1}}],[\"即比较文件在暂存区和工作区的差异\",{\"1\":{\"1632\":1}}],[\"即该文件已被\",{\"1\":{\"1584\":1}}],[\"即该文件没有被\",{\"1\":{\"1584\":1}}],[\"即所谓的字面量类型\",{\"1\":{\"1427\":1}}],[\"即所有的\",{\"1\":{\"328\":1}}],[\"即是表示待推断的返回值类型\",{\"1\":{\"1377\":1}}],[\"即在前一个全屏\",{\"1\":{\"1766\":1}}],[\"即在调用\",{\"1\":{\"1201\":1}}],[\"即在父级元素末尾添加的元素必须是一个块级元素\",{\"1\":{\"182\":1}}],[\"即网站程序存放目录\",{\"1\":{\"1153\":1}}],[\"即以递归的方式逐个变更\",{\"1\":{\"1038\":1}}],[\"即把文件移到压缩文件中\",{\"1\":{\"1018\":1}}],[\"即全局变量和局部变量的区别\",{\"1\":{\"900\":1}}],[\"即请求体\",{\"1\":{\"816\":1}}],[\"即循环引用没有解决\",{\"1\":{\"765\":1}}],[\"即展开一层数组\",{\"1\":{\"739\":1}}],[\"即开始位置\",{\"1\":{\"703\":2}}],[\"即需要小于\",{\"1\":{\"677\":1}}],[\"即x==x不成应\",{\"1\":{\"656\":1}}],[\"即得\",{\"1\":{\"611\":1}}],[\"即将满足需求的职责分配到组件上\",{\"1\":{\"1966\":1}}],[\"即将非活动对象占用的空间清理掉\",{\"1\":{\"1648\":1}}],[\"即将用户类型的所有权限重新设置\",{\"1\":{\"1039\":1}}],[\"即将0变成1\",{\"1\":{\"609\":1}}],[\"即将符号位共同参与运算的运算\",{\"1\":{\"606\":1}}],[\"即参加运算的两个对象只要有一个为1\",{\"1\":{\"608\":1}}],[\"即两位同时为\",{\"1\":{\"607\":1}}],[\"即原码\",{\"1\":{\"606\":1}}],[\"即执行\",{\"1\":{\"597\":1}}],[\"即便forceclear设为true\",{\"1\":{\"2836\":1}}],[\"即便是相同域名下的两个页面\",{\"1\":{\"1666\":1}}],[\"即便\",{\"1\":{\"588\":1}}],[\"即便这个函数是作为对象\",{\"1\":{\"261\":1}}],[\"即then方法后面再调用另一个then方法\",{\"1\":{\"571\":1}}],[\"即延迟传入\",{\"1\":{\"569\":1}}],[\"即它们会等待用户触发后才真正的执行\",{\"1\":{\"554\":1}}],[\"即长度为\",{\"1\":{\"530\":1}}],[\"即作用域控制着变量和函数的可见性和生命周期\",{\"1\":{\"501\":1}}],[\"即实例识别\",{\"1\":{\"478\":1}}],[\"即运行时加载\",{\"1\":{\"467\":1}}],[\"即统一模块定义\",{\"1\":{\"465\":1}}],[\"即通用模块定义\",{\"1\":{\"464\":1}}],[\"即异步模块加载机制\",{\"1\":{\"457\":1}}],[\"即只有一个模块实例\",{\"1\":{\"455\":1}}],[\"即只要等号两边的模式相等\",{\"1\":{\"251\":1}}],[\"即应用程序接口\",{\"1\":{\"455\":1}}],[\"即接口\",{\"1\":{\"445\":1}}],[\"即立即执行函数\",{\"1\":{\"445\":1}}],[\"即规范\",{\"1\":{\"444\":1}}],[\"即使渲染器的autoclear属性值是false\",{\"1\":{\"2836\":1}}],[\"即使是有损的\",{\"1\":{\"2075\":1}}],[\"即使是这样\",{\"1\":{\"855\":1}}],[\"即使不关心对象的内部构造\",{\"1\":{\"1832\":1}}],[\"即使丢失\",{\"1\":{\"1731\":1}}],[\"即使网络条件不好\",{\"1\":{\"1712\":1}}],[\"即使网络失去连接\",{\"1\":{\"1581\":1}}],[\"即使下载完\",{\"1\":{\"1707\":1}}],[\"即使\",{\"1\":{\"1416\":1}}],[\"即使每次创建相同的对象\",{\"1\":{\"1236\":1}}],[\"即使并发模式下\",{\"1\":{\"1234\":1}}],[\"即使该函数的实际内容没有任何变化\",{\"1\":{\"1209\":1}}],[\"即使目标文件已存在也会覆盖\",{\"1\":{\"998\":1}}],[\"即使原档案属性设为唯读\",{\"1\":{\"995\":1}}],[\"即使初始条件不成立\",{\"1\":{\"890\":1}}],[\"即使它不是字符串\",{\"1\":{\"806\":1}}],[\"即使它们不是布尔值\",{\"1\":{\"795\":1}}],[\"即使数组的元素都是数值\",{\"1\":{\"698\":1}}],[\"即使这个数已经超出了\",{\"1\":{\"650\":1}}],[\"即使其全部二进制位为0\",{\"1\":{\"607\":1}}],[\"即使在应用后仍将更改保留在\",{\"1\":{\"1601\":1}}],[\"即使在调用deleteelement\",{\"1\":{\"434\":1}}],[\"即使在从\",{\"1\":{\"434\":1}}],[\"即使只需要启动一次\",{\"1\":{\"432\":1}}],[\"即使从末尾开始往前跳\",{\"1\":{\"289\":1}}],[\"即\",{\"1\":{\"398\":1,\"606\":2,\"656\":1,\"900\":1,\"953\":1,\"1244\":2,\"1454\":1,\"1609\":1,\"1955\":1,\"2077\":1}}],[\"即切片开始位置\",{\"1\":{\"389\":1}}],[\"即二进制大对象\",{\"1\":{\"387\":1}}],[\"即经过\",{\"1\":{\"360\":1}}],[\"即输出的是原始代码\",{\"1\":{\"317\":1}}],[\"即物理像素\",{\"1\":{\"202\":1}}],[\"即能清除掉浮动\",{\"1\":{\"185\":1}}],[\"即块级元素独占一行\",{\"1\":{\"149\":1}}],[\"父亲中有\",{\"1\":{\"1485\":1}}],[\"父亲和儿子都有在这就处理了\",{\"1\":{\"1485\":1}}],[\"父子组件通信\",{\"0\":{\"1318\":1,\"1320\":1,\"1323\":1},\"2\":{\"1326\":1}}],[\"父子元素margin重叠问题\",{\"1\":{\"151\":1}}],[\"父目录\",{\"1\":{\"972\":1}}],[\"父类是个模板\",{\"1\":{\"1829\":1}}],[\"父类型中的属性会有两份\",{\"1\":{\"489\":1}}],[\"父类原型对象中一旦存在父类之前自己定义的方法\",{\"1\":{\"486\":1}}],[\"父容器的高度可以通过内容撑开\",{\"1\":{\"181\":1}}],[\"父容器高度塌陷\",{\"1\":{\"179\":1}}],[\"父容器内容宽度为零\",{\"1\":{\"153\":1}}],[\"使路由器可以简单路过选项而不做任何处理\",{\"1\":{\"2214\":1}}],[\"使数据直接由源地址到达目的地址\",{\"1\":{\"2208\":1}}],[\"使数字更具可读性\",{\"1\":{\"327\":1}}],[\"使嵌入式设备访问远程数据库就像访问本地数据库一样方便\",{\"1\":{\"2195\":1}}],[\"使内容传输得更快\",{\"1\":{\"2081\":1}}],[\"使基于分布部署和统一管理的分布式云\",{\"1\":{\"2052\":1}}],[\"使员工\",{\"1\":{\"1887\":1}}],[\"使每个方法中都只有一个职责\",{\"1\":{\"1839\":1}}],[\"使多个对象都有机会处理请求\",{\"1\":{\"1835\":1}}],[\"使它们都可以独立地变化\",{\"1\":{\"1820\":1}}],[\"使客户端对目标对象的具体实现细节进行解耦\",{\"1\":{\"1796\":1}}],[\"使真实服务器对客户端不可见\",{\"1\":{\"1794\":1}}],[\"使真实客户端对服务器不可见\",{\"1\":{\"1794\":1}}],[\"使网络不容易出现阻塞\",{\"1\":{\"1720\":1}}],[\"使状态更新逻辑更具可读性\",{\"1\":{\"1273\":1}}],[\"使代码复杂化\",{\"1\":{\"1212\":1}}],[\"使密码无效\",{\"1\":{\"950\":1}}],[\"使得执行速度大大下降\",{\"1\":{\"2162\":1}}],[\"使得对\",{\"1\":{\"2132\":1}}],[\"使得整个系统中的所有节点能够在去信任的环境自由安全的交换数据\",{\"1\":{\"2132\":1}}],[\"使得一旦错误发生\",{\"1\":{\"2095\":1}}],[\"使得企业具有平稳和有效的运作能力\",{\"1\":{\"1872\":1}}],[\"使得发送者和接收者能够消除彼此之间的耦合关系\",{\"1\":{\"1826\":1}}],[\"使得调试和代码理解变得困难\",{\"1\":{\"1813\":1}}],[\"使得系统易于管理和维护\",{\"1\":{\"1837\":1}}],[\"使得系统更灵活应对变化\",{\"1\":{\"1837\":1}}],[\"使得系统更加灵活和可扩展\",{\"1\":{\"1812\":1}}],[\"使得系统可以灵活地适应需求变化\",{\"1\":{\"1804\":1}}],[\"使得它们能够自动更新自己\",{\"1\":{\"1802\":1}}],[\"使得同样的构建过程可以创建不同的表示\",{\"1\":{\"1758\":1}}],[\"使得消费者\",{\"1\":{\"1747\":1}}],[\"使得客户端静能够模拟实时地收到服务器端的数据的变化\",{\"1\":{\"1737\":1}}],[\"使得主线程的停顿时间大大减少了\",{\"1\":{\"1650\":1}}],[\"使得\",{\"1\":{\"903\":1}}],[\"使得代码易于维护\",{\"1\":{\"819\":1}}],[\"使得代码很简洁\",{\"1\":{\"637\":1}}],[\"使得浏览器可以发出\",{\"1\":{\"813\":1}}],[\"使得在不同的分辨率下都能达到适配\",{\"1\":{\"205\":1}}],[\"使一些不规范的代码也可以正常执行\",{\"1\":{\"503\":1}}],[\"使这成为可能\",{\"1\":{\"471\":1}}],[\"使\",{\"1\":{\"344\":1}}],[\"使页面有良好的结构\",{\"1\":{\"215\":1}}],[\"使框\",{\"1\":{\"178\":1}}],[\"使其适合于执行dsp算法\",{\"1\":{\"2179\":1}}],[\"使其得不到释放\",{\"1\":{\"1653\":1}}],[\"使其很少接受检查\",{\"1\":{\"1648\":1}}],[\"使其指向我们指定的对象\",{\"1\":{\"355\":1}}],[\"使其建立一个bfc\",{\"1\":{\"152\":1}}],[\"使其父元素形成一个bfc\",{\"1\":{\"151\":1}}],[\"使用相机编译场景中的所有材质\",{\"1\":{\"2816\":1}}],[\"使用后处理时\",{\"1\":{\"2800\":1}}],[\"使用自定义\",{\"1\":{\"2741\":1}}],[\"使用基于物理的透光性\",{\"1\":{\"2737\":1}}],[\"使用metallic\",{\"1\":{\"2717\":1}}],[\"使用模板比较时所用的方法\",{\"1\":{\"2658\":1}}],[\"使用模块就可以更快速地定位问题\",{\"1\":{\"442\":1}}],[\"使用何种深度函数\",{\"1\":{\"2651\":1}}],[\"使用混合时所采用的混合方程式\",{\"1\":{\"2641\":1}}],[\"使用catmull\",{\"1\":{\"2411\":1}}],[\"使用cache改善系统性能的依据是程序的局部性原理\",{\"1\":{\"2141\":1}}],[\"使用getpointat\",{\"1\":{\"2336\":1}}],[\"使用getpoint\",{\"1\":{\"2335\":1}}],[\"使用哪种数据操纵语言\",{\"1\":{\"2232\":1}}],[\"使用一些列固定格式的扩展头部取代了ipv4中可变长度的选项字段\",{\"1\":{\"2214\":1}}],[\"使用访问控制矩阵来定义说明自由存取控制\",{\"1\":{\"2117\":1}}],[\"使用于通过内联网或国际网进行商务活动\",{\"1\":{\"2111\":1}}],[\"使用nosql和搜索引擎\",{\"0\":{\"2083\":1}}],[\"使用new\",{\"1\":{\"511\":1}}],[\"使用分布式文件系统和分布式数据库系统\",{\"0\":{\"2082\":1}}],[\"使用反向代理和cdn加速网站响应\",{\"0\":{\"2081\":1}}],[\"使用反向代理后\",{\"1\":{\"1794\":1}}],[\"使用利用率来表现剩余处理能力\",{\"1\":{\"2077\":1}}],[\"使用服务集群改善网站并发处理能力\",{\"0\":{\"2076\":1}}],[\"使用锁或队列\",{\"1\":{\"2071\":1}}],[\"使用缓存改善网站性能\",{\"0\":{\"2060\":1}}],[\"使用缓存代理进行乘法计算\",{\"1\":{\"1798\":1}}],[\"使用缓存代理可以缓存计算结果\",{\"1\":{\"1794\":1}}],[\"使用微服务\",{\"1\":{\"2053\":1}}],[\"使用户可以构建自己的应用\",{\"1\":{\"2051\":1}}],[\"使用环境\",{\"1\":{\"2028\":1}}],[\"使用统计学原理\",{\"1\":{\"1906\":1}}],[\"使用统计的测试来获取认证被交付的软件的可靠性所必需的出错率信息\",{\"1\":{\"1906\":1}}],[\"使用盒结构规约\",{\"1\":{\"1906\":1}}],[\"使用pdca循环\",{\"1\":{\"1884\":1}}],[\"使用partial<t>\",{\"1\":{\"1372\":1}}],[\"使用阶段\",{\"1\":{\"1854\":1}}],[\"使用责任链模式可能会使系统结构变得复杂\",{\"1\":{\"1838\":1}}],[\"使用正向代理后\",{\"1\":{\"1794\":1}}],[\"使用正则表达式即可实现\",{\"1\":{\"526\":1}}],[\"使用虚拟代理可以延迟加载资源或延迟执行昂贵的操作\",{\"1\":{\"1794\":1}}],[\"使用代理对象作为拦截器可以拦截和处理请求\",{\"1\":{\"1794\":1}}],[\"使用策略模式进行表单验证\",{\"1\":{\"1789\":1}}],[\"使用单例模式的一个常见场景是状态管理\",{\"1\":{\"1764\":1}}],[\"使用单引号\",{\"1\":{\"20\":1,\"63\":1}}],[\"使用示例\",{\"1\":{\"1755\":1}}],[\"使用示例如下\",{\"1\":{\"287\":1,\"710\":1,\"712\":1,\"713\":1}}],[\"使用工厂模式可能过于繁琐\",{\"1\":{\"1751\":1}}],[\"使用工厂模式\",{\"1\":{\"1747\":1}}],[\"使用者只需要操作抽象产品\",{\"1\":{\"1747\":1}}],[\"使用者的代码不需要做出太多改动\",{\"1\":{\"1747\":1}}],[\"使用者无需直接依赖具体的对象实现\",{\"1\":{\"1747\":1}}],[\"使用者\",{\"1\":{\"1747\":1}}],[\"使用websocket协议的缺点是在服务器端的配置比较复杂\",{\"1\":{\"1737\":1}}],[\"使用with语法改变作用域为this\",{\"1\":{\"1549\":1}}],[\"使用流信息向浏览器推送信息\",{\"1\":{\"1737\":1}}],[\"使用四次挥手的原因是因为\",{\"1\":{\"1729\":1}}],[\"使用累计确认保证了返回的确认号之前的报文段都\",{\"1\":{\"1724\":1}}],[\"使用拥塞避免算法\",{\"1\":{\"1719\":1}}],[\"使用慢开始算法\",{\"1\":{\"1719\":1}}],[\"使用并行回收\",{\"1\":{\"1649\":1}}],[\"使用区\",{\"1\":{\"1648\":1}}],[\"使用标记清除的原因之一\",{\"1\":{\"1646\":1}}],[\"使用以下命令来标记\",{\"1\":{\"1637\":1}}],[\"使用以下命令来将远程指定分支拉取到本地当前分支上\",{\"1\":{\"1609\":1}}],[\"使用以下命令即可\",{\"1\":{\"1627\":1}}],[\"使用以下命令将本地当前分支推送到与本地当前分支同名的远程分支上\",{\"1\":{\"1610\":1}}],[\"使用以下命令将远程仓库克隆到本地\",{\"1\":{\"1583\":1}}],[\"使用以下命令开将与本地当前分支同名的远程分支拉取到本地当前分支上\",{\"1\":{\"1609\":1}}],[\"使用以下命令就可以获取往前数的第三次提交的详细信息\",{\"1\":{\"1603\":1}}],[\"使用以下方式也会创建一个以外的全局变量\",{\"1\":{\"429\":1}}],[\"使用双指针移动来进行新老节点的对比\",{\"1\":{\"1478\":1}}],[\"使用元组时\",{\"1\":{\"1410\":1}}],[\"使用场景\",{\"0\":{\"1665\":1,\"1668\":1,\"1748\":1,\"1763\":1,\"1785\":1,\"1794\":1},\"1\":{\"1392\":1,\"1820\":1}}],[\"使用场景的简单总结\",{\"1\":{\"1212\":1}}],[\"使用泛型来创建可复用的组件要更好\",{\"1\":{\"1360\":1}}],[\"使用全局变量空间是危险的\",{\"1\":{\"1353\":1}}],[\"使用全屏模式观看视频\",{\"1\":{\"339\":1}}],[\"使用范围和注意事项\",{\"0\":{\"1309\":1}}],[\"使用函数式更新\",{\"1\":{\"1300\":1}}],[\"使用函数作为\",{\"1\":{\"1194\":1}}],[\"使用直接更新\",{\"1\":{\"1299\":1}}],[\"使用url参数进行回调\",{\"1\":{\"2477\":1}}],[\"使用url修饰符回调\",{\"1\":{\"2476\":1}}],[\"使用url回调初始化加载管理器\",{\"1\":{\"2462\":1}}],[\"使用useeffect来监听状态的变化\",{\"1\":{\"1274\":2}}],[\"使用uni\",{\"1\":{\"117\":1}}],[\"使用注意事项\",{\"0\":{\"1260\":1}}],[\"使用多个专门的接口比使用单一的总接口要好\",{\"1\":{\"1937\":1}}],[\"使用多个\",{\"0\":{\"1228\":1}}],[\"使用回调函数作为\",{\"1\":{\"1197\":1}}],[\"使用上下肩头调用以前的历史命令\",{\"1\":{\"1084\":1}}],[\"使用上述例子读取文本文件时\",{\"1\":{\"395\":1}}],[\"使用符号模式可以设置多个项目\",{\"1\":{\"1039\":1}}],[\"使用不同的演算法\",{\"1\":{\"1009\":1}}],[\"使用指令cp将当前目录test\",{\"1\":{\"999\":1}}],[\"使用指向全局对象的\",{\"0\":{\"429\":1}}],[\"使用a标记文本的当前位置\",{\"1\":{\"989\":1}}],[\"使用await关键字可以暂停异步代码的执行\",{\"1\":{\"594\":1}}],[\"使用配置的编辑器编辑当前文件\",{\"1\":{\"989\":1}}],[\"使用管道\",{\"1\":{\"984\":1}}],[\"使用说明\",{\"1\":{\"983\":1}}],[\"使用操作系统的人都是用户\",{\"1\":{\"935\":1}}],[\"使用量\",{\"1\":{\"929\":1}}],[\"使用权限\",{\"1\":{\"918\":1,\"929\":1}}],[\"使用这两个关键词定义的变量只能在块级作用域中被访问\",{\"1\":{\"898\":1}}],[\"使用技巧\",{\"0\":{\"845\":1}}],[\"使用定时器\",{\"1\":{\"828\":1}}],[\"使用客户端未过期的缓存\",{\"1\":{\"817\":1}}],[\"使用原始值\",{\"1\":{\"806\":1}}],[\"使用原型式继承可以获得目标对象的浅拷贝\",{\"1\":{\"492\":1}}],[\"使用对象作为属性key值\",{\"1\":{\"805\":1}}],[\"使用与\",{\"1\":{\"795\":1}}],[\"使用字面量类型\",{\"1\":{\"1428\":1}}],[\"使用字面量形式创建如下数组\",{\"1\":{\"679\":1}}],[\"使用字母顺序比较它们\",{\"1\":{\"778\":1}}],[\"使用严格相等\",{\"1\":{\"772\":1}}],[\"使用该方法时\",{\"1\":{\"763\":1}}],[\"使用该方法主要有以下两个用途\",{\"1\":{\"313\":1}}],[\"使用扩展运算符进行浅拷贝会更加方便\",{\"1\":{\"756\":1}}],[\"使用扩展运算符可以在构造字面量对象的时候\",{\"1\":{\"756\":1}}],[\"使用数据结构集合\",{\"1\":{\"742\":1}}],[\"使用断言函数的方法有两个\",{\"1\":{\"709\":1}}],[\"使用负数可从数组结尾处规定位置\",{\"1\":{\"703\":1}}],[\"使用构造函数创建数组的形式如下\",{\"1\":{\"677\":1}}],[\"使用条件表达式可以代替很多if\",{\"1\":{\"637\":1}}],[\"使用的时候不需要知道谁才是真正处理方法\",{\"1\":{\"1839\":1}}],[\"使用的命令为\",{\"1\":{\"1016\":2}}],[\"使用的终端机\",{\"1\":{\"929\":1}}],[\"使用的情况\",{\"1\":{\"588\":1}}],[\"使用的是\",{\"1\":{\"474\":1}}],[\"使用其他的大部分语言实现类似代码时\",{\"1\":{\"506\":1}}],[\"使用变量提升有如下两个好处\",{\"1\":{\"501\":1}}],[\"使用变量形式声明fn并在其前面执行时\",{\"1\":{\"500\":1}}],[\"使用静态\",{\"1\":{\"471\":1}}],[\"使用默认导出的模块\",{\"1\":{\"470\":1}}],[\"使用命名导出的模块\",{\"1\":{\"470\":1}}],[\"使用依赖前\",{\"1\":{\"464\":1}}],[\"使用时就是这样的\",{\"1\":{\"452\":1}}],[\"使用简单\",{\"1\":{\"450\":1,\"1752\":1}}],[\"使用绝对路径\",{\"1\":{\"449\":1}}],[\"使用性能分析器可视化内存消耗\",{\"0\":{\"436\":1},\"1\":{\"435\":1}}],[\"使用内存\",{\"1\":{\"425\":1}}],[\"使用todataurl\",{\"1\":{\"414\":1}}],[\"使用它的形式有很多种\",{\"1\":{\"703\":1}}],[\"使用它时\",{\"1\":{\"408\":1}}],[\"使用它就可以在全屏模式下查看页面\",{\"1\":{\"339\":1}}],[\"使用此选项可以指定等待时间\",{\"1\":{\"1106\":1}}],[\"使用此\",{\"1\":{\"340\":1}}],[\"使用到了数组的解构赋值\",{\"1\":{\"251\":1}}],[\"使用解构赋值来获取父组件传来的值\",{\"1\":{\"251\":1}}],[\"使用h1标签自带权重\",{\"1\":{\"219\":1}}],[\"使用索引器对数据库中重要信息进行处理\",{\"1\":{\"217\":1}}],[\"使用设备\",{\"1\":{\"119\":1}}],[\"使用\",{\"0\":{\"89\":1,\"451\":1,\"461\":1,\"474\":1,\"814\":1,\"1218\":1,\"1229\":1,\"1274\":1,\"1287\":1},\"1\":{\"123\":2,\"226\":2,\"232\":1,\"240\":1,\"250\":1,\"261\":1,\"287\":1,\"289\":1,\"339\":1,\"340\":2,\"341\":1,\"343\":1,\"395\":1,\"430\":1,\"432\":1,\"467\":1,\"473\":1,\"474\":1,\"482\":1,\"504\":1,\"507\":1,\"562\":1,\"569\":1,\"588\":1,\"597\":1,\"646\":1,\"650\":1,\"653\":1,\"662\":1,\"679\":1,\"684\":1,\"729\":1,\"743\":1,\"785\":1,\"786\":1,\"790\":1,\"791\":1,\"792\":1,\"793\":1,\"817\":3,\"819\":1,\"861\":1,\"872\":1,\"898\":1,\"902\":1,\"903\":1,\"943\":1,\"984\":5,\"1018\":1,\"1021\":1,\"1057\":1,\"1067\":1,\"1084\":3,\"1115\":1,\"1201\":2,\"1212\":6,\"1220\":1,\"1222\":1,\"1267\":3,\"1273\":3,\"1274\":5,\"1279\":1,\"1288\":1,\"1290\":1,\"1303\":1,\"1308\":1,\"1312\":3,\"1392\":1,\"1416\":1,\"1458\":1,\"1521\":1,\"1581\":2,\"1613\":1,\"1614\":1,\"2277\":1,\"2578\":1,\"2741\":2,\"2744\":1,\"2750\":1}}],[\"使用制表符而不是空格缩进行\",{\"1\":{\"20\":1,\"63\":1}}],[\"上传的开销而导致明显的延迟\",{\"1\":{\"2833\":1}}],[\"上传的图片转化成了一个\",{\"1\":{\"413\":1}}],[\"上运行\",{\"1\":{\"2741\":1}}],[\"上使用这种材质时会以一些图形精度为代价\",{\"1\":{\"2593\":1}}],[\"上使用专门的嵌入式工具开发\",{\"1\":{\"2177\":1}}],[\"上线时手工操作\",{\"1\":{\"2073\":1}}],[\"上线时间\",{\"1\":{\"929\":1}}],[\"上常用的\",{\"1\":{\"1695\":1}}],[\"上例定义事件回调时\",{\"1\":{\"1653\":1}}],[\"上例中\",{\"1\":{\"1340\":1}}],[\"上诉代码就是依赖收集和派发更新的核心\",{\"1\":{\"1560\":1}}],[\"上定义\",{\"1\":{\"1519\":1}}],[\"上存在的对象\",{\"1\":{\"1356\":1}}],[\"上卡顿一下\",{\"1\":{\"1311\":1}}],[\"上的属性标识为\",{\"1\":{\"1388\":1}}],[\"上的全局变量\",{\"1\":{\"896\":1,\"903\":1}}],[\"上的\",{\"1\":{\"817\":1,\"1695\":1}}],[\"上的音频源添加效果和过滤器\",{\"1\":{\"338\":1}}],[\"上提供的方法\",{\"1\":{\"657\":1}}],[\"上一步模板编译解析生成了render函数\",{\"1\":{\"1526\":1}}],[\"上一步中\",{\"1\":{\"581\":1}}],[\"上一行\",{\"1\":{\"989\":1}}],[\"上一次调用回调返回的值\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"上没有proto这个属性\",{\"1\":{\"482\":1}}],[\"上编写其他\",{\"1\":{\"463\":1}}],[\"上有一个\",{\"1\":{\"401\":1}}],[\"上下文的应用程序相关\",{\"1\":{\"2837\":1}}],[\"上下文传值\",{\"0\":{\"1324\":1}}],[\"上下文通信\",{\"0\":{\"1321\":1}}],[\"上下文\",{\"1\":{\"374\":1}}],[\"上下文对象\",{\"0\":{\"354\":1}}],[\"上设置了一个\",{\"1\":{\"343\":1}}],[\"上通过其\",{\"1\":{\"340\":1}}],[\"上调用了\",{\"1\":{\"803\":1}}],[\"上调用\",{\"1\":{\"339\":2}}],[\"上\",{\"0\":{\"1508\":1},\"1\":{\"339\":1,\"1057\":1,\"1514\":1,\"1533\":1,\"1905\":1}}],[\"上操作音频流\",{\"1\":{\"338\":1}}],[\"上述代码中\",{\"1\":{\"729\":1,\"1210\":1}}],[\"上述代码可以简写为以下形式\",{\"1\":{\"286\":1,\"678\":1}}],[\"上述代码函数体只有单条语句\",{\"1\":{\"260\":1}}],[\"上访问页面是正常显示的\",{\"1\":{\"200\":1}}],[\"上看到的页面都是比较大的\",{\"1\":{\"200\":1}}],[\"上图wrap元素与h1元素之间理论上本该有个40px的上下margin值\",{\"1\":{\"151\":1}}],[\"上面\",{\"1\":{\"1484\":1}}],[\"上面第二段代码就出现了问题\",{\"1\":{\"698\":1}}],[\"上面第三段代码执行起来嵌套的情况还算简单\",{\"1\":{\"590\":1}}],[\"上面我们提到了\",{\"1\":{\"1631\":1}}],[\"上面我们说过\",{\"1\":{\"1648\":1}}],[\"上面我们说的解构的知识普通的数组和对象\",{\"1\":{\"844\":1}}],[\"上面我们说了\",{\"1\":{\"736\":1}}],[\"上面我们已经说了在结果添加数据的方法\",{\"1\":{\"694\":1}}],[\"上面我们介绍的都是静态导入\",{\"1\":{\"471\":1}}],[\"上面代码会输出\",{\"1\":{\"898\":1}}],[\"上面代码中\",{\"1\":{\"575\":2,\"663\":1}}],[\"上面代码的第4行上方的区域就是暂时性死区\",{\"1\":{\"511\":1}}],[\"上面代码的\",{\"1\":{\"272\":1}}],[\"上面代码的逻辑是\",{\"1\":{\"118\":1}}],[\"上面这段代码\",{\"1\":{\"1547\":1}}],[\"上面这段代码看起来就非常线性了\",{\"1\":{\"569\":1}}],[\"上面这些方法都接受一个要读取的\",{\"1\":{\"394\":1}}],[\"上面是以下代码的简单形式\",{\"1\":{\"568\":1}}],[\"上面说了作用域的概念\",{\"1\":{\"901\":1}}],[\"上面说了\",{\"1\":{\"528\":1}}],[\"上面说到的视口宽度等均是\",{\"1\":{\"202\":1}}],[\"上面只是\",{\"1\":{\"461\":1}}],[\"上面还提到了setimmediate\",{\"1\":{\"382\":1}}],[\"上面每个阶段都会去执行完当前阶段的任务队列\",{\"1\":{\"379\":1}}],[\"上面提到\",{\"1\":{\"474\":1}}],[\"上面提到了process\",{\"1\":{\"381\":1}}],[\"上面提到了任务队列和执行栈\",{\"1\":{\"372\":1}}],[\"上面提到事件冒泡阶段是指事件从目标节点自下而上向\",{\"1\":{\"240\":1}}],[\"上面的命令可以撤销指定文件的缓存\",{\"1\":{\"1614\":1}}],[\"上面的示例可以简化为如下所示内容\",{\"1\":{\"1442\":1}}],[\"上面的例子中\",{\"1\":{\"1338\":1,\"1466\":1}}],[\"上面的data如果是不存在的\",{\"1\":{\"624\":1}}],[\"上面的这种编程方式就让\",{\"1\":{\"590\":1}}],[\"上面的调用链\",{\"1\":{\"578\":1}}],[\"上面的代码中\",{\"1\":{\"578\":1}}],[\"上面的代码给\",{\"1\":{\"568\":1}}],[\"上面的代码就等同于\",{\"1\":{\"472\":1}}],[\"上面的代码就是一个返回对象的闭包\",{\"1\":{\"445\":1}}],[\"上面的代码使用原生\",{\"1\":{\"345\":1}}],[\"上面的\",{\"1\":{\"206\":1,\"445\":1}}],[\"上面那种办法固然可以清除浮动\",{\"1\":{\"183\":1}}],[\"上面例中两个p元素之间距离本该为200px\",{\"1\":{\"151\":1}}],[\"发展性原则\",{\"1\":{\"1856\":1}}],[\"发出命令\",{\"1\":{\"1826\":1}}],[\"发布请求\",{\"1\":{\"1826\":1}}],[\"发布\",{\"1\":{\"1810\":1,\"1812\":3,\"1813\":2}}],[\"发布订阅模式\",{\"0\":{\"1809\":1},\"2\":{\"1816\":1}}],[\"发布者invoker\",{\"1\":{\"1826\":1}}],[\"发布者可以在任何时间发布事件\",{\"1\":{\"1812\":1}}],[\"发布者每次发布通知时需要遍历所有订阅者\",{\"1\":{\"1805\":1}}],[\"发布者和订阅者之间可以互相独立地变化\",{\"1\":{\"1804\":1}}],[\"发给\",{\"1\":{\"1728\":1}}],[\"发现标签一致\",{\"1\":{\"1478\":1}}],[\"发起的\",{\"1\":{\"1249\":1}}],[\"发生变化时重新渲染\",{\"1\":{\"1267\":1}}],[\"发生变化时\",{\"1\":{\"1267\":1,\"1283\":1}}],[\"发生变化\",{\"1\":{\"1211\":1}}],[\"发生革命性的变化\",{\"1\":{\"903\":1}}],[\"发生错误时调用\",{\"1\":{\"340\":1}}],[\"发生了margin重叠\",{\"1\":{\"151\":1}}],[\"发送的不是一次性的数据包\",{\"1\":{\"1737\":1}}],[\"发送完成后便进入\",{\"1\":{\"1727\":1}}],[\"发送所有的已发\",{\"1\":{\"1724\":1}}],[\"发送窗口的大小是变化的\",{\"1\":{\"1724\":1}}],[\"发送窗口以后的报文段是缓存中还不允许发送的报文段\",{\"1\":{\"1724\":1}}],[\"发送窗口以前的报文段是已经发送并确认了的报文段\",{\"1\":{\"1724\":1}}],[\"发送窗口中包含了已经发送但\",{\"1\":{\"1724\":1}}],[\"发送方收到一个零窗口通告时\",{\"1\":{\"1723\":1}}],[\"发送方只要连续收到三个重复确认就立即重传对方尚未收到的报文段\",{\"1\":{\"1721\":1}}],[\"发送方的udp对应用程序交下来的报文\",{\"1\":{\"1712\":1}}],[\"发送http请求\",{\"0\":{\"1689\":1}}],[\"发送请求\",{\"1\":{\"864\":1,\"866\":1}}],[\"发送\",{\"1\":{\"559\":1,\"569\":1,\"817\":1,\"860\":1}}],[\"发送数据也不会关心对方是否已经正确接收到数据了\",{\"1\":{\"1712\":1}}],[\"发送数据的方法很原始\",{\"1\":{\"1692\":1}}],[\"发送数据时需要的数据\",{\"1\":{\"128\":1}}],[\"发送数据<\",{\"1\":{\"127\":1}}],[\"发送数据\",{\"1\":{\"125\":1,\"127\":1}}],[\"发送指令只要有\",{\"1\":{\"124\":1}}],[\"发送指令\",{\"0\":{\"124\":1},\"1\":{\"116\":1,\"124\":1}}],[\"然而他忘记同时修改\",{\"1\":{\"1416\":1}}],[\"然而\",{\"1\":{\"1203\":1,\"1366\":1,\"1763\":1}}],[\"然而上面的例子中将\",{\"1\":{\"178\":1}}],[\"然而实际上父子元素并没有存在margin值\",{\"1\":{\"151\":1}}],[\"然而实际上只有100px\",{\"1\":{\"151\":1}}],[\"然后撤消blob\",{\"1\":{\"2462\":1}}],[\"然后可以用t来使用\",{\"1\":{\"2340\":1}}],[\"然后调入内存\",{\"1\":{\"2161\":1}}],[\"然后由代理服务器和原始服务器通信\",{\"1\":{\"1794\":1}}],[\"然后菜做出来之后\",{\"1\":{\"1747\":1}}],[\"然后判断服务器端数据是否有更新\",{\"1\":{\"1737\":1}}],[\"然后收到数据的时\",{\"1\":{\"1730\":1}}],[\"然后接收到了\",{\"1\":{\"1730\":1}}],[\"然后接收到\",{\"1\":{\"1730\":2}}],[\"然后接收端实体对已成功收到的字节发回一个相应的确认\",{\"1\":{\"1713\":1}}],[\"然后服务端便进入\",{\"1\":{\"1729\":1}}],[\"然后就传递给网络层了\",{\"1\":{\"1712\":1}}],[\"然后就可以推送他们的更改\",{\"1\":{\"1581\":1}}],[\"然后就可以在这个函数内部使用\",{\"1\":{\"594\":1}}],[\"然后得出一个权重值\",{\"1\":{\"1707\":1}}],[\"然后我们得到一个规则表\",{\"1\":{\"1706\":1}}],[\"然后继续构建\",{\"1\":{\"1707\":1}}],[\"然后继续工作\",{\"1\":{\"1705\":1}}],[\"然后继续执行当前阶段的微任务队列\",{\"1\":{\"379\":1}}],[\"然后继续执行下一个方法\",{\"1\":{\"374\":1}}],[\"然后以合适的方法创建dom对象并把这些符号插入到dom对象中\",{\"1\":{\"1705\":1}}],[\"然后以数字返回该数字\",{\"1\":{\"551\":1}}],[\"然后根据动态语言的脚本\",{\"1\":{\"1698\":1}}],[\"然后会发送\",{\"1\":{\"1729\":1}}],[\"然后会查看\",{\"1\":{\"1698\":1}}],[\"然后会改变结果的符号\",{\"1\":{\"605\":1}}],[\"然后开启一个子进程去处理这个请求\",{\"1\":{\"1695\":1}}],[\"然后垃圾回收器在会从一组跟对象出发\",{\"1\":{\"1650\":1}}],[\"然后切成两部分\",{\"1\":{\"1646\":1}}],[\"然后从各个根对象开始遍历\",{\"1\":{\"1646\":1}}],[\"然后从该字串之后开始显示\",{\"1\":{\"986\":1}}],[\"然后释放其内存\",{\"1\":{\"1646\":1}}],[\"然后释放掉其占用的内存\",{\"1\":{\"1645\":1}}],[\"然后重新渲染一个新的\",{\"1\":{\"1475\":1}}],[\"然后编译器会检查参数是否是指定的字面量类型集合里的成员\",{\"1\":{\"1428\":1}}],[\"然后建立对应的集合\",{\"1\":{\"1370\":1}}],[\"然后让浏览器在下一次绘制时立即体现这些更改\",{\"1\":{\"1255\":1}}],[\"然后看看它们分别适用什么场景\",{\"1\":{\"1237\":1}}],[\"然后一次性更新所有组件\",{\"1\":{\"1199\":1}}],[\"然后退出\",{\"1\":{\"1067\":1}}],[\"然后你可以输入文本\",{\"1\":{\"983\":1}}],[\"然后还是从下往上查找\",{\"1\":{\"901\":1}}],[\"然后比较两个原始值\",{\"1\":{\"807\":1}}],[\"然后比较字符串来决定顺序\",{\"1\":{\"698\":1}}],[\"然后使用\",{\"1\":{\"806\":1,\"1366\":1,\"1372\":1}}],[\"然后使用finally方法关掉服务器\",{\"1\":{\"575\":1}}],[\"然后连接起来\",{\"1\":{\"802\":1}}],[\"然后通过\",{\"1\":{\"1460\":1}}],[\"然后通过正则表达式的方式把括号过滤掉\",{\"1\":{\"740\":1}}],[\"然后通过正则表达式过滤掉字符串中的数组的方括号\",{\"1\":{\"740\":1}}],[\"然后通过服务获取特征值\",{\"1\":{\"120\":1}}],[\"然后返回目标对象\",{\"1\":{\"762\":1}}],[\"然后返回被删除的项目\",{\"1\":{\"703\":1}}],[\"然后返回这个新数组\",{\"1\":{\"678\":1}}],[\"然后数组长度减一\",{\"1\":{\"695\":1}}],[\"然后转换为\",{\"1\":{\"663\":1}}],[\"然后加\",{\"1\":{\"606\":1}}],[\"然后其\",{\"1\":{\"583\":1}}],[\"然后注册一个\",{\"1\":{\"582\":1}}],[\"然后注册事件处理程序和回调\",{\"1\":{\"340\":1}}],[\"然后把拥塞窗口设置为1\",{\"1\":{\"1720\":1}}],[\"然后把这些字符串连接起来\",{\"1\":{\"690\":1}}],[\"然后把返回的\",{\"1\":{\"569\":1}}],[\"然后把对应的方法执行\",{\"1\":{\"236\":1}}],[\"然后才能执行\",{\"1\":{\"554\":1}}],[\"然后主代码才能执行\",{\"1\":{\"471\":1}}],[\"然后运行函数\",{\"1\":{\"463\":1}}],[\"然后执行拥塞避免算法\",{\"1\":{\"1722\":1}}],[\"然后执行命令\",{\"1\":{\"1596\":1}}],[\"然后执行了\",{\"1\":{\"1527\":1}}],[\"然后执行\",{\"1\":{\"737\":1,\"903\":1}}],[\"然后执行数值比较\",{\"1\":{\"628\":1}}],[\"然后执行并加载\",{\"1\":{\"454\":1}}],[\"然后执行我们的代码\",{\"1\":{\"374\":1}}],[\"然后拷贝原来\",{\"1\":{\"400\":1}}],[\"然后给这个元素添加\",{\"1\":{\"392\":1}}],[\"然后依次执行里面的函数\",{\"1\":{\"375\":1}}],[\"然后按按钮发送消息\",{\"1\":{\"343\":1}}],[\"然后按照普通的\",{\"1\":{\"234\":1}}],[\"然后按照一定格式返回给用户\",{\"1\":{\"217\":1}}],[\"然后\",{\"1\":{\"339\":1,\"340\":1,\"382\":1,\"677\":1,\"895\":1,\"1699\":1}}],[\"然后往后搜寻\",{\"1\":{\"289\":1}}],[\"然后是\",{\"1\":{\"234\":2,\"360\":1}}],[\"然后再重新分隔成数组\",{\"1\":{\"738\":1}}],[\"然后再用\",{\"1\":{\"738\":1}}],[\"然后再取反\",{\"1\":{\"666\":1}}],[\"然后再执行比较\",{\"1\":{\"628\":1}}],[\"然后再按照顺序执行代码\",{\"1\":{\"508\":1}}],[\"然后再从宏任务队列中取下一个\",{\"1\":{\"376\":1}}],[\"然后再应用解构语法\",{\"1\":{\"254\":1}}],[\"然后再进入代码执行阶段\",{\"1\":{\"249\":1}}],[\"然后再到\",{\"1\":{\"234\":1}}],[\"然后再将计算的结果绘制出来\",{\"1\":{\"223\":1}}],[\"然后将请求转发给内部网络上真正进行处理的服务器\",{\"1\":{\"1794\":1}}],[\"然后将这几部分会逐一进行处理\",{\"1\":{\"1641\":1}}],[\"然后将arraymethods继承自数组原型\",{\"1\":{\"1535\":1}}],[\"然后将\",{\"1\":{\"866\":1}}],[\"然后将派生的原始类型转换为数字\",{\"1\":{\"806\":1}}],[\"然后将派生的原始类型转换为字符串\",{\"1\":{\"806\":1}}],[\"然后将其返回\",{\"1\":{\"1194\":1}}],[\"然后将其转换为最终类型\",{\"1\":{\"804\":1}}],[\"然后将其设置\",{\"1\":{\"182\":1}}],[\"然后将它插入到指定索引开始的位置\",{\"1\":{\"685\":1}}],[\"然后将得到的值作为\",{\"1\":{\"595\":1}}],[\"然后将计数减一\",{\"1\":{\"582\":1}}],[\"然后将结果压缩成一个新数组\",{\"1\":{\"312\":1}}],[\"然后将该变量作为对象参数的属性进行赋值和读取\",{\"1\":{\"270\":1}}],[\"然后将收集汇总的信息进行分析\",{\"1\":{\"213\":1}}],[\"然后页面的宽度就会跟我的设备宽度一致\",{\"1\":{\"202\":1}}],[\"然后在单个帧时渲染完成后调用\",{\"1\":{\"2800\":1}}],[\"然后在栈内存中保存一个对堆内存中实际对象的引用\",{\"1\":{\"1644\":1}}],[\"然后在合适的时机批量处理这些更新\",{\"1\":{\"1199\":1}}],[\"然后在=<文件>中指定此文本文件\",{\"1\":{\"1009\":1}}],[\"然后在运算\",{\"1\":{\"667\":1}}],[\"然后在对其取反\",{\"1\":{\"623\":1}}],[\"然后在\",{\"1\":{\"126\":1,\"569\":1,\"1002\":1}}],[\"只支持\",{\"1\":{\"2872\":1}}],[\"只\",{\"1\":{\"2742\":1}}],[\"只影响光照\",{\"1\":{\"2700\":1}}],[\"只保留与嵌入式应用有关的母版功能\",{\"1\":{\"2179\":1}}],[\"只保存文件名称及其内容\",{\"1\":{\"1018\":1}}],[\"只适合需求明确的项目\",{\"1\":{\"1895\":1}}],[\"只接收感兴趣的消息\",{\"1\":{\"1810\":1}}],[\"只对外提供一个接口\",{\"1\":{\"1784\":1}}],[\"只对符号连接的文件作修改\",{\"1\":{\"1032\":1}}],[\"只使用一个实例\",{\"1\":{\"1769\":1}}],[\"只生产少量简单的商品\",{\"1\":{\"1752\":1}}],[\"只管吃就好了\",{\"1\":{\"1747\":1}}],[\"只代\",{\"1\":{\"1729\":1}}],[\"只触发一次重新渲染\",{\"1\":{\"1199\":1}}],[\"只会改变光照\",{\"1\":{\"2710\":1}}],[\"只会重\",{\"1\":{\"1724\":1}}],[\"只会执行一次异步\",{\"1\":{\"1542\":1}}],[\"只会执行一次render函数\",{\"1\":{\"1197\":1}}],[\"只会中断或延迟\",{\"1\":{\"1236\":1}}],[\"只会对单钱用户生效\",{\"1\":{\"1116\":1}}],[\"只会对当前用户生效\",{\"1\":{\"1116\":1}}],[\"只会取代光标所在的那一个字符一次\",{\"1\":{\"1065\":1}}],[\"只会被执行一次\",{\"1\":{\"458\":1}}],[\"只用键盘就可以\",{\"1\":{\"1054\":1}}],[\"只执行\",{\"1\":{\"1040\":1}}],[\"只写\",{\"1\":{\"1040\":1}}],[\"只读标志\",{\"1\":{\"2857\":1}}],[\"只读\",{\"0\":{\"1414\":1},\"1\":{\"1040\":1,\"1067\":1}}],[\"只读属性用于限制只能在对象刚刚创建的时候修改其值\",{\"1\":{\"1339\":1}}],[\"只读属性\",{\"0\":{\"1339\":1,\"1388\":1},\"1\":{\"405\":1}}],[\"只压缩符合条件的文件\",{\"1\":{\"1018\":1}}],[\"只打印匹配的行数\",{\"1\":{\"1015\":1}}],[\"只打印匹配的文件名\",{\"1\":{\"1015\":1}}],[\"只打印不匹配的行\",{\"1\":{\"1015\":1}}],[\"只标志最后搜索的关键词\",{\"1\":{\"989\":1}}],[\"只显示一个数字和一个按钮\",{\"1\":{\"1269\":1}}],[\"只显示一个空行\",{\"1\":{\"983\":1}}],[\"只显示登入系统的帐号名称和总人数\",{\"1\":{\"930\":1}}],[\"只列出目录\",{\"1\":{\"972\":1}}],[\"只让最后一次生效\",{\"1\":{\"830\":1}}],[\"只让函数触发的第一次生效\",{\"1\":{\"827\":1}}],[\"只等于\",{\"1\":{\"802\":1}}],[\"只拷贝对象\",{\"1\":{\"760\":1,\"768\":1}}],[\"只返回数组的下标对应的属性值\",{\"1\":{\"719\":1}}],[\"只遍历当前对象不会遍历原型链\",{\"1\":{\"719\":1}}],[\"只在栈顶发生\",{\"1\":{\"691\":1}}],[\"只不过是一个约定好的规范而已\",{\"1\":{\"1363\":1}}],[\"只不过\",{\"1\":{\"866\":1}}],[\"只不过值为\",{\"1\":{\"679\":1}}],[\"只不过通过\",{\"1\":{\"591\":1}}],[\"只不过其中任何本身也是数组的元素会被打平填充到返回的数组中\",{\"1\":{\"311\":1,\"720\":1}}],[\"只与点击事件有没有被触发有关\",{\"1\":{\"558\":1}}],[\"只是标记结束后\",{\"1\":{\"1646\":1}}],[\"只是各大浏览器厂商还对此算法进行了优化加工\",{\"1\":{\"1646\":1}}],[\"只是某个commit\",{\"1\":{\"1616\":1}}],[\"只是对第一层的数组进行了依赖收集\",{\"1\":{\"1563\":1}}],[\"只是传入的第一个参数不同\",{\"1\":{\"1528\":1}}],[\"只是在编译阶段起作用\",{\"1\":{\"1443\":1}}],[\"只是把所有可变方法去掉了\",{\"1\":{\"1339\":1}}],[\"只是把记录写到\",{\"1\":{\"921\":1}}],[\"只是增加了代码的复杂性\",{\"1\":{\"1269\":1}}],[\"只是生成链接文件\",{\"1\":{\"998\":1}}],[\"只是将警告讯息传送给所有使用者\",{\"1\":{\"919\":1}}],[\"只是这个编译的过程非常短暂\",{\"1\":{\"895\":1}}],[\"只是返回结果不同\",{\"1\":{\"878\":1}}],[\"只是该方法是对数组进行倒序遍历的\",{\"1\":{\"877\":1}}],[\"只是该方法是对数组进行倒序查找的\",{\"1\":{\"706\":1}}],[\"只是查找的顺序不一样\",{\"1\":{\"521\":1}}],[\"只是一个概念\",{\"1\":{\"403\":1}}],[\"只是负责执行最后的回调处理\",{\"1\":{\"371\":1}}],[\"只取决包裹箭头函数的第一个普通函数的\",{\"1\":{\"362\":1}}],[\"只关心值的唯一性\",{\"1\":{\"269\":1}}],[\"只解构部分内容\",{\"1\":{\"252\":1}}],[\"只能在开启了msaa的渲染环境中使用\",{\"1\":{\"2638\":1}}],[\"只能在抽象类的子类中实现\",{\"1\":{\"1392\":1}}],[\"只能由服务器端向客户端推送信息\",{\"1\":{\"1737\":1}}],[\"只能进行点对点的数据传输\",{\"1\":{\"1713\":1}}],[\"只能进行显式转换\",{\"1\":{\"803\":1}}],[\"只能用来存取少量的信息\",{\"1\":{\"1660\":1}}],[\"只能赋值给\",{\"1\":{\"1400\":1}}],[\"只能被继承并且无法创建抽象类的实例\",{\"1\":{\"1392\":1}}],[\"只能像这样实现\",{\"1\":{\"806\":1}}],[\"只能通过\",{\"1\":{\"397\":1}}],[\"只能使用一次\",{\"1\":{\"274\":1}}],[\"只能保证这个指针是不变的\",{\"1\":{\"247\":1}}],[\"只能实现前者的效果\",{\"1\":{\"240\":1}}],[\"只要计算机连接上网络便可自动分配ip地址\",{\"1\":{\"2214\":1}}],[\"只要接口不变可用在其它处\",{\"1\":{\"1982\":1}}],[\"只要这些业务规则指向的⽬标⼀致\",{\"1\":{\"1785\":1}}],[\"只要服务端发出确认\",{\"1\":{\"1727\":1}}],[\"只要发送方判断网络出现拥塞\",{\"1\":{\"1720\":1}}],[\"只要有一步失败\",{\"1\":{\"1670\":1}}],[\"只要有一个参与者撤销事务\",{\"1\":{\"2235\":1}}],[\"只要有一个是\",{\"1\":{\"879\":2}}],[\"只要有一个元素符合条件\",{\"1\":{\"716\":1,\"876\":1}}],[\"只要有一个字符无法转成数值\",{\"1\":{\"663\":1}}],[\"只要它们不在同一个浏览器窗口中打开\",{\"1\":{\"1666\":1}}],[\"只要把<slowlist>修改掉就可以\",{\"1\":{\"1235\":1}}],[\"只要用\",{\"1\":{\"1112\":1}}],[\"只要指定条件为\",{\"1\":{\"889\":1}}],[\"只要页面滚动就会间隔一段时间判断一次\",{\"1\":{\"829\":1}}],[\"只要在当前实例的原型链上\",{\"1\":{\"657\":1}}],[\"只要第一个操作数为false\",{\"1\":{\"624\":1}}],[\"只要与一个各位都为零的数值相与\",{\"1\":{\"607\":1}}],[\"只要根据最未位是0还是1来决定\",{\"1\":{\"607\":1}}],[\"只要其中一个\",{\"1\":{\"577\":1}}],[\"只要其中的一个\",{\"1\":{\"328\":1}}],[\"只要参数\",{\"1\":{\"577\":1}}],[\"只要回调是可调用的\",{\"1\":{\"430\":1}}],[\"只要一个对象有迭代器\",{\"1\":{\"286\":1,\"678\":1}}],[\"只要内存地址不一样\",{\"1\":{\"272\":1}}],[\"只要等号右边的值不是对象或数组\",{\"1\":{\"254\":1}}],[\"只要改变\",{\"1\":{\"207\":1}}],[\"只要使用了回调函数\",{\"1\":{\"902\":1}}],[\"只要使用了\",{\"1\":{\"207\":1}}],[\"只要他们之间没有阻挡\",{\"1\":{\"151\":1}}],[\"只需增加一个新的链节点并适当配置其在链中的位置\",{\"1\":{\"1837\":1}}],[\"只需新增对应的产品类和工厂类\",{\"1\":{\"1750\":1}}],[\"只需每隔一段时间才提交到中央存储库\",{\"1\":{\"1581\":1}}],[\"只需修改\",{\"1\":{\"204\":1}}],[\"只需要一个参数\",{\"1\":{\"1753\":1}}],[\"只需要按照菜单上的菜名进行点餐\",{\"1\":{\"1747\":1}}],[\"只需要修改工厂的实现即可\",{\"1\":{\"1747\":1}}],[\"只需要等上⼀段时间再进⾏下⼀次\",{\"1\":{\"1730\":1}}],[\"只需要考虑协同\",{\"1\":{\"1649\":1}}],[\"只需要输入以下命令即可\",{\"1\":{\"1591\":1}}],[\"只需要用\",{\"1\":{\"1311\":1}}],[\"只需要启动\",{\"1\":{\"1056\":1}}],[\"只需要让父级作用域的引用存在即可\",{\"1\":{\"901\":1}}],[\"只需要在用|分隔用户名即可\",{\"1\":{\"1626\":1}}],[\"只需要在\",{\"1\":{\"473\":1,\"2744\":1}}],[\"只需要在具体代码逻辑内\",{\"1\":{\"464\":1}}],[\"只需要在p外面包裹一层容器\",{\"1\":{\"151\":1}}],[\"只需要改变\",{\"1\":{\"206\":1}}],[\"只需要把把父元素变成一个bfc就行了\",{\"1\":{\"153\":1}}],[\"只有使用\",{\"1\":{\"2741\":1}}],[\"只有所有参与者都同意提交事务\",{\"1\":{\"2235\":1}}],[\"只有所有元素都符合条件时\",{\"1\":{\"715\":1,\"876\":1}}],[\"只有d在接收者id序列中的客户端才会处理这个事件\",{\"1\":{\"1735\":1}}],[\"只有等到我服务端所有的报文都发送完了\",{\"1\":{\"1729\":1}}],[\"只有8字节\",{\"1\":{\"1712\":1}}],[\"只有对象本身存在的属性修改才会被劫持\",{\"1\":{\"1534\":1}}],[\"只有对同一个对象的引用\",{\"1\":{\"272\":1}}],[\"只有元素才有属性\",{\"1\":{\"1476\":1}}],[\"只有能够保存任意类型值的容器才能保存\",{\"1\":{\"1418\":1}}],[\"只有最后一个会被渲染\",{\"1\":{\"1236\":1}}],[\"只有依赖于那部分数据的组件会重新渲染\",{\"1\":{\"1227\":1}}],[\"只有文件所有者\",{\"1\":{\"1039\":1}}],[\"只有文件所有者和超级用户可以修改文件或目录的权限\",{\"1\":{\"1037\":1}}],[\"只有超级用户可以设置该位\",{\"1\":{\"1039\":1}}],[\"只有管理员才可以运行\",{\"1\":{\"913\":1}}],[\"只有运行时才知道\",{\"1\":{\"849\":1}}],[\"只有用户停止滚动后\",{\"1\":{\"829\":1}}],[\"只有大于设定的执行周期后才会执行第二次\",{\"1\":{\"827\":1}}],[\"只有空字符串\",{\"1\":{\"664\":1,\"669\":1}}],[\"只有实例创建出来的结果才是标准的对象数据类型值\",{\"1\":{\"657\":1}}],[\"只有两个操作数在不进行类型转化的情况下是不相等的\",{\"1\":{\"627\":1}}],[\"只有两种可能\",{\"1\":{\"565\":1}}],[\"只有当图片需要显示时才实际加载图片数据\",{\"1\":{\"1794\":1}}],[\"只有当下次访问到了计算属性的时候才会重新计算\",{\"1\":{\"1571\":1}}],[\"只有当你能访问某个状态的\",{\"1\":{\"1309\":1}}],[\"只有当你确实需要同步的\",{\"1\":{\"1260\":1}}],[\"只有当\",{\"1\":{\"1210\":1,\"1267\":2,\"1283\":1}}],[\"只有当它的依赖项改变时\",{\"1\":{\"1208\":1}}],[\"只有当文件为目录文件\",{\"1\":{\"1039\":1}}],[\"只有当字符串为空时会返回false\",{\"1\":{\"790\":1}}],[\"只有当两个操作数的数据类型和值都相等时\",{\"1\":{\"627\":1}}],[\"只有当前阶段所有微任务都执行完了\",{\"1\":{\"379\":1}}],[\"只有在特定的场景下\",{\"1\":{\"1203\":1}}],[\"只有在强制类型转化后不相等才会返回true\",{\"1\":{\"627\":1}}],[\"只有在清除计时器后\",{\"1\":{\"430\":1}}],[\"只有任何操作数都不是字符串时才会执行加法操作\",{\"1\":{\"616\":1}}],[\"只有操作数是字符串或者是可以转化为字符串的对象\",{\"1\":{\"616\":1}}],[\"只有状态为\",{\"1\":{\"580\":2}}],[\"只有字符串中的第一个数字会被返回\",{\"1\":{\"550\":1}}],[\"只有一个购物车\",{\"1\":{\"455\":1}}],[\"只有一个任务执行完毕\",{\"1\":{\"372\":1}}],[\"只有加载完成才能继续执行后面的操作\",{\"1\":{\"448\":1}}],[\"只有计数器counter是回调范围的一部分\",{\"1\":{\"430\":1}}],[\"只有回调\",{\"1\":{\"376\":1}}],[\"只有\",{\"1\":{\"321\":1,\"643\":1,\"791\":1}}],[\"只有定义的变量是严格的===undefined\",{\"1\":{\"253\":1}}],[\"只有被点击的那个目标元素的event\",{\"1\":{\"241\":1}}],[\"只有同属于一个bfc时\",{\"1\":{\"151\":1}}],[\"只有block\",{\"1\":{\"147\":1}}],[\"特定领域软件架构以一个特定问题领域为对象\",{\"1\":{\"1998\":1}}],[\"特定领域软件架构\",{\"0\":{\"1997\":1}}],[\"特定场景用来捕获质量需求\",{\"1\":{\"1974\":1}}],[\"特定规格的产品\",{\"1\":{\"1747\":1}}],[\"特征驱动开发方法\",{\"1\":{\"1904\":1}}],[\"特征值其实也需要提前向硬件佬索取的\",{\"1\":{\"127\":1}}],[\"特征值\",{\"1\":{\"123\":2,\"125\":1}}],[\"特征值会告诉你哪个可读\",{\"1\":{\"120\":1}}],[\"特别的一点在于\",{\"1\":{\"1666\":1}}],[\"特别是对构件修改使用时\",{\"1\":{\"2028\":1}}],[\"特别是链中的节点数目较多或者链的结构动态变化时\",{\"1\":{\"1838\":1}}],[\"特别是需要重复使用一个创建开销比较大的类时\",{\"1\":{\"1769\":1}}],[\"特别是当初始化逻辑相对复杂或需要根据传入的参数变化时\",{\"1\":{\"1274\":1}}],[\"特别是当它们已经足够简单和高效的时候\",{\"1\":{\"1269\":1}}],[\"特别是在需要基于当前状态进行计算时\",{\"1\":{\"1194\":1}}],[\"特别是创建和执行阶段\",{\"1\":{\"500\":1}}],[\"特殊执行权限\",{\"1\":{\"1039\":1}}],[\"特殊字符或者开始字符为破折号时\",{\"1\":{\"973\":1}}],[\"特殊情况\",{\"0\":{\"807\":1}}],[\"特殊规则\",{\"0\":{\"802\":1}}],[\"特殊的\",{\"0\":{\"361\":1}}],[\"特意将声明前不可用做了强约束\",{\"1\":{\"507\":1}}],[\"特点\",{\"0\":{\"178\":1,\"1663\":1,\"1667\":1,\"1670\":1,\"1984\":1,\"1988\":1,\"2184\":1},\"1\":{\"449\":1,\"879\":1,\"1752\":1,\"1895\":1,\"1903\":1,\"2028\":3,\"2077\":4,\"2189\":1}}],[\"特性是一种更简洁\",{\"1\":{\"331\":1}}],[\"特性\",{\"0\":{\"150\":1}}],[\"相信可靠的第3方建立的鉴别\",{\"1\":{\"2125\":1}}],[\"相信我\",{\"1\":{\"1443\":1}}],[\"相互联系原则\",{\"1\":{\"1851\":1}}],[\"相比\",{\"1\":{\"1737\":1}}],[\"相比tcp的至少20字节要少得多\",{\"1\":{\"1712\":1}}],[\"相比于新生代\",{\"1\":{\"1648\":1}}],[\"相比于使用\",{\"1\":{\"1360\":1}}],[\"相比之下节约了资源\",{\"1\":{\"1737\":1}}],[\"相比之下效率没有udp高\",{\"1\":{\"1715\":1}}],[\"相比之下\",{\"1\":{\"1646\":1}}],[\"相反\",{\"1\":{\"1629\":1}}],[\"相关概念\",{\"0\":{\"2240\":1}}],[\"相关支撑硬件\",{\"1\":{\"2176\":1}}],[\"相关的领域知识\",{\"1\":{\"2028\":1}}],[\"相关信息\",{\"1\":{\"1431\":1}}],[\"相关变量会在下一次垃圾回收后自动从\",{\"1\":{\"433\":1}}],[\"相关变量将从缓存中删除并被垃圾收集\",{\"1\":{\"433\":1}}],[\"相较于\",{\"1\":{\"1581\":1}}],[\"相较于使用\",{\"1\":{\"1428\":1}}],[\"相较而言\",{\"1\":{\"501\":1}}],[\"相似\",{\"1\":{\"986\":1,\"1273\":1,\"1339\":1}}],[\"相同的隐式类型转换方式\",{\"1\":{\"795\":1}}],[\"相同的话就比较两者的大小\",{\"1\":{\"627\":1}}],[\"相结合\",{\"1\":{\"729\":1}}],[\"相异则为1\",{\"1\":{\"610\":1}}],[\"相异为\",{\"1\":{\"606\":1}}],[\"相应的组件也会得到高效的更新\",{\"1\":{\"1765\":1}}],[\"相应的\",{\"1\":{\"590\":1}}],[\"相匹配的子串的起始位置\",{\"1\":{\"537\":1}}],[\"相等运算符会返回false\",{\"1\":{\"627\":1}}],[\"相等操作符包括四种\",{\"1\":{\"627\":1}}],[\"相等操作符\",{\"0\":{\"627\":1}}],[\"相等\",{\"1\":{\"530\":1}}],[\"相当于调用\",{\"1\":{\"2813\":1,\"2814\":1,\"2815\":1}}],[\"相当于调用了boolean\",{\"1\":{\"623\":1}}],[\"相当于撤销了\",{\"1\":{\"1614\":1}}],[\"相当于backspace亦即是退格键\",{\"1\":{\"1063\":1}}],[\"相当于del按键\",{\"1\":{\"1063\":1}}],[\"相当于page\",{\"1\":{\"1061\":2}}],[\"相当于\",{\"1\":{\"885\":1,\"898\":1,\"1039\":1}}],[\"相当于返回对象属性数组\",{\"1\":{\"885\":1}}],[\"相当于该数除以2\",{\"1\":{\"613\":1}}],[\"相当于该数乘以2\",{\"1\":{\"611\":1}}],[\"相当于截取\",{\"1\":{\"529\":2}}],[\"相当于占整个视口宽度的\",{\"1\":{\"208\":1}}],[\"相当于提供了一个基准\",{\"1\":{\"206\":1}}],[\"相对来说比较复杂\",{\"1\":{\"817\":1}}],[\"相对于普通函数\",{\"1\":{\"259\":1}}],[\"相对于\",{\"1\":{\"246\":1,\"2585\":1}}],[\"相对于视口的高度\",{\"1\":{\"208\":1}}],[\"相对于视口的宽度\",{\"1\":{\"208\":1}}],[\"相对父元素的属性并不是唯一的\",{\"1\":{\"205\":1}}],[\"相对路径会找不到文件\",{\"1\":{\"109\":1}}],[\"相邻兄弟元素margin重叠问题\",{\"1\":{\"151\":1}}],[\"相邻\",{\"1\":{\"149\":1}}],[\"同真实的表一样\",{\"1\":{\"2226\":1}}],[\"同一抽象级别\",{\"1\":{\"1905\":1}}],[\"同一个域名下的所有请求\",{\"1\":{\"1660\":1}}],[\"同一个watcher也只会保存在dep一次\",{\"1\":{\"1561\":1}}],[\"同意建立连接\",{\"1\":{\"1727\":1}}],[\"同源限制\",{\"1\":{\"1670\":1}}],[\"同源策略它只是浏览器的一个策略而已\",{\"1\":{\"864\":1}}],[\"同\",{\"1\":{\"972\":1,\"1515\":1}}],[\"同级\",{\"1\":{\"865\":1}}],[\"同步或异步时间做出响应的系统\",{\"1\":{\"2189\":1}}],[\"同步与互斥\",{\"0\":{\"2154\":1}}],[\"同步开销\",{\"1\":{\"1649\":1}}],[\"同步更新状态\",{\"1\":{\"1204\":1}}],[\"同步改变文本\",{\"1\":{\"1204\":1}}],[\"同步改变\",{\"1\":{\"1204\":1}}],[\"同步读取更新后的\",{\"1\":{\"1203\":1}}],[\"同步可能会产生的问题\",{\"0\":{\"1200\":1}}],[\"同步处理\",{\"1\":{\"817\":1}}],[\"同步代码执行\",{\"1\":{\"1541\":1}}],[\"同步代码3\",{\"1\":{\"376\":3}}],[\"同步代码2\",{\"1\":{\"376\":3}}],[\"同步代码1\",{\"1\":{\"376\":3}}],[\"同步任务\",{\"1\":{\"372\":1}}],[\"同步\",{\"1\":{\"370\":1,\"555\":2,\"816\":1,\"1622\":1,\"1886\":1}}],[\"同样地\",{\"1\":{\"1767\":1}}],[\"同样支持一对多\",{\"1\":{\"1712\":1}}],[\"同样不会修改本地文件的内容\",{\"1\":{\"1614\":1}}],[\"同样的构建过程可采用不同的表示\",{\"1\":{\"1758\":1}}],[\"同样的\",{\"1\":{\"1561\":1,\"1648\":1,\"1810\":1}}],[\"同样的语句需要为成功和失败两种情况各写一次\",{\"1\":{\"575\":1}}],[\"同样要经过处理\",{\"1\":{\"823\":1}}],[\"同样我们使用\",{\"1\":{\"819\":1}}],[\"同样需要传入至少三个参数\",{\"1\":{\"703\":1}}],[\"同样也是\",{\"1\":{\"588\":1}}],[\"同样\",{\"1\":{\"261\":1,\"432\":1,\"589\":1,\"803\":1,\"875\":1,\"1431\":1}}],[\"同时将预置属性设置为默认值\",{\"1\":{\"2280\":1}}],[\"同时当原始表中的数据更新时\",{\"1\":{\"2228\":1}}],[\"同时它又是一种技术\",{\"1\":{\"2179\":1}}],[\"同时识别用户运作\",{\"1\":{\"2031\":1}}],[\"同时支持1000并发\",{\"1\":{\"2004\":1}}],[\"同时支持同步加载模块和异步加载模块\",{\"1\":{\"464\":1}}],[\"同时这样也是为了防止失效的请求报文段被服务器接收\",{\"1\":{\"1727\":1}}],[\"同时会把客户端的\",{\"1\":{\"1726\":1}}],[\"同时会保留正负号\",{\"1\":{\"613\":1}}],[\"同时序号也保证了传送到接收端实体的包的按序接收\",{\"1\":{\"1713\":1}}],[\"同时执行同样的回收工作\",{\"1\":{\"1649\":1}}],[\"同时因为碎片化\",{\"1\":{\"1646\":1}}],[\"同时保证同一个dep只被保存到watcher一次\",{\"1\":{\"1561\":1}}],[\"同时把\",{\"1\":{\"1560\":1}}],[\"同时watcher也会保存dep\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"同时循环新的节点和\",{\"1\":{\"1478\":1}}],[\"同时我们使用了\",{\"1\":{\"1466\":1}}],[\"同时也能提高系统性能\",{\"1\":{\"2229\":1}}],[\"同时也是小\",{\"1\":{\"1431\":1}}],[\"同时也会很大程度上影响性能\",{\"1\":{\"223\":1}}],[\"同时显示file1和file2的内容\",{\"1\":{\"984\":1}}],[\"同时使用两个\",{\"1\":{\"623\":1}}],[\"同时使用了回车符cr\",{\"1\":{\"102\":1}}],[\"同时参数字符串首位的空白符会被忽略\",{\"1\":{\"551\":1}}],[\"同时定义了两个方法\",{\"1\":{\"445\":1}}],[\"同时\",{\"1\":{\"233\":1,\"289\":1,\"360\":1,\"601\":1,\"897\":1,\"1418\":1,\"1653\":1,\"2020\":1,\"2132\":1,\"2229\":1}}],[\"同属于一个bfc\",{\"1\":{\"149\":1}}],[\"有如下参数\",{\"1\":{\"2468\":1,\"2470\":1,\"2471\":1}}],[\"有如下两种不同的处理方式\",{\"1\":{\"677\":1}}],[\"有损\",{\"1\":{\"2256\":1}}],[\"有向图\",{\"1\":{\"2246\":1}}],[\"有状态服务则相反\",{\"1\":{\"2078\":1}}],[\"有状态与无状态\",{\"0\":{\"2078\":1}}],[\"有状态与无状态问题\",{\"1\":{\"2076\":1}}],[\"有助于循序渐进的原型设计\",{\"1\":{\"1968\":1}}],[\"有助于独立地管理各组成部分\",{\"1\":{\"1820\":1}}],[\"有合适的系统开发环境\",{\"1\":{\"1923\":1}}],[\"有限状态机视图\",{\"1\":{\"1906\":1}}],[\"有序性原则\",{\"1\":{\"1851\":1}}],[\"有单播\",{\"1\":{\"1712\":1}}],[\"有可能是标签一样\",{\"1\":{\"1476\":1}}],[\"有可能把运算子转为字符串\",{\"1\":{\"669\":1}}],[\"有未使用的参数时\",{\"1\":{\"1454\":1}}],[\"有未使用的变量时\",{\"1\":{\"1454\":1}}],[\"有默认值的函数参数\",{\"1\":{\"1442\":1}}],[\"有无\",{\"0\":{\"1311\":1}}],[\"有一种变通方法\",{\"1\":{\"1737\":1}}],[\"有一个存储\",{\"1\":{\"2296\":1}}],[\"有一个结点计算出结果\",{\"1\":{\"2133\":1}}],[\"有一个指针指向对象\",{\"1\":{\"1646\":1}}],[\"有一个优化机制\",{\"1\":{\"1273\":1}}],[\"有一方循环完毕就结束了\",{\"1\":{\"1478\":1}}],[\"有一块内容<main>\",{\"1\":{\"161\":1}}],[\"有的时候\",{\"1\":{\"1222\":1}}],[\"有性能提升\",{\"1\":{\"1212\":1}}],[\"有关差异的示例\",{\"1\":{\"2672\":1}}],[\"有关loadingmanager方法的详细信息\",{\"1\":{\"2457\":1}}],[\"有关loadingmanager属性的详细信息\",{\"1\":{\"2456\":1}}],[\"有关curve的数组\",{\"1\":{\"2327\":1}}],[\"有关\",{\"1\":{\"989\":2}}],[\"有返回值\",{\"1\":{\"879\":1}}],[\"有个需要频繁触发函数\",{\"1\":{\"827\":1}}],[\"有三种情况\",{\"1\":{\"805\":1,\"806\":1}}],[\"有三种状态\",{\"1\":{\"566\":1}}],[\"有同样的缺陷\",{\"1\":{\"756\":1}}],[\"有同步和异步的概念\",{\"1\":{\"370\":1}}],[\"有些类似于车漆\",{\"1\":{\"2737\":1}}],[\"有些第三方库可能要求你提供并在后续更改函数\",{\"1\":{\"1303\":1}}],[\"有些单行字数太长的会被扩展为两行或两行以上\",{\"1\":{\"986\":1}}],[\"有些则会改变原数组\",{\"1\":{\"682\":1}}],[\"有些方法纯净如水\",{\"1\":{\"682\":1}}],[\"有第二个参数时\",{\"1\":{\"663\":1}}],[\"有特殊用途的常规值\",{\"1\":{\"656\":1}}],[\"有效等价类\",{\"1\":{\"1939\":1}}],[\"有效期限的ip地址\",{\"1\":{\"2210\":1}}],[\"有效期\",{\"1\":{\"1659\":1}}],[\"有效\",{\"1\":{\"656\":6}}],[\"有哪些数据类型\",{\"0\":{\"650\":1}}],[\"有哪些常用的方法和属性\",{\"1\":{\"397\":1}}],[\"有符号右移赋值操作符\",{\"1\":{\"638\":1}}],[\"有符号右移操作符和无符号右移操作符的结果是一样的\",{\"1\":{\"614\":1}}],[\"有符号右移操作符\",{\"0\":{\"613\":1},\"1\":{\"613\":1}}],[\"有时需要多重条件判断\",{\"1\":{\"1785\":1}}],[\"有时会碰到我们比\",{\"1\":{\"1443\":1}}],[\"有时在静态类型系统中捕获某些操作的语义可能会很棘手\",{\"1\":{\"1366\":1}}],[\"有时和\",{\"1\":{\"1341\":1}}],[\"有时候可能会收到一些不感兴趣的信息\",{\"1\":{\"1805\":1}}],[\"有时候你会遇到这样的情况\",{\"1\":{\"1443\":1}}],[\"有时候我们定义的泛型不想过于灵活或者说想继承某些类等\",{\"1\":{\"1369\":1}}],[\"有时候我们希望一个接口中除了包含必选和可选属性之外\",{\"1\":{\"1340\":1}}],[\"有时候需要向某些对象发送请求\",{\"1\":{\"1826\":1}}],[\"有时候需要在特定情况下控制更新的同步执行\",{\"1\":{\"1203\":1}}],[\"有时候需要捕获错误\",{\"1\":{\"578\":1}}],[\"有时\",{\"1\":{\"1282\":1,\"1595\":1}}],[\"有时我们更倾向于用它来存储一些内容稳定的资源\",{\"1\":{\"1665\":1}}],[\"有时我们不想预先加载模块\",{\"1\":{\"471\":1}}],[\"有时我们希望事件侦听器执行一定次数\",{\"1\":{\"432\":1}}],[\"有则返回最后一次匹配到的位置\",{\"1\":{\"521\":1}}],[\"有则返回第一次匹配到的位置\",{\"1\":{\"520\":1}}],[\"有什么区别\",{\"1\":{\"1279\":1}}],[\"有什么区别呢\",{\"1\":{\"462\":1,\"517\":1}}],[\"有什么意义呢\",{\"1\":{\"413\":1}}],[\"有独立的作用域\",{\"1\":{\"449\":1}}],[\"有两种主要角色\",{\"1\":{\"1802\":1}}],[\"有两种特殊数据类型\",{\"1\":{\"642\":1}}],[\"有两个核心概念\",{\"1\":{\"1755\":1}}],[\"有两个地方都定义了变量\",{\"1\":{\"507\":1}}],[\"有两个按钮\",{\"1\":{\"436\":1}}],[\"有两个函数被分别用来处理解码和编码\",{\"1\":{\"414\":1}}],[\"有两类微任务队列\",{\"1\":{\"383\":1}}],[\"有多种用法\",{\"1\":{\"403\":1}}],[\"有啥区别呢\",{\"1\":{\"397\":1}}],[\"有回调\",{\"1\":{\"376\":1}}],[\"有明确的异步任务去执行\",{\"1\":{\"376\":1}}],[\"有非常有用的对象\",{\"1\":{\"337\":1}}],[\"有了块级作用域\",{\"1\":{\"903\":1}}],[\"有了finally方法\",{\"1\":{\"575\":1}}],[\"有了\",{\"1\":{\"320\":1}}],[\"有输出\",{\"1\":{\"275\":1}}],[\"有利于即使样式表丢失\",{\"1\":{\"214\":1}}],[\"有利于搜索引擎爬虫正确的读取内容\",{\"1\":{\"214\":1}}],[\"有利于机器对文档内容进行正确的解读\",{\"1\":{\"214\":1}}],[\"有利于开发者的维护和理解\",{\"1\":{\"214\":1}}],[\"有\",{\"1\":{\"147\":1,\"286\":1,\"337\":1,\"678\":1,\"898\":1,\"1695\":1}}],[\"有历史连接数据\",{\"1\":{\"128\":1}}],[\"它设置渲染到屏幕的每个单独的\",{\"1\":{\"2742\":1}}],[\"它代表动画\",{\"1\":{\"2488\":1}}],[\"它管理着系统的各种资源\",{\"1\":{\"2192\":1}}],[\"它通常是客户定制的\",{\"1\":{\"2179\":1}}],[\"它通过一个状态机去识别符号的状态\",{\"1\":{\"1704\":1}}],[\"它通过异常捕获并最终在\",{\"1\":{\"597\":1}}],[\"它通过\",{\"1\":{\"343\":1}}],[\"它能够用来存储各种格式的数据\",{\"1\":{\"2061\":1}}],[\"它能实现的效果都能用then链来实现\",{\"1\":{\"594\":1}}],[\"它在良好定义的体系结构语境内满足某清晰的功能\",{\"1\":{\"2019\":1}}],[\"它在相同的输入下总是返回相同的输出\",{\"1\":{\"1264\":1}}],[\"它具有规范的接口规约和显示的语境依赖\",{\"1\":{\"2019\":1}}],[\"它再底层予以模型的支持下\",{\"1\":{\"1972\":1}}],[\"它再作为构造函数\",{\"1\":{\"360\":1}}],[\"它为目标对象创造了一个代理对象\",{\"1\":{\"1793\":1}}],[\"它为用户提供了一个向\",{\"1\":{\"1077\":1}}],[\"它相对于前面两种方式来说\",{\"1\":{\"1737\":1}}],[\"它最大的特点是\",{\"1\":{\"1735\":1}}],[\"它基于htp协议\",{\"1\":{\"1737\":1}}],[\"它基于tcp传输协议\",{\"1\":{\"1735\":1}}],[\"它基本上与\",{\"1\":{\"678\":1}}],[\"它一个人需要\",{\"1\":{\"1649\":1}}],[\"它指的是主线程在执行\",{\"1\":{\"1651\":1}}],[\"它指的是垃圾回收器在主线程上执行的过程中\",{\"1\":{\"1649\":1}}],[\"它指向函数对象\",{\"1\":{\"481\":1}}],[\"它把对象是否不再需要简化定义为对象有没有其他对象引用到它\",{\"1\":{\"1646\":1}}],[\"它并给予清理的问题\",{\"1\":{\"1646\":1}}],[\"它并不会进行数据类型的转化\",{\"1\":{\"627\":1}}],[\"它并不是真正的函数\",{\"1\":{\"587\":1}}],[\"它引用了对象\",{\"1\":{\"1644\":1}}],[\"它实现了一个集中式存储\",{\"1\":{\"1765\":1}}],[\"它实现\",{\"1\":{\"1641\":1}}],[\"它实例化了\",{\"1\":{\"340\":1}}],[\"它跟踪操作系统上的所有用户和所有存储库\",{\"1\":{\"1586\":1}}],[\"它由时也被称为延迟或迟延\",{\"1\":{\"2201\":1}}],[\"它由创建而产生\",{\"1\":{\"2151\":1}}],[\"它由程序块\",{\"1\":{\"2150\":1}}],[\"它由\",{\"1\":{\"1577\":1}}],[\"它由三个表达式组成\",{\"1\":{\"888\":1}}],[\"它需要订阅数据的变动\",{\"1\":{\"1557\":1}}],[\"它需要一种自动执行机制\",{\"1\":{\"592\":1}}],[\"它没有运行时的影响\",{\"1\":{\"1443\":1}}],[\"它没有参数\",{\"1\":{\"693\":1}}],[\"它真正的应用场景是可以把多个字面量类型组合成一个联合类型\",{\"1\":{\"1428\":1}}],[\"它处于全局命名空间中\",{\"1\":{\"1353\":1}}],[\"它创建了一个新\",{\"1\":{\"1341\":1}}],[\"它创建一个媒体源\",{\"1\":{\"338\":1}}],[\"它\",{\"1\":{\"1303\":1}}],[\"它提供了更清晰的代码组织结构\",{\"1\":{\"1274\":1}}],[\"它不应该包含对函数的引用\",{\"1\":{\"2683\":1}}],[\"它不是传统意义上虚拟视图\",{\"1\":{\"2228\":1}}],[\"它不仅可以存储字符串\",{\"1\":{\"1669\":1}}],[\"它不需要选择固定的延迟\",{\"1\":{\"1237\":1}}],[\"它不会拷贝对象的继承属性\",{\"1\":{\"755\":1}}],[\"它还可以缓存组件\",{\"1\":{\"1267\":1}}],[\"它还可以用于其他需要稳定引用的场景\",{\"1\":{\"1209\":1}}],[\"它还代指在什么异步条件下调用回调函数\",{\"1\":{\"557\":1}}],[\"它确保\",{\"1\":{\"1209\":1}}],[\"它保留链接\",{\"1\":{\"998\":1}}],[\"它保存的是引用类型数据的地址\",{\"1\":{\"652\":1}}],[\"它和下面的domelement属性对应\",{\"1\":{\"2788\":1}}],[\"它和传统语言的区别在于\",{\"1\":{\"895\":1}}],[\"它和\",{\"1\":{\"885\":1}}],[\"它和自身不相等\",{\"1\":{\"656\":1}}],[\"它以一个\",{\"1\":{\"849\":1}}],[\"它允许用户只通过指定复杂的对象的类型和内容就可以构建它们\",{\"1\":{\"1758\":1}}],[\"它允许将工作分离到不同的分支中\",{\"1\":{\"1592\":1}}],[\"它允许你把特定状态的更新标记为低优先级\",{\"1\":{\"1233\":1}}],[\"它允许开发者控制某个更新的延迟更新\",{\"1\":{\"1233\":1}}],[\"它允许我们将对象的属性值分配给相应的变量\",{\"1\":{\"838\":1}}],[\"它允许模块充当大型异步函数\",{\"1\":{\"334\":1}}],[\"它扮演的角色相当于秘书\",{\"1\":{\"813\":1}}],[\"它之所以有效\",{\"1\":{\"803\":1}}],[\"它新建一个引用类型并将对应的值复制给它\",{\"1\":{\"768\":1}}],[\"它自身是不会有数组的\",{\"1\":{\"731\":1}}],[\"它内部所有的阻塞都被封装在一个\",{\"1\":{\"595\":1}}],[\"它等的实际是一个返回值\",{\"1\":{\"595\":1}}],[\"它等价于\",{\"1\":{\"500\":2}}],[\"它改进了生成器的缺点\",{\"1\":{\"594\":1}}],[\"它使用起来非常简单\",{\"1\":{\"592\":1}}],[\"它使共享文本\",{\"1\":{\"345\":1}}],[\"它用于\",{\"1\":{\"1641\":1}}],[\"它用于将三个表达式组成一个表达式\",{\"1\":{\"601\":1}}],[\"它用三个点\",{\"1\":{\"630\":1}}],[\"它用到的就是协程\",{\"1\":{\"589\":1}}],[\"它用来保存异步任务\",{\"1\":{\"375\":1}}],[\"它更符合人的线性思维模式\",{\"1\":{\"569\":1}}],[\"它只替换第一个匹配子串\",{\"1\":{\"535\":1}}],[\"它只会在自己作用域的上一层继承\",{\"1\":{\"261\":1}}],[\"它也可以作为一个字符串直接传递或者通过ajax加载\",{\"1\":{\"2753\":1,\"2763\":1}}],[\"它也可以用来获取函数对象的类型\",{\"1\":{\"1365\":1}}],[\"它也不能保证这些过程被调用的顺序\",{\"1\":{\"1987\":1}}],[\"它也需要相应的更新或释放\",{\"1\":{\"1668\":1}}],[\"它也有第二个参数\",{\"1\":{\"875\":1}}],[\"它也会随之变化\",{\"1\":{\"724\":1}}],[\"它也是删除对象属性的本身\",{\"1\":{\"640\":1}}],[\"它也是支持\",{\"1\":{\"474\":1}}],[\"它也就不起作用了\",{\"1\":{\"511\":1}}],[\"它才会给这个变量加上暂时性死区的限制\",{\"1\":{\"511\":1}}],[\"它感知到了\",{\"1\":{\"511\":1}}],[\"它旨在使代码无论执行代码的环境如何都能正常工作\",{\"1\":{\"465\":1}}],[\"它包含阴影贴图的引用\",{\"1\":{\"2805\":1}}],[\"它包含了整个应用的状态树\",{\"1\":{\"1764\":1}}],[\"它包含了所需的所有类型的特性\",{\"1\":{\"1460\":1}}],[\"它包含了这个模块的信息\",{\"1\":{\"472\":1}}],[\"它包含\",{\"1\":{\"464\":1}}],[\"它包含函数在哪里被调用\",{\"1\":{\"352\":1}}],[\"它被加入到了layer\",{\"1\":{\"2555\":1,\"2556\":1}}],[\"它被描述为\",{\"1\":{\"461\":1}}],[\"它被称为分离\",{\"1\":{\"437\":1}}],[\"它定义了所依赖的模块\",{\"1\":{\"458\":1}}],[\"它有以下几个特点\",{\"1\":{\"1713\":1}}],[\"它有以下属性\",{\"1\":{\"449\":1}}],[\"它有三个参数\",{\"1\":{\"872\":1,\"873\":1,\"875\":1,\"876\":1,\"878\":1}}],[\"它有两种写法\",{\"1\":{\"838\":1}}],[\"它有\",{\"1\":{\"458\":1}}],[\"它规定了协议号\",{\"1\":{\"855\":1}}],[\"它规定了如何定义模块\",{\"1\":{\"457\":1}}],[\"它规定了内部的block\",{\"1\":{\"147\":1}}],[\"它仍然是\",{\"1\":{\"455\":1}}],[\"它仍将继续引用dom元素\",{\"1\":{\"434\":1}}],[\"它里面定义了两个私有变量\",{\"1\":{\"445\":1}}],[\"它接受两个参数\",{\"1\":{\"1664\":1}}],[\"它接受一个\",{\"1\":{\"1218\":1}}],[\"它接受一个参数\",{\"1\":{\"398\":1}}],[\"它接收\",{\"1\":{\"2742\":1}}],[\"它接收参数\",{\"1\":{\"1747\":1}}],[\"它接收三个参数\",{\"1\":{\"1468\":1,\"1469\":1}}],[\"它接收两个参数\",{\"1\":{\"698\":1,\"1467\":1}}],[\"它接收一个参数\",{\"1\":{\"1466\":1}}],[\"它接收一个数组\",{\"1\":{\"573\":1}}],[\"它接收一个\",{\"1\":{\"328\":1}}],[\"它可减少对cpu的依赖\",{\"1\":{\"2179\":1}}],[\"它可能会导致不正确的结果\",{\"1\":{\"1197\":1}}],[\"它可能会指定如下两个属性\",{\"1\":{\"388\":1}}],[\"它可以记录针对数据库的任何操作\",{\"1\":{\"2266\":1}}],[\"它可以是任何类型\",{\"1\":{\"1234\":1}}],[\"它可以是一个计算属性\",{\"1\":{\"843\":1}}],[\"它可以返回一个缓存版本的函数\",{\"1\":{\"1208\":1}}],[\"它可以正确响应\",{\"1\":{\"719\":1}}],[\"它可以表示任意精度格式的整数\",{\"1\":{\"650\":1}}],[\"它可以出现在任意类型的操作数之前执行操作数\",{\"1\":{\"646\":1}}],[\"它可以等任意表达式的结果\",{\"1\":{\"595\":1}}],[\"它可以获取异步操作的消息\",{\"1\":{\"562\":1}}],[\"它可以将读取的文件的内容转换为\",{\"1\":{\"395\":1}}],[\"它可以用于\",{\"1\":{\"338\":1}}],[\"它将无法工作\",{\"1\":{\"2794\":1}}],[\"它将采用合理的默认值\",{\"1\":{\"2788\":1}}],[\"它将会投射阴影到一个接受阴影的物体上\",{\"1\":{\"2695\":1}}],[\"它将会被认为是生命周期较长的对象\",{\"1\":{\"1648\":1}}],[\"它将被其他大多数的加载器设为默认的加载管理器\",{\"1\":{\"2454\":1}}],[\"它将一个复杂对象的构建与它的表示分离\",{\"1\":{\"1758\":1}}],[\"它将面临被裁切的命运\",{\"1\":{\"1660\":1}}],[\"它将两个参数都转换为数字并将它们相加\",{\"1\":{\"807\":1}}],[\"它将抛出typeerror\",{\"1\":{\"803\":1}}],[\"它将忽略标志\",{\"1\":{\"537\":1}}],[\"它将异步加载\",{\"1\":{\"462\":1}}],[\"它将防止对其进行垃圾收集\",{\"1\":{\"434\":1}}],[\"它将开启更严格的\",{\"1\":{\"429\":1}}],[\"它将不同的任务分配给不同的线程\",{\"1\":{\"378\":1}}],[\"它将接收在频道上发送的任何消息\",{\"1\":{\"343\":1}}],[\"它主要完成信号控制的功能\",{\"1\":{\"2176\":1}}],[\"它主要是为了解决可能出现的全局变量冲突的问题\",{\"1\":{\"650\":1}}],[\"它主要负责将新的任务发送到队列中进行处理\",{\"1\":{\"375\":1}}],[\"它主要负责跟踪所有要执行的代码\",{\"1\":{\"374\":1}}],[\"它主要用来与用户互动\",{\"1\":{\"370\":1}}],[\"它首先会创建一个全局的\",{\"1\":{\"350\":1}}],[\"它给人以移动原生共享的感觉\",{\"1\":{\"345\":1}}],[\"它返回缓存的结果\",{\"1\":{\"1211\":1}}],[\"它返回的是\",{\"1\":{\"724\":1}}],[\"它返回一个原始值\",{\"1\":{\"806\":1}}],[\"它返回一个新的\",{\"1\":{\"400\":1}}],[\"它返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器\",{\"1\":{\"324\":1}}],[\"它返回了一个\",{\"1\":{\"341\":1}}],[\"它会根据条件决定是自己处理这个请求\",{\"1\":{\"1835\":1}}],[\"它会识别一些会请求资源的属性\",{\"1\":{\"1703\":1}}],[\"它会监听得到的请求\",{\"1\":{\"1695\":1}}],[\"它会打印出哪些文件被修改\",{\"1\":{\"1584\":1}}],[\"它会执行这个函数并使用其返回值作为初始状态\",{\"1\":{\"1274\":1}}],[\"它会被设置为\",{\"1\":{\"1273\":1}}],[\"它会自动更新\",{\"1\":{\"724\":1}}],[\"它会返回一个新数组\",{\"1\":{\"713\":1}}],[\"它会返回一个由给定对象的自身可枚举属性\",{\"1\":{\"295\":1,\"882\":1}}],[\"它会向\",{\"1\":{\"703\":1}}],[\"它会将\",{\"1\":{\"662\":1}}],[\"它会将转换的结果返回\",{\"1\":{\"662\":1}}],[\"它会优先进行字符串拼接\",{\"1\":{\"616\":1}}],[\"它会反复调用自身\",{\"1\":{\"592\":1}}],[\"它会异步读取指定文件\",{\"1\":{\"560\":1}}],[\"它会先在对象自身中寻找\",{\"1\":{\"482\":1}}],[\"它会检查使用模块的环境\",{\"1\":{\"465\":1}}],[\"它会去寻找依赖项\",{\"1\":{\"463\":1}}],[\"它会读取\",{\"1\":{\"451\":1}}],[\"它会一直保留到用户离开页面\",{\"1\":{\"432\":1}}],[\"它会在读取文件内容之后调用一个回调函数\",{\"1\":{\"560\":1}}],[\"它会在上述各个阶段结束时\",{\"1\":{\"381\":1}}],[\"它会在函数执行的过程中被用到\",{\"1\":{\"352\":1}}],[\"它会溢出浏览器窗口和安卓顶部的状态栏\",{\"1\":{\"339\":1}}],[\"它就可以\",{\"1\":{\"1002\":1}}],[\"它就已经失败了\",{\"1\":{\"578\":1}}],[\"它就不会起作用了\",{\"1\":{\"334\":1}}],[\"它就是设置了理想视口\",{\"1\":{\"202\":1}}],[\"它与\",{\"1\":{\"290\":1,\"312\":1,\"689\":1,\"1237\":1,\"1339\":1}}],[\"它类似于对象\",{\"1\":{\"272\":1}}],[\"它类似于数组\",{\"1\":{\"271\":1}}],[\"它的计时范围是1950\",{\"1\":{\"2109\":1}}],[\"它的计算效果是math\",{\"1\":{\"621\":1}}],[\"它的主要思想就是将对象的创建与对象的实现分离\",{\"1\":{\"1747\":1}}],[\"它的优点是明显减少了很多不必要的ttp请求次数\",{\"1\":{\"1737\":1}}],[\"它的整个流程就采用的就是上文所说的标记清除算法了\",{\"1\":{\"1648\":1}}],[\"它的标记阶段和标记清除算法没有什么不同\",{\"1\":{\"1646\":1}}],[\"它的生命周期从函数执行开始\",{\"1\":{\"1645\":1}}],[\"它的原理很简单就是将代码提交的历史使用二分法来缩小出问题的代替提交范围\",{\"1\":{\"1637\":1}}],[\"它的原理就是利用\",{\"1\":{\"763\":1}}],[\"它的功能有点类似于\",{\"1\":{\"1580\":1}}],[\"它的类型是\",{\"1\":{\"1338\":1}}],[\"它的行为可以由父组件进行配置\",{\"1\":{\"1303\":1}}],[\"它的核心目的是通过缓存计算结果\",{\"1\":{\"1264\":1}}],[\"它的触发时机有\",{\"1\":{\"1244\":3}}],[\"它的作用域就在\",{\"1\":{\"897\":1}}],[\"它的对象只定义在函数体中\",{\"1\":{\"723\":1}}],[\"它的转换规则相对简单\",{\"1\":{\"664\":1}}],[\"它的返回值是一个字符串\",{\"1\":{\"642\":1}}],[\"它的返回值是一个布尔值\",{\"1\":{\"401\":1,\"639\":1}}],[\"它的处理原理如下\",{\"1\":{\"592\":1}}],[\"它的基本思路都是接收一定的参数\",{\"1\":{\"590\":1}}],[\"它的合法取值是\",{\"1\":{\"520\":1}}],[\"它的执行过程如下\",{\"1\":{\"465\":1}}],[\"它的参数是一个arraybuffer对象\",{\"1\":{\"409\":1}}],[\"它的参数是一个回调函数\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"它的内容是这个\",{\"1\":{\"400\":1}}],[\"它的数据可以按文本或二进制的格式进行读取\",{\"1\":{\"387\":1}}],[\"它的指向取决于函数调用的地方\",{\"1\":{\"352\":1}}],[\"它的特点如下\",{\"1\":{\"268\":1,\"1712\":1}}],[\"它的默认值才会生效\",{\"1\":{\"253\":1}}],[\"它依旧是处于全局执行环境中\",{\"1\":{\"261\":1}}],[\"它们互不依赖于彼此的具体实现\",{\"1\":{\"1812\":1}}],[\"它们会监听某个数据或状态的变化\",{\"1\":{\"1802\":1}}],[\"它们会按照顺序反复运行\",{\"1\":{\"379\":1}}],[\"它们本质上也是单例模式的实现\",{\"1\":{\"1764\":1}}],[\"它们具有相似的特性或者功能\",{\"1\":{\"1755\":1}}],[\"它们在大多数情况下都会有缓存\",{\"1\":{\"1686\":1}}],[\"它们只应该发送给服务端\",{\"1\":{\"1661\":1}}],[\"它们被保证存储在内存中\",{\"1\":{\"1646\":1}}],[\"它们所占有的空间就会被释放\",{\"1\":{\"1645\":1}}],[\"它们可以在\",{\"1\":{\"1356\":1}}],[\"它们可以使编写异步代码更容易\",{\"1\":{\"554\":1}}],[\"它们可能不会在期望的时刻运行\",{\"1\":{\"1285\":1}}],[\"它们分别会有这样的表现\",{\"1\":{\"1244\":1}}],[\"它们分别是文件所有者\",{\"1\":{\"1040\":1}}],[\"它们仅用于对象到原始值的转换\",{\"1\":{\"806\":1}}],[\"它们是相等的\",{\"1\":{\"777\":1}}],[\"它们不能直接调用数组的方法\",{\"1\":{\"721\":1}}],[\"它们的定义方式与渲染器无关\",{\"1\":{\"2633\":1}}],[\"它们的引用数量都是\",{\"1\":{\"1646\":1}}],[\"它们的引用是不同的\",{\"1\":{\"1236\":1}}],[\"它们的用法很简单\",{\"1\":{\"594\":1}}],[\"它们的声明生效时机和具体代码的执行时机保持一致\",{\"1\":{\"507\":1}}],[\"它们的内存空间是共享的\",{\"1\":{\"484\":1}}],[\"它们的参数都是一个字节序号\",{\"1\":{\"411\":1}}],[\"它们提供了当前在浏览器中运行的所有选项卡和进程的概览\",{\"1\":{\"425\":1}}],[\"它们都有两个版本\",{\"1\":{\"602\":1}}],[\"它们都是独立的存在\",{\"1\":{\"510\":1}}],[\"它们都接受两个参数\",{\"1\":{\"412\":1}}],[\"它们都用来遍历对象\",{\"1\":{\"295\":1}}],[\"它们和正常的数组很类似\",{\"1\":{\"402\":1}}],[\"它们之间又有何区别和联系\",{\"1\":{\"386\":1}}],[\"它们相当于\",{\"1\":{\"353\":1}}],[\"它们将会先被转为对象\",{\"1\":{\"254\":1}}],[\"它们无法访问或使用\",{\"1\":{\"249\":1}}],[\"它必须是纯函数\",{\"1\":{\"1273\":1}}],[\"它必须大于或等于\",{\"1\":{\"202\":1}}],[\"它必须小于或等于\",{\"1\":{\"202\":1}}],[\"它对设备来说是一个最理想布局视口尺寸\",{\"1\":{\"201\":1}}],[\"它脱离文档流\",{\"1\":{\"178\":1}}],[\"它是系统进行资源分配和调度的一个独立单位\",{\"1\":{\"2150\":1}}],[\"它是由接收窗口剩余大小和网络中拥塞程度来决定的\",{\"1\":{\"1724\":1}}],[\"它是由不同大小内存组成的内存列表\",{\"1\":{\"1646\":1}}],[\"它是运行在主线程上的\",{\"1\":{\"1649\":1}}],[\"它是可以被校验的\",{\"1\":{\"1616\":1}}],[\"它是可选的\",{\"1\":{\"287\":1,\"684\":1}}],[\"它是对行为的抽象\",{\"1\":{\"1338\":1}}],[\"它是通过\",{\"1\":{\"1273\":1}}],[\"它是存在第三个参数的\",{\"1\":{\"903\":1}}],[\"它是es2018中引入的方法\",{\"1\":{\"891\":1}}],[\"它是限制不到后端的\",{\"1\":{\"864\":1}}],[\"它是及时更新的\",{\"1\":{\"724\":1}}],[\"它是操作数的类型\",{\"1\":{\"642\":1}}],[\"它是为优化then链而开发出来的\",{\"1\":{\"594\":1}}],[\"它是为浏览器之外的\",{\"1\":{\"448\":1}}],[\"它是非常重要的\",{\"1\":{\"392\":1}}],[\"它是node中新引入的一个任务队列\",{\"1\":{\"381\":1}}],[\"它是同步代码\",{\"1\":{\"376\":3}}],[\"它是\",{\"1\":{\"328\":1,\"387\":1,\"653\":1}}],[\"它是一种具有弱键引用的数据结构\",{\"1\":{\"433\":1}}],[\"它是一种类似于字符串的数据类型\",{\"1\":{\"268\":1}}],[\"它是一个表达式\",{\"1\":{\"1464\":1}}],[\"它是一个比较函数\",{\"1\":{\"698\":2}}],[\"它是一个对象\",{\"1\":{\"562\":1}}],[\"它是一个给\",{\"1\":{\"472\":1}}],[\"它是一个用来表示file\",{\"1\":{\"413\":1}}],[\"它是一个只读属性\",{\"1\":{\"399\":1}}],[\"它是一个微任务\",{\"1\":{\"376\":1}}],[\"它是一个宏任务\",{\"1\":{\"376\":1}}],[\"它是一个存储函数调用的栈结构\",{\"1\":{\"374\":1}}],[\"它是一个独立的渲染区域\",{\"1\":{\"147\":1}}],[\"它是页面中的一块渲染区域\",{\"1\":{\"147\":1}}],[\"它决定了其子元素将如何定位\",{\"1\":{\"147\":1}}],[\"正面\",{\"1\":{\"2675\":1}}],[\"正方形画布\",{\"1\":{\"2570\":1}}],[\"正交相机\",{\"0\":{\"2527\":1}}],[\"正交摄像机\",{\"1\":{\"2510\":1}}],[\"正向工程是指不仅从现有系统中恢复设计信息\",{\"1\":{\"1905\":1}}],[\"正向工程\",{\"1\":{\"1905\":1}}],[\"正向代理隐藏了真实的客户端\",{\"1\":{\"1794\":1}}],[\"正向代理\",{\"1\":{\"1794\":1}}],[\"正向遍历\",{\"0\":{\"748\":1}}],[\"正规小工厂\",{\"1\":{\"1752\":1}}],[\"正则是全局模式\",{\"1\":{\"1551\":1}}],[\"正则和\",{\"0\":{\"740\":1}}],[\"正确\",{\"1\":{\"2717\":1}}],[\"正确的层次抽象方法\",{\"1\":{\"1983\":1}}],[\"正确的做法是利用\",{\"1\":{\"1212\":1}}],[\"正确性依赖与校验码\",{\"1\":{\"2186\":1}}],[\"正确性\",{\"1\":{\"1958\":1}}],[\"正确性维护\",{\"1\":{\"1949\":1}}],[\"正确性验证的步骤比较困难且耗时\",{\"1\":{\"1906\":1}}],[\"正确性验证\",{\"1\":{\"1906\":1}}],[\"正确性难确定\",{\"1\":{\"1895\":1}}],[\"正确执行\",{\"1\":{\"1086\":2}}],[\"正常情况下\",{\"1\":{\"1953\":1}}],[\"正常情况下作为函数内的局部变量\",{\"1\":{\"900\":1}}],[\"正常导入\",{\"1\":{\"275\":1}}],[\"正常导出\",{\"1\":{\"274\":1}}],[\"正序排序\",{\"1\":{\"698\":1}}],[\"正数用原码表示\",{\"1\":{\"609\":1}}],[\"正数的补码与原码相同\",{\"1\":{\"606\":1}}],[\"正数的反码与原码相同\",{\"1\":{\"606\":1}}],[\"正数左补0\",{\"1\":{\"613\":1}}],[\"正数左补\",{\"1\":{\"606\":1}}],[\"正\",{\"1\":{\"606\":1}}],[\"正如一个进程可以拥有多个线程一样\",{\"1\":{\"589\":1}}],[\"正如前面所说\",{\"1\":{\"276\":1}}],[\"正因如此\",{\"1\":{\"511\":1}}],[\"正是由于\",{\"1\":{\"500\":1}}],[\"正整数或\",{\"1\":{\"202\":1}}],[\"正整数或设备宽度\",{\"1\":{\"202\":1}}],[\"正在执行\",{\"1\":{\"1308\":1}}],[\"正在运行的内核信息映射\",{\"1\":{\"913\":1}}],[\"正在连接设备\",{\"1\":{\"128\":1}}],[\"正在搜索设备\",{\"1\":{\"128\":1}}],[\"正式版小程序\",{\"1\":{\"108\":1}}],[\"已索引的三角面片\",{\"1\":{\"2288\":1}}],[\"已知的\",{\"1\":{\"2125\":1}}],[\"已被确认\",{\"1\":{\"1727\":1}}],[\"已修改但未add文件\",{\"1\":{\"1635\":1}}],[\"已修改状态\",{\"1\":{\"1584\":1}}],[\"已缓存和未缓存改动\",{\"0\":{\"1635\":1}}],[\"已缓存改动\",{\"0\":{\"1634\":1}}],[\"已add但未commit文件\",{\"1\":{\"1634\":1,\"1635\":1}}],[\"已使用\",{\"1\":{\"1614\":2}}],[\"已暂存状态\",{\"1\":{\"1584\":1}}],[\"已跟踪\",{\"1\":{\"1584\":1}}],[\"已在后台更新\",{\"1\":{\"1234\":1}}],[\"已存在\",{\"1\":{\"1001\":1}}],[\"已声明\",{\"1\":{\"654\":2}}],[\"已经到达网站机房\",{\"1\":{\"2077\":1}}],[\"已经按序到达了\",{\"1\":{\"1724\":1}}],[\"已经没有灰色对象了\",{\"1\":{\"1650\":1}}],[\"已经无引用关系了\",{\"1\":{\"1650\":1}}],[\"已经被移动走了\",{\"1\":{\"1478\":1}}],[\"已经可以正确地推导出指定键对应的类型\",{\"1\":{\"1366\":1}}],[\"已经帮我们引入了\",{\"1\":{\"1334\":1}}],[\"已经省略了冒号\",{\"1\":{\"1058\":1}}],[\"已经存在时\",{\"1\":{\"953\":1}}],[\"已经就是\",{\"1\":{\"903\":1}}],[\"已经接收到全部响应数据\",{\"1\":{\"817\":1}}],[\"已经接收到部分响应数据\",{\"1\":{\"817\":1}}],[\"已经调用\",{\"1\":{\"817\":2}}],[\"已经是\",{\"1\":{\"577\":1}}],[\"已经通过引入块级作用域并配合使用\",{\"1\":{\"500\":1}}],[\"已失败\",{\"1\":{\"566\":1}}],[\"已成功\",{\"1\":{\"566\":1}}],[\"已拒绝\",{\"1\":{\"564\":1}}],[\"已完成\",{\"1\":{\"564\":1}}],[\"已完成全部的读取请求\",{\"1\":{\"394\":1}}],[\"已读取量\",{\"1\":{\"395\":1}}],[\"已读不回\",{\"1\":{\"125\":1}}],[\"已连接过此设备\",{\"1\":{\"128\":1}}],[\"已开启监听\",{\"1\":{\"127\":1}}],[\"指出当前用到的材质队列的索引\",{\"1\":{\"2286\":1}}],[\"指出窗口大小的通知称为窗口通告\",{\"1\":{\"1723\":1}}],[\"指明当前分割包含多少顶点\",{\"1\":{\"2286\":1}}],[\"指明严格模式的情况下就是\",{\"1\":{\"353\":1}}],[\"指将一个关系模式分解成若干个关系模式后\",{\"1\":{\"2256\":1}}],[\"指一旦程序访问了某个存储单元\",{\"1\":{\"2141\":1}}],[\"指程序中的某条指令一旦执行\",{\"1\":{\"2141\":1}}],[\"指使应用软件适应环境变化\",{\"1\":{\"1949\":1}}],[\"指仅供该模块本身引用的数据\",{\"1\":{\"1933\":1}}],[\"指报文段在网络中生存的时间\",{\"1\":{\"1729\":1}}],[\"指采用\",{\"1\":{\"817\":1}}],[\"指倒数第二个元素\",{\"1\":{\"702\":1}}],[\"指倒数第二个字符\",{\"1\":{\"528\":1,\"529\":1}}],[\"指最后一个元素\",{\"1\":{\"702\":1}}],[\"指针的值全是\",{\"1\":{\"642\":1}}],[\"指针\",{\"1\":{\"642\":1}}],[\"指数运算符和上面的加减乘除运算符都有对应的赋值操作运算符\",{\"1\":{\"621\":1}}],[\"指数操作符\",{\"0\":{\"290\":1,\"621\":1}}],[\"指的就是内部返回的\",{\"1\":{\"569\":1}}],[\"指的是定义一系列的算法\",{\"1\":{\"1784\":1}}],[\"指的是在代码之中多次出现\",{\"1\":{\"269\":1}}],[\"指的是屏幕上垂直和水平的总物理像素\",{\"1\":{\"202\":1}}],[\"指的是触发\",{\"1\":{\"183\":1}}],[\"指字符串中最后一个字符\",{\"1\":{\"529\":1}}],[\"指字符串的最后一个字符\",{\"1\":{\"528\":1}}],[\"指模块数组\",{\"1\":{\"458\":1}}],[\"指模块路径\",{\"1\":{\"458\":1}}],[\"指向第一个参数的值\",{\"1\":{\"659\":1}}],[\"指向reject的回调函数\",{\"1\":{\"572\":1}}],[\"指向对应的构造函数\",{\"1\":{\"484\":1}}],[\"指向规则是一样的\",{\"1\":{\"365\":1}}],[\"指向与上述情况有所不同\",{\"1\":{\"361\":1}}],[\"指向了全局对象\",{\"1\":{\"355\":1,\"1653\":1}}],[\"指向了调用\",{\"1\":{\"354\":1}}],[\"指向最后调用它的对象\",{\"1\":{\"354\":1}}],[\"指向的函数还有\",{\"1\":{\"363\":1}}],[\"指向的对象\",{\"1\":{\"363\":1}}],[\"指向的是什么呢\",{\"1\":{\"363\":1}}],[\"指向的是调用这个方法的对象\",{\"1\":{\"354\":1}}],[\"指向的规则之外\",{\"1\":{\"361\":1}}],[\"指向的流程图\",{\"1\":{\"360\":1}}],[\"指向的应该是一个对象\",{\"1\":{\"352\":1}}],[\"指向全局对象\",{\"1\":{\"353\":1}}],[\"指向调用它的对象\",{\"1\":{\"352\":1}}],[\"指向\",{\"0\":{\"352\":1,\"361\":1},\"1\":{\"353\":1,\"354\":1,\"355\":2,\"362\":2,\"1559\":1}}],[\"指向外层的执行环境\",{\"1\":{\"262\":1}}],[\"指向该对象\",{\"1\":{\"262\":2}}],[\"指向构造函数中的代码\",{\"1\":{\"262\":1}}],[\"指用易于理解的名称对html标签附加的class或id命名\",{\"1\":{\"216\":1}}],[\"指定需要重新编译材质\",{\"1\":{\"2666\":1}}],[\"指定时间间隔将数据进行快照存储\",{\"1\":{\"2069\":1}}],[\"指定有效方案\",{\"1\":{\"1959\":1}}],[\"指定工作技术啊及资源要求\",{\"1\":{\"1901\":1}}],[\"指定主题事件通知\",{\"1\":{\"1806\":1}}],[\"指定自己的初始化序列号为后面的可靠性传送做准备\",{\"1\":{\"1726\":1}}],[\"指定调试器应该找到映射文件而不是生成文件的位置\",{\"1\":{\"1454\":1}}],[\"指定调试器应该找到\",{\"1\":{\"1454\":1}}],[\"指定输出目录\",{\"1\":{\"1454\":1}}],[\"指定使用模块\",{\"1\":{\"1454\":1}}],[\"指定了\",{\"1\":{\"1400\":1}}],[\"指定如何更新状态的还原函数\",{\"1\":{\"1273\":1}}],[\"指定编译选项\",{\"1\":{\"1134\":1}}],[\"指定已存在的归档文件的名称\",{\"1\":{\"1025\":1}}],[\"指定归档文件的名称为\",{\"1\":{\"1025\":1}}],[\"指定归档文件的名称\",{\"1\":{\"1025\":1}}],[\"指定愈大的数值\",{\"1\":{\"1021\":1}}],[\"指定暂时存放文件的目录\",{\"1\":{\"1018\":1}}],[\"指定魔法数字文件\",{\"1\":{\"1012\":1}}],[\"指定名称文件\",{\"1\":{\"1012\":1}}],[\"指定栏宽\",{\"1\":{\"1009\":1}}],[\"指定的\",{\"1\":{\"986\":1}}],[\"指定的变量可以是数组元素\",{\"1\":{\"718\":1,\"881\":1}}],[\"指定新建工作组的\",{\"1\":{\"953\":1}}],[\"指定用户id\",{\"1\":{\"944\":1}}],[\"指定用户登入后所使用的shell\",{\"1\":{\"944\":1}}],[\"指定用户登入时的起始目录\",{\"1\":{\"944\":1}}],[\"指定用户所属的附加群组\",{\"1\":{\"944\":1}}],[\"指定用户所属的群组\",{\"1\":{\"944\":1}}],[\"指定在密码过期后多少天即关闭该帐号\",{\"1\":{\"944\":1}}],[\"指定帐号的有效期限\",{\"1\":{\"944\":1}}],[\"指定迭代的的对象\",{\"1\":{\"718\":1,\"881\":1}}],[\"指定要传递给shader代码的uniforms\",{\"1\":{\"2760\":1}}],[\"指定要存储的\",{\"1\":{\"1659\":1}}],[\"指定要包含在编译中的库文件\",{\"1\":{\"1454\":1}}],[\"指定要列出内容的归档文件的名称\",{\"1\":{\"1025\":1}}],[\"指定要解压的归档文件的名称为\",{\"1\":{\"1025\":1}}],[\"指定要解压的归档文件的名称\",{\"1\":{\"1025\":1}}],[\"指定要显示多少行的文本\",{\"1\":{\"1009\":1}}],[\"指定要注册的事件类型\",{\"1\":{\"558\":1}}],[\"指定要使用的解析器\",{\"1\":{\"20\":1,\"63\":1}}],[\"指定\",{\"1\":{\"391\":3,\"920\":1,\"1454\":2}}],[\"指定vw\",{\"1\":{\"208\":1}}],[\"指令在glsl代码为顶点着色器和片段着色器定义自定义常量\",{\"1\":{\"2750\":1}}],[\"指令执行速度也高\",{\"1\":{\"2179\":1}}],[\"指令执行速度法\",{\"1\":{\"2170\":1}}],[\"指令形式\",{\"1\":{\"1766\":1}}],[\"指令行的储存\",{\"0\":{\"1067\":1}}],[\"指令相同\",{\"1\":{\"1009\":1}}],[\"指令所建立的帐号\",{\"1\":{\"943\":1}}],[\"指令\",{\"1\":{\"126\":1}}],[\"走\",{\"1\":{\"125\":1}}],[\"此值为true\",{\"1\":{\"2795\":1}}],[\"此值仅影响其颜色\",{\"1\":{\"2667\":1}}],[\"此函数使用shader源码作为参数\",{\"1\":{\"2688\":1}}],[\"此函数在加载开始时被调用\",{\"1\":{\"2468\":1}}],[\"此材质可以接收阴影\",{\"1\":{\"2775\":1}}],[\"此材质是否可见\",{\"1\":{\"2682\":1}}],[\"此材质实例的uuid\",{\"1\":{\"2679\":1}}],[\"此材质实例的唯一编号\",{\"1\":{\"2664\":1}}],[\"此类的工作方式与shadermaterial类似\",{\"1\":{\"2617\":1}}],[\"此行为可用于从\",{\"1\":{\"2477\":1}}],[\"此处就可以获取到db实例\",{\"1\":{\"1671\":1}}],[\"此处是res\",{\"1\":{\"821\":1}}],[\"此一整轮\",{\"1\":{\"1650\":1}}],[\"此即并行回收\",{\"1\":{\"1649\":1}}],[\"此算法分为\",{\"1\":{\"1646\":1}}],[\"此文件不会删除新建的文件\",{\"1\":{\"1614\":1}}],[\"此配置特定于操作系统上的用户\",{\"1\":{\"1586\":1}}],[\"此命令的问题在于\",{\"1\":{\"1630\":1}}],[\"此命令不会更改或更新任何内容\",{\"1\":{\"1584\":1}}],[\"此命令显示notes\",{\"1\":{\"993\":1}}],[\"此方法主要与跨多个\",{\"1\":{\"2837\":1}}],[\"此方法将颜色缓存初始化为当前颜色\",{\"1\":{\"2812\":1}}],[\"此方法将在任意项加载错误时\",{\"1\":{\"2471\":1}}],[\"此方法加载每一个项\",{\"1\":{\"2470\":1}}],[\"此方法可以有所帮助\",{\"1\":{\"2462\":1}}],[\"此方法是我们包装的方法\",{\"1\":{\"1570\":1}}],[\"此方法是刷新视图的核心\",{\"1\":{\"1556\":1}}],[\"此方法\",{\"1\":{\"1513\":1}}],[\"此方法返回虚拟\",{\"1\":{\"1511\":1}}],[\"此方法用于用户手写\",{\"1\":{\"1511\":1}}],[\"此方法用于用户使用\",{\"1\":{\"1511\":1}}],[\"此方法核心流程如下\",{\"1\":{\"1507\":1}}],[\"此方法不会更改现有数组\",{\"1\":{\"759\":1}}],[\"此做法有利于代码分割\",{\"1\":{\"1484\":1,\"1533\":1}}],[\"此节点已经被移动走了\",{\"1\":{\"1478\":1}}],[\"此状态下敲击键盘动作会被\",{\"1\":{\"1056\":1}}],[\"此选项通常在复制目录时使用\",{\"1\":{\"998\":1}}],[\"此选项将失明了仅以成功状态退出\",{\"1\":{\"953\":1}}],[\"此参数的输出格式可用于\",{\"1\":{\"1009\":1}}],[\"此参数的输出格式可用于前置处理器巨集\",{\"1\":{\"1009\":1}}],[\"此参数的效果和指定\",{\"1\":{\"930\":1,\"1021\":2}}],[\"此参数必须与\",{\"1\":{\"1009\":1}}],[\"此参数将忽略不予处理\",{\"1\":{\"930\":1}}],[\"此参数不是对象\",{\"1\":{\"654\":1}}],[\"此运算符可以用于执行数字加法和字符串连接\",{\"1\":{\"807\":1}}],[\"此计算机二进制码为负数\",{\"1\":{\"609\":1}}],[\"此匿名函数被传递任意数量的参数以指定模块的依赖关系\",{\"1\":{\"465\":1}}],[\"此对象应该为模块的输出值\",{\"1\":{\"458\":1}}],[\"此对象定义过滤器\",{\"1\":{\"341\":1}}],[\"此\",{\"1\":{\"409\":2}}],[\"此设备不支持\",{\"1\":{\"338\":1,\"339\":1,\"340\":1}}],[\"此外很多浏览器对一个站点的cookie个数也是有限制的\",{\"1\":{\"1660\":1}}],[\"此外chmod也可以用数字来表示权限如\",{\"1\":{\"1041\":1}}],[\"此外\",{\"1\":{\"217\":1,\"802\":1,\"1339\":1,\"1955\":1}}],[\"此时表明客户端到服务端的连接已经释放\",{\"1\":{\"1729\":1}}],[\"此时tcp未释放掉\",{\"1\":{\"1728\":1}}],[\"此时的tcp处于半关闭状态\",{\"1\":{\"1728\":1}}],[\"此时连接建立成功\",{\"1\":{\"1727\":1}}],[\"此时客户端进入\",{\"1\":{\"1729\":1}}],[\"此时客户端忽略服务端发来的确认\",{\"1\":{\"1727\":1}}],[\"此时客户端处于\",{\"1\":{\"1726\":2,\"1728\":2}}],[\"此时服务端处于\",{\"1\":{\"1728\":2}}],[\"此时服务端误认为客户端又发出一次新的连接请求\",{\"1\":{\"1727\":1}}],[\"此时服务器处于\",{\"1\":{\"1726\":1}}],[\"此时如\",{\"1\":{\"1724\":1}}],[\"此时如何清除浮动吗\",{\"1\":{\"183\":1}}],[\"此时可以通过cdn\",{\"1\":{\"1660\":1}}],[\"此时局部变量依然在被使用\",{\"1\":{\"1645\":1}}],[\"此时再从远程仓库拉取文件的时候会报错\",{\"1\":{\"1609\":1}}],[\"此时我们不能把类型\",{\"1\":{\"1443\":1}}],[\"此时我们可以为\",{\"1\":{\"152\":1}}],[\"此时它既能识别负的十六进制\",{\"1\":{\"663\":1}}],[\"此时页面会显示\",{\"1\":{\"389\":1}}],[\"此时执行栈为空\",{\"1\":{\"376\":1}}],[\"此时就可以使用\",{\"1\":{\"270\":1}}],[\"此时\",{\"1\":{\"125\":1,\"354\":2,\"558\":1,\"1016\":2,\"1726\":1}}],[\"此规则要求为每个\",{\"1\":{\"19\":1,\"62\":1}}],[\"向你的\",{\"1\":{\"2743\":1}}],[\"向\",{\"1\":{\"2741\":1}}],[\"向用户展示数据\",{\"1\":{\"2031\":1}}],[\"向服务端发送确认应答\",{\"1\":{\"1729\":1}}],[\"向服务器发送请求\",{\"0\":{\"816\":1}}],[\"向本网络的所有机器发送\",{\"1\":{\"1692\":1}}],[\"向内存的一端移动\",{\"1\":{\"1646\":1}}],[\"向光标之上寻找一个字符串名称为word的字符串\",{\"1\":{\"1062\":1}}],[\"向光标之下寻找一个名称为word的字符串\",{\"1\":{\"1062\":1}}],[\"向右箭头键\",{\"1\":{\"1061\":1}}],[\"向左箭头键\",{\"1\":{\"1061\":1}}],[\"向左浮动直到碰到包含框\",{\"1\":{\"178\":1}}],[\"向左浮动时\",{\"1\":{\"178\":1}}],[\"向已存在的归档中追加文件\",{\"1\":{\"1025\":1}}],[\"向后添加\",{\"1\":{\"1478\":1}}],[\"向后移动半屏\",{\"1\":{\"989\":1}}],[\"向后移动一屏\",{\"1\":{\"989\":1}}],[\"向后翻半页\",{\"1\":{\"989\":1}}],[\"向前添加\",{\"1\":{\"1478\":1}}],[\"向前移动半屏\",{\"1\":{\"989\":1}}],[\"向前移动一屏\",{\"1\":{\"989\":1}}],[\"向前滚动一行\",{\"1\":{\"989\":1}}],[\"向前滚动半页\",{\"1\":{\"989\":1}}],[\"向下\",{\"1\":{\"1061\":2}}],[\"向下箭头键\",{\"1\":{\"1061\":1}}],[\"向下翻动一页\",{\"1\":{\"989\":1}}],[\"向下搜索\",{\"1\":{\"989\":1}}],[\"向上\",{\"1\":{\"1061\":2,\"1062\":1}}],[\"向上箭头键\",{\"1\":{\"1061\":1}}],[\"向上翻动一页\",{\"1\":{\"989\":1}}],[\"向上翻一页\",{\"1\":{\"989\":1}}],[\"向上搜索\",{\"1\":{\"989\":1}}],[\"向系统中增加了一个新组group1\",{\"1\":{\"954\":1}}],[\"向数组添加的新项目\",{\"1\":{\"703\":1}}],[\"向购物车添加一些商品\",{\"1\":{\"455\":1}}],[\"向外部暴露了\",{\"1\":{\"445\":1}}],[\"向全局对象添加变量会使全局命名空间变得混乱并增加了命名冲突的机会\",{\"1\":{\"445\":1}}],[\"向蓝牙设备发送一条\",{\"1\":{\"126\":1}}],[\"向蓝牙设备发送一个0x00的16进制数据\",{\"1\":{\"125\":1,\"127\":1}}],[\"向低功耗蓝牙设备特征值中写入二进制数据\",{\"1\":{\"124\":1}}],[\"是uniform的值\",{\"1\":{\"2760\":1}}],[\"是如下形式\",{\"1\":{\"2760\":1}}],[\"是如何做到既要支持变量提升的特性\",{\"1\":{\"508\":1}}],[\"是如何通过块级作用域来解决上面的问题\",{\"1\":{\"507\":1}}],[\"是如何使用的\",{\"1\":{\"461\":1}}],[\"是所有顶点都具有相同的值的变量\",{\"1\":{\"2742\":1}}],[\"是所有类型的子类型\",{\"1\":{\"1400\":1}}],[\"是当前\",{\"1\":{\"2282\":1}}],[\"是当组件不在任何\",{\"1\":{\"1217\":1}}],[\"是面片\",{\"1\":{\"2277\":1}}],[\"是利用备份软件\",{\"1\":{\"2265\":1}}],[\"是将数据库正常关闭\",{\"1\":{\"2265\":1}}],[\"是将系统关键部件集成在一块芯片上\",{\"1\":{\"2179\":1}}],[\"是关系模式r的一个分解\",{\"1\":{\"2255\":1}}],[\"是实体化视图\",{\"1\":{\"2228\":1}}],[\"是大脑\",{\"1\":{\"2179\":1}}],[\"是进程存在的唯一标志\",{\"1\":{\"2150\":1}}],[\"是主题对客体的操作行为集和约束条件集\",{\"1\":{\"2106\":1}}],[\"是接收其他实体访问的被动实体\",{\"1\":{\"2106\":1}}],[\"是多次不同的软件开发过程中重复使用相同或相似\",{\"1\":{\"2027\":1}}],[\"是多个质量属性的敏感点\",{\"1\":{\"2010\":1}}],[\"是从顶点着色器传递到片元着色器的变量\",{\"1\":{\"2742\":1}}],[\"是从风险承担者的角度与系统交互的简短描述\",{\"1\":{\"2011\":1}}],[\"是从哪里来的呢\",{\"1\":{\"1602\":1}}],[\"是新一代信息技术真正的实现推动整个\",{\"1\":{\"1889\":1}}],[\"是新增的字符串方法\",{\"1\":{\"324\":1}}],[\"是计算机在管理方面早起应用的最初级形式的信息系统\",{\"1\":{\"1863\":1}}],[\"是计算属性\",{\"1\":{\"1571\":1}}],[\"是单例的\",{\"1\":{\"1766\":1}}],[\"是单线程的\",{\"1\":{\"371\":1,\"555\":1}}],[\"是单线程运行的\",{\"1\":{\"370\":1}}],[\"是说在拥塞避免阶段将拥塞窗口控制为按线性增长\",{\"1\":{\"1720\":1}}],[\"是为了最好的实现系统的母的\",{\"1\":{\"1843\":1}}],[\"是为了防止发送给服务器的确认报文段丢失或者出错\",{\"1\":{\"1729\":1}}],[\"是为了与其他unix系统的相容性而保留\",{\"1\":{\"981\":1}}],[\"是为数据的可靠传输打下了基础\",{\"1\":{\"1713\":1}}],[\"是按照从右到左的顺序的\",{\"1\":{\"1706\":1}}],[\"是的话直接根据\",{\"1\":{\"1691\":1}}],[\"是的话就会把\",{\"1\":{\"627\":2}}],[\"是的话就会将字符串转换为\",{\"1\":{\"627\":1}}],[\"是的话就会返回\",{\"1\":{\"627\":1}}],[\"是没有存储上限的\",{\"1\":{\"1669\":1}}],[\"是没有任何用处的\",{\"1\":{\"1460\":1}}],[\"是紧跟域名的\",{\"1\":{\"1660\":1}}],[\"是初始的白色\",{\"1\":{\"1650\":1}}],[\"是要被清理的\",{\"1\":{\"1646\":1}}],[\"是要查找的目录路径\",{\"1\":{\"1006\":1}}],[\"是更为明智的选择\",{\"1\":{\"1646\":1}}],[\"是软件配置管理的核心思想之一\",{\"1\":{\"1578\":1}}],[\"是最低层次的透明性\",{\"1\":{\"2232\":1}}],[\"是最流行的集中式版本控制系统之一\",{\"1\":{\"1579\":1}}],[\"是最流行的分布式版本控制系统之一\",{\"1\":{\"1580\":1}}],[\"是最流行的分布式版本控制系统\",{\"1\":{\"1577\":1}}],[\"是最新的属性\",{\"1\":{\"1194\":1}}],[\"是最新的状态\",{\"1\":{\"1194\":1}}],[\"是需要更新页面的\",{\"1\":{\"1563\":1}}],[\"是响应式数据核心\",{\"1\":{\"1533\":1}}],[\"是元素节点还是文本节点\",{\"1\":{\"1528\":1}}],[\"是数据接受方\",{\"1\":{\"1513\":1}}],[\"是数据提供方\",{\"1\":{\"1513\":1}}],[\"是成对出现的\",{\"1\":{\"1513\":1}}],[\"是比小\",{\"1\":{\"1431\":1}}],[\"是创建对象的蓝图\",{\"1\":{\"1386\":1}}],[\"是创建对象的数值\",{\"1\":{\"320\":1}}],[\"是代表移除\",{\"1\":{\"1373\":1}}],[\"是骡子是马拉出来遛遛就知道了\",{\"1\":{\"1366\":1}}],[\"是允许同一个函数接受不同类型参数的一种模板\",{\"1\":{\"1360\":1}}],[\"是作用于这样的场景\",{\"1\":{\"1256\":1}}],[\"是你想要延迟的值\",{\"1\":{\"1234\":1}}],[\"是你在后期安装的一些软件的运行脚本\",{\"1\":{\"913\":1}}],[\"是异步\",{\"1\":{\"1201\":1}}],[\"是异步的设计是出于性能优化和避免不必要的渲染的考虑\",{\"1\":{\"1199\":1}}],[\"是异步的\",{\"1\":{\"462\":1,\"1195\":1}}],[\"是给守护进程用的\",{\"1\":{\"1153\":1}}],[\"是给管理员看的\",{\"1\":{\"909\":1}}],[\"是脚本中已经定义好的变量\",{\"1\":{\"1105\":1}}],[\"是解释执行的脚本语言\",{\"1\":{\"1077\":1}}],[\"是靠权限来区分\",{\"1\":{\"909\":1}}],[\"是访问不到的\",{\"1\":{\"897\":1}}],[\"是独立的\",{\"1\":{\"862\":1,\"863\":1}}],[\"是同步执行\",{\"1\":{\"1200\":1}}],[\"是同步可能会产生的问题\",{\"1\":{\"1200\":1}}],[\"是同步的\",{\"1\":{\"462\":1}}],[\"是同域的\",{\"1\":{\"862\":1,\"863\":1}}],[\"是对备用路径方式的扩充\",{\"1\":{\"2212\":1}}],[\"是对\",{\"1\":{\"1208\":1}}],[\"是对象解构的简写形式\",{\"1\":{\"838\":1}}],[\"是对象解构的完整形式\",{\"1\":{\"838\":1}}],[\"是对全局范围的\",{\"1\":{\"465\":1}}],[\"是因为\",{\"1\":{\"803\":1}}],[\"是目前比较常用的深拷贝方法之一\",{\"1\":{\"763\":1}}],[\"是即时更新的\",{\"1\":{\"724\":1}}],[\"是干什么的\",{\"1\":{\"723\":1}}],[\"是小于\",{\"1\":{\"698\":1}}],[\"是可以省略用户名的\",{\"1\":{\"937\":1}}],[\"是可以传入无数个参数的\",{\"1\":{\"903\":1}}],[\"是可以传递数组的展开深度\",{\"1\":{\"739\":1}}],[\"是可以注册多个不同域名的\",{\"1\":{\"855\":1}}],[\"是可以发送一些数据给蓝牙设备\",{\"1\":{\"125\":1}}],[\"是可选参数\",{\"1\":{\"698\":1,\"1006\":1}}],[\"是可选的\",{\"1\":{\"690\":1,\"873\":1}}],[\"是无法得知其是否安全完整到达的\",{\"1\":{\"1712\":1}}],[\"是无法被外部访问到的\",{\"1\":{\"900\":1}}],[\"是无法形成一个单独的执行环境的\",{\"1\":{\"261\":1}}],[\"是无效的对象\",{\"1\":{\"658\":1}}],[\"是唯一个非自反\",{\"1\":{\"656\":1}}],[\"是3秒钟后同时出现的\",{\"1\":{\"595\":1}}],[\"是由\",{\"1\":{\"590\":1}}],[\"是怎么实现生成器函数的暂停执行和恢复执行的呢\",{\"1\":{\"589\":1}}],[\"是怎么消灭嵌套调用和合并多个任务的错误处理的\",{\"1\":{\"569\":1}}],[\"是很常见的\",{\"1\":{\"554\":1}}],[\"是必传的\",{\"1\":{\"872\":1,\"873\":1,\"875\":1,\"876\":1,\"878\":1}}],[\"是必需的\",{\"1\":{\"536\":1,\"701\":1}}],[\"是必须的\",{\"1\":{\"525\":1}}],[\"是逆序查找\",{\"1\":{\"521\":1}}],[\"是正序查找\",{\"1\":{\"521\":1}}],[\"是用于优化的工具\",{\"1\":{\"1269\":1}}],[\"是用\",{\"1\":{\"511\":1,\"1641\":1}}],[\"是用来装饰函数参数\",{\"1\":{\"1469\":1}}],[\"是用来判断\",{\"1\":{\"657\":1}}],[\"是用来处理网络设备传来的数据\",{\"1\":{\"408\":1}}],[\"是用来向网卡\",{\"1\":{\"408\":1}}],[\"是不会清理\",{\"1\":{\"1650\":1}}],[\"是不会出现的\",{\"1\":{\"1236\":1}}],[\"是不必要的\",{\"1\":{\"1212\":1}}],[\"是不稳定的\",{\"1\":{\"658\":1}}],[\"是不能被删除\",{\"1\":{\"640\":1}}],[\"是不存在变量提升的\",{\"1\":{\"507\":1}}],[\"是不被允许的\",{\"1\":{\"231\":1}}],[\"是类的构造函数\",{\"1\":{\"495\":1}}],[\"是定义模块的函数\",{\"1\":{\"465\":1}}],[\"是流行的\",{\"1\":{\"450\":1}}],[\"是社区提出的一种\",{\"1\":{\"448\":1}}],[\"是匿名函数\",{\"1\":{\"445\":1}}],[\"是html5中的新标准\",{\"1\":{\"413\":1}}],[\"是优先于promise的回调执行\",{\"1\":{\"381\":1}}],[\"是eventloop\",{\"1\":{\"379\":1}}],[\"是浏览器提供的javascript引擎线程\",{\"1\":{\"371\":1}}],[\"是在tps基础上引进大量管理方法对企业整体信息进行处理\",{\"1\":{\"1864\":1}}],[\"是在组件渲染之后运行的\",{\"1\":{\"1283\":1}}],[\"是在等待一个\",{\"1\":{\"595\":1}}],[\"是在全局对象中调用的\",{\"1\":{\"429\":1}}],[\"是在\",{\"1\":{\"365\":1,\"898\":1}}],[\"是在函数被调用时确定的\",{\"1\":{\"352\":1}}],[\"是确定的\",{\"1\":{\"364\":1}}],[\"是直接运行在硬件上的最基础的软件实体\",{\"1\":{\"2192\":1}}],[\"是直接用虚拟节点穿件处真实节点\",{\"1\":{\"1476\":1}}],[\"是直接进行函数调用\",{\"1\":{\"355\":1}}],[\"是直接调用的\",{\"1\":{\"354\":1}}],[\"是指一个事物一旦被提交了\",{\"1\":{\"2258\":1}}],[\"是指一个事物的执行不能被其他事物干扰\",{\"1\":{\"2258\":1}}],[\"是指事物必须使数据库从一个一致性状态变换到另一个一致性状态\",{\"1\":{\"2258\":1}}],[\"是指事物包含的所有操作要么全部成功\",{\"1\":{\"2258\":1}}],[\"是指用户不必知道所操作的数据放在何处\",{\"1\":{\"2232\":1}}],[\"是指用户不必关心数据是如何分片的\",{\"1\":{\"2232\":1}}],[\"是指在靠近物或数据源头的一侧\",{\"1\":{\"2057\":1}}],[\"是指将软件从一个环境移植到新的环境下正确运行的难易程度\",{\"1\":{\"1948\":1}}],[\"是指验证软件程序正确的难易程度\",{\"1\":{\"1948\":1}}],[\"是指修改软件的难易程度\",{\"1\":{\"1948\":1}}],[\"是指通过阅读源代码和相关文档\",{\"1\":{\"1948\":1}}],[\"是指发送数据之前必须在两端建立连接\",{\"1\":{\"1713\":1}}],[\"是指向全局对象的\",{\"1\":{\"429\":1}}],[\"是指向\",{\"1\":{\"350\":1}}],[\"是指视窗\",{\"1\":{\"201\":1}}],[\"是和执行上下文绑定的\",{\"1\":{\"349\":1}}],[\"是频道的名称\",{\"1\":{\"343\":1}}],[\"是描述振动模式的单个数字或数字数组\",{\"1\":{\"342\":1}}],[\"是否保留缓直到手动清除或被覆盖\",{\"1\":{\"2788\":1}}],[\"是否执行抗锯齿\",{\"1\":{\"2788\":1}}],[\"是否使用物理上正确的光照模式\",{\"1\":{\"2802\":1}}],[\"是否使用对数深度缓存\",{\"1\":{\"2788\":1}}],[\"是否使用顶点着色\",{\"1\":{\"2681\":1}}],[\"是否使用多边形偏移\",{\"1\":{\"2668\":1}}],[\"是否对颜色应用抖动以消除条带的外观\",{\"1\":{\"2673\":1}}],[\"是否对模板缓冲执行模板操作\",{\"1\":{\"2656\":1}}],[\"是否预乘alpha\",{\"1\":{\"2672\":1}}],[\"是否在渲染此材质时启用深度测试\",{\"1\":{\"2652\":1}}],[\"是否渲染材质的颜色\",{\"1\":{\"2649\":1}}],[\"是否自动闭合路径\",{\"1\":{\"2420\":1}}],[\"是否内联样式\",{\"1\":{\"1707\":1}}],[\"是否安装成功\",{\"1\":{\"1582\":1}}],[\"是否可以让他们先缓存起来\",{\"1\":{\"1540\":1}}],[\"是否是同一节点\",{\"1\":{\"1478\":1}}],[\"是否是异步需要根据\",{\"1\":{\"1201\":1}}],[\"是否是全屏的\",{\"1\":{\"339\":1}}],[\"是否允许上传文件\",{\"1\":{\"1153\":1}}],[\"是否需要提前约定好一套存储变量\",{\"1\":{\"895\":1}}],[\"是否改变原数组\",{\"1\":{\"879\":1}}],[\"是否为用户watcher\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"是否为渲染watcher\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"是否为\",{\"1\":{\"592\":1,\"657\":1}}],[\"是否具有全局标志\",{\"1\":{\"536\":1}}],[\"是否存在没有使用的语句\",{\"1\":{\"1938\":1}}],[\"是否存在\",{\"1\":{\"465\":2}}],[\"是否开启蓝牙\",{\"1\":{\"128\":1}}],[\"是是\",{\"1\":{\"328\":1}}],[\"是一门单线程的语言\",{\"1\":{\"1649\":1}}],[\"是一套免费使用和自由传播到类\",{\"1\":{\"907\":1}}],[\"是一元运算符\",{\"1\":{\"646\":1}}],[\"是一样的\",{\"1\":{\"621\":1,\"1273\":1}}],[\"是一组同时支持\",{\"1\":{\"465\":1}}],[\"是一种可执行渲染3d图形等图修的半导体芯片\",{\"1\":{\"2179\":1}}],[\"是一种特殊的变量\",{\"1\":{\"2154\":1}}],[\"是一种现代的科学决策方法\",{\"1\":{\"1843\":1}}],[\"是一种组织管理技术\",{\"1\":{\"1843\":1}}],[\"是一种无连接的协议\",{\"1\":{\"1712\":1}}],[\"是一种低级api\",{\"1\":{\"1669\":1}}],[\"是一种高度动态的语言\",{\"1\":{\"1366\":1}}],[\"是一种自执行匿名函数\",{\"1\":{\"902\":1}}],[\"是一种协议\",{\"1\":{\"865\":1}}],[\"是一种异步请求数据的\",{\"1\":{\"812\":1}}],[\"是一种弱类型语言\",{\"1\":{\"772\":1}}],[\"是一种数字类型的数据\",{\"1\":{\"650\":1}}],[\"是一种为简化异步编程而设计的核心语言特性\",{\"1\":{\"562\":1}}],[\"是一种基于64个可打印字符来表示二进制数据的表示方法\",{\"1\":{\"414\":1}}],[\"是一种伪协议\",{\"1\":{\"413\":1}}],[\"是一种更完善的\",{\"1\":{\"272\":1}}],[\"是一个用\",{\"1\":{\"2741\":1}}],[\"是一个可重用的关键帧轨道集\",{\"1\":{\"2488\":1}}],[\"是一个可能需要很长时间来计算的函数\",{\"1\":{\"1265\":1}}],[\"是一个有专用目标的集成电路\",{\"1\":{\"2179\":1}}],[\"是一个智能计算机程序系统\",{\"1\":{\"1866\":1}}],[\"是一个动态的\",{\"1\":{\"1855\":1}}],[\"是一个单例\",{\"1\":{\"1765\":1}}],[\"是一个运行在浏览器上的非关系型数据库\",{\"1\":{\"1669\":1}}],[\"是一个全局\",{\"1\":{\"1559\":1}}],[\"是一个构造函数\",{\"1\":{\"1521\":1}}],[\"是一个约定的前缀\",{\"1\":{\"1356\":1}}],[\"是一个很重要的概念\",{\"1\":{\"1338\":1}}],[\"是一个函数\",{\"1\":{\"1307\":1}}],[\"是一个布尔值\",{\"1\":{\"1307\":1}}],[\"是一个获取评论数据的函数\",{\"1\":{\"1211\":1}}],[\"是一个命令行解释器\",{\"1\":{\"1077\":1}}],[\"是一个在\",{\"1\":{\"1071\":1}}],[\"是一个整数表示天数\",{\"1\":{\"1006\":1}}],[\"是一个局部的变量\",{\"1\":{\"897\":1}}],[\"是一个实时集合\",{\"1\":{\"725\":1}}],[\"是一个\",{\"1\":{\"724\":1}}],[\"是一个数组\",{\"1\":{\"681\":1}}],[\"是一个数组方法\",{\"1\":{\"332\":1}}],[\"是一个带星号的函数\",{\"1\":{\"587\":1}}],[\"是一个对象\",{\"1\":{\"464\":1,\"562\":1}}],[\"是一个不错的选择\",{\"1\":{\"395\":1}}],[\"是一个异步\",{\"1\":{\"393\":1}}],[\"是一个只相对于浏览器的根元素\",{\"1\":{\"206\":1}}],[\"是使用箭头函数定义的\",{\"1\":{\"261\":1}}],[\"是a标签中title属性\",{\"1\":{\"218\":1}}],[\"是相对于子元素的直接父元素\",{\"1\":{\"205\":1}}],[\"是\",{\"1\":{\"147\":1,\"320\":1,\"334\":1,\"341\":1,\"352\":1,\"362\":1,\"364\":1,\"388\":1,\"452\":1,\"464\":1,\"482\":1,\"587\":1,\"594\":1,\"596\":1,\"650\":1,\"653\":1,\"657\":1,\"739\":1,\"755\":1,\"805\":1,\"806\":2,\"817\":1,\"886\":10,\"1054\":1,\"1203\":1,\"1220\":1,\"1765\":1,\"2767\":1}}],[\"是分开操作的\",{\"1\":{\"118\":1}}],[\"也具有新的计算特质\",{\"1\":{\"2180\":1}}],[\"也支持事务处理\",{\"1\":{\"1883\":1}}],[\"也支持一元操作符\",{\"1\":{\"601\":1}}],[\"也继承了整个算法结构\",{\"1\":{\"1829\":1}}],[\"也增加了用户对策略对象的使用成本\",{\"1\":{\"1788\":1}}],[\"也提高了策略的复用率\",{\"1\":{\"1787\":1}}],[\"也类似于单例模式的概念\",{\"1\":{\"1767\":1}}],[\"也方便进行类型检查和静态分析\",{\"1\":{\"1747\":1}}],[\"也便进入\",{\"1\":{\"1729\":1}}],[\"也便于数据的传输\",{\"1\":{\"414\":1}}],[\"也处于\",{\"1\":{\"1726\":1}}],[\"也正是因为主线程还是需要让出来\",{\"1\":{\"1649\":1}}],[\"也引用了对象\",{\"1\":{\"1646\":1}}],[\"也想提交到上一个\",{\"1\":{\"1600\":1}}],[\"也被称作全局超级类型\",{\"1\":{\"1417\":1}}],[\"也就会造成大量无用内存占用\",{\"1\":{\"1646\":1}}],[\"也就变成了该变量引用了一个数组\",{\"1\":{\"1644\":1}}],[\"也就意味着这些属性不能被重新赋值\",{\"1\":{\"1374\":1}}],[\"也就是一个受控污染级别的环境\",{\"1\":{\"1906\":1}}],[\"也就是通信双方是平等的\",{\"1\":{\"1737\":1}}],[\"也就是<\",{\"1\":{\"1707\":1}}],[\"也就是html\",{\"1\":{\"1702\":1}}],[\"也就是全部标记完毕接下来要进行清理了\",{\"1\":{\"1650\":1}}],[\"也就是无可达\",{\"1\":{\"1650\":1}}],[\"也就是无用的对象\",{\"1\":{\"1644\":1}}],[\"也就是同时的意思\",{\"1\":{\"1649\":1}}],[\"也就是数据清理掉\",{\"1\":{\"1648\":1}}],[\"也就是在没有采用增量算法之前\",{\"1\":{\"1650\":1}}],[\"也就是在变成垃圾的那一刻就会被回收\",{\"1\":{\"1646\":1}}],[\"也就是在用户态执行\",{\"1\":{\"589\":1}}],[\"也就是非活动对象\",{\"1\":{\"1646\":1}}],[\"也就是第11\",{\"1\":{\"1637\":1}}],[\"也就是第四行的\",{\"1\":{\"578\":1}}],[\"也就是解除本地仓库和远程仓库的关系\",{\"1\":{\"1608\":1}}],[\"也就是vue实例上面\",{\"1\":{\"1533\":1}}],[\"也就是可以匹配任意内容\",{\"1\":{\"1088\":1}}],[\"也就是刚\",{\"1\":{\"967\":1}}],[\"也就是前端\",{\"1\":{\"864\":1}}],[\"也就是多个域名可能指向同一个\",{\"1\":{\"855\":1}}],[\"也就是实现的浅拷贝的功能差不多\",{\"1\":{\"756\":1}}],[\"也就是最近添加的项先被删除\",{\"1\":{\"691\":1}}],[\"也就是存在时\",{\"1\":{\"624\":1}}],[\"也就是反码加\",{\"1\":{\"606\":1}}],[\"也就是只会返回第一次匹配成功的结果\",{\"1\":{\"537\":1}}],[\"也就是\",{\"1\":{\"482\":1,\"1040\":3}}],[\"也就是将\",{\"1\":{\"389\":1}}],[\"也就是将对象的proto属性指向构造函数的\",{\"1\":{\"262\":1}}],[\"也就是为这个对象添加属性和方法\",{\"1\":{\"262\":1}}],[\"也就是说一个事物执行之前和执行之后都必须处于一致性状态\",{\"1\":{\"2258\":1}}],[\"也就是说udp提供了单播\",{\"1\":{\"1712\":1}}],[\"也就是说我们不能把\",{\"1\":{\"1431\":1}}],[\"也就是说使用大写字母\",{\"1\":{\"1363\":1}}],[\"也就是说这个变量在定义之前是不能被使用的\",{\"1\":{\"898\":1}}],[\"也就是说两项必须严格相等\",{\"1\":{\"708\":1}}],[\"也就是说构造函数每执行一次就会创建一个新的\",{\"1\":{\"478\":1}}],[\"也就是说在执行微任务过程中产生的新的微任务并不会推迟到下一个循环中执行\",{\"1\":{\"376\":1}}],[\"也就是说浏览器同⼀时间只能做⼀个事情\",{\"1\":{\"351\":1}}],[\"也就是说每个执行上下文都有一个\",{\"1\":{\"349\":1}}],[\"也就是说当\",{\"1\":{\"323\":1,\"576\":1}}],[\"也就是说不是字符串的\",{\"1\":{\"295\":1,\"882\":1}}],[\"也就是说\",{\"1\":{\"124\":1,\"241\":1,\"272\":1,\"354\":1,\"360\":2,\"371\":2,\"464\":1,\"528\":1,\"529\":1,\"555\":1,\"687\":1,\"702\":1,\"725\":1,\"803\":1,\"900\":1,\"1649\":1,\"1664\":1,\"1712\":1,\"1737\":1,\"1762\":1,\"2078\":1}}],[\"也常用于对\",{\"1\":{\"1338\":1}}],[\"也只会保留最后一次的结果\",{\"1\":{\"1235\":1}}],[\"也重新渲染\",{\"1\":{\"1210\":1}}],[\"也包括自定义变量\",{\"1\":{\"1097\":1}}],[\"也称作函数作用域\",{\"1\":{\"897\":1}}],[\"也没有返回值\",{\"1\":{\"872\":1}}],[\"也有出度的结点\",{\"1\":{\"2246\":1}}],[\"也有一定几率看到\",{\"1\":{\"1255\":1}}],[\"也有可能是\",{\"1\":{\"817\":1}}],[\"也有实际的用处\",{\"1\":{\"562\":1}}],[\"也适用于数字\",{\"1\":{\"805\":1}}],[\"也同样解决了扁平化的问题\",{\"1\":{\"736\":1}}],[\"也允许按照定义的断言函数搜索数组\",{\"1\":{\"709\":1}}],[\"也非常符合人的直觉\",{\"1\":{\"569\":1}}],[\"也会清理\",{\"1\":{\"1650\":1}}],[\"也会导致空闲内存空间是不连续的\",{\"1\":{\"1646\":1}}],[\"也会先使用旧值渲染\",{\"1\":{\"1234\":1}}],[\"也会将压缩文件中的其他文件解压缩到目录中\",{\"1\":{\"1018\":1}}],[\"也会将数组元素先转化为字符串在进行比较\",{\"1\":{\"698\":1}}],[\"也会发生类型转换\",{\"1\":{\"807\":1}}],[\"也会随之变化\",{\"1\":{\"725\":1}}],[\"也会引发暂时性死区\",{\"1\":{\"511\":1}}],[\"也会是一样的结果\",{\"1\":{\"507\":1}}],[\"也会返回\",{\"1\":{\"482\":1}}],[\"也能描述css以及js语法\",{\"1\":{\"1549\":1}}],[\"也能实现这样的效果\",{\"1\":{\"739\":1}}],[\"也能识别\",{\"1\":{\"663\":1}}],[\"也能通过调用\",{\"1\":{\"588\":1}}],[\"也能像其他语言一样拥有块级作用域\",{\"1\":{\"507\":1}}],[\"也能阻止元素同事件类型的其它监听器被触发\",{\"1\":{\"240\":1}}],[\"也解决了引用数据\",{\"1\":{\"494\":1}}],[\"也天生自带一个属性proto\",{\"1\":{\"481\":1}}],[\"也无法访问\",{\"1\":{\"431\":1}}],[\"也需要执行\",{\"1\":{\"376\":1}}],[\"也是可以的\",{\"1\":{\"1627\":1}}],[\"也是表示原始类型和非原始类型的集合\",{\"1\":{\"1431\":1}}],[\"也是任何类型的子类型\",{\"1\":{\"1416\":1}}],[\"也是一组固定地作用于构件层次机制的策略\",{\"1\":{\"2020\":1}}],[\"也是一样把服务器的\",{\"1\":{\"1726\":1}}],[\"也是一样的\",{\"1\":{\"1363\":1}}],[\"也是一个构造函数\",{\"1\":{\"1559\":1}}],[\"也是一个异步方法\",{\"1\":{\"1542\":1}}],[\"也是一种类数组\",{\"1\":{\"725\":1}}],[\"也是右按钮点击的时候\",{\"1\":{\"1244\":1}}],[\"也是左按钮和右按钮点击的时候\",{\"1\":{\"1244\":1}}],[\"也是有编译阶段的\",{\"1\":{\"895\":1}}],[\"也是接受一个对象作为参数\",{\"1\":{\"883\":1}}],[\"也是标准的\",{\"1\":{\"657\":1}}],[\"也是二元操作符\",{\"1\":{\"603\":1}}],[\"也是配置它的地方\",{\"1\":{\"462\":1}}],[\"也是实现模块化的一种方案\",{\"1\":{\"444\":1}}],[\"也是\",{\"1\":{\"431\":1,\"664\":1,\"1267\":1,\"1273\":1}}],[\"也是就是说\",{\"1\":{\"376\":1}}],[\"也是指向\",{\"1\":{\"350\":1}}],[\"也是键值队的集合\",{\"1\":{\"272\":1}}],[\"也实现了\",{\"1\":{\"272\":1}}],[\"也不知道被请求的操作是什么\",{\"1\":{\"1826\":1}}],[\"也不发送数据\",{\"1\":{\"1727\":1}}],[\"也不会对发送速率进行调整\",{\"1\":{\"1712\":1}}],[\"也不会被释放\",{\"1\":{\"1653\":1}}],[\"也不拆分\",{\"1\":{\"1712\":1}}],[\"也不能赋给\",{\"1\":{\"1431\":1}}],[\"也不可以赋值给\",{\"1\":{\"1416\":1}}],[\"也不例外\",{\"1\":{\"578\":1}}],[\"也不想锚点定位\",{\"1\":{\"239\":1}}],[\"也不是修复bug\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"也可能是\",{\"1\":{\"1443\":1}}],[\"也可能是一个\",{\"1\":{\"201\":1}}],[\"也可设置\",{\"1\":{\"864\":2}}],[\"也可以完全不传参数\",{\"1\":{\"2788\":1}}],[\"也可以返回新url以覆盖加载行为\",{\"1\":{\"2477\":1}}],[\"也可以包括其他机器学习算法\",{\"1\":{\"2180\":1}}],[\"也可以多主多从\",{\"1\":{\"2080\":1}}],[\"也可以按顺序访问其中的每个元素\",{\"1\":{\"1832\":1}}],[\"也可以减小垃圾回收机制\",{\"1\":{\"1769\":1}}],[\"也可以创建一个单例的状态存储对象\",{\"1\":{\"1764\":1}}],[\"也可以发送二进制数据\",{\"1\":{\"1736\":1}}],[\"也可以缓存一段时间以便一次发送更多的数据段\",{\"1\":{\"1713\":1}}],[\"也可以嵌入到任何\",{\"1\":{\"1641\":1}}],[\"也可以查看某个日期之后的日志\",{\"1\":{\"1626\":1}}],[\"也可以使用拥塞避免算法\",{\"1\":{\"1719\":1}}],[\"也可以使用以下命令来删除远程仓库的指定标签\",{\"1\":{\"1621\":1}}],[\"也可以使用以下命令来回退到任意版本\",{\"1\":{\"1614\":1}}],[\"也可以使用对象解构\",{\"1\":{\"848\":1}}],[\"也可以继续工作而不会丢失功能\",{\"1\":{\"1581\":1}}],[\"也可以赋值给任何类型\",{\"1\":{\"1416\":1}}],[\"也可以用于通过将meshdistancematerial实例指定给object3d\",{\"1\":{\"2597\":1}}],[\"也可以用于数据类型的转换\",{\"1\":{\"605\":1}}],[\"也可以用来重开机\",{\"1\":{\"918\":1}}],[\"也可以实现一维对象的深拷贝\",{\"1\":{\"755\":1}}],[\"也可以得到想要的结果\",{\"1\":{\"736\":1}}],[\"也可以是其他dns服务器的地址\",{\"1\":{\"2211\":1}}],[\"也可以是大型的复杂工厂\",{\"1\":{\"1752\":1}}],[\"也可以是多个路径\",{\"1\":{\"1006\":1}}],[\"也可以是对象的属性\",{\"1\":{\"718\":1,\"881\":1}}],[\"也可以是数组对象\",{\"1\":{\"701\":1}}],[\"也可以是需要检索的\",{\"1\":{\"537\":1}}],[\"也可以省略\",{\"1\":{\"677\":1}}],[\"也可以和\",{\"1\":{\"591\":1}}],[\"也可以从\",{\"1\":{\"589\":1}}],[\"也可以直接默认导出\",{\"1\":{\"469\":1}}],[\"也可以异步加载\",{\"1\":{\"464\":1}}],[\"也可以调用\",{\"1\":{\"464\":1}}],[\"也可以在服务器端拒绝请求且不想说明理由时使\",{\"1\":{\"817\":1}}],[\"也可以在逻辑上下文中隐式完成\",{\"1\":{\"789\":1}}],[\"也可以在\",{\"1\":{\"462\":1}}],[\"也可以在wrap元素中添加border\",{\"1\":{\"151\":1}}],[\"也可以转换成\",{\"1\":{\"387\":1}}],[\"也可以说这\",{\"1\":{\"376\":1}}],[\"也可以进行运算\",{\"1\":{\"255\":1}}],[\"也可以定义多行字符串\",{\"1\":{\"255\":1}}],[\"也可以通过将autoclearcolor\",{\"1\":{\"2836\":1}}],[\"也可以通过这种方式来设置一个数组元素的值\",{\"1\":{\"680\":1}}],[\"也可以通过\",{\"1\":{\"239\":1}}],[\"也可以选择使用\",{\"1\":{\"226\":1}}],[\"也可以设置为其他值\",{\"1\":{\"206\":1}}],[\"本文我们就来盘点一下\",{\"1\":{\"1279\":1}}],[\"本文将按照异步编程的出现时间来归纳整理\",{\"1\":{\"554\":1}}],[\"本文将介绍其中的六个\",{\"1\":{\"444\":1}}],[\"本参数仅在\",{\"1\":{\"1018\":2}}],[\"本例若不加\",{\"1\":{\"976\":1}}],[\"本质没有改变\",{\"1\":{\"901\":1}}],[\"本质上是一种应用\",{\"1\":{\"2054\":1}}],[\"本质上是同步的\",{\"1\":{\"450\":1}}],[\"本质上还是浏览器发送请求\",{\"1\":{\"1737\":1}}],[\"本质上\",{\"1\":{\"1521\":1}}],[\"本质上与回调函数中的成功回调和失败回调没有差异\",{\"1\":{\"565\":1}}],[\"本地域名服务器向根域名服务器查询通常采用迭代查询\",{\"1\":{\"2211\":1}}],[\"本地\",{\"1\":{\"1687\":1}}],[\"本地的修改并不会消失\",{\"1\":{\"1614\":1}}],[\"本地级别\",{\"1\":{\"1586\":1}}],[\"本地看到的工作目录\",{\"1\":{\"1584\":1}}],[\"本地中端欢迎信息etc\",{\"1\":{\"1125\":1}}],[\"本地有个\",{\"1\":{\"822\":1}}],[\"本地有一个\",{\"1\":{\"821\":1}}],[\"本地仓库\",{\"0\":{\"7\":1,\"50\":1}}],[\"本身不独立存储\",{\"1\":{\"2225\":1}}],[\"本身不直接支持\",{\"1\":{\"1275\":1}}],[\"本身之外\",{\"1\":{\"1416\":1}}],[\"本身也有开销\",{\"1\":{\"1269\":1}}],[\"本身这几个作用域的访问权限\",{\"1\":{\"901\":1}}],[\"本身的原始顺序执行并没有失败\",{\"1\":{\"578\":1}}],[\"本身就是一个黑盒\",{\"1\":{\"397\":1}}],[\"本来要\",{\"1\":{\"1649\":1}}],[\"本来只有超级管理员可以使用的命令赋予普通用户来使用\",{\"1\":{\"1049\":1}}],[\"本来\",{\"1\":{\"408\":1}}],[\"本节的内容为\",{\"1\":{\"124\":1}}],[\"提倡\",{\"1\":{\"1904\":1}}],[\"提升单项业务的运行规范性和效率\",{\"1\":{\"1889\":1}}],[\"提升组织的竞争能力\",{\"1\":{\"1874\":1}}],[\"提货发货单等\",{\"1\":{\"1879\":1}}],[\"提出具体的计划方案\",{\"1\":{\"1847\":1}}],[\"提高可用性\",{\"1\":{\"2212\":1}}],[\"提高可靠性\",{\"1\":{\"2199\":1}}],[\"提高cpu数据输入输出的速率\",{\"1\":{\"2141\":1}}],[\"提高系统的可用性\",{\"1\":{\"2229\":1}}],[\"提高系统的可伸缩性\",{\"1\":{\"2039\":1}}],[\"提高系统流畅度\",{\"1\":{\"1769\":1}}],[\"提高应用的可重用性\",{\"1\":{\"2031\":1}}],[\"提高客户的忠诚度\",{\"1\":{\"1878\":1}}],[\"提高客户满意度\",{\"1\":{\"1878\":1}}],[\"提高工作效率\",{\"1\":{\"1878\":1}}],[\"提高了吞吐量\",{\"1\":{\"2214\":1}}],[\"提高了可靠性和设计生产效率\",{\"1\":{\"2179\":1}}],[\"提高了系统的复杂程度\",{\"1\":{\"1820\":1}}],[\"提高了代码的可复用性\",{\"1\":{\"1812\":1}}],[\"提高性能\",{\"0\":{\"502\":1},\"1\":{\"236\":1,\"1769\":1}}],[\"提示用户代理怎样的配置更适用于当前webgl环境\",{\"1\":{\"2788\":1}}],[\"提示\",{\"1\":{\"1443\":1}}],[\"提示信息\",{\"1\":{\"1106\":1}}],[\"提示使用者\",{\"1\":{\"986\":1}}],[\"提示符\",{\"1\":{\"915\":1}}],[\"提供虚拟化的资源\",{\"1\":{\"2051\":1}}],[\"提供软件服务\",{\"1\":{\"2051\":1}}],[\"提供对呈现器的webxr相关接口的访问\",{\"1\":{\"2810\":1}}],[\"提供对所有层次云计算服务的管理功能\",{\"1\":{\"2051\":1}}],[\"提供对应用构件的管理\",{\"1\":{\"2025\":1}}],[\"提供对应接口处理请求\",{\"1\":{\"1826\":1}}],[\"提供日志和监控功能\",{\"1\":{\"2040\":1}}],[\"提供服务注册和命名的管理功能\",{\"1\":{\"2040\":1}}],[\"提供位置透明性的消息路由和寻址服务\",{\"1\":{\"2040\":1}}],[\"提供远程调试接口\",{\"1\":{\"2009\":1}}],[\"提供灵活的交互\",{\"1\":{\"1928\":1}}],[\"提供\",{\"1\":{\"1900\":1}}],[\"提供连续交付以达到期望的系统\",{\"1\":{\"1855\":1}}],[\"提供统一的接口\",{\"1\":{\"1832\":1}}],[\"提供⼀个替身对象来控制这个对象的访问\",{\"1\":{\"1793\":1}}],[\"提供的\",{\"1\":{\"1764\":1}}],[\"提供的蓝牙\",{\"1\":{\"124\":1}}],[\"提供一个全局可访问的接口用于访问该实例\",{\"1\":{\"1762\":1}}],[\"提供一个创建一系列相关或相互依赖对象的接口\",{\"1\":{\"1752\":1}}],[\"提供一种创建复杂对象的方式\",{\"1\":{\"1758\":1}}],[\"提供不可靠交付\",{\"1\":{\"1716\":1}}],[\"提供全双工通信\",{\"1\":{\"1713\":1}}],[\"提供拥塞控制\",{\"1\":{\"1713\":1}}],[\"提供者\",{\"0\":{\"1228\":1},\"1\":{\"1228\":1}}],[\"提供了许多\",{\"1\":{\"2743\":1}}],[\"提供了更高级的基于物理的渲染属性\",{\"1\":{\"2737\":1}}],[\"提供了查找\",{\"1\":{\"1071\":1}}],[\"提供了两类搜索数组的方法\",{\"1\":{\"707\":1}}],[\"提供了两个方法\",{\"1\":{\"683\":1}}],[\"提供了在不阻塞主线程的情况下使用同步代码实现异步访问资源的能力\",{\"1\":{\"594\":1}}],[\"提供了统一的\",{\"1\":{\"562\":1}}],[\"提供了一些\",{\"1\":{\"386\":1}}],[\"提供了直接读取和写入剪贴板内容的访问权限\",{\"1\":{\"344\":1}}],[\"提供了将语音合成和语音识别添加到\",{\"1\":{\"340\":1}}],[\"提供了\",{\"1\":{\"272\":1,\"307\":1}}],[\"提供了新的数据结构\",{\"1\":{\"271\":1}}],[\"提取内容并将它们设置到\",{\"1\":{\"340\":1}}],[\"提取第一三个值\",{\"1\":{\"252\":1}}],[\"提取后两个值\",{\"1\":{\"252\":1}}],[\"提取前两个值\",{\"1\":{\"252\":1}}],[\"提交历史和\",{\"1\":{\"1614\":1}}],[\"提交缓存\",{\"1\":{\"1614\":2}}],[\"提交暂存\",{\"0\":{\"1600\":1}}],[\"提交都会使用该用户信息\",{\"1\":{\"1586\":1}}],[\"提交速度更快\",{\"1\":{\"1581\":1}}],[\"提交\",{\"1\":{\"94\":1}}],[\"提交的\",{\"1\":{\"30\":1,\"73\":1}}],[\"提交文件\",{\"0\":{\"9\":1,\"52\":1}}],[\"从它发出的光线都是平行的\",{\"1\":{\"2868\":1}}],[\"从source复制\",{\"1\":{\"2859\":1}}],[\"从视图的底部到顶部\",{\"1\":{\"2575\":1}}],[\"从视图中消失\",{\"1\":{\"178\":1}}],[\"从内存中销毁对象\",{\"1\":{\"2307\":1}}],[\"从网络\",{\"1\":{\"2201\":1}}],[\"从功能上来对总线进行划分数据总线\",{\"1\":{\"2184\":1}}],[\"从广义上讲只要能够运行人工智能算法的芯片都叫做ai芯片\",{\"1\":{\"2180\":1}}],[\"从处理器分类看\",{\"1\":{\"2179\":1}}],[\"从传统意义上讲\",{\"1\":{\"2176\":1}}],[\"从计算机角度看\",{\"1\":{\"2176\":1}}],[\"从库执行中继日志事件\",{\"1\":{\"2080\":1}}],[\"从库打开i\",{\"1\":{\"2080\":1}}],[\"从库做读操作\",{\"1\":{\"2080\":1}}],[\"从业务进程中分离\",{\"1\":{\"2054\":1}}],[\"从不同的视角来检查\",{\"1\":{\"1974\":1}}],[\"从不输出给出文件名的首部\",{\"1\":{\"992\":1}}],[\"从座位管理核心的财务\",{\"1\":{\"1873\":1}}],[\"从系统观念出发\",{\"1\":{\"1843\":1}}],[\"从整体出发\",{\"1\":{\"1843\":1}}],[\"从缓存中获取结果\",{\"1\":{\"1798\":2}}],[\"从性能的角度来看\",{\"1\":{\"1737\":1}}],[\"从远程仓库抓取与拉取\",{\"0\":{\"1609\":1}}],[\"从尾部开始比较\",{\"1\":{\"1478\":1}}],[\"从类型兼容性上看\",{\"1\":{\"1430\":1}}],[\"从参数位置移动到返回值位置\",{\"1\":{\"1377\":1}}],[\"从某个类型中挑出一些属性出来\",{\"1\":{\"1375\":1}}],[\"从本质上说\",{\"1\":{\"1211\":1}}],[\"从光标所在的位置删除到行首\",{\"1\":{\"1082\":1}}],[\"从光标所在行的最后一个字符处开始输入\",{\"1\":{\"1065\":1}}],[\"从目前光标所在的下一个字符处开始输入\",{\"1\":{\"1065\":1}}],[\"从目前光标所在处输入\",{\"1\":{\"1065\":1}}],[\"从压缩文件\",{\"1\":{\"1019\":1}}],[\"从压缩文件内删除指定的文件\",{\"1\":{\"1018\":1}}],[\"从指定的文件开始比较\",{\"1\":{\"1009\":1}}],[\"从哪边连上来的\",{\"1\":{\"929\":1}}],[\"从直观上来看\",{\"1\":{\"900\":1}}],[\"从左到右\",{\"1\":{\"877\":1}}],[\"从两者对比来看\",{\"1\":{\"819\":1}}],[\"从概念上讲\",{\"1\":{\"804\":1}}],[\"从概念的字面意义上说\",{\"1\":{\"500\":1}}],[\"从执行的结果中可以发现\",{\"1\":{\"737\":1}}],[\"从执行上下文的变量环境中可以看出\",{\"1\":{\"507\":1}}],[\"从打印结果可以看出\",{\"1\":{\"731\":1}}],[\"从数据传输的方式划分并行总线和串行总线\",{\"1\":{\"2184\":1}}],[\"从数据类型上说它是一个对象\",{\"1\":{\"731\":1}}],[\"从数组中添加\",{\"1\":{\"703\":1}}],[\"从这个例子中也可以看出\",{\"1\":{\"728\":1}}],[\"从上面示例可以看到\",{\"1\":{\"1431\":1}}],[\"从上面参数可知\",{\"1\":{\"703\":1}}],[\"从上面的学习可以看出来\",{\"1\":{\"1237\":1}}],[\"从上面的递归函数可以看出\",{\"1\":{\"736\":1}}],[\"从上面的例子可以看出\",{\"1\":{\"578\":1}}],[\"从上面的这些代码中可以看到\",{\"1\":{\"569\":1}}],[\"从上面的宏任务和微任务的工作流程中\",{\"1\":{\"376\":1}}],[\"从严格意义上来讲\",{\"1\":{\"657\":1}}],[\"从字面上来看\",{\"1\":{\"594\":1}}],[\"从语法上说\",{\"1\":{\"562\":1}}],[\"从语法上看\",{\"1\":{\"286\":1,\"678\":1}}],[\"从该参数指定的地方分割\",{\"1\":{\"526\":1}}],[\"从一系列的点创建一条平滑的三维样条曲线\",{\"1\":{\"2411\":1}}],[\"从一组根对象开始\",{\"1\":{\"1650\":1}}],[\"从一组根元素开始\",{\"1\":{\"1648\":1}}],[\"从一开始就形成了封闭作用域\",{\"1\":{\"511\":1}}],[\"从一个点向各个方向发射的光源\",{\"1\":{\"2876\":1}}],[\"从一个字符串或者二进制数据编码一个\",{\"1\":{\"414\":1}}],[\"从一个链接爬到另一个链接\",{\"1\":{\"217\":1}}],[\"从模块中导出的内容可供导入模块的任何地方使用\",{\"1\":{\"443\":1}}],[\"从长远来看\",{\"1\":{\"442\":1}}],[\"从第一次提交到最近一次提交\",{\"1\":{\"1637\":1}}],[\"从第一行到最后一行寻找word1字符串\",{\"1\":{\"1062\":2}}],[\"从第\",{\"1\":{\"987\":1,\"993\":1}}],[\"从第num行开始显示\",{\"1\":{\"986\":1}}],[\"从第三个入参位置开始往后\",{\"1\":{\"903\":1}}],[\"从第4个字节读取一个16位无符号整数\",{\"1\":{\"411\":1}}],[\"从第2个字节读取一个16位无符号整数\",{\"1\":{\"411\":1}}],[\"从第1个字节读取一个8位无符号整数\",{\"1\":{\"411\":1}}],[\"从名字中可以看出\",{\"1\":{\"375\":1}}],[\"从名字可以看出\",{\"1\":{\"374\":1}}],[\"从剪贴板读取内容\",{\"1\":{\"344\":1}}],[\"从索引\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"从索引数据库中找出所有包含搜索词的网页\",{\"1\":{\"217\":1}}],[\"从输出中我们可以看到\",{\"1\":{\"241\":1}}],[\"从待抓取url队列中取出待抓取在url\",{\"1\":{\"217\":1}}],[\"从图中\",{\"1\":{\"217\":1}}],[\"从而保证数据的完备性\",{\"1\":{\"2229\":1}}],[\"从而保证下一次增量\",{\"1\":{\"1650\":1}}],[\"从而支持两种业务的共存\",{\"1\":{\"2215\":1}}],[\"从而梳理出哪些必须保护\",{\"1\":{\"2075\":1}}],[\"从而隐藏物理资源的复杂性\",{\"1\":{\"2051\":1}}],[\"从而计算出所有计划活动理论上的最早开始与完成日期\",{\"1\":{\"1955\":1}}],[\"从而加速社会各个领域的共同发展以推进信息社会的过程\",{\"1\":{\"1871\":1}}],[\"从而加快开发流程\",{\"1\":{\"442\":1}}],[\"从而将请求的发送者和接收者解耦\",{\"1\":{\"1837\":1}}],[\"从而屏蔽来自全局作用域的特殊部分\",{\"1\":{\"1817\":1}}],[\"从而降低组件之间的耦合度\",{\"1\":{\"1812\":1}}],[\"从而提升系统的性能和响应速度\",{\"1\":{\"1796\":1}}],[\"从而提高页面的响应速度和用户体验\",{\"1\":{\"1794\":1}}],[\"从而提高i\",{\"1\":{\"1153\":1}}],[\"从而创建不同簇的产品\",{\"1\":{\"1755\":1}}],[\"从而导致服务器\",{\"1\":{\"1729\":1}}],[\"从而导致回收执行效率不高\",{\"1\":{\"1648\":1}}],[\"从而减少\",{\"1\":{\"1650\":1}}],[\"从而减少不必要的重复渲染\",{\"1\":{\"1199\":1}}],[\"从而整合空闲空间\",{\"1\":{\"1641\":1}}],[\"从而实现新的功能或者扩展目标的功能\",{\"1\":{\"1793\":1}}],[\"从而实现依赖收集\",{\"1\":{\"1561\":1}}],[\"从而实现调用\",{\"1\":{\"732\":1}}],[\"从而告诉\",{\"1\":{\"1448\":1}}],[\"从而得到初始状态\",{\"1\":{\"1274\":1}}],[\"从而优化性能\",{\"1\":{\"1264\":1}}],[\"从而影响应用性能\",{\"1\":{\"1224\":1}}],[\"从而避免失效时大量的并发请求落到底层存储系统上\",{\"1\":{\"2071\":1}}],[\"从而避免了为每一个服务建设一个专用的物理网络\",{\"1\":{\"2205\":1}}],[\"从而避免了对底层存储系统的查询压力\",{\"1\":{\"2072\":1}}],[\"从而避免了请求的发送者与多个接收者直接的耦合关系\",{\"1\":{\"1835\":1}}],[\"从而避免了因函数引用改变导致的不必要的重新渲染\",{\"1\":{\"1208\":1}}],[\"从而避免重复定义和管理的问题\",{\"1\":{\"1767\":1}}],[\"从而避免不必要的闪烁或布局跳动\",{\"1\":{\"1255\":1}}],[\"从而避免不必要的副作用的执行\",{\"1\":{\"1212\":1}}],[\"从而解决跨域问题\",{\"1\":{\"860\":1}}],[\"从而可以在访问目标对象之前或之后执行一些额外的逻辑\",{\"1\":{\"1796\":1}}],[\"从而可以拥有从不同的域拿到数据的能力\",{\"1\":{\"859\":1}}],[\"从而可以读懂网页的内容\",{\"1\":{\"213\":1}}],[\"从而阻止以这种方式使用它\",{\"1\":{\"803\":1}}],[\"从而简化上面方法的代码\",{\"1\":{\"736\":1}}],[\"从而来减少重复的逻辑代码\",{\"1\":{\"590\":1}}],[\"从而形成符合你设想的执行顺序\",{\"1\":{\"588\":1}}],[\"从而控制函数执行进度\",{\"1\":{\"588\":1}}],[\"从而使功耗和成本下降\",{\"1\":{\"2179\":1}}],[\"从而使\",{\"1\":{\"507\":1}}],[\"从而防止意外的创建全局变量\",{\"1\":{\"429\":1}}],[\"从而返回想要得到的值\",{\"1\":{\"286\":1,\"678\":1}}],[\"从而完成不同的事\",{\"1\":{\"236\":1}}],[\"从而进入下一个循环\",{\"1\":{\"217\":1}}],[\"从而让人和机器都能快速理解网页内容\",{\"1\":{\"213\":1}}],[\"从而\",{\"1\":{\"206\":1}}],[\"从文档可以看出\",{\"1\":{\"125\":1}}],[\"从你的\",{\"1\":{\"124\":1}}],[\"从\",{\"1\":{\"124\":1,\"289\":1,\"341\":1,\"400\":1,\"474\":1,\"482\":1,\"565\":2,\"1454\":1,\"1533\":1,\"1584\":1,\"2741\":2}}],[\"该指令必须放在循环的正上方\",{\"1\":{\"2741\":1}}],[\"该指针指向堆中该实体的起始地址\",{\"1\":{\"651\":1}}],[\"该材质提供了比meshlambertmaterial\",{\"1\":{\"2717\":1}}],[\"该材质可以模拟具有镜面高光的光泽表面\",{\"1\":{\"2613\":1}}],[\"该材质使用非物理的blinn\",{\"1\":{\"2613\":1}}],[\"该材质使用基于非物理的lambertian模型来计算反射率\",{\"1\":{\"2593\":1}}],[\"该点与\",{\"1\":{\"2342\":1}}],[\"该过程通常在一次处理中完成\",{\"1\":{\"2311\":1}}],[\"该操作一般在一次处理中完成\",{\"1\":{\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2323\":1}}],[\"该操作会更新已有\",{\"1\":{\"2303\":1,\"2304\":1}}],[\"该操作符可以用于获取某种类型的所有键\",{\"1\":{\"1366\":1}}],[\"该\",{\"1\":{\"2288\":1}}],[\"该透明性提供数据到局部数据库的映像\",{\"1\":{\"2232\":1}}],[\"该模型同blp模型类似\",{\"1\":{\"2118\":1}}],[\"该活动的机动时间\",{\"1\":{\"1955\":1}}],[\"该协议允许由服务器主动的向客户端推送信息\",{\"1\":{\"1737\":1}}],[\"该⽅法不适⽤于⽹络较差的情况\",{\"1\":{\"1730\":1}}],[\"该⽅法⽐较适⽤于每次发送的数据都⽐较⼤\",{\"1\":{\"1730\":1}}],[\"该状态会持续\",{\"1\":{\"1729\":1}}],[\"该状态码表示请求的资源已被分配了新的\",{\"1\":{\"817\":1}}],[\"该应答中也会包含自身的数据通讯初始序号\",{\"1\":{\"1727\":1}}],[\"该报文段中包含自身的数据通讯初始序号\",{\"1\":{\"1727\":1}}],[\"该字段用于发现头部信息和数据中的错误\",{\"1\":{\"1712\":1}}],[\"该字符串是通过把\",{\"1\":{\"690\":1}}],[\"该api使用索引来实现对该数据的高性能搜索\",{\"1\":{\"1669\":1}}],[\"该定时器仍会存在\",{\"1\":{\"1653\":1}}],[\"该机制会强制将引用的白色对象改为灰色\",{\"1\":{\"1650\":1}}],[\"该命令也会将其销毁\",{\"1\":{\"1615\":1}}],[\"该命令只是从本地移除远程仓库的记录\",{\"1\":{\"1608\":1}}],[\"该命令允许\",{\"1\":{\"1607\":1}}],[\"该命令回保存所有未提交的更改并恢复到上次提交时存储库的状态\",{\"1\":{\"1601\":1}}],[\"该表达式被执行后\",{\"1\":{\"1464\":1}}],[\"该表达式短路返回值是\",{\"1\":{\"322\":1,\"644\":1}}],[\"该子组件接受一个父组件传递的函数作为\",{\"1\":{\"1209\":1}}],[\"该回调函数中包含需要同步执行的更新逻辑\",{\"1\":{\"1203\":1}}],[\"该目录下存放的是\",{\"1\":{\"913\":1}}],[\"该算法允许我们根据使用对象的上下文来选择应如何转换对象\",{\"1\":{\"804\":1}}],[\"该函数为undefined\",{\"1\":{\"2470\":1,\"2471\":1}}],[\"该函数是未定义的\",{\"1\":{\"2469\":1}}],[\"该函数默认为undefined\",{\"1\":{\"2468\":1}}],[\"该函数用于获取某个对象中指定属性的属性值\",{\"1\":{\"1366\":1}}],[\"该函数接收\",{\"1\":{\"1366\":1}}],[\"该函数会在状态更新完成并重新渲染组件后被调用\",{\"1\":{\"1196\":1}}],[\"该函数库也有提供\",{\"1\":{\"764\":1}}],[\"该函数定义如下\",{\"1\":{\"728\":1}}],[\"该函数的两个参数分别是\",{\"1\":{\"566\":1}}],[\"该运算符可以用于任何类型的数据\",{\"1\":{\"624\":1,\"625\":1}}],[\"该线程只能执行其中某一个协程\",{\"1\":{\"589\":1}}],[\"该怎样做\",{\"1\":{\"578\":1}}],[\"该如何调用呢\",{\"1\":{\"571\":1}}],[\"该值必须大于near\",{\"1\":{\"2533\":1,\"2571\":1}}],[\"该值会自动被分配\",{\"1\":{\"2294\":1}}],[\"该值不应该直接被设置\",{\"1\":{\"2285\":1}}],[\"该值介于\",{\"1\":{\"550\":1}}],[\"该值为\",{\"1\":{\"123\":1}}],[\"该数组的内容依赖于\",{\"1\":{\"536\":1}}],[\"该数组的每一个元素都是一个\",{\"1\":{\"392\":1}}],[\"该参数指定一个字符作为衔接点来连接字符串\",{\"1\":{\"728\":1}}],[\"该参数是数组片断结束处的数组下标\",{\"1\":{\"702\":1}}],[\"该参数可以是具体的值\",{\"1\":{\"701\":1}}],[\"该参数可指定返回的数组的最大长度\",{\"1\":{\"526\":1}}],[\"该参数既可以是函数也可以是对象\",{\"1\":{\"464\":1}}],[\"该作用域的信息就会从栈顶弹出\",{\"1\":{\"510\":1}}],[\"该位置决定了变量的生命周期\",{\"1\":{\"501\":1}}],[\"该路径名是模块文件在项目目录中的位置\",{\"1\":{\"463\":1}}],[\"该标签下的任何\",{\"1\":{\"462\":1}}],[\"该部分成为\",{\"1\":{\"455\":1}}],[\"该对象包含以下字段\",{\"1\":{\"2800\":1}}],[\"该对象的属性定义了渲染器的行为\",{\"1\":{\"2788\":1}}],[\"该对象的引用对象\",{\"1\":{\"1650\":1}}],[\"该对象不应该包括任何函数的引用\",{\"1\":{\"2293\":1}}],[\"该对象有\",{\"1\":{\"588\":1}}],[\"该对象只有在模块脚本运行完才会生成\",{\"1\":{\"451\":1}}],[\"该对象接收几个参数\",{\"1\":{\"118\":1}}],[\"该属性会被明确地赋值\",{\"1\":{\"1448\":1}}],[\"该属性表示的并不是数组元素的数量\",{\"1\":{\"674\":1}}],[\"该属性可以用来获取字符串的长度\",{\"1\":{\"515\":1}}],[\"该属性输出的是值拷贝\",{\"1\":{\"449\":1}}],[\"该属性仅在读取操作完成后才有效\",{\"1\":{\"394\":1}}],[\"该事件在读取\",{\"1\":{\"395\":1}}],[\"该事件在读取操作完成时触发\",{\"1\":{\"395\":1}}],[\"该事件在读取操作发生错误时触发\",{\"1\":{\"395\":1}}],[\"该事件在读取操作被中断时触发\",{\"1\":{\"395\":1}}],[\"该执行完成函数\",{\"1\":{\"374\":1}}],[\"该新特性同样支持在八进制数中使用\",{\"1\":{\"327\":1}}],[\"该特性的主要作用是方便使用\",{\"1\":{\"296\":1}}],[\"该方法设置活跃rendertarget\",{\"1\":{\"2842\":1}}],[\"该方法检查以下扩展\",{\"1\":{\"2798\":1}}],[\"该方法创建一个通用材质\",{\"1\":{\"2635\":1}}],[\"该方法接受的第一个参数是目标对象\",{\"1\":{\"755\":1}}],[\"该方法只会遍历当前对象的属性\",{\"1\":{\"719\":1}}],[\"该方法允许获取对象的键值\",{\"1\":{\"719\":1,\"874\":1}}],[\"该方法遍历数组时候\",{\"1\":{\"718\":1}}],[\"该方法可以让当前的\",{\"1\":{\"2286\":1}}],[\"该方法可以实现浅拷贝\",{\"1\":{\"755\":1}}],[\"该方法可以用于\",{\"1\":{\"755\":1}}],[\"该方法可以用来截取\",{\"1\":{\"400\":1}}],[\"该方法可以进行链式调用\",{\"1\":{\"713\":1}}],[\"该方法按照原始数组元素顺序依次处理元素\",{\"1\":{\"713\":1,\"873\":1}}],[\"该方法还可以进行链式调用\",{\"1\":{\"873\":1}}],[\"该方法还可以有第二个参数\",{\"1\":{\"712\":1,\"872\":1}}],[\"该方法还可以用于数组扁平化\",{\"1\":{\"701\":1}}],[\"该方法没有返回值\",{\"1\":{\"712\":1,\"713\":1}}],[\"该方法和的上面的\",{\"1\":{\"706\":1}}],[\"该方法和indexof\",{\"1\":{\"521\":1}}],[\"该方法会调用\",{\"1\":{\"1520\":1}}],[\"该方法会先执行再判断\",{\"1\":{\"890\":1}}],[\"该方法会对数组中的每一项进行遍历\",{\"1\":{\"715\":1,\"716\":1}}],[\"该方法会改变原始数组\",{\"1\":{\"703\":1}}],[\"该方法会改变原来的数组\",{\"1\":{\"699\":1}}],[\"该方法会改变原数组\",{\"1\":{\"692\":1,\"693\":1,\"695\":1,\"696\":1}}],[\"该方法会在原数组上进行排序\",{\"1\":{\"698\":1}}],[\"该方法会返回指定索引位置字符的\",{\"1\":{\"518\":1}}],[\"该方法会返回一个的数组\",{\"1\":{\"286\":1,\"678\":1}}],[\"该方法会返回一个新的数组\",{\"1\":{\"285\":1,\"312\":1,\"714\":1}}],[\"该方法是\",{\"1\":{\"575\":1}}],[\"该方法是主要用来遍历异步对象\",{\"1\":{\"299\":1,\"891\":1}}],[\"该方法指定字符串中的首个字符是否是数字\",{\"1\":{\"551\":1}}],[\"该方法通常由\",{\"1\":{\"543\":1}}],[\"该方法不仅会遍历当前的对象所有的可枚举属性\",{\"1\":{\"718\":1}}],[\"该方法不会对空数组进行检测\",{\"1\":{\"713\":1}}],[\"该方法不会改变现有的数组\",{\"1\":{\"701\":1}}],[\"该方法不会改变原始数组\",{\"1\":{\"758\":1}}],[\"该方法不会改变原始字符串\",{\"1\":{\"526\":1,\"539\":1}}],[\"该方法不会改变原有字符串\",{\"1\":{\"525\":1}}],[\"该方法不会改变原数组\",{\"1\":{\"289\":1}}],[\"该方法不会影响到原变量\",{\"1\":{\"662\":1}}],[\"该方法不适用于null\",{\"1\":{\"539\":1}}],[\"该方法不执行全局匹配\",{\"1\":{\"537\":1}}],[\"该方法返回一个字符串\",{\"1\":{\"690\":1}}],[\"该方法返回存放匹配结果的数组\",{\"1\":{\"536\":1}}],[\"该方法返回的子串包括开始处的字符\",{\"1\":{\"528\":1,\"530\":1}}],[\"该方法类似\",{\"1\":{\"536\":1}}],[\"该方法的第二个参数是\",{\"1\":{\"877\":1}}],[\"该方法的第二个参数用来绑定参数函数内部的\",{\"1\":{\"873\":1}}],[\"该方法的第一个参数为回调函数\",{\"1\":{\"872\":1,\"873\":1,\"875\":1}}],[\"该方法的第一个参数是一个正则表达式对象\",{\"1\":{\"324\":1}}],[\"该方法的参数是\",{\"1\":{\"582\":1,\"583\":1}}],[\"该方法的参数\",{\"1\":{\"536\":1,\"537\":1}}],[\"该方法的语法如下\",{\"1\":{\"279\":1,\"287\":1,\"522\":1,\"684\":1,\"685\":1}}],[\"该方法相当于\",{\"1\":{\"313\":1}}],[\"该方法也是接收两个参数\",{\"1\":{\"294\":1,\"548\":1}}],[\"该方法如果添加初始值\",{\"1\":{\"284\":1,\"705\":1}}],[\"该方法用来判断当前字符串是否是以指定的子字符串结尾\",{\"1\":{\"281\":1,\"524\":1}}],[\"该方法用于在字符串内检索指定的值\",{\"1\":{\"536\":1}}],[\"该方法用于在字符串中用一些字符替换另一些字符\",{\"1\":{\"535\":1}}],[\"该方法用于把字符串转换为大写\",{\"1\":{\"533\":1}}],[\"该方法用于把字符串转换为小写\",{\"1\":{\"532\":1}}],[\"该方法用于检测字符串是否以指定的子字符串开始\",{\"1\":{\"280\":1,\"523\":1}}],[\"该方法用于判断字符串是否包含指定的子字符串\",{\"1\":{\"279\":1,\"522\":1}}],[\"该方法有两个参数\",{\"1\":{\"279\":1,\"281\":1,\"289\":1,\"293\":1,\"520\":1,\"522\":1,\"524\":1,\"526\":1,\"528\":1,\"529\":1,\"530\":1,\"535\":1,\"547\":1,\"550\":1,\"758\":1,\"759\":1,\"874\":1}}],[\"结点的数据\",{\"1\":{\"2132\":1}}],[\"结束标签\",{\"1\":{\"1704\":1}}],[\"结束标签和文本\",{\"1\":{\"1550\":1}}],[\"结束之后再执行呢\",{\"1\":{\"581\":1}}],[\"结束\",{\"1\":{\"249\":1}}],[\"结构紧凑\",{\"1\":{\"2176\":1}}],[\"结构测试\",{\"1\":{\"1939\":1}}],[\"结构化保护级\",{\"1\":{\"2111\":1}}],[\"结构化设计原则\",{\"0\":{\"1930\":1}}],[\"结构化设计\",{\"0\":{\"1929\":1}}],[\"结构化法\",{\"0\":{\"1858\":1}}],[\"结构图\",{\"1\":{\"1905\":1}}],[\"结构级\",{\"1\":{\"1905\":1}}],[\"结构和状态\",{\"0\":{\"1584\":1}}],[\"结构\",{\"0\":{\"2231\":1},\"1\":{\"636\":1}}],[\"结构才将其视为同一个键\",{\"1\":{\"272\":1}}],[\"结构实现\",{\"1\":{\"272\":1}}],[\"结构提供了\",{\"1\":{\"272\":2}}],[\"结构等\",{\"1\":{\"255\":1}}],[\"结构一层一层往下传\",{\"1\":{\"234\":1}}],[\"结构发生变化时触发\",{\"1\":{\"233\":1}}],[\"结合使用\",{\"1\":{\"1287\":1}}],[\"结合上面这段代码\",{\"1\":{\"727\":1}}],[\"结合律\",{\"1\":{\"610\":1}}],[\"结合第四种中提及的继承方式\",{\"1\":{\"494\":1}}],[\"结合\",{\"0\":{\"590\":1,\"591\":1},\"1\":{\"183\":1,\"1283\":1,\"2582\":1}}],[\"结果将复制到此向量中\",{\"1\":{\"2333\":1,\"2334\":1,\"2341\":1,\"2342\":1}}],[\"结果缓存\",{\"1\":{\"902\":1}}],[\"结果是一样的\",{\"1\":{\"677\":1}}],[\"结果才为\",{\"1\":{\"606\":1,\"607\":1}}],[\"结果和之前的\",{\"1\":{\"596\":1}}],[\"结果为零\",{\"1\":{\"607\":1}}],[\"结果为\",{\"1\":{\"573\":1}}],[\"结果为人类所用\",{\"1\":{\"213\":1}}],[\"结果如下\",{\"1\":{\"455\":1}}],[\"结果却输出了\",{\"1\":{\"365\":1}}],[\"结果数组中的属性值都是对象本身可枚举的属性\",{\"1\":{\"295\":1,\"882\":1}}],[\"结果里有个value值\",{\"1\":{\"123\":1}}],[\"结果\",{\"1\":{\"123\":1,\"285\":2,\"574\":1,\"709\":2,\"713\":3,\"714\":2,\"715\":1,\"716\":1,\"1299\":1,\"1300\":1}}],[\"结尾的域名都可以访问该cookie\",{\"1\":{\"1659\":1}}],[\"结尾是\",{\"1\":{\"20\":1,\"63\":1}}],[\"结尾不用分号\",{\"1\":{\"20\":1,\"63\":1}}],[\"通用化和参数化\",{\"1\":{\"2028\":1}}],[\"通用\",{\"1\":{\"1949\":1}}],[\"通用模块定义\",{\"1\":{\"444\":1}}],[\"通人理\",{\"1\":{\"1852\":1}}],[\"通信管理\",{\"1\":{\"2230\":1}}],[\"通信协议负责规范客户端与远程服务器之间的通信\",{\"1\":{\"2195\":1}}],[\"通信协议和远程服务器\",{\"1\":{\"2195\":1}}],[\"通信协议\",{\"1\":{\"2187\":1}}],[\"通信图\",{\"0\":{\"1916\":1}}],[\"通信高效\",{\"1\":{\"1736\":1}}],[\"通信都不需要建立连接\",{\"1\":{\"1712\":1}}],[\"通知用户它是从哪里\",{\"1\":{\"1602\":1}}],[\"通知渲染watcher去更新\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"通知它去执行某些方法\",{\"1\":{\"1557\":1}}],[\"通配符\",{\"0\":{\"1088\":1}}],[\"通配符匹配多个文件\",{\"1\":{\"1012\":1}}],[\"通俗点说就是\",{\"1\":{\"859\":1}}],[\"通俗来讲\",{\"1\":{\"587\":1,\"900\":1}}],[\"通俗来说\",{\"1\":{\"500\":1}}],[\"通俗理解\",{\"1\":{\"501\":1}}],[\"通俗地讲\",{\"1\":{\"147\":1}}],[\"通过gl\",{\"1\":{\"2764\":1}}],[\"通过设置材质的opacity属性来控制材质透明的程度\",{\"1\":{\"2677\":1}}],[\"通过相对于当前\",{\"1\":{\"2586\":1}}],[\"通过点队列设置该\",{\"1\":{\"2320\":1}}],[\"通过面片法向量的平均值计算每个顶点的法向量\",{\"1\":{\"2306\":1}}],[\"通过该\",{\"1\":{\"2296\":1}}],[\"通过该属性\",{\"1\":{\"473\":1}}],[\"通过自然联接和投影等运算仍能还原到原来的关系模式\",{\"1\":{\"2256\":1}}],[\"通过并行链路提供流量分担\",{\"1\":{\"2212\":1}}],[\"通过网络切片技术在单个独立的物理网络上切分出多个逻辑网络\",{\"1\":{\"2205\":1}}],[\"通过总线复用方式可以减少总线中信号线的数量\",{\"1\":{\"2184\":1}}],[\"通过各指令在程序中所占比例进行计算得到的\",{\"1\":{\"2170\":1}}],[\"通过各自的属性相互引用着\",{\"1\":{\"1646\":1}}],[\"通过加密提供机密性\",{\"1\":{\"2127\":1}}],[\"通过禁止访问提供机密性\",{\"1\":{\"2127\":1}}],[\"通过第三方服务注册中心来满足服务的可发现性\",{\"1\":{\"2056\":1}}],[\"通过日志\",{\"1\":{\"2053\":1}}],[\"通过开放网络提供云计算服务\",{\"1\":{\"2050\":1}}],[\"通过通用的连接件接口对资源进行操作\",{\"1\":{\"2039\":1}}],[\"通过考察这些变更的代价衡量可修改性\",{\"1\":{\"2007\":1}}],[\"通过研究软件架构可能预测软件的质量\",{\"1\":{\"1968\":1}}],[\"通过信息技术开发\",{\"1\":{\"1871\":1}}],[\"通过发布\",{\"1\":{\"1812\":1}}],[\"通过代理对象可以对访问请求进行安全过滤和验证\",{\"1\":{\"1796\":1}}],[\"通过使用单例模式\",{\"1\":{\"1767\":2}}],[\"通过使用抽象工厂模式\",{\"1\":{\"1755\":2}}],[\"通过使用字面量类型组合的联合类型\",{\"1\":{\"1428\":1}}],[\"通过抽象工厂接口和具体工厂类实例化对象\",{\"1\":{\"1752\":1}}],[\"通过工厂基类和具体子类实例化对象\",{\"1\":{\"1752\":1}}],[\"通过工厂模式可以实现面向抽象编程\",{\"1\":{\"1747\":1}}],[\"通过工厂模式\",{\"1\":{\"1747\":1,\"1750\":1}}],[\"通过让客户端不断的进行请求\",{\"1\":{\"1737\":1}}],[\"通过计算让任何尺寸值都减少到三个可能之一\",{\"1\":{\"1707\":1}}],[\"通过javascript的\",{\"1\":{\"1661\":1}}],[\"通过cookie\",{\"1\":{\"1658\":1}}],[\"通过标签可以很方便的了解到标记时的状态\",{\"1\":{\"1616\":1}}],[\"通过ast\",{\"1\":{\"1549\":1}}],[\"通过重写数组原型方法来对数组的七种方法进行拦截\",{\"1\":{\"1535\":1}}],[\"通过new关键字进行实例化\",{\"1\":{\"1484\":1,\"1533\":1}}],[\"通过类型断言这种方式可以告诉编译器\",{\"1\":{\"1443\":1}}],[\"通过对设备的具体物理分布\",{\"1\":{\"2218\":1}}],[\"通过对\",{\"1\":{\"1211\":1}}],[\"通过对比\",{\"1\":{\"391\":1}}],[\"通过useselector直接拿到store中定义的list\",{\"1\":{\"1168\":1}}],[\"通过useselector直接拿到store中定义的value\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"通过usedispatch\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"通过bash调用执行脚本\",{\"1\":{\"1079\":1}}],[\"通过visudo可以由超级用户赋权\",{\"1\":{\"1050\":1}}],[\"通过var声明的变量和通过function声明的函数拥有dontdelete特性\",{\"1\":{\"640\":1}}],[\"通过字符串拼接成新的字符串\",{\"1\":{\"859\":1}}],[\"通过解构赋值\",{\"1\":{\"836\":1}}],[\"通过以下代码就可以获取其中的数据\",{\"1\":{\"821\":1}}],[\"通过异步请求加载后台数据\",{\"1\":{\"812\":1}}],[\"通过将\",{\"1\":{\"739\":1,\"1418\":1}}],[\"通过将代码进行模块化分隔\",{\"1\":{\"442\":1}}],[\"通过借用数组的方法转换为真正的数组\",{\"1\":{\"731\":1}}],[\"通过在数据的始发者和目标接收者之间建立临时的交换路径\",{\"1\":{\"2208\":1}}],[\"通过在程序中包含错误检查代码和错误恢复代码\",{\"1\":{\"2095\":1}}],[\"通过在\",{\"1\":{\"729\":1}}],[\"通过了\",{\"1\":{\"708\":1}}],[\"通过基于\",{\"1\":{\"681\":1}}],[\"通过情况下\",{\"1\":{\"594\":1}}],[\"通过引入文件的方式进行原型挂载需要传入vue\",{\"1\":{\"1533\":1}}],[\"通过引入\",{\"1\":{\"569\":1}}],[\"通过给\",{\"1\":{\"558\":1}}],[\"通过这样改造使用\",{\"1\":{\"903\":1}}],[\"通过这两个方法可以将多维数组直接转换成逗号连接的字符串\",{\"1\":{\"738\":1}}],[\"通过这两者的结合\",{\"1\":{\"510\":1}}],[\"通过这种方式\",{\"1\":{\"578\":1,\"1312\":1}}],[\"通过这个示例\",{\"1\":{\"1416\":1}}],[\"通过这个方式\",{\"1\":{\"1416\":1}}],[\"通过这个方法\",{\"1\":{\"518\":1}}],[\"通过这个url\",{\"1\":{\"413\":1}}],[\"通过上图可知\",{\"1\":{\"509\":1}}],[\"通过上面的命令设置的信息会保存在本地的\",{\"1\":{\"1590\":1}}],[\"通过上面的方式来改造代码\",{\"1\":{\"590\":1}}],[\"通过上面的例子\",{\"1\":{\"467\":1}}],[\"通过上面代码\",{\"1\":{\"490\":1}}],[\"通过上面例子\",{\"1\":{\"284\":1,\"705\":1}}],[\"通过注释我们可以看到\",{\"1\":{\"488\":1}}],[\"通过调用它可以引用其他模块\",{\"1\":{\"464\":1}}],[\"通过它就可以定义和引用模块\",{\"1\":{\"458\":1}}],[\"通过它来导出\",{\"1\":{\"449\":1}}],[\"通过单击按钮\",{\"1\":{\"437\":1}}],[\"通过创建\",{\"1\":{\"436\":1}}],[\"通过另一个对象的无意引用从根保持可访问时\",{\"1\":{\"425\":1}}],[\"通过分配指定长度内容进行分配\",{\"1\":{\"403\":1}}],[\"通过不断循环\",{\"1\":{\"375\":1}}],[\"通过顶层\",{\"1\":{\"334\":1}}],[\"通过postcss\",{\"1\":{\"208\":1}}],[\"通过\",{\"1\":{\"206\":1,\"234\":2,\"286\":1,\"316\":1,\"327\":1,\"360\":2,\"397\":1,\"462\":1,\"465\":1,\"509\":3,\"562\":1,\"678\":1,\"680\":1,\"681\":4,\"723\":1,\"903\":1,\"1016\":1,\"1236\":1,\"1279\":1,\"1370\":1,\"1764\":1,\"2282\":1,\"2286\":1}}],[\"通过媒体查询的方式\",{\"1\":{\"204\":1}}],[\"通过缩放查看显示内容的区域\",{\"1\":{\"201\":1}}],[\"通过脚手架初始化项目\",{\"0\":{\"2\":1,\"45\":1}}],[\"通常与\",{\"1\":{\"2606\":1,\"2708\":1}}],[\"通常又称为基本表或基表\",{\"1\":{\"2225\":1}}],[\"通常包括与硬件相关的底层驱动软件\",{\"1\":{\"2187\":1}}],[\"通常嵌入式处理器的选择还要根据使用场景不同选择不同类型的处理器\",{\"1\":{\"2179\":1}}],[\"通常围绕一些关键的机制\",{\"1\":{\"2020\":1}}],[\"通常以某些具体的变更为基准\",{\"1\":{\"2007\":1}}],[\"通常意味着软件设计简单\",{\"1\":{\"1948\":1}}],[\"通常经过加密\",{\"1\":{\"1658\":1}}],[\"通常只支持\",{\"1\":{\"1648\":1}}],[\"通常遵循的命名模式如下\",{\"1\":{\"1618\":1}}],[\"通常会有两种情况\",{\"1\":{\"1602\":1}}],[\"通常会被分解成\",{\"1\":{\"895\":1}}],[\"通常这会发生在你清楚地知道一个实体具有比它现有类型更确切的类型\",{\"1\":{\"1443\":1}}],[\"通常更简单和直接\",{\"1\":{\"1275\":1}}],[\"通常在抽象父类中封装了子类的算法逻辑\",{\"1\":{\"1829\":1}}],[\"通常在组件或小型应用中使用\",{\"1\":{\"1275\":1}}],[\"通常在合并成一种方法的效率稍微高一些\",{\"1\":{\"312\":1}}],[\"通常对性能影响较小\",{\"1\":{\"1258\":1}}],[\"通常用于避免hidpi设备上绘图模糊\",{\"1\":{\"2841\":1}}],[\"通常用于发出异步请求\",{\"1\":{\"1168\":1}}],[\"通常用来声明常量\",{\"1\":{\"246\":1}}],[\"通常用来解决浮动父元素高度坍塌的问题\",{\"1\":{\"184\":1}}],[\"通常情况下\",{\"1\":{\"900\":1,\"1203\":2,\"1273\":1,\"1764\":1}}],[\"通常可以这样写\",{\"1\":{\"681\":1}}],[\"通常是使用画布的宽\",{\"1\":{\"2570\":1}}],[\"通常是使用绝对路径的模块文件名\",{\"1\":{\"449\":1}}],[\"通常是距离最近的一个\",{\"1\":{\"2214\":1}}],[\"通常是该窗口关闭\",{\"1\":{\"1666\":1}}],[\"通常是由\",{\"1\":{\"725\":1}}],[\"通常是异步操作\",{\"1\":{\"562\":1}}],[\"通常就是直接调用\",{\"1\":{\"364\":1}}],[\"通常使用\",{\"1\":{\"289\":1}}],[\"通常我们所说的html应该是完全脱离表现信息的\",{\"1\":{\"215\":1}}],[\"通常我们在\",{\"1\":{\"200\":1}}],[\"通常\",{\"1\":{\"201\":1,\"391\":1,\"425\":1,\"589\":1,\"850\":1,\"2179\":1}}],[\"通常设备收到你发送过去的信息\",{\"1\":{\"125\":1}}],[\"通常也是硬件佬直接和你说要监听哪条\",{\"1\":{\"122\":1}}],[\"写屏障\",{\"1\":{\"1650\":2}}],[\"写错了怎么办呢\",{\"1\":{\"1600\":1}}],[\"写成一个个的插件进行对原型的扩展\",{\"1\":{\"1492\":1,\"1527\":1,\"1528\":1,\"1543\":1}}],[\"写权限\",{\"1\":{\"1007\":1}}],[\"写入模板缓冲区时所用的位元遮罩\",{\"1\":{\"2657\":1}}],[\"写入环境变量配置文件vi\",{\"1\":{\"1080\":1}}],[\"写入8个字节的64位浮点数\",{\"1\":{\"412\":1}}],[\"写入4个字节的32位浮点数\",{\"1\":{\"412\":1}}],[\"写入4个字节的32位无符号整数\",{\"1\":{\"412\":1}}],[\"写入4个字节的32位整数\",{\"1\":{\"412\":1}}],[\"写入2个字节的16位无符号整数\",{\"1\":{\"412\":1}}],[\"写入2个字节的16位整数\",{\"1\":{\"412\":1}}],[\"写入1个字节的8位无符号整数\",{\"1\":{\"412\":1}}],[\"写入1个字节的8位整数\",{\"1\":{\"412\":1}}],[\"写入内存\",{\"0\":{\"412\":1}}],[\"写入数据失败\",{\"1\":{\"128\":1}}],[\"写入数据成功\",{\"1\":{\"128\":1}}],[\"写入数据中\",{\"1\":{\"128\":1}}],[\"写入数据\",{\"1\":{\"128\":1}}],[\"写入数据是否成功\",{\"1\":{\"128\":1}}],[\"写入蓝牙需要的其他数据\",{\"1\":{\"128\":1}}],[\"写\",{\"0\":{\"1285\":1},\"1\":{\"122\":1,\"1039\":1,\"1040\":6}}],[\"我才能发送fin报文\",{\"1\":{\"1729\":1}}],[\"我知道自己在干什么\",{\"1\":{\"1443\":1}}],[\"我是单例模式\",{\"1\":{\"1772\":1}}],[\"我是自己的\",{\"1\":{\"1483\":1}}],[\"我是全局混入\",{\"1\":{\"1483\":1}}],[\"我是demoone\",{\"1\":{\"1315\":1}}],[\"我是标题\",{\"1\":{\"1315\":3}}],[\"我是参数传进来的arr\",{\"1\":{\"357\":1}}],[\"我是参数传进来的age\",{\"1\":{\"356\":1}}],[\"我是参数传进来的name\",{\"1\":{\"356\":1}}],[\"我目前光标在第20行\",{\"1\":{\"1063\":1}}],[\"我理解的\",{\"1\":{\"865\":1}}],[\"我的理解是\",{\"1\":{\"860\":1}}],[\"我的设备提供的特征值支持\",{\"1\":{\"126\":1}}],[\"我的设备这个服务只有\",{\"1\":{\"122\":1}}],[\"我爱你\",{\"1\":{\"859\":1,\"861\":1}}],[\"我不爱你\",{\"1\":{\"859\":1,\"860\":2,\"861\":1,\"862\":1}}],[\"我个人就经常使用条件操作符来做组件的条件渲染\",{\"1\":{\"637\":1}}],[\"我学的第一门是\",{\"1\":{\"602\":1}}],[\"我错了\",{\"1\":{\"568\":2}}],[\"我被点击了\",{\"1\":{\"558\":1}}],[\"我主要会用到对象的解构赋值\",{\"1\":{\"251\":1}}],[\"我们去餐馆吃饭\",{\"1\":{\"1747\":1}}],[\"我们如果考虑浏览器的兼容性问题\",{\"1\":{\"1737\":1}}],[\"我们如何处理\",{\"1\":{\"151\":2}}],[\"我们得到的是一个idbopendbrequest对象\",{\"1\":{\"1671\":1}}],[\"我们也要携带一个\",{\"1\":{\"1660\":1}}],[\"我们也可以手动设置\",{\"1\":{\"1659\":1}}],[\"我们也可以把属性定义直接写到构造函数的参数里面去\",{\"1\":{\"1386\":1}}],[\"我们也可以先定义需要导出的变量\",{\"1\":{\"469\":1}}],[\"我们再看新的对象\",{\"1\":{\"1650\":1}}],[\"我们再用标记清除的角度看一下\",{\"1\":{\"1646\":1}}],[\"我们举个例子\",{\"1\":{\"1650\":1}}],[\"我们用最简单的表达方式来解释这一过程\",{\"1\":{\"1650\":1}}],[\"我们用其检测出来的结果都是\",{\"1\":{\"657\":1}}],[\"我们无法得知下一步走到哪里了\",{\"1\":{\"1650\":1}}],[\"我们称管理老生代的垃圾回收器叫做老生代垃圾回收器\",{\"1\":{\"1648\":1}}],[\"我们称之为映射类型\",{\"1\":{\"1371\":1}}],[\"我们暂且将管理新生代的垃圾回收器叫做新生代垃圾回收器\",{\"1\":{\"1648\":1}}],[\"我们接下来分析\",{\"1\":{\"1571\":1}}],[\"我们最后生成的代码需要和render函数一样\",{\"1\":{\"1549\":1}}],[\"我们最后检测出来的结果未必准确\",{\"1\":{\"657\":1}}],[\"我们传入的\",{\"1\":{\"1547\":1}}],[\"我们叫做\",{\"1\":{\"1533\":1}}],[\"我们主要关注最后一句话\",{\"1\":{\"1525\":1}}],[\"我们定义了\",{\"1\":{\"1466\":1}}],[\"我们定义了一个接口\",{\"1\":{\"1338\":1}}],[\"我们首先为\",{\"1\":{\"1460\":1}}],[\"我们限定了\",{\"1\":{\"1429\":1}}],[\"我们已将允许所有更改的默认设置\",{\"1\":{\"1418\":1}}],[\"我们已经清楚了\",{\"1\":{\"1256\":1}}],[\"我们把这种行为叫做\",{\"1\":{\"1649\":1}}],[\"我们把\",{\"1\":{\"1442\":1,\"1540\":1}}],[\"我们把收窄为\",{\"1\":{\"1416\":1}}],[\"我们把上面定义的接口里面的属性全部变成可选\",{\"1\":{\"1371\":1}}],[\"我们一般也只有在函数没有返回值时去声明\",{\"1\":{\"1415\":1}}],[\"我们一般用抽象类和抽象方法抽离出事物的共性\",{\"1\":{\"1392\":1}}],[\"我们为\",{\"1\":{\"1366\":1}}],[\"我们来看个具体的例子\",{\"1\":{\"1448\":1}}],[\"我们来看个例子\",{\"1\":{\"240\":1}}],[\"我们来看一个具体的例子\",{\"1\":{\"1410\":1}}],[\"我们来实际测试一下\",{\"1\":{\"1366\":1}}],[\"我们来回顾一下初学\",{\"1\":{\"1430\":1}}],[\"我们来回顾一下\",{\"1\":{\"1366\":1}}],[\"我们来尝试一下\",{\"1\":{\"1366\":1}}],[\"我们甚至不知道\",{\"1\":{\"1366\":1}}],[\"我们通过\",{\"1\":{\"1365\":1}}],[\"我们推荐使用下文中将要提到的文件模块\",{\"1\":{\"1353\":1}}],[\"我们快速点击\",{\"1\":{\"1311\":1}}],[\"我们尝试在组件的渲染期间更新\",{\"1\":{\"1285\":1}}],[\"我们直接调用\",{\"1\":{\"1274\":1}}],[\"我们希望从\",{\"1\":{\"1274\":1}}],[\"我们希望当\",{\"1\":{\"1251\":1}}],[\"我们先要了解一个概念\",{\"1\":{\"1649\":1}}],[\"我们先假设一个场景\",{\"1\":{\"1274\":1}}],[\"我们先来分析它们各自的特性\",{\"1\":{\"1237\":1}}],[\"我们有一个简单的组件\",{\"1\":{\"1269\":1}}],[\"我们想把用户列表的组件缓存起来\",{\"1\":{\"1267\":1}}],[\"我们要使用\",{\"1\":{\"1256\":1}}],[\"我们才希望执行这些任务\",{\"1\":{\"1251\":1}}],[\"我们写了\",{\"1\":{\"1244\":1}}],[\"我们当然希望只有最后一次查询的数据成功渲染\",{\"1\":{\"1236\":1}}],[\"我们习惯将那些经常被修改的目录放在这个目录下\",{\"1\":{\"913\":1}}],[\"我们经常能遇到这样的场景\",{\"1\":{\"1370\":1}}],[\"我们经常使用前两个\",{\"1\":{\"903\":1}}],[\"我们经常需要获取深层次属性\",{\"1\":{\"322\":1}}],[\"我们会使用之前缓存的值\",{\"1\":{\"1265\":1}}],[\"我们会借助临时变量来实现变量的交换\",{\"1\":{\"850\":1}}],[\"我们会用\",{\"1\":{\"566\":1}}],[\"我们不需要显式手动的去分配内存\",{\"1\":{\"1644\":1}}],[\"我们不需要在每一个需要的目录下都放一个必须相同的文件\",{\"1\":{\"1002\":1}}],[\"我们不希望立即执行某些操作\",{\"1\":{\"1251\":1}}],[\"我们不希望它在\",{\"1\":{\"1211\":1}}],[\"我们不希望每次\",{\"1\":{\"1211\":1}}],[\"我们不妨先举个\",{\"1\":{\"813\":1}}],[\"我们不能将\",{\"1\":{\"803\":1}}],[\"我们不会使用await来接收一个保存期约的变量\",{\"1\":{\"594\":1}}],[\"我们并不想让它发生跳转\",{\"1\":{\"646\":1}}],[\"我们就可以⽤策略模式来封装它们\",{\"1\":{\"1785\":1}}],[\"我们就约束了\",{\"1\":{\"1338\":1}}],[\"我们就来写一个\",{\"1\":{\"1256\":1}}],[\"我们就介绍一下这些具有代表性的一些状态码\",{\"1\":{\"817\":1}}],[\"我们就把\",{\"1\":{\"589\":1}}],[\"我们就需要一种封装变量和函数的方法\",{\"1\":{\"445\":1}}],[\"我们使用字面量联合类型描述了一个明确\",{\"1\":{\"1428\":1}}],[\"我们使用\",{\"1\":{\"1211\":2}}],[\"我们使用暴力破解的方法来解决循环引用的问题\",{\"1\":{\"767\":1}}],[\"我们使用下面的方法来解决递归爆栈的问题\",{\"1\":{\"766\":1}}],[\"我们使用递归的方法对数据进行拷贝\",{\"1\":{\"766\":1}}],[\"我们使用箭头函数来定义\",{\"1\":{\"698\":1}}],[\"我们使用一个\",{\"1\":{\"581\":1}}],[\"我们使用了\",{\"1\":{\"126\":1,\"1366\":1}}],[\"我们的想法是\",{\"1\":{\"2717\":1}}],[\"我们的需求是\",{\"1\":{\"1256\":1}}],[\"我们的配置文件如下\",{\"1\":{\"463\":1}}],[\"我们的设备将在输入的时间内振动\",{\"1\":{\"342\":1}}],[\"我们必须提供配置文件来告诉\",{\"1\":{\"463\":1}}],[\"我们应该这样描述二者的区别\",{\"1\":{\"1255\":1}}],[\"我们应该通过创建指向事件侦听器的引用并将其传递给\",{\"1\":{\"432\":1}}],[\"我们应该使用createobjecturl\",{\"1\":{\"413\":1}}],[\"我们可能需要使用\",{\"1\":{\"1288\":1}}],[\"我们可能需要获取深层次属性\",{\"1\":{\"644\":1}}],[\"我们可能会看到过这种形式的\",{\"1\":{\"413\":1}}],[\"我们可以采取下面三种分配策略\",{\"1\":{\"1646\":1}}],[\"我们可以限制函数的参数为指定的字面量类型集合\",{\"1\":{\"1428\":1}}],[\"我们可以得出一个结论\",{\"1\":{\"1416\":1}}],[\"我们可以确保创建的产品是相互配合使用的\",{\"1\":{\"1755\":1}}],[\"我们可以确保\",{\"1\":{\"1416\":1}}],[\"我们可以确保组件已经完成渲染\",{\"1\":{\"1285\":1}}],[\"我们可以把\",{\"1\":{\"1430\":1,\"1557\":1}}],[\"我们可以把类型声明放在一个单独的类型声明文件中\",{\"1\":{\"1355\":1}}],[\"我们可以把协程看成是跑在线程上的任务\",{\"1\":{\"589\":1}}],[\"我们可以优雅地处理路由切换\",{\"1\":{\"1312\":1}}],[\"我们可以根据\",{\"1\":{\"1308\":1}}],[\"我们可以这样做\",{\"1\":{\"1274\":1}}],[\"我们可以这样来创建一个空位数组\",{\"1\":{\"679\":1}}],[\"我们可以这么说\",{\"1\":{\"1267\":1}}],[\"我们可以基于\",{\"1\":{\"1222\":1}}],[\"我们可以将解构赋值分为两大类\",{\"1\":{\"837\":1}}],[\"我们可以将对象中共有的内容\",{\"1\":{\"479\":1}}],[\"我们可以对可迭代值使用数组结构\",{\"1\":{\"839\":1}}],[\"我们可以对我们项目代码中的代码进行优化\",{\"1\":{\"624\":1}}],[\"我们可以对返回值进行\",{\"1\":{\"567\":1}}],[\"我们可以用这个方法来将字符串中第一个字母变成大写\",{\"1\":{\"533\":1}}],[\"我们可以创建一些方法\",{\"1\":{\"455\":1}}],[\"我们可以在不修改客户端代码的情况下\",{\"1\":{\"1755\":1}}],[\"我们可以在\",{\"1\":{\"1534\":1}}],[\"我们可以在中间的搜索栏目输入detached来过滤结果以找到分离的dom节点\",{\"1\":{\"437\":1}}],[\"我们可以在<img>\",{\"1\":{\"413\":1}}],[\"我们可以使用this\",{\"1\":{\"1533\":1}}],[\"我们可以使用确定赋值断言\",{\"1\":{\"1448\":1}}],[\"我们可以使用一种笃定的方式\",{\"1\":{\"1443\":1}}],[\"我们可以使用字面量组合的联合类型将函数的参数限定为更具体的类型\",{\"1\":{\"1429\":1}}],[\"我们可以使用对象的\",{\"1\":{\"482\":1}}],[\"我们可以使用\",{\"1\":{\"435\":1,\"437\":1,\"1210\":1,\"1443\":1}}],[\"我们可以通过响应头里的\",{\"1\":{\"1659\":1}}],[\"我们可以通过存取器来改变一个类中属性的读取和赋值行为\",{\"1\":{\"1387\":1}}],[\"我们可以通过+\",{\"1\":{\"1371\":1}}],[\"我们可以通过\",{\"1\":{\"773\":1,\"1386\":1,\"1389\":1}}],[\"我们可以通过使用数组的索引来获取数组的值\",{\"1\":{\"680\":1}}],[\"我们可以通过使用严格模式\",{\"1\":{\"429\":1}}],[\"我们可以通过了解在\",{\"1\":{\"426\":1}}],[\"我们可以拿到每个\",{\"1\":{\"323\":1,\"576\":1}}],[\"我们可以知道点击的是谁\",{\"1\":{\"236\":1}}],[\"我们在计算机上只能访问本地分支\",{\"1\":{\"1594\":1}}],[\"我们在get的时候判断如果属性的值还是对象那么就在observer实例的dep收集依赖\",{\"1\":{\"1564\":1}}],[\"我们在组件挂载方法里面\",{\"1\":{\"1558\":1}}],[\"我们在这里模拟更新\",{\"1\":{\"1556\":1}}],[\"我们在上传文件时\",{\"1\":{\"391\":1}}],[\"我们在例\",{\"1\":{\"240\":1}}],[\"我们每次会尝试清空当前阶段对应宏任务队列里的所有任务\",{\"1\":{\"383\":1}}],[\"我们每次出队并执行一个宏任务\",{\"1\":{\"383\":1}}],[\"我们只需要在入口文件中引入即可\",{\"1\":{\"1334\":1}}],[\"我们只需要给父容器\",{\"1\":{\"236\":1}}],[\"我们只能在组件的顶层或自定义的\",{\"1\":{\"1294\":1}}],[\"我们只能使用\",{\"1\":{\"345\":1}}],[\"我们只会用到\",{\"1\":{\"1273\":1}}],[\"我们只有当\",{\"1\":{\"1265\":1}}],[\"我们只有一个微任务队列需要接受处理\",{\"1\":{\"383\":1}}],[\"我们只要在某个固定的目录\",{\"1\":{\"1002\":1}}],[\"我们说的话会被翻译成文本输入框中的内容\",{\"1\":{\"340\":1}}],[\"我们将能够向\",{\"1\":{\"340\":1}}],[\"我们还要注意针对\",{\"1\":{\"1212\":1}}],[\"我们还需要知道作用域链的基本概念\",{\"1\":{\"901\":1}}],[\"我们还需要注意\",{\"1\":{\"253\":1}}],[\"我们还可以为特定的commit创建标签\",{\"1\":{\"1618\":1}}],[\"我们还可以在组件嵌套的场景使用\",{\"1\":{\"1281\":1}}],[\"我们还可以将解构赋值与扩展运算符结合使用\",{\"1\":{\"839\":1}}],[\"我们还可以直接调用\",{\"1\":{\"739\":1}}],[\"我们还可以通过指定其路径名来定义模块\",{\"1\":{\"463\":1}}],[\"我们还可以立即调用顶层\",{\"1\":{\"334\":1}}],[\"我们还可以解构函数的返回值\",{\"1\":{\"254\":1}}],[\"我们需要把html字符串变成render函数\",{\"1\":{\"1549\":1}}],[\"我们需要\",{\"1\":{\"1334\":1}}],[\"我们需要使用<mycontext\",{\"1\":{\"1218\":1}}],[\"我们需要使用\",{\"1\":{\"1217\":1}}],[\"我们需要使用一种更好的机制来捕获并处理可能发生的异常\",{\"1\":{\"578\":1}}],[\"我们需要警惕非必要依赖的混入\",{\"1\":{\"1212\":1}}],[\"我们需要不断为应用增加新的功能\",{\"1\":{\"442\":1}}],[\"我们需要关注以下两个方面\",{\"1\":{\"435\":1}}],[\"我们需要将那些永远不会被重用的变量从缓存中清除\",{\"1\":{\"433\":1}}],[\"我们需要通过用户操作动态的增删列表项元素\",{\"1\":{\"236\":1}}],[\"我们需要在点击每个列表项的时候响应一个事件\",{\"1\":{\"236\":1}}],[\"我们知道老生代是采用标记清理算法\",{\"1\":{\"1650\":1}}],[\"我们知道写代码时创建一个基本类型\",{\"1\":{\"1644\":1}}],[\"我们知道模板编译出来的\",{\"1\":{\"1527\":1}}],[\"我们知道这样的用法是把函数的返回值存储或更新到状态中\",{\"1\":{\"1303\":1}}],[\"我们知道\",{\"1\":{\"223\":1,\"249\":1,\"351\":1,\"370\":1,\"431\":1,\"517\":1,\"555\":1}}],[\"我们期望的是在手机屏幕较大时显示的内容比较大一些\",{\"1\":{\"200\":1}}],[\"我们期望这个<footer>元素能够\",{\"1\":{\"161\":1}}],[\"我们给用户带来不好的体验\",{\"1\":{\"200\":1}}],[\"我们都知道\",{\"1\":{\"178\":1,\"1649\":1}}],[\"我们连接后还需要关闭\",{\"1\":{\"119\":1}}],[\"服务间数据依赖\",{\"1\":{\"2055\":1}}],[\"服务拆分要适度\",{\"1\":{\"2055\":1}}],[\"服务拆分使维护压力大增\",{\"1\":{\"2054\":1}}],[\"服务化架构模式\",{\"1\":{\"2054\":1}}],[\"服务化原则\",{\"1\":{\"2053\":1}}],[\"服务形式\",{\"1\":{\"1766\":1}}],[\"服务脚本内容如下\",{\"1\":{\"1137\":1}}],[\"服务器必须回答目标ip与域名的映射关系\",{\"1\":{\"2211\":1}}],[\"服务器的延迟的主要因素是队列和磁盘io延迟\",{\"1\":{\"2201\":1}}],[\"服务器本身不存储任何信息\",{\"1\":{\"2078\":1}}],[\"服务器根据算法要求用户重定向\",{\"1\":{\"2077\":1}}],[\"服务器网址就是url\",{\"1\":{\"1736\":1}}],[\"服务器接收后立即通知所有活跃的\",{\"1\":{\"1735\":1}}],[\"服务器接受请求的一个过程\",{\"1\":{\"1737\":1}}],[\"服务器接受请求\",{\"0\":{\"1693\":1}}],[\"服务器可以向客户端主动推动消息\",{\"1\":{\"1735\":1}}],[\"服务器收到一次迭代查询回复一次结果\",{\"1\":{\"2211\":1}}],[\"服务器收到\",{\"1\":{\"1726\":1}}],[\"服务器收到客户端的\",{\"1\":{\"1726\":1}}],[\"服务器处理请求\",{\"0\":{\"1694\":1}}],[\"服务器会将请求转发到互联网上的根域\",{\"1\":{\"1687\":1}}],[\"服务器\",{\"1\":{\"1686\":1,\"2051\":1,\"2077\":1}}],[\"服务器发送查询请求\",{\"1\":{\"1684\":1}}],[\"服务器端不会直接进行响应\",{\"1\":{\"1737\":1}}],[\"服务器端的压力就会变大\",{\"1\":{\"1737\":1}}],[\"服务器端在收到请求后\",{\"1\":{\"1737\":1}}],[\"服务器端生成\",{\"1\":{\"1659\":1}}],[\"服务器端资源未改变\",{\"1\":{\"817\":1}}],[\"服务器端允许请求访问资源\",{\"1\":{\"817\":1}}],[\"服务器响应处理\",{\"0\":{\"817\":1}}],[\"服务器使用流信息向服务器推送信息\",{\"1\":{\"1737\":1}}],[\"服务器使用\",{\"1\":{\"575\":1}}],[\"服务端的实现比较容易\",{\"1\":{\"1736\":1}}],[\"服务端如果此时还有没发完的数据会继续发送\",{\"1\":{\"1729\":1}}],[\"服务端进入last\",{\"1\":{\"1728\":1}}],[\"服务端进入close\",{\"1\":{\"1728\":1}}],[\"服务端发出连接释放报文段\",{\"1\":{\"1728\":1}}],[\"服务端收到连接释放请求后\",{\"1\":{\"1729\":1}}],[\"服务端收到连接请求报文段后\",{\"1\":{\"1727\":1}}],[\"服务端收到\",{\"1\":{\"1728\":2}}],[\"服务端收到这个应答后也进入\",{\"1\":{\"1727\":1}}],[\"服务端处于\",{\"1\":{\"1726\":1}}],[\"服务端\",{\"1\":{\"560\":1}}],[\"服务id\",{\"1\":{\"128\":1}}],[\"服务uuid\",{\"1\":{\"122\":1,\"123\":1,\"125\":1}}],[\"服务\",{\"1\":{\"122\":1,\"123\":1,\"1860\":1,\"2205\":1}}],[\"第十阶段\",{\"0\":{\"2085\":1}}],[\"第九阶段\",{\"0\":{\"2084\":1}}],[\"第八阶段\",{\"0\":{\"2083\":1}}],[\"第七阶段\",{\"0\":{\"2082\":1}}],[\"第六阶段\",{\"0\":{\"2081\":1}}],[\"第五阶段\",{\"0\":{\"2080\":1},\"1\":{\"2178\":1}}],[\"第四阶段\",{\"0\":{\"2076\":1},\"1\":{\"2178\":1}}],[\"第四次挥手\",{\"1\":{\"1728\":1,\"1729\":1}}],[\"第四行的\",{\"1\":{\"597\":1}}],[\"第\",{\"1\":{\"838\":2}}],[\"第三范式\",{\"0\":{\"2252\":1}}],[\"第三方构件质量难控制\",{\"1\":{\"1899\":1}}],[\"第三方声明文件\",{\"0\":{\"1356\":1}}],[\"第三阶段\",{\"0\":{\"2060\":1},\"1\":{\"1876\":1,\"2178\":1}}],[\"第三次挥手\",{\"1\":{\"1728\":1,\"1729\":1}}],[\"第三次握手的作用是客户端对服务器端的初始序号的确认\",{\"1\":{\"1727\":1}}],[\"第三次握手\",{\"1\":{\"1726\":1,\"1727\":1}}],[\"第三个基础是软件模板的使用\",{\"1\":{\"1974\":1}}],[\"第三个\",{\"1\":{\"1244\":1}}],[\"第三个参数是视图包含的数据个数\",{\"1\":{\"403\":1}}],[\"第三段代码就可以省略了\",{\"1\":{\"592\":1}}],[\"第三步\",{\"0\":{\"123\":1}}],[\"第二范式\",{\"0\":{\"2251\":1}}],[\"第二阶段\",{\"1\":{\"1876\":1,\"2178\":1}}],[\"第二部分是具体的实现子类\",{\"1\":{\"1829\":1}}],[\"第二层以后就不会处理了\",{\"1\":{\"1372\":1}}],[\"第二种\",{\"1\":{\"838\":1}}],[\"第二行就传入了参数\",{\"1\":{\"578\":1}}],[\"第二是任务的不确定性\",{\"1\":{\"569\":1}}],[\"第二次使用同一个类创建新对象的时候\",{\"1\":{\"1762\":1}}],[\"第二次挥手\",{\"1\":{\"1728\":1,\"1729\":1}}],[\"第二次握手\",{\"1\":{\"1726\":1,\"1727\":1}}],[\"第二次取出数据数组第二个元素\",{\"1\":{\"748\":1}}],[\"第二次加法操作仍然是一个字符串加一个数字\",{\"1\":{\"616\":1}}],[\"第二次调用people\",{\"1\":{\"492\":1}}],[\"第二次调用person\",{\"1\":{\"488\":1}}],[\"第二次是通过\",{\"1\":{\"488\":1}}],[\"第二轮循环首先进入timers\",{\"1\":{\"382\":1}}],[\"第二个基础是通过选择架构风格来实现质量和业务需求\",{\"1\":{\"1974\":1}}],[\"第二个到达了服务端\",{\"1\":{\"1727\":1}}],[\"第二个报文段所以要+1\",{\"1\":{\"1726\":1}}],[\"第二个回调函数是promise对象的状态变为rejected时调用\",{\"1\":{\"571\":1}}],[\"第二个参数用来绑定参数函数内部的\",{\"1\":{\"713\":1}}],[\"第二个参数为写入的数据\",{\"1\":{\"412\":1}}],[\"第二个参数是以毫秒为单位的时间间隔\",{\"1\":{\"557\":1}}],[\"第二个参数是视图开始的字节序号\",{\"1\":{\"403\":1}}],[\"第二个参数是用来补全的字符串\",{\"1\":{\"293\":1,\"294\":1,\"547\":1,\"548\":1}}],[\"第二个参数没有传入\",{\"1\":{\"363\":1}}],[\"第二个是保存的数据\",{\"1\":{\"1664\":1}}],[\"第二个是\",{\"1\":{\"363\":1}}],[\"第二个\",{\"1\":{\"354\":2,\"1244\":1}}],[\"第二个演示\",{\"1\":{\"340\":1}}],[\"第二步\",{\"0\":{\"122\":1}}],[\"第一范式\",{\"0\":{\"2250\":1}}],[\"第一阶段\",{\"0\":{\"2059\":1},\"1\":{\"1876\":1,\"2178\":1}}],[\"第一部分是抽象父类\",{\"1\":{\"1829\":1}}],[\"第一位\",{\"1\":{\"1043\":1}}],[\"第一种\",{\"1\":{\"838\":1}}],[\"第一是嵌套调用\",{\"1\":{\"569\":1}}],[\"第一次计算\",{\"1\":{\"1798\":1}}],[\"第一次挥手\",{\"1\":{\"1728\":1,\"1729\":1}}],[\"第一次握手\",{\"1\":{\"1726\":1,\"1727\":1}}],[\"第一次访问网站的时候\",{\"1\":{\"1659\":1}}],[\"第一次推送\",{\"1\":{\"1610\":1}}],[\"第一次\",{\"1\":{\"1485\":1}}],[\"第一次不执行\",{\"1\":{\"828\":1}}],[\"第一次是字符串hello和数字a做加法操作\",{\"1\":{\"616\":1}}],[\"第一次是改变\",{\"1\":{\"488\":1}}],[\"第一次执行person\",{\"1\":{\"494\":1}}],[\"第一次调用people\",{\"1\":{\"492\":1}}],[\"第一次调用person\",{\"1\":{\"488\":1}}],[\"第一次被加载时\",{\"1\":{\"449\":1}}],[\"第一轮循环后\",{\"1\":{\"382\":1}}],[\"第一个基础是功能的分解\",{\"1\":{\"1974\":1}}],[\"第一个是键名\",{\"1\":{\"1664\":1}}],[\"第一个是回调函数\",{\"1\":{\"363\":1}}],[\"第一个十进制数字定义了状态码的类型\",{\"1\":{\"817\":1}}],[\"第一个版本中\",{\"1\":{\"642\":1}}],[\"第一个promise变成rejected\",{\"1\":{\"574\":1}}],[\"第一个回调函数是promise对象的状态变为resolved时调用\",{\"1\":{\"571\":1}}],[\"第一个函数内\",{\"1\":{\"568\":1}}],[\"第一个字符位置为\",{\"1\":{\"528\":1}}],[\"第一个参数表示开始写入数据的字节序号\",{\"1\":{\"412\":1}}],[\"第一个参数是字符串补全生效的最大长度\",{\"1\":{\"294\":1,\"548\":1}}],[\"第一个\",{\"1\":{\"354\":1,\"1244\":1}}],[\"第一个演示\",{\"1\":{\"340\":1}}],[\"第一个事件名称前要加\",{\"1\":{\"232\":1}}],[\"第一步\",{\"0\":{\"121\":1}}],[\"里存储的信息并不需要\",{\"1\":{\"1660\":1}}],[\"里这种算法是最常用的\",{\"1\":{\"1646\":1}}],[\"里是很少见的做法\",{\"1\":{\"1303\":1}}],[\"里\",{\"1\":{\"1268\":1}}],[\"里调用新\",{\"1\":{\"581\":1}}],[\"里会依次调用\",{\"1\":{\"581\":1}}],[\"里的代码会执行\",{\"1\":{\"1255\":1}}],[\"里的值\",{\"1\":{\"1220\":1}}],[\"里的方法执行完成后\",{\"1\":{\"581\":1}}],[\"里的方法了\",{\"1\":{\"581\":1}}],[\"里的方法在前一个\",{\"1\":{\"581\":1}}],[\"里的回调方法是同步注册的\",{\"1\":{\"581\":1}}],[\"里的回调\",{\"1\":{\"581\":1}}],[\"里的函数\",{\"1\":{\"581\":1}}],[\"里面去\",{\"1\":{\"1560\":1}}],[\"里面去通知视图更新\",{\"1\":{\"1534\":1}}],[\"里面收集\",{\"1\":{\"1559\":1}}],[\"里面使用到的观察者模式\",{\"1\":{\"1557\":1}}],[\"里面更新对象和数组的状态\",{\"1\":{\"1273\":1}}],[\"里面有\",{\"1\":{\"1167\":1}}],[\"里面有很多函\",{\"1\":{\"682\":1}}],[\"里面是一个nginx的可执行文件\",{\"1\":{\"1135\":1}}],[\"里面\",{\"1\":{\"817\":1,\"1274\":1}}],[\"里面保存着某个未来才会结束的事件\",{\"1\":{\"562\":1}}],[\"里面的数组因为没访问到\",{\"1\":{\"1563\":1}}],[\"里面的dep进行依赖收集\",{\"1\":{\"1563\":1}}],[\"里面的声明不应该影响到块外面的变量\",{\"1\":{\"507\":1}}],[\"里面的\",{\"1\":{\"490\":1,\"1513\":1,\"1533\":1}}],[\"里需要执行的\",{\"1\":{\"371\":1}}],[\"里被调用的\",{\"1\":{\"365\":1}}],[\"里可以接收设备发送过来的数据\",{\"1\":{\"126\":1}}],[\"里能获取到\",{\"1\":{\"122\":1,\"123\":2,\"125\":2}}],[\"里获取到\",{\"1\":{\"122\":1,\"123\":1,\"125\":1}}],[\"里获取\",{\"1\":{\"121\":1}}],[\"里传入的函数\",{\"1\":{\"365\":1}}],[\"里传入\",{\"1\":{\"118\":1}}],[\"设数据库模式p=\",{\"1\":{\"2255\":1}}],[\"设r是一个关系模式\",{\"1\":{\"2253\":1}}],[\"设立独立的核心资源小组\",{\"1\":{\"2016\":1}}],[\"设计及时注意考虑\",{\"1\":{\"2212\":1}}],[\"设计及确定系统架构\",{\"1\":{\"1901\":1}}],[\"设计时主要考虑\",{\"1\":{\"2212\":1}}],[\"设计与实现隔离\",{\"1\":{\"2025\":1}}],[\"设计与实施\",{\"1\":{\"1849\":1}}],[\"设计工具\",{\"1\":{\"1962\":1}}],[\"设计文档\",{\"1\":{\"1961\":1}}],[\"设计目的单一的类\",{\"1\":{\"1937\":1}}],[\"设计原则\",{\"0\":{\"1937\":1,\"2053\":1}}],[\"设计应允许用户和出现在屏幕上的对象直接交互\",{\"1\":{\"1928\":1}}],[\"设计约束等方面的期望\",{\"1\":{\"1907\":1}}],[\"设计恢复是指借助工具从已有程序中抽象出有关数据设计\",{\"1\":{\"1905\":1}}],[\"设计恢复\",{\"1\":{\"1905\":2}}],[\"设计不好的构件难重用\",{\"1\":{\"1899\":1}}],[\"设计三类创新\",{\"0\":{\"1873\":1}}],[\"设计方法结构化\",{\"1\":{\"1858\":1}}],[\"设计\",{\"1\":{\"1855\":1}}],[\"设计和实现代理模式时需要考虑到代理对象与目标对象之间的交互逻辑\",{\"1\":{\"1797\":1}}],[\"设计模式\",{\"2\":{\"1741\":1,\"1744\":1,\"1756\":1,\"1759\":1,\"1775\":1,\"1778\":1,\"1781\":1,\"1790\":1,\"1799\":1,\"1807\":1,\"1815\":1,\"1818\":1,\"1821\":1,\"1824\":1,\"1827\":1,\"1830\":1,\"1833\":1,\"1840\":1}}],[\"设计为异步操作\",{\"1\":{\"1201\":1}}],[\"设定的日期和时间只与客户端相关\",{\"1\":{\"1659\":1}}],[\"设定之后\",{\"1\":{\"1068\":1}}],[\"设定帐号的密码\",{\"1\":{\"943\":1}}],[\"设定关机的时间\",{\"1\":{\"919\":1}}],[\"设定在几秒钟之后进行关机程序\",{\"1\":{\"919\":1}}],[\"设为该文件拥有者\",{\"1\":{\"1041\":1}}],[\"设为所有人皆可读取\",{\"1\":{\"1041\":2}}],[\"设为\",{\"1\":{\"201\":1}}],[\"设备和部件的详细列表清单\",{\"1\":{\"2218\":1}}],[\"设备驱动接口\",{\"1\":{\"2187\":1}}],[\"设备层\",{\"1\":{\"1890\":1}}],[\"设备检索基本设备信息\",{\"1\":{\"341\":1}}],[\"设备独立像素\",{\"1\":{\"202\":2}}],[\"设备像素比=物理像素\",{\"1\":{\"202\":1}}],[\"设备像素比\",{\"1\":{\"202\":1}}],[\"设备像素\",{\"1\":{\"202\":1}}],[\"设备屏幕的宽度\",{\"1\":{\"202\":1}}],[\"设备连接失败\",{\"1\":{\"128\":2}}],[\"设备连接成功\",{\"1\":{\"128\":2}}],[\"设备连接中\",{\"1\":{\"128\":1}}],[\"设备名称\",{\"1\":{\"128\":2}}],[\"设备\",{\"1\":{\"122\":1,\"123\":1,\"2053\":1}}],[\"设备id\",{\"1\":{\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"127\":1,\"128\":1}}],[\"设置设备像素比\",{\"1\":{\"2841\":1}}],[\"设置颜色及其透明度\",{\"1\":{\"2840\":1}}],[\"设置alpha\",{\"1\":{\"2839\":1}}],[\"设置时\",{\"1\":{\"2674\":1}}],[\"设置多边形偏移单位\",{\"1\":{\"2670\":1}}],[\"设置多边形偏移系数\",{\"1\":{\"2669\":1}}],[\"设置运行alphatest时要使用的alpha值\",{\"1\":{\"2637\":1}}],[\"设置fov\",{\"1\":{\"2586\":1}}],[\"设置url修饰符成功时回调\",{\"1\":{\"2477\":1}}],[\"设置缓存的\",{\"1\":{\"2318\":1,\"2319\":1}}],[\"设置缓冲区的大小\",{\"1\":{\"989\":1}}],[\"设置布隆过滤器\",{\"1\":{\"2072\":1}}],[\"设置一个不超过5分钟的过期时间\",{\"1\":{\"2072\":1}}],[\"设置一个有时间限制的缓存+一个无时间限制的缓存\",{\"1\":{\"2071\":1}}],[\"设置一个慢开始门限\",{\"1\":{\"1719\":1}}],[\"设置一个root密码\",{\"1\":{\"1472\":1}}],[\"设置别名\",{\"0\":{\"1591\":1}}],[\"设置命令颜色\",{\"0\":{\"1589\":1}}],[\"设置邮箱\",{\"0\":{\"1588\":1}}],[\"设置用户名\",{\"0\":{\"1587\":1}}],[\"设置值\",{\"1\":{\"1534\":1}}],[\"设置访问数据代理\",{\"1\":{\"1514\":1,\"1521\":1}}],[\"设置root密码\",{\"1\":{\"1472\":1}}],[\"设置与编译流程相关的选项\",{\"1\":{\"1453\":1}}],[\"设置无需进行编译的文件\",{\"1\":{\"1453\":1}}],[\"设置需要进行编译的文件\",{\"1\":{\"1453\":1}}],[\"设置默认值\",{\"1\":{\"1315\":1}}],[\"设置订阅\",{\"1\":{\"1258\":1}}],[\"设置高度\",{\"1\":{\"1256\":1}}],[\"设置后\",{\"1\":{\"1153\":1}}],[\"设置开机自启\",{\"0\":{\"1145\":1}}],[\"设置粘贴位\",{\"1\":{\"1039\":1}}],[\"设置指定用户权限的设置\",{\"1\":{\"1039\":1}}],[\"设置欲使用的群组名称\",{\"1\":{\"959\":1}}],[\"设置欲使用的群组识别码\",{\"1\":{\"959\":1}}],[\"设置请求的url参数\",{\"1\":{\"864\":1,\"866\":1}}],[\"设置请求失败时的监听函数\",{\"1\":{\"559\":1}}],[\"设置允许跨域的域名\",{\"1\":{\"864\":1}}],[\"设置那个源可以访问我\",{\"1\":{\"860\":1}}],[\"设置传入的值\",{\"1\":{\"580\":2}}],[\"设置状态监听函数\",{\"1\":{\"559\":1}}],[\"设置新\",{\"1\":{\"389\":1}}],[\"设置切片的结束点\",{\"1\":{\"389\":1}}],[\"设置切片的起点\",{\"1\":{\"389\":1}}],[\"设置平移效果\",{\"1\":{\"338\":1}}],[\"设置字符串的长度\",{\"1\":{\"281\":1,\"524\":1}}],[\"设置从那个位置开始查找\",{\"1\":{\"279\":1,\"522\":1}}],[\"设置要编译的文件的名称\",{\"1\":{\"1453\":1}}],[\"设置要替换的最小像素值\",{\"1\":{\"208\":1}}],[\"设置要转换的单位\",{\"1\":{\"208\":1}}],[\"设置的保留小数位数\",{\"1\":{\"208\":1}}],[\"设置宽度为\",{\"1\":{\"205\":1}}],[\"设置视口\",{\"0\":{\"202\":1}}],[\"设置为true时\",{\"1\":{\"2677\":1}}],[\"设置为\",{\"1\":{\"1648\":1,\"2800\":1}}],[\"设置为同步\",{\"0\":{\"1202\":1}}],[\"设置为可写权限\",{\"1\":{\"1039\":1}}],[\"设置为可读权限\",{\"1\":{\"1039\":1}}],[\"设置为可执行权限\",{\"1\":{\"1039\":1}}],[\"设置为可执行\",{\"1\":{\"33\":1,\"76\":1}}],[\"设置为左浮后\",{\"1\":{\"178\":1}}],[\"设置文件字符集为\",{\"1\":{\"23\":1,\"66\":1}}],[\"设置\",{\"0\":{\"13\":1,\"56\":1},\"1\":{\"202\":2,\"224\":1,\"378\":1}}],[\"省略每次\",{\"1\":{\"1604\":1}}],[\"省略非关键代码\",{\"1\":{\"1311\":1}}],[\"省略号显示在文本前\",{\"0\":{\"135\":1}}],[\"省略号\",{\"0\":{\"132\":1}}],[\"省略前面几步代码\",{\"1\":{\"122\":2,\"123\":2,\"125\":2,\"126\":2}}],[\"省略上一步的代码\",{\"1\":{\"121\":2}}],[\"省略括号\",{\"1\":{\"20\":1,\"63\":1}}],[\"要声明一个自定义的\",{\"1\":{\"2744\":1}}],[\"要声明一个自定义属性\",{\"1\":{\"2744\":1}}],[\"要更新自定义属性\",{\"1\":{\"2744\":1}}],[\"要实现内置\",{\"1\":{\"2741\":1}}],[\"要将曲线划分为的分段数\",{\"1\":{\"2335\":1,\"2336\":1}}],[\"要么全部失败回滚\",{\"1\":{\"2258\":1}}],[\"要么可以从外部获取到\",{\"1\":{\"2078\":1}}],[\"要么都包含在这个请求里\",{\"1\":{\"2078\":1}}],[\"要复用构件\",{\"1\":{\"2028\":1}}],[\"要成功实施产品线\",{\"1\":{\"2016\":1}}],[\"要尽量使用组合\",{\"1\":{\"1937\":1}}],[\"要依赖与抽象\",{\"1\":{\"1937\":1}}],[\"要对企业现有的管理流程重新整合\",{\"1\":{\"1873\":1}}],[\"要让接收方来得及接收\",{\"1\":{\"1723\":1}}],[\"要先切换到其他分支\",{\"1\":{\"1595\":1}}],[\"要给项目初始化一个\",{\"1\":{\"1583\":1}}],[\"要求属性设置在材质上\",{\"1\":{\"2743\":1}}],[\"要求开发人员尽量使构件的功能\",{\"1\":{\"2028\":1}}],[\"要求同时设置了\",{\"1\":{\"1454\":1}}],[\"要求使用\",{\"1\":{\"19\":2,\"62\":2}}],[\"要解决失配问题\",{\"1\":{\"2028\":1}}],[\"要解决该问题\",{\"1\":{\"1448\":1}}],[\"要解决这个问题\",{\"1\":{\"1366\":1}}],[\"要解决此问题\",{\"1\":{\"434\":1}}],[\"要进行的操作\",{\"1\":{\"1072\":1}}],[\"要注意的是\",{\"1\":{\"1029\":1}}],[\"要确定类型的文件列表\",{\"1\":{\"1012\":1}}],[\"要跟踪名为notes\",{\"1\":{\"993\":1}}],[\"要显示notes\",{\"1\":{\"993\":1}}],[\"要切换的目标目录\",{\"1\":{\"968\":1}}],[\"要在请求状态改变事件中处理\",{\"1\":{\"817\":1}}],[\"要查找的元素和可选的其实搜索位置\",{\"1\":{\"708\":1}}],[\"要查找的字符串\",{\"1\":{\"279\":1,\"522\":1}}],[\"要插入的元素数量是任意的\",{\"1\":{\"703\":1}}],[\"要插入的元素\",{\"1\":{\"703\":2}}],[\"要删除的元素数量\",{\"1\":{\"703\":2}}],[\"要删除的项目数量\",{\"1\":{\"703\":1}}],[\"要比较的变量的类型和值都必须相同\",{\"1\":{\"772\":1}}],[\"要比\",{\"1\":{\"663\":1}}],[\"要启动\",{\"1\":{\"589\":1}}],[\"要被解析的字符串\",{\"1\":{\"550\":1}}],[\"要执行忽略大小写的检索\",{\"1\":{\"537\":1}}],[\"要抽取的子串的起始下标\",{\"1\":{\"529\":1}}],[\"要截取的片段结尾的下标\",{\"1\":{\"528\":1}}],[\"要截取的片断的起始下标\",{\"1\":{\"528\":1}}],[\"要想撤销本地的修改\",{\"1\":{\"1614\":1}}],[\"要想放弃所有文件的缓存\",{\"1\":{\"1614\":1}}],[\"要想理解这个理论在代码中是如何工作的\",{\"1\":{\"461\":1}}],[\"要想使用此模块\",{\"1\":{\"458\":1}}],[\"要使用像\",{\"1\":{\"443\":1}}],[\"要订阅频道消息\",{\"1\":{\"343\":1}}],[\"要放在最后\",{\"1\":{\"305\":1}}],[\"要搜索的子字符串\",{\"1\":{\"281\":1,\"524\":1}}],[\"要开启监听\",{\"1\":{\"120\":1}}],[\"​\",{\"1\":{\"119\":12,\"121\":3,\"122\":3,\"123\":7,\"125\":3,\"126\":3,\"127\":22,\"1753\":4,\"1755\":11,\"1789\":4,\"1798\":3}}],[\"回归测试\",{\"1\":{\"1940\":1}}],[\"回收后\",{\"1\":{\"1648\":1}}],[\"回收空间\",{\"1\":{\"1646\":1}}],[\"回收策略\",{\"0\":{\"1646\":1}}],[\"回收机制\",{\"0\":{\"1645\":1}}],[\"回收\",{\"1\":{\"1644\":1}}],[\"回答\",{\"1\":{\"998\":1}}],[\"回车键\",{\"1\":{\"989\":1,\"1057\":1}}],[\"回到最近一次代码提交\",{\"1\":{\"1637\":1}}],[\"回到一般模式中\",{\"1\":{\"1065\":1}}],[\"回到闭包的本质\",{\"1\":{\"901\":1}}],[\"回到\",{\"1\":{\"379\":1}}],[\"回流次数越多\",{\"1\":{\"226\":1}}],[\"回调可以返回最初的url\",{\"1\":{\"2477\":1}}],[\"回调和外部交互\",{\"1\":{\"1303\":1}}],[\"回调以外\",{\"1\":{\"578\":1}}],[\"回调地狱不复存在了\",{\"1\":{\"565\":1}}],[\"回调的另一个问题就是难以处理错误\",{\"1\":{\"562\":1}}],[\"回调的是函数\",{\"1\":{\"556\":1}}],[\"回调需要执行\",{\"1\":{\"379\":2}}],[\"回调等\",{\"1\":{\"379\":1}}],[\"回调交给\",{\"1\":{\"371\":1}}],[\"回调中\",{\"1\":{\"340\":1}}],[\"回调函数或事件处理程序中触发的\",{\"1\":{\"1203\":1}}],[\"回调函数接受四个参数\",{\"1\":{\"877\":1}}],[\"回调函数不能是箭头函数\",{\"1\":{\"712\":1}}],[\"回调函数不是直接声明的\",{\"1\":{\"569\":1}}],[\"回调函数延迟绑定\",{\"1\":{\"569\":1}}],[\"回调函数中输出\",{\"1\":{\"363\":1}}],[\"回调函数\",{\"0\":{\"556\":1},\"1\":{\"232\":1,\"1557\":1,\"1561\":1}}],[\"回调\",{\"1\":{\"119\":1,\"379\":1,\"380\":1,\"382\":1,\"578\":1}}],[\"回退\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"根本性\",{\"1\":{\"1875\":1}}],[\"根底定义\",{\"1\":{\"1849\":1}}],[\"根域名服务器查询\",{\"0\":{\"1687\":1}}],[\"根文件夹列表\",{\"1\":{\"1454\":1}}],[\"根目录创建上下文\",{\"1\":{\"1174\":1}}],[\"根目录\",{\"1\":{\"913\":1}}],[\"根目录下新增\",{\"1\":{\"23\":1,\"66\":1}}],[\"根元素的\",{\"1\":{\"206\":2}}],[\"根元素\",{\"1\":{\"148\":1}}],[\"根据应用的需求\",{\"1\":{\"2806\":1}}],[\"根据定义\",{\"1\":{\"2806\":1}}],[\"根据values设置属性\",{\"1\":{\"2690\":1}}],[\"根据弧长返回曲线上给定位置的点\",{\"1\":{\"2334\":1}}],[\"根据弧长在曲线上的位置\",{\"1\":{\"2334\":1,\"2342\":1}}],[\"根据边界矩形将几何体居中\",{\"1\":{\"2299\":1}}],[\"根据收到的数据中的源mac地址建立该地址痛交换机端口的映射写入mac地址表中\",{\"1\":{\"2208\":1}}],[\"根据任务的截止时间末端确定其优先级\",{\"1\":{\"2190\":1}}],[\"根据任务的截止时间头端来确定其优先级\",{\"1\":{\"2190\":1}}],[\"根据任务的紧急程度确定该任务的优先级\",{\"1\":{\"2190\":1}}],[\"根据任务种类的不同\",{\"1\":{\"376\":1}}],[\"根据系统对时间的敏感程度可将嵌入式系统划分为\",{\"1\":{\"2188\":1}}],[\"根据请求目标ip做散列找出对应节点\",{\"1\":{\"2077\":1}}],[\"根据请求的源ip地址\",{\"1\":{\"2077\":1}}],[\"根据输入条件与输出结果之间的因果关系来设计测试用例\",{\"1\":{\"1939\":1}}],[\"根据需要调用对应的策略\",{\"1\":{\"1784\":1}}],[\"根据需要调用需要的策略\",{\"1\":{\"1784\":1}}],[\"根据`参数的不同选择实例化合适的对象\",{\"1\":{\"1747\":1}}],[\"根据语法规范解析出所有的\",{\"1\":{\"1706\":1}}],[\"根据语法规则转为\",{\"1\":{\"895\":1}}],[\"根据响应资源里的\",{\"1\":{\"1699\":1}}],[\"根据不同状态码做不同的事\",{\"1\":{\"1699\":1}}],[\"根据以太网协议将数据分为以\",{\"1\":{\"1692\":1}}],[\"根据以上对浅拷贝的理解\",{\"1\":{\"760\":1}}],[\"根据第一请求返回时\",{\"1\":{\"1663\":1}}],[\"根据第二条规则\",{\"1\":{\"624\":1}}],[\"根据cookie值的内容就可以判断和恢复一些用户的信息状态\",{\"1\":{\"1658\":1}}],[\"根据虚拟节点\",{\"1\":{\"1476\":1}}],[\"根据参数的类型\",{\"1\":{\"1442\":1}}],[\"根据旧的类型创建出新的类型\",{\"1\":{\"1371\":1}}],[\"根据环境变数\",{\"1\":{\"986\":1}}],[\"根据同源策略\",{\"1\":{\"861\":1}}],[\"根据运算符优先级\",{\"1\":{\"802\":1}}],[\"根据长度直接计算\",{\"1\":{\"727\":1}}],[\"根据异步返回的结果\",{\"1\":{\"565\":1}}],[\"根据解析出的路径定位文件\",{\"1\":{\"454\":1}}],[\"根据上文\",{\"1\":{\"1303\":1}}],[\"根据上图\",{\"1\":{\"378\":1}}],[\"根据上面例子就可以得出结论\",{\"1\":{\"354\":1}}],[\"根据先进后出的原则\",{\"1\":{\"374\":1}}],[\"根据对应的规则\",{\"1\":{\"269\":1}}],[\"根据事件源\",{\"1\":{\"236\":1}}],[\"根据设置的\",{\"1\":{\"207\":1}}],[\"根据已经拿到的\",{\"1\":{\"123\":1}}],[\"根据\",{\"0\":{\"1551\":1},\"1\":{\"119\":1,\"397\":1,\"569\":1,\"760\":1,\"768\":1,\"837\":1,\"1039\":1,\"1549\":1,\"1696\":1}}],[\"既可使用慢开始算法\",{\"1\":{\"1719\":1}}],[\"既能保存状态\",{\"1\":{\"1279\":1}}],[\"既能阻止事件向父元素冒泡\",{\"1\":{\"240\":1}}],[\"既然过程的语义必须依赖于被处罚事件的上下文约束\",{\"1\":{\"1987\":1}}],[\"既然是数据库了\",{\"1\":{\"1669\":1}}],[\"既然存在执行一次\",{\"1\":{\"1649\":1}}],[\"既然原因分析出来了\",{\"1\":{\"569\":1}}],[\"既然找到了\",{\"1\":{\"119\":1}}],[\"既不合并\",{\"1\":{\"1712\":1}}],[\"既不增加新功能\",{\"1\":{\"30\":1,\"73\":1}}],[\"既不是增加feature\",{\"1\":{\"16\":1,\"59\":1}}],[\"就有必要使用\",{\"1\":{\"2788\":1}}],[\"就向对应端口进行转发\",{\"1\":{\"2208\":1}}],[\"就近提供最近端服务\",{\"1\":{\"2057\":1}}],[\"就应该遵从严格的方法\",{\"1\":{\"1923\":1}}],[\"就增加了不同的功能\",{\"1\":{\"1829\":1}}],[\"就好\",{\"1\":{\"1730\":1}}],[\"就好了\",{\"1\":{\"1063\":1}}],[\"就处于关闭连接了\",{\"1\":{\"1728\":1}}],[\"就建立新的连接了\",{\"1\":{\"1727\":1}}],[\"就释放了连接\",{\"1\":{\"1727\":1}}],[\"就把慢开始门限设置为出现拥塞时的发送窗口大小的一半\",{\"1\":{\"1720\":1}}],[\"就开启一个定时器\",{\"1\":{\"1717\":1}}],[\"就给每个包一个序号\",{\"1\":{\"1713\":1}}],[\"就给它赋值\",{\"1\":{\"895\":1}}],[\"就这样一直往下走\",{\"1\":{\"1650\":1}}],[\"就遇到了一个很严重的问题\",{\"1\":{\"1646\":1}}],[\"就执行\",{\"1\":{\"1722\":1}}],[\"就执行以下命令来标识第11次提交是没问题的\",{\"1\":{\"1637\":1}}],[\"就执行该函数\",{\"1\":{\"592\":1}}],[\"就诞生了\",{\"1\":{\"1577\":1}}],[\"就递归去收集依赖\",{\"1\":{\"1563\":1}}],[\"就截取掉\",{\"1\":{\"1550\":1}}],[\"就相当于插入到老的el节点的后面\",{\"1\":{\"1528\":1}}],[\"就相当于\",{\"1\":{\"1372\":1}}],[\"就相当于提前进行了赋值操作\",{\"1\":{\"354\":1}}],[\"就包含在\",{\"1\":{\"1356\":1}}],[\"就包含gui渲染线程\",{\"1\":{\"371\":1}}],[\"就足够了\",{\"1\":{\"1258\":1}}],[\"就派上用场了\",{\"1\":{\"1235\":1}}],[\"就用\",{\"1\":{\"1233\":1}}],[\"就输入\",{\"1\":{\"1062\":1}}],[\"就进入\",{\"1\":{\"1729\":1}}],[\"就进入了底线命令模式\",{\"1\":{\"1058\":1}}],[\"就进入了输入模式\",{\"1\":{\"1057\":1}}],[\"就进行\",{\"1\":{\"374\":1}}],[\"就代换为一行的空白行\",{\"1\":{\"986\":1}}],[\"就具备实现了能在外部访问某个函数内部变量的功能\",{\"1\":{\"900\":1}}],[\"就委托秘书去叫小李\",{\"1\":{\"813\":1}}],[\"就继续从其原型上找\",{\"1\":{\"641\":1,\"657\":1}}],[\"就就会阻塞后面的代码\",{\"1\":{\"595\":1}}],[\"就称之为暂时死区\",{\"1\":{\"511\":1}}],[\"就直接把值从这个对象里面取出来\",{\"1\":{\"902\":1}}],[\"就直接取其补码\",{\"1\":{\"609\":1}}],[\"就直接调用新\",{\"1\":{\"581\":1}}],[\"就直接返回该promise对象的值\",{\"1\":{\"574\":1}}],[\"就直接返回给\",{\"1\":{\"510\":1}}],[\"就直接写一个空括号即可\",{\"1\":{\"260\":1}}],[\"就已经被提升了\",{\"1\":{\"506\":1}}],[\"就已经被销毁了\",{\"1\":{\"506\":1}}],[\"就去父级作用域去查找\",{\"1\":{\"901\":1}}],[\"就去找原型的原型\",{\"1\":{\"482\":1}}],[\"就去执行promise\",{\"1\":{\"376\":1}}],[\"就去执行宏任务队列中的一个任务\",{\"1\":{\"376\":1}}],[\"就采用了这个规范\",{\"1\":{\"448\":1}}],[\"就创建了一个局部范围\",{\"1\":{\"445\":1}}],[\"就需导入\",{\"1\":{\"443\":1}}],[\"就需要执行一次垃圾清理操作\",{\"1\":{\"1648\":1}}],[\"就需要系统收回被占用的内存空间\",{\"1\":{\"1643\":1}}],[\"就需要额外注意了\",{\"1\":{\"838\":1}}],[\"就需要加上括号\",{\"1\":{\"616\":1}}],[\"就需要在词法环境和变量环境中查找变量\",{\"1\":{\"510\":1}}],[\"就需要手动更改模块中的路径名\",{\"1\":{\"463\":1}}],[\"就需要来看看\",{\"1\":{\"461\":1}}],[\"就需要使用udp而不是tcp\",{\"1\":{\"1712\":1}}],[\"就需要使用规范中定义的\",{\"1\":{\"458\":1}}],[\"就需要使用revokeobjecturl\",{\"1\":{\"413\":1}}],[\"就需要再模块内创建一个构造函数\",{\"1\":{\"455\":1}}],[\"就需要安装并导入它作为依赖项\",{\"1\":{\"443\":1}}],[\"就需要传给\",{\"1\":{\"311\":1,\"720\":1}}],[\"就需要重新给新增的元素绑定事件\",{\"1\":{\"236\":1}}],[\"就无法按预期工作\",{\"1\":{\"434\":1}}],[\"就手动将其设置为\",{\"1\":{\"429\":1}}],[\"就使用全局变量存储数据\",{\"1\":{\"429\":1}}],[\"就将其放入任务队列中\",{\"1\":{\"375\":1}}],[\"就可能需要等待很长时间\",{\"1\":{\"1579\":1}}],[\"就可能会造成阻塞\",{\"1\":{\"555\":1}}],[\"就可能导致不能安全的渲染\",{\"1\":{\"370\":1}}],[\"就可以脱离用户接口来测试这些逻辑\",{\"1\":{\"2032\":1}}],[\"就可以获得所需的对象\",{\"1\":{\"1753\":1}}],[\"就可以进行客户端状态的维护\",{\"1\":{\"1658\":1}}],[\"就可以有效地解决\",{\"1\":{\"1646\":1}}],[\"就可以为其标记\",{\"1\":{\"1646\":1}}],[\"就可以执行以下命令\",{\"1\":{\"1629\":2}}],[\"就可以在创建新的分支之后\",{\"1\":{\"1594\":1}}],[\"就可以自己实现\",{\"1\":{\"1372\":1}}],[\"就可以\",{\"1\":{\"1233\":1}}],[\"就可以直接引入\",{\"1\":{\"1153\":1}}],[\"就可以直接将\",{\"1\":{\"395\":1}}],[\"就可以访问到\",{\"1\":{\"896\":1}}],[\"就可以这么写\",{\"1\":{\"843\":1}}],[\"就可以这样\",{\"1\":{\"452\":1}}],[\"就可以实现一个数组的浅拷贝\",{\"1\":{\"758\":1,\"759\":1}}],[\"就可以实现文件下载或者图片显示等\",{\"1\":{\"413\":1}}],[\"就可以创建一个长度为\",{\"1\":{\"677\":1}}],[\"就可以设置href=\",{\"1\":{\"646\":1}}],[\"就可以设置宽度\",{\"1\":{\"178\":1}}],[\"就可以用这个方法来解决\",{\"1\":{\"574\":1}}],[\"就可以减少组合继承中多进行一次构造的过程\",{\"1\":{\"494\":1}}],[\"就可以使用以下命令检查所有存储\",{\"1\":{\"1601\":1}}],[\"就可以使用\",{\"1\":{\"397\":1}}],[\"就可以使用该方法来操作\",{\"1\":{\"293\":1,\"547\":1}}],[\"就可以解决这些问题\",{\"1\":{\"334\":1}}],[\"就可以开启对应的监听功能\",{\"1\":{\"123\":1}}],[\"就可以初始化蓝牙模块\",{\"1\":{\"117\":1}}],[\"就是很小的服务\",{\"1\":{\"2041\":1}}],[\"就是根据不同的输入返回不同的实例\",{\"1\":{\"1747\":1}}],[\"就是服务器向客户端声明\",{\"1\":{\"1737\":1}}],[\"就是我们常⻅的粘包的情况\",{\"1\":{\"1730\":1}}],[\"就是我们定义的一个模块\",{\"1\":{\"445\":1}}],[\"就是通过控制发送窗口的长度来控制报文\",{\"1\":{\"1724\":1}}],[\"就是通过循环递归的方式\",{\"1\":{\"735\":1}}],[\"就是当前定时器结束前\",{\"1\":{\"1724\":1}}],[\"就是那些以某种方式可访问或者说可用的值\",{\"1\":{\"1646\":1}}],[\"就是调用原生方法生成dom树\",{\"1\":{\"1528\":1}}],[\"就是组件实例挂载的入口函数\",{\"1\":{\"1525\":1}}],[\"就是el本身\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"就是用来装饰类的\",{\"1\":{\"1466\":1}}],[\"就是说你可以把\",{\"1\":{\"1400\":1}}],[\"就是只支持处理第一层的属性\",{\"1\":{\"1372\":1}}],[\"就是声明一个变量来承载传入函数签名的返回值类型\",{\"1\":{\"1368\":1}}],[\"就是第二步传入的\",{\"1\":{\"1219\":1}}],[\"就是利用了\",{\"1\":{\"859\":1}}],[\"就是解构的嵌套对象\",{\"1\":{\"844\":1}}],[\"就是在客户端电脑上设置的首选\",{\"1\":{\"1686\":1}}],[\"就是在清除之后\",{\"1\":{\"1646\":1}}],[\"就是在给\",{\"1\":{\"901\":1}}],[\"就是在遍历过程中发现数组元素还是数组的时候进行递归操作\",{\"1\":{\"735\":1}}],[\"就是在执行resolve回调函数时\",{\"1\":{\"572\":1}}],[\"就是将a的二进制位右移2位\",{\"1\":{\"613\":1}}],[\"就是将浏览器之外的文件拖到浏览器窗口中\",{\"1\":{\"392\":1}}],[\"就是条件操作符\",{\"1\":{\"601\":1}}],[\"就是一个\",{\"1\":{\"590\":1}}],[\"就是一个容器\",{\"1\":{\"562\":1}}],[\"就是一种处理回调的不同方式\",{\"1\":{\"562\":1}}],[\"就是异步的\",{\"1\":{\"560\":1}}],[\"就是\",{\"1\":{\"461\":1,\"597\":2,\"1211\":1}}],[\"就是指同时并发加载所依赖的模块\",{\"1\":{\"457\":1}}],[\"就是引入该模块的\",{\"1\":{\"449\":1}}],[\"就是导出的内容\",{\"1\":{\"445\":1}}],[\"就是模块内部的代码实现\",{\"1\":{\"445\":1}}],[\"就是所谓的垃圾回收语言之一\",{\"1\":{\"425\":1}}],[\"就是比较正常的\",{\"1\":{\"395\":1}}],[\"就是默认的全局对象\",{\"1\":{\"364\":1}}],[\"就是这个记录的一个属性\",{\"1\":{\"352\":1}}],[\"就要先切换到\",{\"1\":{\"1596\":1}}],[\"就要先开启监听数据的功能\",{\"1\":{\"120\":1}}],[\"就要根据优先级来判断\",{\"1\":{\"360\":1}}],[\"就指向了构造函数\",{\"1\":{\"359\":1}}],[\"就像常量\",{\"1\":{\"2742\":1}}],[\"就像它的名字一样\",{\"1\":{\"1646\":1}}],[\"就像我们所认识的同步代码一样\",{\"1\":{\"597\":1}}],[\"就像应该多次单击的按钮一样\",{\"1\":{\"432\":1}}],[\"就像在\",{\"1\":{\"340\":1}}],[\"就像是\",{\"1\":{\"264\":1}}],[\"就返回\",{\"1\":{\"698\":3,\"716\":1,\"876\":1}}],[\"就返回一个失败的\",{\"1\":{\"328\":1}}],[\"就返回那个已经成功的\",{\"1\":{\"328\":1}}],[\"就等同于\",{\"1\":{\"282\":1,\"545\":1}}],[\"就不要再开定时器\",{\"1\":{\"1493\":1}}],[\"就不需要我们自己去搭建一个中间服务\",{\"1\":{\"866\":1}}],[\"就不用频繁地检查错误了\",{\"1\":{\"569\":1}}],[\"就不用担心自己的属性与原来的属性同名\",{\"1\":{\"272\":1}}],[\"就不会调用\",{\"1\":{\"662\":1}}],[\"就不会继续执行运算符后面的表达式\",{\"1\":{\"624\":1}}],[\"就不会再被任何方式所改变\",{\"1\":{\"360\":1}}],[\"就不会产生上述问题\",{\"1\":{\"248\":1}}],[\"就不会发生margin重叠了\",{\"1\":{\"151\":1}}],[\"就视为两个键\",{\"1\":{\"272\":1}}],[\"就永远指向它定义时所处的全局执行环境中的\",{\"1\":{\"261\":1}}],[\"就先将其转为类数组对象\",{\"1\":{\"254\":1}}],[\"就阻止了父事件的执行\",{\"1\":{\"240\":1}}],[\"就会丢失⼀部分数据\",{\"1\":{\"1731\":1}}],[\"就会自动绑定到执行语句的当前域\",{\"1\":{\"1659\":1}}],[\"就会自动执行方法\",{\"1\":{\"859\":1}}],[\"就会删除该目录下的所有文件和子目录\",{\"1\":{\"1613\":1}}],[\"就会创建一个名为\",{\"1\":{\"1583\":1}}],[\"就会创建一个质保函该特定制度额数组\",{\"1\":{\"677\":1}}],[\"就会提示\",{\"1\":{\"1430\":1}}],[\"就会造成系统死锁\",{\"1\":{\"2156\":1}}],[\"就会造成多个包在客户端缓冲从⽽粘包的情况\",{\"1\":{\"1730\":1}}],[\"就会造成state和props不一致\",{\"1\":{\"1200\":1}}],[\"就会造成\",{\"1\":{\"1200\":1}}],[\"就会执行\",{\"1\":{\"1106\":1}}],[\"就会出现死锁问题\",{\"1\":{\"2156\":1}}],[\"就会出现减号\",{\"1\":{\"1029\":1}}],[\"就会出现跨域问题\",{\"1\":{\"855\":1}}],[\"就会报\",{\"1\":{\"898\":1}}],[\"就会报错\",{\"1\":{\"254\":1,\"334\":1,\"445\":1,\"511\":1}}],[\"就会变得很简单\",{\"1\":{\"850\":1}}],[\"就会被赋上默认值\",{\"1\":{\"838\":1}}],[\"就会被解构为\",{\"1\":{\"254\":1}}],[\"就会检查它们的类型\",{\"1\":{\"807\":1}}],[\"就会对对象的属性进行一次操作\",{\"1\":{\"718\":1,\"881\":1}}],[\"就会进行类型转换\",{\"1\":{\"627\":1}}],[\"就会进入下一阶段\",{\"1\":{\"379\":1}}],[\"就会直接发生短路\",{\"1\":{\"624\":1}}],[\"就会直接进行减法操作\",{\"1\":{\"617\":1}}],[\"就会产生很多层的嵌套\",{\"1\":{\"590\":1}}],[\"就会将非布尔值的参数自动转换为布尔值\",{\"1\":{\"666\":1}}],[\"就会将datas赋值为第二个操作数\",{\"1\":{\"625\":1}}],[\"就会将其转化为数值\",{\"1\":{\"617\":1}}],[\"就会将错误传递给回调的第一个参数\",{\"1\":{\"560\":1}}],[\"就会将定时器回调任务放入任务队列等待主线程来取出执行\",{\"1\":{\"376\":1}}],[\"就会返回一个\",{\"1\":{\"1697\":1}}],[\"就会返回存储在相应位置的元素\",{\"1\":{\"680\":1}}],[\"就会返回\",{\"1\":{\"550\":1,\"796\":1}}],[\"就会返回这个字符串\",{\"1\":{\"530\":1}}],[\"就会返回原数组\",{\"1\":{\"311\":1}}],[\"就会把该作用域块内部的变量压到栈顶\",{\"1\":{\"510\":1}}],[\"就会把这个任务交给异步\",{\"1\":{\"371\":1}}],[\"就会发现\",{\"1\":{\"492\":1}}],[\"就会发生内存泄漏\",{\"1\":{\"425\":1}}],[\"就会发生margin重叠\",{\"1\":{\"151\":1}}],[\"就会查找与对象关联的原型中的属性\",{\"1\":{\"482\":1}}],[\"就会每秒输出一个数字\",{\"1\":{\"430\":1}}],[\"就会严重影响性能\",{\"1\":{\"424\":1}}],[\"就会销毁当前的执行环境\",{\"1\":{\"374\":1}}],[\"就会为该函数创建一个新的执行上下文\",{\"1\":{\"350\":1}}],[\"就会调用\",{\"1\":{\"340\":1}}],[\"就会在控制台打印一个\",{\"1\":{\"395\":1}}],[\"就会在\",{\"1\":{\"339\":1}}],[\"就会从当前作用域里向上层作用域逐级查找\",{\"1\":{\"895\":1}}],[\"就会从异步任务队列中取出已完成的异步任务的回调并将其放入执行栈中继续执行\",{\"1\":{\"375\":1}}],[\"就会从堆栈中弹出\",{\"1\":{\"374\":1}}],[\"就会从数组的最后一项开始检索\",{\"1\":{\"332\":1}}],[\"就会从字符串的前5个字符中进行检索\",{\"1\":{\"524\":1}}],[\"就会从字符串的前\",{\"1\":{\"281\":1}}],[\"就会改变原数组\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"就会围着框\",{\"1\":{\"178\":1}}],[\"就能把它变成一个数组\",{\"1\":{\"286\":1,\"678\":1}}],[\"就能看到对应的结果\",{\"1\":{\"123\":1}}],[\"就能完成\",{\"1\":{\"119\":1}}],[\"接入层\",{\"1\":{\"2220\":1}}],[\"接着恢复执行下一次增量分段\",{\"1\":{\"1650\":1}}],[\"接着我们把这个变量重新赋值了一个数组对象\",{\"1\":{\"1644\":1}}],[\"接着看$mount\",{\"1\":{\"1525\":1}}],[\"接着定义了一个变量\",{\"1\":{\"1338\":1}}],[\"接着就开启\",{\"1\":{\"118\":1}}],[\"接受端也不会分两次去接收\",{\"1\":{\"1731\":1}}],[\"接受邮件\",{\"1\":{\"1715\":1}}],[\"接受\",{\"1\":{\"1696\":1}}],[\"接受过程就是把以上步骤逆转过来\",{\"1\":{\"1693\":1}}],[\"接受者\",{\"1\":{\"1692\":1}}],[\"接受响应\",{\"1\":{\"1676\":1}}],[\"接受两个参数\",{\"1\":{\"1241\":1,\"1265\":1}}],[\"接受数值作为参数\",{\"1\":{\"663\":1}}],[\"接受的参数是一个每项都是promise的数组\",{\"1\":{\"574\":1}}],[\"接受一个回调函数作为参数\",{\"1\":{\"1203\":1}}],[\"接受一个模块\",{\"1\":{\"462\":1}}],[\"接受一个依赖数组和一个回调函数\",{\"1\":{\"462\":1}}],[\"接受四个参数\",{\"1\":{\"284\":1,\"705\":1}}],[\"接受消息的方法\",{\"1\":{\"123\":1}}],[\"接口等\",{\"1\":{\"1940\":1}}],[\"接口分析\",{\"1\":{\"1938\":1}}],[\"接口隔离原则\",{\"1\":{\"1937\":1}}],[\"接口兼容\",{\"1\":{\"1900\":1}}],[\"接口必须和调用构件的\",{\"1\":{\"1900\":1}}],[\"接口封装较好\",{\"1\":{\"1663\":1,\"1667\":1}}],[\"接口扩展类型别名\",{\"0\":{\"1348\":1}}],[\"接口扩展接口\",{\"0\":{\"1346\":1}}],[\"接口可以定义多次\",{\"0\":{\"1344\":1},\"1\":{\"1344\":1}}],[\"接口与类型别名的区别\",{\"0\":{\"1341\":1}}],[\"接口一般首字母大写\",{\"1\":{\"1338\":1}}],[\"接口代理是一个道理\",{\"1\":{\"866\":1}}],[\"接口代理\",{\"0\":{\"864\":1},\"1\":{\"864\":1}}],[\"接口的对象map\",{\"1\":{\"636\":1}}],[\"接口的对象\",{\"0\":{\"636\":1}}],[\"接口的数据结构\",{\"1\":{\"252\":1}}],[\"接口提供有关文件的信息\",{\"1\":{\"390\":1}}],[\"接口\",{\"0\":{\"1338\":1},\"1\":{\"271\":1,\"272\":1,\"1338\":1,\"1692\":1,\"2744\":1},\"2\":{\"1351\":1}}],[\"接下来要发送的是流信息\",{\"1\":{\"1737\":1}}],[\"接下来的字符中\",{\"1\":{\"1029\":1}}],[\"接下来针对上面的代码做一下调整\",{\"1\":{\"569\":1}}],[\"接下来就看看\",{\"1\":{\"569\":1}}],[\"接下来定义\",{\"1\":{\"395\":1}}],[\"接下来是\",{\"1\":{\"360\":1}}],[\"接下来是对\",{\"1\":{\"208\":1}}],[\"接下来使用\",{\"1\":{\"338\":1}}],[\"接下来\",{\"1\":{\"338\":1,\"510\":1,\"817\":1,\"1699\":1}}],[\"接下来我们看个例子\",{\"1\":{\"239\":1}}],[\"接下来我们看个事件冒泡的例子\",{\"1\":{\"234\":1}}],[\"接下来我们来实现上例中父层元素\",{\"1\":{\"237\":1}}],[\"接收用户输入数据\",{\"1\":{\"2031\":1}}],[\"接收者执行请求\",{\"1\":{\"1826\":1}}],[\"接收者receiver\",{\"1\":{\"1826\":1}}],[\"接收命令\",{\"1\":{\"1826\":1}}],[\"接收端⼀次只能接收发送端发出的⼀个数据包\",{\"1\":{\"1731\":1}}],[\"接收端只能接收独⽴的消息\",{\"1\":{\"1731\":1}}],[\"接收方返回一个报文段的肯定回答\",{\"1\":{\"1724\":1}}],[\"接收方使用的是累计确认的机制\",{\"1\":{\"1724\":1}}],[\"接收方将在每一确认中发送一个正的窗口通告\",{\"1\":{\"1723\":1}}],[\"接收方在发送的每一确认中都含有一个窗口通告\",{\"1\":{\"1723\":1}}],[\"接收方发送确认\",{\"1\":{\"1723\":1}}],[\"接收方根据标头信息与自身\",{\"1\":{\"1692\":1}}],[\"接收三个参数\",{\"1\":{\"1273\":1}}],[\"接收\",{\"1\":{\"817\":1}}],[\"接收到的数据最终将充满接收方的缓冲区\",{\"1\":{\"1723\":1}}],[\"接收到\",{\"1\":{\"569\":1}}],[\"接收外部传入参数\",{\"1\":{\"445\":1}}],[\"接收一个视图实例作为参数\",{\"1\":{\"403\":1}}],[\"接收输入文本和一个按钮来执行语音操作\",{\"1\":{\"340\":1}}],[\"接收消息\",{\"1\":{\"128\":1}}],[\"接收消息监听传来的数据\",{\"1\":{\"120\":1}}],[\"接收其他设备传过来的数据\",{\"1\":{\"116\":1}}],[\"后扩充到可移植性\",{\"1\":{\"2011\":1}}],[\"后放⼀些有特征的数据\",{\"1\":{\"1730\":1}}],[\"后来收到了确认\",{\"1\":{\"1727\":1}}],[\"后首先要做的就是配置所有本地存储库中使用的用户信息\",{\"1\":{\"1586\":1}}],[\"后续请求都会自动将\",{\"1\":{\"1659\":1}}],[\"后续源码会揭晓\",{\"1\":{\"1535\":1}}],[\"后续\",{\"1\":{\"1485\":1}}],[\"后立即执行重新渲染\",{\"1\":{\"1201\":1}}],[\"后端\",{\"1\":{\"864\":3}}],[\"后端则不会被限制\",{\"1\":{\"864\":1}}],[\"后端会被同源策略限制\",{\"1\":{\"864\":1}}],[\"后端开启\",{\"1\":{\"860\":1}}],[\"后端代码\",{\"1\":{\"859\":1,\"860\":1,\"865\":1,\"866\":1}}],[\"后端拿到这个方法名\",{\"1\":{\"859\":1}}],[\"后端返回数据\",{\"1\":{\"856\":1}}],[\"后两个数字没有分类的作用\",{\"1\":{\"817\":1}}],[\"后两个参数都是可选的\",{\"1\":{\"286\":1,\"678\":1}}],[\"后置递增操作符\",{\"1\":{\"602\":1}}],[\"后递增\",{\"1\":{\"602\":1}}],[\"后缀版\",{\"1\":{\"602\":1}}],[\"后执行语句\",{\"1\":{\"602\":1}}],[\"后执行的函数会先弹出栈\",{\"1\":{\"374\":1}}],[\"后面我们程序里可能还会用到对象\",{\"1\":{\"1650\":1}}],[\"后面会讲解\",{\"1\":{\"1428\":1}}],[\"后面会介绍\",{\"1\":{\"701\":1}}],[\"后面每次访问都是定位到第一次访问到的服务器\",{\"1\":{\"1153\":1}}],[\"后面不生效\",{\"1\":{\"827\":1}}],[\"后面需要直接跟\",{\"1\":{\"597\":1}}],[\"后面实际是可以接普通函数调用或者直接量的\",{\"1\":{\"595\":1}}],[\"后面可以依次完成链式调用\",{\"1\":{\"569\":1}}],[\"后达成的状态\",{\"1\":{\"563\":2}}],[\"后三个方法返回的是布尔值\",{\"1\":{\"519\":1}}],[\"后者的操作是同步的\",{\"1\":{\"1670\":1}}],[\"后者的数组成员可以是不同的数据类型\",{\"1\":{\"397\":1}}],[\"后者是相应原始类型的包装对象\",{\"1\":{\"1430\":1}}],[\"后者会引发回流\",{\"1\":{\"226\":1}}],[\"后在\",{\"1\":{\"395\":1}}],[\"后不再进行初始化为\",{\"1\":{\"249\":1}}],[\"后\",{\"1\":{\"118\":1,\"240\":1,\"360\":1,\"587\":2,\"829\":1,\"1203\":1,\"1418\":1,\"1650\":1}}],[\"的乘积被解析为以坎德拉\",{\"1\":{\"2856\":1}}],[\"的name\",{\"1\":{\"2760\":1}}],[\"的颜色\",{\"1\":{\"2742\":1}}],[\"的扩展\",{\"1\":{\"2737\":1}}],[\"的透明度\",{\"1\":{\"2642\":1}}],[\"的焦距\",{\"1\":{\"2585\":1}}],[\"的非索引版本\",{\"1\":{\"2322\":1}}],[\"的速度会更快\",{\"1\":{\"2296\":1}}],[\"的自定义数据的对象\",{\"1\":{\"2293\":1}}],[\"的细节信息\",{\"1\":{\"2290\":1}}],[\"的外边界球形\",{\"1\":{\"2284\":1}}],[\"的外边界矩形\",{\"1\":{\"2283\":1}}],[\"的外部设备\",{\"1\":{\"913\":1}}],[\"的名称\",{\"1\":{\"2282\":1}}],[\"的下一代ip协议\",{\"1\":{\"2214\":1}}],[\"的一端传送到另外一端传送到另一端所需的时间\",{\"1\":{\"2201\":1}}],[\"的一个属性\",{\"1\":{\"896\":1}}],[\"的一个方法\",{\"1\":{\"755\":1}}],[\"的一个元素绑定了点击事件的监听函数\",{\"1\":{\"558\":1}}],[\"的一个设计缺陷\",{\"1\":{\"500\":1}}],[\"的一个关键字\",{\"1\":{\"352\":1}}],[\"的一个子类\",{\"1\":{\"328\":1}}],[\"的信任改成了对机器的信任\",{\"1\":{\"2132\":1}}],[\"的过程\",{\"1\":{\"2027\":1}}],[\"的过程中\",{\"1\":{\"1651\":1}}],[\"的基础\",{\"1\":{\"2025\":1}}],[\"的基本概念\",{\"0\":{\"201\":1}}],[\"的哲学\",{\"1\":{\"1900\":1}}],[\"的需要\",{\"1\":{\"1874\":3}}],[\"的压力\",{\"1\":{\"1769\":1}}],[\"的官方状态管理库\",{\"1\":{\"1765\":1}}],[\"的是什么\",{\"1\":{\"1758\":1}}],[\"的工厂可以是小作坊\",{\"1\":{\"1752\":1}}],[\"的工作方式\",{\"1\":{\"1285\":1}}],[\"的事件\",{\"1\":{\"1735\":1}}],[\"的事件处理函数中调用了\",{\"1\":{\"1203\":1}}],[\"的余下的数据\",{\"1\":{\"1730\":1}}],[\"的全部数据\",{\"1\":{\"1730\":1}}],[\"的全部数据和\",{\"1\":{\"1730\":1}}],[\"的全部\",{\"1\":{\"1730\":1}}],[\"的全局方法\",{\"1\":{\"1484\":1}}],[\"的全局变量\",{\"1\":{\"467\":1}}],[\"的部分数据\",{\"1\":{\"1730\":2}}],[\"的连接是全双工的\",{\"1\":{\"1729\":1}}],[\"的可靠传输机制是基于连续\",{\"1\":{\"1724\":1}}],[\"的可选值\",{\"1\":{\"269\":1}}],[\"的包装器\",{\"1\":{\"2835\":1}}],[\"的包\",{\"1\":{\"1717\":1}}],[\"的解析\",{\"1\":{\"1707\":1}}],[\"的解释\",{\"1\":{\"387\":1}}],[\"的错误\",{\"1\":{\"1705\":1}}],[\"的错误打印\",{\"1\":{\"578\":1}}],[\"的默认端口号是\",{\"1\":{\"1677\":1}}],[\"的默认主机是\",{\"1\":{\"1677\":1}}],[\"的储存空间比\",{\"1\":{\"1670\":1}}],[\"的域名和主站的域名分开来解决\",{\"1\":{\"1660\":1}}],[\"的域名如果跟前端域名一样\",{\"1\":{\"860\":1}}],[\"的清理阶段被回收\",{\"1\":{\"1650\":1}}],[\"的时间\",{\"1\":{\"1650\":1,\"2142\":1}}],[\"的时间我们算\",{\"1\":{\"1649\":1}}],[\"的时间过长\",{\"1\":{\"1649\":1}}],[\"的时候就执行\",{\"1\":{\"583\":1}}],[\"的时候也会走到\",{\"1\":{\"321\":1,\"643\":1}}],[\"的时候\",{\"1\":{\"241\":1,\"488\":2,\"1244\":2,\"1646\":1}}],[\"的比例的原因是\",{\"1\":{\"1648\":1}}],[\"的具体实现中\",{\"1\":{\"1648\":1}}],[\"的算法进行垃圾回收\",{\"1\":{\"1648\":1}}],[\"的容量\",{\"1\":{\"1648\":1}}],[\"的空间利用率看起来是最合理\",{\"1\":{\"1646\":1}}],[\"的最小分块\",{\"1\":{\"1646\":1}}],[\"的最大区别是\",{\"1\":{\"1418\":1}}],[\"的块立即返回\",{\"1\":{\"1646\":1}}],[\"的块才能为其分配\",{\"1\":{\"1646\":1}}],[\"的垃圾回收策略主要基于分代式垃圾回收机制\",{\"1\":{\"1648\":1}}],[\"的垃圾\",{\"1\":{\"1646\":1}}],[\"的提示\",{\"1\":{\"1612\":1}}],[\"的提交阶段之后\",{\"1\":{\"1255\":2}}],[\"的注释\",{\"1\":{\"1604\":1}}],[\"的注意事项\",{\"1\":{\"1273\":1}}],[\"的版本库\",{\"1\":{\"1584\":1}}],[\"的版本来确定\",{\"1\":{\"1201\":1}}],[\"的角度来看\",{\"1\":{\"1584\":1}}],[\"的新子文件夹\",{\"1\":{\"1583\":1}}],[\"的新对象\",{\"1\":{\"359\":1}}],[\"的中央服务器\",{\"1\":{\"1580\":1}}],[\"的处理\",{\"1\":{\"1551\":1}}],[\"的映射表来移动老的子节点到前面去\",{\"1\":{\"1478\":1}}],[\"的路径映射的列表\",{\"1\":{\"1454\":1}}],[\"的路径没有后缀\",{\"1\":{\"453\":1}}],[\"的成员\",{\"1\":{\"1443\":1}}],[\"的父类型\",{\"1\":{\"1431\":2}}],[\"的组合跟直接使用\",{\"1\":{\"1429\":1}}],[\"的组件都将重新渲染\",{\"1\":{\"1225\":1}}],[\"的组件上\",{\"1\":{\"1222\":1}}],[\"的集合\",{\"1\":{\"1428\":1}}],[\"的子类型\",{\"1\":{\"1431\":1}}],[\"的子类型或可以赋值给\",{\"1\":{\"1416\":1}}],[\"的子属性\",{\"1\":{\"1340\":1}}],[\"的初始值\",{\"1\":{\"1407\":1}}],[\"的初始值为\",{\"1\":{\"1407\":1}}],[\"的类型就是个\",{\"1\":{\"1460\":1}}],[\"的类型是\",{\"1\":{\"1458\":1}}],[\"的类型是数字或者\",{\"1\":{\"1442\":1}}],[\"的类型既可能是数字\",{\"1\":{\"1443\":1}}],[\"的类型也是\",{\"1\":{\"1442\":1}}],[\"的类型\",{\"1\":{\"1416\":1}}],[\"的类型系统同样也允许将\",{\"1\":{\"1388\":1}}],[\"的类型移除掉\",{\"1\":{\"1378\":1}}],[\"的类型判断是新建一个数组还是对象\",{\"1\":{\"760\":1,\"768\":1}}],[\"的标识\",{\"1\":{\"1373\":1}}],[\"的标准\",{\"1\":{\"1356\":1}}],[\"的标准异步更新机制\",{\"1\":{\"1203\":1}}],[\"的所有可能类型\",{\"1\":{\"1416\":1}}],[\"的所有属性名\",{\"1\":{\"1372\":1}}],[\"的所属组已更改为\",{\"1\":{\"1033\":1}}],[\"的泛型和泛型约束\",{\"1\":{\"1366\":1}}],[\"的形状必须和接口\",{\"1\":{\"1338\":1}}],[\"的形式保存\",{\"1\":{\"1670\":1}}],[\"的形式存在\",{\"1\":{\"1664\":1}}],[\"的形式来满足上述要求\",{\"1\":{\"1340\":1}}],[\"的形式来给它指定一个所在对象\",{\"1\":{\"364\":1}}],[\"的形式藏在代码中\",{\"1\":{\"507\":1}}],[\"的形式\",{\"1\":{\"324\":1}}],[\"的兼容\",{\"1\":{\"1334\":1}}],[\"的响应\",{\"1\":{\"1311\":1}}],[\"的用途\",{\"1\":{\"1308\":1}}],[\"的用武之地\",{\"1\":{\"1203\":1}}],[\"的并发模式中\",{\"1\":{\"1308\":1}}],[\"的设计让它只从首次渲染的时候获取初值\",{\"1\":{\"1286\":1}}],[\"的设计初衷是快速基于其他对象创建新数组\",{\"1\":{\"286\":1,\"678\":1}}],[\"的当前值\",{\"1\":{\"1283\":1}}],[\"的上一次值\",{\"1\":{\"1283\":1}}],[\"的返回对象在组件的整个生命周期中都是持久的\",{\"1\":{\"1279\":1}}],[\"的返回值也是一个\",{\"1\":{\"568\":1}}],[\"的返回值是一个\",{\"1\":{\"567\":1}}],[\"的返回值\",{\"1\":{\"323\":1,\"576\":1}}],[\"的前缀\",{\"1\":{\"1334\":1}}],[\"的前两个参数\",{\"1\":{\"1273\":1}}],[\"的前面\",{\"1\":{\"698\":1}}],[\"的同步行为\",{\"1\":{\"1259\":1}}],[\"的闪动\",{\"1\":{\"1255\":1}}],[\"的旧值\",{\"1\":{\"1236\":1}}],[\"的渲染造成影响\",{\"1\":{\"2744\":1}}],[\"的渲染和提交阶段之后\",{\"1\":{\"1255\":2}}],[\"的渲染\",{\"1\":{\"1236\":1}}],[\"的渲染有两种情况\",{\"1\":{\"1234\":1}}],[\"的机制有关\",{\"1\":{\"1236\":1}}],[\"的效果\",{\"1\":{\"1235\":1,\"2868\":1}}],[\"的效果大打折扣\",{\"1\":{\"1212\":1}}],[\"的无意义更新\",{\"1\":{\"1229\":1}}],[\"的覆盖\",{\"1\":{\"1223\":1}}],[\"的孙组件\",{\"1\":{\"1220\":1}}],[\"的依赖项设计\",{\"1\":{\"1212\":1}}],[\"的依赖\",{\"1\":{\"1212\":1}}],[\"的依赖时\",{\"1\":{\"1212\":1}}],[\"的差异\",{\"0\":{\"1211\":1,\"1233\":1,\"1275\":1}}],[\"的主要用途是在类型上下文中获取变量或者属性的类型\",{\"1\":{\"1365\":1}}],[\"的主要目的是解决这样的问题\",{\"1\":{\"1209\":1}}],[\"的主要特征\",{\"1\":{\"184\":1}}],[\"的更新也是在事件循环中执行的\",{\"1\":{\"1201\":1}}],[\"的更新放在\",{\"1\":{\"1201\":1}}],[\"的更新通常是在事件循环的末尾批量执行的\",{\"1\":{\"1201\":1}}],[\"的正确输出会作为命令\",{\"1\":{\"1087\":1}}],[\"的正文\",{\"1\":{\"436\":1}}],[\"的读\",{\"1\":{\"1040\":3}}],[\"的符号模式表\",{\"1\":{\"1039\":2}}],[\"的拥有者改为\",{\"1\":{\"1036\":1}}],[\"的归档文件\",{\"1\":{\"1025\":2}}],[\"的归档文件中包含的所有文件和目录\",{\"1\":{\"1025\":1}}],[\"的归档文件中\",{\"1\":{\"1025\":2}}],[\"的行\",{\"1\":{\"1016\":2}}],[\"的行为可能有所不同\",{\"1\":{\"1201\":1}}],[\"的行为\",{\"1\":{\"463\":1}}],[\"的格式来显示\",{\"1\":{\"1009\":1}}],[\"的普通文件\",{\"1\":{\"1007\":1}}],[\"的意思\",{\"1\":{\"967\":1}}],[\"的不同版本中\",{\"1\":{\"1201\":1}}],[\"的不同\",{\"0\":{\"909\":1}}],[\"的索引\",{\"1\":{\"902\":1}}],[\"的索引开始搜\",{\"1\":{\"289\":1}}],[\"的变量\",{\"1\":{\"895\":2}}],[\"的后端\",{\"1\":{\"864\":1}}],[\"的转换\",{\"1\":{\"806\":1}}],[\"的情况\",{\"1\":{\"806\":1,\"1478\":1}}],[\"的情况下\",{\"1\":{\"806\":1,\"1273\":1}}],[\"的情况下采用\",{\"1\":{\"465\":1}}],[\"的情况下不会引起错误\",{\"1\":{\"322\":1,\"644\":1}}],[\"的对象\",{\"1\":{\"2830\":1,\"2832\":1}}],[\"的对象了\",{\"1\":{\"1650\":1}}],[\"的对象格式更加严格\",{\"1\":{\"768\":1}}],[\"的对象格式比\",{\"1\":{\"768\":1}}],[\"的对比\",{\"0\":{\"1311\":1}}],[\"的对应\",{\"1\":{\"272\":2}}],[\"的两个函数来实现\",{\"1\":{\"768\":1}}],[\"的两个主要区别如下\",{\"1\":{\"464\":1}}],[\"的之外的索引值\",{\"1\":{\"748\":1}}],[\"的展开运算符\",{\"1\":{\"732\":2,\"737\":1}}],[\"的相加\",{\"1\":{\"731\":1}}],[\"的每个元素转换为字符串\",{\"1\":{\"690\":1}}],[\"的独特之处在于\",{\"1\":{\"680\":1}}],[\"的松散特点\",{\"1\":{\"657\":1}}],[\"的运算结果如下\",{\"1\":{\"607\":1,\"608\":1,\"609\":1}}],[\"的补码如下\",{\"1\":{\"606\":1}}],[\"的反码如下\",{\"1\":{\"606\":1}}],[\"的递增和递减操作符和其他语言基本一致\",{\"1\":{\"602\":1}}],[\"的异常处理\",{\"0\":{\"597\":1}}],[\"的异步编程式通过回调实现的\",{\"1\":{\"556\":1}}],[\"的简写\",{\"1\":{\"594\":1}}],[\"的结点\",{\"1\":{\"2133\":1}}],[\"的结合能够对异步操作产生的效果\",{\"1\":{\"590\":1}}],[\"的结果是object呢\",{\"1\":{\"642\":1}}],[\"的结果\",{\"1\":{\"562\":1,\"1273\":1}}],[\"的编程过程中会遇到很多\",{\"1\":{\"590\":1}}],[\"的编译过程密切相关\",{\"1\":{\"501\":1}}],[\"的关键词\",{\"1\":{\"588\":1}}],[\"的实例\",{\"1\":{\"657\":2,\"1766\":1}}],[\"的实例数组\",{\"1\":{\"582\":1}}],[\"的实际实现\",{\"1\":{\"461\":1}}],[\"的实际应用场景有哪些呢\",{\"1\":{\"414\":1}}],[\"的函数必须是同步的\",{\"1\":{\"1309\":1}}],[\"的函数式更新\",{\"1\":{\"1212\":1}}],[\"的函数\",{\"1\":{\"1212\":1}}],[\"的函数可以做到数组扁平化\",{\"1\":{\"734\":1}}],[\"的函数和新\",{\"1\":{\"581\":1}}],[\"的函数的传参进行合并\",{\"1\":{\"358\":1}}],[\"的了\",{\"1\":{\"577\":1}}],[\"的语法糖\",{\"1\":{\"594\":1,\"597\":1,\"1211\":1}}],[\"的语法及参数跟\",{\"1\":{\"576\":1}}],[\"的语法如下\",{\"1\":{\"403\":1}}],[\"的执行时机\",{\"1\":{\"1265\":1}}],[\"的执行的关键点如下\",{\"1\":{\"587\":1}}],[\"的执行结果\",{\"1\":{\"575\":1}}],[\"的执行仍然是在\",{\"1\":{\"353\":1}}],[\"的作用是用于获得函数的参数类型组成的元组类型\",{\"1\":{\"1382\":1}}],[\"的作用是用来过滤类型中的\",{\"1\":{\"1381\":1}}],[\"的作用是使用\",{\"1\":{\"1380\":1}}],[\"的作用是从\",{\"1\":{\"1379\":1}}],[\"的作用是将某个类型中属于另一个的类型移除掉\",{\"1\":{\"1378\":1}}],[\"的作用是将某个类型所有属性变为只读属性\",{\"1\":{\"1374\":1}}],[\"的作用是将\",{\"1\":{\"1376\":1}}],[\"的作用是立即执行挂起的异步更新\",{\"1\":{\"1203\":1}}],[\"的作用不知局限于缓存数据\",{\"1\":{\"1267\":1}}],[\"的作用域中存在\",{\"1\":{\"901\":1}}],[\"的作用域\",{\"1\":{\"901\":1}}],[\"的作用\",{\"0\":{\"569\":1,\"1256\":1,\"1452\":1}}],[\"的作用范围是整个函数\",{\"1\":{\"507\":1}}],[\"的第二个参数\",{\"1\":{\"1274\":2}}],[\"的第二个函数内\",{\"1\":{\"568\":1}}],[\"的第一个参数用来返回最后累加的结果\",{\"1\":{\"736\":1}}],[\"的第一个参数\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"的创建\",{\"0\":{\"566\":1}}],[\"的概念\",{\"0\":{\"562\":1,\"594\":1}}],[\"的服务器通常要等待客户端通过网络发送请求\",{\"1\":{\"554\":1}}],[\"的开始位置到结尾的字串\",{\"1\":{\"529\":1}}],[\"的取值不在\",{\"1\":{\"517\":1}}],[\"的赋值操作都会直接改变变量环境中的\",{\"1\":{\"507\":1}}],[\"的属性才拷贝\",{\"1\":{\"760\":1,\"768\":1}}],[\"的属性\",{\"1\":{\"731\":1,\"803\":1}}],[\"的属性外\",{\"1\":{\"490\":1}}],[\"的属性和方法都可以用于\",{\"1\":{\"390\":1}}],[\"的属性和方法\",{\"1\":{\"271\":1,\"272\":1}}],[\"的原型上暴露了\",{\"1\":{\"710\":1}}],[\"的原型也就是\",{\"1\":{\"482\":1}}],[\"的原码为\",{\"1\":{\"606\":1}}],[\"的原始值\",{\"1\":{\"389\":1}}],[\"的另一个作用就是进行\",{\"1\":{\"473\":1}}],[\"的浏览器会忽略带有\",{\"1\":{\"473\":1}}],[\"的代码并不会改变\",{\"1\":{\"502\":1}}],[\"的代码会变得难以编写和理解\",{\"1\":{\"467\":1}}],[\"的代码实现如下\",{\"1\":{\"465\":1}}],[\"的特征\",{\"1\":{\"2010\":1}}],[\"的特化\",{\"1\":{\"1208\":1}}],[\"的特点之一是持久\",{\"1\":{\"1665\":1}}],[\"的特点\",{\"0\":{\"565\":1},\"1\":{\"898\":1,\"1267\":1}}],[\"的特点如下\",{\"1\":{\"465\":1}}],[\"的特性了\",{\"1\":{\"1256\":1}}],[\"的特性\",{\"1\":{\"397\":1}}],[\"的模式来处理状态\",{\"1\":{\"1275\":1}}],[\"的模式\",{\"1\":{\"465\":1}}],[\"的文件调用权限分为三级\",{\"1\":{\"1037\":1}}],[\"的文件添加到已存在的名为\",{\"1\":{\"1025\":1}}],[\"的文件中不包含test\",{\"1\":{\"1016\":1}}],[\"的文件列出来\",{\"1\":{\"1007\":1}}],[\"的文件\",{\"1\":{\"463\":2,\"973\":3,\"1007\":2,\"1016\":1,\"1583\":1}}],[\"的入口\",{\"1\":{\"462\":1}}],[\"的加载过程如下\",{\"1\":{\"454\":1}}],[\"的顺序进行补齐查找\",{\"1\":{\"453\":1}}],[\"的缺点就是\",{\"1\":{\"859\":1}}],[\"的缺点之一是它是同步的\",{\"1\":{\"457\":1}}],[\"的缺点\",{\"1\":{\"450\":1,\"460\":1,\"465\":1}}],[\"的优化\",{\"0\":{\"1647\":1}}],[\"的优势\",{\"1\":{\"596\":1,\"1237\":1}}],[\"的优点\",{\"1\":{\"450\":1,\"460\":1,\"465\":1}}],[\"的优先级较低\",{\"1\":{\"1234\":1}}],[\"的优先级\",{\"0\":{\"360\":1}}],[\"的例子是遵循模块模式的\",{\"1\":{\"445\":1}}],[\"的memory面板中打开heap\",{\"1\":{\"437\":1}}],[\"的直接引用\",{\"1\":{\"434\":1}}],[\"的次数\",{\"1\":{\"431\":1}}],[\"的引用数据类型是保存在堆内存中的\",{\"1\":{\"1644\":1}}],[\"的引用指向\",{\"1\":{\"452\":1}}],[\"的引用\",{\"1\":{\"430\":1,\"452\":1,\"1616\":1,\"1653\":1}}],[\"的兴起\",{\"1\":{\"424\":1}}],[\"的url\",{\"1\":{\"413\":1}}],[\"的长度范围内时\",{\"1\":{\"517\":1}}],[\"的长度\",{\"1\":{\"409\":1,\"642\":1}}],[\"的视图实例则返回\",{\"1\":{\"401\":1}}],[\"的字符串\",{\"1\":{\"530\":1}}],[\"的字符串如何被写入\",{\"1\":{\"388\":1}}],[\"的字节副本\",{\"1\":{\"400\":1}}],[\"的内容的差别\",{\"1\":{\"1636\":1}}],[\"的内容不能直接操作\",{\"1\":{\"397\":1}}],[\"的内部\",{\"1\":{\"507\":1}}],[\"的内置功能\",{\"1\":{\"467\":1}}],[\"的内存中\",{\"1\":{\"249\":1}}],[\"的唯一编号\",{\"1\":{\"2287\":1}}],[\"的唯一\",{\"1\":{\"391\":1}}],[\"的输入类型为文件\",{\"1\":{\"391\":1}}],[\"的循环\",{\"1\":{\"383\":1}}],[\"的循环过程\",{\"1\":{\"379\":1}}],[\"的话\",{\"1\":{\"379\":1,\"829\":1}}],[\"的回调函数中\",{\"1\":{\"1201\":1}}],[\"的回调函数中支持\",{\"1\":{\"873\":1}}],[\"的回调返回\",{\"1\":{\"597\":1}}],[\"的回调\",{\"1\":{\"379\":2,\"1209\":1}}],[\"的方块则不会闪\",{\"1\":{\"1255\":1}}],[\"的方块会闪一下\",{\"1\":{\"1255\":1}}],[\"的方括号不能少\",{\"1\":{\"849\":1}}],[\"的方式表示\",{\"1\":{\"2246\":1}}],[\"的方式实现\",{\"1\":{\"902\":1}}],[\"的方式来通信\",{\"1\":{\"867\":1}}],[\"的方式也可以配合\",{\"1\":{\"591\":1}}],[\"的方式一样\",{\"1\":{\"591\":2}}],[\"的方式\",{\"1\":{\"408\":1,\"2011\":1}}],[\"的方式优先级最高\",{\"1\":{\"360\":1}}],[\"的方法中\",{\"1\":{\"2020\":1}}],[\"的方法或使用了如\",{\"1\":{\"1250\":1}}],[\"的方法类似\",{\"1\":{\"823\":1}}],[\"的方法先转换为字符串\",{\"1\":{\"740\":1}}],[\"的方法来借用\",{\"1\":{\"731\":1}}],[\"的方法调用\",{\"1\":{\"261\":1}}],[\"的方法\",{\"1\":{\"261\":1,\"737\":1,\"738\":1,\"1904\":1}}],[\"的显式绑定相对于隐式绑定优先级更高\",{\"1\":{\"360\":1}}],[\"的绑定对象传入\",{\"1\":{\"355\":1}}],[\"的区别仅有一个\",{\"1\":{\"1255\":1}}],[\"的区别如下\",{\"1\":{\"719\":1}}],[\"的区别可以理解为\",{\"1\":{\"452\":1}}],[\"的区别\",{\"1\":{\"355\":1,\"499\":1}}],[\"的使用场景\",{\"1\":{\"1279\":1}}],[\"的使用示例\",{\"1\":{\"1279\":1}}],[\"的使用方法\",{\"1\":{\"723\":1}}],[\"的使用\",{\"1\":{\"334\":1,\"588\":1}}],[\"的状态只能改变一次\",{\"1\":{\"583\":1}}],[\"的状态变为\",{\"1\":{\"582\":1,\"583\":1}}],[\"的状态\",{\"1\":{\"323\":1,\"576\":1,\"1614\":1,\"1726\":2,\"1728\":1}}],[\"的参数是一种安全且性能更好的方式来更新状态\",{\"1\":{\"1194\":1}}],[\"的参数是字符串\",{\"1\":{\"282\":1}}],[\"的参数传递给\",{\"1\":{\"729\":1}}],[\"的参数\",{\"1\":{\"596\":1,\"739\":1,\"1197\":1}}],[\"的参数接受一个\",{\"1\":{\"323\":1}}],[\"的逻辑就会走到\",{\"1\":{\"565\":2}}],[\"的逻辑\",{\"1\":{\"321\":1,\"643\":1}}],[\"的写法存在一定的缺陷\",{\"1\":{\"321\":1,\"643\":1}}],[\"的常见用途是为数值补全指定位数\",{\"1\":{\"293\":1,\"547\":1}}],[\"的误判\",{\"1\":{\"289\":1}}],[\"的绝对值个索引\",{\"1\":{\"289\":1}}],[\"的元素从\",{\"1\":{\"1653\":1}}],[\"的元素会被返回\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"的元素个数\",{\"1\":{\"272\":1}}],[\"的地方开始执行\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"的数值\",{\"1\":{\"1018\":1,\"1021\":1}}],[\"的数据\",{\"1\":{\"862\":1,\"863\":1,\"1730\":1}}],[\"的数据结构\",{\"1\":{\"272\":1}}],[\"的数字追加到\",{\"1\":{\"436\":1}}],[\"的数组元素\",{\"1\":{\"702\":1}}],[\"的数组相同的元素\",{\"1\":{\"311\":1,\"720\":1}}],[\"的数组\",{\"1\":{\"284\":2,\"323\":1,\"576\":1,\"677\":2,\"705\":2}}],[\"的键是一个简单类型的值\",{\"1\":{\"272\":1}}],[\"的键实际上是跟内存地址绑定的\",{\"1\":{\"272\":1}}],[\"的问题\",{\"1\":{\"272\":1,\"490\":1,\"493\":1}}],[\"的指向由对象\",{\"1\":{\"1650\":2}}],[\"的指向又是怎样的呢\",{\"1\":{\"354\":1}}],[\"的指向\",{\"1\":{\"261\":1,\"360\":1}}],[\"的指向在它在定义时已经确定了\",{\"1\":{\"261\":1}}],[\"的重新布局\",{\"1\":{\"226\":1}}],[\"的操作对象\",{\"1\":{\"1087\":1}}],[\"的操作\",{\"1\":{\"224\":1,\"1646\":1}}],[\"的修改引发了\",{\"1\":{\"223\":1}}],[\"的修改导致了样式的变化\",{\"1\":{\"223\":1}}],[\"的等比缩放\",{\"1\":{\"207\":1}}],[\"的宽度为\",{\"1\":{\"207\":1}}],[\"的宽度来设计\",{\"1\":{\"206\":1}}],[\"的宽度了\",{\"1\":{\"201\":1}}],[\"的大小\",{\"1\":{\"206\":1,\"207\":1,\"399\":1}}],[\"的值到当前光源对象中\",{\"1\":{\"2859\":1}}],[\"的值将是相邻顶点值的平滑插值\",{\"1\":{\"2742\":1}}],[\"的值将与\",{\"1\":{\"1234\":1}}],[\"的值之间\",{\"1\":{\"2577\":1}}],[\"的值拷贝到当前\",{\"1\":{\"2301\":1}}],[\"的值占用的内存\",{\"1\":{\"1646\":1}}],[\"的值传递给\",{\"1\":{\"1458\":1}}],[\"的值执行操作时会发生什么\",{\"1\":{\"1418\":1}}],[\"的值却是\",{\"1\":{\"1340\":1}}],[\"的值来启动一个过渡\",{\"1\":{\"1309\":1}}],[\"的值来表示\",{\"1\":{\"206\":1}}],[\"的值应该是原始值\",{\"1\":{\"1236\":1}}],[\"的值相同\",{\"1\":{\"1234\":1}}],[\"的值是从前一次渲染中保持不变的\",{\"1\":{\"1283\":1}}],[\"的值是机器码\",{\"1\":{\"642\":1}}],[\"的值是唯一的\",{\"1\":{\"268\":1}}],[\"的值以\",{\"1\":{\"550\":1}}],[\"的值以常量的方式声明\",{\"1\":{\"269\":1}}],[\"的值了\",{\"1\":{\"510\":1}}],[\"的值已经被设置成了\",{\"1\":{\"510\":2}}],[\"的值并未被销毁\",{\"1\":{\"506\":1}}],[\"的值为\",{\"1\":{\"482\":1,\"550\":1,\"607\":1,\"1407\":3}}],[\"的值等于这个全局对象\",{\"1\":{\"350\":1}}],[\"的值就是\",{\"1\":{\"206\":1,\"505\":1}}],[\"的值\",{\"1\":{\"206\":1,\"207\":1,\"272\":1,\"286\":1,\"354\":1,\"355\":1,\"364\":1,\"365\":1,\"507\":1,\"656\":1,\"678\":1,\"900\":1,\"1200\":1,\"1219\":1,\"1279\":1,\"1285\":1,\"1475\":3,\"1659\":1,\"1726\":2,\"2533\":1,\"2571\":1,\"2744\":1,\"2795\":1}}],[\"的来确定的单位\",{\"1\":{\"206\":1}}],[\"的百分比是相对于自身宽度\",{\"1\":{\"205\":1}}],[\"的百分比\",{\"1\":{\"205\":3}}],[\"的布局区域\",{\"1\":{\"201\":1}}],[\"的触发方式\",{\"1\":{\"184\":1}}],[\"的功能细节的对象\",{\"1\":{\"2795\":1}}],[\"的功能\",{\"1\":{\"119\":1,\"989\":2}}],[\"的\",{\"0\":{\"764\":1},\"1\":{\"118\":1,\"206\":3,\"207\":1,\"240\":1,\"247\":1,\"262\":1,\"312\":1,\"317\":1,\"343\":1,\"350\":1,\"363\":1,\"389\":1,\"391\":1,\"399\":1,\"474\":1,\"484\":2,\"488\":1,\"565\":1,\"581\":6,\"679\":1,\"681\":1,\"698\":1,\"859\":2,\"863\":1,\"895\":1,\"1009\":2,\"1199\":1,\"1225\":1,\"1273\":1,\"1279\":1,\"1287\":1,\"1416\":1,\"1454\":1,\"1560\":2,\"1571\":1,\"1604\":1,\"1650\":1,\"1659\":1,\"1764\":2,\"1765\":1,\"2010\":1,\"2282\":1,\"2286\":1,\"2290\":1,\"2296\":1,\"2320\":1,\"2321\":1,\"2744\":3}}],[\"但会牺牲一些图形精度\",{\"1\":{\"2613\":1}}],[\"但会省略注释和空格\",{\"1\":{\"317\":1}}],[\"但保留了曲线的api\",{\"1\":{\"2415\":1}}],[\"但数据包在交付时只交付给其中一个\",{\"1\":{\"2214\":1}}],[\"但每个段的大小不同\",{\"1\":{\"2162\":1}}],[\"但请求的总数不能超过最大需求量\",{\"1\":{\"2158\":1}}],[\"但验证却很容易\",{\"1\":{\"2133\":1}}],[\"但一个应用服务器故障\",{\"1\":{\"2077\":1}}],[\"但一些\",{\"1\":{\"437\":1}}],[\"但代理服务器可能成为性能瓶颈\",{\"1\":{\"2077\":1}}],[\"但代码可读性更强\",{\"1\":{\"1267\":1}}],[\"但性能较差\",{\"1\":{\"2077\":1}}],[\"但大多数情况下\",{\"1\":{\"2028\":1}}],[\"但却不能对事件通知进行细分管控\",{\"1\":{\"1806\":1}}],[\"但策略可以自由切换\",{\"1\":{\"1787\":1}}],[\"但通过利用单例模式的思想来确保它们的唯一性\",{\"1\":{\"1767\":1}}],[\"但通常情况下\",{\"1\":{\"1201\":1}}],[\"但又有着某种关联或者依赖关系\",{\"1\":{\"1755\":1}}],[\"但因连接请求报文丢失而未收到确认\",{\"1\":{\"1727\":1}}],[\"但因发生请求未满足条件的情况后\",{\"1\":{\"817\":1}}],[\"但要消耗掉一个序号\",{\"1\":{\"1726\":1}}],[\"但要清楚\",{\"1\":{\"595\":1}}],[\"但还未收到确认的报文段\",{\"1\":{\"1724\":1}}],[\"但对准确性要求相对高的场景\",{\"1\":{\"1715\":1}}],[\"但对于静态文件的请求\",{\"1\":{\"1660\":1}}],[\"但对于引用类型的数据\",{\"1\":{\"247\":1}}],[\"但同样也是并发回收实现的难点\",{\"1\":{\"1651\":1}}],[\"但使用引用计数则不会被清理\",{\"1\":{\"1646\":1}}],[\"但仍然希望保留在当前工作目录中\",{\"1\":{\"1613\":1}}],[\"但可同时从总线接收数据\",{\"1\":{\"2184\":1}}],[\"但可以有一个备份服务器\",{\"1\":{\"1580\":1}}],[\"但可能该对象参数中已经有这个属性了\",{\"1\":{\"270\":1}}],[\"但静态类型对运行时的逻辑无能为力\",{\"1\":{\"1443\":1}}],[\"但总能使进程在有限的时间里得到资源\",{\"1\":{\"2158\":1}}],[\"但总是会在请求耗时的\",{\"1\":{\"1311\":1}}],[\"但总体上代码仍然是同步求值的\",{\"1\":{\"594\":1}}],[\"但当涉及到复杂的状态逻辑和中间件时\",{\"1\":{\"1275\":1}}],[\"但我们可以模拟中间件的效果\",{\"1\":{\"1275\":1}}],[\"但如果设计不当\",{\"1\":{\"2156\":1}}],[\"但如果\",{\"1\":{\"1707\":1}}],[\"但如果你需要基于传入的参数来决定初始化逻辑或者想确保性能最优的做法\",{\"1\":{\"1274\":1}}],[\"但如果是按下p呢\",{\"1\":{\"1063\":1}}],[\"但有时候也需要设置单独的加载器\",{\"1\":{\"2461\":1}}],[\"但有时您可能需要单独设置加载管理器\",{\"1\":{\"2454\":1}}],[\"但有时\",{\"1\":{\"1269\":1}}],[\"但其他以外的人则不可写入\",{\"1\":{\"1041\":1}}],[\"但其包含了递归的过程\",{\"1\":{\"590\":1}}],[\"但仅回报更改的部分\",{\"1\":{\"1032\":1}}],[\"但按照原来文件的顺序来显示不同处\",{\"1\":{\"1009\":1}}],[\"但只有当第二个目录包含了一个第一个目录所没有的文件时\",{\"1\":{\"1009\":1}}],[\"但只有一个参数\",{\"1\":{\"464\":1}}],[\"但只对非空行进行编号\",{\"1\":{\"983\":1}}],[\"但没有资源返回\",{\"1\":{\"817\":1}}],[\"但尚未接收到响应\",{\"1\":{\"817\":1}}],[\"但尚未调用\",{\"1\":{\"817\":1}}],[\"但实际上切分之后会造成更多的小块\",{\"1\":{\"1646\":1}}],[\"但实际上返回原始操作数的值\",{\"1\":{\"795\":1}}],[\"但实际上这是两个值\",{\"1\":{\"272\":1}}],[\"但也不一定\",{\"1\":{\"689\":1}}],[\"但跟其他语言不同的是\",{\"1\":{\"674\":1}}],[\"但注册到了不同的\",{\"1\":{\"581\":1}}],[\"但与all不同的是\",{\"1\":{\"574\":1}}],[\"但此时还未进行词法绑定\",{\"1\":{\"511\":1}}],[\"但问题是\",{\"1\":{\"486\":1}}],[\"但不能模拟具有镜面高光的光泽表面\",{\"1\":{\"2593\":1}}],[\"但不损害国家安全\",{\"1\":{\"2111\":1}}],[\"但不损害国家安全社会秩序和公共利益\",{\"1\":{\"2111\":1}}],[\"但不可控\",{\"1\":{\"2077\":1}}],[\"但不是⽂件那么⼤\",{\"1\":{\"1730\":1}}],[\"但不希望在组件首次加载时显示这个通知\",{\"1\":{\"1251\":1}}],[\"但不会产生自身阴影或是接受阴影\",{\"1\":{\"2695\":1}}],[\"但不会比较其中子目录\",{\"1\":{\"1008\":1}}],[\"但不会删除单击\",{\"1\":{\"436\":1}}],[\"但不接受参数\",{\"1\":{\"1003\":1}}],[\"但不占用实际空间\",{\"1\":{\"1002\":1}}],[\"但不列出\",{\"1\":{\"972\":1}}],[\"但不包括不可枚举的属性\",{\"1\":{\"885\":1}}],[\"但不包括结束处的字符\",{\"1\":{\"528\":1,\"530\":1}}],[\"但不需要返回表达式的计算结果\",{\"1\":{\"646\":1}}],[\"但不代表设备一定就收到了\",{\"1\":{\"125\":1}}],[\"但它所依赖的软件设计方法不再是功能分解\",{\"1\":{\"2028\":1}}],[\"但它的作用仅是方便交换修改\",{\"1\":{\"1580\":1}}],[\"但它的大小可能会无限增长\",{\"1\":{\"431\":1}}],[\"但它只能赋值给\",{\"1\":{\"1418\":1}}],[\"但它们在实现和使用上有几个主要的区别\",{\"1\":{\"1275\":1}}],[\"但它们区别很大\",{\"1\":{\"1274\":1}}],[\"但它们是阻塞的\",{\"1\":{\"1237\":1}}],[\"但它是异步的\",{\"1\":{\"1255\":1}}],[\"但它能返回不可枚举的属性\",{\"1\":{\"883\":1}}],[\"但它在timer阶段执行\",{\"1\":{\"382\":1}}],[\"但闭包将保持变量的引用和活动状态\",{\"1\":{\"431\":1}}],[\"但为了提高性能\",{\"1\":{\"413\":1}}],[\"但在其他方面完全透明\",{\"1\":{\"2775\":1}}],[\"但在这之前\",{\"1\":{\"1684\":1}}],[\"但在第\",{\"1\":{\"1430\":1}}],[\"但在浏览器实际绘制屏幕之前\",{\"1\":{\"1255\":2}}],[\"但在使用\",{\"1\":{\"898\":1}}],[\"但在经典\",{\"1\":{\"467\":1}}],[\"但在不再使用时\",{\"1\":{\"429\":1}}],[\"但在\",{\"1\":{\"383\":1}}],[\"但在获取\",{\"1\":{\"322\":1,\"644\":1}}],[\"但在视口总宽度中的占比是不变的\",{\"1\":{\"206\":1}}],[\"但\",{\"1\":{\"272\":1,\"289\":1,\"312\":1,\"658\":1,\"1217\":1,\"1577\":1,\"1601\":1}}],[\"但是当每帧有多个渲染通道时\",{\"1\":{\"2800\":1}}],[\"但是通常意义上的ai芯片指的是针对人工智能算法做了特殊加速设计的芯片\",{\"1\":{\"2180\":1}}],[\"但是通过闭包\",{\"1\":{\"900\":1}}],[\"但是通过使用\",{\"1\":{\"736\":1}}],[\"但是子类的方法具体实现规则是可变的\",{\"1\":{\"1829\":1}}],[\"但是并不知道请求的接收者是谁\",{\"1\":{\"1826\":1}}],[\"但是关闭连接时\",{\"1\":{\"1729\":1}}],[\"但是第一个丢失的报文段只是在某些网络结点长时间滞留了\",{\"1\":{\"1727\":1}}],[\"但是接下去并不执行慢开始算法\",{\"1\":{\"1722\":1}}],[\"但是因为\",{\"1\":{\"1729\":1}}],[\"但是因为无法判定\",{\"1\":{\"1720\":1}}],[\"但是因为有了变量提升\",{\"1\":{\"503\":1}}],[\"但是出现偶尔断续不是太大问题\",{\"1\":{\"1715\":1}}],[\"但是速度可以相对慢\",{\"1\":{\"1715\":1}}],[\"但是优点也很明显\",{\"1\":{\"1712\":1}}],[\"但是udp因为没有拥塞控制\",{\"1\":{\"1712\":1}}],[\"但是目前它是黑色\",{\"1\":{\"1650\":1}}],[\"但是还没开发完\",{\"1\":{\"1601\":1}}],[\"但是还存在问题\",{\"1\":{\"763\":1}}],[\"但是我们并不关注这些\",{\"1\":{\"1644\":1}}],[\"但是我们想一下此时如果\",{\"1\":{\"1534\":1}}],[\"但是我们不想在页面中添加这些没有意义的冗余元素\",{\"1\":{\"183\":1}}],[\"但是存在el属性\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"但是新的有儿子\",{\"1\":{\"1476\":1}}],[\"但是不进行特殊的数据检查和解构\",{\"1\":{\"1443\":1}}],[\"但是不能使用表达式和变量来进行导入\",{\"1\":{\"275\":1}}],[\"但是假如后来有一天你的同事修改了\",{\"1\":{\"1416\":1}}],[\"但是语法不同\",{\"1\":{\"1342\":1}}],[\"但是可能里面有null\",{\"1\":{\"1478\":1}}],[\"但是可以作用于原始值\",{\"1\":{\"1341\":1}}],[\"但是可以使用\",{\"1\":{\"268\":1,\"725\":1}}],[\"但是可选属性\",{\"1\":{\"1340\":1}}],[\"但是＄\",{\"1\":{\"1089\":1}}],[\"但是除了更新现有的文件外\",{\"1\":{\"1018\":1}}],[\"但是最终都会转为布尔值\",{\"1\":{\"889\":1}}],[\"但是后端\",{\"1\":{\"864\":1}}],[\"但是需要\",{\"1\":{\"861\":1}}],[\"但是需要进行一些相关的\",{\"1\":{\"208\":1}}],[\"但是使用解构赋值会让代码变得更简单和易读\",{\"1\":{\"836\":1}}],[\"但是代码看起来比较冗余\",{\"1\":{\"836\":1}}],[\"但是如果短时间内客户端的⽹络情况不好\",{\"1\":{\"1730\":1}}],[\"但是如果是多条消息\",{\"1\":{\"1730\":1}}],[\"但是如果我们改变了a里面的第二层数组的值\",{\"1\":{\"1563\":1}}],[\"但是如果一个数组里面有上千上万个元素\",{\"1\":{\"1534\":1}}],[\"但是如果数字前面有字符\",{\"1\":{\"797\":1}}],[\"但是如果属性都是基本类型的值\",{\"1\":{\"756\":1}}],[\"但是都只能转换为三种类型\",{\"1\":{\"772\":1}}],[\"但是循环引用的问题依然存在\",{\"1\":{\"766\":1}}],[\"但是同上面的\",{\"1\":{\"765\":1}}],[\"但是基本都可以满足多个参数实现累加的效果\",{\"1\":{\"732\":1}}],[\"但是又和数组比较类似\",{\"1\":{\"721\":1}}],[\"但是字符串\",{\"1\":{\"698\":1}}],[\"但是对系统生效的环境变量和变量作用是固定的\",{\"1\":{\"1099\":1}}],[\"但是对于\",{\"1\":{\"662\":1}}],[\"但是对外是无效的\",{\"1\":{\"469\":1}}],[\"但是对外无效\",{\"1\":{\"274\":1}}],[\"但是注意\",{\"1\":{\"662\":1}}],[\"但是浏览器把这两个类保护起来了\",{\"1\":{\"657\":1}}],[\"但是减法操作符只能用于数值的计算\",{\"1\":{\"617\":1}}],[\"但是位操作并不直接应用到\",{\"1\":{\"606\":1}}],[\"但是then的链式调⽤也会带来额外的理解负担\",{\"1\":{\"596\":1}}],[\"但是一旦执行完成拿到返回值\",{\"1\":{\"555\":1}}],[\"但是有时代码很复杂\",{\"1\":{\"503\":1}}],[\"但是有一些约定的扩展名\",{\"1\":{\"909\":1}}],[\"但是有一定的局限性\",{\"1\":{\"334\":1}}],[\"但是有一个比较厉害的插件\",{\"1\":{\"208\":1}}],[\"但是也会出现引用数据类型\",{\"1\":{\"490\":1}}],[\"但是这\",{\"1\":{\"1649\":1}}],[\"但是这两个类型不兼容\",{\"1\":{\"1402\":1}}],[\"但是这也会出现一个问题\",{\"1\":{\"766\":1}}],[\"但是这个代码看起来会清晰得多\",{\"1\":{\"596\":1}}],[\"但是这里又增加了一个新问题\",{\"1\":{\"488\":1}}],[\"但是这样计算和百分比方案计算比较类似\",{\"1\":{\"208\":1}}],[\"但是没有收集依赖\",{\"1\":{\"1563\":1}}],[\"但是没有类型是\",{\"1\":{\"1416\":1}}],[\"但是没有找到\",{\"1\":{\"463\":1}}],[\"但是没有依赖项\",{\"1\":{\"463\":1}}],[\"但是在某些特定的场景下这两者还是存在很大区别\",{\"1\":{\"1341\":1}}],[\"但是在线程上同时只能执行一个协程\",{\"1\":{\"589\":1}}],[\"但是在开发中使用最多的还是加操作符+\",{\"1\":{\"525\":1}}],[\"但是在\",{\"1\":{\"506\":1}}],[\"但是在赋值给\",{\"1\":{\"353\":1}}],[\"但是在移动端是不一样的\",{\"1\":{\"200\":1}}],[\"但是\",{\"1\":{\"321\":1,\"334\":1,\"355\":1,\"425\":1,\"432\":1,\"578\":2,\"596\":1,\"643\":1,\"807\":1,\"859\":1,\"1195\":1,\"1220\":1,\"1370\":1,\"1372\":1,\"1436\":1,\"1646\":1,\"1724\":1,\"1737\":2,\"1753\":1,\"2226\":1,\"2767\":1}}],[\"但是宽松相等\",{\"1\":{\"320\":1}}],[\"但是很多时候\",{\"1\":{\"318\":1}}],[\"但是它返回指定的值\",{\"1\":{\"536\":1}}],[\"但是它只能作用于数组\",{\"1\":{\"301\":1}}],[\"但是它的键值的范围不限于字符串\",{\"1\":{\"272\":1}}],[\"但是成员的值都是唯一的\",{\"1\":{\"271\":1}}],[\"但是由于每个小的增量标记之间执行了\",{\"1\":{\"1650\":1}}],[\"但是由于多人协同办公\",{\"1\":{\"1649\":1}}],[\"但是由于箭头函数时没有自己的\",{\"1\":{\"262\":1}}],[\"但是由于\",{\"1\":{\"207\":1,\"500\":1,\"657\":1,\"768\":1}}],[\"但是为了兼容\",{\"1\":{\"184\":1}}],[\"但这里有一个微妙之处\",{\"1\":{\"1283\":1}}],[\"但这种做法仍然会造成不必要的性能损耗\",{\"1\":{\"1286\":1}}],[\"但这种写法大大地提高了代码的质量\",{\"1\":{\"565\":1}}],[\"但这种办法有个缺陷\",{\"1\":{\"184\":1}}],[\"但这么说并不准确\",{\"1\":{\"500\":1}}],[\"但这样也并非完美\",{\"1\":{\"269\":1}}],[\"但这是蓝牙设备那边控制的\",{\"1\":{\"125\":1}}],[\"但这个方法比较耗费系统资源\",{\"1\":{\"118\":1}}],[\"但发送的值要转成\",{\"1\":{\"125\":1}}],[\"但根据文档提示\",{\"1\":{\"119\":1}}],[\"但初学的话我们只关注\",{\"1\":{\"118\":1}}],[\"停止\",{\"0\":{\"1145\":1}}],[\"停止或者编写一些程序\",{\"1\":{\"1077\":1}}],[\"停止复制的索引位置\",{\"1\":{\"685\":1}}],[\"停止填充位置\",{\"1\":{\"287\":1,\"684\":1}}],[\"停止失败\",{\"1\":{\"119\":1,\"127\":1}}],[\"停止成功\",{\"1\":{\"119\":1,\"127\":1}}],[\"停止搜索设备失败\",{\"1\":{\"128\":1}}],[\"停止搜索设备成功\",{\"1\":{\"128\":1}}],[\"停止搜索\",{\"1\":{\"119\":3,\"127\":2}}],[\"停止继续搜索\",{\"1\":{\"118\":1}}],[\"停止观察\",{\"1\":{\"87\":1}}],[\"步骤\",{\"1\":{\"1849\":1}}],[\"步骤五\",{\"1\":{\"864\":1,\"866\":1}}],[\"步骤四\",{\"1\":{\"864\":1,\"866\":1}}],[\"步骤三\",{\"1\":{\"864\":1,\"866\":1}}],[\"步骤二\",{\"1\":{\"864\":1,\"866\":1}}],[\"步骤一\",{\"1\":{\"864\":1,\"866\":1}}],[\"步骤3开始\",{\"1\":{\"383\":1}}],[\"步骤如下\",{\"1\":{\"120\":1}}],[\"步\",{\"1\":{\"118\":1}}],[\"配合来实现上面的效果\",{\"1\":{\"591\":1}}],[\"配合着\",{\"1\":{\"588\":1}}],[\"配合\",{\"1\":{\"588\":2}}],[\"配合完成\",{\"1\":{\"118\":1}}],[\"配套的\",{\"1\":{\"295\":1}}],[\"配置管理工具\",{\"1\":{\"1962\":1}}],[\"配置与变更管理\",{\"1\":{\"1902\":1}}],[\"配置值位于用户的主目录中\",{\"1\":{\"1586\":1}}],[\"配置文件缓存\",{\"1\":{\"1762\":1}}],[\"配置文件及说明文档等文件变更的管理\",{\"1\":{\"1578\":1}}],[\"配置文件\",{\"0\":{\"936\":1},\"1\":{\"909\":1,\"1115\":1}}],[\"配置中的属性的介绍\",{\"1\":{\"208\":1}}],[\"配置body\",{\"1\":{\"193\":2}}],[\"配置cros中间件\",{\"1\":{\"192\":1}}],[\"配置cros\",{\"1\":{\"192\":1}}],[\"配置\",{\"0\":{\"103\":1,\"1333\":1,\"1508\":1},\"1\":{\"208\":1,\"1120\":1,\"1153\":2,\"1332\":2}}],[\"配置有新引入的依赖改为true\",{\"1\":{\"39\":1}}],[\"个顶点\",{\"1\":{\"2744\":1}}],[\"个人的加载器的不应具有类似上面类似的命名函数\",{\"1\":{\"2455\":1}}],[\"个人向政府反馈民意\",{\"1\":{\"1869\":1}}],[\"个人应向政府缴纳的各种税款和费用\",{\"1\":{\"1869\":1}}],[\"个辅助线程和主线程一块干活\",{\"1\":{\"1649\":1}}],[\"个存储\",{\"1\":{\"1601\":1}}],[\"个就是负载均衡\",{\"1\":{\"1153\":1}}],[\"个或任意字符\",{\"1\":{\"1088\":1}}],[\"个权限位来控制\",{\"1\":{\"1040\":1}}],[\"个状态值\",{\"1\":{\"817\":1}}],[\"个迭代方法\",{\"1\":{\"711\":1}}],[\"个用于检索数组内容的方法\",{\"1\":{\"710\":1}}],[\"个严格相等的搜索方法\",{\"1\":{\"708\":1}}],[\"个判断全部为\",{\"1\":{\"681\":1}}],[\"个时\",{\"1\":{\"678\":1}}],[\"个新的方法\",{\"1\":{\"478\":1}}],[\"个属性\",{\"1\":{\"464\":1}}],[\"个元素的\",{\"1\":{\"403\":1}}],[\"个对象\",{\"1\":{\"403\":1}}],[\"个构造函数\",{\"1\":{\"397\":1}}],[\"个字符来确定\",{\"1\":{\"1029\":1}}],[\"个字符\",{\"1\":{\"993\":1,\"1091\":1}}],[\"个字符中进行检索\",{\"1\":{\"281\":1}}],[\"个字节生成一个新的\",{\"1\":{\"400\":1}}],[\"个字节\",{\"1\":{\"388\":1}}],[\"个阶段\",{\"1\":{\"379\":1}}],[\"个微任务让宏任务的执行时间延长了\",{\"1\":{\"376\":1}}],[\"个微任务的时间就是\",{\"1\":{\"376\":1}}],[\"个微任务\",{\"1\":{\"376\":1}}],[\"个参数\",{\"1\":{\"286\":1,\"458\":1,\"464\":1,\"678\":1}}],[\"个点击事件\",{\"1\":{\"231\":1}}],[\"个级别\",{\"1\":{\"230\":1}}],[\"个方法都是一摸一样的\",{\"1\":{\"478\":1}}],[\"个方法\",{\"1\":{\"124\":1,\"678\":1,\"686\":1,\"1511\":2}}],[\"个特征值\",{\"1\":{\"122\":1}}],[\"个\",{\"1\":{\"118\":1,\"119\":1,\"205\":1,\"903\":1,\"1244\":1}}],[\"搜索替换\",{\"0\":{\"1062\":1}}],[\"搜索替换等\",{\"0\":{\"1060\":1}}],[\"搜索联想\",{\"1\":{\"829\":1}}],[\"搜索和位置方法\",{\"0\":{\"707\":1}}],[\"搜索引擎是怎么工作的呢\",{\"1\":{\"217\":1}}],[\"搜索引擎优化\",{\"1\":{\"217\":1}}],[\"搜索引擎解析\",{\"1\":{\"215\":1}}],[\"搜索中\",{\"1\":{\"128\":1}}],[\"搜索附近蓝牙设备<\",{\"1\":{\"127\":1}}],[\"搜索附近设备\",{\"0\":{\"118\":1},\"1\":{\"119\":1}}],[\"搜索到的所有设备\",{\"1\":{\"128\":1}}],[\"搜索到的设备会返回以下数据\",{\"1\":{\"118\":1}}],[\"搜索到的蓝牙设备列表\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"搜索失败\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"搜寻vbird\",{\"1\":{\"1062\":1}}],[\"搜寻\",{\"1\":{\"116\":1}}],[\"开放性\",{\"1\":{\"2132\":1}}],[\"开放系统互连安全体系结构\",{\"0\":{\"2123\":1}}],[\"开放\",{\"1\":{\"1937\":1}}],[\"开放式源码\",{\"1\":{\"1904\":1}}],[\"开源高性能\",{\"1\":{\"1641\":1}}],[\"开机启动\",{\"1\":{\"1137\":1}}],[\"开头的所有tag\",{\"1\":{\"1617\":1}}],[\"开头的行代表注释\",{\"1\":{\"1089\":1}}],[\"开头的隐藏文件也会列出\",{\"1\":{\"972\":1}}],[\"开头的八进制\",{\"1\":{\"663\":1}}],[\"开头\",{\"1\":{\"550\":1}}],[\"开发工具\",{\"1\":{\"2180\":1}}],[\"开发过程\",{\"0\":{\"1975\":1}}],[\"开发信息库工具\",{\"1\":{\"1962\":1}}],[\"开发人员与用户之间能够准确而清晰地交流\",{\"1\":{\"1923\":1}}],[\"开发人员可以继续在本地提交代码\",{\"1\":{\"1581\":1}}],[\"开发小组不进行传统的模块测试\",{\"1\":{\"1906\":1}}],[\"开发经理\",{\"1\":{\"1904\":1}}],[\"开发剩余构件和应用程序功能\",{\"1\":{\"1901\":1}}],[\"开发文档规范化\",{\"1\":{\"1858\":1}}],[\"开发目标清晰化\",{\"1\":{\"1858\":1}}],[\"开发阶段\",{\"1\":{\"1854\":1}}],[\"开发环境\",{\"1\":{\"1332\":1}}],[\"开发技术\",{\"1\":{\"812\":1}}],[\"开发体验更好\",{\"1\":{\"569\":1}}],[\"开发者更容易开发和维护代码\",{\"1\":{\"442\":1}}],[\"开发时\",{\"1\":{\"322\":1}}],[\"开发中需要问硬件佬获取该id\",{\"1\":{\"127\":1}}],[\"开发蓝牙相关功能时\",{\"1\":{\"118\":1}}],[\"开始调整到适合大小\",{\"1\":{\"2845\":1}}],[\"开始为0\",{\"1\":{\"2680\":1}}],[\"开始扫描文件\",{\"1\":{\"1823\":1}}],[\"开始渲染百度地图\",{\"1\":{\"1780\":1}}],[\"开始渲染腾讯地图\",{\"1\":{\"1780\":1}}],[\"开始标签\",{\"1\":{\"1704\":1}}],[\"开始匹配属性\",{\"1\":{\"1550\":1}}],[\"开始自动增长\",{\"1\":{\"1407\":1}}],[\"开始缩减\",{\"1\":{\"877\":1}}],[\"开始与结束索引的计算方法和\",{\"1\":{\"685\":1}}],[\"开始的时候不要发送大量数据\",{\"1\":{\"1719\":1}}],[\"开始的\",{\"1\":{\"680\":1}}],[\"开始执行\",{\"1\":{\"383\":1,\"877\":1,\"903\":1}}],[\"开始填充位置\",{\"1\":{\"287\":1,\"684\":1}}],[\"开始索引用于指定开始填充的位置\",{\"1\":{\"287\":1,\"684\":1}}],[\"开始\",{\"1\":{\"249\":1,\"284\":1,\"403\":1,\"474\":1,\"705\":1,\"937\":1,\"2741\":2}}],[\"开始监听\",{\"1\":{\"128\":2}}],[\"开始搜素附近设备失败\",{\"1\":{\"128\":1}}],[\"开始搜素附近设备成功\",{\"1\":{\"128\":1}}],[\"开始搜寻附近设备\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"开始搜索蓝牙\",{\"1\":{\"128\":1}}],[\"开始搜索附近蓝牙\",{\"1\":{\"128\":1}}],[\"开始搜索\",{\"1\":{\"118\":2,\"119\":1,\"127\":1}}],[\"开始和结束的代码\",{\"1\":{\"20\":1,\"63\":1}}],[\"开启多个辅助线程\",{\"1\":{\"1649\":1}}],[\"开启mysql服务\",{\"1\":{\"1472\":1}}],[\"开启usetransition\",{\"1\":{\"1236\":1}}],[\"开启cors\",{\"1\":{\"864\":1}}],[\"开启了如下规则\",{\"1\":{\"250\":1}}],[\"开启消息监听<\",{\"1\":{\"127\":1}}],[\"开启消息监听并接收消息监听传来的数据\",{\"0\":{\"123\":1}}],[\"开启消息监听\",{\"1\":{\"120\":1,\"123\":2,\"127\":1}}],[\"开启监听回调\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"开启监听功能\",{\"1\":{\"116\":1}}],[\"开启搜索\",{\"1\":{\"118\":1}}],[\"开启搜寻功能\",{\"1\":{\"118\":1}}],[\"监听到\",{\"1\":{\"1534\":1}}],[\"监听到的内容\",{\"1\":{\"127\":3}}],[\"监听不由\",{\"1\":{\"1290\":1}}],[\"监听端口\",{\"1\":{\"1153\":1}}],[\"监听滚动事件判断是否到页面底部自动加载更多\",{\"1\":{\"829\":1}}],[\"监听上述事件\",{\"1\":{\"395\":1}}],[\"监听蓝牙适配器状态变化事件\",{\"1\":{\"128\":1}}],[\"监听失败\",{\"1\":{\"127\":1}}],[\"监听对应的特征值\",{\"1\":{\"127\":1}}],[\"监听指定的服务\",{\"1\":{\"127\":1}}],[\"监听消息变化\",{\"1\":{\"123\":1,\"127\":1}}],[\"监听寻找到新设备的事件\",{\"1\":{\"118\":1}}],[\"监听新设备\",{\"1\":{\"118\":1}}],[\"监听搜寻到新设备\",{\"1\":{\"118\":1}}],[\"监听\",{\"0\":{\"120\":1},\"1\":{\"116\":1,\"126\":1}}],[\"打通企业间\",{\"1\":{\"1879\":1}}],[\"打通供应链\",{\"1\":{\"1868\":1}}],[\"打标记也无非打与不打两种情况\",{\"1\":{\"1646\":1}}],[\"打印所有元素\",{\"1\":{\"1110\":1}}],[\"打印第2个元素\",{\"1\":{\"1110\":1}}],[\"打印当前购物车的商品总金额\",{\"1\":{\"455\":1}}],[\"打印\",{\"1\":{\"436\":2,\"455\":1}}],[\"打印和清除\",{\"1\":{\"436\":1}}],[\"打印结果如下\",{\"1\":{\"409\":1,\"410\":1,\"723\":1}}],[\"打印出来的是\",{\"1\":{\"1370\":1}}],[\"打印出来的不是新值\",{\"1\":{\"1273\":1}}],[\"打印出来的值就是\",{\"1\":{\"507\":1}}],[\"打印出11\",{\"1\":{\"567\":1}}],[\"打印出\",{\"1\":{\"376\":5}}],[\"打开蓝牙\",{\"1\":{\"128\":1}}],[\"打开蓝牙模块\",{\"1\":{\"116\":1}}],[\"打包规则的配置\",{\"1\":{\"1332\":1}}],[\"打包规则及相关插件都隐藏到了\",{\"1\":{\"1332\":1}}],[\"打包中需要的一些路径管理\",{\"1\":{\"1332\":1}}],[\"打包到一个名为\",{\"1\":{\"1025\":1}}],[\"打包\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1,\"1025\":1}}],[\"你必须在你的场景中加入\",{\"1\":{\"2872\":1}}],[\"你不需要自己声明它们\",{\"1\":{\"2743\":1}}],[\"你将需要调用\",{\"1\":{\"2531\":1,\"2569\":1}}],[\"你所想要的或许是一个\",{\"1\":{\"2510\":1}}],[\"你发的fin报文我收到了\",{\"1\":{\"1729\":1}}],[\"你从来没有在浏览器看过类似\",{\"1\":{\"1705\":1}}],[\"你会比\",{\"1\":{\"1443\":1}}],[\"你只能使用\",{\"1\":{\"2742\":1}}],[\"你只能为它赋予\",{\"1\":{\"1415\":1}}],[\"你只需要在\",{\"1\":{\"1268\":1}}],[\"你才能将更新包装进\",{\"1\":{\"1309\":1}}],[\"你实际上告诉\",{\"1\":{\"1308\":1}}],[\"你在\",{\"1\":{\"1273\":1}}],[\"你在大数据量场景下做查询\",{\"1\":{\"1235\":1}}],[\"你需要做的仅仅是像下面这样将它加页面里去\",{\"1\":{\"2797\":1}}],[\"你需要使用该方法来添加\",{\"1\":{\"2296\":1}}],[\"你需要使用一个箭头函数来\",{\"1\":{\"1303\":1}}],[\"你需要读取元素的大小或位置并在渲染前进行调整\",{\"1\":{\"1259\":1}}],[\"你需要重新拉取代码\",{\"1\":{\"104\":1}}],[\"你应该在组件卸载前取消它们\",{\"1\":{\"1249\":1}}],[\"你应该清除它\",{\"1\":{\"1246\":1}}],[\"你都是在传递一个新的\",{\"1\":{\"1236\":1}}],[\"你有一个\",{\"1\":{\"1209\":1}}],[\"你使用回调函数的方式进行连续的状态更新\",{\"1\":{\"1197\":1}}],[\"你可以选择性的为你的管理器设置\",{\"1\":{\"2455\":1}}],[\"你可以通过\",{\"1\":{\"2282\":1}}],[\"你可以创建一个包含全局常量的对象\",{\"1\":{\"1767\":1}}],[\"你可以创建一个包含全局方法的对象\",{\"1\":{\"1767\":1}}],[\"你可以使用\",{\"1\":{\"2743\":1}}],[\"你可以使用库如\",{\"1\":{\"1764\":1}}],[\"你可以使用以下非常暴力的方案\",{\"1\":{\"1366\":1}}],[\"你可以在\",{\"1\":{\"1309\":1}}],[\"你可以中断或延后这个次要更新\",{\"1\":{\"1308\":1}}],[\"你可以将函数作为状态存储\",{\"1\":{\"1303\":1}}],[\"你可以为应用中的不同部分使用不同的\",{\"1\":{\"1228\":1}}],[\"你可以有\",{\"1\":{\"1227\":1}}],[\"你可以传递一个回调函数作为第二个参数\",{\"1\":{\"1195\":1}}],[\"你可能想要在将来的某个时间点执行函数\",{\"1\":{\"1303\":1}}],[\"你可能希望在状态中存储这些回调函数\",{\"1\":{\"1303\":1}}],[\"你可能希望在一个地方处理所有转换\",{\"1\":{\"806\":1}}],[\"你可能有一个组件\",{\"1\":{\"1303\":1}}],[\"你可能需要基于组件的某些属性或状态动态创建函数\",{\"1\":{\"1303\":1}}],[\"你可能需要知道\",{\"1\":{\"1283\":1}}],[\"你可能需要在组件中保存某些值\",{\"1\":{\"1282\":1}}],[\"你可能需要在组件卸载时清理或还原某些操作\",{\"1\":{\"1250\":1}}],[\"你可能会在组件加载时建立一个连接\",{\"1\":{\"1248\":1}}],[\"你可能会问\",{\"1\":{\"895\":1}}],[\"你可能会发现\",{\"1\":{\"467\":1}}],[\"你也可以访问到最初的函数引用\",{\"1\":{\"1303\":1}}],[\"你也可以根据\",{\"1\":{\"323\":1,\"576\":1}}],[\"你也可以在\",{\"1\":{\"118\":1}}],[\"你也拿人家没办法\",{\"1\":{\"125\":1}}],[\"你作为前端佬\",{\"1\":{\"125\":1}}],[\"你的设备可能不止一条特征值\",{\"1\":{\"122\":1}}],[\"你的提交信息\",{\"1\":{\"9\":1,\"52\":1}}],[\"注入shader的自定义对象\",{\"1\":{\"2650\":1}}],[\"注入到数组中的每一个\",{\"1\":{\"583\":1}}],[\"注释\",{\"0\":{\"1153\":1}}],[\"注销时生效的环境变量配置文件\",{\"0\":{\"1123\":1}}],[\"注\",{\"1\":{\"976\":1,\"2201\":1,\"2208\":1}}],[\"注意不是人力资源管理\",{\"1\":{\"1875\":1}}],[\"注意需要使用\",{\"1\":{\"1626\":1}}],[\"注意在\",{\"1\":{\"1416\":1}}],[\"注意静态方法里面的this指向的是类本身\",{\"1\":{\"1391\":1}}],[\"注意事项\",{\"0\":{\"1236\":1},\"1\":{\"2872\":1}}],[\"注意这里的空依赖数组\",{\"1\":{\"1212\":1}}],[\"注意路径要对应\",{\"1\":{\"1137\":1}}],[\"注意点\",{\"1\":{\"855\":1}}],[\"注意观察这个错误的堆栈\",{\"1\":{\"578\":1}}],[\"注意的是\",{\"1\":{\"326\":1}}],[\"注意\",{\"1\":{\"104\":1,\"254\":1,\"274\":1,\"275\":1,\"277\":1,\"284\":1,\"286\":1,\"289\":1,\"295\":1,\"305\":1,\"309\":1,\"320\":1,\"353\":1,\"379\":1,\"383\":2,\"388\":1,\"390\":1,\"392\":1,\"393\":1,\"448\":1,\"453\":1,\"469\":1,\"501\":1,\"519\":1,\"528\":1,\"530\":2,\"535\":1,\"536\":1,\"537\":1,\"539\":1,\"581\":1,\"595\":1,\"636\":1,\"678\":1,\"695\":1,\"705\":1,\"719\":1,\"724\":1,\"755\":1,\"795\":1,\"816\":1,\"821\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"881\":1,\"882\":1,\"885\":1,\"896\":1,\"999\":1,\"1294\":1,\"1583\":1,\"1609\":1,\"1614\":1,\"1631\":1,\"1707\":1,\"2510\":1,\"2520\":1,\"2742\":1,\"2744\":1,\"2760\":1}}],[\"注册的监听子组件内触发的事件\",{\"1\":{\"1510\":1,\"1521\":1}}],[\"注册的回调方法是数组中的某一个\",{\"1\":{\"583\":1}}],[\"注册为系统服务后\",{\"1\":{\"1137\":1}}],[\"注册为系统服务\",{\"0\":{\"1137\":1}}],[\"注册事件\",{\"1\":{\"864\":1,\"866\":1}}],[\"注册完成后开始执行构造函数中的异步事件\",{\"1\":{\"581\":1}}],[\"注册了回调函数\",{\"1\":{\"558\":1}}],[\"注册自定义指令\",{\"1\":{\"88\":1}}],[\"注册指令\",{\"0\":{\"88\":1}}],[\"最近已成为许多3d应用程序的标准\",{\"1\":{\"2717\":1}}],[\"最晚截止期调度算法\",{\"1\":{\"2190\":1}}],[\"最早截止期调度算法\",{\"1\":{\"2190\":1}}],[\"最频繁的部分核心程序作为评估计算机系统性能的标准程序\",{\"1\":{\"2170\":1}}],[\"最短寻道时间优先\",{\"0\":{\"2145\":1}}],[\"最少连接数算法\",{\"1\":{\"2077\":1}}],[\"最少知识原则\",{\"1\":{\"1937\":1}}],[\"最少知识原则的\",{\"1\":{\"1788\":1}}],[\"最迟开始与完成日期\",{\"1\":{\"1955\":1}}],[\"最适合描述在多个逻辑条件取值的组合所构成的复杂情况下\",{\"1\":{\"1939\":1}}],[\"最基础的信息系统\",{\"1\":{\"1863\":1}}],[\"最基本的功能就是能够存储变量当中的值\",{\"1\":{\"895\":1}}],[\"最快速度按质完成\",{\"1\":{\"1850\":1}}],[\"最底部\",{\"1\":{\"1707\":1}}],[\"最初关注可修改性\",{\"1\":{\"2011\":1}}],[\"最初所有的对象都是白色\",{\"1\":{\"1650\":1}}],[\"最初是为小型浏览器脚本设计的\",{\"1\":{\"445\":1}}],[\"最坏情况是每次都要遍历到最后\",{\"1\":{\"1646\":1}}],[\"最新的gpu峰值性能可高达100tflops以上\",{\"1\":{\"2179\":1}}],[\"最新的文件在最前面\",{\"1\":{\"972\":1}}],[\"最新state\",{\"1\":{\"1196\":1}}],[\"最直接的表现就是新增的\",{\"1\":{\"898\":1}}],[\"最常用的创建数组的方式就是数组字面量\",{\"1\":{\"676\":1}}],[\"最常见的就是在函数中使用的\",{\"1\":{\"723\":1}}],[\"最常见的\",{\"1\":{\"147\":1,\"1695\":1}}],[\"最准确最常用的方式\",{\"1\":{\"659\":1}}],[\"最高位为符号位\",{\"1\":{\"609\":1}}],[\"最高位1表示负数\",{\"1\":{\"609\":1}}],[\"最简单的用法\",{\"1\":{\"1243\":1}}],[\"最简单的操作符\",{\"1\":{\"601\":1}}],[\"最简单的设计\",{\"1\":{\"501\":1}}],[\"最先输出\",{\"1\":{\"595\":1}}],[\"最重要的是\",{\"1\":{\"589\":1}}],[\"最优化\",{\"1\":{\"1849\":1}}],[\"最优管理和最优控制的目的\",{\"1\":{\"1843\":1}}],[\"最优设计\",{\"1\":{\"1843\":1}}],[\"最优\",{\"0\":{\"494\":1}}],[\"最顶层的类\",{\"1\":{\"482\":1}}],[\"最终需要把tempalte模板转化成render函数\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"最终都会调用\",{\"1\":{\"1511\":1}}],[\"最终实现的效果就是将\",{\"1\":{\"1378\":1}}],[\"最终导致\",{\"1\":{\"1197\":1}}],[\"最终执行的是declare\",{\"1\":{\"1111\":1}}],[\"最终执行上下文如图所示\",{\"1\":{\"510\":1}}],[\"最终计算为一个值\",{\"1\":{\"877\":1}}],[\"最终的结果就为真\",{\"1\":{\"625\":1}}],[\"最终的三个输出结果\",{\"1\":{\"354\":1}}],[\"最终结果才会返回真\",{\"1\":{\"624\":1}}],[\"最终只生成了一个变量\",{\"1\":{\"507\":1}}],[\"最终还是调用\",{\"1\":{\"354\":1}}],[\"最终生成的是一个包含若干个\",{\"1\":{\"286\":1,\"678\":1}}],[\"最大并发连接数\",{\"1\":{\"2171\":1}}],[\"最大并发数\",{\"1\":{\"1153\":1}}],[\"最大地利用信息资源以满足全社会的信息需求\",{\"1\":{\"1871\":1}}],[\"最大段生存期\",{\"1\":{\"1729\":1}}],[\"最大的数据段大小取决于mss\",{\"1\":{\"1713\":1}}],[\"最大的特点就是懒加载\",{\"1\":{\"464\":1}}],[\"最大不能超过\",{\"1\":{\"677\":1}}],[\"最大安全整数\",{\"1\":{\"320\":1}}],[\"最大行长度\",{\"1\":{\"23\":1,\"66\":1}}],[\"最好直接使用\",{\"1\":{\"739\":1}}],[\"最好使用自定义模式重置\",{\"1\":{\"2800\":1}}],[\"最好使用\",{\"1\":{\"184\":1}}],[\"最好全局将autocrlf设置为false\",{\"1\":{\"104\":1}}],[\"最后得到一份逻辑网络设计文档\",{\"1\":{\"2217\":1}}],[\"最后确认\",{\"1\":{\"1728\":1}}],[\"最后进行角色互换\",{\"1\":{\"1648\":1}}],[\"最后清理掉边界的内存\",{\"1\":{\"1646\":1}}],[\"最后降级采用settimeout\",{\"1\":{\"1542\":1}}],[\"最后使用vm\",{\"1\":{\"1526\":1}}],[\"最后使用定制化的函数去完成想要实现的功能\",{\"1\":{\"590\":1}}],[\"最后老的子节点有多的就删掉\",{\"1\":{\"1478\":1}}],[\"最后利用\",{\"1\":{\"1366\":1}}],[\"最后一次挥手中\",{\"1\":{\"1729\":1}}],[\"最后一次执行的命令的返回状态\",{\"1\":{\"1105\":1}}],[\"最后一次调用会执行\",{\"1\":{\"828\":1}}],[\"最后来看一个常见的和闭包相关的循环输出问题\",{\"1\":{\"903\":1}}],[\"最后产生了闭包\",{\"1\":{\"901\":1}}],[\"最后可以拿到\",{\"1\":{\"900\":1}}],[\"最后呈现在页面上\",{\"1\":{\"822\":1}}],[\"最后小李跟领导汇报工作\",{\"1\":{\"813\":1}}],[\"最后通过命令行\",{\"1\":{\"866\":1}}],[\"最后通过\",{\"1\":{\"740\":1,\"1372\":1}}],[\"最后再利用\",{\"1\":{\"740\":1}}],[\"最后再来看看暂时性死区的概念\",{\"1\":{\"511\":1}}],[\"最后都又通过数组的\",{\"1\":{\"731\":1}}],[\"最后都会被提到作用域的顶端\",{\"1\":{\"500\":1}}],[\"最后这一部分的一些操作符在平时的开发中就很实用了\",{\"1\":{\"629\":1}}],[\"最后返回处理后的结果\",{\"1\":{\"740\":1}}],[\"最后返回原数组\",{\"1\":{\"737\":1}}],[\"最后返回的结果是扁平化的结果\",{\"1\":{\"735\":1}}],[\"最后返回的是什么\",{\"1\":{\"724\":1}}],[\"最后返回的是每个参数的最终状态\",{\"1\":{\"323\":1,\"576\":1}}],[\"最后返回的是一个数组\",{\"1\":{\"323\":1,\"576\":1}}],[\"最后返回预期的结果\",{\"1\":{\"731\":1}}],[\"最后返回一个对象\",{\"1\":{\"587\":1}}],[\"最后就返回这个\",{\"1\":{\"577\":1}}],[\"最后统一导出这些变量\",{\"1\":{\"469\":1}}],[\"最后\",{\"1\":{\"445\":1,\"577\":1,\"1646\":1}}],[\"最后是\",{\"1\":{\"360\":1}}],[\"最后会输出\",{\"1\":{\"354\":1}}],[\"最后振动\",{\"1\":{\"342\":1}}],[\"最后将节点连接至媒体源\",{\"1\":{\"338\":1}}],[\"最后将16进制转换为ascii码\",{\"1\":{\"123\":1}}],[\"最后只打印了\",{\"1\":{\"240\":1}}],[\"最后到达目标元素\",{\"1\":{\"234\":1}}],[\"最后根据特征值进行消息监听\",{\"1\":{\"120\":1}}],[\"罪魁祸首是git的一个配置属性\",{\"1\":{\"102\":1}}],[\"下来\",{\"1\":{\"2265\":1}}],[\"下读上写\",{\"0\":{\"2117\":1}}],[\"下所有请求都会携带cookie\",{\"1\":{\"1660\":1}}],[\"下所有文件中包含字符串\",{\"1\":{\"1016\":1}}],[\"下次自动登录\",{\"1\":{\"1658\":1}}],[\"下列示例演示了这一方法\",{\"1\":{\"2597\":1}}],[\"下列案例阐述了假如\",{\"1\":{\"1200\":1}}],[\"下列三个setstate执行完后\",{\"1\":{\"1197\":1}}],[\"下列三行最后执行结果是\",{\"1\":{\"1197\":1}}],[\"下划线\",{\"1\":{\"1057\":1}}],[\"下划线来分割数字\",{\"1\":{\"327\":1}}],[\"下翻页\",{\"1\":{\"1057\":1}}],[\"下一次访问该网站的时候\",{\"1\":{\"1663\":1}}],[\"下一次循环\",{\"1\":{\"766\":1}}],[\"下一步就是执行vm\",{\"1\":{\"1526\":1}}],[\"下一行\",{\"1\":{\"989\":1}}],[\"下一个正常逻辑\",{\"1\":{\"578\":1}}],[\"下午1\",{\"1\":{\"689\":1}}],[\"下图是chrome浏览器的架构图\",{\"1\":{\"371\":1}}],[\"下的所有文件复制到新目录newtest下\",{\"1\":{\"999\":1}}],[\"下的程序不能直接在\",{\"1\":{\"909\":1}}],[\"下的\",{\"1\":{\"237\":1}}],[\"下面显示了如何使用\",{\"1\":{\"2462\":1}}],[\"下面的配置均为写入系统级别\",{\"1\":{\"1586\":1}}],[\"下面的任务依赖上个任务的请求结果\",{\"1\":{\"569\":1}}],[\"下面类似\",{\"1\":{\"1442\":1}}],[\"下面我们看一个具体的示例\",{\"1\":{\"1430\":1}}],[\"下面我们通过一个具体示例来理解一下\",{\"1\":{\"1365\":1}}],[\"下面我们介绍一下一些常见泛型变量代表的意思\",{\"1\":{\"1363\":1}}],[\"下面我们就来看看常用的\",{\"1\":{\"700\":1}}],[\"下面看⼀个例⼦\",{\"1\":{\"1730\":1}}],[\"下面看一个过度优化的例子\",{\"1\":{\"1269\":1}}],[\"下面看看这个\",{\"1\":{\"723\":1}}],[\"下面这个图很好的诠释了整个流程\",{\"1\":{\"1687\":1}}],[\"下面这来看看这几个概念\",{\"1\":{\"895\":1}}],[\"下面这些常见的操作会触发隐式地类型转换\",{\"1\":{\"774\":1}}],[\"下面再来看看数组的扁平化\",{\"1\":{\"734\":1}}],[\"下面以文件操作的代码为例\",{\"1\":{\"590\":1}}],[\"下面先来看看\",{\"1\":{\"772\":1}}],[\"下面先来看看同步和异步的概念\",{\"1\":{\"555\":1}}],[\"下面先来了解一下什么是\",{\"1\":{\"590\":1}}],[\"下面对上面\",{\"1\":{\"577\":1}}],[\"下面从执行上下文的角度来看看原因\",{\"1\":{\"508\":1}}],[\"下面用\",{\"1\":{\"507\":1}}],[\"下面在全局作用域中声明一个num\",{\"1\":{\"500\":1}}],[\"下面在控制台测试一下上面定义的模块\",{\"1\":{\"455\":1}}],[\"下面给出一个例子\",{\"1\":{\"463\":1}}],[\"下面\",{\"1\":{\"379\":1}}],[\"下面来\",{\"1\":{\"724\":1}}],[\"下面来进行封装\",{\"1\":{\"590\":1}}],[\"下面来综合看看\",{\"1\":{\"568\":1}}],[\"下面来把\",{\"1\":{\"507\":1}}],[\"下面来更新一下\",{\"1\":{\"463\":1}}],[\"下面来定义一个名为\",{\"1\":{\"463\":1}}],[\"下面来导入这个模块\",{\"1\":{\"455\":1}}],[\"下面来重写\",{\"1\":{\"455\":1}}],[\"下面来在控制台执行以下代码\",{\"1\":{\"455\":1}}],[\"下面来分别看一下\",{\"1\":{\"403\":1}}],[\"下面来修改一下这个例子\",{\"1\":{\"395\":1}}],[\"下面来给\",{\"1\":{\"391\":1}}],[\"下面来通过一个例子来体会事件循环\",{\"1\":{\"376\":1}}],[\"下面来看常用的数据类型检测的方法\",{\"1\":{\"681\":1}}],[\"下面来看效果\",{\"1\":{\"569\":1}}],[\"下面来看一些常见的分支操作\",{\"1\":{\"1592\":1}}],[\"下面来看一下全局作用域\",{\"1\":{\"896\":1}}],[\"下面来看一段代码\",{\"1\":{\"569\":1}}],[\"下面来看一个购物车的例子\",{\"1\":{\"455\":1}}],[\"下面来看一个简单的聊天应用\",{\"1\":{\"343\":1}}],[\"下面来看一个简单的例子\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"388\":1,\"392\":1,\"395\":1}}],[\"下面来看一个常见的例子\",{\"1\":{\"339\":1}}],[\"下面来看一个例子\",{\"1\":{\"338\":1,\"354\":1,\"411\":1,\"413\":1,\"464\":1,\"555\":1,\"565\":1,\"595\":1}}],[\"下面来看看如何创建一个附注标签\",{\"1\":{\"1618\":1}}],[\"下面来看看闭包的表现形式及应用场景\",{\"1\":{\"902\":1}}],[\"下面来看看块级作用域\",{\"1\":{\"898\":1}}],[\"下面来看看对象类型的转化\",{\"1\":{\"804\":1}}],[\"下面来看看实现\",{\"1\":{\"734\":1}}],[\"下面来看看它们的用法吧\",{\"1\":{\"629\":1}}],[\"下面来看看常见的三种布尔操作符\",{\"1\":{\"622\":1}}],[\"下面来看看async函数返回了什么\",{\"1\":{\"594\":1}}],[\"下面来看看多个\",{\"1\":{\"588\":1}}],[\"下面来看看另一种操作\",{\"1\":{\"408\":1}}],[\"下面来看看\",{\"1\":{\"397\":1,\"402\":1,\"507\":1}}],[\"下面来看打印结果\",{\"1\":{\"388\":1}}],[\"下面来看下这六个阶段都做了哪些事\",{\"1\":{\"379\":1}}],[\"下面来看例子\",{\"1\":{\"360\":1,\"389\":1,\"575\":1}}],[\"下面是将对象转化为布尔值\",{\"1\":{\"806\":1}}],[\"下面是垃圾收集器根到对象的引用链示例\",{\"1\":{\"425\":1}}],[\"下面是\",{\"1\":{\"387\":1,\"463\":1}}],[\"下面是判断\",{\"1\":{\"360\":1}}],[\"下面是引用了一个执行转码的方法\",{\"1\":{\"94\":1}}],[\"下面初始化了politicalchannel\",{\"1\":{\"343\":1}}],[\"下面就再来看看从数组开头删除和添加元素的方法\",{\"1\":{\"694\":1}}],[\"下面就分别来看看这两个方法\",{\"1\":{\"691\":1,\"697\":1,\"704\":1}}],[\"下面就分别来看看不同类型数据的解构方式\",{\"1\":{\"251\":1}}],[\"下面就分别来看一下这\",{\"1\":{\"686\":1}}],[\"下面就分别来看一下这两个方法\",{\"1\":{\"683\":1}}],[\"下面就先来看看一元操作符\",{\"1\":{\"601\":1}}],[\"下面就先来看看这两个概念\",{\"1\":{\"372\":1}}],[\"下面就来简单看一下\",{\"1\":{\"717\":1}}],[\"下面就来介绍几个异步编程的重要特性\",{\"1\":{\"554\":1}}],[\"下面就来看一下什么是类数组\",{\"1\":{\"721\":1}}],[\"下面就来看一些不常见但很实用的\",{\"1\":{\"337\":1}}],[\"下面就来看看什么是解构赋值\",{\"1\":{\"836\":1}}],[\"下面就来看看什么是变量提升和暂时性死区\",{\"1\":{\"499\":1}}],[\"下面就来看看常见的不同形式的基于回调的异步编程\",{\"1\":{\"556\":1}}],[\"下面就来看看常用的格式之间是如何转换的\",{\"1\":{\"415\":1}}],[\"下面就来看看\",{\"1\":{\"424\":1,\"461\":1}}],[\"下面就来看看它们都是如何使用的\",{\"1\":{\"386\":1}}],[\"下面就来看看这些情况\",{\"1\":{\"361\":1}}],[\"下面就来看看执行上下文的相关概念\",{\"1\":{\"349\":1}}],[\"下面使用\",{\"1\":{\"323\":1,\"576\":1}}],[\"下面着重讲解下第四个特点\",{\"1\":{\"178\":1}}],[\"下载脚手架\",{\"0\":{\"46\":1}}],[\"下载项目\",{\"0\":{\"3\":1}}],[\"仿宋\",{\"1\":{\"94\":8}}],[\"懒加载\",{\"2\":{\"91\":1}}],[\"自治性\",{\"1\":{\"2132\":1}}],[\"自主安全规则\",{\"1\":{\"2117\":1}}],[\"自底向上\",{\"1\":{\"1859\":1}}],[\"自顶向下\",{\"1\":{\"1858\":1}}],[\"自顶向下规划原则\",{\"1\":{\"1856\":1}}],[\"自我管理\",{\"1\":{\"1762\":1}}],[\"自此他就一直在维护这个项目\",{\"1\":{\"1577\":1}}],[\"自己的特殊逻辑放在子类中重写父类的逻辑\",{\"1\":{\"1389\":1}}],[\"自己就接着做其他事情\",{\"1\":{\"813\":1}}],[\"自反\",{\"1\":{\"656\":1}}],[\"自反性\",{\"1\":{\"610\":1}}],[\"自身实现的\",{\"1\":{\"371\":1}}],[\"自适应\",{\"1\":{\"200\":1}}],[\"自动切换\",{\"1\":{\"2212\":1}}],[\"自动分配\",{\"1\":{\"2210\":1}}],[\"自动化交付工具\",{\"1\":{\"2053\":1}}],[\"自动化技术\",{\"1\":{\"1877\":1}}],[\"自动离开\",{\"1\":{\"989\":1}}],[\"自动转换为字符串\",{\"0\":{\"668\":1}}],[\"自动转换为数值\",{\"0\":{\"667\":1}}],[\"自动转换为布尔值\",{\"0\":{\"666\":1}}],[\"自动转换\",{\"0\":{\"665\":1},\"1\":{\"669\":1}}],[\"自动进行调用\",{\"1\":{\"543\":1}}],[\"自动连接\",{\"1\":{\"128\":1}}],[\"自动连接设备\",{\"1\":{\"128\":1}}],[\"自动连接设备后要执行的操作\",{\"1\":{\"128\":1}}],[\"自动引入element\",{\"1\":{\"39\":1}}],[\"自动引入依赖\",{\"0\":{\"39\":1}}],[\"自定义类型保护\",{\"0\":{\"1438\":1}}],[\"自定义\",{\"0\":{\"2744\":1},\"1\":{\"1104\":1,\"2744\":2}}],[\"自定义环境变量\",{\"0\":{\"1100\":1}}],[\"自定义变量会在当前的\",{\"1\":{\"1099\":1}}],[\"自定义appid\",{\"1\":{\"108\":2}}],[\"自定义指令\",{\"0\":{\"87\":1},\"1\":{\"1551\":1}}],[\">注册<\",{\"1\":{\"1839\":1}}],[\">vebsocket\",{\"1\":{\"1737\":1}}],[\">vibrate<\",{\"1\":{\"342\":1}}],[\">长轮询>短轮询\",{\"1\":{\"1737\":1}}],[\">状态都会产生变化\",{\"1\":{\"1704\":1}}],[\">`\",{\"1\":{\"1550\":1}}],[\">hello<\",{\"1\":{\"1547\":1}}],[\">hello\",{\"1\":{\"1475\":1,\"1483\":1,\"1490\":1,\"1539\":1,\"1556\":1,\"1568\":1}}],[\">0\",{\"1\":{\"1334\":1}}],[\">我是页眉<\",{\"1\":{\"1315\":1}}],[\">我是页脚<\",{\"1\":{\"1315\":1}}],[\">focus\",{\"1\":{\"1281\":2}}],[\">increment<\",{\"1\":{\"1287\":1}}],[\">increase<\",{\"1\":{\"1251\":1,\"1269\":1}}],[\">init<\",{\"1\":{\"338\":1}}],[\">右按钮<\",{\"1\":{\"1244\":1}}],[\">左按钮<\",{\"1\":{\"1244\":1}}],[\">点击我<\",{\"1\":{\"1243\":1}}],[\">delete<\",{\"1\":{\"1210\":1}}],[\">+1<\",{\"1\":{\"1197\":2,\"1274\":2}}],[\">+<\",{\"1\":{\"83\":1,\"1273\":2}}],[\">改变文本<\",{\"1\":{\"1196\":1,\"1200\":1,\"1204\":1}}],[\">react<\",{\"1\":{\"1161\":1,\"1176\":1,\"1185\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\">>性能会受影响\",{\"1\":{\"1534\":1}}],[\">>=\",{\"1\":{\"638\":1}}],[\">>>=\",{\"1\":{\"638\":1}}],[\">>>\",{\"0\":{\"614\":1},\"1\":{\"614\":1}}],[\">>2\",{\"1\":{\"613\":1}}],[\">>\",{\"0\":{\"613\":1},\"1\":{\"584\":7,\"606\":1,\"613\":1,\"984\":2}}],[\">about<\",{\"1\":{\"1312\":1}}],[\">add\",{\"1\":{\"1212\":1}}],[\">a\",{\"1\":{\"467\":1}}],[\">清除<\",{\"1\":{\"436\":1}}],[\">打印<\",{\"1\":{\"436\":1}}],[\">send\",{\"1\":{\"343\":1}}],[\">stop<\",{\"1\":{\"338\":1}}],[\">open\",{\"1\":{\"343\":1}}],[\">get\",{\"1\":{\"341\":1}}],[\">tap\",{\"1\":{\"340\":2}}],[\">toogle\",{\"1\":{\"339\":1}}],[\">pause<\",{\"1\":{\"338\":1}}],[\">play<\",{\"1\":{\"338\":1}}],[\">contact<\",{\"1\":{\"1312\":1}}],[\">count里边读personlist<\",{\"1\":{\"83\":1}}],[\">click\",{\"1\":{\"240\":1,\"1286\":2}}],[\">=\",{\"0\":{\"778\":1},\"1\":{\"239\":1,\"320\":1,\"628\":1,\"774\":1,\"807\":1,\"860\":1,\"890\":1,\"1550\":1}}],[\">链接<\",{\"1\":{\"239\":3}}],[\"><br\",{\"1\":{\"395\":1,\"413\":1,\"414\":1}}],[\"><span><i>me<\",{\"1\":{\"343\":1}}],[\"><span><i>\",{\"1\":{\"343\":1}}],[\"><\",{\"1\":{\"234\":1,\"241\":1,\"338\":4,\"339\":1,\"340\":2,\"341\":4,\"342\":1,\"343\":1,\"392\":1,\"462\":1,\"473\":2,\"859\":3,\"861\":1,\"862\":1,\"863\":1,\"867\":1,\"1288\":1,\"1289\":1,\"1315\":1,\"1320\":2,\"1323\":2,\"1324\":2}}],[\">7\",{\"1\":{\"127\":1}}],[\">6\",{\"1\":{\"127\":1}}],[\">5\",{\"1\":{\"127\":1}}],[\">4\",{\"1\":{\"127\":1}}],[\">3\",{\"1\":{\"127\":1}}],[\">3<\",{\"1\":{\"83\":1}}],[\">2\",{\"1\":{\"127\":1}}],[\">2<\",{\"1\":{\"83\":1}}],[\">123123<\",{\"1\":{\"172\":1}}],[\">1\",{\"1\":{\"127\":1}}],[\">读取数据<\",{\"1\":{\"126\":1}}],[\">发送数据<\",{\"1\":{\"125\":1}}],[\">开启消息监听<\",{\"1\":{\"123\":1}}],[\">获取特征值<\",{\"1\":{\"122\":1}}],[\">获取蓝牙服务<\",{\"1\":{\"121\":1}}],[\">搜索附近蓝牙设备<\",{\"1\":{\"118\":1,\"119\":1}}],[\">初始化蓝牙<\",{\"1\":{\"117\":1,\"118\":1,\"119\":1}}],[\">等1秒再加<\",{\"1\":{\"83\":1}}],[\">当前求和为奇数再加<\",{\"1\":{\"83\":1}}],[\">\",{\"0\":{\"778\":1},\"1\":{\"83\":4,\"89\":1,\"118\":2,\"119\":2,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":5,\"172\":1,\"202\":1,\"206\":2,\"234\":1,\"236\":1,\"239\":2,\"241\":3,\"285\":1,\"320\":3,\"338\":4,\"339\":4,\"340\":8,\"341\":4,\"342\":5,\"343\":8,\"345\":2,\"360\":3,\"383\":3,\"391\":1,\"395\":3,\"413\":2,\"414\":2,\"436\":1,\"467\":3,\"471\":1,\"473\":1,\"518\":1,\"564\":2,\"628\":1,\"637\":1,\"653\":1,\"698\":1,\"709\":2,\"714\":1,\"715\":1,\"716\":1,\"774\":1,\"778\":4,\"806\":10,\"807\":1,\"828\":1,\"862\":1,\"867\":2,\"875\":1,\"876\":2,\"878\":2,\"983\":2,\"984\":3,\"1153\":1,\"1157\":2,\"1161\":3,\"1162\":3,\"1163\":1,\"1167\":8,\"1168\":8,\"1175\":2,\"1176\":3,\"1177\":3,\"1178\":1,\"1182\":2,\"1185\":3,\"1186\":3,\"1187\":1,\"1200\":1,\"1204\":1,\"1210\":1,\"1211\":2,\"1212\":2,\"1218\":1,\"1220\":3,\"1222\":6,\"1223\":3,\"1227\":4,\"1229\":2,\"1235\":6,\"1236\":2,\"1244\":1,\"1255\":5,\"1256\":8,\"1265\":4,\"1267\":9,\"1273\":2,\"1274\":4,\"1281\":4,\"1283\":1,\"1285\":1,\"1287\":1,\"1289\":1,\"1299\":2,\"1300\":2,\"1311\":8,\"1312\":6,\"1315\":7,\"1320\":8,\"1321\":9,\"1323\":8,\"1324\":9,\"1332\":3,\"1365\":1,\"1367\":1,\"1372\":1,\"1375\":1,\"1378\":2,\"1379\":1,\"1380\":1,\"1443\":2,\"1476\":4,\"1550\":2,\"1551\":1,\"1719\":1,\"1817\":1,\"1839\":4,\"2039\":3}}],[\"学习成本高\",{\"1\":{\"460\":1}}],[\"学习\",{\"1\":{\"83\":1,\"2208\":1}}],[\"韩\",{\"1\":{\"83\":1}}],[\"+1\",{\"1\":{\"1728\":2}}],[\"+1m\",{\"1\":{\"1007\":1}}],[\"+3\",{\"1\":{\"1299\":2,\"1300\":2}}],[\"+new\",{\"1\":{\"1176\":1,\"1185\":1}}],[\"+num\",{\"1\":{\"986\":1}}],[\"+e\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"+号左右两侧必须有空格\",{\"1\":{\"1113\":1}}],[\"+readonly\",{\"1\":{\"1371\":1}}],[\"+r\",{\"1\":{\"1063\":1}}],[\"+表示增加权限\",{\"1\":{\"1038\":1}}],[\"+7\",{\"1\":{\"1007\":2}}],[\"+20\",{\"1\":{\"987\":1,\"993\":1,\"1007\":1}}],[\"+linenum\",{\"1\":{\"986\":1}}],[\"+lianjie+\",{\"1\":{\"94\":1}}],[\"+person\",{\"1\":{\"806\":2}}],[\"+obj\",{\"1\":{\"805\":1}}],[\"+c\",{\"1\":{\"604\":1}}],[\"+b\",{\"1\":{\"604\":1}}],[\"+a\",{\"1\":{\"604\":1}}],[\"++count\",{\"1\":{\"1817\":1}}],[\"++newstartindex\",{\"1\":{\"1478\":3}}],[\"++num1\",{\"1\":{\"602\":1}}],[\"++oldstartindex\",{\"1\":{\"1478\":3}}],[\"++\",{\"0\":{\"602\":1,\"776\":1},\"1\":{\"774\":1,\"889\":1,\"2446\":1}}],[\"++i\",{\"1\":{\"109\":1,\"602\":1}}],[\"+input\",{\"1\":{\"343\":1,\"1839\":1}}],[\"+id+\",{\"1\":{\"343\":1}}],[\"+msg+\",{\"1\":{\"343\":1}}],[\"+mz\",{\"1\":{\"94\":1}}],[\"+0\",{\"1\":{\"272\":1,\"664\":1,\"669\":1}}],[\"+$\",{\"1\":{\"239\":1}}],[\"+|\",{\"1\":{\"239\":1,\"1550\":2}}],[\"+\",{\"0\":{\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"170\":1,\"604\":1,\"616\":1,\"775\":1},\"1\":{\"94\":2,\"109\":1,\"123\":2,\"127\":2,\"128\":2,\"206\":1,\"241\":12,\"254\":1,\"259\":1,\"260\":4,\"275\":2,\"284\":2,\"289\":1,\"320\":4,\"343\":2,\"359\":2,\"418\":1,\"445\":1,\"455\":2,\"463\":1,\"470\":2,\"495\":1,\"533\":1,\"551\":1,\"555\":2,\"596\":5,\"602\":2,\"610\":2,\"616\":12,\"635\":4,\"645\":1,\"653\":2,\"667\":7,\"668\":8,\"669\":1,\"705\":2,\"706\":1,\"712\":2,\"713\":3,\"731\":2,\"732\":3,\"740\":2,\"746\":1,\"748\":1,\"772\":1,\"773\":1,\"774\":3,\"775\":17,\"781\":1,\"782\":3,\"788\":6,\"794\":2,\"799\":1,\"802\":10,\"803\":1,\"804\":1,\"805\":2,\"806\":3,\"847\":1,\"864\":2,\"866\":1,\"872\":2,\"873\":3,\"877\":3,\"902\":3,\"986\":2,\"989\":4,\"1006\":3,\"1038\":1,\"1039\":1,\"1040\":5,\"1056\":1,\"1061\":5,\"1109\":2,\"1113\":1,\"1161\":1,\"1176\":1,\"1185\":1,\"1197\":4,\"1211\":2,\"1243\":1,\"1244\":2,\"1251\":1,\"1269\":1,\"1273\":1,\"1274\":2,\"1287\":1,\"1299\":1,\"1300\":2,\"1311\":1,\"1320\":5,\"1321\":5,\"1323\":5,\"1324\":3,\"1362\":1,\"1371\":2,\"1420\":1,\"1421\":1,\"1423\":2,\"1424\":2,\"1426\":2,\"1435\":3,\"1436\":3,\"1437\":1,\"1442\":2,\"1467\":1,\"1478\":2,\"1527\":1,\"1542\":1,\"1549\":1,\"1550\":2,\"1551\":3,\"1568\":1,\"1726\":2,\"1740\":2,\"1743\":4,\"1789\":1,\"2142\":1,\"2403\":26,\"2425\":1,\"2426\":1,\"2446\":1,\"2455\":13,\"2462\":13,\"2843\":2,\"2846\":2}}],[\"+=\",{\"1\":{\"83\":1,\"128\":1,\"418\":1,\"621\":1,\"638\":1,\"646\":1,\"727\":1,\"745\":1,\"774\":1,\"822\":1,\"823\":1,\"1167\":1,\"1282\":1,\"1286\":2,\"1287\":1,\"1289\":1,\"1551\":1}}],[\"+x\",{\"1\":{\"33\":2,\"76\":2}}],[\"jtag接口\",{\"1\":{\"2176\":1}}],[\"j2ee体系结构中\",{\"1\":{\"2031\":1}}],[\"jquery\",{\"1\":{\"1288\":1,\"1355\":1}}],[\"john\",{\"1\":{\"1236\":1}}],[\"join\",{\"0\":{\"690\":1},\"1\":{\"109\":1,\"123\":2,\"127\":2,\"430\":2,\"432\":1,\"436\":1,\"682\":1,\"686\":1,\"690\":4,\"728\":1,\"859\":1,\"1366\":1,\"1436\":1,\"1437\":1,\"1551\":2}}],[\"jw\",{\"1\":{\"860\":1}}],[\"java\",{\"1\":{\"731\":2}}],[\"javasciprt\",{\"1\":{\"350\":1}}],[\"javascript常见数据对应的类型如下\",{\"1\":{\"642\":1}}],[\"javascript中的等于用两个等号\",{\"1\":{\"627\":1}}],[\"javascript中具名的函数的声明形式有两种\",{\"1\":{\"500\":1}}],[\"javascript中执行上下文\",{\"1\":{\"500\":1}}],[\"javascript和node\",{\"1\":{\"378\":1}}],[\"javascript任务的执行顺序如下\",{\"1\":{\"375\":1}}],[\"javascript在遇到异步任务时\",{\"1\":{\"376\":1}}],[\"javascript在执行代码时\",{\"1\":{\"375\":1}}],[\"javascript在按顺序执行执行栈中的方法时\",{\"1\":{\"374\":1}}],[\"javascript的任务分为两种同步和异步\",{\"1\":{\"372\":1}}],[\"javascript是单线程的指的是执行javascript代码的线程只有一个\",{\"1\":{\"371\":1}}],[\"javascript是一种单线程语言\",{\"1\":{\"370\":1}}],[\"javascript\",{\"1\":{\"206\":1,\"239\":1,\"249\":2,\"253\":1,\"255\":1,\"267\":1,\"273\":1,\"307\":1,\"320\":3,\"345\":1,\"350\":2,\"351\":1,\"352\":1,\"370\":1,\"376\":1,\"386\":1,\"387\":1,\"388\":2,\"390\":2,\"414\":3,\"424\":2,\"425\":9,\"426\":1,\"429\":2,\"431\":1,\"434\":1,\"436\":2,\"437\":1,\"443\":1,\"444\":1,\"445\":6,\"448\":2,\"450\":2,\"451\":1,\"461\":1,\"462\":1,\"463\":1,\"467\":5,\"469\":2,\"472\":1,\"479\":1,\"482\":2,\"500\":5,\"501\":4,\"504\":1,\"505\":4,\"506\":1,\"507\":2,\"508\":2,\"510\":2,\"511\":2,\"515\":1,\"543\":1,\"554\":3,\"555\":2,\"556\":1,\"559\":1,\"560\":1,\"578\":1,\"601\":3,\"602\":2,\"606\":1,\"642\":1,\"646\":2,\"650\":1,\"653\":1,\"666\":1,\"721\":2,\"758\":1,\"772\":6,\"773\":1,\"774\":1,\"797\":1,\"806\":9,\"807\":1,\"836\":1,\"874\":2,\"895\":5,\"896\":2,\"897\":1,\"898\":1,\"900\":1,\"1236\":2,\"1356\":1,\"1366\":1,\"1454\":2,\"1641\":1,\"1643\":1,\"1644\":2,\"1645\":2,\"1646\":5,\"1649\":2,\"1650\":3,\"1651\":2,\"1653\":2,\"1661\":1,\"1670\":1,\"1707\":1,\"2742\":1,\"2744\":1},\"2\":{\"242\":1,\"335\":1,\"346\":1,\"366\":1,\"384\":1,\"422\":1,\"438\":1,\"475\":1,\"497\":1,\"512\":1,\"552\":1,\"598\":1,\"647\":1,\"670\":1,\"750\":1,\"769\":1,\"808\":1,\"824\":1,\"833\":1,\"852\":1,\"868\":1,\"892\":1,\"904\":1}}],[\"jackson系统开发方法\",{\"1\":{\"2028\":1}}],[\"jack\",{\"1\":{\"723\":2,\"731\":2}}],[\"jimmy\",{\"1\":{\"1405\":1}}],[\"jin\",{\"1\":{\"639\":1}}],[\"jianshu\",{\"1\":{\"1153\":1}}],[\"jian\",{\"1\":{\"83\":3,\"1335\":2}}],[\"jia\",{\"1\":{\"83\":5}}],[\"junio\",{\"1\":{\"1577\":1}}],[\"jun\",{\"1\":{\"1036\":1}}],[\"jue\",{\"1\":{\"639\":1}}],[\"justify\",{\"1\":{\"169\":1,\"174\":1,\"207\":1}}],[\"jerry\",{\"1\":{\"490\":6,\"492\":6}}],[\"jpeg\",{\"1\":{\"388\":2}}],[\"j\",{\"1\":{\"267\":1,\"645\":4,\"903\":4,\"989\":1,\"1018\":2,\"1061\":1,\"1063\":1}}],[\"js就可以根据这个回调返回的字符串来判定使用一个缓存的编译好的着色器代码还是根据需求重新编译一个新的着色器代码\",{\"1\":{\"2689\":1}}],[\"jsm\",{\"1\":{\"2359\":1}}],[\"jsp\",{\"1\":{\"2031\":1}}],[\"jsfolder\",{\"1\":{\"1823\":4}}],[\"js中可以通过document\",{\"1\":{\"1659\":1}}],[\"js中还有一些其他的异步形式\",{\"1\":{\"378\":1}}],[\"js里面\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"js如何支持块级作用域\",{\"0\":{\"508\":1}}],[\"js与浏览器的\",{\"1\":{\"383\":1}}],[\"js事件循环的异步队列也分为两种\",{\"1\":{\"380\":1}}],[\"js内部使用\",{\"1\":{\"379\":1}}],[\"js的运行机制如下\",{\"1\":{\"378\":1}}],[\"js的事件循环机制了\",{\"1\":{\"378\":1}}],[\"js的事件循环\",{\"0\":{\"377\":1}}],[\"js使用v8作为js的解析引擎\",{\"1\":{\"378\":1}}],[\"js是基于v8\",{\"1\":{\"378\":1}}],[\"js引擎线程\",{\"1\":{\"371\":1}}],[\"js来保存全局变量\",{\"0\":{\"111\":1}}],[\"js文件等\",{\"1\":{\"1698\":1}}],[\"js文件\",{\"1\":{\"82\":1}}],[\"js文件并写入配置\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"jsx\",{\"0\":{\"1161\":1,\"1162\":1,\"1163\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1182\":1,\"1185\":1,\"1186\":1,\"1187\":1},\"1\":{\"21\":1,\"22\":1,\"27\":1,\"64\":1,\"65\":1,\"70\":1,\"1157\":1,\"1320\":3,\"1321\":3,\"1323\":3,\"1324\":3,\"1454\":2}}],[\"jsxsinglequote\",{\"1\":{\"20\":1,\"63\":1}}],[\"js\",{\"0\":{\"109\":1,\"110\":1,\"474\":1,\"1157\":1,\"1173\":1,\"1174\":1,\"1180\":1,\"1181\":1,\"1500\":1,\"1501\":1,\"1502\":1,\"1503\":1,\"1504\":1,\"1505\":1},\"1\":{\"20\":2,\"21\":1,\"22\":2,\"27\":1,\"62\":1,\"63\":3,\"64\":1,\"65\":2,\"70\":1,\"80\":1,\"82\":1,\"83\":4,\"128\":1,\"206\":2,\"207\":2,\"239\":1,\"249\":2,\"275\":1,\"334\":10,\"353\":1,\"370\":4,\"371\":8,\"376\":2,\"378\":1,\"383\":1,\"390\":1,\"444\":1,\"448\":3,\"450\":2,\"453\":1,\"455\":3,\"462\":10,\"463\":8,\"464\":1,\"465\":3,\"470\":2,\"473\":2,\"474\":4,\"482\":1,\"500\":1,\"501\":1,\"560\":1,\"590\":2,\"627\":1,\"657\":1,\"755\":1,\"763\":2,\"768\":1,\"861\":2,\"862\":2,\"863\":2,\"864\":4,\"865\":1,\"866\":1,\"895\":7,\"903\":3,\"1158\":1,\"1159\":3,\"1160\":2,\"1167\":4,\"1168\":3,\"1173\":1,\"1174\":1,\"1180\":2,\"1181\":1,\"1183\":6,\"1184\":4,\"1188\":2,\"1321\":1,\"1324\":1,\"1332\":6,\"1334\":1,\"1335\":1,\"1357\":2,\"1454\":1,\"1479\":1,\"1484\":2,\"1485\":1,\"1486\":3,\"1491\":1,\"1492\":2,\"1493\":1,\"1499\":1,\"1501\":2,\"1525\":1,\"1526\":2,\"1527\":2,\"1528\":3,\"1533\":5,\"1534\":1,\"1535\":4,\"1540\":1,\"1541\":2,\"1542\":1,\"1543\":2,\"1548\":1,\"1549\":1,\"1550\":1,\"1551\":1,\"1557\":2,\"1558\":1,\"1559\":1,\"1560\":1,\"1561\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1569\":1,\"1570\":1,\"1571\":1,\"1641\":2,\"1646\":1,\"1707\":16,\"1730\":1,\"1817\":1,\"1823\":1,\"2545\":2,\"2589\":2,\"2691\":2,\"2737\":1,\"2860\":2}}],[\"jsonp\",{\"0\":{\"859\":1},\"1\":{\"859\":6}}],[\"jsonplaceholder\",{\"1\":{\"334\":4}}],[\"json对应的路径写好即可\",{\"1\":{\"109\":1}}],[\"json文件\",{\"0\":{\"108\":1}}],[\"json`\",{\"1\":{\"39\":1}}],[\"json中进行新增\",{\"1\":{\"15\":1,\"58\":1}}],[\"json\",{\"0\":{\"15\":1,\"22\":1,\"34\":1,\"40\":1,\"58\":1,\"65\":1,\"77\":1,\"740\":1,\"763\":1,\"822\":1,\"1333\":1,\"1452\":1,\"1453\":1,\"1499\":1,\"2347\":1},\"1\":{\"20\":1,\"22\":1,\"27\":3,\"37\":1,\"39\":2,\"40\":2,\"65\":1,\"70\":3,\"109\":1,\"193\":1,\"334\":6,\"388\":2,\"453\":1,\"474\":1,\"560\":2,\"569\":12,\"740\":5,\"763\":9,\"765\":1,\"768\":2,\"819\":3,\"822\":3,\"823\":2,\"865\":2,\"902\":3,\"1168\":1,\"1357\":2,\"1400\":1,\"1527\":1,\"1551\":4,\"1653\":1,\"2321\":1,\"2545\":2,\"2589\":2,\"2691\":2,\"2860\":2}}],[\"765\",{\"1\":{\"1040\":1}}],[\"777\",{\"1\":{\"951\":1,\"1041\":1,\"1045\":2}}],[\"7中新增了指数操作符\",{\"1\":{\"621\":1}}],[\"755\",{\"1\":{\"1079\":1}}],[\"75\",{\"1\":{\"848\":1}}],[\"754\",{\"1\":{\"606\":1}}],[\"750\",{\"1\":{\"206\":1}}],[\"700\",{\"1\":{\"596\":3,\"1256\":2}}],[\"71828182846\",{\"1\":{\"277\":1}}],[\"7b\",{\"1\":{\"118\":1}}],[\"7\",{\"0\":{\"268\":1,\"344\":1,\"415\":1,\"466\":1,\"495\":1,\"531\":1,\"577\":1,\"579\":1,\"642\":1,\"704\":1,\"878\":1,\"1514\":1,\"1623\":1,\"1630\":1,\"1723\":1},\"1\":{\"63\":1,\"122\":1,\"123\":1,\"125\":1,\"127\":1,\"204\":2,\"206\":8,\"218\":1,\"463\":1,\"609\":1,\"646\":1,\"656\":1,\"701\":2,\"712\":2,\"748\":1,\"749\":1,\"773\":1,\"872\":2,\"940\":2,\"1007\":4,\"1040\":2,\"1141\":2,\"1340\":1,\"1417\":2,\"1442\":1,\"1458\":1,\"1472\":2,\"1577\":1,\"2395\":5,\"2403\":5}}],[\"72\",{\"1\":{\"16\":1,\"59\":1}}],[\"九\",{\"0\":{\"41\":1}}],[\"八面缓冲几何体\",{\"0\":{\"2354\":1}}],[\"八叉树检测\",{\"0\":{\"2273\":1},\"2\":{\"2275\":1}}],[\"八进制语法\",{\"0\":{\"1040\":1}}],[\"八进制数字模式\",{\"1\":{\"1037\":1}}],[\"八进制的基是\",{\"1\":{\"662\":1}}],[\"八\",{\"0\":{\"40\":1,\"330\":1,\"1564\":1}}],[\"中获取的\",{\"1\":{\"2753\":1,\"2763\":1}}],[\"中获得\",{\"1\":{\"427\":1}}],[\"中更新\",{\"1\":{\"2744\":1}}],[\"中展开\",{\"1\":{\"2741\":1}}],[\"中直接分配属性\",{\"1\":{\"2741\":1}}],[\"中不支持\",{\"1\":{\"2688\":1}}],[\"中查看可用值\",{\"1\":{\"2663\":1}}],[\"中查看可用的值\",{\"1\":{\"2658\":1}}],[\"中查找字符串\",{\"1\":{\"1016\":1}}],[\"中查找\",{\"1\":{\"482\":1}}],[\"中设置\",{\"1\":{\"2744\":1}}],[\"中设置偏移量\",{\"1\":{\"2542\":1}}],[\"中设置了一个定时器\",{\"1\":{\"1246\":1}}],[\"中进行绘制\",{\"1\":{\"2286\":1}}],[\"中继功能\",{\"1\":{\"2207\":1}}],[\"中断响应和延迟时间\",{\"1\":{\"2189\":1}}],[\"中断\",{\"1\":{\"2115\":1,\"2177\":1}}],[\"中断调用链并将异常抛出\",{\"1\":{\"578\":1}}],[\"中读取状态的时候\",{\"1\":{\"1765\":1}}],[\"中读取值来作为\",{\"1\":{\"1274\":1}}],[\"中你可以通过\",{\"1\":{\"1730\":1}}],[\"中移除\",{\"1\":{\"1653\":1}}],[\"中就采用了我们上文中说的标记整理算法来解决这一问题来优化空间\",{\"1\":{\"1648\":1}}],[\"中就引入了扩展运算符\",{\"1\":{\"301\":1}}],[\"中就引入了\",{\"1\":{\"295\":1}}],[\"中将堆内存分为新生代和老生代两区域\",{\"1\":{\"1648\":1}}],[\"中存在两种变量\",{\"1\":{\"1645\":1}}],[\"中存储了什么类型的值\",{\"1\":{\"1418\":1}}],[\"中需要更频繁地提交到中央存储库\",{\"1\":{\"1581\":1}}],[\"中明显有大于\",{\"1\":{\"1443\":1}}],[\"中某些属于\",{\"1\":{\"1378\":1}}],[\"中被当做声明好了的类型\",{\"1\":{\"1356\":1}}],[\"中外部模块的简称\",{\"1\":{\"1354\":1}}],[\"中调用\",{\"1\":{\"1294\":1}}],[\"中出现问题\",{\"1\":{\"1260\":1}}],[\"中时仍然执行\",{\"1\":{\"1246\":1}}],[\"中引用了\",{\"1\":{\"1220\":1}}],[\"中引入的\",{\"1\":{\"719\":1,\"874\":1}}],[\"中引入的一种新的基本数据类型\",{\"1\":{\"653\":1}}],[\"中引入了跟\",{\"1\":{\"295\":1}}],[\"中引入了一个新的基本数据类型\",{\"1\":{\"268\":1}}],[\"中引入了箭头函数\",{\"1\":{\"259\":1}}],[\"中引入了模板字符串的概念来解决以上问题\",{\"1\":{\"255\":1}}],[\"中引入与视口有关的新的单位\",{\"1\":{\"208\":1}}],[\"中如何定义上面的\",{\"1\":{\"1366\":1}}],[\"中如何将\",{\"0\":{\"1202\":1}}],[\"中如何创建不需要的引用来防止内存泄漏\",{\"1\":{\"426\":1}}],[\"中间结果\",{\"1\":{\"1866\":1}}],[\"中间的\",{\"1\":{\"1372\":1}}],[\"中间件分类\",{\"0\":{\"2026\":1}}],[\"中间件提供了构件封装\",{\"1\":{\"2025\":1}}],[\"中间件则实现了架构的模型\",{\"1\":{\"2025\":1}}],[\"中间件优点\",{\"0\":{\"2025\":1}}],[\"中间件概念\",{\"0\":{\"2024\":1}}],[\"中间件和扩展\",{\"1\":{\"1275\":1}}],[\"中间件\",{\"0\":{\"1188\":1,\"2023\":1}}],[\"中间列自适应宽度\",{\"1\":{\"159\":1}}],[\"中导入\",{\"0\":{\"1175\":1,\"1182\":1}}],[\"中生效\",{\"1\":{\"1099\":2}}],[\"中可以直接调用\",{\"1\":{\"1077\":1}}],[\"中可以指定导致它的原因\",{\"1\":{\"333\":1}}],[\"中第一个字符代表这个文件是目录\",{\"1\":{\"1029\":1}}],[\"中第一个与\",{\"1\":{\"537\":1}}],[\"中代表该文件是一个目录文件\",{\"1\":{\"1029\":1}}],[\"中我们可以使用\",{\"1\":{\"1029\":1}}],[\"中递归查找所有文件中匹配正则表达式\",{\"1\":{\"1016\":1}}],[\"中访问设备的方式和访问文件的方式是相同的\",{\"1\":{\"913\":1}}],[\"中访问函数内变量提供了途径和便利\",{\"1\":{\"900\":1}}],[\"中安装和运行\",{\"1\":{\"909\":1}}],[\"中单线程\",{\"1\":{\"903\":1}}],[\"中闭包的定义\",{\"1\":{\"900\":1}}],[\"中由\",{\"1\":{\"898\":1}}],[\"中显示\",{\"1\":{\"817\":1}}],[\"中国标准时间\",{\"1\":{\"775\":1,\"787\":1}}],[\"中了\",{\"1\":{\"767\":1}}],[\"中一直存在一种类数组的对象\",{\"1\":{\"721\":1}}],[\"中新增的\",{\"1\":{\"903\":1}}],[\"中新增的数据类型\",{\"1\":{\"650\":1}}],[\"中新增了块级作用域\",{\"1\":{\"898\":1}}],[\"中新增了几个逻辑赋值操作符\",{\"1\":{\"329\":1}}],[\"中所有的\",{\"1\":{\"1514\":1}}],[\"中所有的属性的值转化为\",{\"1\":{\"1376\":1}}],[\"中所有的数字都是以\",{\"1\":{\"606\":1}}],[\"中所有内容以文件形式保存\",{\"1\":{\"909\":1}}],[\"中所有对象数据类型的基类\",{\"1\":{\"482\":1}}],[\"中配合使用\",{\"1\":{\"587\":1}}],[\"中产生的\",{\"1\":{\"583\":1}}],[\"中回调函数的传入值创建不同类型的\",{\"1\":{\"569\":1}}],[\"中指定的\",{\"1\":{\"567\":1}}],[\"中传入的方法里去\",{\"1\":{\"565\":1}}],[\"中另外一种常见的异步操作就是网络请求\",{\"1\":{\"559\":1}}],[\"中检索的子串\",{\"1\":{\"537\":1}}],[\"中通过\",{\"1\":{\"507\":2}}],[\"中会存在变量提升这个特性呢\",{\"1\":{\"501\":1}}],[\"中也有一个三元操作符\",{\"1\":{\"601\":1}}],[\"中也没有该属性\",{\"1\":{\"482\":1}}],[\"中也是一样的\",{\"1\":{\"378\":1}}],[\"中是被直接忽略的\",{\"1\":{\"895\":1}}],[\"中是通过\",{\"1\":{\"482\":1}}],[\"中是否包含某元素\",{\"1\":{\"272\":1}}],[\"中万物都是对象\",{\"1\":{\"482\":1}}],[\"中删除文件\",{\"1\":{\"1019\":1}}],[\"中删除\",{\"1\":{\"433\":1,\"1601\":1}}],[\"中常见的内存泄漏以及如何避免内存泄漏\",{\"1\":{\"424\":1}}],[\"中任何四个字节视为一个整数\",{\"1\":{\"402\":1}}],[\"中任意两个字节视为一个整数\",{\"1\":{\"402\":1}}],[\"中加载\",{\"1\":{\"388\":1}}],[\"中对引用数据类型的操作都是操作对象的引用而不是实际的对象\",{\"1\":{\"1644\":1}}],[\"中对解构赋值的描述\",{\"1\":{\"836\":1}}],[\"中对\",{\"1\":{\"387\":1}}],[\"中函数的\",{\"1\":{\"365\":1}}],[\"中有\",{\"1\":{\"2744\":1}}],[\"中有三种类型的变量\",{\"1\":{\"2742\":1}}],[\"中有三种执行上下文类型\",{\"1\":{\"350\":1}}],[\"中有很多内置对象\",{\"1\":{\"1356\":1}}],[\"中有文字\",{\"1\":{\"178\":1}}],[\"中使用这些功能\",{\"1\":{\"2743\":1}}],[\"中使用\",{\"1\":{\"340\":1,\"445\":1,\"450\":1,\"463\":1,\"474\":1}}],[\"中使用百分比\",{\"1\":{\"205\":1}}],[\"中提取出\",{\"1\":{\"1379\":1}}],[\"中提出了\",{\"1\":{\"307\":1}}],[\"中提供了\",{\"1\":{\"297\":1}}],[\"中首次引入模块化开发规范\",{\"1\":{\"273\":1}}],[\"中定义的私有变量\",{\"1\":{\"445\":1}}],[\"中定义\",{\"1\":{\"255\":1}}],[\"中解构\",{\"1\":{\"251\":1}}],[\"中还引入了解构赋值的概念\",{\"1\":{\"251\":1}}],[\"中较大的值\",{\"1\":{\"208\":1}}],[\"中较小的值\",{\"1\":{\"208\":1}}],[\"中的数据\",{\"1\":{\"2742\":2}}],[\"中的数组内容的\",{\"1\":{\"388\":1}}],[\"中的其他材质更费性能\",{\"1\":{\"2737\":1}}],[\"中的没有索引的几何体的几何体的第一个顶点\",{\"1\":{\"2286\":1}}],[\"中的全屏\",{\"1\":{\"1766\":1}}],[\"中的全部取出\",{\"1\":{\"376\":1}}],[\"中的更改并将其也从\",{\"1\":{\"1601\":1}}],[\"中的接口是一个非常灵活的概念\",{\"1\":{\"1338\":1}}],[\"中的状态改变时\",{\"1\":{\"1279\":1}}],[\"中的代码会被推迟到下一个事件循环执行\",{\"1\":{\"1201\":1}}],[\"中的代码就会运行\",{\"1\":{\"462\":1}}],[\"中的记事本\",{\"1\":{\"1054\":1}}],[\"中的记录一一对应\",{\"1\":{\"938\":1}}],[\"中的编辑器\",{\"1\":{\"1054\":1}}],[\"中的所有对象都转换为\",{\"1\":{\"806\":1}}],[\"中的所有对象继承\",{\"1\":{\"806\":1}}],[\"中的默认对象到原始值的转换\",{\"1\":{\"806\":1}}],[\"中的显式和隐式类型转换\",{\"1\":{\"772\":1}}],[\"中的类型转换有两种方式\",{\"1\":{\"772\":1}}],[\"中的第七种数据类型\",{\"1\":{\"653\":1}}],[\"中的对象\",{\"1\":{\"651\":1}}],[\"中的简单数据段\",{\"1\":{\"651\":1}}],[\"中的关键词\",{\"1\":{\"587\":1}}],[\"中的回调才依次执行\",{\"1\":{\"903\":1}}],[\"中的回调与事件\",{\"0\":{\"560\":1}}],[\"中的回调函数里\",{\"1\":{\"362\":1}}],[\"中的位置多\",{\"1\":{\"530\":1}}],[\"中的位置\",{\"1\":{\"530\":1}}],[\"中的字符串有一个\",{\"1\":{\"515\":1}}],[\"中的字节偏移\",{\"1\":{\"409\":1}}],[\"中的变量\",{\"1\":{\"505\":1,\"902\":1}}],[\"中的变量提升\",{\"1\":{\"501\":1}}],[\"中的一个\",{\"1\":{\"806\":1}}],[\"中的一个基本模块定义\",{\"1\":{\"463\":1}}],[\"中的一个对象\",{\"1\":{\"387\":1}}],[\"中的每个字节视为一个整数\",{\"1\":{\"402\":1}}],[\"中的内容\",{\"1\":{\"394\":4}}],[\"中的console\",{\"1\":{\"376\":1}}],[\"中的任务都取完\",{\"1\":{\"376\":1}}],[\"中的属性\",{\"1\":{\"354\":1}}],[\"中的扩展运算符可以作用于对象\",{\"1\":{\"301\":1}}],[\"中的\",{\"0\":{\"739\":1},\"1\":{\"201\":1,\"251\":1,\"355\":1,\"378\":1,\"462\":2,\"724\":1,\"739\":1,\"903\":1,\"1071\":1,\"1357\":2,\"1764\":1}}],[\"中写入以下内容\",{\"1\":{\"80\":1}}],[\"中\",{\"0\":{\"495\":1},\"1\":{\"39\":1,\"207\":1,\"246\":1,\"249\":1,\"253\":1,\"311\":1,\"320\":2,\"334\":1,\"337\":1,\"340\":1,\"355\":1,\"383\":2,\"390\":2,\"414\":1,\"425\":4,\"434\":1,\"436\":1,\"445\":1,\"449\":1,\"451\":1,\"454\":1,\"464\":2,\"479\":1,\"495\":1,\"499\":1,\"674\":1,\"710\":1,\"720\":1,\"721\":1,\"755\":1,\"895\":2,\"896\":2,\"897\":1,\"999\":1,\"1001\":2,\"1201\":1,\"1203\":1,\"1309\":1,\"1332\":1,\"1386\":1,\"1387\":1,\"1389\":1,\"1416\":1,\"1417\":1,\"1427\":1,\"1442\":1,\"1584\":1,\"1600\":1,\"1601\":1,\"1860\":1,\"1992\":1,\"2301\":1,\"2741\":1,\"2743\":1,\"2744\":2,\"2788\":1}}],[\"`calculating\",{\"1\":{\"1798\":1}}],[\"`clicked\",{\"1\":{\"1268\":1}}],[\"`^<\",{\"1\":{\"1550\":1}}],[\"`^<$\",{\"1\":{\"1550\":1}}],[\"`new`\",{\"1\":{\"1505\":1}}],[\"`null`\",{\"1\":{\"777\":1}}],[\"``\",{\"1\":{\"1476\":1}}],[\"```\",{\"1\":{\"1309\":1}}],[\"`<div\",{\"1\":{\"1475\":1,\"1483\":1,\"1490\":1,\"1539\":1,\"1547\":1,\"1556\":1,\"1568\":1}}],[\"`<li>$\",{\"1\":{\"822\":1,\"823\":1}}],[\"`the\",{\"1\":{\"1469\":1}}],[\"`translatex\",{\"1\":{\"1289\":1}}],[\"`true`\",{\"1\":{\"39\":1}}],[\"`set\",{\"1\":{\"1467\":1}}],[\"`step3\",{\"1\":{\"596\":1}}],[\"`step2\",{\"1\":{\"596\":1}}],[\"`step1\",{\"1\":{\"596\":1}}],[\"`get\",{\"1\":{\"1467\":1}}],[\"`expected\",{\"1\":{\"1436\":1}}],[\"`elapsed\",{\"1\":{\"1282\":1}}],[\"`element\",{\"1\":{\"39\":1}}],[\"`optionaltuple\",{\"1\":{\"1412\":2}}],[\"`oops\",{\"1\":{\"345\":1}}],[\"`demo\",{\"1\":{\"1315\":1}}],[\"`with\",{\"1\":{\"1549\":1,\"1552\":1}}],[\"`width\",{\"1\":{\"1290\":1}}],[\"`while\",{\"1\":{\"333\":1}}],[\"`actions\",{\"1\":{\"1287\":1}}],[\"`username\",{\"1\":{\"1411\":1}}],[\"`user$\",{\"1\":{\"1265\":1}}],[\"`undefined`\",{\"1\":{\"777\":1}}],[\"`id\",{\"1\":{\"1411\":1}}],[\"`i\",{\"1\":{\"1244\":1}}],[\"`button\",{\"1\":{\"1244\":3,\"1286\":2}}],[\"`点击了\",{\"1\":{\"1243\":1}}],[\"`r\",{\"1\":{\"843\":2}}],[\"`result\",{\"1\":{\"596\":2}}],[\"`hint\",{\"1\":{\"806\":1}}],[\"`hello\",{\"1\":{\"255\":1}}],[\"`$\",{\"1\":{\"433\":1,\"859\":3,\"864\":1,\"865\":1,\"866\":1,\"1255\":2,\"1256\":2,\"1390\":1,\"1551\":3,\"1798\":1}}],[\"`上传进度\",{\"1\":{\"395\":1}}],[\"`搜索设备失败`\",{\"1\":{\"128\":1}}],[\"`搜索超时`\",{\"1\":{\"128\":1}}],[\"`\",{\"1\":{\"39\":1,\"109\":10,\"255\":2,\"333\":1,\"334\":2,\"345\":1,\"395\":1,\"433\":1,\"590\":2,\"596\":5,\"806\":5,\"843\":2,\"859\":3,\"864\":3,\"865\":1,\"866\":1,\"1009\":1,\"1244\":1,\"1265\":1,\"1268\":1,\"1286\":2,\"1287\":1,\"1289\":1,\"1290\":1,\"1315\":1,\"1390\":1,\"1411\":2,\"1412\":2,\"1436\":1,\"1467\":2,\"1549\":1,\"1550\":5,\"1551\":15,\"1552\":1,\"1798\":2}}],[\"`false`\",{\"1\":{\"39\":1}}],[\"七\",{\"0\":{\"35\":1,\"78\":1,\"325\":1,\"1563\":1}}],[\"可访问webglrenderingcontext\",{\"1\":{\"2817\":1,\"2818\":1}}],[\"可串行化的\",{\"1\":{\"2260\":1}}],[\"可串行性和可恢复性\",{\"1\":{\"2229\":1}}],[\"可防止丢失修改\",{\"1\":{\"2260\":3}}],[\"可修复性号\",{\"1\":{\"2213\":1}}],[\"可修改性是指能够快读地以较高的性能价格比对系统进行变更能力\",{\"1\":{\"2007\":1}}],[\"可修改性\",{\"0\":{\"2007\":1},\"1\":{\"1948\":1,\"1986\":1}}],[\"可分为宏内核和微内核\",{\"1\":{\"2192\":1}}],[\"可剥夺方式\",{\"1\":{\"2190\":1}}],[\"可配置\",{\"1\":{\"2189\":1}}],[\"可配置的行为\",{\"1\":{\"1303\":1}}],[\"可剪裁\",{\"1\":{\"2189\":1}}],[\"可重构的能力\",{\"1\":{\"2180\":1}}],[\"可重用性\",{\"1\":{\"442\":1,\"1804\":1}}],[\"可从算法角度进行进化\",{\"1\":{\"2177\":1}}],[\"可作为一个部件埋藏于所控制的装置中\",{\"1\":{\"2176\":1}}],[\"可独立调度和分配资源的基本单位\",{\"1\":{\"2152\":1}}],[\"可拥有资源的独立单位\",{\"1\":{\"2152\":1}}],[\"可基于内存亦可持久化的日志型\",{\"1\":{\"2061\":1}}],[\"可观测架构\",{\"1\":{\"2054\":1}}],[\"可观测原则\",{\"1\":{\"2053\":1}}],[\"可根据业务变化自动伸缩\",{\"1\":{\"2053\":1}}],[\"可适应性约束条件与例外情形\",{\"1\":{\"2028\":1}}],[\"可扩充性等\",{\"1\":{\"2011\":1}}],[\"可扩展性\",{\"1\":{\"1978\":1,\"1986\":1}}],[\"可扩展性好\",{\"1\":{\"1787\":1,\"1982\":1}}],[\"可抵御sql注入攻击\",{\"1\":{\"2006\":1}}],[\"可交付成果\",{\"1\":{\"1961\":1}}],[\"可再用性\",{\"1\":{\"1958\":1}}],[\"可维修性\",{\"1\":{\"1958\":1}}],[\"可维护性好\",{\"1\":{\"1982\":1}}],[\"可维护性\",{\"1\":{\"442\":1,\"1978\":1}}],[\"可不必进行专门计算\",{\"1\":{\"1955\":1}}],[\"可移植性好的软件会降低维护的概率\",{\"1\":{\"1948\":1}}],[\"可移植性\",{\"1\":{\"1948\":1,\"1958\":1}}],[\"可测试性好的软件\",{\"1\":{\"1948\":1}}],[\"可测试性\",{\"0\":{\"2009\":1},\"1\":{\"1948\":1,\"1958\":1}}],[\"可理解性\",{\"1\":{\"1948\":1,\"1958\":1}}],[\"可取的x值为0\",{\"1\":{\"1939\":1}}],[\"可供用户参与的系统模型\",{\"1\":{\"1923\":1}}],[\"可供销售量\",{\"1\":{\"1879\":1}}],[\"可部署性\",{\"1\":{\"1900\":1}}],[\"可组装性\",{\"1\":{\"1900\":1}}],[\"可复用性\",{\"1\":{\"1812\":1}}],[\"可靠性提高\",{\"1\":{\"2179\":1}}],[\"可靠性设计\",{\"0\":{\"2092\":1}}],[\"可靠性指标\",{\"0\":{\"2090\":1}}],[\"可靠性是软件系统在应用或系统错误面前\",{\"1\":{\"2089\":1}}],[\"可靠性相关概念\",{\"0\":{\"2089\":1}}],[\"可靠性\",{\"1\":{\"1948\":1,\"2176\":1}}],[\"可靠传输\",{\"1\":{\"1713\":1}}],[\"可靠的流协议\",{\"1\":{\"1713\":1}}],[\"可靠的\",{\"1\":{\"1713\":1}}],[\"可达性\",{\"1\":{\"1646\":1}}],[\"可有可无\",{\"1\":{\"1550\":1}}],[\"可谓一举两得\",{\"1\":{\"1428\":1}}],[\"可\",{\"1\":{\"1428\":2}}],[\"可确保函数的稳定性\",{\"1\":{\"1212\":1}}],[\"可执行代码测试用例\",{\"1\":{\"1961\":1}}],[\"可执行文件目录\",{\"1\":{\"1150\":1}}],[\"可执行程序文件\",{\"1\":{\"1146\":1}}],[\"可视化接口\",{\"1\":{\"1054\":1}}],[\"可随机存取装置\",{\"1\":{\"1029\":1}}],[\"可加快速度\",{\"1\":{\"1009\":1}}],[\"可为复数个数\",{\"1\":{\"986\":1}}],[\"可用来代替requestanimationframe的内置函数\",{\"1\":{\"2838\":1}}],[\"可用来建立用户帐号\",{\"1\":{\"943\":1}}],[\"可用\",{\"1\":{\"2006\":1}}],[\"可用性是系统能够正常运行的事件比例\",{\"1\":{\"2089\":1}}],[\"可用性是系统能够正常运行的时间比例\",{\"1\":{\"2005\":1}}],[\"可用性\",{\"0\":{\"2005\":1},\"1\":{\"1958\":1,\"2213\":1}}],[\"可用于重置内部\",{\"1\":{\"2837\":1}}],[\"可用于将渲染器附加到已有的渲染环境\",{\"1\":{\"2788\":1}}],[\"可用于表示布料和织物材料\",{\"1\":{\"2737\":1}}],[\"可用于存储有关material的自定义数据\",{\"1\":{\"2683\":1}}],[\"可用于检索给定文件路径的已注册加载器\",{\"1\":{\"2474\":1}}],[\"可用于定义加载特定文件时应使用哪个加载器\",{\"1\":{\"2473\":1}}],[\"可用于wbs的任何层次\",{\"1\":{\"1956\":1}}],[\"可用于比较数字和字符串\",{\"1\":{\"807\":1}}],[\"可用的命令非常多\",{\"1\":{\"1058\":1}}],[\"可链式调用\",{\"1\":{\"879\":2}}],[\"可直接\",{\"1\":{\"817\":1}}],[\"可见原数组并未被修改\",{\"1\":{\"701\":1}}],[\"可读性下降\",{\"1\":{\"1269\":1}}],[\"可读性更高\",{\"1\":{\"819\":1}}],[\"可读性不强\",{\"1\":{\"590\":1}}],[\"可读性\",{\"1\":{\"442\":1}}],[\"可通过浏览器中的\",{\"1\":{\"467\":1}}],[\"可通过\",{\"1\":{\"345\":1}}],[\"可帮助我们在\",{\"1\":{\"345\":1}}],[\"可迭代对象\",{\"1\":{\"328\":1}}],[\"可能发生死锁\",{\"1\":{\"2260\":1}}],[\"可能存在的问题包括\",{\"1\":{\"2244\":1}}],[\"可能产生抖动现象\",{\"1\":{\"2160\":1}}],[\"可能引入新问题\",{\"1\":{\"1797\":1}}],[\"可能需要关闭排序并使其他方法来处理透明度的渲染\",{\"1\":{\"2806\":1}}],[\"可能需要新增很多工厂类\",{\"1\":{\"1751\":1}}],[\"可能需要确保组件的渲染是同步的\",{\"1\":{\"1203\":1}}],[\"可能出现丢失\",{\"1\":{\"1717\":1}}],[\"可能在\",{\"1\":{\"1707\":1}}],[\"可能不太好理解\",{\"1\":{\"1650\":1}}],[\"可能就需要切换到一个\",{\"1\":{\"1601\":1}}],[\"可能就只有几微妙\",{\"1\":{\"895\":1}}],[\"可能是\",{\"1\":{\"2788\":1}}],[\"可能是父亲有\",{\"1\":{\"1485\":1}}],[\"可能是异步\",{\"1\":{\"581\":1}}],[\"可能返回\",{\"1\":{\"1464\":1}}],[\"可能造成输入\",{\"1\":{\"1309\":1}}],[\"可能只更新为\",{\"1\":{\"1299\":1}}],[\"可能导致\",{\"1\":{\"1285\":1}}],[\"可能导致不必要的组件渲染\",{\"1\":{\"1224\":1}}],[\"可能更具优势\",{\"1\":{\"1275\":1}}],[\"可能会由于解码和\",{\"1\":{\"2833\":1}}],[\"可能会对系统的性能产生一定影响\",{\"1\":{\"1797\":1}}],[\"可能会用下面这种写法\",{\"1\":{\"1286\":1}}],[\"可能会引入新的问题和\",{\"1\":{\"1797\":1}}],[\"可能会引起性能问题\",{\"1\":{\"1805\":1}}],[\"可能会引起困惑\",{\"1\":{\"1269\":1}}],[\"可能会引起变量命名的冲突\",{\"1\":{\"896\":1}}],[\"可能会引发警告或错误\",{\"1\":{\"1260\":1}}],[\"可能会影响应用的性能\",{\"1\":{\"1260\":1}}],[\"可能会导致事件流难以追踪\",{\"1\":{\"1813\":1}}],[\"可能会导致内存泄漏问题\",{\"1\":{\"1805\":1}}],[\"可能会导致系统变得难以理解和维护\",{\"1\":{\"1797\":1}}],[\"可能会导致性能问题\",{\"1\":{\"1274\":1}}],[\"可能会导致性能更差或代码更加复杂\",{\"1\":{\"1269\":1}}],[\"可能会导致可见的布局跳动或闪烁\",{\"1\":{\"1259\":1}}],[\"可能会导致不流畅的用户体验\",{\"1\":{\"1237\":1}}],[\"可能会导致同步更新\",{\"1\":{\"1201\":1}}],[\"可能会\",{\"1\":{\"1212\":1}}],[\"可能会使代码变得复杂且难以维护\",{\"1\":{\"1212\":1}}],[\"可能会被立即处理\",{\"1\":{\"1201\":1}}],[\"可能会被视为同步操作\",{\"1\":{\"1201\":1}}],[\"可能会改写头\",{\"1\":{\"1153\":1}}],[\"可能会发生隐式转换\",{\"1\":{\"772\":1}}],[\"可能会出现某个请求没有被任何处理者处理的情况\",{\"1\":{\"1838\":1}}],[\"可能会出现\",{\"1\":{\"33\":1,\"76\":1}}],[\"可能因为疏忽而先使用后定义了\",{\"1\":{\"503\":1}}],[\"可能值从\",{\"1\":{\"402\":1}}],[\"可能的值从\",{\"1\":{\"402\":2}}],[\"可能很小的一个小改动会造成整个\",{\"1\":{\"226\":1}}],[\"可以被\",{\"1\":{\"2744\":1}}],[\"可以选择包括一个alpha通道\",{\"1\":{\"2606\":1,\"2708\":1}}],[\"可以向\",{\"1\":{\"2296\":1}}],[\"可以有效减少向\",{\"1\":{\"2277\":1}}],[\"可以有效对表单信息进行维护\",{\"1\":{\"1667\":1}}],[\"可以还原\",{\"1\":{\"2256\":1}}],[\"可以提高系统的可靠性和可用性\",{\"1\":{\"2229\":1}}],[\"可以采用策略路由机制\",{\"1\":{\"2212\":1}}],[\"可以实施负载分担的特例\",{\"1\":{\"2212\":1}}],[\"可以实现序号的依次输出\",{\"1\":{\"903\":1}}],[\"可以实现一个类数组的\",{\"1\":{\"731\":1}}],[\"可以实现对象的继承\",{\"1\":{\"490\":1}}],[\"可以告诉处理图像数据\",{\"1\":{\"2179\":1}}],[\"可以重新执行aof文件中的命令来重建数据集\",{\"1\":{\"2069\":1}}],[\"可以独立进程方式存在\",{\"1\":{\"2044\":1}}],[\"可以独立运行\",{\"1\":{\"1641\":1}}],[\"可以降低开发的复杂性\",{\"1\":{\"2039\":1}}],[\"可以更高效地使用模型\",{\"1\":{\"2032\":1}}],[\"可以预见的修改部分及修改方法\",{\"1\":{\"2028\":1}}],[\"可以预处理\",{\"1\":{\"208\":1}}],[\"可以作为培训的基础\",{\"1\":{\"1968\":1}}],[\"可以作为一个高阶函数\",{\"1\":{\"877\":1}}],[\"可以不对应\",{\"1\":{\"1914\":1}}],[\"可以根据需要在运行时重新组织链或改变成员的责任\",{\"1\":{\"1837\":1}}],[\"可以根据引用链从根访问它们\",{\"1\":{\"425\":1}}],[\"可以动态地添加或修改处理链\",{\"1\":{\"1837\":1}}],[\"可以帮助你更好地管理和共享全局方法和常量\",{\"1\":{\"1767\":1}}],[\"可以考虑加入负载分担设计\",{\"1\":{\"2212\":1}}],[\"可以考虑使用这些状态管理库\",{\"1\":{\"1764\":1}}],[\"可以考虑将\",{\"1\":{\"1287\":1}}],[\"可以随意增加产品谢列或者产品族\",{\"1\":{\"1752\":1}}],[\"可以方便地添加新的观察者\",{\"1\":{\"1804\":1}}],[\"可以方便地添加新的产品类并创建对应的工厂类\",{\"1\":{\"1750\":1}}],[\"可以方便的在其他地方重用这些模块\",{\"1\":{\"442\":1}}],[\"可以相互发送消息\",{\"1\":{\"1737\":1}}],[\"可以发送文本\",{\"1\":{\"1736\":1}}],[\"可以发现\",{\"1\":{\"355\":1,\"896\":1,\"900\":1}}],[\"可以指定一个特定的过期时间\",{\"1\":{\"1659\":1}}],[\"可以避免对一个文件进行同时操作\",{\"1\":{\"1769\":1}}],[\"可以避免此类错误发生\",{\"1\":{\"1653\":1}}],[\"可以避免因频繁的渲染而导致的性能问题\",{\"1\":{\"1212\":1}}],[\"可以很好的配合增量回收进行暂停恢复的一些操作\",{\"1\":{\"1650\":1}}],[\"可以说此机制的出现很大程度提高了垃圾回收机制的效率\",{\"1\":{\"1648\":1}}],[\"可以简单理解为\",{\"1\":{\"1644\":1}}],[\"可以简单来实现一下\",{\"1\":{\"641\":1}}],[\"可以去查看时那些修改导致的问题\",{\"1\":{\"1637\":1}}],[\"可以去掉\",{\"1\":{\"260\":1}}],[\"可以按照分支查看日志\",{\"1\":{\"1629\":1}}],[\"可以组合以上参数\",{\"1\":{\"1626\":1}}],[\"可以查看某个时间之前的日志\",{\"1\":{\"1626\":1}}],[\"可以添加\",{\"1\":{\"1631\":1}}],[\"可以添加过滤条件\",{\"1\":{\"1626\":1}}],[\"可以添加一个\",{\"1\":{\"1618\":1}}],[\"可以理解为是一个commit的别名\",{\"1\":{\"1616\":1}}],[\"可以离线工作\",{\"1\":{\"1581\":1}}],[\"可以离线使用\",{\"1\":{\"1581\":1}}],[\"可以对其他实体实施加动作的主动实体\",{\"1\":{\"2106\":1}}],[\"可以对这个全局状态进行操作和访问\",{\"1\":{\"1764\":1}}],[\"可以对每个版本库进行修改\",{\"1\":{\"1580\":1}}],[\"可以对函数返回值使用解构赋值\",{\"1\":{\"847\":1}}],[\"可以对函数参数使用解构赋值\",{\"1\":{\"847\":1}}],[\"可以互相代替\",{\"1\":{\"1431\":1}}],[\"可以保证以后对函数名赋值时保证参数个数\",{\"1\":{\"1422\":1}}],[\"可以调用父类上的方法和属性\",{\"1\":{\"1389\":1}}],[\"可以增强代码的可复用性\",{\"1\":{\"1389\":1}}],[\"可以具有完全不同的类型\",{\"1\":{\"1366\":1}}],[\"可以安装使用第三方的声明文件\",{\"1\":{\"1356\":1}}],[\"可以安全地存储和操作大整数\",{\"1\":{\"650\":1}}],[\"可以这么做\",{\"1\":{\"1267\":1}}],[\"可以这样写\",{\"1\":{\"571\":1}}],[\"可以这样来使用\",{\"1\":{\"445\":1}}],[\"可以这样\",{\"1\":{\"354\":1}}],[\"可以尝试多次刷新\",{\"1\":{\"1255\":1}}],[\"可以适应用户的设备\",{\"1\":{\"1237\":1}}],[\"可以确保子组件不会因为父组件中的函数重建而进行不必要的重新渲染\",{\"1\":{\"1212\":1}}],[\"可以立即读取更新后的\",{\"1\":{\"1203\":1}}],[\"可以把watcher收集到dep里面\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"可以把他理解为观察者模式里面的被观察者\",{\"1\":{\"1559\":1}}],[\"可以把下面\",{\"1\":{\"1153\":1}}],[\"可以把上述代码转换成另一种形式\",{\"1\":{\"355\":1}}],[\"可以最大限度的去发挥它的性能\",{\"1\":{\"1153\":1}}],[\"可以以系统服务的方式启动\",{\"1\":{\"1137\":1}}],[\"可以变化的量\",{\"1\":{\"1091\":1}}],[\"可以自动处理依赖性关系\",{\"1\":{\"1071\":1}}],[\"可以自定义格式和字节序\",{\"1\":{\"397\":1}}],[\"可以执行以下命令来获取远程仓库的地址\",{\"1\":{\"1606\":1}}],[\"可以执行以下命令\",{\"1\":{\"1019\":1,\"1594\":1,\"1599\":1,\"1614\":1,\"1615\":1,\"1619\":1,\"1628\":2}}],[\"可以写在一起\",{\"1\":{\"916\":1}}],[\"可以操作\",{\"1\":{\"913\":3}}],[\"可以结合以下两点来思考第一个问题\",{\"1\":{\"903\":1}}],[\"可以利用这两点哦\",{\"1\":{\"1707\":1}}],[\"可以利用这个特性给变量设置默认值\",{\"1\":{\"625\":1}}],[\"可以利用\",{\"1\":{\"903\":1,\"1416\":1}}],[\"可以利用闭包实现缓存等\",{\"1\":{\"900\":1}}],[\"可以改变原数组\",{\"1\":{\"888\":1}}],[\"可以\",{\"1\":{\"873\":1}}],[\"可以带参数\",{\"1\":{\"864\":1,\"866\":1}}],[\"可以给变量传递一个默认值\",{\"1\":{\"838\":1}}],[\"可以拷贝\",{\"1\":{\"755\":1}}],[\"可以达到扁平化的效果\",{\"1\":{\"739\":1}}],[\"可以达到节省内存\",{\"1\":{\"370\":1}}],[\"可以借助\",{\"1\":{\"729\":1}}],[\"可以直接发送syn+ack报文\",{\"1\":{\"1729\":1}}],[\"可以直接通过当前内存中有没有灰色节点来判断整个标记是否完成\",{\"1\":{\"1650\":1}}],[\"可以直接更新\",{\"1\":{\"1564\":1}}],[\"可以直接判断数据类型是否为数组\",{\"1\":{\"681\":1}}],[\"可以直接使用一个函数作为\",{\"1\":{\"1274\":1}}],[\"可以直接使用\",{\"1\":{\"492\":1}}],[\"可以为一个任意数据类型取两次反\",{\"1\":{\"666\":1}}],[\"可以精简很多代码\",{\"1\":{\"622\":1}}],[\"可以像处理同步代码的异常一样\",{\"1\":{\"597\":1}}],[\"可以主动控制\",{\"1\":{\"588\":1}}],[\"可以配合\",{\"1\":{\"587\":1}}],[\"可以继续被执行\",{\"1\":{\"578\":1}}],[\"可以继续执行该异步任务之后的代码逻辑\",{\"1\":{\"555\":1}}],[\"可以看出\",{\"1\":{\"577\":1,\"723\":1,\"739\":1}}],[\"可以看到打印出了\",{\"1\":{\"578\":1}}],[\"可以看到节点的数量\",{\"1\":{\"436\":1}}],[\"可以看到node\",{\"1\":{\"378\":1}}],[\"可以看到\",{\"1\":{\"217\":1,\"253\":1,\"281\":1,\"323\":1,\"359\":1,\"363\":1,\"371\":1,\"376\":1,\"381\":1,\"392\":1,\"394\":1,\"403\":1,\"413\":1,\"490\":1,\"500\":2,\"510\":1,\"511\":1,\"517\":1,\"524\":1,\"565\":1,\"569\":1,\"576\":1,\"578\":1,\"588\":1,\"590\":2,\"591\":1,\"594\":1,\"602\":1,\"641\":1,\"678\":1,\"698\":1,\"723\":1,\"731\":2,\"732\":1,\"735\":1,\"740\":1,\"797\":1,\"806\":1,\"896\":1,\"897\":1,\"898\":1,\"901\":3,\"903\":2,\"1370\":1,\"1372\":1}}],[\"可以让多个订阅者同时接收相同的事件消息\",{\"1\":{\"1812\":1}}],[\"可以让服务器知道请求是来源哪个客户端\",{\"1\":{\"1658\":1}}],[\"可以让这种嵌套回调以一种更线性的链式形式表达出来\",{\"1\":{\"562\":1}}],[\"可以让设备开始搜索附近蓝牙设备\",{\"1\":{\"118\":1}}],[\"可以传给其他函数\",{\"1\":{\"556\":1}}],[\"可以兼容\",{\"1\":{\"517\":1}}],[\"可以完全避免这样写\",{\"1\":{\"503\":1}}],[\"可以完美兼容当前主流的各大浏览器\",{\"1\":{\"183\":1}}],[\"可以获取保存在\",{\"1\":{\"1279\":1}}],[\"可以获取字符串中指定unicode编码值范围的字符\",{\"1\":{\"518\":1}}],[\"可以获取到\",{\"1\":{\"359\":1}}],[\"可以获得对象的原型\",{\"1\":{\"481\":1}}],[\"可以同时查找多个文件\",{\"1\":{\"1014\":1}}],[\"可以同时拆分多个分割符\",{\"1\":{\"526\":1}}],[\"可以同时上传多个文件\",{\"1\":{\"391\":1}}],[\"可以同步加载\",{\"1\":{\"464\":1}}],[\"可以先定义函数\",{\"1\":{\"452\":1}}],[\"可以分别使用\",{\"1\":{\"449\":1}}],[\"可以分为微任务\",{\"1\":{\"376\":1}}],[\"可以轻松添加或删除功能\",{\"1\":{\"442\":1}}],[\"可以接受第三个参数\",{\"1\":{\"432\":1}}],[\"可以生成\",{\"1\":{\"397\":1}}],[\"可以忽略\",{\"1\":{\"379\":1}}],[\"可以得出以下结论\",{\"1\":{\"376\":1}}],[\"可以得出结论\",{\"1\":{\"284\":1,\"705\":1}}],[\"可以修改视图而不影响模型\",{\"1\":{\"2032\":1}}],[\"可以修改\",{\"1\":{\"370\":1}}],[\"可以使得不同的订阅者对象可以复用\",{\"1\":{\"1804\":1}}],[\"可以使这两个页面进行通信\",{\"1\":{\"861\":1}}],[\"可以使我们的设备振动\",{\"1\":{\"342\":1}}],[\"可以使用一个材质队列进行描述\",{\"1\":{\"2286\":1}}],[\"可以使用一串逗号来创建空位\",{\"1\":{\"679\":1}}],[\"可以使用集线器代替交换机\",{\"1\":{\"2220\":1}}],[\"可以使用保护代理来控制用户对特定功能的访问权限\",{\"1\":{\"1794\":1}}],[\"可以使用拦截器拦截网络请求\",{\"1\":{\"1794\":1}}],[\"可以使用缓存代理来缓存网络请求的结果\",{\"1\":{\"1794\":1}}],[\"可以使用命令来移除远程仓库\",{\"1\":{\"1608\":1}}],[\"可以使用使用以下命令来更新提交\",{\"1\":{\"1600\":1}}],[\"可以使用函数传递给\",{\"1\":{\"1297\":1}}],[\"可以使用这两个参数来计算新的状态对象\",{\"1\":{\"1194\":1}}],[\"可以使用以下任一命令应用存储列表中的第\",{\"1\":{\"1601\":1}}],[\"可以使用以下任一命令来显示暂存区\",{\"1\":{\"1634\":1}}],[\"可以使用以下任一命令来取回所有的更改\",{\"1\":{\"1601\":1}}],[\"可以使用以下任一命令来存储修改的内容\",{\"1\":{\"1601\":1}}],[\"可以使用以下命令在本地创建新标签\",{\"1\":{\"1618\":1}}],[\"可以使用以下命令进行递归删除\",{\"1\":{\"1613\":1}}],[\"可以使用以下命令进入mysql\",{\"1\":{\"1472\":1}}],[\"可以使用以下命令将文件从暂存区和工作区中删除\",{\"1\":{\"1613\":1}}],[\"可以使用以下命令将本地指定分支推送到与本地当前分支同名的远程分支上\",{\"1\":{\"1610\":1}}],[\"可以使用以下命令将本地指定分支推送到远程指定分支上\",{\"1\":{\"1610\":1}}],[\"可以使用以下命令将暂存区的文件修改提交到本地仓库\",{\"1\":{\"1600\":1}}],[\"可以使用以下命令将其他分支的代码合并到当前分支\",{\"1\":{\"1596\":1}}],[\"可以使用以下命令来比较两个分支上最后\",{\"1\":{\"1636\":1}}],[\"可以使用以下命令来显示工作目录\",{\"1\":{\"1635\":1}}],[\"可以使用以下命令来美化日志的输出\",{\"1\":{\"1630\":1}}],[\"可以使用以下命令来删除远程仓库指定标签\",{\"1\":{\"1621\":1}}],[\"可以使用以下命令来删除本地仓库指定标签\",{\"1\":{\"1621\":1}}],[\"可以使用以下命令来删除本地分支\",{\"1\":{\"1595\":1}}],[\"可以使用以下命令来切换标签\",{\"1\":{\"1620\":1}}],[\"可以使用以下命令来获取所有标签\",{\"1\":{\"1617\":1}}],[\"可以使用以下命令来回退到上一次\",{\"1\":{\"1614\":1}}],[\"可以使用以下命令来撤销所有还没有加入到缓存区的修改\",{\"1\":{\"1614\":1}}],[\"可以使用以下命令来从远程仓库获取最新版本到本地仓库\",{\"1\":{\"1609\":1}}],[\"可以使用以下命令来将远程仓库的标签拉取\",{\"1\":{\"1622\":1}}],[\"可以使用以下命令来将远程指定分支拉取到本地指定分支上\",{\"1\":{\"1609\":1}}],[\"可以使用以下命令来将本地分支与远程同名分支相关联\",{\"1\":{\"1610\":1}}],[\"可以使用以下命令来将本地项目链接到远程仓库\",{\"1\":{\"1607\":1}}],[\"可以使用以下命令来将分支重命名\",{\"1\":{\"1597\":1}}],[\"可以使用以下命令来返回每个贡献者的\",{\"1\":{\"1604\":1}}],[\"可以使用以下命令来保持相同的提交信息\",{\"1\":{\"1600\":1}}],[\"可以使用以下命令来暂存已修改的文件\",{\"1\":{\"1599\":1}}],[\"可以使用以下命令来强制删除本地分支\",{\"1\":{\"1595\":1}}],[\"可以使用以下命令来创建分支\",{\"1\":{\"1594\":1}}],[\"可以使用以下命令来列出所有的远程分支\",{\"1\":{\"1593\":1}}],[\"可以使用以下命令来查看分支的历史提交信息\",{\"1\":{\"1625\":1}}],[\"可以使用以下命令来查看某一个标签的详细信息\",{\"1\":{\"1617\":1}}],[\"可以使用以下命令来查看更加详细的信息\",{\"1\":{\"1606\":1}}],[\"可以使用以下命令来查看远程仓库\",{\"1\":{\"1606\":1}}],[\"可以使用以下命令来查看所有的本地分支和远程分支\",{\"1\":{\"1593\":1}}],[\"可以使用以下命令来查看当然所在的分支以及该项目所有的分支情况\",{\"1\":{\"1593\":1}}],[\"可以使用以下命令来查看\",{\"1\":{\"1582\":1}}],[\"可以使用以下命令查看所有配置信息\",{\"1\":{\"1590\":1}}],[\"可以使用以下命令查看设置的\",{\"1\":{\"1587\":1,\"1588\":1}}],[\"可以使用以下命令设置使用\",{\"1\":{\"1587\":1,\"1588\":1}}],[\"可以使用以下按键\",{\"1\":{\"1057\":1}}],[\"可以使用以下方式来先导入后导出模块内容\",{\"1\":{\"472\":1}}],[\"可以使用该位\",{\"1\":{\"1039\":1}}],[\"可以使用绝对模式\",{\"1\":{\"1037\":1}}],[\"可以使用如下命令\",{\"1\":{\"1016\":1}}],[\"可以使用如下方式来创建模块\",{\"1\":{\"445\":1}}],[\"可以使用cat命令来创建文件\",{\"1\":{\"983\":1}}],[\"可以使用各种不同的格式\",{\"1\":{\"981\":1}}],[\"可以使用反斜杠\",{\"1\":{\"973\":1}}],[\"可以使用临时变量将数组的长度缓存起来\",{\"1\":{\"888\":1}}],[\"可以使用解构赋值和rest运算符来实现数组的拷贝\",{\"1\":{\"851\":1}}],[\"可以使用数组解构为局部变量设置默认值\",{\"1\":{\"843\":1}}],[\"可以使用逗号操作符进行分隔\",{\"1\":{\"843\":1}}],[\"可以使用map遍历数组元素\",{\"1\":{\"801\":1}}],[\"可以使用number\",{\"1\":{\"796\":1}}],[\"可以使用双感叹号\",{\"1\":{\"795\":1}}],[\"可以使用扩展运算符\",{\"1\":{\"674\":1}}],[\"可以使用展开操作符\",{\"1\":{\"636\":1}}],[\"可以使用文件的\",{\"1\":{\"463\":1}}],[\"可以使用箭头函数解决\",{\"1\":{\"362\":1}}],[\"可以使用括号包裹整个解构赋值语句来解决上述问题\",{\"1\":{\"253\":1}}],[\"可以使用\",{\"1\":{\"118\":1,\"271\":1,\"285\":1,\"331\":1,\"343\":1,\"344\":1,\"388\":2,\"394\":1,\"413\":1,\"433\":1,\"467\":1,\"469\":1,\"470\":2,\"589\":1,\"714\":1,\"781\":1,\"874\":1,\"875\":1,\"1012\":1,\"1219\":1,\"1229\":1,\"1281\":1,\"1616\":1,\"1631\":3,\"1707\":1}}],[\"可以播放\",{\"1\":{\"338\":1}}],[\"可以放在数字内的任何地方\",{\"1\":{\"327\":1}}],[\"可以进行比较\",{\"1\":{\"320\":1}}],[\"可以表示任意大的整数\",{\"1\":{\"320\":1}}],[\"可以用两个已经存在的构件来创造一个新的构件\",{\"1\":{\"1900\":1}}],[\"可以用简单的键值对来存取的数据存储任务\",{\"1\":{\"1665\":1}}],[\"可以用于断言操作对象是非\",{\"1\":{\"1447\":1}}],[\"可以用于等待一个\",{\"1\":{\"595\":1}}],[\"可以用\",{\"1\":{\"719\":1,\"874\":1,\"1217\":1,\"1368\":1}}],[\"可以用不同的基输出数字\",{\"1\":{\"662\":1}}],[\"可以用来查找哪一次代码提交引入了错误\",{\"1\":{\"1637\":1}}],[\"可以用来进行关机程序\",{\"1\":{\"918\":1}}],[\"可以用来扩展一个数组对象和字符串\",{\"1\":{\"630\":1}}],[\"可以用来阻止浏览器的一些默认行为\",{\"1\":{\"392\":1}}],[\"可以用来调节音量\",{\"1\":{\"338\":1}}],[\"可以用来简化一些表达式\",{\"1\":{\"329\":1}}],[\"可以用来合并对象\",{\"0\":{\"304\":1}}],[\"可以用八个字总结\",{\"1\":{\"178\":1}}],[\"可以通过顶点着色器和片元着色器来访问\",{\"1\":{\"2742\":1}}],[\"可以通过重新配置\",{\"1\":{\"2180\":1}}],[\"可以通过硬件实现\",{\"1\":{\"2077\":1}}],[\"可以通过其接口访问它的服务\",{\"1\":{\"2019\":1}}],[\"可以通过增加新的工厂类来扩展新产品的生产\",{\"1\":{\"1752\":1}}],[\"可以通过运行以下命令来检查当前分支的状态\",{\"1\":{\"1584\":1}}],[\"可以通过这个整数快速访问对应的小块\",{\"1\":{\"674\":1}}],[\"可以通过这个方法来筛选字符串中的数字\",{\"1\":{\"518\":1}}],[\"可以通过使用\",{\"1\":{\"474\":1,\"781\":1}}],[\"可以通过以下两种方式使用模块\",{\"1\":{\"474\":1}}],[\"可以通过以下两种方式来导出模块内容\",{\"1\":{\"452\":1}}],[\"可以通过以下方式来引入\",{\"1\":{\"470\":1}}],[\"可以通过以下方式来导入\",{\"1\":{\"470\":1}}],[\"可以通过以下方式来导入模块\",{\"1\":{\"453\":1}}],[\"可以通过以下方式生成\",{\"1\":{\"398\":1}}],[\"可以通过对比\",{\"1\":{\"391\":1}}],[\"可以通过传递\",{\"1\":{\"342\":1}}],[\"可以通过参数提供字符串作为描述\",{\"1\":{\"316\":1}}],[\"可以通过\",{\"1\":{\"271\":1,\"320\":1,\"321\":1,\"395\":1,\"451\":1,\"462\":1,\"643\":1,\"728\":1,\"738\":1,\"1369\":1,\"2283\":1,\"2284\":1}}],[\"可以通过直接给父元素设置\",{\"1\":{\"181\":1}}],[\"可以省略\",{\"1\":{\"275\":1}}],[\"可以省略大括号\",{\"1\":{\"260\":1}}],[\"可以省去参数的括号\",{\"1\":{\"260\":1}}],[\"可以将一个presenter用于多个视图\",{\"1\":{\"2032\":1}}],[\"可以将一个字符串中的有效的整数内容取出来\",{\"1\":{\"663\":1}}],[\"可以将函数的参数限定为更具体的类型\",{\"1\":{\"1428\":1}}],[\"可以将cat与管道|结合使用\",{\"1\":{\"983\":1}}],[\"可以将属性值从对象\",{\"1\":{\"836\":1}}],[\"可以将可迭代对象转为用逗号分隔的参数序列\",{\"1\":{\"630\":1}}],[\"可以将传给\",{\"1\":{\"581\":1}}],[\"可以将系统分割成独立的功能部分\",{\"1\":{\"442\":1}}],[\"可以将列表元素添加到其父级中并将父级分配给全局变量\",{\"1\":{\"437\":1}}],[\"可以将blob\",{\"1\":{\"413\":1}}],[\"可以将\",{\"1\":{\"393\":1,\"434\":1}}],[\"可以将现有对象的方法赋值给某个变量\",{\"1\":{\"253\":1}}],[\"可以将页面理想地展示\",{\"1\":{\"201\":1}}],[\"可以是three\",{\"1\":{\"2674\":1}}],[\"可以是\",{\"1\":{\"1006\":1,\"2671\":1,\"2788\":1}}],[\"可以是文件名\",{\"1\":{\"1006\":1}}],[\"可以是一个目录或文件名\",{\"1\":{\"1006\":1}}],[\"可以是相对路径或绝对路径\",{\"1\":{\"968\":1}}],[\"可以是任意多个\",{\"1\":{\"701\":1}}],[\"可以是任何类型\",{\"1\":{\"272\":1}}],[\"可以是需要在\",{\"1\":{\"537\":1}}],[\"可以是字符串或者整数\",{\"1\":{\"320\":1}}],[\"可以是标准的\",{\"1\":{\"232\":1}}],[\"可以是不同的小程序id\",{\"1\":{\"108\":2}}],[\"可以包含浮动\",{\"1\":{\"184\":2}}],[\"可以在顶点着色器中访问\",{\"1\":{\"2742\":1}}],[\"可以在不需要重新创建一个透明的面的情况下做到类似的效果\",{\"1\":{\"2737\":1}}],[\"可以在项目启动的时候自动进行加载\",{\"1\":{\"2073\":1}}],[\"可以在项目的根目录中创建一个名为\",{\"1\":{\"1583\":1}}],[\"可以在无其他特殊构件的情况下进行组装和部署\",{\"1\":{\"1900\":1}}],[\"可以在命令中添加\",{\"1\":{\"1626\":1,\"1636\":1}}],[\"可以在需要被合并的分支上执行以下命令\",{\"1\":{\"1602\":1}}],[\"可以在三个区域进行文件更改\",{\"1\":{\"1584\":1}}],[\"可以在终端中打开项目目录\",{\"1\":{\"1583\":1}}],[\"可以在回调函数中编写状态的处理逻辑\",{\"1\":{\"1196\":1}}],[\"可以在日常编码中采用这样的代码抽象方式\",{\"1\":{\"728\":1}}],[\"可以在数组末尾增加删除元素\",{\"1\":{\"680\":1}}],[\"可以在执行脚本启动时加上\",{\"1\":{\"474\":1}}],[\"可以在模块中的任何位置定义它们\",{\"1\":{\"467\":1}}],[\"可以在模块执行时动态加载依赖\",{\"1\":{\"464\":1}}],[\"可以在合适的环境选择对应的模块规范\",{\"1\":{\"465\":1}}],[\"可以在\",{\"1\":{\"450\":1}}],[\"可以在chrome\",{\"1\":{\"437\":1}}],[\"可以在此判断特征值是否支持读写等操作\",{\"1\":{\"127\":1}}],[\"可以在res里判断有没有硬件佬给你的服务\",{\"1\":{\"127\":1}}],[\"可选参数\",{\"0\":{\"1423\":1},\"1\":{\"490\":1,\"1753\":1,\"1754\":1,\"2852\":1,\"2853\":1}}],[\"可选的整数参数\",{\"1\":{\"520\":1}}],[\"可选的\",{\"1\":{\"388\":1,\"1006\":1,\"1273\":1}}],[\"可选链有以下三种形式\",{\"1\":{\"322\":1,\"644\":1}}],[\"可选链操作符也是很有帮助的\",{\"1\":{\"322\":1,\"644\":1}}],[\"可选链操作符将会使表达式更短\",{\"1\":{\"322\":1,\"644\":1}}],[\"可选链操作符\",{\"0\":{\"322\":1,\"644\":1},\"1\":{\"322\":1,\"644\":1}}],[\"可选值有\",{\"1\":{\"2805\":1}}],[\"可选值\",{\"1\":{\"20\":3,\"63\":3}}],[\"可选\",{\"0\":{\"1339\":1},\"1\":{\"16\":3,\"59\":3,\"279\":1,\"287\":2,\"289\":1,\"363\":3,\"403\":1,\"409\":2,\"458\":2,\"522\":1,\"526\":1,\"528\":1,\"529\":1,\"530\":1,\"550\":1,\"684\":2,\"685\":2,\"702\":1,\"703\":1,\"872\":2,\"873\":2,\"875\":2,\"876\":2,\"878\":2,\"1072\":1,\"2333\":1,\"2334\":2,\"2341\":2,\"2342\":2,\"2464\":1,\"2465\":1,\"2466\":1,\"2599\":1,\"2619\":1,\"2697\":1,\"2746\":1,\"2777\":1,\"2788\":1,\"2842\":1}}],[\"可选类型\",{\"0\":{\"1412\":1},\"1\":{\"16\":1,\"59\":1}}],[\"$loading\",{\"1\":{\"1766\":1}}],[\"$destory\",{\"1\":{\"1521\":1}}],[\"$destroy\",{\"1\":{\"1519\":1}}],[\"$data实际上是获取vm\",{\"1\":{\"1517\":1}}],[\"$data\",{\"1\":{\"1517\":1,\"1521\":1}}],[\"$forceupdate\",{\"1\":{\"1519\":1,\"1521\":1}}],[\"$emit\",{\"1\":{\"1518\":1}}],[\"$el就被替换成了更新之前的老的虚拟dom\",{\"1\":{\"1528\":1}}],[\"$el就是咱们传入的el选项\",{\"1\":{\"1528\":1}}],[\"$el\",{\"1\":{\"1479\":4,\"1486\":1,\"1526\":1,\"1528\":1}}],[\"$off\",{\"1\":{\"1518\":1}}],[\"$once\",{\"1\":{\"1518\":1}}],[\"$options就是用户new\",{\"1\":{\"1486\":1,\"1525\":1,\"1533\":1,\"1548\":1}}],[\"$options\",{\"0\":{\"1508\":1},\"1\":{\"1486\":4,\"1491\":2,\"1525\":4,\"1527\":1,\"1533\":3,\"1548\":4,\"1569\":1}}],[\"$createelement\",{\"1\":{\"1511\":1,\"1520\":1}}],[\"$children\",{\"1\":{\"1509\":1}}],[\"$root\",{\"1\":{\"1509\":1}}],[\"$refs\",{\"1\":{\"1509\":1}}],[\"$request\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"$remote\",{\"1\":{\"1152\":2,\"1153\":3}}],[\"$watch\",{\"0\":{\"1492\":1},\"1\":{\"1491\":1,\"1492\":1,\"1517\":1}}],[\"$watch创建用户watcher\",{\"1\":{\"1491\":1}}],[\"$props\",{\"1\":{\"1517\":2,\"1521\":1}}],[\"$proxy\",{\"1\":{\"1153\":1}}],[\"$parent\",{\"1\":{\"1509\":1}}],[\"$path\",{\"1\":{\"1103\":1}}],[\"$host\",{\"1\":{\"1153\":1}}],[\"$http\",{\"1\":{\"1152\":3,\"1153\":5}}],[\"$body\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"$time\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"$$\",{\"1\":{\"1105\":1}}],[\"$9代表第1到第9个参数\",{\"1\":{\"1104\":1}}],[\"$1\",{\"1\":{\"1104\":1}}],[\"$0代表命令本身\",{\"1\":{\"1104\":1}}],[\"$nexttick\",{\"1\":{\"1492\":1,\"1543\":1}}],[\"$num2\",{\"1\":{\"1113\":1}}],[\"$num1\",{\"1\":{\"1113\":1}}],[\"$n\",{\"1\":{\"1096\":1,\"1104\":1}}],[\"$m\",{\"1\":{\"1096\":1}}],[\"$mount\",{\"1\":{\"82\":1,\"83\":1,\"1486\":1,\"1502\":1,\"1525\":2,\"1548\":2}}],[\"$x\",{\"1\":{\"1096\":1}}],[\"$变量名\",{\"1\":{\"1095\":1}}],[\"$status\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"$store\",{\"1\":{\"83\":2}}],[\"$sum\",{\"1\":{\"1113\":1}}],[\"$s\",{\"1\":{\"1062\":2}}],[\"$\",{\"1\":{\"31\":1,\"39\":1,\"74\":1,\"109\":7,\"239\":1,\"255\":3,\"333\":1,\"334\":1,\"345\":1,\"395\":1,\"433\":1,\"590\":1,\"596\":5,\"806\":3,\"843\":6,\"859\":1,\"864\":1,\"1018\":1,\"1061\":1,\"1089\":2,\"1104\":4,\"1105\":1,\"1110\":2,\"1243\":1,\"1244\":3,\"1268\":1,\"1282\":1,\"1286\":2,\"1287\":1,\"1289\":1,\"1290\":1,\"1315\":1,\"1355\":1,\"1390\":2,\"1411\":2,\"1412\":2,\"1436\":1,\"1467\":4,\"1469\":2,\"1549\":1,\"1550\":3,\"1551\":9,\"1552\":1,\"1789\":1,\"1798\":3}}],[\"并调用init\",{\"1\":{\"2872\":1}}],[\"并设置为白色\",{\"1\":{\"2855\":1}}],[\"并考虑设备像素比\",{\"1\":{\"2845\":1}}],[\"并会对拥有私有\",{\"1\":{\"2744\":1}}],[\"并更改颜色照亮的方式\",{\"1\":{\"2710\":1}}],[\"并入入度为0的属性集中\",{\"1\":{\"2246\":1}}],[\"并以该属性集合为起点\",{\"1\":{\"2246\":1}}],[\"并以新的字符串返回被提取的部分\",{\"1\":{\"528\":1}}],[\"并基于该逻辑结构实施后续的资源分配规划\",{\"1\":{\"2217\":1}}],[\"并完成设计的整个过程\",{\"1\":{\"2179\":1}}],[\"并让组织与架构匹配\",{\"1\":{\"2055\":1}}],[\"并让所有的实例都可以访问到呢\",{\"1\":{\"478\":1}}],[\"并再次基础上通过适当的手段消除检测出的失配问题\",{\"1\":{\"2028\":1}}],[\"并存入构件库\",{\"1\":{\"2028\":1}}],[\"并非所有的需求都能在开发前被准确的说明\",{\"1\":{\"1923\":1}}],[\"并延伸到企业技术创新\",{\"1\":{\"1873\":1}}],[\"并利用信息进行预测\",{\"1\":{\"1864\":1}}],[\"并提高系统的灵活性和可扩展性\",{\"1\":{\"1835\":1}}],[\"并提供多种语言的api\",{\"1\":{\"2061\":1}}],[\"并提供注册\",{\"1\":{\"1802\":1}}],[\"并提供一个访问它的全局访问点\",{\"1\":{\"1762\":1}}],[\"并指定目标服务器\",{\"1\":{\"1794\":1}}],[\"并指明客户端的初始化序列号\",{\"1\":{\"1726\":1}}],[\"并确保在整个应用程序中只存在一个该对象的实例\",{\"1\":{\"1767\":2}}],[\"并确保在整个应用中是唯一的\",{\"1\":{\"1764\":1}}],[\"并确保在数据加载时为用户提供一个流畅的体验\",{\"1\":{\"1312\":1}}],[\"并负责创建具体的产品\",{\"1\":{\"1755\":1}}],[\"并复用http的握手通道\",{\"1\":{\"1735\":1}}],[\"并复制目录下的所有内容\",{\"1\":{\"998\":1}}],[\"并停止再发送数据\",{\"1\":{\"1728\":1}}],[\"并同步连接双方的序列号和确认号\",{\"1\":{\"1726\":1}}],[\"并行处理\",{\"1\":{\"2213\":1}}],[\"并行转换策略\",{\"1\":{\"1945\":1}}],[\"并行\",{\"1\":{\"1850\":1}}],[\"并行工程方法\",{\"0\":{\"1850\":1}}],[\"并行下载\",{\"1\":{\"1707\":2}}],[\"并行回收\",{\"0\":{\"1649\":1}}],[\"并进行部分原本cpu的工作\",{\"1\":{\"2179\":1}}],[\"并进行详细测试\",{\"1\":{\"1901\":1}}],[\"并进行双向数据传输\",{\"1\":{\"1735\":1}}],[\"并进行标记化\",{\"1\":{\"1706\":1}}],[\"并进入\",{\"1\":{\"1729\":1}}],[\"并进入插入模式\",{\"1\":{\"1056\":2}}],[\"并加入源及目标的ip地址\",{\"1\":{\"1691\":1}}],[\"并标记编号\",{\"1\":{\"1690\":1}}],[\"并标出不同之处\",{\"1\":{\"1009\":1}}],[\"并很快被用于管理许多其他\",{\"1\":{\"1577\":1}}],[\"并建立相应的父子关联\",{\"1\":{\"1550\":1}}],[\"并取出来\",{\"1\":{\"1550\":1}}],[\"并挂载至\",{\"0\":{\"1508\":1}}],[\"并需要模拟\",{\"1\":{\"1259\":1}}],[\"并传了值\",{\"1\":{\"1220\":1}}],[\"并生成关联的操作\",{\"1\":{\"1167\":1}}],[\"并发产生的问题\",{\"0\":{\"2259\":1}}],[\"并发控制\",{\"0\":{\"2257\":1}}],[\"并发回收\",{\"0\":{\"1651\":1}}],[\"并发模式下的状态更新分类\",{\"1\":{\"1308\":1}}],[\"并发模式的时候才有效\",{\"1\":{\"1236\":1}}],[\"并发连接数\",{\"1\":{\"1153\":1}}],[\"并发送到前端\",{\"1\":{\"859\":1}}],[\"并只打印匹配的行数\",{\"1\":{\"1016\":1}}],[\"并打印出该字符串所在行的内容\",{\"1\":{\"1016\":1}}],[\"并打印出该字符串的行\",{\"1\":{\"1016\":1}}],[\"并打印匹配行所在的文件名和行号\",{\"1\":{\"1016\":1}}],[\"并打印匹配的行\",{\"1\":{\"1016\":1}}],[\"并打上\",{\"1\":{\"20\":1,\"63\":1}}],[\"并排格式输出\",{\"1\":{\"1010\":1}}],[\"并执行命令\",{\"1\":{\"986\":1}}],[\"并执行拼接操作\",{\"1\":{\"616\":1}}],[\"并用$表示行结束\",{\"1\":{\"984\":1}}],[\"并用^i表示制表符\",{\"1\":{\"984\":1}}],[\"并用得到的结果根据前面的规则执行比较\",{\"1\":{\"628\":1}}],[\"并合并连续的空行\",{\"1\":{\"984\":1}}],[\"并添加组\",{\"1\":{\"954\":1}}],[\"并没有定义\",{\"1\":{\"898\":1}}],[\"并没有被销毁\",{\"1\":{\"506\":1}}],[\"并抛出一个\",{\"1\":{\"895\":1}}],[\"并\",{\"1\":{\"864\":1}}],[\"并定义我们希望如何将对象转换为原始类型的值\",{\"1\":{\"806\":1}}],[\"并把其存放在内部地址中\",{\"1\":{\"2208\":1}}],[\"并把原有的对象类型数据拷贝过来\",{\"1\":{\"761\":1}}],[\"并把返回值赋予变量d\",{\"1\":{\"646\":1}}],[\"并使用\",{\"1\":{\"1025\":1}}],[\"并使用需要的类型来进行类型转换\",{\"1\":{\"801\":1}}],[\"并使用每个参数作为列表中的项创建列表进行拼接\",{\"1\":{\"728\":1}}],[\"并使用它将网页上的数据共享到另一台设备\",{\"1\":{\"341\":1}}],[\"并支持新的迭代协议\",{\"1\":{\"719\":1,\"874\":1}}],[\"并列出它们的完整路径\",{\"1\":{\"1007\":1}}],[\"并列\",{\"1\":{\"653\":1}}],[\"并未得到执行\",{\"1\":{\"597\":1}}],[\"并最后返回一个\",{\"1\":{\"592\":1}}],[\"并暂停该生成器函数的执行\",{\"1\":{\"589\":1}}],[\"并给他传入一个对象\",{\"1\":{\"558\":1}}],[\"并返回已解析的url\",{\"1\":{\"2476\":1}}],[\"并返回\",{\"1\":{\"1518\":1}}],[\"并返回对应属性的值\",{\"1\":{\"1366\":1}}],[\"并返回下一个状态\",{\"1\":{\"1273\":1}}],[\"并返回相应的属性值\",{\"1\":{\"849\":1}}],[\"并返回新的长度\",{\"1\":{\"696\":1}}],[\"并返回它\",{\"1\":{\"695\":1}}],[\"并返回数组新的长度\",{\"1\":{\"692\":1}}],[\"并返回转化后的值\",{\"1\":{\"604\":1}}],[\"并返回一个对象\",{\"1\":{\"2798\":1}}],[\"并返回一个最近的按序到达的报文段的肯定回答\",{\"1\":{\"1724\":1}}],[\"并返回一个浮点数\",{\"1\":{\"551\":1}}],[\"并返回一个整数\",{\"1\":{\"550\":1}}],[\"并返回该模块的\",{\"1\":{\"451\":1}}],[\"并对函数的代码进行压缩\",{\"1\":{\"502\":1}}],[\"并不属于操作队列的方法\",{\"1\":{\"694\":1}}],[\"并不会创建一个新的\",{\"1\":{\"1766\":1}}],[\"并不会真正影响到远程仓库\",{\"1\":{\"1608\":1}}],[\"并不会真的重开机\",{\"1\":{\"921\":1}}],[\"并不会真的关机\",{\"1\":{\"919\":1}}],[\"并不会阻止你与其它字符串比较\",{\"1\":{\"1436\":1}}],[\"并不会立即进行重新渲染\",{\"1\":{\"1199\":1}}],[\"并不会输入一个字符\",{\"1\":{\"1056\":1}}],[\"并不会改变原数组\",{\"1\":{\"682\":1}}],[\"并不会产生其他影响\",{\"1\":{\"638\":1}}],[\"并不会提升到全函数可见\",{\"1\":{\"507\":1}}],[\"并不是每个系统都方便分层\",{\"1\":{\"1983\":1}}],[\"并不是父元素\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"并不是所有函数里的代码都有返回值时\",{\"1\":{\"1454\":1}}],[\"并不是把函数存储到状态中\",{\"1\":{\"1303\":1}}],[\"并不是孤立存在的\",{\"1\":{\"482\":1}}],[\"并不是一个模块管理规范\",{\"1\":{\"465\":1}}],[\"并不适用于经典脚本\",{\"1\":{\"467\":1}}],[\"并不引用全局\",{\"1\":{\"467\":1}}],[\"并不鼓励这种方法\",{\"1\":{\"463\":1}}],[\"并允许以正确的顺序加载它们\",{\"1\":{\"463\":1}}],[\"并允许网页中的\",{\"1\":{\"390\":1}}],[\"并通过将它们作为参数传递给函数来自动将其注入到模块中\",{\"1\":{\"463\":1}}],[\"并创建两个购物车实例\",{\"1\":{\"455\":1}}],[\"并计算当前购物车商品的总价格\",{\"1\":{\"455\":1}}],[\"并计算购物车商品总价格\",{\"1\":{\"455\":1}}],[\"并逐渐增加\",{\"1\":{\"436\":1}}],[\"并可以跨平台运行\",{\"1\":{\"1641\":1}}],[\"并可以将消息发送到频道中\",{\"1\":{\"343\":1}}],[\"并可能导致不可预测的行为\",{\"1\":{\"1285\":1}}],[\"并可能导致性能下降\",{\"1\":{\"425\":1}}],[\"并显示在了屏幕上\",{\"1\":{\"413\":1}}],[\"并将记录结果保存在独立的文件中\",{\"1\":{\"2266\":1}}],[\"并将可配置与可剪裁的软\",{\"1\":{\"2176\":1}}],[\"并将事件写入中继日志\",{\"1\":{\"2080\":1}}],[\"并将超时的间隔设置为以前的两倍\",{\"1\":{\"1724\":1}}],[\"并将缓冲区的大小发送给另一端\",{\"1\":{\"1723\":1}}],[\"并将这个请求加到请求队列中\",{\"1\":{\"1703\":1}}],[\"并将自身的下一个引用对象转为灰色\",{\"1\":{\"1650\":1}}],[\"并将该部分返回\",{\"1\":{\"1646\":1}}],[\"并将该字符串取代为word2\",{\"1\":{\"1062\":3}}],[\"并将其他数据\",{\"1\":{\"2742\":1}}],[\"并将其视为单例对象来管理应用的状态\",{\"1\":{\"1764\":1}}],[\"并将其返回给使用者\",{\"1\":{\"1747\":1}}],[\"并将其保存到localstorage\",{\"1\":{\"1274\":2}}],[\"并将其放在\",{\"1\":{\"463\":1}}],[\"并将结果输出到combined\",{\"1\":{\"983\":1}}],[\"并将一个值储存在\",{\"1\":{\"895\":1}}],[\"并将第二个元素与该索引值对应的元素进行交换\",{\"1\":{\"748\":1}}],[\"并将元素传递给回调函数\",{\"1\":{\"712\":1,\"872\":1}}],[\"并将它们添加了数组末尾\",{\"1\":{\"692\":1}}],[\"并将它放在一个成为拖放区域的特殊区域中\",{\"1\":{\"392\":1}}],[\"并将\",{\"1\":{\"592\":1}}],[\"并将参数\",{\"1\":{\"567\":1}}],[\"并将url对应的网页下载下来\",{\"1\":{\"217\":1}}],[\"并从栈中弹出此方法\",{\"1\":{\"374\":1}}],[\"并在非透明对象之后渲染\",{\"1\":{\"2677\":1}}],[\"并在状态变化时进行相应操作的对象\",{\"1\":{\"1802\":1}}],[\"并在父类中定义一些抽象的方法\",{\"1\":{\"1755\":1}}],[\"并在执行过程中带来明显的延迟\",{\"1\":{\"1641\":1}}],[\"并在最后列出所有增减行数小计\",{\"1\":{\"1631\":1}}],[\"并在每个文件里加入\",{\"1\":{\"1454\":1}}],[\"并在每行的前面加上行号\",{\"1\":{\"984\":1}}],[\"并在合适的时机触发组件的重新渲染\",{\"1\":{\"1194\":1}}],[\"并在当前目录下恢复其中包含的文件和目录\",{\"1\":{\"1025\":1}}],[\"并在删除之前询问它们\",{\"1\":{\"1007\":1}}],[\"并在目标文件已存在时进行确认\",{\"1\":{\"999\":1}}],[\"并在网页上呈现出来\",{\"1\":{\"812\":1}}],[\"并在上个任务的回调函数内部执行新的业务逻辑\",{\"1\":{\"569\":1}}],[\"并在声明之前打印它\",{\"1\":{\"500\":1}}],[\"并在\",{\"1\":{\"343\":1,\"388\":1,\"578\":1}}],[\"并依次赋值变量\",{\"1\":{\"252\":1}}],[\"并赋予一个初始化值\",{\"1\":{\"249\":1}}],[\"并赋值\",{\"1\":{\"185\":1}}],[\"并触发该容器生成一个bfc\",{\"1\":{\"151\":1}}],[\"并且相关材料将不会呈现\",{\"1\":{\"2794\":1}}],[\"并且被重定位\",{\"1\":{\"2602\":1,\"2703\":1}}],[\"并且必须返回\",{\"1\":{\"2477\":1}}],[\"并且强调将正确性验证\",{\"1\":{\"1906\":1}}],[\"并且可以用于在场景中查找此类型的所有对象\",{\"1\":{\"2678\":1}}],[\"并且可以选择重写父类的方法\",{\"1\":{\"1829\":1}}],[\"并且可以被替换使⽤\",{\"1\":{\"1785\":1}}],[\"并且使它们可以互相替换\",{\"1\":{\"1784\":1}}],[\"并且该实例需要被全局访问时\",{\"1\":{\"1763\":1}}],[\"并且该方法不接受负的参数\",{\"1\":{\"530\":1}}],[\"并且隐藏了具体产品的实现细节\",{\"1\":{\"1755\":1}}],[\"并且握手阶段采用http协议\",{\"1\":{\"1736\":1}}],[\"并且频率特别⾼的\",{\"1\":{\"1730\":1}}],[\"并且频率不是特别⾼的场景\",{\"1\":{\"1730\":1}}],[\"并且发生重传时\",{\"1\":{\"1724\":1}}],[\"并且发现设备\",{\"1\":{\"128\":1}}],[\"并且此处完全不可以使用重发机制\",{\"1\":{\"1715\":1}}],[\"并且收到什么数据就传递什么数据\",{\"1\":{\"1712\":1}}],[\"并且也是指定了自己的初始化序列号\",{\"1\":{\"1726\":1}}],[\"并且也不会备份数据\",{\"1\":{\"1712\":1}}],[\"并且也不被传递给任何子组件\",{\"1\":{\"1212\":1}}],[\"并且也只是数据报文的搬运工\",{\"1\":{\"1712\":1}}],[\"并且进行一些验证\",{\"1\":{\"1696\":1}}],[\"并且负责寻找传输路线\",{\"1\":{\"1691\":1}}],[\"并且根据你输入的内容进行自动完成\",{\"1\":{\"1678\":1}}],[\"并且根据排名算法计算出哪些网页应该排在前面\",{\"1\":{\"217\":1}}],[\"并且内部函数\",{\"1\":{\"1653\":1}}],[\"并且内存消耗一直没有减少\",{\"1\":{\"436\":1}}],[\"并且由于剩余空闲内存不是一整块\",{\"1\":{\"1646\":1}}],[\"并且我们试图一次遍历并标记整个对象集\",{\"1\":{\"1641\":1}}],[\"并且仓库中存在文件\",{\"1\":{\"1609\":1}}],[\"并且指向了\",{\"1\":{\"1535\":1}}],[\"并且指定的\",{\"1\":{\"953\":1}}],[\"并且需要开始比对标签属性和儿子\",{\"1\":{\"1476\":1}}],[\"并且需要提供回调函数\",{\"1\":{\"1303\":1}}],[\"并且不会在渲染期间发生任何不期望的副作用\",{\"1\":{\"1285\":1}}],[\"并且不能适应页面的快速变化\",{\"1\":{\"181\":1}}],[\"并且性能表现得很好\",{\"1\":{\"1269\":1}}],[\"并且你想在某些依赖未改变时避免这些计算\",{\"1\":{\"1267\":1}}],[\"并且一次安装所有依赖的软件包\",{\"1\":{\"1071\":1}}],[\"并且文件所属组的用户和其他用户具有读权限的文件\",{\"1\":{\"1007\":1}}],[\"并且在你的缓存几何模型\",{\"1\":{\"2744\":1}}],[\"并且在整个应用中是唯一的\",{\"1\":{\"1764\":1}}],[\"并且在严格模式下\",{\"1\":{\"1431\":1}}],[\"并且在关机以前传送讯息给所有使用者正在执行的程序\",{\"1\":{\"918\":1}}],[\"并且在检测到强制转换时会抛出错误\",{\"1\":{\"803\":1}}],[\"并且允许我们对这个变量的值进行访问和修改\",{\"1\":{\"895\":1}}],[\"并且他可以进行跨域通信\",{\"1\":{\"865\":1}}],[\"并且请求的页面是存在的\",{\"1\":{\"864\":1,\"866\":1}}],[\"并且\",{\"1\":{\"836\":1}}],[\"并且显示在页面上\",{\"1\":{\"821\":1}}],[\"并且判断是\",{\"1\":{\"760\":1,\"768\":1}}],[\"并且拷贝一层对象属性\",{\"1\":{\"760\":1}}],[\"并且没有任何副作用\",{\"1\":{\"1264\":1}}],[\"并且没有改变数组的原始值\",{\"1\":{\"709\":1}}],[\"并且没有一些限制大小的逻辑\",{\"1\":{\"433\":1}}],[\"并且完成了异步操作的一次性的执行效果\",{\"1\":{\"590\":1}}],[\"并且把其中的参数传递给后面的\",{\"1\":{\"568\":1}}],[\"并且因为代码压缩的原因\",{\"1\":{\"502\":1}}],[\"并且这一操作只进行一次\",{\"1\":{\"502\":1}}],[\"并且这个属性是一个对象数据类型的值\",{\"1\":{\"479\":1}}],[\"并且等该代码块中的代码执行完成之后\",{\"1\":{\"501\":1}}],[\"并且定义的变量或者函数只能在函数内部被访问\",{\"1\":{\"501\":1}}],[\"并且提前让声明生效\",{\"1\":{\"501\":1}}],[\"并且将声明内容一起提升到最上边\",{\"1\":{\"500\":1}}],[\"并且将url放入待抓取url队列\",{\"1\":{\"217\":1}}],[\"并且实例和实例之间是相互独立的\",{\"1\":{\"478\":1}}],[\"并且创建这个类的实例\",{\"1\":{\"478\":1}}],[\"并且执行的结果应该按照依赖数组中的位置顺序以参数的形式传入工厂函数中\",{\"1\":{\"458\":1}}],[\"并且代码单元被封装和隔离\",{\"1\":{\"445\":1}}],[\"并且它是对该对象的唯一引用\",{\"1\":{\"433\":1}}],[\"并且永远不会被垃圾回收\",{\"1\":{\"427\":1}}],[\"并且浏览器在运行它时不会抛出任何错误\",{\"1\":{\"425\":1}}],[\"并且设置一个定时器\",{\"1\":{\"1724\":1}}],[\"并且设置\",{\"1\":{\"350\":1}}],[\"并且结构深度\",{\"1\":{\"312\":1}}],[\"并且只支持\",{\"1\":{\"859\":1}}],[\"并且只会返回第一次匹配到的值的位置\",{\"1\":{\"519\":1}}],[\"并且只公开希望其他文件使用的部分代码\",{\"1\":{\"455\":1}}],[\"并且只对外公开定义的接口\",{\"1\":{\"445\":1}}],[\"并且只能使用一次\",{\"1\":{\"305\":1}}],[\"并且只有不传入参数时才会触发默认值\",{\"1\":{\"256\":1}}],[\"并且得到主机的ip\",{\"1\":{\"217\":1}}],[\"并且放在引入的\",{\"1\":{\"207\":1}}],[\"并且向左移动\",{\"1\":{\"178\":1}}],[\"并且与这个区域外部毫不相干\",{\"1\":{\"147\":1}}],[\"并且有一套渲染规则\",{\"1\":{\"147\":1}}],[\"并且读\",{\"1\":{\"122\":1}}],[\"并声明执行结果\",{\"1\":{\"94\":1}}],[\"并新建文件index\",{\"1\":{\"83\":1}}],[\"并新建index\",{\"1\":{\"82\":1}}],[\"并重命名为commit\",{\"1\":{\"31\":1,\"74\":1}}],[\"钩子被忽略的错误\",{\"1\":{\"33\":1,\"76\":1}}],[\"钩子\",{\"0\":{\"31\":1,\"74\":1,\"1512\":1,\"1516\":1}}],[\"添加一条linecurve用于闭合路径\",{\"1\":{\"2423\":1}}],[\"添加一条曲线到\",{\"1\":{\"2422\":1}}],[\"添加一般用户\",{\"1\":{\"945\":1}}],[\"添加和访问与当前几何体有关的\",{\"1\":{\"2282\":1}}],[\"添加用户\",{\"1\":{\"2039\":1}}],[\"添加远程仓库\",{\"0\":{\"1607\":1}}],[\"添加响应式\",{\"1\":{\"1521\":1}}],[\"添加响应式监听\",{\"1\":{\"1514\":1}}],[\"添加权重\",{\"1\":{\"1153\":1}}],[\"添加它们\",{\"1\":{\"805\":1}}],[\"添加新的元素\",{\"1\":{\"731\":1}}],[\"添加新元素\",{\"1\":{\"271\":1}}],[\"添加属性来导出模块\",{\"1\":{\"464\":1}}],[\"添加后\",{\"1\":{\"432\":1}}],[\"添加了不同的依赖数组\",{\"1\":{\"1244\":1}}],[\"添加了\",{\"1\":{\"300\":1}}],[\"添加映射值\",{\"1\":{\"272\":1}}],[\"添加或者删除可见的dom元素\",{\"1\":{\"224\":1}}],[\"添加的人不姓韩\",{\"1\":{\"83\":1}}],[\"添加\",{\"0\":{\"31\":1,\"74\":1},\"1\":{\"240\":1,\"1521\":1}}],[\"添加所有文件\",{\"0\":{\"8\":1,\"51\":1}}],[\"六\",{\"0\":{\"28\":1,\"71\":1,\"319\":1,\"629\":1,\"1562\":1,\"1700\":1}}],[\"将该light对象转换为\",{\"1\":{\"2860\":1}}],[\"将该第一个元素和这个索引对应的元素进行交换\",{\"1\":{\"748\":1}}],[\"将视口大小设置为\",{\"1\":{\"2846\":1}}],[\"将updatestyle设置为false以阻止对canvas的样式做任何改变\",{\"1\":{\"2845\":1}}],[\"将剪裁区域设为\",{\"1\":{\"2843\":1}}],[\"将rendertarget中的像素数据读取到传入的缓冲区中\",{\"1\":{\"2835\":1}}],[\"将gl状态重置为默认值\",{\"1\":{\"2834\":1}}],[\"将纹理的所有像素复制到一个已有的从给定位置开始的纹理中\",{\"1\":{\"2818\":1}}],[\"将几何体渲染为线框\",{\"1\":{\"2764\":1}}],[\"将通用顶点索引绑定到属性变量\",{\"1\":{\"2755\":1}}],[\"将许多对象组合成单个\",{\"1\":{\"2741\":1}}],[\"将material对象转换为\",{\"1\":{\"2691\":1}}],[\"将被传入材质中的参数复制到此材质中\",{\"1\":{\"2686\":1}}],[\"将多个事物分层在一起而不创建z\",{\"1\":{\"2653\":1}}],[\"将多余的删除或者添加进去\",{\"1\":{\"1478\":1}}],[\"将摄像机转换为\",{\"1\":{\"2545\":1,\"2589\":1}}],[\"将源摄像机的属性复制到新摄像机中\",{\"1\":{\"2519\":1}}],[\"将源文件名\",{\"1\":{\"1001\":1}}],[\"将调用此函数\",{\"1\":{\"2464\":1,\"2465\":1,\"2466\":1}}],[\"将给定的json数据复制到此实例\",{\"1\":{\"2347\":1}}],[\"将另一个curve对象复制到此实例\",{\"1\":{\"2345\":1}}],[\"将使用相距一个小三角形的两个点来求与其实际梯度的近似值\",{\"1\":{\"2341\":1}}],[\"将使用该值\",{\"1\":{\"806\":1}}],[\"将参数指定的\",{\"1\":{\"2301\":1}}],[\"将参数从一个函数传递到另一个函数\",{\"1\":{\"729\":1}}],[\"将关系模式的函数依赖关系用\",{\"1\":{\"2246\":1}}],[\"将微处理器装配在专门设计的电路板上\",{\"1\":{\"2179\":1}}],[\"将程序与内存均划分为同样大小的块\",{\"1\":{\"2160\":1}}],[\"将操作写binlog日志文件\",{\"1\":{\"2080\":1}}],[\"将相关需要缓存数据直接加到缓存系统中\",{\"1\":{\"2073\":1}}],[\"将现有产品演化为产品线\",{\"1\":{\"2016\":1}}],[\"将抽象部分与它的实现部分分离\",{\"1\":{\"1820\":1}}],[\"将窗口的首部向后滑动到确认报文段的后一个位置\",{\"1\":{\"1724\":1}}],[\"将输入解析成符号\",{\"1\":{\"1704\":1}}],[\"将输出canvas的大小调整为\",{\"1\":{\"2845\":1}}],[\"将输出文件合并为一个文件\",{\"1\":{\"1454\":1}}],[\"将输出和上面一样的原始代码\",{\"1\":{\"317\":1}}],[\"将事件处理函数定义在外面\",{\"1\":{\"1653\":1}}],[\"将在次轮\",{\"1\":{\"1650\":1}}],[\"将在本地级别写入\",{\"1\":{\"1586\":1}}],[\"将要等待回收\",{\"1\":{\"1650\":1}}],[\"将所有可能存在的数据哈希到一个足够大的bitmap中\",{\"1\":{\"2072\":1}}],[\"将所有能访问到的数据标记为黑色\",{\"1\":{\"1650\":1}}],[\"将所需数据\",{\"1\":{\"859\":1}}],[\"将修改文件添加到暂存区\",{\"1\":{\"1614\":2}}],[\"将用于跟踪项目更改的多个文件和更多子目录\",{\"1\":{\"1583\":1}}],[\"将虚拟dom转化成真实dom节点\",{\"1\":{\"1528\":1}}],[\"将当前webglframebuffer中的像素复制到2d纹理中\",{\"1\":{\"2817\":1}}],[\"将当前几何体分割成组进行渲染\",{\"1\":{\"2286\":1}}],[\"将当前组件实例挂载到真实的el节点上面\",{\"1\":{\"1525\":1}}],[\"将当前目录及其子目录下所有\",{\"1\":{\"1007\":1}}],[\"将当前目录及其子目录下所有文件后缀为\",{\"1\":{\"1007\":1}}],[\"将当前目录及其子目录中的所有文件列出\",{\"1\":{\"1007\":1}}],[\"将创建一个空的虚拟\",{\"1\":{\"1520\":1}}],[\"将watcher存到队列中\",{\"1\":{\"1493\":1}}],[\"将需要批量更新的watcher存到一个队列中\",{\"1\":{\"1493\":1}}],[\"将老节点删除\",{\"1\":{\"1478\":1}}],[\"将不同的地方更新真实的dom\",{\"1\":{\"1476\":1}}],[\"将不同类型的数据转化为数字类型\",{\"1\":{\"605\":1}}],[\"将代码与\",{\"1\":{\"1454\":1}}],[\"将每个文件做为单独的模块\",{\"1\":{\"1454\":1}}],[\"将子类公用的方法抽象出来放在父类中\",{\"1\":{\"1389\":1}}],[\"将值赋给\",{\"1\":{\"1372\":1}}],[\"将类型的属性变成必选\",{\"1\":{\"1373\":1}}],[\"将类型的属性变成可选\",{\"1\":{\"1372\":1}}],[\"将类数组对象变成数组\",{\"0\":{\"632\":1}}],[\"将更新分为不同的优先级类别\",{\"1\":{\"1308\":1}}],[\"将函数作为状态存储可能会更加方便\",{\"1\":{\"1303\":1}}],[\"将函数存储为状态可以确保即使组件的其他部分发生变化\",{\"1\":{\"1303\":1}}],[\"将状态更新逻辑嵌套在回调函数内\",{\"1\":{\"1197\":1}}],[\"将变量声明为只读变量\",{\"1\":{\"1109\":1}}],[\"将变量声明为环境变量\",{\"1\":{\"1109\":1}}],[\"将变量声明为正数型\",{\"1\":{\"1109\":1}}],[\"将变量声明为属组类型\",{\"1\":{\"1109\":1}}],[\"将n1到n2的内容储存成filename这个档案\",{\"1\":{\"1067\":1}}],[\"将num1和num2中的最大值赋值给了res\",{\"1\":{\"637\":1}}],[\"将编辑的数据储存成另一个档案\",{\"1\":{\"1067\":1}}],[\"将编辑的数据写入硬盘档案中\",{\"1\":{\"1067\":1}}],[\"将光标所在行与下一行的数据结合成同一行\",{\"1\":{\"1063\":1}}],[\"将目前目录下的所有文件与子目录皆设为任何人可读取\",{\"1\":{\"1041\":1}}],[\"将目录及以下之档案亦逐一删除\",{\"1\":{\"995\":1}}],[\"将名为\",{\"1\":{\"1025\":1}}],[\"将指定目录下的所有文件及子目录一并处理\",{\"1\":{\"1021\":1,\"1032\":1}}],[\"将指定目录下的所有文件和子目录一并处理\",{\"1\":{\"1018\":1}}],[\"将压缩文件的更改时间设成和该文件相同\",{\"1\":{\"1018\":1}}],[\"将比较结果以\",{\"1\":{\"1009\":1}}],[\"将结果保留下来\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"将结果交由\",{\"1\":{\"1009\":1}}],[\"将结果放到\",{\"1\":{\"863\":1}}],[\"将文件拖入网页时创建的blob或file对象\",{\"1\":{\"2462\":1}}],[\"将文件压缩并加入压缩文件后\",{\"1\":{\"1018\":1}}],[\"将文件压缩后附加在既有的压缩文件之后\",{\"1\":{\"1018\":1}}],[\"将文件\",{\"1\":{\"1001\":1,\"1025\":1,\"1041\":3}}],[\"将文件file\",{\"1\":{\"999\":1}}],[\"将文本设置为从输入框中输入的文本中朗读\",{\"1\":{\"340\":1}}],[\"将less输出的内容在指定文件中保存起来\",{\"1\":{\"989\":1}}],[\"将cat命令的输出作为另一个命令的输入\",{\"1\":{\"984\":1}}],[\"将标准输入追加到文件filename的末尾\",{\"1\":{\"984\":1}}],[\"将标准输入重定向到文件filename\",{\"1\":{\"984\":1}}],[\"将标示成\",{\"1\":{\"930\":1}}],[\"将tab字符显示为^i\",{\"1\":{\"983\":1}}],[\"将工作目录下\",{\"1\":{\"979\":1}}],[\"将按照修改时间排序\",{\"1\":{\"972\":1}}],[\"将异步循环变成同步循环\",{\"1\":{\"879\":1}}],[\"将处理所有原始类型转换\",{\"1\":{\"806\":1}}],[\"将布尔值转化为数字时\",{\"1\":{\"798\":1}}],[\"将布局视口的宽度设置成了理想视口\",{\"1\":{\"202\":1}}],[\"将对象\",{\"1\":{\"1650\":1}}],[\"将对象转换为原始值\",{\"1\":{\"807\":1}}],[\"将对象转换为原始类型\",{\"1\":{\"777\":1}}],[\"将对象扩展为元素\",{\"0\":{\"303\":1}}],[\"将字符串转换为数字\",{\"1\":{\"777\":1}}],[\"将字符串转为逗号分隔的数组\",{\"0\":{\"267\":1}}],[\"将两者都转换为数字\",{\"1\":{\"775\":1}}],[\"将两个方法传入函数执行\",{\"1\":{\"580\":1}}],[\"将x转化为数字\",{\"1\":{\"775\":1}}],[\"将一些不变信息直接存储在本地\",{\"1\":{\"1663\":1}}],[\"将一个类的接口转换成客户希望的另一个接口\",{\"1\":{\"1780\":1}}],[\"将一个方法名\",{\"1\":{\"859\":1}}],[\"将一个或多个值转换为数字\",{\"1\":{\"776\":1}}],[\"将一个数组拼接到另一个数组\",{\"0\":{\"266\":1}}],[\"将一个数组转为用逗号分隔的参数序列\",{\"1\":{\"264\":1}}],[\"将一种类型转换为另一种类型\",{\"1\":{\"773\":1}}],[\"将待拷贝的对象放入栈中\",{\"1\":{\"766\":1}}],[\"将它们转换为原始值\",{\"1\":{\"807\":1}}],[\"将它们替换成空格\",{\"1\":{\"740\":1}}],[\"将它的字符串参数解析成为浮点数并返回\",{\"1\":{\"551\":1}}],[\"将看到这样的输出\",{\"1\":{\"578\":1}}],[\"将以\",{\"1\":{\"550\":1}}],[\"将返回\",{\"1\":{\"518\":1,\"550\":1}}],[\"将作用域内部的变量统一提升无疑是最快速\",{\"1\":{\"501\":1}}],[\"将尝试在本地可用的模块之前加载模块的\",{\"1\":{\"463\":1}}],[\"将删除指向\",{\"1\":{\"434\":1}}],[\"将永远保留在回调的范围内\",{\"1\":{\"432\":1}}],[\"将数据库中的数据文件备份出来\",{\"1\":{\"2265\":1}}],[\"将数据库的文件全部备份\",{\"1\":{\"2265\":1}}],[\"将数据字节的各位用多条数据线同时进行传送\",{\"1\":{\"2185\":1}}],[\"将数据段打包\",{\"1\":{\"1691\":1}}],[\"将数据类型转换为数字称为数字转换\",{\"1\":{\"796\":1}}],[\"将数据类型转换为布尔值称为布尔转换\",{\"1\":{\"789\":1}}],[\"将数据类型转换为字符串称为字符串转换\",{\"1\":{\"781\":1}}],[\"将数据对象解包\",{\"1\":{\"430\":1}}],[\"将数组转成对象\",{\"0\":{\"314\":1}}],[\"将数组转化为用逗号分隔的参数序列\",{\"0\":{\"265\":1}}],[\"将冗余对象保留在内存中会导致应用程序内部使用过多的内存\",{\"1\":{\"425\":1}}],[\"将图片\",{\"1\":{\"414\":1}}],[\"将file1和file2的内容合并到file3中\",{\"1\":{\"984\":1}}],[\"将file\",{\"1\":{\"413\":1}}],[\"将上传的图片通过以上方式显示在页面上\",{\"1\":{\"395\":1}}],[\"将新对象赋给当前的\",{\"1\":{\"359\":1}}],[\"将内容写入剪贴板\",{\"1\":{\"344\":1}}],[\"将消息发送到\",{\"1\":{\"343\":1}}],[\"将语音识别为文字\",{\"1\":{\"340\":1}}],[\"将音频元素作为音频源传递\",{\"1\":{\"338\":1}}],[\"将会出现下面几个问题\",{\"1\":{\"2076\":1}}],[\"将会被重传\",{\"1\":{\"1713\":1}}],[\"将会被放进\",{\"1\":{\"388\":1}}],[\"将会影响后续内存分配\",{\"1\":{\"1648\":1}}],[\"将会影响程序运行的性能\",{\"1\":{\"651\":1}}],[\"将会在当前事件循环中同步执行更新\",{\"1\":{\"1203\":1}}],[\"将会拷贝对象其他的所有可枚举属性\",{\"1\":{\"305\":1}}],[\"将会把\",{\"1\":{\"253\":1}}],[\"将元素组织成对象\",{\"0\":{\"302\":1}}],[\"将这些接收者链接成一条链\",{\"1\":{\"1835\":1}}],[\"将这些函数存储为状态可以确保你只在必要时重新创建它们\",{\"1\":{\"1303\":1}}],[\"将这些url放进已抓取url队列\",{\"1\":{\"217\":1}}],[\"将这些url放入待抓取url队列\",{\"1\":{\"217\":1}}],[\"将这样解释\",{\"1\":{\"1040\":1}}],[\"将这个初始值放在数组的最后一位\",{\"1\":{\"284\":1,\"705\":1}}],[\"将其解释为模型特定方法的调用\",{\"1\":{\"2031\":1}}],[\"将其解释为系统能够理解的对象\",{\"1\":{\"2031\":1}}],[\"将其自身由灰色转变成黑色\",{\"1\":{\"1650\":1}}],[\"将其拼接到原数组中\",{\"1\":{\"737\":1}}],[\"将其转换为原始类型\",{\"1\":{\"806\":2}}],[\"将其转换为数字\",{\"1\":{\"777\":1}}],[\"将其转换为\",{\"1\":{\"536\":1}}],[\"将其转换为一个\",{\"1\":{\"324\":1}}],[\"将其结果汇总为单个返回值\",{\"1\":{\"284\":1,\"705\":1}}],[\"将其视为同一个键\",{\"1\":{\"272\":1}}],[\"将其视为一个键\",{\"1\":{\"272\":1}}],[\"将其称之为暂时性死区\",{\"1\":{\"249\":1}}],[\"将构造函数的作用域赋给新对象\",{\"1\":{\"262\":1}}],[\"将形成一个独立的作用域\",{\"1\":{\"258\":1}}],[\"将频繁重绘或者回流的节点设置为图层\",{\"1\":{\"226\":1}}],[\"将自己或自己公司的排名前移\",{\"1\":{\"217\":1}}],[\"将获取到的设备id存起来\",{\"1\":{\"127\":1}}],[\"将16进制的内容转成我们看得懂的字符串内容\",{\"1\":{\"123\":1,\"127\":1}}],[\"将信息提交给上面的gettextinput方法\",{\"1\":{\"94\":1}}],[\"将\",{\"0\":{\"315\":1},\"1\":{\"27\":1,\"70\":1,\"208\":1,\"360\":1,\"395\":1,\"402\":3,\"433\":1,\"436\":1,\"592\":1,\"611\":1,\"662\":1,\"729\":1,\"763\":1,\"799\":1,\"800\":1,\"803\":1,\"902\":1,\"989\":1,\"1001\":1,\"1009\":1,\"1019\":1,\"1036\":1,\"1201\":1,\"1418\":1,\"1514\":1}}],[\"五\",{\"0\":{\"24\":1,\"67\":1,\"306\":1,\"593\":1,\"626\":1,\"1552\":1,\"1561\":1,\"1699\":1}}],[\"|usernmae2\",{\"1\":{\"1626\":1}}],[\"||=\",{\"1\":{\"329\":1}}],[\"||\",{\"0\":{\"625\":1},\"1\":{\"128\":2,\"232\":2,\"237\":2,\"239\":4,\"321\":3,\"322\":2,\"329\":1,\"356\":1,\"357\":1,\"359\":1,\"495\":2,\"582\":1,\"584\":2,\"625\":1,\"643\":3,\"644\":2,\"760\":1,\"768\":2,\"774\":1,\"789\":1,\"795\":9,\"860\":1,\"902\":2,\"1426\":1,\"1469\":1,\"1476\":2,\"1477\":3,\"1485\":1,\"1528\":1,\"1534\":1,\"1550\":2,\"1829\":1}}],[\"|\",{\"0\":{\"608\":1,\"1339\":1},\"1\":{\"23\":3,\"39\":5,\"66\":3,\"184\":6,\"608\":7,\"740\":1,\"983\":1,\"984\":2,\"990\":1,\"1016\":1,\"1087\":1,\"1097\":1,\"1101\":1,\"1139\":1,\"1144\":1,\"1340\":5,\"1343\":1,\"1366\":7,\"1367\":2,\"1370\":2,\"1375\":1,\"1376\":2,\"1378\":9,\"1379\":5,\"1381\":6,\"1382\":1,\"1405\":1,\"1416\":3,\"1426\":1,\"1428\":1,\"1429\":9,\"1435\":1,\"1436\":1,\"1442\":1,\"1447\":2,\"1458\":4,\"1459\":1,\"1466\":1,\"1467\":2,\"1468\":3,\"1469\":2,\"1551\":1}}],[\"8m\",{\"1\":{\"1648\":1}}],[\"8a0fd74\",{\"1\":{\"1615\":1}}],[\"8888\",{\"1\":{\"864\":3,\"866\":2,\"1153\":1}}],[\"888\",{\"1\":{\"864\":1}}],[\"8080\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"80\",{\"1\":{\"848\":1,\"1152\":2,\"1153\":2,\"1677\":1}}],[\"8000\",{\"1\":{\"118\":1,\"122\":2,\"123\":2,\"125\":2,\"127\":2,\"557\":1,\"864\":3,\"865\":3,\"866\":3,\"1152\":1,\"1789\":1}}],[\"800x400\",{\"1\":{\"94\":1}}],[\"85\",{\"1\":{\"836\":1,\"844\":1,\"847\":1}}],[\"81\",{\"1\":{\"797\":2}}],[\"8+7\",{\"1\":{\"550\":1}}],[\"8414709848078965\",{\"1\":{\"253\":1}}],[\"8的css样式\",{\"1\":{\"204\":1}}],[\"83\",{\"1\":{\"118\":1}}],[\"8且包含中文\",{\"1\":{\"104\":1}}],[\"8\",{\"0\":{\"271\":1,\"345\":1,\"534\":1,\"643\":1,\"707\":1,\"879\":1,\"1515\":1,\"1631\":1,\"1724\":1},\"1\":{\"23\":2,\"66\":2,\"109\":1,\"123\":1,\"127\":1,\"204\":1,\"206\":1,\"284\":1,\"312\":4,\"388\":1,\"400\":2,\"402\":6,\"403\":1,\"404\":1,\"405\":1,\"406\":1,\"550\":2,\"662\":2,\"663\":1,\"678\":12,\"681\":1,\"701\":2,\"705\":1,\"712\":2,\"742\":2,\"743\":2,\"748\":1,\"749\":1,\"872\":2,\"877\":1,\"1256\":1,\"1409\":1,\"1702\":1,\"1839\":1,\"2407\":1,\"2438\":1}}],[\"za\",{\"1\":{\"1550\":2}}],[\"zerovalue\",{\"1\":{\"1362\":2}}],[\"zlib\",{\"1\":{\"1133\":2}}],[\"zh\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"zhcn\",{\"1\":{\"1157\":2,\"1175\":2,\"1182\":2}}],[\"zhufeng\",{\"1\":{\"1094\":1,\"1097\":1}}],[\"zhangsan\",{\"1\":{\"297\":2,\"356\":2,\"357\":2,\"836\":1,\"838\":1,\"844\":1,\"847\":1,\"848\":1,\"1110\":1}}],[\"zq\",{\"1\":{\"1067\":1}}],[\"zxvf\",{\"1\":{\"1025\":1,\"1132\":1}}],[\"zcvf\",{\"1\":{\"1025\":1}}],[\"zip\",{\"0\":{\"1017\":1},\"1\":{\"1018\":1,\"1019\":8,\"2477\":1}}],[\"zfpx\",{\"1\":{\"860\":1}}],[\"zone\",{\"1\":{\"392\":2}}],[\"zoom\",{\"0\":{\"2540\":1,\"2579\":1},\"1\":{\"21\":1,\"64\":1,\"2582\":1}}],[\"zz\",{\"1\":{\"689\":1,\"989\":1,\"1067\":1}}],[\"zzz\",{\"1\":{\"270\":1}}],[\"zzy\",{\"1\":{\"83\":1}}],[\"z\",{\"0\":{\"2317\":1,\"2323\":1},\"1\":{\"21\":1,\"64\":1,\"252\":6,\"279\":1,\"520\":1,\"521\":1,\"522\":1,\"535\":1,\"838\":8,\"840\":2,\"841\":2,\"1012\":1,\"1018\":1,\"1025\":2,\"1363\":1,\"1550\":2,\"2316\":1,\"2842\":1}}],[\"99999\",{\"1\":{\"940\":2}}],[\"996\",{\"1\":{\"703\":2,\"1680\":1}}],[\"95\",{\"1\":{\"848\":1}}],[\"9000\",{\"1\":{\"1152\":2,\"2744\":1}}],[\"900\",{\"1\":{\"596\":2}}],[\"96rem\",{\"1\":{\"207\":1}}],[\"980px\",{\"1\":{\"201\":1}}],[\"98\",{\"1\":{\"127\":2,\"518\":1}}],[\"9\",{\"0\":{\"272\":1,\"538\":1,\"644\":1,\"710\":1,\"1516\":1,\"1725\":1},\"1\":{\"21\":1,\"64\":1,\"123\":1,\"127\":1,\"282\":2,\"397\":2,\"402\":1,\"403\":1,\"463\":1,\"520\":1,\"545\":2,\"551\":1,\"578\":1,\"621\":1,\"701\":2,\"706\":1,\"712\":2,\"742\":2,\"743\":2,\"748\":1,\"749\":1,\"801\":4,\"872\":2,\"877\":1,\"1018\":1,\"1021\":2,\"1040\":1,\"1338\":1,\"1550\":1,\"2006\":1}}],[\"新型的计算范式\",{\"1\":{\"2180\":1}}],[\"新请求分配给当前活动请求数量最少的节点\",{\"1\":{\"2077\":1}}],[\"新用户学习使用系统时间不超过2小时\",{\"1\":{\"2008\":1}}],[\"新需求\",{\"1\":{\"1949\":1}}],[\"新需求的考虑过程和正向工程三个步骤\",{\"1\":{\"1905\":1}}],[\"新旧系统的转换策略\",{\"0\":{\"1945\":1}}],[\"新构件整合原构件的功能\",{\"1\":{\"1900\":1}}],[\"新修改的白色对象\",{\"1\":{\"1650\":1}}],[\"新加入的对象都会存放到使用区\",{\"1\":{\"1648\":1}}],[\"新生代对象空间就采用并行策略\",{\"1\":{\"1649\":1}}],[\"新生代对象是通过一个名为\",{\"1\":{\"1648\":1}}],[\"新生代垃圾回收器会对使用区中的活动对象做标记\",{\"1\":{\"1648\":1}}],[\"新生代垃圾回收\",{\"1\":{\"1648\":1}}],[\"新生代的对象为存活时间较短的对象\",{\"1\":{\"1648\":1}}],[\"新生成的数组会经过该函数的加工再返回\",{\"1\":{\"286\":1,\"678\":1}}],[\"新老生代的回收机制及频率是不同的\",{\"1\":{\"1648\":1}}],[\"新老生代\",{\"1\":{\"1648\":1}}],[\"新老都是文本\",{\"1\":{\"1476\":1}}],[\"新密码\",{\"1\":{\"1472\":1}}],[\"新值渲染出来\",{\"1\":{\"1234\":1}}],[\"新的乘法计算\",{\"1\":{\"1798\":1}}],[\"新的子节点有多的就添加到相应的位置\",{\"1\":{\"1478\":1}}],[\"新的有\",{\"1\":{\"1477\":1}}],[\"新的里面不存在这个样式\",{\"1\":{\"1477\":1}}],[\"新的没有\",{\"1\":{\"1477\":1}}],[\"新的没有儿子\",{\"1\":{\"1476\":1}}],[\"新的\",{\"1\":{\"1477\":1,\"1641\":1}}],[\"新的属性\",{\"1\":{\"1477\":1}}],[\"新的文件拥有者的使用者组\",{\"1\":{\"1035\":1}}],[\"新的文件拥有者的使用者\",{\"1\":{\"1035\":1}}],[\"新的静态导入和导出语法仅在模块中可用\",{\"1\":{\"467\":1}}],[\"新工作组的信息将被添加到系统文件中\",{\"1\":{\"952\":1}}],[\"新数组中的值为原数组调用函数处理之后的值\",{\"1\":{\"713\":1}}],[\"新增产品类不需修改原有代码\",{\"1\":{\"1750\":1}}],[\"新增方法普遍将这些空位当成存在的元素\",{\"1\":{\"679\":1}}],[\"新增的\",{\"1\":{\"732\":1}}],[\"新增的方法和迭代器与早期版本中存在的方法的行为不同\",{\"1\":{\"679\":1}}],[\"新增的特性\",{\"1\":{\"328\":1}}],[\"新增\",{\"1\":{\"657\":1,\"1571\":2}}],[\"新增了一个\",{\"1\":{\"731\":1}}],[\"新增了两个关键字\",{\"1\":{\"594\":1}}],[\"新增了\",{\"1\":{\"246\":1,\"320\":1,\"499\":1,\"678\":1,\"681\":1}}],[\"新增命令\",{\"1\":{\"22\":1,\"65\":1}}],[\"新特性\",{\"0\":{\"245\":1,\"288\":1,\"291\":1,\"298\":1,\"306\":1,\"319\":1,\"325\":1,\"330\":1}}],[\"新建一个分支\",{\"1\":{\"1623\":1}}],[\"新建person\",{\"1\":{\"83\":1}}],[\"新建count\",{\"1\":{\"83\":1}}],[\"新建文件夹sotre\",{\"1\":{\"83\":1}}],[\"新建router文件夹\",{\"1\":{\"82\":1}}],[\"新建lint\",{\"1\":{\"27\":1,\"70\":1}}],[\"新建\",{\"1\":{\"20\":1,\"21\":2,\"62\":1,\"63\":2,\"64\":2,\"1484\":1,\"1526\":1,\"1541\":1}}],[\"新功能\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"0之间的浮点数\",{\"1\":{\"2839\":1}}],[\"0到\",{\"1\":{\"2839\":1}}],[\"0表示完全不透明\",{\"1\":{\"2667\":1}}],[\"0表示完全透明\",{\"1\":{\"2667\":1}}],[\"0表示正数\",{\"1\":{\"609\":1}}],[\"0的范围内的浮点数\",{\"1\":{\"2667\":1}}],[\"0对于perspectivecamera的近端面来说不是一个有效值\",{\"1\":{\"2577\":1}}],[\"0对于orthographiccamera的近端面来说是一个有效值\",{\"1\":{\"2536\":1}}],[\"07\",{\"1\":{\"1572\":1,\"1659\":1}}],[\"04\",{\"1\":{\"1544\":1,\"1565\":1}}],[\"0或功能键\",{\"1\":{\"1061\":1}}],[\"02\",{\"1\":{\"1553\":1}}],[\"022\",{\"1\":{\"1043\":1}}],[\"023\",{\"1\":{\"663\":1}}],[\"09\",{\"1\":{\"931\":1}}],[\"05\",{\"1\":{\"931\":4,\"1494\":1,\"1626\":2}}],[\"0为假\",{\"1\":{\"889\":1}}],[\"0~4\",{\"1\":{\"817\":1}}],[\"08\",{\"1\":{\"787\":2,\"1036\":1}}],[\"064\",{\"1\":{\"2554\":1}}],[\"06\",{\"1\":{\"689\":1,\"1033\":2,\"1480\":1,\"1487\":1}}],[\"0减\",{\"1\":{\"617\":1}}],[\"0减+0\",{\"1\":{\"617\":1}}],[\"0加\",{\"1\":{\"616\":1}}],[\"0ms\",{\"1\":{\"378\":1}}],[\"011\",{\"1\":{\"1040\":1}}],[\"0111\",{\"1\":{\"608\":1,\"609\":1}}],[\"0110\",{\"1\":{\"606\":1,\"609\":3,\"610\":1}}],[\"0101\",{\"1\":{\"606\":2,\"607\":1,\"608\":1,\"610\":1}}],[\"010\",{\"1\":{\"550\":1,\"642\":1,\"1040\":1}}],[\"01\",{\"1\":{\"338\":2,\"551\":4,\"1536\":1}}],[\"015\",{\"1\":{\"293\":1,\"547\":1}}],[\"0o123456\",{\"1\":{\"327\":1}}],[\"0o123\",{\"1\":{\"327\":1}}],[\"03\",{\"1\":{\"215\":1,\"1033\":2,\"1529\":1}}],[\"0px\",{\"1\":{\"171\":1}}],[\"0x404040\",{\"1\":{\"2880\":1}}],[\"0x080820\",{\"1\":{\"2864\":1}}],[\"0x000000\",{\"1\":{\"2779\":1}}],[\"0x00ff00\",{\"1\":{\"2359\":1,\"2403\":1,\"2407\":1,\"2434\":1,\"2438\":1}}],[\"0xffffbb\",{\"1\":{\"2864\":1}}],[\"0xffffff\",{\"1\":{\"2450\":1,\"2562\":1,\"2697\":1,\"2702\":1,\"2852\":1,\"2868\":1,\"2872\":1,\"2884\":1}}],[\"0xffff00\",{\"1\":{\"2371\":1,\"2375\":1,\"2379\":1,\"2383\":1,\"2387\":1,\"2391\":1,\"2399\":1,\"2430\":1,\"2446\":1}}],[\"0xff0000\",{\"1\":{\"2278\":1,\"2411\":1,\"2876\":1}}],[\"0x12\",{\"1\":{\"663\":2}}],[\"0x10\",{\"1\":{\"550\":1}}],[\"0x\",{\"1\":{\"123\":1,\"127\":1,\"550\":2}}],[\"0022\",{\"1\":{\"1043\":1}}],[\"003\",{\"1\":{\"801\":2}}],[\"0002\",{\"1\":{\"1047\":1,\"1048\":1}}],[\"0001\",{\"1\":{\"607\":1}}],[\"000\",{\"1\":{\"327\":3,\"642\":1,\"797\":1,\"1040\":1,\"1265\":1,\"1267\":2}}],[\"000000\",{\"1\":{\"1777\":2}}],[\"0000ffe1\",{\"1\":{\"122\":1,\"123\":1,\"125\":1,\"127\":1}}],[\"0000ffe0\",{\"1\":{\"122\":1,\"123\":1,\"125\":1,\"127\":1}}],[\"0000fff0\",{\"1\":{\"118\":1}}],[\"0000\",{\"1\":{\"118\":1,\"122\":2,\"123\":2,\"125\":2,\"127\":2,\"606\":3,\"607\":3,\"608\":3,\"609\":2,\"610\":3}}],[\"0011\",{\"1\":{\"607\":1,\"608\":1,\"610\":1}}],[\"001\",{\"1\":{\"293\":2,\"547\":1,\"1040\":1}}],[\"00\",{\"1\":{\"123\":1,\"127\":1,\"391\":1,\"551\":2,\"775\":1,\"787\":2,\"1659\":1}}],[\"00805f9b34fb\",{\"1\":{\"118\":1,\"122\":2,\"123\":2,\"125\":2,\"127\":2}}],[\"0\",{\"0\":{\"231\":1},\"1\":{\"20\":1,\"21\":4,\"30\":1,\"63\":1,\"64\":4,\"73\":1,\"83\":3,\"94\":1,\"109\":2,\"118\":1,\"119\":1,\"123\":3,\"125\":3,\"127\":8,\"128\":4,\"166\":4,\"191\":2,\"202\":3,\"207\":2,\"218\":1,\"226\":1,\"230\":1,\"239\":1,\"248\":2,\"250\":1,\"253\":2,\"256\":5,\"257\":1,\"272\":3,\"279\":1,\"282\":8,\"284\":2,\"285\":1,\"286\":1,\"287\":19,\"289\":1,\"293\":2,\"311\":2,\"321\":1,\"324\":1,\"332\":1,\"338\":4,\"340\":2,\"342\":4,\"343\":1,\"376\":1,\"381\":1,\"382\":1,\"388\":1,\"389\":3,\"391\":1,\"394\":1,\"395\":3,\"398\":1,\"400\":1,\"402\":4,\"403\":5,\"406\":1,\"411\":1,\"413\":1,\"414\":1,\"418\":2,\"430\":2,\"431\":1,\"436\":1,\"437\":1,\"455\":2,\"505\":3,\"506\":1,\"518\":1,\"520\":2,\"522\":1,\"528\":1,\"529\":1,\"530\":2,\"533\":1,\"545\":8,\"547\":2,\"550\":1,\"551\":1,\"580\":2,\"582\":4,\"583\":1,\"606\":11,\"607\":10,\"608\":5,\"609\":2,\"610\":6,\"616\":3,\"617\":2,\"621\":1,\"623\":1,\"642\":2,\"643\":1,\"645\":1,\"646\":1,\"653\":1,\"663\":9,\"664\":2,\"667\":5,\"669\":1,\"674\":2,\"677\":3,\"678\":5,\"680\":1,\"684\":19,\"685\":1,\"698\":9,\"702\":1,\"703\":3,\"705\":2,\"706\":1,\"710\":2,\"714\":1,\"715\":1,\"718\":1,\"719\":1,\"724\":2,\"727\":2,\"731\":2,\"735\":1,\"743\":1,\"745\":1,\"746\":2,\"748\":1,\"754\":4,\"763\":4,\"767\":1,\"772\":1,\"775\":1,\"777\":1,\"791\":4,\"794\":1,\"795\":4,\"797\":2,\"798\":2,\"799\":2,\"801\":2,\"802\":1,\"828\":1,\"838\":3,\"861\":1,\"862\":1,\"864\":12,\"865\":6,\"866\":10,\"867\":10,\"875\":1,\"876\":1,\"877\":3,\"879\":2,\"883\":4,\"888\":1,\"890\":1,\"903\":4,\"931\":4,\"937\":3,\"939\":4,\"940\":2,\"1007\":2,\"1040\":1,\"1043\":1,\"1088\":1,\"1105\":2,\"1110\":1,\"1141\":1,\"1152\":9,\"1153\":4,\"1167\":1,\"1168\":1,\"1176\":1,\"1185\":1,\"1196\":1,\"1197\":2,\"1204\":1,\"1235\":1,\"1243\":1,\"1244\":2,\"1251\":1,\"1255\":2,\"1256\":2,\"1269\":1,\"1273\":1,\"1274\":2,\"1282\":1,\"1287\":2,\"1289\":1,\"1311\":1,\"1315\":2,\"1320\":4,\"1321\":2,\"1323\":4,\"1324\":1,\"1339\":1,\"1357\":2,\"1362\":1,\"1407\":1,\"1413\":1,\"1414\":3,\"1417\":1,\"1418\":1,\"1429\":2,\"1469\":1,\"1476\":5,\"1478\":4,\"1486\":1,\"1493\":2,\"1534\":1,\"1535\":1,\"1541\":1,\"1542\":2,\"1550\":7,\"1551\":4,\"1557\":1,\"1559\":1,\"1561\":1,\"1562\":1,\"1563\":1,\"1571\":4,\"1618\":2,\"1646\":8,\"1649\":1,\"1814\":1,\"1817\":1,\"1823\":1,\"1832\":1,\"1839\":2,\"1914\":1,\"2210\":3,\"2278\":18,\"2285\":1,\"2333\":1,\"2334\":1,\"2340\":2,\"2341\":1,\"2342\":1,\"2395\":6,\"2403\":2,\"2407\":7,\"2411\":5,\"2438\":1,\"2442\":1,\"2446\":2,\"2667\":2,\"2744\":1,\"2749\":4,\"2754\":1,\"2760\":2,\"2842\":1,\"2845\":2,\"2856\":1,\"2868\":1,\"2872\":4}}],[\"这需要webglrenderer\",{\"1\":{\"2647\":1}}],[\"这太难\",{\"1\":{\"2132\":1}}],[\"这不现实\",{\"1\":{\"1895\":1}}],[\"这不仅提升了程序的可读性\",{\"1\":{\"1428\":1}}],[\"这不仅可以避免了外界访问此\",{\"1\":{\"902\":1}}],[\"这在实际开发中经常用于添加额外的逻辑\",{\"1\":{\"1794\":1}}],[\"这方便我们再较少的改动下对软件功能进行拓展\",{\"1\":{\"1777\":1}}],[\"这条指令并不会返回一个db对象的句柄\",{\"1\":{\"1671\":1}}],[\"这与\",{\"1\":{\"1670\":1}}],[\"这与上一点相似\",{\"1\":{\"1228\":1}}],[\"这肯定是不对的\",{\"1\":{\"1650\":1}}],[\"这其实是早先的一种垃圾回收算法\",{\"1\":{\"1646\":1}}],[\"这其实和\",{\"1\":{\"1236\":1}}],[\"这对渲染有影响\",{\"1\":{\"2677\":1}}],[\"这对应于webgl的gl\",{\"1\":{\"2668\":1}}],[\"这对应用程序的性能会有一些负面影响\",{\"1\":{\"1820\":1}}],[\"这对我们程序运行并没有太大影响\",{\"1\":{\"1650\":1}}],[\"这对数组很关键\",{\"1\":{\"1535\":1}}],[\"这对于在首次渲染之前预编译着色器很有用\",{\"1\":{\"2816\":1}}],[\"这对于\",{\"1\":{\"1210\":1}}],[\"这块代码在源码里面的位置其实是放在entry\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"这块和上面\",{\"1\":{\"591\":1}}],[\"这\",{\"1\":{\"1511\":1}}],[\"这实际上就是我们使用\",{\"1\":{\"1507\":1}}],[\"这实际上并没有给我们带来预期的性能优化\",{\"1\":{\"1212\":1}}],[\"这给了我们很大的自由\",{\"1\":{\"1417\":1}}],[\"这让我们可以把现有的多种类型叠加到一起成为一种类型\",{\"1\":{\"1460\":1}}],[\"这让\",{\"1\":{\"1417\":1}}],[\"这违反了\",{\"1\":{\"1285\":1}}],[\"这允许开发者插入自定义逻辑\",{\"1\":{\"1275\":1}}],[\"这通常更简洁\",{\"1\":{\"1274\":1}}],[\"这使得一位二进制位\",{\"1\":{\"1646\":1}}],[\"这使得\",{\"1\":{\"1274\":1,\"1418\":1}}],[\"这使得你可以同步地读取或更改\",{\"1\":{\"1255\":1}}],[\"这使得他们可以通过\",{\"1\":{\"867\":1}}],[\"这二者之间没有通过\",{\"1\":{\"1220\":1}}],[\"这可能导致部分业务功能模块的重复\",{\"1\":{\"2010\":1}}],[\"这可能导致代码难以测试和维护\",{\"1\":{\"1770\":1}}],[\"这可能会引入一定的处理延迟\",{\"1\":{\"1838\":1}}],[\"这可能会降低代码的可读性和可维护性\",{\"1\":{\"1212\":1}}],[\"这可能会导致子组件不必要地重新渲染\",{\"1\":{\"1209\":1}}],[\"这可以避免在缓冲区数据丢失时出错\",{\"1\":{\"2749\":1}}],[\"这可以与网格的renderorder属性结合使用\",{\"1\":{\"2649\":1}}],[\"这可以很好地模拟一些表面\",{\"1\":{\"2593\":1}}],[\"这可以减少我们的函数名与在页面中其他脚本区域内定义的函数名冲突的可能性\",{\"1\":{\"1817\":1}}],[\"这可以防止因为父组件的非相关渲染而导致的子组件的不必要重新渲染\",{\"1\":{\"1209\":1}}],[\"这可以确保相关的\",{\"1\":{\"1203\":1}}],[\"这可以用来执行与更新状态相关的操作\",{\"1\":{\"1196\":1}}],[\"这可以提高初始加载时的性能\",{\"1\":{\"471\":1}}],[\"这可以清除浮动\",{\"1\":{\"184\":1}}],[\"这五个词法单元\",{\"1\":{\"895\":1}}],[\"这五个方法都接收两个参数\",{\"1\":{\"711\":1}}],[\"这套规则就是作用域\",{\"1\":{\"895\":1}}],[\"这称为显式类型转化\",{\"1\":{\"773\":1}}],[\"这几个操作符都会返回一个布尔值\",{\"1\":{\"628\":1}}],[\"这四个操作符可以作用于任何类型的数据\",{\"1\":{\"602\":1}}],[\"这主要是为了能够捕捉抛出的错误\",{\"1\":{\"592\":1}}],[\"这又会依次调用新\",{\"1\":{\"581\":1}}],[\"这表明\",{\"1\":{\"575\":1}}],[\"这便是返回值穿透的效果\",{\"1\":{\"569\":1}}],[\"这么说可能有点抽象\",{\"1\":{\"569\":1}}],[\"这么做就是为了提高性能\",{\"1\":{\"502\":1}}],[\"这5个方法都对大小写敏感\",{\"1\":{\"519\":1}}],[\"这5个方法都可以用来检索一个字符串中是否包含特定的序列\",{\"1\":{\"519\":1}}],[\"这并不意味着引擎感知不到\",{\"1\":{\"511\":1}}],[\"这显然也是不太好的\",{\"1\":{\"488\":1}}],[\"这显然不是我们想要的\",{\"1\":{\"152\":1}}],[\"这三类账号就是对应的类簇\",{\"1\":{\"1755\":1}}],[\"这三种策略里面\",{\"1\":{\"1646\":1}}],[\"这三者之前存在一定的关系\",{\"1\":{\"484\":1}}],[\"这三个权限的位置不会改变\",{\"1\":{\"1029\":1}}],[\"这三个表达式用分号分隔\",{\"1\":{\"888\":1}}],[\"这三个方法都用来遍历对象\",{\"1\":{\"882\":1}}],[\"这三个方法都没有参数\",{\"1\":{\"879\":1}}],[\"这三个方法可以用于移除字符串首尾的头尾空白符\",{\"1\":{\"538\":1}}],[\"这三个方法的使用形式如下\",{\"1\":{\"355\":1}}],[\"这三个参数分别如下\",{\"1\":{\"464\":1}}],[\"这三个参数里面第一个参数是必选的\",{\"1\":{\"286\":1,\"678\":1}}],[\"这类似于\",{\"1\":{\"463\":1}}],[\"这意味着一系列操作步骤之中\",{\"1\":{\"1670\":1}}],[\"这意味着只有当其依赖项发生变化时\",{\"1\":{\"1264\":1}}],[\"这意味着在\",{\"1\":{\"1237\":1}}],[\"这意味着每次你在组件的渲染函数中创建一个新的对象并将其传递给\",{\"1\":{\"1236\":1}}],[\"这意味着如果依赖没有改变\",{\"1\":{\"1208\":1}}],[\"这意味着如果在一次事件处理函数中多次调用了\",{\"1\":{\"1199\":1}}],[\"这意味着你不能立即在调用后获取更新后的状态\",{\"1\":{\"1195\":1}}],[\"这意味着变量是没有明确类型的\",{\"1\":{\"772\":1}}],[\"这意味着没有办法知道\",{\"1\":{\"575\":1}}],[\"这意味着\",{\"1\":{\"467\":1,\"1264\":1,\"2767\":1}}],[\"这意味着当任何相关\",{\"1\":{\"1255\":1}}],[\"这意味着当\",{\"1\":{\"462\":1}}],[\"这意味着不能使用\",{\"1\":{\"432\":1}}],[\"这意味着切片应该从第一个字节开始\",{\"1\":{\"389\":1}}],[\"这取决于调用函数\",{\"1\":{\"431\":1}}],[\"这两点需要分清\",{\"1\":{\"1563\":1}}],[\"这两种类型的成员\",{\"1\":{\"1460\":1}}],[\"这两种类型的数据需要通过其他方式来判断\",{\"1\":{\"658\":1}}],[\"这两种方案\",{\"1\":{\"1475\":1}}],[\"这两种方式看似差不多\",{\"1\":{\"1274\":1}}],[\"这两种方法都是为了控制函数的执行频率\",{\"1\":{\"1237\":1}}],[\"这两种技术一起作用便可以将深层的嵌套回调写成下面的形式\",{\"1\":{\"569\":1}}],[\"这两行代码就会报错\",{\"1\":{\"503\":1}}],[\"这两者很相似\",{\"1\":{\"382\":1}}],[\"这两个顶点都需要被用到\",{\"1\":{\"2278\":1}}],[\"这两个页面之间是无法进行通信的\",{\"1\":{\"861\":1}}],[\"这两个对象相互独立\",{\"1\":{\"761\":1}}],[\"这两个值没有\",{\"1\":{\"662\":1}}],[\"这两个方法都可以用来计算对象中属性的个数\",{\"1\":{\"883\":1}}],[\"这两个方法都从数组的开始进行搜索\",{\"1\":{\"709\":1}}],[\"这两个方法都不适用于\",{\"1\":{\"309\":1}}],[\"这两个方法对于空数组\",{\"1\":{\"709\":1}}],[\"这两个方法的签名类似\",{\"1\":{\"683\":1}}],[\"这两个方法来创建\",{\"1\":{\"566\":1}}],[\"这两个选项可用于格式化以给定字符偏移量\",{\"1\":{\"20\":1,\"63\":1}}],[\"这一要求是可以实现的\",{\"1\":{\"2010\":1}}],[\"这一点和\",{\"1\":{\"1236\":1,\"1273\":1}}],[\"这一步就是将\",{\"1\":{\"895\":1}}],[\"这一步就会终止\",{\"1\":{\"895\":1}}],[\"这一步就会顺利完成\",{\"1\":{\"895\":1}}],[\"这一步需要\",{\"1\":{\"118\":1}}],[\"这一段会报错的区域就是暂时性死区\",{\"1\":{\"511\":1}}],[\"这一部分就来简单实现一下promise及其常用的方法\",{\"1\":{\"579\":1}}],[\"这一部分是模块的接口\",{\"1\":{\"443\":1}}],[\"这一部分指的是模块的实际代码\",{\"1\":{\"443\":1}}],[\"这一过程的具体执行流程如下图所示\",{\"1\":{\"379\":1}}],[\"这一阶段中\",{\"1\":{\"379\":1}}],[\"这说明了两个线程是互斥的\",{\"1\":{\"370\":1}}],[\"这时辅助线程之前做的一些标记或者正在进行的标记就会要有所改变\",{\"1\":{\"1651\":1}}],[\"这时其实对象\",{\"1\":{\"1650\":1}}],[\"这时git就会给出如下的提示\",{\"1\":{\"1637\":1}}],[\"这时再去刷新浏览器\",{\"1\":{\"1637\":1}}],[\"这时终端中就会显示带有时间戳的所有已经暂存的列表\",{\"1\":{\"1601\":1}}],[\"这时对于开发了一部分的功能创建提交是没有逻辑意义的\",{\"1\":{\"1601\":1}}],[\"这时有一个紧急的\",{\"1\":{\"1601\":1}}],[\"这时我们需要传入符合约束类型的值\",{\"1\":{\"1369\":1}}],[\"这时我们可以利用本文的主角\",{\"1\":{\"1366\":1}}],[\"这时我们可以使用\",{\"1\":{\"1340\":1}}],[\"这时可以使用策略模式来动态选择算法\",{\"1\":{\"1785\":1}}],[\"这时可以使用\",{\"1\":{\"1283\":1}}],[\"这时候内存中黑白色都有\",{\"1\":{\"1650\":1}}],[\"这时候\",{\"1\":{\"1235\":1,\"1416\":1}}],[\"这时async\",{\"1\":{\"596\":1}}],[\"这时就确认了是这一次提交导致的问题\",{\"1\":{\"1637\":1}}],[\"这时就可以使用以下命令来合并指定的提交\",{\"1\":{\"1602\":1}}],[\"这时就会产生一个编译错误\",{\"1\":{\"1416\":1}}],[\"这时就会使\",{\"1\":{\"428\":1}}],[\"这时就该then出场了\",{\"1\":{\"571\":1}}],[\"这时程序就能正常运行了\",{\"1\":{\"511\":1}}],[\"这时函数的执行上下文如图所示\",{\"1\":{\"510\":1}}],[\"这时\",{\"1\":{\"354\":1,\"355\":1,\"395\":1,\"463\":1,\"1737\":1}}],[\"这句话是关键\",{\"1\":{\"1535\":1,\"1564\":1}}],[\"这句话有两个意思\",{\"1\":{\"352\":1}}],[\"这句话后\",{\"1\":{\"240\":1}}],[\"这段代码的意思就是给每个响应式数据增加了一个不可枚举的ob属性\",{\"1\":{\"1535\":1}}],[\"这段代码的执⾏上下⽂栈是这样的\",{\"1\":{\"351\":1}}],[\"这段代码\",{\"1\":{\"1533\":1}}],[\"这段代码输出的结果是\",{\"1\":{\"903\":1}}],[\"这段代码在控制台中输出的结果是\",{\"1\":{\"900\":1}}],[\"这段代码在控制台执行之后\",{\"1\":{\"736\":1}}],[\"这段代码正常输出\",{\"1\":{\"898\":1}}],[\"这段代码核心就是循环遍历过程中的递归操作\",{\"1\":{\"735\":1}}],[\"这段代码说明可以传递任意数量的参数到该函数\",{\"1\":{\"728\":1}}],[\"这段代码比较简单\",{\"1\":{\"592\":1}}],[\"这段代码进行改造\",{\"1\":{\"577\":1}}],[\"这段代码之所以看上去很乱\",{\"1\":{\"569\":1}}],[\"这段代码不会立刻得到返回结果\",{\"1\":{\"555\":1}}],[\"这段代码就可以正常执行\",{\"1\":{\"503\":1}}],[\"这段代码对调用者而言非常不友好\",{\"1\":{\"269\":1}}],[\"这将在glsl代码中产生如下定义语句\",{\"1\":{\"2750\":1}}],[\"这将使设备先振动\",{\"1\":{\"342\":1}}],[\"这将使设备振动在\",{\"1\":{\"342\":1}}],[\"这将使其扫描并列出所有附近的蓝牙活动设备\",{\"1\":{\"341\":1}}],[\"这将使\",{\"1\":{\"339\":1}}],[\"这将创建一个\",{\"1\":{\"338\":1}}],[\"这也可以说是\",{\"1\":{\"595\":1}}],[\"这也就意味着在\",{\"1\":{\"507\":1}}],[\"这也就是\",{\"1\":{\"501\":1}}],[\"这也就导致了很多问题\",{\"1\":{\"248\":1}}],[\"这也是最严重的\",{\"1\":{\"1646\":1}}],[\"这也是后来放弃引用计数\",{\"1\":{\"1646\":1}}],[\"这也是由变量提升而导致的\",{\"1\":{\"506\":1}}],[\"这也是所有继承方式里面相对最优的继承方式\",{\"1\":{\"494\":1}}],[\"这也是\",{\"1\":{\"320\":1,\"500\":1}}],[\"这是webglrenderingcontext\",{\"1\":{\"2835\":1}}],[\"这是shader程序的实际代码\",{\"1\":{\"2753\":1,\"2763\":1}}],[\"这是投影变换矩阵的逆矩阵\",{\"1\":{\"2516\":1}}],[\"这是投影变换矩阵\",{\"1\":{\"2515\":1}}],[\"这是matrixworld矩阵的逆矩阵\",{\"1\":{\"2514\":1}}],[\"这是ipv6增加的一种类型\",{\"1\":{\"2214\":1}}],[\"这是保证构件可复用甚至\",{\"1\":{\"2025\":1}}],[\"这是设计与实现分离的关键\",{\"1\":{\"2025\":1}}],[\"这是不现实的\",{\"1\":{\"1906\":1}}],[\"这是违背迪米特法则\",{\"1\":{\"1788\":1}}],[\"这是很不合理的\",{\"1\":{\"1737\":1}}],[\"这是并发的优点\",{\"1\":{\"1651\":1}}],[\"这是其最基础的用法\",{\"1\":{\"1625\":1}}],[\"这是为了保护代码以避免意外丢失数据\",{\"1\":{\"1595\":1}}],[\"这是为什么我们通常在\",{\"1\":{\"1285\":1}}],[\"这是我自己写的vue\",{\"1\":{\"1483\":1,\"1490\":1,\"1568\":1}}],[\"这是我们使用其属性在设备上显示信息的地方\",{\"1\":{\"341\":1}}],[\"这是有道理的\",{\"1\":{\"1418\":1}}],[\"这是正确的做法\",{\"1\":{\"1303\":1}}],[\"这是出于性能考虑\",{\"1\":{\"1273\":1}}],[\"这是包含我们的\",{\"1\":{\"1241\":1}}],[\"这是对\",{\"1\":{\"1212\":1}}],[\"这是nginx默认的主配置文件\",{\"1\":{\"1150\":1}}],[\"这是大写的z喔\",{\"1\":{\"1067\":1}}],[\"这是英文字母o的大小写\",{\"1\":{\"1065\":1}}],[\"这是数字0\",{\"1\":{\"1061\":1}}],[\"这是表明上一次修改密码的日期与1970\",{\"1\":{\"940\":1}}],[\"这是给主机额外安装软件所摆放的目录\",{\"1\":{\"913\":1}}],[\"这是闭包\",{\"1\":{\"902\":1}}],[\"这是失败后返回的结果\",{\"1\":{\"656\":1}}],[\"这是返回的promise\",{\"1\":{\"569\":1}}],[\"这是没有必要的\",{\"1\":{\"502\":1}}],[\"这是\",{\"1\":{\"462\":1,\"1241\":1,\"1279\":1}}],[\"这是仅导出一个函数的情况\",{\"1\":{\"452\":1}}],[\"这是能够进行模块化工作的重中之重\",{\"1\":{\"444\":1}}],[\"这是一种指示\",{\"1\":{\"1724\":1}}],[\"这是一件多么劳民伤财的事情\",{\"1\":{\"1660\":1}}],[\"这是一个从object3d继承而来的属性\",{\"1\":{\"2513\":1}}],[\"这是一个\",{\"1\":{\"1671\":1}}],[\"这是一个很重要的命令\",{\"1\":{\"1615\":1}}],[\"这是一个数组\",{\"1\":{\"1264\":1}}],[\"这是一个用于计算我们想要缓存的值的函数\",{\"1\":{\"1264\":1}}],[\"这是一个方块\",{\"1\":{\"1255\":2}}],[\"这是一个提供附加选项的对象\",{\"1\":{\"432\":1}}],[\"这是一段文字\",{\"1\":{\"178\":1}}],[\"这是程序实际使用先前分配的内存的空间\",{\"1\":{\"425\":1}}],[\"这是因为浏览器去纠正错误的语法\",{\"1\":{\"1705\":1}}],[\"这是因为浏览器是多线程的\",{\"1\":{\"371\":1}}],[\"这是因为原生事件是在浏览器的事件循环中触发的\",{\"1\":{\"1201\":1}}],[\"这是因为在\",{\"1\":{\"1201\":1}}],[\"这是因为索引值都是从\",{\"1\":{\"680\":1}}],[\"这是因为javascript正在创建dom节点并字符串添加到全局数组\",{\"1\":{\"436\":1}}],[\"这是因为\",{\"1\":{\"370\":1,\"507\":1}}],[\"这是因为会先进行取整运算\",{\"1\":{\"282\":1,\"545\":1}}],[\"这种光源可以用来模拟像明亮的窗户或者条状灯光光源\",{\"1\":{\"2872\":1}}],[\"这种光的表现像是无限远\",{\"1\":{\"2868\":1}}],[\"这种材质不受光照的影响\",{\"1\":{\"2629\":1}}],[\"这种自动配置服务\",{\"1\":{\"2214\":1}}],[\"这种架构也被称为\",{\"1\":{\"1885\":1}}],[\"这种模式常用于处理不同种类的请求或在不同条件下需要不同处理的场景\",{\"1\":{\"1835\":1}}],[\"这种模块化的缺乏\",{\"1\":{\"445\":1}}],[\"这种异步机制非常灵活\",{\"1\":{\"1812\":1}}],[\"这种异步编程在\",{\"1\":{\"554\":1}}],[\"这种结构可以实现在调用目标对象前和调用后进行一些预操作和后操作\",{\"1\":{\"1793\":1}}],[\"这种灵活性使得我们可以根据需要动态地改变所使用的产品\",{\"1\":{\"1755\":1}}],[\"这种别名通常用于缩短现有的命令或者创建自定义命令\",{\"1\":{\"1591\":1}}],[\"这种数组多层嵌套\",{\"1\":{\"1563\":1}}],[\"这种基于赋值表达式推断类型的能力称之为类型推断\",{\"1\":{\"1442\":1}}],[\"这种写法会导致\",{\"1\":{\"1286\":1}}],[\"这种合并减少了不必要的渲染成本\",{\"1\":{\"1199\":1}}],[\"这种设计在大多数情况下可以提高应用的性能和响应性\",{\"1\":{\"1199\":1}}],[\"这种变量主要是用来向脚本当中传递参数或数据的\",{\"1\":{\"1104\":1}}],[\"这种变量主要保存的是和系统操作环境相关的数据\",{\"1\":{\"1099\":1}}],[\"这种变量只能在函数内部才能访问到\",{\"1\":{\"897\":1}}],[\"这种转换既可以由\",{\"1\":{\"789\":1}}],[\"这种转换是由\",{\"1\":{\"774\":1}}],[\"这种对每个任务都要进行一次额外的错误处理的方式\",{\"1\":{\"569\":1}}],[\"这种情况下就要在调用链中使用\",{\"1\":{\"578\":1}}],[\"这种情况下\",{\"1\":{\"463\":1,\"1583\":1,\"1614\":3}}],[\"这种加载方式和浏览器环境的性能需求刚好吻合\",{\"1\":{\"457\":1}}],[\"这种调用方式\",{\"1\":{\"360\":2}}],[\"这种新方法与使用括号表示法访问具有相同的行为\",{\"1\":{\"332\":1}}],[\"这种现象就不太符合我们的直觉\",{\"1\":{\"249\":1}}],[\"这种方式的优点是比较简单\",{\"1\":{\"1737\":1}}],[\"这种方式的函数参数接收两个参数\",{\"1\":{\"1194\":1}}],[\"这种方式实现的即时通信\",{\"1\":{\"1737\":1}}],[\"这种方式实现了不同实例间数据的隔离\",{\"1\":{\"486\":1}}],[\"这种方式是不是很简单\",{\"1\":{\"1646\":1}}],[\"这种方式和上面使用\",{\"1\":{\"1267\":1}}],[\"这种方式保证了状态的正确更新\",{\"1\":{\"1197\":1}}],[\"这种方式专门用来对付字符串\",{\"1\":{\"663\":1}}],[\"这种方式下\",{\"1\":{\"578\":1}}],[\"这种方式有三个参数\",{\"1\":{\"403\":1}}],[\"这种方法与旧方法的不同之处在于\",{\"1\":{\"2717\":1}}],[\"这种方法只是针对普通的引用类型的值做递归复制\",{\"1\":{\"765\":1}}],[\"这种方法并不安全\",{\"1\":{\"334\":1}}],[\"这种方法叫做事件的代理\",{\"1\":{\"235\":1}}],[\"这种方案让父容器形成了\",{\"1\":{\"184\":1}}],[\"这种传播分成三个阶段\",{\"1\":{\"234\":1}}],[\"这些字段在每次渲染调用时都会重置\",{\"1\":{\"2800\":1}}],[\"这些信息可用于调试或仅仅满足下好奇心\",{\"1\":{\"2800\":1}}],[\"这些信息只适用于当前会话\",{\"1\":{\"1668\":1}}],[\"这些平面全局使用\",{\"1\":{\"2796\":1}}],[\"这些平面适用于所有使用此材质的对象\",{\"1\":{\"2647\":1}}],[\"这些默认值将传递给shaders\",{\"1\":{\"2749\":1}}],[\"这些变量的描述请参见\",{\"1\":{\"2743\":1}}],[\"这些变量的值是自己定义的\",{\"1\":{\"1093\":1}}],[\"这些变量定义在\",{\"1\":{\"2743\":1}}],[\"这些键值对在顶点和片元着色器中定义\",{\"1\":{\"2650\":1}}],[\"这些参数一起定义了摄像机的viewing\",{\"1\":{\"2530\":1,\"2568\":1}}],[\"这些参数会作为回调函数的附加参数存在\",{\"1\":{\"903\":1}}],[\"这些人工智能算法一般以深度学习算法为主\",{\"1\":{\"2180\":1}}],[\"这些都为软件复用提供了方便的解决方案\",{\"1\":{\"2025\":1}}],[\"这些都可以有效解决父子元素margin重叠问题\",{\"1\":{\"151\":1}}],[\"这些状态管理工具利用了单例模式的思想\",{\"1\":{\"1764\":1}}],[\"这些产品对象通常属于同一个产品簇\",{\"1\":{\"1755\":1}}],[\"这些产品通常属于不同的类\",{\"1\":{\"1755\":1}}],[\"这些局部变量不再被使用\",{\"1\":{\"1645\":1}}],[\"这些新的内容会变成未更新到缓存区的状态\",{\"1\":{\"1614\":1}}],[\"这些配置放在系统的根路径下\",{\"1\":{\"1586\":1}}],[\"这些泛型变量时\",{\"1\":{\"1363\":1}}],[\"这些内置对象的类型声明文件\",{\"1\":{\"1356\":1}}],[\"这些操作是一个整体\",{\"1\":{\"2258\":1}}],[\"这些操作都不再被认为是类型正确的\",{\"1\":{\"1418\":1}}],[\"这些操作可能包括发送网络请求\",{\"1\":{\"1251\":1}}],[\"这些操作符可以将一个表达式转化为另一个更复杂的表达式\",{\"1\":{\"601\":1}}],[\"这些运算符使用\",{\"1\":{\"807\":1}}],[\"这些运算符以宽松方式执行相等和不相等测试\",{\"1\":{\"807\":1}}],[\"这些数据可以分为原始数据类型和引用数据类型\",{\"1\":{\"650\":1}}],[\"这些仅仅是他们对应的简写形式\",{\"1\":{\"638\":1}}],[\"这些模块称为\",{\"1\":{\"467\":1}}],[\"这些是与\",{\"1\":{\"463\":1}}],[\"这些是通过\",{\"1\":{\"392\":1}}],[\"这些代码就会变得难以维护\",{\"1\":{\"442\":1}}],[\"这些构造函数生成的对象统称为\",{\"1\":{\"402\":1}}],[\"这些对象用于读取和写入缓冲区内容\",{\"1\":{\"397\":1}}],[\"这些方法\",{\"1\":{\"2455\":1}}],[\"这些方法都将被应用到加载器上\",{\"1\":{\"2455\":1}}],[\"这些方法都不会改变原数组\",{\"1\":{\"711\":1}}],[\"这些方法都接收两个参数\",{\"1\":{\"708\":1}}],[\"这些方法都是在当前元素事件行为的冒泡阶段\",{\"1\":{\"231\":1}}],[\"这些方法可以加上前置\",{\"1\":{\"395\":1}}],[\"这些属性都继承自\",{\"1\":{\"391\":1}}],[\"这些异步任务的执行就需要依靠node\",{\"1\":{\"378\":1}}],[\"这些线程同时将对象空间中的数据移动到空闲区域\",{\"1\":{\"1649\":1}}],[\"这些线程为\",{\"1\":{\"371\":1}}],[\"这些线程主要不是来执行\",{\"1\":{\"371\":1}}],[\"这些函数才能最终转化成为虚拟\",{\"1\":{\"1527\":1}}],[\"这些函数\",{\"1\":{\"360\":1}}],[\"这些值在调用时会被忽略\",{\"1\":{\"355\":1}}],[\"这些组成了执⾏上下⽂栈\",{\"1\":{\"351\":1}}],[\"这些\",{\"1\":{\"334\":1,\"2743\":1}}],[\"这就牵扯出了内存分配的问题\",{\"1\":{\"1646\":1}}],[\"这就很形象地说明了什么是作用域链\",{\"1\":{\"901\":1}}],[\"这就很容易导致代码错误\",{\"1\":{\"445\":1}}],[\"这就造成了排序不准确的情况\",{\"1\":{\"698\":1}}],[\"这就出现问题了\",{\"1\":{\"677\":1}}],[\"这就意味着任何使用await的代码本身都是异步的\",{\"1\":{\"594\":1}}],[\"这就体现在\",{\"1\":{\"589\":1}}],[\"这就说明\",{\"1\":{\"578\":1}}],[\"这就符合我们的习惯了\",{\"1\":{\"507\":1}}],[\"这就涉及到了变量提升\",{\"1\":{\"499\":1}}],[\"这就需要原型\",{\"1\":{\"478\":1}}],[\"这就需要让我们考虑\",{\"1\":{\"217\":1}}],[\"这就等价于\",{\"1\":{\"428\":1}}],[\"这就解决了代码阻塞的问题\",{\"1\":{\"370\":1}}],[\"这就解决了同名属性碰撞\",{\"1\":{\"272\":1}}],[\"这就是indexeddb对象\",{\"1\":{\"1671\":2}}],[\"这就是垃圾回收\",{\"1\":{\"1643\":1}}],[\"这就是你想在它的子组件中共享的值\",{\"1\":{\"1218\":1}}],[\"这就是小数点\",{\"1\":{\"1063\":1}}],[\"这就是\",{\"1\":{\"595\":1,\"1203\":1,\"1533\":1}}],[\"这就是通过\",{\"1\":{\"590\":1}}],[\"这就是回调函数延迟绑定\",{\"1\":{\"569\":1}}],[\"这就是暂时性死区导致的\",{\"1\":{\"511\":1}}],[\"这就是词法环境的结构\",{\"1\":{\"510\":1}}],[\"这就是变量提升背后的机制\",{\"1\":{\"501\":1}}],[\"这就是在\",{\"1\":{\"463\":1}}],[\"这就是创建模块的基本方法\",{\"1\":{\"455\":1}}],[\"这就是我们常说的\",{\"1\":{\"445\":1}}],[\"这就是现代化开发的基本模式\",{\"1\":{\"442\":1}}],[\"这就是和\",{\"1\":{\"323\":1,\"576\":1}}],[\"这就是浮动带来副作用\",{\"1\":{\"179\":1}}],[\"这就是浮动第四个特征的含义\",{\"1\":{\"178\":1}}],[\"这就会出现问题\",{\"1\":{\"269\":1}}],[\"这行代码大家应该都不陌生\",{\"1\":{\"202\":1}}],[\"这里必须大于6个数字\",{\"1\":{\"1839\":1}}],[\"这里必须是数字\",{\"1\":{\"1839\":1}}],[\"这里说的窗口大小其实就是每次传输的数据大小\",{\"1\":{\"1723\":1}}],[\"这里说的加法操作符就是二元的加操作符了\",{\"1\":{\"616\":1}}],[\"这里需注意\",{\"1\":{\"1660\":1}}],[\"这里需要区分下到底是首次渲染还是更新\",{\"1\":{\"1479\":1}}],[\"这里需要注意的是\",{\"1\":{\"1411\":1}}],[\"这里需要注意\",{\"1\":{\"838\":1}}],[\"这里需要理清一个概念\",{\"1\":{\"124\":1}}],[\"这里列出的是每次提交的详细信息\",{\"1\":{\"1626\":1}}],[\"这里为\",{\"1\":{\"1591\":1}}],[\"这里表示\",{\"1\":{\"1563\":1}}],[\"这里表示一个字符串字面量类型\",{\"1\":{\"1427\":2}}],[\"这里简单的就执行以下get方法\",{\"1\":{\"1561\":1}}],[\"这里首先介绍\",{\"1\":{\"1557\":1}}],[\"这里保留原型方法的执行结果\",{\"1\":{\"1535\":1,\"1564\":1}}],[\"这里对数组做了额外判断\",{\"1\":{\"1535\":1}}],[\"这里很关键\",{\"1\":{\"1528\":1}}],[\"这里注册一个渲染watcher\",{\"1\":{\"1486\":1,\"1558\":1}}],[\"这里开始进行vue初始化工作\",{\"1\":{\"1484\":1,\"1533\":1}}],[\"这里真实的类型应该为\",{\"1\":{\"1340\":1}}],[\"这里介绍一些可能的场景\",{\"1\":{\"1303\":1}}],[\"这里打印的是新的\",{\"1\":{\"1204\":1}}],[\"这里打印的是旧的\",{\"1\":{\"1204\":1}}],[\"这里所说的链接相当于\",{\"1\":{\"998\":1}}],[\"这里存放的是启动\",{\"1\":{\"913\":1}}],[\"这里面所包括的就是块级作用域\",{\"1\":{\"898\":1}}],[\"这里面比较重要的就是第四阶段\",{\"1\":{\"379\":1}}],[\"这里传递给\",{\"1\":{\"849\":1}}],[\"这里不能为空\",{\"1\":{\"1839\":1}}],[\"这里不直接使用父元素appendchild是为了不破坏替换的位置\",{\"1\":{\"1528\":1}}],[\"这里不要每次都调用get方法\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"这里不再细说\",{\"1\":{\"895\":1}}],[\"这里不需要括号将数组括起来\",{\"1\":{\"843\":1}}],[\"这里不是\",{\"1\":{\"587\":1}}],[\"这里用\",{\"1\":{\"731\":1}}],[\"这里当data为真时\",{\"1\":{\"624\":1}}],[\"这里将a的二进制位左移2位\",{\"1\":{\"611\":1}}],[\"这里将会输出\",{\"1\":{\"355\":1,\"360\":2}}],[\"这里我们只需知道\",{\"1\":{\"1511\":1}}],[\"这里我们给\",{\"1\":{\"838\":1}}],[\"这里我们给函数中一个未声明的变量\",{\"1\":{\"428\":1}}],[\"这里我们先来看一元加和减操作符\",{\"1\":{\"603\":1}}],[\"这里定义一个异步方法\",{\"1\":{\"597\":1}}],[\"这里定义了同步函数\",{\"1\":{\"555\":1}}],[\"这里还用上面的示例\",{\"1\":{\"597\":1}}],[\"这里和上面\",{\"1\":{\"591\":1}}],[\"这里出现了很多重复的判断逻辑\",{\"1\":{\"590\":1}}],[\"这里如果传入参数是\",{\"1\":{\"582\":1}}],[\"这里主要就是一个计数逻辑\",{\"1\":{\"582\":1}}],[\"这里主要介绍其中的四点\",{\"1\":{\"246\":1}}],[\"这里输出的结果和其他支持块级作用域的语言不太一样\",{\"1\":{\"505\":1}}],[\"这里也会输出\",{\"1\":{\"500\":1}}],[\"这里也是与浏览器中逻辑差异较大的地方\",{\"1\":{\"379\":1}}],[\"这里改用\",{\"1\":{\"494\":1}}],[\"这里有三个属性值\",{\"1\":{\"463\":1}}],[\"这里有一个非常典型的场景\",{\"1\":{\"1256\":1}}],[\"这里有一个用户评论系统示例\",{\"1\":{\"1211\":1}}],[\"这里有一个问题\",{\"1\":{\"455\":1}}],[\"这里有一个简单的文本和按钮\",{\"1\":{\"343\":1}}],[\"这里有一个输入框和一个按钮\",{\"1\":{\"342\":1}}],[\"这里使用\",{\"1\":{\"558\":1,\"559\":1}}],[\"这里使用相对路径来导入\",{\"1\":{\"455\":1}}],[\"这里使用了\",{\"1\":{\"271\":1}}],[\"这里就解决了之前的问题\",{\"1\":{\"1534\":1}}],[\"这里就要用到了索引类型\",{\"1\":{\"1370\":1}}],[\"这里就形成了一个闭包\",{\"1\":{\"431\":1}}],[\"这里就生成了一个\",{\"1\":{\"403\":1}}],[\"这里是因为正则捕获支持双引号\",{\"1\":{\"1550\":1}}],[\"这里是面向切片编程思想\",{\"1\":{\"1535\":1}}],[\"这里是初次渲染的逻辑\",{\"1\":{\"1528\":1}}],[\"这里是没有比对完的\",{\"1\":{\"1478\":1}}],[\"这里是问题所在\",{\"1\":{\"1212\":1}}],[\"这里是\",{\"1\":{\"429\":1}}],[\"这里创建的类型化数组也能转换回普通数组\",{\"1\":{\"403\":1}}],[\"这里得到的\",{\"1\":{\"392\":1}}],[\"这里给大家举个例子\",{\"1\":{\"1665\":1}}],[\"这里给两个\",{\"1\":{\"392\":1}}],[\"这里给\",{\"1\":{\"391\":1}}],[\"这里可以对已经计算过的输入做一个缓存\",{\"1\":{\"902\":1}}],[\"这里可以看到\",{\"1\":{\"495\":1}}],[\"这里可以成为动态文件创建\",{\"1\":{\"388\":1}}],[\"这里可以给父元素设置\",{\"1\":{\"184\":1}}],[\"这里同样会有个超时时间设置防止一直等待下去\",{\"1\":{\"379\":1}}],[\"这里包括不仅指开始执行时队列里的微任务\",{\"1\":{\"376\":1}}],[\"这里只传入了回调函数\",{\"1\":{\"363\":1}}],[\"这里调用了\",{\"1\":{\"354\":1}}],[\"这里会记录客户端\",{\"1\":{\"1102\":1}}],[\"这里会从\",{\"1\":{\"400\":1}}],[\"这里会输出\",{\"1\":{\"353\":1,\"355\":2,\"360\":1,\"500\":1,\"505\":1}}],[\"这里会显示设备信息\",{\"1\":{\"341\":1}}],[\"这里实例化了\",{\"1\":{\"340\":1}}],[\"这里通过两种方式在\",{\"1\":{\"455\":1}}],[\"这里通过\",{\"1\":{\"339\":1}}],[\"这里最终会打印出\",{\"1\":{\"258\":1}}],[\"这里\",{\"1\":{\"252\":1,\"353\":1,\"354\":1,\"362\":1,\"395\":1,\"429\":1,\"431\":1,\"462\":1,\"594\":1,\"616\":1,\"625\":1,\"637\":1,\"895\":1,\"901\":1,\"1285\":1,\"1416\":2,\"1458\":1,\"2760\":1}}],[\"这里的标志就是代表数组有新增操作\",{\"1\":{\"1535\":1}}],[\"这里的标准是指\",{\"1\":{\"1356\":1}}],[\"这里的this代表调用\",{\"1\":{\"1486\":1,\"1525\":1,\"1533\":1,\"1548\":1}}],[\"这里的问题是\",{\"1\":{\"1269\":1,\"1286\":1}}],[\"这里的路径是\",{\"1\":{\"1137\":1}}],[\"这里的默认值并不一定是一个固定值\",{\"1\":{\"843\":1}}],[\"这里的转化仍然只有三种类型\",{\"1\":{\"804\":1}}],[\"这里的条件运算符实际上就是我们常说的三元表达式\",{\"1\":{\"637\":1}}],[\"这里的关键就是\",{\"1\":{\"594\":1}}],[\"这里的变量是指通过\",{\"1\":{\"510\":1}}],[\"这里的\",{\"1\":{\"183\":1,\"569\":1,\"806\":1,\"1153\":1,\"1217\":1,\"1219\":1}}],[\"这里强调一点\",{\"1\":{\"182\":1}}],[\"这样对不同的材质我们可以有不同的uniforms变量\",{\"1\":{\"2767\":1}}],[\"这样对于接收端来说就容易进⾏区分处理了\",{\"1\":{\"1731\":1}}],[\"这样对于性能来说是承担不起的\",{\"1\":{\"1534\":1}}],[\"这样对于\",{\"1\":{\"588\":1}}],[\"这样three\",{\"1\":{\"2689\":1}}],[\"这样操作会更正光线在表面的效果\",{\"1\":{\"2312\":1}}],[\"这样第二次到缓存中获取就有值了\",{\"1\":{\"2072\":1}}],[\"这样出问题了\",{\"1\":{\"2069\":1}}],[\"这样工厂函数就会变的很复杂\",{\"1\":{\"1753\":1}}],[\"这样能建立可靠的连接\",{\"1\":{\"1713\":1}}],[\"这样实现的弊端就是在网络条件不好的情况下可能会导致丢包\",{\"1\":{\"1712\":1}}],[\"这样小打小闹级别了\",{\"1\":{\"1669\":1}}],[\"这样看来\",{\"1\":{\"1660\":1}}],[\"这样交替多次后完成一轮\",{\"1\":{\"1650\":1}}],[\"这样在提交暂存区文件时\",{\"1\":{\"1591\":1}}],[\"这样才能保持模板解析的一致性\",{\"1\":{\"1547\":1}}],[\"这样才能接收到发送读写指令后设备给你回调的信息\",{\"1\":{\"120\":1}}],[\"这样递归的方式其实无论是对象还是数组都进行了观测\",{\"1\":{\"1534\":1}}],[\"这样我们快速切换\",{\"1\":{\"1311\":1}}],[\"这样我们就可以去掉\",{\"1\":{\"1212\":1}}],[\"这样我们就解决了递归爆栈的问题\",{\"1\":{\"766\":1}}],[\"这样我们就无法直接创建一个只包含一个数字的数组了\",{\"1\":{\"677\":1}}],[\"这样可以保证全局常量在整个应用程序中的唯一性\",{\"1\":{\"1767\":1}}],[\"这样可以保证全局方法在整个应用程序中的唯一性\",{\"1\":{\"1767\":1}}],[\"这样可以提高代码的灵活性和可维护性\",{\"1\":{\"1747\":1}}],[\"这样可以提高性能\",{\"1\":{\"1199\":1}}],[\"这样可以减少\",{\"1\":{\"1730\":1}}],[\"这样可以增加代码的可维护性和复用性\",{\"1\":{\"1392\":1}}],[\"这样可以让调用\",{\"1\":{\"1217\":1}}],[\"这样也能够在更新状态后立即访问到最新的状态\",{\"1\":{\"1201\":1}}],[\"这样每次更新都基于前一个更新的结果\",{\"1\":{\"1197\":1}}],[\"这样它们就不会被意外地用作本来应该表现为\",{\"1\":{\"803\":1}}],[\"这样它就可以接收和显示消息\",{\"1\":{\"343\":1}}],[\"这样写也能实现预期效果\",{\"1\":{\"836\":1}}],[\"这样写也是一样效果\",{\"1\":{\"731\":1}}],[\"这样写相当繁琐\",{\"1\":{\"255\":1}}],[\"这样检测出来的结果就是不准确的\",{\"1\":{\"658\":1}}],[\"这样会有许多微笑的延迟而不是一个大的延迟\",{\"1\":{\"1641\":1}}],[\"这样会有一个缺点\",{\"1\":{\"334\":1}}],[\"这样会更加严谨\",{\"1\":{\"627\":1}}],[\"这样带来的好处就是性能得到了很大的提升\",{\"1\":{\"589\":1}}],[\"这样前面产生的错误会一直向后传递\",{\"1\":{\"569\":1}}],[\"这样解决了多层嵌套的问题\",{\"1\":{\"569\":1}}],[\"这样当嵌套层次多了之后\",{\"1\":{\"569\":1}}],[\"这样变量查找就完成了\",{\"1\":{\"510\":1}}],[\"这样是不是就会加速垃圾回收的执行速度呢\",{\"1\":{\"1649\":1}}],[\"这样是错误的\",{\"1\":{\"488\":1}}],[\"这样是为了保证数据的完整并且不用在传输过程中修改这些数据\",{\"1\":{\"414\":1}}],[\"这样做的好处之一是解耦\",{\"1\":{\"1747\":1}}],[\"这样做的好处很多\",{\"1\":{\"900\":1}}],[\"这样做的好处就是每次执行函数时都可以直接为该函数分配栈空间\",{\"1\":{\"502\":1}}],[\"这样做的好处是可以执行静态分析和类型检查\",{\"1\":{\"467\":1}}],[\"这样做也可以减少\",{\"1\":{\"414\":1}}],[\"这样内存就会空闲并可以再次利用\",{\"1\":{\"425\":1}}],[\"这样的顶点被称为\",{\"1\":{\"2288\":1}}],[\"这样的情况肯定不可靠\",{\"1\":{\"1712\":1}}],[\"这样的情况称为异步\",{\"1\":{\"555\":1}}],[\"这样的情况称为同步\",{\"1\":{\"555\":1}}],[\"这样的无依赖脚本\",{\"1\":{\"1707\":1}}],[\"这样的不必要的\",{\"1\":{\"1660\":1}}],[\"这样的数据劫持方式对数组有什么影响\",{\"1\":{\"1534\":1}}],[\"这样的代码很常见\",{\"1\":{\"1653\":1}}],[\"这样的代码\",{\"1\":{\"1527\":1}}],[\"这样的第三方库来操作\",{\"1\":{\"1250\":1}}],[\"这样的链路就是作用域链\",{\"1\":{\"901\":1}}],[\"这样的组合就是闭包\",{\"1\":{\"900\":1}}],[\"这样的内置函数\",{\"1\":{\"806\":1}}],[\"这样的引用类型并不能正确地拷贝\",{\"1\":{\"765\":1}}],[\"这样的函数在\",{\"1\":{\"590\":1}}],[\"这样的函数称为\",{\"1\":{\"590\":1}}],[\"这样的字样也并未打印\",{\"1\":{\"578\":1}}],[\"这样的字样\",{\"1\":{\"578\":1}}],[\"这样的逻辑\",{\"1\":{\"565\":1}}],[\"这样的继承方式叫做寄生式继承\",{\"1\":{\"492\":1}}],[\"这样的加载器库来使用\",{\"1\":{\"460\":1}}],[\"这样的工具库\",{\"1\":{\"443\":1}}],[\"这样的值称为\",{\"1\":{\"402\":3}}],[\"这样的小任务\",{\"1\":{\"337\":1}}],[\"这样\",{\"1\":{\"339\":1,\"395\":1,\"677\":1,\"902\":1,\"1227\":1,\"1297\":1,\"1338\":1,\"1747\":1,\"1835\":1,\"1837\":1,\"2028\":1}}],[\"这样其他导入这些模块的模块在执行代码之前要等待资源加载完再去执行\",{\"1\":{\"334\":1}}],[\"这样就说明第11\",{\"1\":{\"1637\":1}}],[\"这样就说明前半段是没有问题的\",{\"1\":{\"1637\":1}}],[\"这样就不会显示每个文件的内容的详细对比\",{\"1\":{\"1636\":1}}],[\"这样就不会污染全局作用域\",{\"1\":{\"449\":1}}],[\"这样就可以显示出两个分支的详细差异\",{\"1\":{\"1636\":1}}],[\"这样就可以自由地处理源代码\",{\"1\":{\"1592\":1}}],[\"这样就可以清除浮动\",{\"1\":{\"182\":1}}],[\"这样就能退回到n个版本之前\",{\"1\":{\"1614\":1}}],[\"这样就能清楚地知道需要的数据结构了\",{\"1\":{\"1428\":1}}],[\"这样就能避免覆盖的情况\",{\"1\":{\"270\":1}}],[\"这样就会造成循环引用\",{\"1\":{\"767\":1}}],[\"这样就会创建一个多余的全局变量\",{\"1\":{\"428\":1}}],[\"这样就实现了借用参数的妙用\",{\"1\":{\"729\":1}}],[\"这样就执行了\",{\"1\":{\"581\":1}}],[\"这样就显得清爽许多\",{\"1\":{\"569\":1}}],[\"这样就形成了一个原型指向的链条\",{\"1\":{\"482\":1}}],[\"这样就形成了一个模块\",{\"1\":{\"445\":1}}],[\"这样就导致了构造函数执行一次就会创建一个新的方法\",{\"1\":{\"478\":1}}],[\"这样就避免了使用全局变量\",{\"1\":{\"445\":1}}],[\"这样不会更改原有的代码\",{\"1\":{\"1777\":1}}],[\"这样不管点击的是哪一个后代元素\",{\"1\":{\"236\":1}}],[\"这样不固定宽度\",{\"1\":{\"205\":1}}],[\"这个回调函数可以用来定义在onbeforecompile中使用的配置项\",{\"1\":{\"2689\":1}}],[\"这个回调在\",{\"1\":{\"2688\":1}}],[\"这个结果不一定是目标ip与域名的映射关系\",{\"1\":{\"2211\":1}}],[\"这个策略模式的特点给策略模式带来很多灵活性\",{\"1\":{\"1787\":1}}],[\"这个存储是响应式的\",{\"1\":{\"1765\":1}}],[\"这个定时器可以理解为是最早发送但未收到确认的报文段\",{\"1\":{\"1724\":1}}],[\"这个公式会通过\",{\"1\":{\"1707\":1}}],[\"这个机制也被称作\",{\"1\":{\"1650\":1}}],[\"这个时候假如任由它搁置\",{\"1\":{\"1644\":1}}],[\"这个地址和堆内存中的实际值是相关的\",{\"1\":{\"1644\":1}}],[\"这个不算工作区\",{\"1\":{\"1584\":1}}],[\"这个有兴趣的可以去看源码\",{\"1\":{\"1549\":1}}],[\"这个是存放watcher的容器\",{\"1\":{\"1559\":1,\"1562\":1}}],[\"这个是影响性能的\",{\"1\":{\"1539\":1,\"1568\":1}}],[\"这个是表明上一次修改密码的日期与1970\",{\"1\":{\"940\":1}}],[\"这个和runtime\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"这个代表真正用户传入的函数\",{\"1\":{\"1491\":1}}],[\"这个ts是报错的\",{\"1\":{\"1388\":1}}],[\"这个更新不是非常紧急的\",{\"1\":{\"1308\":1}}],[\"这个高阶组件来完成相似的工作\",{\"1\":{\"1267\":1}}],[\"这个示例中\",{\"1\":{\"1244\":1}}],[\"这个开关可能会重写为反向代理的\",{\"1\":{\"1153\":1}}],[\"这个n是英文按键\",{\"1\":{\"1062\":2}}],[\"这个账号\",{\"1\":{\"1036\":1}}],[\"这个目录下所有文件和文件夹打包为当前目录下的\",{\"1\":{\"1019\":1}}],[\"这个目录中存放着在不断扩充着的东西\",{\"1\":{\"913\":1}}],[\"这个指令\",{\"1\":{\"921\":1}}],[\"这个参数不会影响摄像机的投影矩阵\",{\"1\":{\"2572\":1,\"2574\":1}}],[\"这个参数包含了\",{\"1\":{\"921\":1}}],[\"这个参数表示要打平的层级数\",{\"1\":{\"311\":1,\"720\":1}}],[\"这个匿名函数拥有独立的作用域\",{\"1\":{\"902\":1}}],[\"这个变量代表命令行中所有参数的个数\",{\"1\":{\"1104\":1}}],[\"这个变量代表命令中所有的参数\",{\"1\":{\"1104\":1}}],[\"这个变量也代表命令行中所有的参数\",{\"1\":{\"1104\":1}}],[\"这个变量\",{\"1\":{\"901\":1}}],[\"这个变量的结果\",{\"1\":{\"898\":1}}],[\"这个局部变量也相应会被销毁\",{\"1\":{\"897\":1}}],[\"这个声明\",{\"1\":{\"895\":1}}],[\"这个过程中由于数据地址会发生改变\",{\"1\":{\"1649\":1}}],[\"这个过程内存是静态的\",{\"1\":{\"1649\":1}}],[\"这个过程是将上一步生成的\",{\"1\":{\"895\":1}}],[\"这个过程就是事件循环\",{\"1\":{\"375\":1}}],[\"这个过程就是重排\",{\"1\":{\"223\":1}}],[\"这个阶段会将源代码拆成最小的\",{\"1\":{\"895\":1}}],[\"这个阶段会将检测到的变量和函数声明添加到\",{\"1\":{\"249\":1}}],[\"这个深拷贝函数并不能复制不可枚举的属性以及\",{\"1\":{\"765\":1}}],[\"这个函数只能访问到定义它时的作用域内的数据\",{\"1\":{\"1274\":1}}],[\"这个函数会在每次组件渲染时执行\",{\"1\":{\"1274\":1}}],[\"这个函数应该是一个纯函数\",{\"1\":{\"1264\":1}}],[\"这个函数唯一正式声明了的参数是一个字符串\",{\"1\":{\"728\":1}}],[\"这个函数中的\",{\"1\":{\"261\":1}}],[\"这个例子定义一个函数来连接字符串\",{\"1\":{\"728\":1}}],[\"这个例子中将音频从<audio>\",{\"1\":{\"338\":1}}],[\"这个类并不是被直接调用的\",{\"1\":{\"2510\":1}}],[\"这个类用于进行\",{\"1\":{\"2496\":1}}],[\"这个类型\",{\"1\":{\"1373\":1}}],[\"这个类数组转换成数组\",{\"1\":{\"732\":1}}],[\"这个类数组的值\",{\"1\":{\"727\":1}}],[\"这个类的一个实例\",{\"1\":{\"657\":1}}],[\"这个接口包含了获取到的\",{\"1\":{\"724\":1}}],[\"这个主要体现在把类的原型进行重写\",{\"1\":{\"658\":1}}],[\"这个操作符使用返回布尔值\",{\"1\":{\"623\":1}}],[\"这个操作符可以解决很多问题\",{\"1\":{\"322\":1}}],[\"这个值需要设置为true\",{\"1\":{\"2656\":1}}],[\"这个值使用\",{\"1\":{\"2578\":1}}],[\"这个值是由setviewoffset来设置的\",{\"1\":{\"2539\":1}}],[\"这个值没法被访问了\",{\"1\":{\"1646\":1}}],[\"这个值将用于下一步骤\",{\"1\":{\"596\":1}}],[\"这个值则会被\",{\"1\":{\"594\":1}}],[\"这个表达式的结果是\",{\"1\":{\"595\":1}}],[\"这个关键字可以用在函数声明\",{\"1\":{\"594\":1}}],[\"这个异常的抛出是在回调行为里发生的\",{\"1\":{\"578\":1}}],[\"这个数组按顺序保存着每一个promise对象resolve执行时的值\",{\"1\":{\"573\":1}}],[\"这个数组的每个元素都是一个\",{\"1\":{\"391\":1}}],[\"这个区块对这两个关键字声明的变量\",{\"1\":{\"511\":1}}],[\"这个区域中的变量并不影响作用域块外面的变量\",{\"1\":{\"510\":1}}],[\"这个词\",{\"1\":{\"500\":1}}],[\"这个内部属性无法直接访问\",{\"1\":{\"484\":1}}],[\"这个模块定义清楚地显示了其包含两个依赖项和一个函数\",{\"1\":{\"463\":1}}],[\"这个视图的长度将匹配\",{\"1\":{\"409\":1}}],[\"这个视口其实不是真是存在的\",{\"1\":{\"201\":1}}],[\"这个对象中存有在webgl环境在创建的时候所设置的属性\",{\"1\":{\"2825\":1}}],[\"这个对象常用属性如下\",{\"1\":{\"394\":1}}],[\"这个对象指向的是调用它的对象\",{\"1\":{\"352\":1}}],[\"这个新的函数已经自动绑定了新的\",{\"1\":{\"355\":1}}],[\"这个新数组包含与它调用\",{\"1\":{\"311\":1,\"720\":1}}],[\"这个属性代表的是该数据已经被响应式观察过了\",{\"1\":{\"1564\":1}}],[\"这个属性就是上段代码增加的\",{\"1\":{\"1535\":1}}],[\"这个属性就是能够清除浮动的利器\",{\"1\":{\"185\":1}}],[\"这个属性\",{\"1\":{\"482\":1}}],[\"这个属性指向函数的原型对象\",{\"1\":{\"479\":1}}],[\"这个属性前需要一步步的判断前面的属性是否存在\",{\"1\":{\"322\":1,\"644\":1}}],[\"这个问题就不复存在了\",{\"1\":{\"320\":1}}],[\"这个语句只能在\",{\"1\":{\"299\":1,\"891\":1}}],[\"这个三个元素返回的值分别如下\",{\"1\":{\"295\":1,\"882\":1}}],[\"这个方法非常重要\",{\"1\":{\"1571\":1}}],[\"这个方法在render函数执行的时候会取值\",{\"1\":{\"1561\":1}}],[\"这个方法放在源码的\",{\"1\":{\"1525\":1}}],[\"这个方法可以简单粗暴的实现深拷贝\",{\"1\":{\"763\":1}}],[\"这个方法可以从已有数组中返回选定的元素\",{\"1\":{\"758\":1}}],[\"这个方法可以自定义加工函数的处理方式\",{\"1\":{\"286\":1,\"678\":1}}],[\"这个方法的实现\",{\"1\":{\"737\":1}}],[\"这个方法的第一个参数是一个字符串\",{\"1\":{\"558\":1}}],[\"这个方法接收两个参数\",{\"1\":{\"490\":1}}],[\"这个方法就是用来判断参数是否是\",{\"1\":{\"401\":1}}],[\"这个方法实际上有两步操作\",{\"1\":{\"400\":1}}],[\"这个方法里面接收一个回调函数\",{\"1\":{\"118\":1}}],[\"这个很重要的属性\",{\"1\":{\"202\":1}}],[\"这个很好理解\",{\"1\":{\"119\":1}}],[\"这个包括相邻元素或者嵌套元素\",{\"1\":{\"151\":1}}],[\"这个\",{\"1\":{\"125\":1,\"206\":1,\"341\":1,\"362\":1,\"388\":1,\"392\":2,\"413\":1,\"462\":1,\"577\":1,\"597\":1,\"723\":1,\"1372\":1,\"1373\":2}}],[\"这个选项将新建一行注释\",{\"1\":{\"20\":1,\"63\":1}}],[\"这部分的代码可根据自己的需要写\",{\"1\":{\"109\":1}}],[\"而任何自定义\",{\"1\":{\"2744\":1}}],[\"而需要通过\",{\"1\":{\"2285\":1}}],[\"而程序不是\",{\"1\":{\"2151\":1}}],[\"而进程是一个动态的概念\",{\"1\":{\"2151\":1}}],[\"而进行的修改\",{\"1\":{\"1949\":1}}],[\"而两个硬件不可能完全一样\",{\"1\":{\"2089\":1}}],[\"而又不需要暴露该对象的内部表示\",{\"1\":{\"1832\":1}}],[\"而建造者模式关心的是创建这个对象的整个过程\",{\"1\":{\"1758\":1}}],[\"而具体工厂则实现了这些抽象方法\",{\"1\":{\"1755\":1}}],[\"而具体如何行动需要由类\",{\"1\":{\"1338\":1}}],[\"而访问者无需知道创建的具体流程\",{\"1\":{\"1748\":1}}],[\"而只需通过工厂来获取所需的对象\",{\"1\":{\"1747\":1}}],[\"而sse的方式是单向通信的\",{\"1\":{\"1737\":1}}],[\"而出现错误的情况\",{\"1\":{\"1727\":1}}],[\"而它还没有被下载和构建时\",{\"1\":{\"1707\":1}}],[\"而打开网页使用的是\",{\"1\":{\"1689\":1}}],[\"而我们希望得到的db对象在其result属性中\",{\"1\":{\"1671\":1}}],[\"而域名\",{\"1\":{\"1660\":1}}],[\"而后暂停开始执行应用程序也就是\",{\"1\":{\"1650\":1}}],[\"而后者则表示有异常发生\",{\"1\":{\"578\":1}}],[\"而上文的标记清理中我们说过\",{\"1\":{\"1650\":1}}],[\"而一些大\",{\"1\":{\"1648\":1}}],[\"而老生代的对象为存活事件较长或常驻内存的对象\",{\"1\":{\"1648\":1}}],[\"而此计数器需要占很大的位置\",{\"1\":{\"1646\":1}}],[\"而引用计数则只需要在引用时计数就可以了\",{\"1\":{\"1646\":1}}],[\"而标记清除算法需要每隔一段时间进行一次\",{\"1\":{\"1646\":1}}],[\"而标记整理\",{\"1\":{\"1646\":1}}],[\"而对象\",{\"1\":{\"1646\":1}}],[\"而对于\",{\"1\":{\"765\":1}}],[\"而对于相同逻辑的代码\",{\"1\":{\"507\":1}}],[\"而对于不支持的浏览器\",{\"1\":{\"473\":1}}],[\"而局部变量声明在函数中\",{\"1\":{\"1645\":1}}],[\"而会回到第一种情况\",{\"1\":{\"1614\":1}}],[\"而自上次提交以来已更改的文件将被视为已被\",{\"1\":{\"1584\":1}}],[\"而自定义变量是局部变量\",{\"1\":{\"1099\":1}}],[\"而如果一个或多个进程产生死锁\",{\"1\":{\"2156\":1}}],[\"而如果是使用互联网\",{\"1\":{\"1579\":1}}],[\"而如果使用异步则不会阻塞\",{\"1\":{\"555\":1}}],[\"而小\",{\"1\":{\"1431\":1}}],[\"而无需修改现有代码\",{\"1\":{\"1837\":1}}],[\"而无需关心具体产品的细节\",{\"1\":{\"1747\":1}}],[\"而无需事先执行任何形式的检查\",{\"1\":{\"1417\":1}}],[\"而无需考虑使用异步的方式\",{\"1\":{\"448\":1}}],[\"而其他更新\",{\"1\":{\"1308\":1}}],[\"而其他函数会在满足某个条件时调用这个函数\",{\"1\":{\"556\":1}}],[\"而当\",{\"1\":{\"1279\":1}}],[\"而实际上并没有明确的证据表明确实有性能问题\",{\"1\":{\"1212\":1}}],[\"而并没有带来任何实际的性能提升\",{\"1\":{\"1269\":1}}],[\"而并没有输出\",{\"1\":{\"505\":1}}],[\"而并未执行render函数\",{\"1\":{\"1200\":1}}],[\"而并未执行\",{\"1\":{\"1200\":1}}],[\"而看不到本地变量\",{\"1\":{\"1101\":1}}],[\"而环境变量会在当前\",{\"1\":{\"1099\":1}}],[\"而已\",{\"1\":{\"1029\":1}}],[\"而非每次渲染\",{\"1\":{\"1297\":1}}],[\"而非输入字符\",{\"1\":{\"1056\":1}}],[\"而非该连接所指向的文件\",{\"1\":{\"1018\":1}}],[\"而非另行建立新的压缩文件\",{\"1\":{\"1018\":1}}],[\"而非自动换行过后的行数\",{\"1\":{\"986\":1}}],[\"而这几行同时都包含了选项中指定的字符或字符串\",{\"1\":{\"1009\":1}}],[\"而这个\",{\"1\":{\"597\":1}}],[\"而这个回调消息会在\",{\"1\":{\"125\":1}}],[\"而这个指令分\",{\"1\":{\"124\":1}}],[\"而有所不同\",{\"1\":{\"986\":1}}],[\"而最基本的指令就是按空白键space就往下一页显示\",{\"1\":{\"985\":1}}],[\"而可用\",{\"1\":{\"943\":1}}],[\"而作用域是从最底层向上找\",{\"1\":{\"901\":1}}],[\"而直接被赋值的变量默认就是一个全局变量\",{\"1\":{\"896\":1}}],[\"而将数组中的其余项分配给特定的变量就可以这样做\",{\"1\":{\"843\":1}}],[\"而块语句时不能放在赋值表达式左侧的\",{\"1\":{\"838\":1}}],[\"而另一个是\",{\"1\":{\"777\":1}}],[\"而数组是当前正在搜索的数组\",{\"1\":{\"709\":1}}],[\"而数值位\",{\"1\":{\"606\":1}}],[\"而仅仅会返回被连接数组的一个副本\",{\"1\":{\"701\":1}}],[\"而构造器则会生成长度和第一个参数相同的空数组\",{\"1\":{\"678\":1}}],[\"而构造函数需要使用\",{\"1\":{\"478\":1}}],[\"而nan\",{\"1\":{\"656\":1}}],[\"而await只是掩盖了这个事实\",{\"1\":{\"594\":1}}],[\"而完全是由程序所控制\",{\"1\":{\"589\":1}}],[\"而继续执行后面的逻辑\",{\"1\":{\"578\":1}}],[\"而调用链的下一步\",{\"1\":{\"578\":1}}],[\"而调用\",{\"1\":{\"555\":1}}],[\"而基于的\",{\"1\":{\"554\":1}}],[\"而变量提升是通过变量环境来实现\",{\"1\":{\"510\":1}}],[\"而由于变量提升的存在\",{\"1\":{\"503\":1}}],[\"而剩下的语句需要等到执行阶段\",{\"1\":{\"501\":1}}],[\"而函数声明式会提升到作用域最前边\",{\"1\":{\"500\":1}}],[\"而所需加载的模块文件一般保存在本地硬盘\",{\"1\":{\"448\":1}}],[\"而dataview视图的设计目的\",{\"1\":{\"408\":1}}],[\"而且这个面说不定有一定的起伏与粗糙度\",{\"1\":{\"2737\":1}}],[\"而且这个函数是在父组件的函数体内定义的\",{\"1\":{\"1209\":1}}],[\"而且dns负载均衡的控制权在域名服务商那里\",{\"1\":{\"2077\":1}}],[\"而且有些服务是无法降级的\",{\"1\":{\"2075\":1}}],[\"而且复制不能被区分\",{\"1\":{\"2020\":1}}],[\"而且即使它知道事件注册了哪些构件的过程\",{\"1\":{\"1987\":1}}],[\"而且实现透明\",{\"1\":{\"1984\":1}}],[\"而且使用该信息去改变或重构现有系统\",{\"1\":{\"1905\":1}}],[\"而且随着产品种类的增加\",{\"1\":{\"1751\":1}}],[\"而且被检查的频次也会减少\",{\"1\":{\"1641\":1}}],[\"而且也只能放在组件最顶层使用\",{\"1\":{\"1273\":1}}],[\"而且\",{\"1\":{\"1219\":1}}],[\"而且命令简洁而又好记\",{\"1\":{\"1071\":1}}],[\"而且不给出提示\",{\"1\":{\"998\":1}}],[\"而且还有搜寻字串的功能\",{\"1\":{\"985\":1}}],[\"而且用户名和组名相同的话\",{\"1\":{\"937\":1}}],[\"而且又不会污染全局作用域\",{\"1\":{\"902\":1}}],[\"而且已经可以在客户端使用了\",{\"1\":{\"817\":1}}],[\"而且依赖于上一个步骤的结果\",{\"1\":{\"596\":1}}],[\"而且无法从外部停止\",{\"1\":{\"565\":1}}],[\"而且它清楚地知道\",{\"1\":{\"511\":1}}],[\"而且支持设定字节序\",{\"1\":{\"408\":1}}],[\"而且如果期望在小屏幕下面显示跟大屏幕同等量的字体\",{\"1\":{\"207\":1}}],[\"而i\",{\"1\":{\"378\":1}}],[\"而顶层\",{\"1\":{\"334\":1}}],[\"而不关心外面怎么样来实例化\",{\"1\":{\"1770\":1}}],[\"而不关心创建的过程\",{\"1\":{\"1758\":1}}],[\"而不影响已有的代码结构和客户端使用\",{\"1\":{\"1750\":1}}],[\"而不必在材质中\",{\"1\":{\"2744\":1}}],[\"而不必关系其内部实现\",{\"1\":{\"2025\":1}}],[\"而不必继续等待设置的重传计时器时间到期\",{\"1\":{\"1721\":1}}],[\"而不必明确验证链中的每个引用是否有效\",{\"1\":{\"322\":1,\"644\":1}}],[\"而不需要改变presenter的逻辑\",{\"1\":{\"2032\":1}}],[\"而不需要关心具体的产品类\",{\"1\":{\"1754\":1}}],[\"而不需要撤销并重新提交\",{\"1\":{\"1600\":1}}],[\"而不需要等待渲染完成\",{\"1\":{\"1203\":1}}],[\"而不像\",{\"1\":{\"1580\":1}}],[\"而不能访问跨域的数据库\",{\"1\":{\"1670\":1}}],[\"而不能是异步的\",{\"1\":{\"1309\":1}}],[\"而不能判断基本数据类型\",{\"1\":{\"641\":1}}],[\"而不希望每次该值更改时都重新渲染组件\",{\"1\":{\"1282\":1}}],[\"而不等到事件循环的下一个迭代\",{\"1\":{\"1203\":1}}],[\"而不管是在哪个生命周期\",{\"1\":{\"1203\":1}}],[\"而不管其是否处理成功\",{\"1\":{\"323\":1,\"576\":1}}],[\"而不改动其他任何相关文件\",{\"1\":{\"1032\":1}}],[\"而不存放任何目录名称\",{\"1\":{\"1018\":1}}],[\"而不会影响其他任何人的工作或主分支中的代码\",{\"1\":{\"1592\":1}}],[\"而不会创建新的数组\",{\"1\":{\"699\":1}}],[\"而不会通过属性访问器\",{\"1\":{\"364\":1}}],[\"而不删除未使用的对象\",{\"1\":{\"433\":1}}],[\"而不是这个类\",{\"1\":{\"2743\":1}}],[\"而不是此类\",{\"1\":{\"2741\":1}}],[\"而不是它们的并集\",{\"1\":{\"2646\":1}}],[\"而不是它被声明的地方\",{\"1\":{\"352\":1}}],[\"而不是处理已加载的数据\",{\"1\":{\"2455\":1}}],[\"而不是绝对位置\",{\"1\":{\"2291\":1}}],[\"而不是直接更改当前队列\",{\"1\":{\"2286\":1}}],[\"而不是只集中于一点\",{\"1\":{\"1959\":1}}],[\"而不是只有一个大的\",{\"1\":{\"1227\":1}}],[\"而不是让缺陷扩散到下一个阶段\",{\"1\":{\"1959\":1}}],[\"而不是继承关系达到重用目的\",{\"1\":{\"1937\":1}}],[\"而不是具体实现\",{\"1\":{\"1937\":1}}],[\"而不是具有\",{\"1\":{\"455\":1}}],[\"而不是测试\",{\"1\":{\"1906\":1}}],[\"而不是服务端\",{\"1\":{\"1659\":1}}],[\"而不是将\",{\"1\":{\"1454\":1}}],[\"而不是类的实例对象\",{\"1\":{\"1391\":1}}],[\"而不是在全局作用域里\",{\"1\":{\"1354\":1}}],[\"而不是在原对象和数组上修改\",{\"1\":{\"1273\":1}}],[\"而不是每次渲染都重新创建\",{\"1\":{\"1279\":1}}],[\"而不是等到下一个循环\",{\"1\":{\"1203\":1}}],[\"而不是整个文件\",{\"1\":{\"989\":1}}],[\"而不是1\",{\"1\":{\"902\":1}}],[\"而不是64\",{\"1\":{\"611\":1}}],[\"而不是作为字符串\",{\"1\":{\"551\":1}}],[\"而不是显式地处于代码中\",{\"1\":{\"543\":1}}],[\"而不是字符串的位置\",{\"1\":{\"536\":1}}],[\"而不是首先被转换为\",{\"1\":{\"535\":1}}],[\"而不是上面定义的\",{\"1\":{\"258\":1}}],[\"而不是\",{\"1\":{\"19\":1,\"62\":1,\"582\":1,\"689\":1,\"723\":1,\"838\":1,\"986\":1}}],[\"而现在可以不带参数\",{\"1\":{\"318\":1}}],[\"而使用该方法\",{\"1\":{\"2296\":1}}],[\"而使用模块化就解决了这些问题\",{\"1\":{\"442\":1}}],[\"而使用\",{\"1\":{\"250\":1,\"507\":1,\"817\":1,\"1581\":1}}],[\"而在组件卸载时需要断开这个连接\",{\"1\":{\"1248\":1}}],[\"而在外面进行访问\",{\"1\":{\"898\":1}}],[\"而在\",{\"1\":{\"383\":1,\"464\":1,\"896\":1}}],[\"而在变量创建到真正初始化之间的时间跨度内\",{\"1\":{\"249\":1}}],[\"而在移动端有三个不同的视口概念\",{\"1\":{\"201\":1}}],[\"而通过\",{\"1\":{\"248\":1}}],[\"而是可以创建一种材质\",{\"1\":{\"2717\":1}}],[\"而是使用物理上正确的模型\",{\"1\":{\"2717\":1}}],[\"而是面向数据的设计方式\",{\"1\":{\"2028\":1}}],[\"而是返回现有全屏\",{\"1\":{\"1766\":1}}],[\"而是返回一个新数组\",{\"1\":{\"759\":1}}],[\"而是返回一个新的函数\",{\"1\":{\"355\":1}}],[\"而是返回一个子数组\",{\"1\":{\"702\":1}}],[\"而是通过查询原始表动态生成所需要的数据\",{\"1\":{\"2226\":1}}],[\"而是通过调用工厂类的方法来获取所需的对象\",{\"1\":{\"1747\":1}}],[\"而是通过后面的\",{\"1\":{\"569\":1}}],[\"而是将广播看作多播的一个特例\",{\"1\":{\"2214\":1}}],[\"而是将逻辑封装在函数中\",{\"1\":{\"1747\":1}}],[\"而是将cwnd设置为ssthresh的大小\",{\"1\":{\"1722\":1}}],[\"而是将任务回调存在一个队列中\",{\"1\":{\"376\":1}}],[\"而是保留这些报文的边界\",{\"1\":{\"1712\":1}}],[\"而是请求\",{\"1\":{\"1671\":1}}],[\"而是一个数据流\",{\"1\":{\"1737\":1}}],[\"而是一个name的大小\",{\"1\":{\"1660\":1}}],[\"而是一边编译一边执行\",{\"1\":{\"895\":1}}],[\"而是本地创建的仓库\",{\"1\":{\"1609\":1}}],[\"而是只有在某个值或依赖项发生变化后\",{\"1\":{\"1251\":1}}],[\"而是会将更新放入一个队列中\",{\"1\":{\"1199\":1}}],[\"而是先将这个请求挂起\",{\"1\":{\"1737\":1}}],[\"而是先将值转化为\",{\"1\":{\"606\":1}}],[\"而是先测试一下网络的拥塞程度\",{\"1\":{\"1719\":1}}],[\"而是先清除萤幕后再显示内容\",{\"1\":{\"986\":1}}],[\"而是由\",{\"1\":{\"772\":1}}],[\"而是指数组元素的最高序号加\",{\"1\":{\"674\":1}}],[\"而是进入catch方法中\",{\"1\":{\"572\":1}}],[\"而是以\",{\"1\":{\"507\":1}}],[\"而是在不保留报文边界的情况下以字节流方式进行传输\",{\"1\":{\"1713\":1}}],[\"而是在return\",{\"1\":{\"1173\":1}}],[\"而是在异步调用发出之后\",{\"1\":{\"555\":1}}],[\"而是在编译阶段被放入内存中\",{\"1\":{\"500\":1}}],[\"而是在当前的循环中继续执行\",{\"1\":{\"376\":1}}],[\"而是按需加载\",{\"1\":{\"471\":1}}],[\"而是\",{\"1\":{\"467\":1,\"1584\":1,\"1849\":1}}],[\"而是带有前后端同构思想的模块封装工具\",{\"1\":{\"465\":1}}],[\"而是放在任务队列中\",{\"1\":{\"372\":1}}],[\"而是浏览器为其提供的能力\",{\"1\":{\"371\":1}}],[\"而是需要在将来通过一定的手段得到\",{\"1\":{\"370\":1}}],[\"而是变量指向的那个内存地址不能改动\",{\"1\":{\"247\":1}}],[\"而是收紧为内部元素的宽度\",{\"1\":{\"178\":1}}],[\"而event\",{\"1\":{\"241\":2}}],[\"而事件冒泡的流程刚好是事件捕获的逆过程\",{\"1\":{\"234\":1}}],[\"而与父元素的\",{\"1\":{\"205\":1}}],[\"而\",{\"1\":{\"184\":1,\"230\":1,\"240\":1,\"246\":1,\"250\":1,\"313\":1,\"355\":1,\"371\":1,\"462\":1,\"464\":1,\"465\":1,\"467\":1,\"478\":1,\"517\":1,\"557\":1,\"562\":1,\"663\":1,\"679\":1,\"706\":1,\"719\":1,\"817\":1,\"859\":1,\"877\":1,\"879\":1,\"885\":1,\"1201\":2,\"1275\":2,\"1312\":1,\"1427\":1,\"1648\":1,\"1677\":1,\"1959\":1}}],[\"而mac和linux系统\",{\"1\":{\"102\":1}}],[\"而按照markdown文本样式进行折行\",{\"1\":{\"20\":1,\"63\":1}}],[\"如300s\",{\"1\":{\"2208\":1}}],[\"如发送时延\",{\"1\":{\"2201\":1}}],[\"如windows的perfmon应用程序\",{\"1\":{\"2172\":1}}],[\"如who的符号模式表所示\",{\"1\":{\"1039\":1}}],[\"如unix\",{\"1\":{\"2172\":1}}],[\"如打印机\",{\"1\":{\"2154\":1}}],[\"如电商的购物流程等\",{\"1\":{\"2075\":1}}],[\"如用http\",{\"1\":{\"2044\":1}}],[\"如项目管理计划\",{\"1\":{\"1961\":1}}],[\"如过去的交互模型已建立了用户的期望\",{\"1\":{\"1928\":1}}],[\"如性能\",{\"1\":{\"1899\":1}}],[\"如入库单\",{\"1\":{\"1879\":1}}],[\"如客户订单\",{\"1\":{\"1879\":1}}],[\"如客户端发出连接请求\",{\"1\":{\"1727\":1}}],[\"如erp\",{\"1\":{\"1875\":1}}],[\"如人口信息\",{\"1\":{\"1869\":1}}],[\"如cio介入\",{\"1\":{\"1856\":1}}],[\"如图所示\",{\"1\":{\"1720\":1}}],[\"如图\",{\"1\":{\"1650\":1}}],[\"如还有灰色标记\",{\"1\":{\"1650\":1}}],[\"如没有灰色节点\",{\"1\":{\"1650\":1}}],[\"如上图中的\",{\"1\":{\"1650\":1}}],[\"如上图所示\",{\"1\":{\"1650\":1}}],[\"如上所示\",{\"1\":{\"240\":1,\"1646\":1}}],[\"如基本类型\",{\"1\":{\"1343\":1}}],[\"如从服务器获取数据\",{\"1\":{\"1308\":1}}],[\"如输入处理\",{\"1\":{\"1308\":1}}],[\"如这个计数器组件\",{\"1\":{\"1273\":1}}],[\"如使用\",{\"1\":{\"1249\":1}}],[\"如字符串和数字\",{\"1\":{\"1236\":1}}],[\"如绘图应用或其它需要大量操作和反馈的场景\",{\"1\":{\"1212\":1}}],[\"如$\",{\"1\":{\"1104\":1}}],[\"如$和\",{\"1\":{\"1089\":1}}],[\"如有连续两行以上空白行则以一行空白行显示\",{\"1\":{\"987\":1}}],[\"如有有一个不相同\",{\"1\":{\"855\":1}}],[\"如if\",{\"1\":{\"789\":1}}],[\"如省略该\",{\"1\":{\"520\":1}}],[\"如下形式的对象\",{\"1\":{\"2760\":1}}],[\"如下示例\",{\"1\":{\"1431\":1}}],[\"如下具体示例\",{\"1\":{\"1427\":1}}],[\"如下图\",{\"1\":{\"1029\":1,\"1644\":1,\"1646\":3,\"1650\":1,\"1651\":1}}],[\"如下图所示\",{\"1\":{\"378\":1,\"1648\":1}}],[\"如下面这个例子\",{\"1\":{\"1646\":1}}],[\"如下面的代码所示\",{\"1\":{\"738\":1}}],[\"如下面代码\",{\"1\":{\"557\":1,\"688\":1}}],[\"如下所示\",{\"1\":{\"591\":1,\"806\":1}}],[\"如下代码所示\",{\"1\":{\"1428\":1,\"1442\":1,\"1443\":1}}],[\"如下代码\",{\"1\":{\"567\":1,\"568\":1,\"698\":1}}],[\"如下\",{\"1\":{\"395\":2,\"402\":1,\"500\":1,\"569\":1,\"676\":1,\"1268\":1}}],[\"如此循环往复\",{\"1\":{\"375\":1}}],[\"如平移\",{\"1\":{\"338\":1}}],[\"如\",{\"1\":{\"233\":7,\"606\":2,\"913\":2,\"1029\":1,\"1040\":3,\"1125\":1,\"1246\":1,\"1247\":1,\"1288\":1,\"1550\":1,\"1806\":1,\"1959\":1,\"1972\":1,\"2051\":2,\"2132\":2,\"2179\":1}}],[\"如给上面的这个\",{\"1\":{\"231\":1}}],[\"如何处理\",{\"0\":{\"1730\":1}}],[\"如何使用\",{\"0\":{\"1210\":1}}],[\"如何才能输出\",{\"1\":{\"903\":1}}],[\"如何转换成数组\",{\"1\":{\"731\":1}}],[\"如何引入依赖\",{\"1\":{\"457\":1}}],[\"如何对外输出\",{\"1\":{\"457\":1}}],[\"如何实现\",{\"0\":{\"237\":1},\"1\":{\"239\":1}}],[\"如何减少重排\",{\"0\":{\"226\":1}}],[\"如何创建bfc\",{\"0\":{\"148\":1}}],[\"如标题\",{\"1\":{\"217\":1}}],[\"如果构造的时候没有传递\",{\"1\":{\"2855\":1}}],[\"如果构造函数创建多个对象\",{\"1\":{\"484\":1}}],[\"如果forceclear值是true\",{\"1\":{\"2836\":1}}],[\"如果floatfragmenttextures和vertextextures都是true\",{\"1\":{\"2795\":1}}],[\"如果渲染目标已经使用\",{\"1\":{\"2799\":1}}],[\"如果渲染器传递clippingplanes\",{\"1\":{\"2748\":1}}],[\"如果logarithmicdepthbuffer在构造器中被设为true且\",{\"1\":{\"2795\":1}}],[\"如果着色器没有编译和链接\",{\"1\":{\"2794\":1}}],[\"如果autoclear是true\",{\"1\":{\"2792\":1,\"2793\":1}}],[\"如果autoclear为true\",{\"1\":{\"2791\":1}}],[\"如果您不希望\",{\"1\":{\"2741\":1}}],[\"如果您决定使用不同的渲染器\",{\"1\":{\"2633\":1}}],[\"如果材质的transparent属性未设置为true\",{\"1\":{\"2667\":1}}],[\"如果执行写入或者与模板缓冲进行比较\",{\"1\":{\"2656\":1}}],[\"如果派生曲线未实现其\",{\"1\":{\"2341\":1}}],[\"如果曲线非常大\",{\"1\":{\"2331\":1}}],[\"如果具有指定名称的属性存在\",{\"1\":{\"2310\":1}}],[\"如果仍然没有和当初提供的dhcp服务器联系上\",{\"1\":{\"2210\":1}}],[\"如果交换机根据数据中的目的mac地址在建立好的mac地址表中查询到了\",{\"1\":{\"2208\":1}}],[\"如果说中央处理器\",{\"1\":{\"2179\":1}}],[\"如果说html语义化标签是给机器看的\",{\"1\":{\"216\":1}}],[\"如果查询结果为空\",{\"1\":{\"2072\":1}}],[\"如果链中的处理者没有妥善设计\",{\"1\":{\"1838\":1}}],[\"如果过度使用发布\",{\"1\":{\"1813\":1}}],[\"如果过度使用它们\",{\"1\":{\"1269\":1}}],[\"如果订阅者未正确取消订阅或销毁\",{\"1\":{\"1805\":1}}],[\"如果下次请求相同的资源\",{\"1\":{\"1794\":1}}],[\"如果下次再输入相同的参数\",{\"1\":{\"902\":1}}],[\"如果创建多个实例\",{\"1\":{\"1762\":1}}],[\"如果判断逻辑很多\",{\"1\":{\"1753\":1}}],[\"如果客户端需要发送信息就是属于下一个htp请求了\",{\"1\":{\"1737\":1}}],[\"如果加密\",{\"1\":{\"1736\":1}}],[\"如果⼀次接受数据的⼤⼩⼩于发送端⼀次发送的数据⼤⼩\",{\"1\":{\"1731\":1}}],[\"如果短时间有多个数据发送\",{\"1\":{\"1730\":1}}],[\"如果服务端也想断开连接了\",{\"1\":{\"1728\":1}}],[\"如果同意连接\",{\"1\":{\"1727\":1}}],[\"如果同一个值又被赋给另一个变量\",{\"1\":{\"1646\":1}}],[\"如果收到了一个乱序的报文\",{\"1\":{\"1724\":1}}],[\"如果定时器超时\",{\"1\":{\"1724\":1}}],[\"如果定义了法线贴图\",{\"1\":{\"2700\":1}}],[\"如果定义了方法\",{\"1\":{\"806\":1}}],[\"如果定义的时候没有赋值\",{\"1\":{\"1442\":1}}],[\"如果接收方应用程序读数据的速度能够与数据到达的速度一样快\",{\"1\":{\"1723\":1}}],[\"如果接口中有多个类型的属性\",{\"1\":{\"1340\":1}}],[\"如果响应资源进行了压缩\",{\"1\":{\"1699\":1}}],[\"如果请求的文件是真实存在的\",{\"1\":{\"1698\":1}}],[\"如果包含服务端\",{\"1\":{\"1661\":1}}],[\"如果包含则返回\",{\"1\":{\"289\":1}}],[\"如果采用非黑即白的标记策略\",{\"1\":{\"1650\":1}}],[\"如果再如新生代一般分区然后复制来复制去就会非常耗时\",{\"1\":{\"1648\":1}}],[\"如果复制一个对象到空闲区时\",{\"1\":{\"1648\":1}}],[\"如果问题出现了\",{\"1\":{\"1637\":1}}],[\"如果发送方操作的速度快于接收方\",{\"1\":{\"1723\":1}}],[\"如果发送端实体在合理的往返时延\",{\"1\":{\"1713\":1}}],[\"如果发现问题不存在了\",{\"1\":{\"1637\":1}}],[\"如果发生了其他更新\",{\"1\":{\"1237\":1}}],[\"如果发生错误\",{\"1\":{\"560\":1}}],[\"如果指向看到每个提交的概要\",{\"1\":{\"1626\":1}}],[\"如果指定要比较目录\",{\"1\":{\"1008\":1}}],[\"如果指定移动的源目录或文件与目标的目录或文件同名\",{\"1\":{\"1001\":2}}],[\"如果指定的组已经存在\",{\"1\":{\"953\":1}}],[\"如果指定的索引值小于数组的元素数\",{\"1\":{\"680\":1}}],[\"如果指定位置没有字符\",{\"1\":{\"518\":1}}],[\"如果删除之前修改过并且已经放到暂存区域的话\",{\"1\":{\"1613\":1}}],[\"如果只需要创建简单对象\",{\"1\":{\"1751\":1}}],[\"如果只使用两次握手\",{\"1\":{\"1727\":1}}],[\"如果只是想看有哪些文件存在差异\",{\"1\":{\"1636\":1}}],[\"如果只是简单地从工作目录中手工删除文件\",{\"1\":{\"1612\":1}}],[\"如果只有一个参数\",{\"1\":{\"260\":1}}],[\"如果当前存在rendertarget\",{\"1\":{\"2828\":1}}],[\"如果当前存在watcher\",{\"1\":{\"1562\":1}}],[\"如果当前本地仓库不是从远程仓库克隆\",{\"1\":{\"1609\":1}}],[\"如果上次提交暂存的\",{\"1\":{\"1600\":1}}],[\"如果上一节的示例\",{\"1\":{\"1267\":1}}],[\"如果未设置url修饰符\",{\"1\":{\"2476\":1}}],[\"如果未手动设置加强管理器\",{\"1\":{\"2461\":1}}],[\"如果未通过任何配置\",{\"1\":{\"1586\":1}}],[\"如果未指定路径\",{\"1\":{\"1006\":1}}],[\"如果未指定\",{\"1\":{\"409\":2,\"1273\":1}}],[\"如果中央存储库出现故障\",{\"1\":{\"1581\":1}}],[\"如果中央服务器出现故障\",{\"1\":{\"1579\":1}}],[\"如果中心数据库损坏\",{\"1\":{\"1579\":1}}],[\"如果watcher上有lazy属性\",{\"1\":{\"1571\":1}}],[\"如果watcher是渲染watcher\",{\"1\":{\"1561\":1}}],[\"如果内部还是数组\",{\"1\":{\"1563\":1}}],[\"如果数据中的目的mac地址不再mac地址表中\",{\"1\":{\"2208\":1}}],[\"如果数据结构类似\",{\"1\":{\"1563\":1}}],[\"如果数组里面还有数组\",{\"1\":{\"1563\":1}}],[\"如果数组里面还包含数组\",{\"1\":{\"1535\":1,\"1563\":1}}],[\"如果数组的嵌套层数不确定\",{\"1\":{\"739\":1}}],[\"如果数组是空的\",{\"1\":{\"695\":1}}],[\"如果数组中检测到有一个元素不满足\",{\"1\":{\"876\":1}}],[\"如果数组中的某一项是\",{\"1\":{\"689\":1}}],[\"如果数组中存在空项\",{\"1\":{\"311\":1}}],[\"如果赋值的新值也是一个对象\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"如果表达式是一个函数\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"如果匹配完了花括号\",{\"1\":{\"1551\":1}}],[\"如果开始标签解析有结果\",{\"1\":{\"1550\":1}}],[\"如果开启\",{\"1\":{\"118\":1}}],[\"如果<在第一个\",{\"1\":{\"1550\":1}}],[\"如果多次调用nexttick\",{\"1\":{\"1542\":1}}],[\"如果多层的嵌套\",{\"1\":{\"362\":1}}],[\"如果前面都不支持\",{\"1\":{\"1542\":1}}],[\"如果支持promise\",{\"1\":{\"1542\":1}}],[\"如果vue数据嵌套层级过深\",{\"1\":{\"1534\":1}}],[\"如果value还是一个对象会继续走一遍odefinereactive\",{\"1\":{\"1534\":1}}],[\"如果模板里面的是一个对象\",{\"1\":{\"1527\":1}}],[\"如果模板字符中的变量没有声明\",{\"1\":{\"255\":1}}],[\"如果返回值\",{\"1\":{\"1520\":1}}],[\"如果返回的结果是个\",{\"1\":{\"581\":1}}],[\"如果还没清空队列\",{\"1\":{\"1493\":1}}],[\"如果还查不到\",{\"1\":{\"482\":1}}],[\"如果全都不相等\",{\"1\":{\"1478\":1}}],[\"如果全局还没有的话就会报错\",{\"1\":{\"901\":1}}],[\"如果满足就进行相应的移动指针\",{\"1\":{\"1478\":1}}],[\"如果老的多\",{\"1\":{\"1478\":1}}],[\"如果初始属性没赋值就需要加上\",{\"1\":{\"1386\":1}}],[\"如果我的接口定义是这样的\",{\"1\":{\"1372\":1}}],[\"如果我们此刻仅仅是请求一张图片或者一个\",{\"1\":{\"1660\":1}}],[\"如果我们当初始渲染完成\",{\"1\":{\"1475\":1}}],[\"如果我们仅仅把原始类型\",{\"1\":{\"1460\":1}}],[\"如果我们图省事\",{\"1\":{\"1386\":1}}],[\"如果我们想查看某个文件都在哪些提交中修改了内容\",{\"1\":{\"1627\":1}}],[\"如果我们想用\",{\"1\":{\"1311\":1}}],[\"如果我们想将数组中的一些元素分配给变量\",{\"1\":{\"843\":1}}],[\"如果我们在创建\",{\"1\":{\"1286\":1}}],[\"如果我们在代码中设置了循环计时器\",{\"1\":{\"430\":1}}],[\"如果我们不做特殊处理\",{\"1\":{\"578\":1}}],[\"如果我们不断地将内存添加到缓存中\",{\"1\":{\"433\":1}}],[\"如果我们使用一个对象作为键\",{\"1\":{\"433\":1}}],[\"如果方块移动到屏幕的右侧\",{\"1\":{\"1289\":1}}],[\"如果其他效应或钩子依赖于\",{\"1\":{\"1285\":1}}],[\"如果其中任何一个操作数是对象\",{\"1\":{\"807\":1}}],[\"如果其中任何一个是对象\",{\"1\":{\"775\":1}}],[\"如果其中一个不是布尔值\",{\"1\":{\"795\":1}}],[\"如果其中一个是数字\",{\"1\":{\"778\":1}}],[\"如果其中一个是对象\",{\"1\":{\"778\":1}}],[\"如果其中一个是布尔值\",{\"1\":{\"777\":1}}],[\"如果其中一个对象的引用内存地址发生改变\",{\"1\":{\"753\":1}}],[\"如果其中一个操作数是nan\",{\"1\":{\"627\":1}}],[\"如果其中一列内容高度拉长\",{\"1\":{\"159\":1}}],[\"如果代码在服务器端渲染\",{\"1\":{\"1260\":1}}],[\"如果代码同步执行\",{\"1\":{\"555\":1}}],[\"如果按钮上方空间不够\",{\"1\":{\"1256\":1}}],[\"如果按钮上方空间足够\",{\"1\":{\"1256\":1}}],[\"如果优化的目标是和渲染有关的\",{\"1\":{\"1237\":1}}],[\"如果设备支持\",{\"1\":{\"2788\":1}}],[\"如果设备性能差\",{\"1\":{\"1237\":1}}],[\"如果设备性能好\",{\"1\":{\"1237\":1}}],[\"如果设计不合理或实现有误\",{\"1\":{\"1797\":1}}],[\"如果设置开启\",{\"1\":{\"2805\":1}}],[\"如果设置\",{\"1\":{\"2755\":1}}],[\"如果设置了回调\",{\"1\":{\"2477\":1}}],[\"如果设置了该参数\",{\"1\":{\"526\":1}}],[\"如果设置为\",{\"1\":{\"703\":1,\"1659\":1}}],[\"如果设置的索引值大于数组的长度\",{\"1\":{\"680\":1}}],[\"如果要在单个场景中处理巨大的比例差异\",{\"1\":{\"2788\":1}}],[\"如果要改变阻塞模式\",{\"1\":{\"1707\":1}}],[\"如果要处理多层\",{\"1\":{\"1372\":1}}],[\"如果要优化的工作不是在渲染期间进行的\",{\"1\":{\"1237\":1}}],[\"如果要更新对象也是可以的\",{\"1\":{\"1222\":1}}],[\"如果要复制目录\",{\"1\":{\"998\":1}}],[\"如果引入\",{\"1\":{\"1212\":1}}],[\"如果父组件重新渲染\",{\"1\":{\"1209\":1}}],[\"如果setstate是同步调用\",{\"1\":{\"1200\":1}}],[\"如果start是负数\",{\"1\":{\"528\":1}}],[\"如果写\",{\"1\":{\"1153\":1}}],[\"如果修改过\",{\"1\":{\"1067\":1}}],[\"如果修剪后的字符串不代表有效数字\",{\"1\":{\"797\":1}}],[\"如果刚刚我们执行\",{\"1\":{\"1062\":1}}],[\"如果存在\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"如果存在template属性\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"如果存在子目录的话\",{\"1\":{\"1016\":1}}],[\"如果存储在栈中\",{\"1\":{\"651\":1}}],[\"如果目标文件已存在\",{\"1\":{\"998\":1}}],[\"如果目标对象和源对象有同名属性\",{\"1\":{\"755\":1}}],[\"如果组内只有高一个用户\",{\"1\":{\"937\":1}}],[\"如果没找到\",{\"1\":{\"901\":1}}],[\"如果没有传入canvas参数\",{\"1\":{\"2797\":1}}],[\"如果没有传这个参数\",{\"1\":{\"2788\":1}}],[\"如果没有了则关闭定时器\",{\"1\":{\"1724\":1}}],[\"如果没有设置位移贴图\",{\"1\":{\"2603\":1,\"2604\":1,\"2704\":1,\"2705\":1}}],[\"如果没有设置domain\",{\"1\":{\"1659\":1}}],[\"如果没有设置该参数\",{\"1\":{\"526\":1}}],[\"如果没有引用指向该对象\",{\"1\":{\"1646\":1}}],[\"如果没有权限\",{\"1\":{\"1029\":1}}],[\"如果没有符合条件的元素\",{\"1\":{\"875\":1}}],[\"如果没有符合条件的元素返回\",{\"1\":{\"709\":2,\"878\":2}}],[\"如果没有指定该参数\",{\"1\":{\"702\":1}}],[\"如果没有找到\",{\"1\":{\"641\":1,\"657\":1,\"708\":1}}],[\"如果没有找到任何匹配的子串\",{\"1\":{\"537\":1}}],[\"如果没有return则会返回undefined\",{\"1\":{\"594\":1}}],[\"如果没有查找到\",{\"1\":{\"510\":1}}],[\"如果没有变量提升\",{\"1\":{\"503\":1}}],[\"如果没有这一步\",{\"1\":{\"502\":1}}],[\"如果没有则去原型的原型中寻找\",{\"1\":{\"482\":1}}],[\"如果没有则会去原型对象中寻找\",{\"1\":{\"482\":1}}],[\"如果没有\",{\"1\":{\"379\":1,\"895\":1,\"1273\":1,\"1274\":1}}],[\"如果没有提供初始值\",{\"1\":{\"877\":1}}],[\"如果没有提供该参数\",{\"1\":{\"458\":1}}],[\"如果没有提供\",{\"1\":{\"284\":1,\"705\":1}}],[\"如果没有参数\",{\"1\":{\"260\":1}}],[\"如果最终仍然找不到\",{\"1\":{\"895\":1}}],[\"如果最低位是\",{\"1\":{\"642\":2}}],[\"如果能找到\",{\"1\":{\"895\":1}}],[\"如果能够进到这个判断\",{\"1\":{\"864\":1,\"866\":1}}],[\"如果源码存在语法错误\",{\"1\":{\"895\":1}}],[\"如果源码符合语法规则\",{\"1\":{\"895\":1}}],[\"如果变量已经存在\",{\"1\":{\"843\":1}}],[\"如果解构数组元素的个数是不能超过元组中元素的个数\",{\"1\":{\"1411\":1}}],[\"如果解构中某一项不需要\",{\"1\":{\"843\":1}}],[\"如果解构时对应的位置没有值就会将变量赋值为\",{\"1\":{\"252\":1}}],[\"如果分配的对象属性为\",{\"1\":{\"838\":1}}],[\"如果任一操作数是对象\",{\"1\":{\"807\":1}}],[\"如果任一参数是字符串\",{\"1\":{\"807\":1}}],[\"如果任务多起来\",{\"1\":{\"590\":1}}],[\"如果将fog\",{\"1\":{\"2752\":1}}],[\"如果将对象传递给\",{\"1\":{\"806\":1}}],[\"如果将一个\",{\"1\":{\"200\":1}}],[\"如果tostring\",{\"1\":{\"806\":1}}],[\"如果可以进行这种转换\",{\"1\":{\"805\":1}}],[\"如果可以转换为字符串\",{\"1\":{\"805\":1}}],[\"如果可迭代对象中没有一个\",{\"1\":{\"328\":1}}],[\"如果尝试直接使用字符串连接\",{\"1\":{\"803\":1}}],[\"如果左操作数不是字符串\",{\"1\":{\"779\":1}}],[\"如果两者都是字符串\",{\"1\":{\"778\":1}}],[\"如果两个参数都不写\",{\"1\":{\"758\":1,\"759\":1}}],[\"如果两个参数相等\",{\"1\":{\"698\":1}}],[\"如果两个操作数相等\",{\"1\":{\"627\":1}}],[\"如果两个操作数都是字符串\",{\"1\":{\"628\":1}}],[\"如果两个操作数都是null\",{\"1\":{\"625\":1}}],[\"如果两个操作数都是对象\",{\"1\":{\"624\":1,\"625\":1}}],[\"如果两个操作数都是数值\",{\"1\":{\"617\":1,\"618\":1,\"619\":1}}],[\"如果两个操作数都是数值或者都是字符串\",{\"1\":{\"616\":1}}],[\"如果两个数都是undefined\",{\"1\":{\"625\":1}}],[\"如果两个数都是nan\",{\"1\":{\"625\":1}}],[\"如果拷贝的是基本数据类型\",{\"1\":{\"753\":1}}],[\"如果层数不确定\",{\"1\":{\"739\":1}}],[\"如果某一项还是一个数组\",{\"1\":{\"735\":1}}],[\"如果某个属性不为\",{\"1\":{\"321\":1,\"643\":1}}],[\"如果某个字符串不够指定长度\",{\"1\":{\"292\":1,\"546\":1}}],[\"如果文档中的节点树发生变化\",{\"1\":{\"725\":1}}],[\"如果文件顶部已经有一个\",{\"1\":{\"20\":1,\"63\":1}}],[\"如果已知数组元素数量\",{\"1\":{\"677\":1}}],[\"如果对象属性的值是一个数组\",{\"1\":{\"1563\":1}}],[\"如果对象内部嵌套较深时\",{\"1\":{\"836\":1}}],[\"如果对象中没有但是原型中有\",{\"1\":{\"482\":1}}],[\"如果对非布尔值进行运算\",{\"1\":{\"666\":1}}],[\"如果基数有误返回\",{\"1\":{\"663\":1}}],[\"如果字符串为空\",{\"1\":{\"797\":1}}],[\"如果字符串是一个空串或者是一个全是空格的字符串\",{\"1\":{\"663\":1}}],[\"如果字符串中有非数字的内容\",{\"1\":{\"663\":1}}],[\"如果字符串的第一个字符不能被转换为数字\",{\"1\":{\"550\":1}}],[\"如果合并时的多个对象有相同属性\",{\"1\":{\"633\":1}}],[\"如果data不存在\",{\"1\":{\"625\":1}}],[\"如果第二个操作数是对象\",{\"1\":{\"624\":1}}],[\"如果第一个参数应该排在第二个参数后面\",{\"1\":{\"698\":1}}],[\"如果第一个参数应该排在第二个参数前面\",{\"1\":{\"698\":1}}],[\"如果第一个操作数为真\",{\"1\":{\"625\":1}}],[\"如果第一个操作数的求值结果是false\",{\"1\":{\"625\":1}}],[\"如果第一个操作数是undefined\",{\"1\":{\"624\":1}}],[\"如果第一个操作数是nan\",{\"1\":{\"624\":1}}],[\"如果第一个操作数是null\",{\"1\":{\"624\":1}}],[\"如果第一个操作数是对象\",{\"1\":{\"624\":1,\"625\":1}}],[\"如果第一个promise对象状态变成resolved\",{\"1\":{\"574\":1}}],[\"如果被除数是零\",{\"1\":{\"620\":1}}],[\"如果被除数是有限大的数值而除数是无穷大的数值\",{\"1\":{\"620\":1}}],[\"如果被除数是有限大的数值而除数是零\",{\"1\":{\"620\":1}}],[\"如果被除数是无穷大值而除数是有限大的数值\",{\"1\":{\"620\":1}}],[\"如果infinity除以infinity\",{\"1\":{\"619\":1}}],[\"如果infinity与infinity相乘\",{\"1\":{\"618\":1}}],[\"如果infinity与非0数值相乘\",{\"1\":{\"618\":1}}],[\"如果infinity与0相乘\",{\"1\":{\"618\":1}}],[\"如果0除以0\",{\"1\":{\"619\":1}}],[\"如果转化结果为nan\",{\"1\":{\"617\":1}}],[\"如果操作数是\",{\"1\":{\"623\":3}}],[\"如果操作数是非0数值\",{\"1\":{\"623\":1}}],[\"如果操作数是非空字符串\",{\"1\":{\"623\":1}}],[\"如果操作数是空字符串\",{\"1\":{\"623\":1}}],[\"如果操作数是对象\",{\"1\":{\"623\":1}}],[\"如果操作数是数值0\",{\"1\":{\"623\":1}}],[\"如果操作数是数值\",{\"1\":{\"604\":1}}],[\"如果操作数不能转化为数值\",{\"1\":{\"604\":1}}],[\"如果处理流程比较复杂\",{\"1\":{\"596\":1}}],[\"如果它等到的是一个\",{\"1\":{\"595\":1}}],[\"如果它等到的不是一个\",{\"1\":{\"595\":1}}],[\"如果它是第一个具有\",{\"1\":{\"343\":1}}],[\"如果异步函数使用return关键字返回了值\",{\"1\":{\"594\":1}}],[\"如果从类库中检索出来的基类能够完全满足新系统的需求\",{\"1\":{\"2028\":1}}],[\"如果从\",{\"1\":{\"589\":1}}],[\"如果遇到属性值为引用类型的时候\",{\"1\":{\"768\":1}}],[\"如果遇到\",{\"1\":{\"589\":1}}],[\"如果状态已经凝固\",{\"1\":{\"580\":1}}],[\"如果所有参数\",{\"1\":{\"577\":1}}],[\"如果所有传入的\",{\"1\":{\"328\":1}}],[\"如果出现错误\",{\"1\":{\"572\":1}}],[\"如果为true\",{\"1\":{\"2794\":1}}],[\"如果为null\",{\"1\":{\"2674\":1}}],[\"如果为\",{\"1\":{\"568\":2}}],[\"如果为负数\",{\"1\":{\"528\":1}}],[\"如果为负值\",{\"1\":{\"289\":1,\"685\":1}}],[\"如果读取成功就会将第二个参数传递给回调的第二个参数\",{\"1\":{\"560\":1}}],[\"如果读取二进制文件\",{\"1\":{\"395\":1}}],[\"如果repeat的参数是字符串\",{\"1\":{\"545\":1}}],[\"如果参数字符串的第一个字符不能被解析成为数字\",{\"1\":{\"551\":1}}],[\"如果参数\",{\"1\":{\"530\":1}}],[\"如果参数是nan\",{\"1\":{\"545\":1}}],[\"如果参数是个负数\",{\"1\":{\"530\":1}}],[\"如果参数是\",{\"1\":{\"282\":2,\"401\":1,\"545\":1}}],[\"如果参数是负数或者infinity\",{\"1\":{\"545\":1}}],[\"如果参数是负数或者\",{\"1\":{\"282\":1}}],[\"如果参数是小数\",{\"1\":{\"282\":1,\"545\":1}}],[\"如果该\",{\"1\":{\"2288\":1}}],[\"如果该变量的值被其他的值覆盖了\",{\"1\":{\"1646\":1}}],[\"如果该用户已超过24小时没有任何动作\",{\"1\":{\"930\":1}}],[\"如果该方法存在并返回一个原始值\",{\"1\":{\"806\":1}}],[\"如果该函数只有一个参数\",{\"1\":{\"755\":1}}],[\"如果该参数小于\",{\"1\":{\"550\":1}}],[\"如果该参数不是\",{\"1\":{\"536\":1}}],[\"如果该参数是负数\",{\"1\":{\"528\":1}}],[\"如果该值是一个字符串\",{\"1\":{\"535\":1}}],[\"如果该属性为\",{\"1\":{\"321\":1,\"643\":1}}],[\"如果访问就会抛出错误\",{\"1\":{\"511\":1}}],[\"如果访客有视障\",{\"1\":{\"213\":1}}],[\"如果区块中存在\",{\"1\":{\"511\":1}}],[\"如果改成\",{\"1\":{\"507\":1}}],[\"如果属性是引用类型\",{\"1\":{\"484\":1}}],[\"如果找不到就直接插入\",{\"1\":{\"1478\":1}}],[\"如果找不到\",{\"1\":{\"482\":1,\"895\":1}}],[\"如果找到了利用\",{\"1\":{\"1478\":1}}],[\"如果找到则直接使用\",{\"1\":{\"482\":1}}],[\"如果找到匹配的字符串则返回\",{\"1\":{\"279\":1,\"522\":1}}],[\"如果以上都不是\",{\"1\":{\"454\":1}}],[\"如果缓存中没有\",{\"1\":{\"454\":1}}],[\"如果想看master分支比test分支多提交了哪些内容\",{\"1\":{\"1629\":1}}],[\"如果想查看test分支比master分支多提交了哪些内容\",{\"1\":{\"1629\":1}}],[\"如果想查看非合并操作的操作记录\",{\"1\":{\"1628\":1}}],[\"如果想查看某个具体时间区间之间的日志\",{\"1\":{\"1626\":1}}],[\"如果想只看某个人的提交\",{\"1\":{\"1626\":1}}],[\"如果想推送指定标签\",{\"1\":{\"1619\":1}}],[\"如果想把文件从暂存区域移除\",{\"1\":{\"1613\":1}}],[\"如果想将\",{\"1\":{\"1596\":1}}],[\"如果想将新建的本地分支推送到远程仓库\",{\"1\":{\"1594\":1}}],[\"如果想将一个单元清零\",{\"1\":{\"607\":1}}],[\"如果想让a和b两个数字相加\",{\"1\":{\"616\":1}}],[\"如果想成功引用全局的\",{\"1\":{\"511\":1}}],[\"如果想在浏览器中使用原生\",{\"1\":{\"473\":1}}],[\"如果想在\",{\"1\":{\"450\":1}}],[\"如果想要将所有未跟踪和修改的文件添加到暂存区\",{\"1\":{\"1599\":1}}],[\"如果想要使用一个模块里导出的变量\",{\"1\":{\"1354\":1}}],[\"如果想要遍历一个对象的属性\",{\"1\":{\"719\":1,\"874\":1}}],[\"如果想要创建一个\",{\"1\":{\"443\":1}}],[\"如果想要打平更多的层级\",{\"1\":{\"311\":1,\"720\":1}}],[\"如果使用\",{\"1\":{\"2805\":1}}],[\"如果使用局域网还好\",{\"1\":{\"1579\":1}}],[\"如果使用了直接操作\",{\"1\":{\"1250\":1}}],[\"如果使用者按错键\",{\"1\":{\"986\":1}}],[\"如果使用数组的解构赋值\",{\"1\":{\"850\":1}}],[\"如果使用模块设计应用\",{\"1\":{\"442\":1}}],[\"如果使用对象作为键名\",{\"1\":{\"272\":1}}],[\"如果结构不合理\",{\"1\":{\"442\":1}}],[\"如果观察到内存持续出现峰值\",{\"1\":{\"436\":1}}],[\"如果事件侦听器只能执行一次\",{\"1\":{\"432\":1}}],[\"如果必须使用全局变量存储数据\",{\"1\":{\"429\":1}}],[\"如果网站什么都不做\",{\"1\":{\"425\":1}}],[\"如果注意到页面的性能越来越差\",{\"1\":{\"425\":1}}],[\"如果应用使用的内存越来越多\",{\"1\":{\"424\":1}}],[\"如果省略该参数\",{\"1\":{\"530\":1,\"690\":1}}],[\"如果省略了该参数\",{\"1\":{\"529\":1}}],[\"如果省略\",{\"1\":{\"389\":1,\"838\":1,\"1014\":1,\"1677\":1}}],[\"如果省略第二个参数\",{\"1\":{\"293\":1,\"547\":1}}],[\"如果类型未知\",{\"1\":{\"388\":1}}],[\"如果这种调整仍不足以使构件适用于新系统\",{\"1\":{\"2028\":1}}],[\"如果这两个操作数都是数值\",{\"1\":{\"628\":1}}],[\"如果这个函数执行了一些计算密集或副作用的操作\",{\"1\":{\"1274\":1}}],[\"如果这个值是其他类型\",{\"1\":{\"677\":1}}],[\"如果这个结果是个简单的值\",{\"1\":{\"581\":1}}],[\"如果这个参数是负数\",{\"1\":{\"702\":1}}],[\"如果这个参数是对象\",{\"1\":{\"464\":1}}],[\"如果这个参数为函数\",{\"1\":{\"464\":1}}],[\"如果这个参数为空\",{\"1\":{\"363\":1}}],[\"如果这里不指定\",{\"1\":{\"286\":1,\"678\":1}}],[\"如果把逻辑放在presenter中\",{\"1\":{\"2032\":1}}],[\"如果把空字符串用作\",{\"1\":{\"526\":1}}],[\"如果把\",{\"1\":{\"355\":1}}],[\"如果把所有三个框都向左浮动\",{\"1\":{\"178\":1}}],[\"如果嵌套了多个对象\",{\"1\":{\"354\":1}}],[\"如果函数外部没有任何指向它们的引用\",{\"1\":{\"431\":1}}],[\"如果函数在某个上下文对象中调用\",{\"1\":{\"354\":1}}],[\"如果函数体的返回值只有一句\",{\"1\":{\"260\":1}}],[\"如果调用他们的方法\",{\"1\":{\"662\":1}}],[\"如果调用它的不是对象或对象不存在\",{\"1\":{\"352\":1}}],[\"如果调用这个方法\",{\"1\":{\"239\":1}}],[\"如果非全局匹配\",{\"1\":{\"326\":1}}],[\"如果传递与光照相关的uniform数据到这个材质\",{\"1\":{\"2757\":1}}],[\"如果传递的参数没计算过\",{\"1\":{\"902\":1}}],[\"如果传过来的是对象或者数组\",{\"1\":{\"1534\":1}}],[\"如果传的参数不是一个正则表达式对象\",{\"1\":{\"324\":1}}],[\"如果传入\",{\"1\":{\"2838\":1}}],[\"如果传入的值是数字\",{\"1\":{\"677\":1}}],[\"如果传入的参数小于等于\",{\"1\":{\"311\":1}}],[\"如果传入的子字符串在搜索字符串的末尾则返回\",{\"1\":{\"281\":1,\"524\":1}}],[\"如果传入设备名称\",{\"1\":{\"128\":1}}],[\"如果给变量分配的值是\",{\"1\":{\"843\":1}}],[\"如果给数组传入一个值\",{\"1\":{\"677\":1}}],[\"如果给定的函数不存在\",{\"1\":{\"322\":1,\"644\":1}}],[\"如果给每个列表项一一都绑定一个函数\",{\"1\":{\"236\":1}}],[\"如果用户想采用什么策略\",{\"1\":{\"1788\":1}}],[\"如果用户追加了一个怎么办\",{\"1\":{\"1478\":1}}],[\"如果用户点击了指定的元素\",{\"1\":{\"558\":1}}],[\"如果用\",{\"1\":{\"596\":1,\"724\":1,\"1309\":1}}],[\"如果用在函数参数中\",{\"1\":{\"305\":1}}],[\"如果用来补全的字符串与原字符串\",{\"1\":{\"293\":1,\"547\":1}}],[\"如果用事件代理就会省去很多这样麻烦\",{\"1\":{\"236\":1}}],[\"如果原字符串的长度\",{\"1\":{\"293\":1,\"547\":1}}],[\"如果不需要动态光照\",{\"1\":{\"2805\":1}}],[\"如果不需要提供过渡反馈\",{\"1\":{\"1233\":1}}],[\"如果不透明度低于此值\",{\"1\":{\"2637\":1}}],[\"如果不考虑网络环境\",{\"1\":{\"2201\":1}}],[\"如果不及时取消订阅可能会导致内存泄漏\",{\"1\":{\"1813\":1}}],[\"如果不采用策略模式\",{\"1\":{\"1787\":1}}],[\"如果不存在render和template\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"如果不存在render属性\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"如果不正确地使用\",{\"1\":{\"1224\":1}}],[\"如果不能复用直接创建新的插入到老的节点开头处\",{\"1\":{\"1478\":1}}],[\"如果不能转化为数组将输出nan\",{\"1\":{\"775\":1}}],[\"如果不能转化为一个数字\",{\"1\":{\"602\":1}}],[\"如果不能确定哪些属性必定存在\",{\"1\":{\"322\":1,\"644\":1}}],[\"如果不是匹配到了结束标签\",{\"1\":{\"1550\":1}}],[\"如果不是初始渲染而是视图更新的时候\",{\"1\":{\"1528\":1}}],[\"如果不是数值\",{\"1\":{\"618\":1,\"619\":1}}],[\"如果不是就返回\",{\"1\":{\"592\":1}}],[\"如果不是核心模块\",{\"1\":{\"454\":1}}],[\"如果不使用finally方法\",{\"1\":{\"575\":1}}],[\"如果不使用construct\",{\"1\":{\"495\":1}}],[\"如果不设置回调函数\",{\"1\":{\"565\":1}}],[\"如果不带路径而只是模块名\",{\"1\":{\"470\":1}}],[\"如果不带路径只是模块名\",{\"1\":{\"275\":1}}],[\"如果不提供结束索引\",{\"1\":{\"287\":1,\"684\":1}}],[\"如果不确定返回值\",{\"1\":{\"286\":1,\"678\":1}}],[\"如果提供了初始值\",{\"1\":{\"877\":1}}],[\"如果提供\",{\"1\":{\"284\":1,\"705\":1}}],[\"如果是在稳定的机房内部通信那么这个概率是⽐较⼩可以选择忽略的\",{\"1\":{\"1730\":1}}],[\"如果是每次发送的数据量⽐较⼩\",{\"1\":{\"1730\":1}}],[\"如果是传输⽂件的话\",{\"1\":{\"1730\":1}}],[\"如果是用两次握手\",{\"1\":{\"1727\":1}}],[\"如果是文本节点\",{\"1\":{\"1551\":1}}],[\"如果是元素类型\",{\"1\":{\"1551\":1}}],[\"如果是immediate应该立刻执行\",{\"1\":{\"1492\":1}}],[\"如果是infinity被infinity除\",{\"1\":{\"620\":1}}],[\"如果是infinity被任何非零数值除\",{\"1\":{\"619\":1}}],[\"如果是infinity减\",{\"1\":{\"617\":1}}],[\"如果是infinity减infinity\",{\"1\":{\"617\":1}}],[\"如果是infinity加\",{\"1\":{\"616\":1}}],[\"如果是infinity加infinity\",{\"1\":{\"616\":1}}],[\"如果是手动写的声明文件\",{\"1\":{\"1357\":1}}],[\"如果是执行\",{\"1\":{\"1062\":1}}],[\"如果是其其他数字比如12345\",{\"1\":{\"940\":1}}],[\"如果是99999则永远不用改\",{\"1\":{\"940\":1}}],[\"如果是0\",{\"1\":{\"940\":2}}],[\"如果是开销很大的计算操作的话就比较消耗性能了\",{\"1\":{\"902\":1}}],[\"如果是空数字\",{\"1\":{\"784\":1}}],[\"如果是引用数据类型\",{\"1\":{\"753\":1}}],[\"如果是引用类型\",{\"1\":{\"359\":1}}],[\"如果是纯数字的字符串\",{\"1\":{\"663\":1}}],[\"如果是数组就遍历进行创建\",{\"1\":{\"1491\":1}}],[\"如果是数组\",{\"1\":{\"662\":1}}],[\"如果是map\",{\"1\":{\"636\":1}}],[\"如果是非零的有限数被零除\",{\"1\":{\"619\":1}}],[\"如果是+0减+0\",{\"1\":{\"617\":1}}],[\"如果是+0加\",{\"1\":{\"616\":1}}],[\"如果是+0加+0\",{\"1\":{\"616\":1}}],[\"如果是等待状态\",{\"1\":{\"580\":1}}],[\"如果是\",{\"1\":{\"551\":1,\"580\":1,\"592\":1,\"616\":2,\"617\":4,\"829\":1,\"1372\":1}}],[\"如果是负数\",{\"1\":{\"529\":1,\"702\":1}}],[\"如果是负值\",{\"1\":{\"287\":1,\"684\":1}}],[\"如果是直接赋值对象的属性\",{\"1\":{\"484\":1}}],[\"如果是直接加载\",{\"1\":{\"454\":1}}],[\"如果是对象\",{\"1\":{\"458\":1}}],[\"如果是函数\",{\"1\":{\"458\":1}}],[\"如果是导出多个函数\",{\"1\":{\"452\":1}}],[\"如果是值类型\",{\"1\":{\"359\":1}}],[\"如果是以指定的子字符串开头返回\",{\"1\":{\"280\":1,\"523\":1}}],[\"如果是自动链接的话\",{\"1\":{\"127\":2}}],[\"如果需要新增一个处理步骤\",{\"1\":{\"1837\":1}}],[\"如果需要关闭mysql服务\",{\"1\":{\"1472\":1}}],[\"如果需要客户端\",{\"1\":{\"1153\":1}}],[\"如果需要给已有变量赋值\",{\"1\":{\"838\":1}}],[\"如果需要访问全局\",{\"1\":{\"467\":1}}],[\"如果需要\",{\"1\":{\"272\":1,\"362\":1,\"2333\":1,\"2334\":2,\"2341\":2,\"2342\":2}}],[\"如果直接赋值就会覆盖之前的值\",{\"1\":{\"270\":1}}],[\"如果在运行是需要从内存中删除\",{\"1\":{\"2307\":1}}],[\"如果在定时器的时间内收到某一个报文段的确认回答\",{\"1\":{\"1724\":1}}],[\"如果在你的\",{\"1\":{\"1354\":1}}],[\"如果在第三个参数里进行初始化\",{\"1\":{\"1274\":1}}],[\"如果在我们在\",{\"1\":{\"1019\":1}}],[\"如果在声明变量后访问\",{\"1\":{\"898\":1}}],[\"如果在声明变量前访问该变量\",{\"1\":{\"898\":1}}],[\"如果在的话就不执行拷贝逻辑了\",{\"1\":{\"767\":1}}],[\"如果在函数内部直接执行调用\",{\"1\":{\"723\":1}}],[\"如果在函数返回的时候\",{\"1\":{\"370\":1}}],[\"如果在⼀个\",{\"1\":{\"596\":1}}],[\"如果在解析过程中遇到了正负号\",{\"1\":{\"551\":1}}],[\"如果在词法环境中的某个块中查找到了\",{\"1\":{\"510\":1}}],[\"如果在一个事件函数中\",{\"1\":{\"1197\":1}}],[\"如果在一个文件中编写所有功能\",{\"1\":{\"442\":1}}],[\"如果在一个函数返回的时候\",{\"1\":{\"370\":1}}],[\"如果在这一步过程中产生新的微任务\",{\"1\":{\"376\":1}}],[\"如果在\",{\"1\":{\"370\":1,\"452\":1,\"482\":1,\"1203\":1}}],[\"如果在全屏模式下点击\",{\"1\":{\"339\":1}}],[\"如果在多行字符串中有空格和缩进\",{\"1\":{\"255\":1}}],[\"如果在字符串中使用反引号\",{\"1\":{\"255\":1}}],[\"如果一直没有数据\",{\"1\":{\"1737\":1}}],[\"如果一切逻辑正确\",{\"1\":{\"1416\":1}}],[\"如果一定要用\",{\"1\":{\"1309\":1}}],[\"如果一个进程在等待一件不可能发生的事\",{\"1\":{\"2156\":1}}],[\"如果一个函数并不被用作其他\",{\"1\":{\"1212\":1}}],[\"如果一个是对象\",{\"1\":{\"777\":1}}],[\"如果一个是数字\",{\"1\":{\"777\":1}}],[\"如果一个是\",{\"1\":{\"777\":1}}],[\"如果一个是字符串\",{\"1\":{\"775\":1}}],[\"如果一个操作数是一个对象而另一个是一个原始值\",{\"1\":{\"807\":1}}],[\"如果一个操作数是布尔值\",{\"1\":{\"628\":1}}],[\"如果一个操作数是对象\",{\"1\":{\"628\":1}}],[\"如果一个操作数是数值\",{\"1\":{\"628\":1}}],[\"如果一个异步函数抛出异常\",{\"1\":{\"562\":1}}],[\"如果一个元素要浮动\",{\"1\":{\"181\":1}}],[\"如果一种语言支持块级作用域\",{\"1\":{\"501\":1}}],[\"如果一开始给每个子元素绑定事件\",{\"1\":{\"236\":1}}],[\"如果有第4类就是公务员\",{\"1\":{\"1869\":1}}],[\"如果有更新\",{\"1\":{\"1737\":1}}],[\"如果有更重要的更新要处理\",{\"1\":{\"1308\":1}}],[\"如果有许多对象\",{\"1\":{\"1641\":1}}],[\"如果有任何本地修改\",{\"1\":{\"1615\":1}}],[\"如果有watcher\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"如果有新增的元素\",{\"1\":{\"1535\":1}}],[\"如果有子节点就递归插入到父节点里面\",{\"1\":{\"1528\":1}}],[\"如果有el属性\",{\"1\":{\"1486\":1,\"1525\":1,\"1548\":1}}],[\"如果有对应的策略就调用对应的策略即可\",{\"1\":{\"1485\":1}}],[\"如果有值并且可以被解析为数字\",{\"1\":{\"1274\":1}}],[\"如果有指定\",{\"1\":{\"1273\":1,\"2836\":1}}],[\"如果有缓存\",{\"1\":{\"902\":1}}],[\"如果有的话\",{\"1\":{\"1810\":1}}],[\"如果有的属性的值为引用类型的话\",{\"1\":{\"768\":1}}],[\"如果有的就会回到\",{\"1\":{\"379\":1}}],[\"如果有操作数不是布尔值\",{\"1\":{\"624\":1,\"625\":1}}],[\"如果有一个新的文件修改\",{\"1\":{\"1600\":1}}],[\"如果有一个操作数是非数值\",{\"1\":{\"617\":1}}],[\"如果有一个操作数是nan\",{\"1\":{\"616\":1,\"618\":1,\"619\":1}}],[\"如果有一个状态变成了rejected\",{\"1\":{\"573\":1}}],[\"如果有则直接使用\",{\"1\":{\"482\":1}}],[\"如果有\",{\"1\":{\"379\":1,\"895\":1,\"2476\":1}}],[\"如果有代码需要进去执行的话\",{\"1\":{\"374\":1}}],[\"如果有多条\",{\"1\":{\"260\":1}}],[\"如果有多个参数\",{\"1\":{\"260\":1}}],[\"如果有内容出了盒子\",{\"1\":{\"184\":1}}],[\"如果有自动连接的设备\",{\"1\":{\"128\":2}}],[\"如果框\",{\"1\":{\"178\":1}}],[\"如果连过这个设备就跳过搜索的步骤\",{\"1\":{\"128\":1}}],[\"如果\",{\"1\":{\"125\":1,\"272\":1,\"282\":1,\"379\":2,\"434\":1,\"453\":1,\"530\":1,\"535\":1,\"657\":1,\"681\":2,\"1200\":1,\"1225\":1,\"1235\":1,\"1273\":1,\"1378\":1,\"1597\":1,\"1653\":1,\"2255\":1,\"2583\":1,\"2584\":1,\"2795\":1}}],[\"如果你已经禁用了阴影贴图的自动更新\",{\"1\":{\"2805\":1}}],[\"如果你不希望\",{\"1\":{\"2743\":1}}],[\"如果你不关心可能的微小布局跳动或闪烁\",{\"1\":{\"1258\":1}}],[\"如果你要\",{\"1\":{\"2741\":1}}],[\"如果你正在将旧的类组件迁移到功能组件\",{\"1\":{\"1259\":1}}],[\"如果你正在传递的函数会被用作其他\",{\"1\":{\"1212\":1}}],[\"如果你在渲染某个组件时有昂贵的计算\",{\"1\":{\"1267\":1}}],[\"如果你在\",{\"1\":{\"1246\":1,\"1400\":1}}],[\"如果你想在自己的\",{\"1\":{\"2743\":1}}],[\"如果你想在状态中存储一个函数\",{\"1\":{\"1303\":1}}],[\"如果你想为对象和纹理显示单独的加载条\",{\"1\":{\"2461\":1}}],[\"如果你想根据某个\",{\"1\":{\"1309\":1}}],[\"如果你想对照不用\",{\"1\":{\"1235\":1}}],[\"如果你想提供过渡反馈\",{\"1\":{\"1233\":1}}],[\"如果你想要重复删除\",{\"1\":{\"1063\":1}}],[\"如果你的属性是一个\",{\"1\":{\"2744\":1}}],[\"如果你的组件与外部系统交互\",{\"1\":{\"1303\":1}}],[\"如果你的初始化逻辑简单并且没有性能顾虑\",{\"1\":{\"1274\":1}}],[\"如果你的电脑性能比较好\",{\"1\":{\"1255\":1}}],[\"如果你的\",{\"1\":{\"425\":1,\"1227\":1}}],[\"如果你的项目中硬件佬有提供\",{\"1\":{\"118\":1}}],[\"如果你用的是windows\",{\"1\":{\"104\":1}}],[\"如github\",{\"1\":{\"20\":1,\"63\":1}}],[\"默认false\",{\"1\":{\"2788\":1}}],[\"默认的加载管理器已足够使用了\",{\"1\":{\"2461\":1}}],[\"默认的首页文件\",{\"1\":{\"1150\":1}}],[\"默认不信任网络内部和外部的任何人\",{\"1\":{\"2053\":1}}],[\"默认不填\",{\"1\":{\"739\":1}}],[\"默认端口也是80和443\",{\"1\":{\"1736\":1}}],[\"默认返回watcher上\",{\"1\":{\"1570\":1}}],[\"默认dep\",{\"1\":{\"1559\":1,\"1562\":1}}],[\"默认会创建一个新的\",{\"1\":{\"2855\":1}}],[\"默认会调用get方法\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"默认会先调用一次get方法\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"默认初始化时\",{\"1\":{\"1476\":1}}],[\"默认省略public修饰符\",{\"1\":{\"1389\":1}}],[\"默认服务器块的加载配置文件\",{\"1\":{\"1153\":1}}],[\"默认\",{\"1\":{\"1153\":2,\"2711\":1,\"2805\":1}}],[\"默认文件类型\",{\"1\":{\"1153\":1}}],[\"默认文件\",{\"0\":{\"1152\":1}}],[\"默认保存\",{\"1\":{\"1083\":1}}],[\"默认权限需要换算成字母再相减\",{\"1\":{\"1044\":1}}],[\"默认权限就是文件一创建后就拥有的权限\",{\"1\":{\"1044\":1}}],[\"默认权限\",{\"0\":{\"1042\":1}}],[\"默认显示最后\",{\"1\":{\"993\":1}}],[\"默认采用的就是事件监听的方式来实现\",{\"1\":{\"565\":1}}],[\"默认导入和命名导入是可以同时使用的\",{\"1\":{\"470\":1}}],[\"默认导出可以省略变量\",{\"1\":{\"469\":1}}],[\"默认导出\",{\"1\":{\"469\":1,\"1167\":1,\"1168\":1}}],[\"默认直到本段内存区域结束\",{\"1\":{\"403\":1}}],[\"默认从\",{\"1\":{\"403\":1}}],[\"默认绑定\",{\"0\":{\"353\":1},\"1\":{\"352\":1,\"360\":1}}],[\"默认只会打平一级嵌套\",{\"1\":{\"311\":1,\"720\":1}}],[\"默认使用空格补全长度\",{\"1\":{\"293\":1,\"547\":1}}],[\"默认为three\",{\"1\":{\"2675\":1,\"2799\":1}}],[\"默认为true\",{\"1\":{\"2653\":1,\"2682\":1,\"2707\":1,\"2780\":1,\"2788\":2}}],[\"默认为keepstencilop\",{\"1\":{\"2661\":1,\"2662\":1,\"2663\":1}}],[\"默认为0\",{\"1\":{\"2659\":1}}],[\"默认为0xff\",{\"1\":{\"2657\":1,\"2660\":1}}],[\"默认为alwaysstencilfunc\",{\"1\":{\"2658\":1}}],[\"默认为lessequaldepth\",{\"1\":{\"2651\":1}}],[\"默认为null\",{\"1\":{\"2606\":1,\"2708\":1,\"2709\":1}}],[\"默认为false\",{\"1\":{\"2291\":1,\"2654\":1,\"2656\":1,\"2762\":1,\"2788\":3,\"2801\":1}}],[\"默认为\",{\"1\":{\"279\":1,\"287\":1,\"289\":1,\"363\":1,\"522\":1,\"684\":1,\"685\":1,\"986\":1,\"2638\":1,\"2652\":1,\"2676\":1,\"2788\":1}}],[\"默认事件行为将不再触发\",{\"1\":{\"239\":1}}],[\"默认是1\",{\"1\":{\"2809\":1}}],[\"默认是notonemapping\",{\"1\":{\"2808\":1}}],[\"默认是true\",{\"1\":{\"2788\":1,\"2791\":1,\"2792\":1,\"2793\":1,\"2794\":1,\"2805\":1,\"2806\":1}}],[\"默认是false\",{\"1\":{\"2757\":1,\"2802\":1,\"2805\":1}}],[\"默认是空的\",{\"1\":{\"913\":1}}],[\"默认是\",{\"1\":{\"232\":1,\"1607\":1,\"2335\":1,\"2336\":1,\"2788\":1,\"2805\":1}}],[\"默认是不会被缩放的\",{\"1\":{\"200\":1}}],[\"默认情况下为\",{\"1\":{\"2697\":1,\"2743\":1}}],[\"默认情况下调用一个函数\",{\"1\":{\"350\":1}}],[\"默认情况下\",{\"1\":{\"206\":1,\"472\":1,\"698\":1,\"1400\":1,\"1407\":1,\"1586\":1,\"1659\":1,\"1730\":1,\"2469\":1,\"2470\":1,\"2471\":1,\"2586\":1,\"2800\":1}}],[\"默认值未定义\",{\"1\":{\"2755\":1}}],[\"默认值是null\",{\"1\":{\"2788\":1}}],[\"默认值是vector2设置为\",{\"1\":{\"2712\":1}}],[\"默认值是50\",{\"1\":{\"2575\":1}}],[\"默认值是2000\",{\"1\":{\"2571\":1}}],[\"默认值是0\",{\"1\":{\"2554\":1,\"2577\":1}}],[\"默认值是10\",{\"1\":{\"2574\":1}}],[\"默认值是1\",{\"1\":{\"2553\":1,\"2570\":1}}],[\"默认值是空字符串\",{\"1\":{\"2292\":1}}],[\"默认值是\",{\"1\":{\"2283\":1,\"2284\":1,\"2288\":1,\"2796\":1}}],[\"默认值为白色\",{\"1\":{\"2702\":1}}],[\"默认值为false\",{\"1\":{\"2668\":1,\"2672\":1,\"2677\":1,\"2681\":1,\"2706\":1,\"2748\":1,\"2752\":1,\"2759\":1,\"2764\":1}}],[\"默认值为空字符串\",{\"1\":{\"2665\":1}}],[\"默认值为undefined\",{\"1\":{\"2650\":1}}],[\"默认值为true\",{\"1\":{\"2649\":1}}],[\"默认值为srcalphafactor\",{\"1\":{\"2644\":1}}],[\"默认值为normalblending\",{\"1\":{\"2643\":1}}],[\"默认值为null\",{\"1\":{\"2601\":1,\"2671\":1,\"2699\":1}}],[\"默认值为addequation\",{\"1\":{\"2641\":1}}],[\"默认值为oneminussrcalphafactor\",{\"1\":{\"2639\":1}}],[\"默认值为1\",{\"1\":{\"2603\":1,\"2667\":1,\"2701\":1,\"2704\":1,\"2758\":1,\"2765\":1}}],[\"默认值为12\",{\"1\":{\"2425\":1}}],[\"默认值为0\",{\"1\":{\"2573\":1,\"2604\":1,\"2637\":1,\"2669\":1,\"2670\":1,\"2705\":1}}],[\"默认值为40\",{\"1\":{\"2426\":1}}],[\"默认值为200\",{\"1\":{\"2331\":1}}],[\"默认值为\",{\"1\":{\"388\":2,\"389\":2,\"2285\":1,\"2640\":1,\"2642\":1,\"2645\":1,\"2646\":1,\"2647\":1,\"2648\":1,\"2673\":1,\"2674\":1,\"2757\":1,\"2781\":1}}],[\"默认值为原始字符串长度\",{\"1\":{\"281\":1,\"524\":1}}],[\"默认值\",{\"1\":{\"20\":1,\"63\":1,\"202\":1,\"625\":1,\"2856\":1}}],[\"默认none\",{\"1\":{\"20\":1,\"63\":1}}],[\"x和0\",{\"1\":{\"2210\":1}}],[\"x3\",{\"1\":{\"1442\":1}}],[\"x2\",{\"1\":{\"1442\":1}}],[\"x1\",{\"1\":{\"1442\":2}}],[\"xiaoming\",{\"1\":{\"1372\":6}}],[\"xl\",{\"1\":{\"1256\":1}}],[\"x命令\",{\"1\":{\"1111\":1}}],[\"x为向前删除一个字符\",{\"1\":{\"1063\":1}}],[\"x为向后删除一个字符\",{\"1\":{\"1063\":1}}],[\"x表示只有当该文件是个子目录或者该文件已经被设定过为可执行\",{\"1\":{\"1038\":1}}],[\"x表示可执行\",{\"1\":{\"1038\":1}}],[\"x代表可执行\",{\"1\":{\"1029\":1}}],[\"xrw\",{\"1\":{\"1033\":2}}],[\"xr\",{\"0\":{\"2810\":1},\"1\":{\"1029\":4}}],[\"xvf\",{\"1\":{\"1025\":1}}],[\"x<范本样式>\",{\"1\":{\"1018\":1}}],[\"x<文件>或\",{\"1\":{\"1009\":1}}],[\"x<文件名或目录>或\",{\"1\":{\"1009\":1}}],[\"xss\",{\"1\":{\"859\":1,\"1661\":1}}],[\"x0=x\",{\"1\":{\"610\":1}}],[\"xhr\",{\"1\":{\"559\":5,\"813\":1,\"815\":3,\"816\":4,\"817\":7,\"819\":7,\"860\":10}}],[\"xmlhttp\",{\"1\":{\"815\":1}}],[\"xmlhttprequest\",{\"0\":{\"815\":1},\"1\":{\"559\":2,\"813\":1,\"815\":2,\"817\":2,\"819\":1,\"860\":1,\"864\":1,\"866\":1}}],[\"xml\",{\"1\":{\"388\":2,\"817\":1}}],[\"xaba\",{\"1\":{\"294\":1,\"548\":1}}],[\"xabab\",{\"1\":{\"294\":1,\"548\":1}}],[\"xx=0\",{\"1\":{\"610\":1}}],[\"xx\",{\"1\":{\"270\":1,\"940\":1,\"1514\":5,\"1521\":3}}],[\"xxx要求是可以实现\",{\"1\":{\"2010\":1}}],[\"xxxxx\",{\"1\":{\"108\":1}}],[\"xxxxxxxx\",{\"1\":{\"11\":1,\"54\":1}}],[\"xxxx\",{\"1\":{\"108\":3}}],[\"xxx\",{\"1\":{\"108\":2,\"282\":1,\"545\":1,\"569\":1,\"1153\":2,\"1533\":2,\"1653\":3}}],[\"x=\",{\"1\":{\"1315\":2}}],[\"x=300\",{\"1\":{\"94\":2}}],[\"x=350\",{\"1\":{\"94\":2}}],[\"x=0\",{\"1\":{\"94\":4}}],[\"x\",{\"0\":{\"2317\":1,\"2323\":1,\"2542\":1,\"2587\":1,\"2835\":1,\"2843\":1,\"2846\":1},\"1\":{\"20\":1,\"21\":1,\"63\":1,\"64\":1,\"127\":3,\"252\":6,\"254\":3,\"256\":2,\"257\":3,\"258\":5,\"259\":2,\"260\":16,\"271\":4,\"277\":2,\"282\":1,\"293\":5,\"294\":2,\"312\":8,\"322\":2,\"430\":2,\"432\":1,\"545\":1,\"547\":5,\"548\":2,\"569\":4,\"595\":2,\"640\":3,\"644\":2,\"766\":2,\"767\":2,\"772\":1,\"775\":1,\"805\":1,\"816\":1,\"838\":11,\"840\":2,\"841\":2,\"843\":10,\"847\":3,\"937\":3,\"939\":2,\"989\":1,\"1009\":2,\"1018\":2,\"1025\":2,\"1029\":2,\"1039\":2,\"1040\":3,\"1056\":1,\"1063\":2,\"1096\":1,\"1109\":1,\"1152\":1,\"1153\":4,\"1315\":4,\"1340\":1,\"1342\":4,\"1343\":1,\"1344\":2,\"1346\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1362\":3,\"1365\":3,\"1366\":1,\"1376\":1,\"1401\":1,\"1410\":4,\"1420\":2,\"1421\":3,\"1438\":6,\"1448\":8,\"1602\":2,\"2210\":1,\"2314\":1,\"2403\":20,\"2542\":1,\"2587\":1,\"2843\":2,\"2846\":2}}],[\"<end>\",{\"1\":{\"1637\":1}}],[\"<expensivecomponent\",{\"1\":{\"1267\":1}}],[\"<分支名2>\",{\"1\":{\"1636\":2}}],[\"<分支名1>\",{\"1\":{\"1636\":2}}],[\"<本地分支名>\",{\"1\":{\"1609\":1,\"1610\":3}}],[\"<远程分支名>\",{\"1\":{\"1609\":2,\"1610\":1}}],[\"<oldname>\",{\"1\":{\"1597\":2}}],[\"<option\",{\"1\":{\"83\":3}}],[\"<>\",{\"1\":{\"1235\":1,\"1267\":2,\"1273\":1,\"1274\":2,\"1281\":1,\"1287\":1,\"1299\":1,\"1300\":1,\"1315\":1,\"1550\":1}}],[\"<loadingindicator\",{\"1\":{\"1312\":2}}],[\"<loginbutton\",{\"1\":{\"1222\":1}}],[\"<link\",{\"1\":{\"859\":1}}],[\"<link>\",{\"1\":{\"413\":1}}],[\"<li>post\",{\"1\":{\"1311\":1}}],[\"<li>item\",{\"1\":{\"236\":4}}],[\"<li>nav2\",{\"1\":{\"215\":1}}],[\"<li>nav1\",{\"1\":{\"215\":1}}],[\"<li\",{\"1\":{\"83\":1,\"1168\":1,\"1212\":1,\"1235\":1}}],[\"<customlink\",{\"1\":{\"1312\":2}}],[\"<currentusercontext\",{\"1\":{\"1222\":1,\"1227\":1}}],[\"<commit\",{\"1\":{\"1602\":2,\"1614\":1,\"1618\":1}}],[\"<commentform\",{\"1\":{\"1211\":1}}],[\"<commentlist\",{\"1\":{\"1211\":1}}],[\"<contacttab\",{\"1\":{\"1311\":1}}],[\"<configprovider\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"<votefooter\",{\"1\":{\"1320\":1,\"1323\":1,\"1324\":1}}],[\"<votefooter><\",{\"1\":{\"1161\":1,\"1176\":1,\"1185\":1,\"1321\":1}}],[\"<votemain\",{\"1\":{\"1320\":1,\"1323\":1,\"1324\":1}}],[\"<votemain><\",{\"1\":{\"1161\":1,\"1176\":1,\"1185\":1,\"1321\":1}}],[\"<vote><\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"<video\",{\"1\":{\"339\":1}}],[\"<view\",{\"1\":{\"118\":1,\"119\":1,\"127\":4}}],[\"<view>\",{\"1\":{\"117\":1,\"118\":3,\"119\":3,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":3}}],[\"<poststab\",{\"1\":{\"1311\":1}}],[\"<path>\",{\"1\":{\"1627\":1}}],[\"<patch>\",{\"1\":{\"1618\":1}}],[\"<page\",{\"1\":{\"1229\":1}}],[\"<package\",{\"1\":{\"1073\":3}}],[\"<p>this\",{\"1\":{\"1705\":1}}],[\"<p>支持比率\",{\"1\":{\"1320\":1,\"1321\":1,\"1323\":1}}],[\"<p>支持人数\",{\"1\":{\"1163\":1,\"1178\":1,\"1187\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":2}}],[\"<p>count\",{\"1\":{\"1251\":1}}],[\"<p>右按钮点击了\",{\"1\":{\"1244\":1}}],[\"<p>左按钮点击了\",{\"1\":{\"1244\":1}}],[\"<p>点击了\",{\"1\":{\"1243\":1}}],[\"<p>you\",{\"1\":{\"1222\":1}}],[\"<p>\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"<p>反对人数\",{\"1\":{\"1163\":1,\"1178\":1,\"1187\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":2}}],[\"<provider\",{\"1\":{\"1157\":1,\"1167\":1}}],[\"<keyword>\",{\"1\":{\"1073\":1}}],[\"<范本样式>\",{\"1\":{\"1018\":2}}],[\"<压缩效率>\",{\"1\":{\"1018\":2,\"1021\":1}}],[\"<日期时间>\",{\"1\":{\"1018\":1}}],[\"<字尾字符串>\",{\"1\":{\"1018\":1}}],[\"<字符或字符串>\",{\"1\":{\"1009\":1}}],[\"<工作目录>\",{\"1\":{\"1018\":1}}],[\"<魔法数字文件>\",{\"1\":{\"1012\":1}}],[\"<名称文件>\",{\"1\":{\"1012\":1}}],[\"<宽度>\",{\"1\":{\"1009\":1}}],[\"<文件或目录>\",{\"1\":{\"1009\":1}}],[\"<文件>\",{\"1\":{\"1009\":2}}],[\"<文件名>\",{\"1\":{\"989\":1}}],[\"<巨集名称>\",{\"1\":{\"1009\":1}}],[\"<行数>\",{\"1\":{\"1009\":4}}],[\"<数字>\",{\"1\":{\"989\":1}}],[\"<缓冲区大小>\",{\"1\":{\"989\":1}}],[\"<缓冲天数>\",{\"1\":{\"944\":2,\"950\":1}}],[\"<新群组名称>\",{\"1\":{\"959\":2}}],[\"<群组识别码>\",{\"1\":{\"959\":2}}],[\"<群组>\",{\"1\":{\"944\":4,\"950\":2}}],[\"<帐号名称>\",{\"1\":{\"950\":1}}],[\"<userlist\",{\"1\":{\"1267\":2}}],[\"<uid>\",{\"1\":{\"944\":1,\"950\":1}}],[\"<ul>\",{\"1\":{\"215\":1,\"1168\":1,\"1212\":1,\"1311\":1}}],[\"<ul\",{\"1\":{\"83\":1,\"236\":1,\"1235\":1}}],[\"<有效期限>\",{\"1\":{\"944\":2,\"950\":1}}],[\"<登入目录>\",{\"1\":{\"944\":1,\"950\":1}}],[\"<备注>\",{\"1\":{\"944\":1,\"950\":1}}],[\"<=\",{\"0\":{\"778\":1},\"1\":{\"628\":1,\"774\":1,\"807\":1,\"903\":4,\"1265\":1,\"1478\":6}}],[\"<<=\",{\"1\":{\"638\":1}}],[\"<<\",{\"0\":{\"611\":1},\"1\":{\"606\":1,\"611\":2,\"774\":1}}],[\"<remote\",{\"1\":{\"1607\":2}}],[\"<react\",{\"1\":{\"470\":1,\"1167\":1,\"1312\":1}}],[\"<route\",{\"1\":{\"1312\":2}}],[\"<router\",{\"1\":{\"82\":1}}],[\"<iframe\",{\"1\":{\"861\":1,\"862\":1,\"863\":1,\"867\":1}}],[\"<iframe><\",{\"1\":{\"388\":1}}],[\"<i>iframe<\",{\"1\":{\"343\":1}}],[\"<i>window<\",{\"1\":{\"343\":1}}],[\"<i>tab<\",{\"1\":{\"343\":1}}],[\"<input>元素上选择文件后返回的\",{\"1\":{\"390\":1}}],[\"<input\",{\"1\":{\"239\":1,\"338\":2,\"340\":1,\"342\":1,\"343\":1,\"391\":1,\"395\":2,\"413\":1,\"414\":1,\"1167\":1,\"1168\":1,\"1212\":1,\"1235\":1,\"1265\":1,\"1281\":2,\"1839\":1}}],[\"<img\",{\"1\":{\"89\":1,\"395\":1,\"413\":1,\"414\":1,\"859\":1,\"1167\":1,\"1168\":1}}],[\"<minor>\",{\"1\":{\"1618\":1}}],[\"<message>\",{\"1\":{\"1591\":1,\"1600\":1,\"1618\":1}}],[\"<meta\",{\"1\":{\"202\":1,\"1839\":2}}],[\"<myinput\",{\"1\":{\"1281\":1}}],[\"<mycontext\",{\"1\":{\"1218\":1}}],[\"<mark>\",{\"1\":{\"215\":1}}],[\"<main>\",{\"1\":{\"215\":1}}],[\"<filename>\",{\"1\":{\"1599\":1,\"1613\":3,\"1614\":2}}],[\"<figure>\",{\"1\":{\"215\":1}}],[\"<figcaption>\",{\"1\":{\"215\":1}}],[\"<footer\",{\"1\":{\"1223\":1}}],[\"<footer>\",{\"1\":{\"215\":2}}],[\"<demotwo>\",{\"1\":{\"1315\":1}}],[\"<demoone\",{\"1\":{\"1315\":3}}],[\"<details>\",{\"1\":{\"215\":2}}],[\"<div\",{\"1\":{\"172\":1,\"234\":2,\"241\":4,\"338\":5,\"339\":4,\"340\":8,\"341\":5,\"342\":5,\"343\":10,\"392\":1,\"1161\":2,\"1162\":1,\"1163\":1,\"1167\":1,\"1168\":1,\"1176\":2,\"1177\":1,\"1178\":1,\"1185\":2,\"1186\":1,\"1187\":1,\"1244\":1,\"1255\":5,\"1256\":3,\"1265\":2,\"1267\":4,\"1289\":1,\"1315\":2,\"1320\":4,\"1321\":4,\"1323\":4,\"1324\":5}}],[\"<div><span><\",{\"1\":{\"1550\":1}}],[\"<div>2<\",{\"1\":{\"1476\":1}}],[\"<div>1<\",{\"1\":{\"1476\":1}}],[\"<div>check\",{\"1\":{\"1282\":1,\"1290\":1}}],[\"<div>device\",{\"1\":{\"341\":3}}],[\"<div>\",{\"1\":{\"83\":1,\"178\":1,\"338\":3,\"340\":4,\"341\":2,\"342\":2,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1210\":2,\"1211\":1,\"1212\":1,\"1219\":1,\"1220\":1,\"1222\":1,\"1243\":1,\"1244\":2,\"1251\":1,\"1255\":2,\"1265\":3,\"1267\":3,\"1269\":2,\"1281\":1,\"1283\":1,\"1285\":1,\"1311\":2,\"1312\":1,\"1705\":1}}],[\"<n>\",{\"1\":{\"1601\":1}}],[\"<newname>\",{\"1\":{\"1597\":2}}],[\"<name>\",{\"1\":{\"1595\":1}}],[\"<nav>\",{\"1\":{\"215\":2,\"1312\":1}}],[\"<none|es5|all>\",{\"1\":{\"20\":1,\"63\":1}}],[\"<branch>\",{\"1\":{\"1594\":3,\"1595\":2,\"1596\":1,\"1623\":1}}],[\"<browserrouter>\",{\"1\":{\"1312\":1}}],[\"<br\",{\"1\":{\"1283\":1,\"1285\":1,\"1315\":2}}],[\"<body>\",{\"1\":{\"178\":1,\"215\":1,\"240\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"436\":1,\"867\":1,\"1705\":1,\"1839\":1}}],[\"<buttonwithtooltip\",{\"1\":{\"1256\":3}}],[\"<button>\",{\"1\":{\"1220\":1}}],[\"<button>+1<\",{\"1\":{\"1196\":1}}],[\"<button\",{\"1\":{\"83\":4,\"117\":1,\"118\":2,\"119\":2,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":7,\"240\":1,\"338\":4,\"339\":1,\"340\":2,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"436\":2,\"1162\":2,\"1167\":2,\"1168\":3,\"1177\":2,\"1186\":2,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":2,\"1210\":1,\"1212\":1,\"1222\":2,\"1227\":1,\"1243\":1,\"1244\":2,\"1251\":1,\"1256\":1,\"1265\":1,\"1269\":1,\"1273\":3,\"1274\":4,\"1281\":2,\"1286\":2,\"1287\":1,\"1299\":1,\"1300\":1,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2,\"1839\":1}}],[\"<tagname>\",{\"1\":{\"1618\":2,\"1619\":1,\"1620\":1,\"1621\":3,\"1623\":1}}],[\"<tag\",{\"1\":{\"1617\":1,\"1618\":1}}],[\"<tabbutton\",{\"1\":{\"1311\":3}}],[\"<table>\",{\"1\":{\"172\":1}}],[\"<t>\",{\"1\":{\"1468\":1}}],[\"<tfunction\",{\"1\":{\"1466\":1}}],[\"<themebutton\",{\"1\":{\"1220\":1}}],[\"<themecontext\",{\"1\":{\"1175\":1,\"1182\":1,\"1220\":1,\"1222\":1,\"1223\":2,\"1227\":1,\"1321\":2,\"1324\":2}}],[\"<tooltip\",{\"1\":{\"1256\":1}}],[\"<toolbar\",{\"1\":{\"1220\":1,\"1222\":1,\"1227\":1}}],[\"<todoitem\",{\"1\":{\"1210\":1}}],[\"<title>document<\",{\"1\":{\"1839\":1}}],[\"<title>web\",{\"1\":{\"1705\":1}}],[\"<title>memory\",{\"1\":{\"436\":1}}],[\"<time>\",{\"1\":{\"215\":1}}],[\"<time\",{\"1\":{\"215\":1}}],[\"<td\",{\"1\":{\"172\":1}}],[\"<tr>\",{\"1\":{\"172\":1}}],[\"<tbody>\",{\"1\":{\"172\":1}}],[\"<textarea\",{\"1\":{\"340\":1}}],[\"<text>name\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"<text>id\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"<template>\",{\"1\":{\"83\":1,\"117\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1}}],[\"<start>\",{\"1\":{\"1637\":1}}],[\"<stash\",{\"1\":{\"1601\":1}}],[\"<string>somevalue\",{\"1\":{\"1445\":1}}],[\"<style>\",{\"1\":{\"118\":1,\"119\":1,\"127\":1,\"178\":1}}],[\"<switch\",{\"1\":{\"1312\":1}}],[\"<slowpost\",{\"1\":{\"1311\":1}}],[\"<slowlist\",{\"1\":{\"1235\":2}}],[\"<svg\",{\"1\":{\"1288\":1}}],[\"<suspense>的\",{\"1\":{\"1236\":1}}],[\"<summary>\",{\"1\":{\"215\":1}}],[\"<shell>\",{\"1\":{\"944\":2,\"950\":1}}],[\"<span\",{\"1\":{\"341\":3,\"1161\":1,\"1176\":1,\"1185\":1,\"1315\":2,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"<span>12312312312312<\",{\"1\":{\"1315\":1}}],[\"<span>呵呵呵呵呵呵呵<\",{\"1\":{\"1315\":1}}],[\"<span>哈哈哈哈哈哈哈哈哈<\",{\"1\":{\"1315\":1}}],[\"<span>\",{\"1\":{\"345\":1}}],[\"<span>pan\",{\"1\":{\"338\":1}}],[\"<span>vol\",{\"1\":{\"338\":1}}],[\"<section>\",{\"1\":{\"215\":3}}],[\"<select\",{\"1\":{\"83\":1}}],[\"<scroll\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"<script\",{\"1\":{\"117\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1,\"206\":1,\"462\":1,\"467\":4,\"471\":1,\"473\":3,\"859\":1,\"1707\":4,\"1817\":1}}],[\"<script>\",{\"1\":{\"83\":1,\"239\":3,\"240\":1,\"241\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"413\":1,\"436\":1,\"462\":1,\"463\":1,\"467\":1,\"861\":2,\"862\":2,\"863\":3,\"867\":2,\"1839\":1}}],[\"<hr\",{\"1\":{\"1311\":1}}],[\"<hello\",{\"1\":{\"1200\":1}}],[\"<header\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"<header>\",{\"1\":{\"215\":2,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1}}],[\"<head>\",{\"1\":{\"436\":1,\"463\":1,\"1705\":1,\"1839\":1}}],[\"<html\",{\"1\":{\"436\":1,\"1839\":1}}],[\"<html>\",{\"1\":{\"215\":1,\"1705\":1}}],[\"<https\",{\"1\":{\"345\":1}}],[\"<h1>web\",{\"1\":{\"1705\":1}}],[\"<h1>your\",{\"1\":{\"1299\":1,\"1300\":1}}],[\"<h1>h1\",{\"1\":{\"215\":1}}],[\"<h1>当前求和为\",{\"1\":{\"83\":1}}],[\"<h2>with\",{\"1\":{\"1265\":1,\"1267\":2}}],[\"<h2>web\",{\"1\":{\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1}}],[\"<h2>使用\",{\"1\":{\"1255\":2}}],[\"<h2>\",{\"1\":{\"1196\":2,\"1197\":2,\"1200\":1,\"1204\":1,\"1315\":1}}],[\"<h2>当前求和放大十倍后为\",{\"1\":{\"83\":1}}],[\"<h2\",{\"1\":{\"83\":1,\"1161\":1,\"1176\":1,\"1185\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"<h3>我在\",{\"1\":{\"83\":1}}],[\"<\",{\"0\":{\"778\":1},\"1\":{\"83\":10,\"109\":1,\"117\":3,\"118\":10,\"119\":10,\"121\":4,\"122\":4,\"123\":5,\"125\":5,\"126\":4,\"127\":15,\"128\":1,\"172\":4,\"178\":4,\"206\":2,\"215\":8,\"226\":1,\"234\":1,\"236\":1,\"239\":4,\"240\":2,\"241\":4,\"248\":2,\"320\":1,\"338\":10,\"339\":7,\"340\":14,\"341\":9,\"342\":9,\"343\":13,\"345\":2,\"418\":2,\"431\":1,\"436\":6,\"437\":1,\"462\":1,\"467\":5,\"470\":1,\"471\":1,\"473\":1,\"506\":1,\"582\":1,\"583\":1,\"628\":1,\"645\":1,\"698\":1,\"727\":1,\"735\":1,\"743\":1,\"748\":1,\"767\":1,\"774\":1,\"805\":1,\"807\":1,\"822\":1,\"823\":1,\"860\":1,\"861\":2,\"862\":3,\"863\":3,\"867\":5,\"888\":1,\"889\":1,\"959\":1,\"1157\":2,\"1161\":3,\"1162\":3,\"1163\":1,\"1167\":7,\"1168\":8,\"1175\":2,\"1176\":3,\"1177\":3,\"1178\":1,\"1182\":2,\"1185\":3,\"1186\":3,\"1187\":1,\"1196\":3,\"1197\":4,\"1200\":2,\"1204\":3,\"1210\":2,\"1211\":1,\"1212\":3,\"1218\":1,\"1219\":1,\"1220\":2,\"1222\":6,\"1223\":2,\"1227\":3,\"1229\":1,\"1235\":5,\"1243\":1,\"1244\":3,\"1251\":2,\"1255\":7,\"1256\":9,\"1265\":6,\"1267\":9,\"1269\":2,\"1273\":2,\"1274\":2,\"1281\":2,\"1282\":1,\"1283\":1,\"1285\":1,\"1286\":2,\"1287\":1,\"1290\":1,\"1299\":3,\"1300\":3,\"1311\":9,\"1312\":5,\"1315\":7,\"1320\":8,\"1321\":10,\"1323\":8,\"1324\":10,\"1475\":1,\"1476\":1,\"1483\":1,\"1486\":1,\"1490\":1,\"1493\":1,\"1534\":1,\"1535\":1,\"1539\":1,\"1541\":1,\"1542\":1,\"1550\":2,\"1551\":2,\"1556\":1,\"1563\":1,\"1568\":1,\"1571\":1,\"1705\":5,\"1719\":1,\"1789\":1,\"1817\":1,\"1823\":1,\"1832\":1,\"1839\":6,\"2446\":1}}],[\"<abc\",{\"1\":{\"1550\":1}}],[\"<abouttab\",{\"1\":{\"1311\":1}}],[\"<app\",{\"1\":{\"1167\":1,\"1236\":2}}],[\"<anonymous>\",{\"1\":{\"578\":1}}],[\"<authcontext\",{\"1\":{\"1229\":1}}],[\"<auto|lf|crlf|cr>\",{\"1\":{\"20\":1,\"63\":1}}],[\"<audio\",{\"1\":{\"338\":1}}],[\"<a\",{\"1\":{\"239\":3}}],[\"<article>\",{\"1\":{\"215\":2}}],[\"<aside>\",{\"1\":{\"215\":1}}],[\"<as\",{\"1\":{\"20\":1,\"63\":1}}],[\"为单位的发光强度\",{\"1\":{\"2856\":1}}],[\"为单位的数据包\",{\"1\":{\"1692\":1}}],[\"为非金属材质提供了更多更灵活的光线反射\",{\"1\":{\"2737\":1}}],[\"为获得最佳效果\",{\"1\":{\"2717\":1,\"2737\":1}}],[\"为确保\",{\"1\":{\"2331\":1}}],[\"为当前几何体增加一个\",{\"1\":{\"2297\":1}}],[\"为当前几何体设置一个\",{\"1\":{\"2296\":1}}],[\"为保持对象在克隆时完整\",{\"1\":{\"2293\":1}}],[\"为保证数据传输的正确性\",{\"1\":{\"1717\":1}}],[\"为key设置不同的缓存失效时间\",{\"1\":{\"2071\":1}}],[\"为拆而拆\",{\"1\":{\"2055\":1}}],[\"为微服务\",{\"1\":{\"2055\":1}}],[\"为用户提供对资源层服务的封装\",{\"1\":{\"2051\":1}}],[\"为达到目的\",{\"1\":{\"2028\":1}}],[\"为某种特定实现技术量身定做\",{\"1\":{\"1996\":1}}],[\"为某一特定的行业服务的\",{\"1\":{\"1887\":1}}],[\"为某一个文件在另外一个位置建立一个同步的链接\",{\"1\":{\"1002\":1}}],[\"为软件系统的概念体系结构建模提供了具体语法和概念框架\",{\"1\":{\"1972\":1}}],[\"为企业内外部用户提供有价值的信息\",{\"1\":{\"1872\":1}}],[\"为遍历不同数据结构的\",{\"1\":{\"1832\":1}}],[\"为服务器收发请求\",{\"1\":{\"1794\":1}}],[\"为客户端收发请求\",{\"1\":{\"1794\":1}}],[\"为的是使发送方及早知道有报文段没有到达对方\",{\"1\":{\"1721\":1}}],[\"为每个具体任务选择适当的技术手段和处理方法\",{\"1\":{\"1929\":1}}],[\"为每个属性实例化一个dep\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"为每一个记录赋予一个标记再标记分类\",{\"1\":{\"1882\":1}}],[\"为每一个对象都添加了一个\",{\"1\":{\"478\":1}}],[\"为啥数据变动了会自动更新视图\",{\"1\":{\"1534\":1}}],[\"为之后虚拟dom产生的新的dom替换老的dom做铺垫\",{\"1\":{\"1526\":1}}],[\"为后续\",{\"1\":{\"1521\":1}}],[\"为响应式\",{\"1\":{\"1517\":1}}],[\"为装饰器提供元数据的支持\",{\"1\":{\"1454\":1}}],[\"为我们提供了一个标识\",{\"1\":{\"1308\":1}}],[\"为新的\",{\"1\":{\"1283\":1}}],[\"为新添加的用户指定home目录\",{\"1\":{\"945\":1}}],[\"为全局对象\",{\"1\":{\"1247\":1}}],[\"为取消行号\",{\"1\":{\"1068\":1}}],[\"为强制离开不储存档案\",{\"1\":{\"1067\":1}}],[\"为指定的用户类型增加权限\",{\"1\":{\"1039\":1}}],[\"为添加的用户指定相应的用户组\",{\"1\":{\"945\":1}}],[\"为空表示都可以管理这个组\",{\"1\":{\"938\":1}}],[\"为空\",{\"1\":{\"938\":1}}],[\"为系统预留的编号\",{\"1\":{\"937\":1}}],[\"为宏任务\",{\"1\":{\"903\":1}}],[\"为参数\",{\"1\":{\"849\":1,\"1273\":1}}],[\"为string\",{\"1\":{\"806\":1}}],[\"为此\",{\"1\":{\"698\":1,\"806\":1}}],[\"为数字\",{\"1\":{\"1061\":2,\"1063\":1,\"1104\":1}}],[\"为数组定义了\",{\"1\":{\"711\":1}}],[\"为数组提供了两个归并方法\",{\"1\":{\"704\":1}}],[\"为数组中的每一个元素依次执行回调函数\",{\"1\":{\"284\":1,\"705\":1}}],[\"为数值时\",{\"1\":{\"677\":1}}],[\"为赋值\",{\"1\":{\"654\":2}}],[\"为存储其他四种数据类型提供了额外两个\",{\"1\":{\"642\":1}}],[\"为1就是奇数\",{\"1\":{\"607\":1}}],[\"为0就是偶数\",{\"1\":{\"607\":1}}],[\"为基数\",{\"1\":{\"550\":1}}],[\"为止\",{\"1\":{\"482\":1,\"901\":1}}],[\"为什么udp不会粘包\",{\"0\":{\"1731\":1}}],[\"为什么回收\",{\"0\":{\"1644\":1}}],[\"为什么对象需要创建在外部创建\",{\"1\":{\"1236\":1}}],[\"为什么需要分代式\",{\"1\":{\"1648\":1}}],[\"为什么需要\",{\"0\":{\"1209\":1},\"1\":{\"1279\":1}}],[\"为什么需要解构呢\",{\"1\":{\"836\":1}}],[\"为什么是异步\",{\"0\":{\"1198\":1}}],[\"为什么后端开启\",{\"1\":{\"860\":1}}],[\"为什么会出现性能问题\",{\"0\":{\"1225\":1}}],[\"为什么会出现跨域问题呢\",{\"1\":{\"855\":1}}],[\"为什么会有变量提升\",{\"0\":{\"501\":1}}],[\"为什么跨域\",{\"0\":{\"855\":1}}],[\"为什么呢\",{\"1\":{\"505\":1}}],[\"为什么导致了\",{\"1\":{\"484\":1}}],[\"为什么不把这个方法单独放到一个地方\",{\"1\":{\"478\":1}}],[\"为什么要将任务队列分为微任务和宏任务呢\",{\"1\":{\"376\":1}}],[\"为模块初始化要执行的函数或对象\",{\"1\":{\"458\":1}}],[\"为未声明的变量赋值\",{\"0\":{\"428\":1}}],[\"为自\",{\"1\":{\"391\":1}}],[\"为描述\",{\"1\":{\"316\":1}}],[\"为固定单位的元素大小也会发生响应式的改变\",{\"1\":{\"207\":1}}],[\"为固定单位的元素的大小也会发生响应的变化\",{\"1\":{\"206\":1}}],[\"为固定单位的值\",{\"1\":{\"206\":1}}],[\"为了减少构件修改的工作量\",{\"1\":{\"2028\":1}}],[\"为了减少运行时错误\",{\"1\":{\"507\":1}}],[\"为了适应未来的软硬件环境的变化\",{\"1\":{\"1949\":1}}],[\"为了确认双方的接收能力和发送能力都正常\",{\"1\":{\"1727\":1}}],[\"为了确保结果的稳定性和预测性\",{\"1\":{\"1264\":1}}],[\"为了防止cwnd增长过大引起网络拥塞\",{\"1\":{\"1719\":1}}],[\"为了方便传输\",{\"1\":{\"1690\":1}}],[\"为了解决这个问题\",{\"1\":{\"1650\":2}}],[\"为了解决上述问题\",{\"1\":{\"507\":1}}],[\"为了更好地理解它的作用\",{\"1\":{\"1448\":1}}],[\"为了更好说明\",{\"1\":{\"178\":1}}],[\"为了更直观地理解元组的概念\",{\"1\":{\"1410\":1}}],[\"为了保证没有页面抖动\",{\"1\":{\"1256\":1}}],[\"为了避免这种情况\",{\"1\":{\"1707\":1}}],[\"为了避免调用\",{\"1\":{\"1366\":1}}],[\"为了避免\",{\"1\":{\"1229\":1}}],[\"为了优化这一点\",{\"1\":{\"1210\":1}}],[\"为了快速处理静态数据集\",{\"1\":{\"1153\":1}}],[\"为了得到最终的字符串\",{\"1\":{\"689\":1}}],[\"为了在组件树中使用这个\",{\"1\":{\"1218\":1}}],[\"为了在\",{\"1\":{\"581\":1}}],[\"为了实现模块化并避免使用全局变量\",{\"1\":{\"445\":1}}],[\"为了简化上述过程\",{\"1\":{\"322\":1,\"644\":1}}],[\"为了能在移动设备上正常显示那些为\",{\"1\":{\"201\":1}}],[\"为\",{\"1\":{\"20\":1,\"184\":4,\"206\":1,\"300\":1,\"321\":1,\"558\":1,\"643\":1,\"806\":1,\"903\":1,\"1041\":1,\"1044\":1,\"1045\":1,\"1062\":1,\"1065\":2,\"1197\":1,\"1653\":1,\"2744\":1}}],[\"为必填时\",{\"1\":{\"19\":1,\"62\":1}}],[\"和强度\",{\"1\":{\"2856\":1}}],[\"和glsl代码中的定义一样\",{\"1\":{\"2760\":1}}],[\"和阴影贴图就是被储存在\",{\"1\":{\"2742\":1}}],[\"和orthographiccamera不同\",{\"1\":{\"2577\":1}}],[\"和object的类型标签一样\",{\"1\":{\"642\":1}}],[\"和perspectivecamera不同\",{\"1\":{\"2536\":1}}],[\"和parsefloat\",{\"1\":{\"549\":1}}],[\"和padend\",{\"1\":{\"546\":1}}],[\"和嵌入式web服务器等构成了综合的嵌入式综合信息系统\",{\"1\":{\"2195\":1}}],[\"和数据块三部分组成\",{\"1\":{\"2150\":1}}],[\"和数组还是有区别的\",{\"1\":{\"723\":1}}],[\"和1各种版本的文档\",{\"1\":{\"1961\":1}}],[\"和被观察者\",{\"1\":{\"1802\":1}}],[\"和判断逻辑的代码\",{\"1\":{\"1753\":1}}],[\"和生产者\",{\"1\":{\"1747\":1}}],[\"和客户端的第一次挥手一样\",{\"1\":{\"1728\":1}}],[\"和目标端口\",{\"1\":{\"1712\":1}}],[\"和暂存区\",{\"1\":{\"1635\":1}}],[\"和最后一次commit\",{\"1\":{\"1634\":1}}],[\"和集中式版本控制系统相比\",{\"1\":{\"1580\":1}}],[\"和无引号的属性值\",{\"1\":{\"1550\":1}}],[\"和当前父节点\",{\"1\":{\"1550\":1}}],[\"和当前函数的作用域\",{\"1\":{\"902\":1}}],[\"和非\",{\"1\":{\"1447\":1}}],[\"和非原始类型\",{\"1\":{\"1431\":1}}],[\"和大\",{\"1\":{\"1431\":1}}],[\"和节流\",{\"0\":{\"1237\":1}}],[\"和它们各自的类型\",{\"1\":{\"1400\":1}}],[\"和它本身\",{\"1\":{\"901\":1}}],[\"和它自己本身\",{\"1\":{\"901\":1}}],[\"和附加\",{\"1\":{\"817\":1}}],[\"和空数组\",{\"1\":{\"806\":1}}],[\"和宽松相等\",{\"1\":{\"772\":1}}],[\"和展开运算符来实现\",{\"1\":{\"768\":1}}],[\"和展开运算符是怎么实现转换数组的\",{\"1\":{\"732\":1}}],[\"和删除\",{\"1\":{\"691\":1}}],[\"和异步操作关联起来了\",{\"1\":{\"590\":1}}],[\"和异步函数\",{\"1\":{\"555\":1}}],[\"和three\",{\"1\":{\"2711\":1}}],[\"和tostring\",{\"1\":{\"542\":1}}],[\"和trimend\",{\"1\":{\"538\":1}}],[\"和search\",{\"1\":{\"534\":1}}],[\"和普通的变量一样会存在提升的现象\",{\"1\":{\"500\":1}}],[\"和其他属性不一样的是\",{\"1\":{\"2688\":1}}],[\"和其他类型是平等关系\",{\"1\":{\"1415\":1}}],[\"和其他环境\",{\"1\":{\"1356\":1}}],[\"和其他语言一样\",{\"1\":{\"501\":1}}],[\"和其他模块\",{\"1\":{\"463\":1}}],[\"和其他元素互不干扰\",{\"1\":{\"184\":1}}],[\"和一个\",{\"1\":{\"413\":1}}],[\"和一个简单的输入字段\",{\"1\":{\"340\":1}}],[\"和浏览器中的是完全不相同的东西\",{\"1\":{\"378\":1}}],[\"和定时效果\",{\"1\":{\"365\":1}}],[\"和连着深度值为\",{\"1\":{\"312\":1}}],[\"和自定义的异步或者同步可迭代对象\",{\"1\":{\"299\":1}}],[\"和removeeventlistener\",{\"1\":{\"232\":1}}],[\"和媒体查询来进行适配\",{\"1\":{\"207\":1}}],[\"和换行符lf\",{\"1\":{\"102\":1}}],[\"和\",{\"0\":{\"246\":1,\"292\":1,\"295\":1,\"307\":1,\"310\":1,\"365\":1,\"382\":1,\"407\":1,\"481\":1,\"590\":1,\"591\":1,\"738\":1,\"1211\":1,\"1229\":1,\"1233\":1,\"1312\":1,\"1400\":1,\"1431\":1,\"2743\":1,\"2744\":1},\"1\":{\"19\":1,\"62\":1,\"118\":2,\"122\":1,\"124\":1,\"147\":1,\"205\":1,\"208\":3,\"224\":1,\"232\":1,\"246\":1,\"248\":2,\"249\":1,\"254\":2,\"272\":2,\"292\":1,\"295\":1,\"307\":1,\"320\":2,\"321\":1,\"328\":1,\"353\":2,\"355\":3,\"360\":1,\"365\":1,\"382\":2,\"392\":2,\"395\":1,\"397\":1,\"413\":1,\"445\":4,\"449\":1,\"452\":1,\"453\":1,\"455\":1,\"462\":1,\"463\":1,\"464\":2,\"465\":2,\"467\":1,\"499\":1,\"507\":4,\"511\":2,\"516\":1,\"527\":1,\"530\":1,\"531\":1,\"536\":1,\"566\":3,\"578\":1,\"587\":1,\"588\":1,\"590\":3,\"595\":1,\"596\":1,\"627\":2,\"636\":2,\"643\":1,\"650\":1,\"657\":3,\"658\":1,\"662\":3,\"664\":1,\"669\":1,\"678\":1,\"691\":1,\"694\":1,\"697\":1,\"704\":1,\"708\":1,\"709\":1,\"713\":1,\"717\":1,\"719\":3,\"732\":1,\"738\":1,\"755\":1,\"756\":1,\"773\":1,\"782\":1,\"783\":1,\"795\":1,\"804\":1,\"806\":4,\"807\":2,\"817\":1,\"862\":1,\"863\":1,\"874\":1,\"878\":1,\"898\":1,\"901\":2,\"938\":1,\"1006\":1,\"1025\":1,\"1039\":1,\"1071\":1,\"1167\":1,\"1194\":2,\"1200\":1,\"1211\":1,\"1229\":1,\"1236\":1,\"1244\":1,\"1255\":1,\"1259\":1,\"1267\":1,\"1273\":1,\"1275\":2,\"1279\":1,\"1363\":2,\"1366\":3,\"1400\":3,\"1402\":1,\"1415\":1,\"1416\":1,\"1418\":1,\"1429\":1,\"1431\":4,\"1436\":1,\"1460\":2,\"1464\":1,\"1478\":1,\"1513\":1,\"1525\":1,\"1534\":2,\"1601\":1,\"1641\":4,\"1646\":6,\"1653\":1,\"1695\":1,\"1706\":1,\"1730\":2,\"1849\":1,\"1851\":1,\"1961\":1,\"2010\":1,\"2282\":1,\"2573\":1,\"2675\":1,\"2688\":1,\"2741\":2,\"2742\":2,\"2743\":1,\"2744\":3,\"2753\":1,\"2763\":1,\"2872\":1}}],[\"必要参数\",{\"1\":{\"1003\":1}}],[\"必要时使用从计时器返回的句柄\",{\"1\":{\"430\":1}}],[\"必选\",{\"1\":{\"286\":1,\"678\":1}}],[\"必需\",{\"1\":{\"279\":1,\"281\":1,\"287\":1,\"363\":2,\"520\":1,\"522\":1,\"524\":1,\"526\":1,\"529\":1,\"530\":1,\"535\":2,\"550\":1,\"684\":1,\"685\":1,\"702\":1,\"703\":2,\"872\":1,\"878\":1}}],[\"必须通过\",{\"1\":{\"2744\":1}}],[\"必须通过一段\",{\"1\":{\"207\":1}}],[\"必须定义为\",{\"1\":{\"2744\":1}}],[\"必须将其设置为customblending才能使用自定义blendsrc\",{\"1\":{\"2643\":1}}],[\"必须将材质的blending设置为customblending才能生效\",{\"1\":{\"2639\":1,\"2641\":1,\"2644\":1}}],[\"必须将该值转换为16进制\",{\"1\":{\"123\":1}}],[\"必须以基类为父类\",{\"1\":{\"2028\":1}}],[\"必须对构件进行或多或少的修改\",{\"1\":{\"2028\":1}}],[\"必须要求构件的开发过程遵循公共标准\",{\"1\":{\"2028\":1}}],[\"必须要实现\",{\"1\":{\"1392\":1}}],[\"必须由其中一个的底部到另一个的顶部\",{\"1\":{\"1995\":1}}],[\"必须传入getdata\",{\"1\":{\"1829\":1}}],[\"必须了解策略的实现\",{\"1\":{\"1788\":1}}],[\"必须停止发送\",{\"1\":{\"1723\":1}}],[\"必须提供每个属性的值\",{\"1\":{\"1410\":1}}],[\"必须提供默认值\",{\"1\":{\"19\":1,\"62\":1}}],[\"必须包含\",{\"1\":{\"1369\":1}}],[\"必须注销登陆才能生效\",{\"1\":{\"1115\":1}}],[\"必须手工赋予执行权限\",{\"1\":{\"1044\":1}}],[\"必须使用此函数\",{\"1\":{\"2838\":1}}],[\"必须使用它们的\",{\"1\":{\"2741\":1}}],[\"必须使用\",{\"1\":{\"2741\":1}}],[\"必须使用参数\",{\"1\":{\"999\":1}}],[\"必须使用super\",{\"1\":{\"495\":1}}],[\"必须用在\",{\"1\":{\"595\":1}}],[\"必须是您的数据类型大小的倍数\",{\"1\":{\"2744\":1}}],[\"必须是\",{\"1\":{\"1436\":1}}],[\"必须是数值\",{\"1\":{\"529\":2}}],[\"必须是设置了全局模式\",{\"1\":{\"324\":1}}],[\"必须\",{\"1\":{\"289\":1,\"528\":1,\"718\":2,\"873\":1,\"875\":1,\"876\":1,\"881\":2}}],[\"必须指定返回值\",{\"1\":{\"286\":1,\"678\":1}}],[\"必须在范围\",{\"1\":{\"2334\":1,\"2341\":1,\"2342\":1}}],[\"必须在2人周内完成\",{\"1\":{\"2007\":1}}],[\"必须在\",{\"1\":{\"117\":1,\"2333\":1,\"2744\":1}}],[\"必须在以下类型范围内\",{\"1\":{\"30\":1,\"73\":1}}],[\"必填\",{\"1\":{\"16\":1,\"59\":1}}],[\"ai芯片需要软件工具链的支持\",{\"1\":{\"2180\":1}}],[\"ai芯片的关键特征\",{\"1\":{\"2180\":1}}],[\"ai系统通常涉及训练和推断过程\",{\"1\":{\"2180\":1}}],[\"ai计算既不脱离传统计算\",{\"1\":{\"2180\":1}}],[\"aof\",{\"1\":{\"2069\":1}}],[\"aop\",{\"1\":{\"1535\":1}}],[\"aesop\",{\"1\":{\"1972\":1}}],[\"a标志以创建一个带备注的标签\",{\"1\":{\"1618\":1}}],[\"a不能被忽略\",{\"1\":{\"1583\":1}}],[\"a来访问this\",{\"1\":{\"1533\":1}}],[\"axios\",{\"1\":{\"1249\":4}}],[\"a为\",{\"1\":{\"1065\":1}}],[\"a+r\",{\"1\":{\"1041\":2}}],[\"a表示这三者皆是\",{\"1\":{\"1038\":1}}],[\"a<显示行数>\",{\"1\":{\"1014\":1}}],[\"a或\",{\"1\":{\"1009\":1,\"1021\":1}}],[\"a改变档案的读取时间记录\",{\"1\":{\"981\":1}}],[\"ambientlight\",{\"0\":{\"2879\":1,\"2880\":1},\"1\":{\"2880\":1}}],[\"amend\",{\"1\":{\"1600\":2}}],[\"amount\",{\"1\":{\"1167\":3,\"1168\":3}}],[\"amin\",{\"1\":{\"1006\":1}}],[\"am\",{\"1\":{\"843\":2,\"930\":1}}],[\"amd\",{\"0\":{\"456\":1,\"463\":1},\"1\":{\"444\":2,\"457\":3,\"458\":1,\"460\":3,\"461\":3,\"462\":3,\"463\":4,\"464\":5,\"465\":6,\"467\":2,\"1454\":1}}],[\"awit\",{\"1\":{\"828\":1}}],[\"await可以⽤成熟的try\",{\"1\":{\"596\":1}}],[\"await⼏乎是同步的写法\",{\"1\":{\"596\":1}}],[\"await对比promise的优势就显而易见了\",{\"1\":{\"596\":1}}],[\"await的优势就能体现出来了\",{\"1\":{\"596\":1}}],[\"await的优势\",{\"0\":{\"596\":1}}],[\"await暂停当前async的执行\",{\"1\":{\"595\":1}}],[\"await关键字并不会导致程序阻塞\",{\"1\":{\"594\":1}}],[\"await关键字会接收一个期约并将其转化为一个返回值或一个抛出的异常\",{\"1\":{\"594\":1}}],[\"await则为等待\",{\"1\":{\"594\":1}}],[\"await\",{\"0\":{\"299\":1,\"334\":1,\"593\":1,\"594\":1,\"595\":1,\"597\":1,\"891\":1},\"1\":{\"299\":3,\"334\":19,\"345\":1,\"467\":3,\"471\":1,\"594\":3,\"595\":14,\"596\":6,\"597\":4,\"891\":3,\"1168\":1,\"1188\":2,\"1758\":3,\"1829\":1}}],[\"a2\",{\"1\":{\"653\":4}}],[\"a1\",{\"1\":{\"653\":4}}],[\"a属性被删除\",{\"1\":{\"640\":1}}],[\"a^b\",{\"1\":{\"610\":1}}],[\"ajax\",{\"0\":{\"811\":1,\"812\":1,\"815\":1,\"819\":1},\"1\":{\"569\":1,\"571\":3,\"812\":2,\"813\":2,\"819\":1,\"832\":1,\"855\":1,\"864\":7,\"866\":7,\"902\":1},\"2\":{\"825\":1}}],[\"aug\",{\"1\":{\"775\":1,\"787\":1}}],[\"authenticate\",{\"1\":{\"1755\":5}}],[\"authfactory\",{\"1\":{\"1755\":4}}],[\"authcontext\",{\"1\":{\"1229\":1}}],[\"authored\",{\"1\":{\"2710\":1}}],[\"author=\",{\"1\":{\"1626\":3}}],[\"author\",{\"1\":{\"639\":3,\"1211\":1}}],[\"autoupdate\",{\"1\":{\"2805\":2}}],[\"autoreset\",{\"1\":{\"2800\":2}}],[\"autoprefixer\",{\"1\":{\"208\":1}}],[\"autoclearstencil或autocleardepth属性的值设为false来阻止对应缓存被清除\",{\"1\":{\"2836\":1}}],[\"autoclearstencil\",{\"0\":{\"2793\":1}}],[\"autocleardepth\",{\"0\":{\"2792\":1}}],[\"autoclearcolor\",{\"0\":{\"2791\":1}}],[\"autoclear\",{\"0\":{\"2790\":1}}],[\"autoclose\",{\"0\":{\"2420\":1}}],[\"autocconnenction\",{\"1\":{\"128\":6}}],[\"autocrlf\",{\"1\":{\"102\":1,\"104\":1}}],[\"autoimport\",{\"1\":{\"39\":3}}],[\"auto\",{\"0\":{\"166\":1},\"1\":{\"20\":1,\"39\":6,\"63\":1,\"103\":1,\"127\":2,\"151\":1,\"166\":1,\"170\":1,\"184\":2,\"1153\":1,\"1589\":1,\"1707\":1}}],[\"audiocontext\",{\"1\":{\"338\":10}}],[\"audiofromaudiofile\",{\"1\":{\"338\":7}}],[\"audio>\",{\"1\":{\"338\":1}}],[\"audio\",{\"0\":{\"338\":1},\"1\":{\"338\":10,\"388\":1}}],[\"aggreagateerror\",{\"1\":{\"584\":1}}],[\"aggregateerror\",{\"1\":{\"328\":3}}],[\"age访问不到\",{\"1\":{\"1390\":1}}],[\"agent\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"age=20\",{\"1\":{\"1659\":1}}],[\"age=23\",{\"1\":{\"864\":1,\"866\":1}}],[\"age=10\",{\"1\":{\"1094\":1}}],[\"age\",{\"1\":{\"272\":4,\"295\":3,\"296\":1,\"297\":1,\"356\":2,\"359\":5,\"445\":11,\"478\":6,\"495\":4,\"639\":2,\"723\":3,\"762\":2,\"806\":4,\"836\":1,\"838\":5,\"844\":1,\"847\":1,\"849\":1,\"860\":1,\"864\":2,\"865\":3,\"866\":2,\"882\":3,\"1296\":1,\"1299\":4,\"1300\":4,\"1338\":6,\"1339\":1,\"1340\":8,\"1365\":3,\"1366\":2,\"1370\":6,\"1371\":3,\"1389\":6,\"1390\":8,\"1405\":2,\"1411\":1,\"1460\":2,\"1493\":4,\"1571\":4,\"1659\":1,\"1740\":6,\"1743\":10,\"1773\":5,\"1774\":3}}],[\"ack=w+1\",{\"1\":{\"1728\":1}}],[\"ack=1\",{\"1\":{\"1726\":1,\"1728\":3}}],[\"ack报文段可以携带数据\",{\"1\":{\"1726\":1}}],[\"ack\",{\"1\":{\"1713\":1,\"1726\":3,\"1728\":8,\"1729\":2}}],[\"accidental\",{\"1\":{\"1653\":1}}],[\"acceptalldevices\",{\"1\":{\"341\":3}}],[\"access\",{\"1\":{\"249\":1,\"511\":1,\"860\":8,\"864\":3,\"1150\":1,\"1152\":5,\"1153\":2}}],[\"acdfhllnnqrtvv\",{\"1\":{\"1021\":1}}],[\"acddffghjjkllmoqrstuvvwxyz$\",{\"1\":{\"1018\":1}}],[\"acpi\",{\"1\":{\"1016\":2}}],[\"acfm\",{\"1\":{\"981\":1}}],[\"activemipmaplevel\",{\"0\":{\"2842\":1},\"1\":{\"2842\":1}}],[\"activecubeface\",{\"0\":{\"2842\":1},\"1\":{\"2842\":1}}],[\"activecubefaceindex\",{\"0\":{\"2835\":1},\"1\":{\"2835\":1}}],[\"active\",{\"1\":{\"1256\":1,\"1735\":1,\"2826\":1,\"2827\":1,\"2842\":2}}],[\"activexobject\",{\"1\":{\"815\":1}}],[\"action\",{\"1\":{\"471\":2,\"1159\":4,\"1160\":3,\"1162\":4,\"1167\":1,\"1173\":2,\"1183\":5,\"1184\":3,\"1186\":3,\"1188\":1,\"1273\":3,\"1274\":4,\"1275\":1,\"1287\":3}}],[\"actionscountref\",{\"1\":{\"1287\":3}}],[\"actions\",{\"0\":{\"1160\":1,\"1184\":1},\"1\":{\"83\":2,\"1160\":1,\"1162\":1,\"1167\":1,\"1168\":2,\"1184\":4,\"1186\":1,\"1188\":1}}],[\"a>\",{\"1\":{\"239\":3}}],[\"aa\",{\"1\":{\"658\":3,\"1483\":1,\"1490\":6,\"1568\":2}}],[\"aaa\",{\"1\":{\"207\":1,\"253\":8,\"286\":1,\"678\":1,\"979\":1}}],[\"aac\",{\"1\":{\"94\":1}}],[\"absd方法使用已有的基于模块的内聚和耦合技术\",{\"1\":{\"1974\":1}}],[\"absd方法有三个基础\",{\"1\":{\"1974\":1}}],[\"absd方法是架构驱动\",{\"1\":{\"1974\":1}}],[\"abstractlogin\",{\"1\":{\"1755\":4}}],[\"abstract\",{\"1\":{\"1392\":3,\"1752\":1}}],[\"absolute\",{\"0\":{\"165\":1,\"166\":1,\"167\":1,\"168\":1},\"1\":{\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"184\":1,\"1256\":1}}],[\"absolute|fixed\",{\"1\":{\"148\":1}}],[\"aboutpage\",{\"1\":{\"1312\":1}}],[\"about\",{\"1\":{\"1309\":2,\"1311\":5,\"1312\":2,\"1376\":3}}],[\"above\",{\"1\":{\"1256\":4}}],[\"abort\",{\"1\":{\"395\":1}}],[\"abbcdefhilnnppqrsttuvwy\",{\"1\":{\"1009\":1}}],[\"abb=a^0=a\",{\"1\":{\"610\":1}}],[\"abzdef\",{\"1\":{\"535\":1}}],[\"abax\",{\"1\":{\"293\":1,\"547\":1}}],[\"ababx\",{\"1\":{\"293\":1,\"547\":1}}],[\"ab\",{\"1\":{\"286\":2,\"293\":4,\"294\":2,\"526\":1,\"547\":4,\"548\":2,\"610\":1,\"678\":2}}],[\"abcdef\",{\"1\":{\"526\":1,\"528\":1,\"529\":1,\"530\":1,\"535\":1,\"536\":2,\"537\":1,\"539\":2,\"543\":2,\"544\":2}}],[\"abcdefgabc\",{\"1\":{\"520\":1}}],[\"abcdefg\",{\"1\":{\"518\":1,\"528\":1,\"529\":1,\"530\":2}}],[\"abcefghhillnqrsvvwxy\",{\"1\":{\"1014\":1}}],[\"abcefghijk\",{\"1\":{\"525\":1}}],[\"abcefg\",{\"1\":{\"525\":1}}],[\"abcabc\",{\"1\":{\"324\":3,\"521\":1}}],[\"abc\",{\"1\":{\"286\":3,\"308\":2,\"309\":2,\"525\":1,\"540\":2,\"541\":2,\"654\":2,\"666\":1,\"667\":3,\"678\":3,\"689\":2,\"973\":1,\"1041\":1,\"1550\":3}}],[\"ab2hex\",{\"1\":{\"123\":2,\"127\":2}}],[\"available\",{\"1\":{\"128\":1}}],[\"avoid\",{\"1\":{\"20\":2,\"63\":2}}],[\"a\",{\"1\":{\"94\":1,\"239\":3,\"241\":3,\"248\":6,\"249\":6,\"250\":5,\"254\":3,\"261\":4,\"265\":2,\"267\":2,\"269\":3,\"272\":2,\"286\":2,\"293\":1,\"302\":4,\"303\":2,\"304\":2,\"322\":9,\"324\":3,\"326\":1,\"328\":3,\"329\":3,\"334\":7,\"345\":1,\"351\":2,\"354\":3,\"355\":10,\"356\":2,\"357\":2,\"358\":1,\"360\":11,\"362\":3,\"405\":3,\"445\":2,\"455\":4,\"463\":2,\"482\":7,\"500\":1,\"503\":3,\"508\":2,\"510\":3,\"511\":3,\"520\":1,\"521\":1,\"526\":2,\"535\":4,\"547\":1,\"555\":4,\"569\":3,\"587\":1,\"589\":6,\"604\":1,\"605\":2,\"610\":2,\"611\":4,\"613\":2,\"616\":2,\"621\":5,\"631\":4,\"632\":1,\"633\":2,\"635\":4,\"640\":7,\"644\":9,\"645\":1,\"646\":3,\"653\":2,\"654\":3,\"656\":1,\"657\":3,\"662\":6,\"663\":1,\"674\":4,\"678\":2,\"698\":4,\"713\":1,\"719\":6,\"729\":2,\"731\":2,\"732\":2,\"755\":2,\"756\":6,\"763\":4,\"764\":1,\"767\":2,\"775\":1,\"777\":1,\"778\":2,\"779\":3,\"795\":1,\"803\":4,\"838\":2,\"840\":2,\"842\":2,\"843\":2,\"844\":2,\"847\":2,\"861\":3,\"862\":6,\"863\":6,\"867\":1,\"873\":1,\"881\":2,\"883\":4,\"884\":1,\"885\":3,\"898\":10,\"900\":5,\"901\":9,\"902\":11,\"972\":3,\"989\":1,\"998\":1,\"1009\":3,\"1018\":1,\"1019\":2,\"1039\":1,\"1056\":1,\"1065\":3,\"1078\":1,\"1109\":1,\"1110\":1,\"1211\":2,\"1244\":1,\"1265\":3,\"1300\":2,\"1339\":3,\"1363\":2,\"1367\":2,\"1369\":1,\"1374\":1,\"1378\":4,\"1379\":3,\"1382\":1,\"1388\":1,\"1409\":1,\"1414\":1,\"1415\":2,\"1425\":2,\"1426\":8,\"1431\":3,\"1442\":4,\"1445\":1,\"1446\":1,\"1475\":6,\"1483\":4,\"1490\":1,\"1505\":1,\"1514\":1,\"1533\":2,\"1534\":1,\"1535\":1,\"1539\":7,\"1547\":3,\"1550\":2,\"1556\":5,\"1563\":2,\"1564\":1,\"1568\":2,\"1583\":1,\"1593\":1,\"1596\":2,\"1618\":1,\"1646\":9,\"1650\":1,\"1653\":3,\"1730\":1,\"1789\":2,\"1798\":6,\"1814\":3,\"2473\":1,\"2475\":1,\"2710\":1,\"2756\":1,\"2761\":1,\"2795\":1,\"2835\":1,\"2842\":1}}],[\"anti\",{\"1\":{\"2795\":1}}],[\"antialias\",{\"1\":{\"2788\":1}}],[\"antd\",{\"1\":{\"1157\":2,\"1162\":1,\"1175\":2,\"1177\":1,\"1182\":2,\"1186\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"anisotropic\",{\"1\":{\"2798\":1}}],[\"aniations\",{\"1\":{\"1820\":2}}],[\"animal\",{\"1\":{\"1388\":2,\"1392\":4}}],[\"animate\",{\"1\":{\"1289\":3}}],[\"animationmixer\",{\"0\":{\"2491\":1,\"2492\":1}}],[\"animationclip\",{\"0\":{\"2487\":1,\"2488\":1},\"1\":{\"2488\":1}}],[\"animationaction的大多数方法都可以链式调用\",{\"1\":{\"2484\":1}}],[\"animationactions\",{\"1\":{\"2484\":1}}],[\"animationaction\",{\"0\":{\"2483\":1,\"2484\":1}}],[\"animationframeref\",{\"1\":{\"1289\":4}}],[\"animation\",{\"1\":{\"21\":8,\"64\":8,\"1250\":4,\"1820\":5}}],[\"analytics\",{\"1\":{\"1707\":1}}],[\"anchor\",{\"1\":{\"1478\":2}}],[\"anull\",{\"1\":{\"1152\":1}}],[\"anvas\",{\"1\":{\"829\":1}}],[\"an\",{\"1\":{\"433\":13,\"1366\":1,\"1705\":1,\"2455\":1,\"2462\":1}}],[\"anotherobj\",{\"1\":{\"805\":1}}],[\"another\",{\"1\":{\"343\":1,\"1152\":2}}],[\"android\",{\"1\":{\"340\":1}}],[\"android4\",{\"1\":{\"208\":1}}],[\"and\",{\"1\":{\"204\":3,\"340\":3,\"535\":2,\"1152\":1,\"1338\":1,\"1467\":1,\"1505\":1,\"2695\":1,\"2835\":1}}],[\"any类型时报错\",{\"1\":{\"1454\":1}}],[\"any>\",{\"1\":{\"1377\":1,\"1380\":2,\"1382\":1}}],[\"any\",{\"0\":{\"328\":1,\"577\":1,\"1417\":1},\"1\":{\"88\":1,\"328\":3,\"570\":1,\"577\":4,\"584\":1,\"1340\":1,\"1360\":1,\"1366\":3,\"1367\":4,\"1368\":2,\"1370\":1,\"1376\":2,\"1377\":3,\"1382\":3,\"1416\":1,\"1417\":7,\"1418\":11,\"1425\":2,\"1427\":1,\"1438\":2,\"1442\":1,\"1445\":1,\"1446\":1,\"1454\":1,\"1467\":4,\"1468\":4}}],[\"apache\",{\"1\":{\"1152\":2,\"1695\":1}}],[\"apr\",{\"1\":{\"1029\":1}}],[\"api接口\",{\"1\":{\"1936\":1}}],[\"api无法访问带有\",{\"1\":{\"1661\":1}}],[\"api的执行\",{\"1\":{\"378\":1}}],[\"apis<h2>\",{\"1\":{\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1}}],[\"api\",{\"0\":{\"337\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1},\"1\":{\"117\":3,\"118\":1,\"119\":1,\"124\":1,\"125\":1,\"337\":3,\"338\":6,\"339\":6,\"340\":12,\"341\":8,\"342\":6,\"343\":9,\"344\":2,\"345\":2,\"378\":1,\"386\":1,\"392\":4,\"393\":1,\"413\":1,\"449\":1,\"455\":1,\"457\":1,\"464\":2,\"560\":2,\"562\":1,\"773\":1,\"823\":2,\"1168\":1,\"1249\":1,\"1334\":1,\"1478\":1,\"1484\":1,\"1492\":1,\"1504\":1,\"1764\":1,\"2039\":6,\"2462\":1},\"2\":{\"347\":1}}],[\"api使用顺序\",{\"1\":{\"19\":1,\"62\":1}}],[\"appcontext\",{\"1\":{\"1227\":1}}],[\"append\",{\"1\":{\"472\":1}}],[\"appendelement\",{\"1\":{\"434\":3}}],[\"appendchild\",{\"1\":{\"434\":2,\"436\":1,\"437\":1,\"859\":1,\"863\":1,\"1476\":2,\"1478\":1,\"1528\":1,\"1832\":1,\"2797\":1}}],[\"appear\",{\"1\":{\"340\":1}}],[\"appearance\",{\"1\":{\"21\":1,\"64\":1}}],[\"applenumber\",{\"1\":{\"1372\":3}}],[\"apple\",{\"1\":{\"533\":2,\"879\":3}}],[\"apples\",{\"1\":{\"526\":2}}],[\"application\",{\"1\":{\"388\":3,\"816\":1,\"1152\":1,\"1153\":1,\"1659\":1}}],[\"applymatrix4\",{\"0\":{\"2298\":1}}],[\"applymiddleware\",{\"1\":{\"1188\":2}}],[\"apply\",{\"0\":{\"355\":1},\"1\":{\"261\":2,\"355\":9,\"358\":1,\"359\":1,\"360\":1,\"362\":1,\"417\":1,\"495\":1,\"729\":4,\"731\":1,\"828\":2,\"831\":4,\"902\":3,\"1468\":1,\"1535\":1,\"1564\":1,\"1601\":5,\"1777\":4}}],[\"appid和名称\",{\"1\":{\"109\":1}}],[\"appid\",{\"1\":{\"108\":2,\"109\":2,\"111\":1}}],[\"app<element>\",{\"1\":{\"88\":1}}],[\"app\",{\"1\":{\"40\":1,\"80\":4,\"82\":2,\"83\":2,\"88\":4,\"108\":1,\"124\":2,\"191\":2,\"192\":1,\"193\":2,\"201\":1,\"334\":1,\"859\":3,\"860\":9,\"861\":6,\"862\":6,\"863\":6,\"902\":1,\"1167\":9,\"1168\":7,\"1196\":2,\"1197\":4,\"1200\":2,\"1204\":2,\"1220\":5,\"1222\":2,\"1235\":1,\"1312\":2,\"1328\":1,\"1329\":1,\"1330\":2,\"1331\":1,\"1332\":1,\"1334\":4,\"1335\":2,\"1475\":1,\"1483\":1,\"1490\":1,\"1527\":1,\"1533\":1,\"1539\":1,\"1547\":1,\"1549\":1,\"1550\":1,\"1556\":1,\"1568\":1}}],[\"adl的三个基本元素\",{\"1\":{\"1972\":1}}],[\"adl是这样一种形式化语言\",{\"1\":{\"1972\":1}}],[\"adl\",{\"0\":{\"1972\":1}}],[\"admin\",{\"1\":{\"1435\":2,\"1753\":5,\"1754\":5}}],[\"advance\",{\"1\":{\"1550\":7}}],[\"advika\",{\"1\":{\"1222\":1}}],[\"advertisdata\",{\"1\":{\"118\":1}}],[\"advertisserviceuuids\",{\"1\":{\"118\":1}}],[\"adabdndj\",{\"1\":{\"532\":2,\"533\":2}}],[\"adjust\",{\"1\":{\"21\":1,\"64\":1}}],[\"addhandler\",{\"0\":{\"2473\":1},\"1\":{\"2473\":1}}],[\"addgroup\",{\"0\":{\"2297\":1},\"1\":{\"2286\":1}}],[\"adduser\",{\"1\":{\"2039\":1}}],[\"addsub\",{\"1\":{\"1493\":1,\"1561\":1,\"1562\":1,\"1571\":2}}],[\"adddep\",{\"1\":{\"1493\":1,\"1561\":1,\"1562\":1,\"1571\":2}}],[\"add2\",{\"1\":{\"1442\":3}}],[\"add1\",{\"1\":{\"1442\":2}}],[\"addcount\",{\"1\":{\"1273\":2}}],[\"addcase\",{\"1\":{\"1168\":3}}],[\"adder\",{\"1\":{\"902\":10}}],[\"addeventlistener\",{\"1\":{\"232\":4,\"237\":1,\"240\":3,\"241\":4,\"343\":1,\"395\":1,\"432\":5,\"436\":2,\"437\":1,\"558\":3,\"822\":1,\"902\":1,\"1247\":1,\"1290\":1,\"1839\":1}}],[\"addition\",{\"1\":{\"463\":8}}],[\"additem\",{\"1\":{\"455\":10}}],[\"addrule\",{\"1\":{\"1789\":3,\"1839\":4}}],[\"addr\",{\"1\":{\"322\":5,\"644\":5,\"1152\":1,\"1153\":2}}],[\"addnum\",{\"1\":{\"83\":6}}],[\"addpersonhan\",{\"1\":{\"83\":1}}],[\"add\",{\"0\":{\"2422\":1},\"1\":{\"8\":1,\"11\":1,\"14\":1,\"25\":1,\"29\":1,\"34\":1,\"38\":1,\"51\":1,\"54\":1,\"57\":1,\"63\":2,\"68\":1,\"72\":1,\"77\":1,\"81\":1,\"82\":1,\"83\":3,\"98\":1,\"254\":2,\"271\":2,\"464\":4,\"636\":2,\"727\":5,\"746\":3,\"842\":2,\"902\":7,\"1153\":2,\"1362\":2,\"1426\":6,\"1493\":1,\"1561\":1,\"1571\":1,\"1599\":2,\"1600\":1,\"1607\":1,\"1614\":3,\"1806\":3,\"1823\":10,\"2359\":1,\"2371\":1,\"2375\":1,\"2379\":1,\"2383\":1,\"2387\":1,\"2391\":1,\"2399\":1,\"2403\":1,\"2407\":1,\"2430\":1,\"2434\":1,\"2438\":1,\"2442\":1,\"2446\":1,\"2450\":1,\"2462\":1,\"2528\":1,\"2562\":2,\"2566\":1,\"2864\":1,\"2868\":1,\"2872\":2,\"2876\":1,\"2880\":1,\"2884\":1}}],[\"alpha\",{\"0\":{\"2839\":1,\"2840\":1},\"1\":{\"2788\":2}}],[\"alphatocoverage\",{\"0\":{\"2638\":1}}],[\"alphatest\",{\"0\":{\"2637\":1},\"1\":{\"2606\":1,\"2708\":1}}],[\"alpha纹理也仍然有效\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"alpha贴图是一张灰度纹理\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"alphamap\",{\"0\":{\"2601\":1,\"2699\":1}}],[\"alpha测试\",{\"1\":{\"1940\":1}}],[\"alphabetical\",{\"1\":{\"21\":1,\"64\":1}}],[\"alter\",{\"1\":{\"1472\":1}}],[\"alt=\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"alt标记\",{\"1\":{\"218\":1}}],[\"alrtafr\",{\"1\":{\"972\":1}}],[\"already\",{\"1\":{\"250\":2}}],[\"alok\",{\"1\":{\"467\":1}}],[\"aliasing\",{\"1\":{\"2795\":1}}],[\"alias\",{\"1\":{\"1120\":1,\"1152\":2,\"1501\":1,\"1591\":1}}],[\"alibaba\",{\"1\":{\"269\":4}}],[\"align\",{\"1\":{\"21\":3,\"64\":3,\"169\":1,\"171\":3,\"172\":1,\"173\":2,\"174\":1,\"207\":1,\"343\":1}}],[\"alert\",{\"1\":{\"83\":1,\"123\":1,\"127\":1,\"231\":1,\"232\":1,\"463\":1,\"467\":3,\"478\":1,\"482\":1,\"662\":3,\"805\":2,\"806\":9,\"885\":1,\"1251\":1,\"1268\":1}}],[\"allusers=\",{\"1\":{\"1267\":2}}],[\"allusers\",{\"1\":{\"1265\":3,\"1267\":8}}],[\"allowsyntheticdefaultimports\",{\"1\":{\"1454\":1}}],[\"allowjs\",{\"1\":{\"1454\":1}}],[\"allowed\",{\"1\":{\"1353\":1}}],[\"allow\",{\"1\":{\"860\":6,\"864\":3,\"1609\":2}}],[\"all方法的状态就会变成resolved\",{\"1\":{\"573\":1}}],[\"all方法可以完成并行任务\",{\"1\":{\"573\":1}}],[\"allsettledpromise\",{\"1\":{\"323\":2,\"576\":2,\"577\":2}}],[\"allsettled\",{\"0\":{\"323\":1,\"576\":1},\"1\":{\"323\":5,\"570\":1,\"576\":5,\"577\":1,\"584\":1}}],[\"all\",{\"0\":{\"573\":1,\"582\":1},\"1\":{\"34\":1,\"77\":1,\"136\":1,\"185\":1,\"323\":2,\"328\":2,\"570\":1,\"573\":1,\"576\":3,\"582\":1,\"584\":3,\"1009\":1,\"1039\":1,\"1073\":1,\"1152\":1,\"1334\":1,\"2240\":1,\"2835\":1}}],[\"alwaysstrict\",{\"1\":{\"1454\":1}}],[\"always\",{\"1\":{\"20\":1,\"21\":3,\"30\":1,\"63\":1,\"64\":3,\"73\":1}}],[\"afterfn\",{\"1\":{\"1777\":2}}],[\"after=<date>\",{\"1\":{\"1626\":1}}],[\"after=network\",{\"1\":{\"1137\":1}}],[\"after\",{\"1\":{\"21\":2,\"64\":2,\"183\":1,\"1309\":1,\"1777\":2}}],[\"arclengthdivisions\",{\"0\":{\"2331\":1},\"1\":{\"2331\":1}}],[\"archive\",{\"1\":{\"1025\":12}}],[\"armstrong公理\",{\"0\":{\"2248\":1}}],[\"arq\",{\"1\":{\"1724\":1}}],[\"arp\",{\"1\":{\"1691\":1,\"1692\":1}}],[\"articleid\",{\"1\":{\"1211\":5}}],[\"article>\",{\"1\":{\"215\":1}}],[\"argument\",{\"1\":{\"1370\":1,\"1428\":1,\"1442\":1}}],[\"arguments\",{\"0\":{\"263\":1,\"723\":1},\"1\":{\"263\":3,\"286\":1,\"356\":2,\"358\":1,\"359\":2,\"495\":1,\"678\":1,\"721\":1,\"723\":11,\"727\":3,\"728\":2,\"729\":2,\"731\":5,\"732\":3,\"828\":2,\"831\":3,\"902\":1,\"1777\":4}}],[\"arg\",{\"1\":{\"357\":1,\"428\":2,\"681\":2,\"1361\":1,\"1369\":3,\"1653\":1}}],[\"arg=\",{\"1\":{\"357\":1}}],[\"arg2\",{\"1\":{\"355\":3,\"677\":1}}],[\"arg1\",{\"1\":{\"355\":3,\"677\":1}}],[\"args\",{\"1\":{\"250\":5,\"358\":2,\"582\":8,\"583\":3,\"728\":2,\"731\":6,\"732\":7,\"828\":3,\"831\":7,\"902\":7,\"1368\":1,\"1377\":2,\"1382\":2,\"1468\":3,\"1527\":2,\"1535\":4,\"1564\":4}}],[\"area\",{\"1\":{\"275\":1,\"470\":1,\"2843\":1}}],[\"areas\",{\"1\":{\"21\":1,\"64\":1}}],[\"are\",{\"1\":{\"255\":1,\"1340\":1,\"2754\":1,\"2835\":1}}],[\"arr3\",{\"1\":{\"1405\":1}}],[\"arrobj\",{\"1\":{\"1405\":2}}],[\"arrowparens\",{\"1\":{\"20\":1,\"63\":1}}],[\"arr2\",{\"1\":{\"266\":2,\"754\":2}}],[\"arr1\",{\"1\":{\"266\":2,\"712\":2,\"754\":5,\"872\":2}}],[\"arraycamera\",{\"0\":{\"2523\":1,\"2524\":1}}],[\"arrayproto\",{\"1\":{\"1535\":3,\"1564\":1}}],[\"arraymethods\",{\"1\":{\"1535\":4,\"1564\":1}}],[\"arraynumber\",{\"1\":{\"1443\":5}}],[\"array<any>\",{\"1\":{\"1468\":1}}],[\"array<number>泛型语法\",{\"1\":{\"1405\":1}}],[\"array<number>\",{\"1\":{\"1365\":1,\"1405\":1}}],[\"array<t>\",{\"1\":{\"1339\":1}}],[\"arraylike\",{\"1\":{\"731\":6}}],[\"arrays\",{\"1\":{\"719\":1}}],[\"arrayx\",{\"1\":{\"701\":4}}],[\"array3\",{\"1\":{\"698\":2}}],[\"array2\",{\"1\":{\"698\":8,\"699\":2,\"701\":2}}],[\"arrayobject\",{\"1\":{\"690\":2,\"692\":1,\"693\":1,\"695\":1,\"696\":1,\"698\":1,\"699\":1,\"701\":1,\"702\":1,\"703\":1}}],[\"arraybuffer对象的各种typedarray视图\",{\"1\":{\"408\":1}}],[\"arraybuffer对象\",{\"1\":{\"405\":1}}],[\"arraybufferview\",{\"1\":{\"388\":1}}],[\"arraybuffer\",{\"0\":{\"396\":1,\"397\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"416\":1,\"417\":1,\"419\":1},\"1\":{\"123\":1,\"125\":2,\"127\":1,\"386\":1,\"388\":1,\"394\":1,\"397\":7,\"398\":4,\"399\":4,\"400\":7,\"401\":5,\"402\":4,\"403\":2,\"404\":1,\"408\":3,\"409\":2,\"410\":1,\"411\":1,\"417\":1,\"1670\":1}}],[\"arraybuffer转16进度字符串示例\",{\"1\":{\"123\":1,\"127\":1}}],[\"array\",{\"0\":{\"286\":1,\"289\":1,\"758\":1,\"759\":1,\"1405\":1,\"2286\":1,\"2320\":1,\"2335\":1,\"2336\":1,\"2338\":1,\"2419\":1,\"2424\":1,\"2425\":1,\"2426\":1,\"2647\":1,\"2796\":1},\"1\":{\"123\":1,\"127\":1,\"271\":3,\"284\":1,\"286\":10,\"287\":2,\"289\":1,\"299\":1,\"313\":2,\"332\":7,\"358\":1,\"359\":1,\"363\":1,\"388\":2,\"403\":1,\"418\":1,\"430\":2,\"432\":1,\"436\":1,\"582\":1,\"590\":2,\"641\":1,\"652\":1,\"653\":3,\"657\":4,\"658\":3,\"659\":1,\"677\":12,\"678\":26,\"679\":11,\"680\":3,\"681\":12,\"684\":2,\"685\":4,\"689\":2,\"690\":3,\"692\":3,\"693\":3,\"695\":3,\"696\":3,\"698\":9,\"699\":4,\"701\":3,\"702\":3,\"703\":6,\"705\":1,\"710\":9,\"723\":1,\"728\":1,\"731\":5,\"732\":4,\"734\":1,\"735\":1,\"736\":1,\"737\":1,\"742\":3,\"743\":7,\"758\":1,\"760\":1,\"765\":2,\"768\":2,\"872\":1,\"873\":1,\"875\":1,\"876\":2,\"877\":1,\"878\":2,\"879\":3,\"891\":1,\"902\":1,\"1244\":1,\"1425\":2,\"1436\":1,\"1437\":1,\"1491\":1,\"1534\":1,\"1535\":4,\"1563\":3,\"1564\":1,\"2424\":1,\"2744\":1}}],[\"arr\",{\"1\":{\"109\":4,\"248\":6,\"265\":2,\"267\":2,\"271\":5,\"284\":9,\"285\":4,\"287\":13,\"289\":1,\"299\":2,\"357\":2,\"363\":6,\"484\":8,\"486\":1,\"488\":1,\"494\":4,\"582\":2,\"632\":1,\"636\":3,\"639\":2,\"657\":3,\"684\":13,\"705\":9,\"706\":4,\"708\":4,\"709\":3,\"712\":6,\"713\":6,\"714\":4,\"715\":2,\"716\":2,\"718\":3,\"719\":3,\"734\":2,\"735\":7,\"736\":4,\"737\":7,\"738\":4,\"739\":5,\"740\":4,\"745\":2,\"746\":7,\"748\":8,\"749\":7,\"758\":4,\"759\":4,\"767\":4,\"774\":2,\"859\":2,\"872\":8,\"873\":8,\"874\":2,\"875\":6,\"876\":7,\"877\":14,\"878\":7,\"879\":4,\"888\":3,\"891\":2,\"1235\":3,\"1405\":1,\"1832\":3}}],[\"atam\",{\"1\":{\"2011\":1}}],[\"atime\",{\"1\":{\"1006\":1,\"1007\":1}}],[\"atob\",{\"1\":{\"414\":2,\"418\":1}}],[\"attribs的值\",{\"1\":{\"2795\":1}}],[\"attribute\",{\"0\":{\"2296\":1},\"1\":{\"1550\":2,\"2282\":2,\"2288\":2,\"2296\":2,\"2308\":1,\"2313\":1,\"2320\":1}}],[\"attributes的定义也是如此\",{\"1\":{\"2767\":1}}],[\"attributes\",{\"0\":{\"2282\":1,\"2743\":1,\"2744\":1},\"1\":{\"19\":2,\"21\":1,\"62\":2,\"64\":1,\"2296\":3,\"2741\":1,\"2742\":6,\"2743\":2,\"2744\":3}}],[\"attr\",{\"1\":{\"1550\":10,\"1551\":6}}],[\"attrs\",{\"1\":{\"1550\":6,\"1551\":5}}],[\"attachevent\",{\"1\":{\"232\":2}}],[\"attachment\",{\"1\":{\"21\":1,\"64\":1}}],[\"at\",{\"0\":{\"332\":1},\"1\":{\"21\":4,\"64\":4,\"191\":1,\"332\":5,\"578\":1,\"1411\":1,\"1469\":2}}],[\"asic\",{\"1\":{\"2180\":1}}],[\"asd方法\",{\"1\":{\"1904\":1}}],[\"aspect大于或等于1\",{\"1\":{\"2584\":1}}],[\"aspect小于或等于1\",{\"1\":{\"2583\":1}}],[\"aspect\",{\"0\":{\"2553\":1,\"2568\":1,\"2570\":1},\"1\":{\"2568\":1}}],[\"asp\",{\"1\":{\"1677\":1}}],[\"ascii\",{\"1\":{\"1021\":2}}],[\"ast用来描述代码本身形成树结构\",{\"1\":{\"1549\":1}}],[\"ast\",{\"0\":{\"1550\":1,\"1551\":1},\"1\":{\"895\":3,\"1549\":5,\"1550\":1,\"1552\":2,\"1553\":1}}],[\"assigned\",{\"1\":{\"1448\":1}}],[\"assignable\",{\"1\":{\"1338\":2,\"1340\":4,\"1370\":2,\"1428\":2,\"1442\":1}}],[\"assign\",{\"0\":{\"755\":1,\"762\":1},\"1\":{\"560\":1,\"755\":3,\"756\":1,\"762\":2,\"768\":1,\"1414\":1}}],[\"assets\",{\"1\":{\"40\":2}}],[\"async><\",{\"1\":{\"1707\":2}}],[\"asyncincrement\",{\"1\":{\"1168\":1}}],[\"async是\",{\"1\":{\"594\":1}}],[\"async和await\",{\"1\":{\"594\":1}}],[\"asyncadd\",{\"1\":{\"555\":4,\"557\":2}}],[\"asynchronous\",{\"1\":{\"457\":1}}],[\"async\",{\"0\":{\"593\":1,\"594\":1,\"596\":1,\"597\":1},\"1\":{\"299\":2,\"334\":10,\"345\":1,\"464\":2,\"471\":1,\"578\":1,\"594\":8,\"595\":11,\"596\":6,\"597\":2,\"816\":2,\"891\":2,\"1168\":1,\"1188\":2,\"1707\":3,\"1758\":1,\"1829\":1}}],[\"as\",{\"0\":{\"1446\":1},\"1\":{\"20\":1,\"63\":1,\"94\":1,\"274\":3,\"275\":3,\"276\":1,\"469\":2,\"470\":4,\"1159\":1,\"1160\":1,\"1183\":1,\"1184\":1,\"1188\":1,\"1222\":2,\"1288\":1,\"1366\":1,\"1443\":2,\"1446\":1}}],[\"wbs必须有利于责任分配\",{\"1\":{\"1954\":1}}],[\"wbs的工作包时可控和可管理的\",{\"1\":{\"1954\":1}}],[\"wbs分解的基本要求\",{\"1\":{\"1954\":1}}],[\"w+\",{\"1\":{\"1789\":6}}],[\"w3school\",{\"1\":{\"1677\":2}}],[\"w3c定义名称\",{\"1\":{\"413\":1}}],[\"w3c\",{\"1\":{\"147\":1}}],[\"wq\",{\"1\":{\"1058\":1,\"1067\":2}}],[\"wx\",{\"1\":{\"1040\":1}}],[\"w表示可写入\",{\"1\":{\"1038\":1}}],[\"w代表可写\",{\"1\":{\"1029\":1}}],[\"w<宽度>或\",{\"1\":{\"1009\":1}}],[\"w或\",{\"1\":{\"930\":1,\"1009\":1}}],[\"wtmp\",{\"1\":{\"921\":2}}],[\"wsr系统方法\",{\"0\":{\"1852\":1}}],[\"ws\",{\"1\":{\"865\":4,\"1248\":1,\"1335\":1}}],[\"wd\",{\"1\":{\"859\":3}}],[\"whether\",{\"1\":{\"2754\":1}}],[\"when\",{\"1\":{\"340\":1,\"584\":1,\"2842\":1}}],[\"why\",{\"1\":{\"1256\":1}}],[\"whoami\",{\"1\":{\"941\":1}}],[\"who\",{\"0\":{\"929\":1},\"1\":{\"930\":1,\"931\":1,\"1039\":5}}],[\"whitlist\",{\"1\":{\"860\":2}}],[\"white\",{\"1\":{\"21\":1,\"64\":1,\"94\":1,\"1256\":2}}],[\"whitespace\",{\"1\":{\"19\":1,\"23\":1,\"62\":1,\"66\":1}}],[\"while来遍历数组\",{\"1\":{\"890\":1}}],[\"while循环也至少会执行一次\",{\"1\":{\"890\":1}}],[\"while循环中的结束条件可以是各种类型\",{\"1\":{\"889\":1}}],[\"while和for一样\",{\"1\":{\"889\":1}}],[\"while\",{\"0\":{\"889\":1,\"890\":1},\"1\":{\"641\":1,\"657\":1,\"737\":1,\"749\":1,\"766\":1,\"767\":1,\"795\":2,\"889\":1,\"890\":1,\"1235\":1,\"1311\":1,\"1416\":1,\"1478\":1,\"1550\":2,\"1551\":1,\"1571\":1,\"2761\":1}}],[\"which\",{\"1\":{\"239\":1,\"2835\":1}}],[\"wo\",{\"1\":{\"280\":1,\"523\":1}}],[\"worst\",{\"1\":{\"1646\":2}}],[\"works\",{\"1\":{\"2695\":1}}],[\"work\",{\"1\":{\"1153\":1}}],[\"workers\",{\"1\":{\"902\":1}}],[\"worker\",{\"1\":{\"337\":1,\"343\":1,\"1152\":2,\"1153\":2}}],[\"world\",{\"1\":{\"279\":1,\"280\":1,\"281\":1,\"326\":4,\"332\":1,\"345\":1,\"354\":2,\"355\":2,\"364\":1,\"365\":1,\"388\":4,\"389\":1,\"428\":3,\"429\":2,\"522\":1,\"523\":1,\"524\":1,\"568\":2,\"594\":1,\"595\":3,\"616\":1,\"774\":1,\"792\":1,\"874\":2,\"883\":1,\"1016\":3,\"1387\":1,\"1418\":1,\"1527\":1,\"1549\":1,\"1649\":1,\"1664\":1}}],[\"word2\",{\"1\":{\"1062\":5}}],[\"word1\",{\"1\":{\"1062\":5}}],[\"wordbreak\",{\"1\":{\"136\":1}}],[\"word\",{\"1\":{\"19\":1,\"21\":3,\"62\":1,\"64\":3,\"533\":5,\"1062\":2}}],[\"wen\",{\"0\":{\"2038\":1}}],[\"went\",{\"1\":{\"341\":2}}],[\"wechatfactory\",{\"1\":{\"1755\":2}}],[\"wechat\",{\"1\":{\"1755\":1}}],[\"wechatlogin\",{\"1\":{\"1755\":2}}],[\"wechatauthfactory\",{\"1\":{\"1755\":2}}],[\"west\",{\"1\":{\"1407\":3,\"1408\":2}}],[\"weakmapcache\",{\"1\":{\"433\":4}}],[\"weakmap\",{\"1\":{\"433\":3}}],[\"were\",{\"1\":{\"328\":2}}],[\"webxrmanager\",{\"0\":{\"2810\":1}}],[\"webrtc\",{\"1\":{\"2462\":1}}],[\"webgl3drendertarget\",{\"1\":{\"2842\":1}}],[\"webglarrayrendertarget\",{\"1\":{\"2842\":1}}],[\"webgl环境丢失时会内部调用\",{\"1\":{\"2834\":1}}],[\"webglcontextattributes\",{\"0\":{\"2825\":1}}],[\"webglcuberendertarget\",{\"1\":{\"2562\":1,\"2741\":1,\"2835\":1,\"2842\":1}}],[\"webglshadowmap\",{\"0\":{\"2805\":1}}],[\"webgl2renderingcontext\",{\"0\":{\"2824\":1},\"1\":{\"2795\":1}}],[\"webglprogram\",{\"1\":{\"2741\":1,\"2743\":2}}],[\"webglrenderlists\",{\"0\":{\"2804\":1}}],[\"webglrendertarget\",{\"0\":{\"2835\":1,\"2842\":1},\"1\":{\"2741\":1}}],[\"webglrenderer\",{\"0\":{\"2688\":1,\"2785\":1,\"2786\":1,\"2788\":1},\"1\":{\"2741\":1,\"2743\":2,\"2744\":1}}],[\"webgl渲染器在采样此纹理时将使用绿色通道\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"webgl\",{\"1\":{\"2286\":1,\"2741\":1,\"2754\":1,\"2788\":1,\"2798\":4,\"2820\":1,\"2821\":1,\"2835\":1,\"2837\":3}}],[\"web服务\",{\"0\":{\"2038\":1}}],[\"web服务器接到请求时也能读出cookie的值\",{\"1\":{\"1658\":1}}],[\"webassembly\",{\"1\":{\"1641\":2}}],[\"webapp\",{\"1\":{\"1332\":1}}],[\"web为前面upstream定义的\",{\"1\":{\"1153\":1}}],[\"websocket>长连接\",{\"1\":{\"1737\":1}}],[\"websocket是一个全双工的协议\",{\"1\":{\"1737\":1}}],[\"websocket是html5定义的一个新协议议\",{\"1\":{\"1737\":1}}],[\"websocket是html5提供的一种浏览器与服务器进行全双工通讯的网络技术\",{\"1\":{\"1735\":1}}],[\"websocket特点\",{\"0\":{\"1736\":1}}],[\"websocket原理\",{\"1\":{\"1735\":1}}],[\"websocket的出现就解决了半双工通信的弊端\",{\"1\":{\"1735\":1}}],[\"websockets\",{\"0\":{\"1248\":1},\"1\":{\"1248\":1,\"2462\":1}}],[\"websocket\",{\"0\":{\"865\":1,\"1734\":1},\"1\":{\"865\":4,\"1248\":1},\"2\":{\"1739\":1}}],[\"webdav\",{\"1\":{\"817\":1}}],[\"webkitrelativepath\",{\"1\":{\"391\":1}}],[\"web\",{\"0\":{\"337\":1,\"338\":1,\"340\":1,\"341\":1,\"345\":1,\"1502\":1,\"1503\":1},\"1\":{\"215\":1,\"337\":3,\"338\":7,\"339\":4,\"340\":12,\"341\":4,\"342\":4,\"343\":4,\"344\":1,\"345\":3,\"450\":2,\"812\":1,\"817\":1,\"902\":1,\"1137\":1,\"1153\":3,\"1332\":1,\"1501\":2,\"1705\":1},\"2\":{\"347\":1}}],[\"web语义化是指使用语义恰当的标签\",{\"1\":{\"215\":1}}],[\"web语义化是指使用恰当语义的html标签\",{\"1\":{\"213\":1}}],[\"webpackdevserver\",{\"1\":{\"1332\":1}}],[\"webpack\",{\"1\":{\"208\":1,\"1332\":5,\"1549\":1}}],[\"webview\",{\"1\":{\"201\":1}}],[\"weibofactory\",{\"1\":{\"1755\":2}}],[\"weibo\",{\"1\":{\"1755\":1}}],[\"weibologin\",{\"1\":{\"1755\":2}}],[\"weiboauthfactory\",{\"1\":{\"1755\":2}}],[\"weijunext\",{\"1\":{\"1222\":1,\"1248\":1,\"1311\":1}}],[\"weixin\",{\"1\":{\"108\":2,\"109\":1}}],[\"weight=1\",{\"1\":{\"1153\":1}}],[\"weight\",{\"1\":{\"21\":1,\"64\":1}}],[\"wpdrrc模型包括6个环节和3大要素\",{\"1\":{\"2121\":1}}],[\"wpdrrc模型\",{\"0\":{\"2121\":1}}],[\"wp\",{\"1\":{\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":2,\"173\":1,\"174\":1}}],[\"w\",{\"1\":{\"109\":1,\"921\":2,\"1006\":1,\"1009\":1,\"1018\":1,\"1039\":1,\"1040\":1,\"1041\":1,\"1056\":1,\"1058\":1,\"1067\":4,\"1083\":1,\"1256\":1}}],[\"wireframelinewidth\",{\"0\":{\"2765\":1}}],[\"wireframe\",{\"0\":{\"2764\":1},\"1\":{\"2442\":2}}],[\"wireframegeometry\",{\"0\":{\"2441\":1,\"2442\":1},\"1\":{\"2442\":1}}],[\"wirtedata\",{\"1\":{\"128\":2}}],[\"wimax\",{\"1\":{\"2203\":1}}],[\"wifi\",{\"1\":{\"2203\":1}}],[\"will\",{\"1\":{\"340\":1}}],[\"with\",{\"0\":{\"1502\":1},\"1\":{\"326\":1,\"343\":1,\"596\":6,\"1152\":1,\"1265\":1,\"1467\":1,\"1472\":1,\"1501\":1,\"1505\":1,\"1525\":1,\"1548\":1}}],[\"win\",{\"1\":{\"1150\":2}}],[\"win64\",{\"1\":{\"94\":1}}],[\"window是全局对象global的引用\",{\"1\":{\"659\":1}}],[\"window\",{\"0\":{\"862\":1},\"1\":{\"202\":1,\"232\":1,\"234\":6,\"237\":1,\"239\":3,\"240\":1,\"261\":1,\"340\":2,\"350\":3,\"353\":9,\"354\":1,\"355\":3,\"356\":1,\"357\":1,\"362\":3,\"364\":2,\"365\":2,\"427\":1,\"428\":2,\"429\":2,\"436\":1,\"465\":1,\"467\":1,\"659\":1,\"815\":1,\"859\":1,\"861\":2,\"862\":2,\"863\":2,\"867\":1,\"896\":4,\"901\":5,\"902\":1,\"903\":2,\"1247\":4,\"1289\":1,\"1290\":5,\"1297\":1,\"1312\":1,\"1653\":1,\"1671\":2,\"1762\":1,\"2578\":1}}],[\"windows中的netstat等\",{\"1\":{\"2172\":1}}],[\"windowsize\",{\"1\":{\"1290\":1}}],[\"windows\",{\"0\":{\"909\":1},\"1\":{\"340\":1,\"909\":1,\"998\":1,\"1002\":1,\"1054\":1,\"1695\":1}}],[\"windows在换行的时候\",{\"1\":{\"102\":1}}],[\"windows下和linux下的文本文件的换行符不一致\",{\"1\":{\"102\":1}}],[\"wind\",{\"1\":{\"94\":9}}],[\"wind=tk\",{\"1\":{\"94\":1}}],[\"widthref\",{\"1\":{\"1290\":3}}],[\"width<宽度>\",{\"1\":{\"1009\":1}}],[\"width=device\",{\"1\":{\"202\":1,\"1839\":1}}],[\"width=8\",{\"1\":{\"94\":1}}],[\"width=18\",{\"1\":{\"94\":1}}],[\"width=30\",{\"1\":{\"94\":2}}],[\"width=20\",{\"1\":{\"94\":1}}],[\"width\",{\"0\":{\"2542\":1,\"2587\":1,\"2835\":1,\"2843\":1,\"2845\":1,\"2846\":1},\"1\":{\"21\":8,\"64\":8,\"118\":1,\"119\":1,\"127\":2,\"202\":3,\"204\":3,\"205\":3,\"207\":1,\"850\":8,\"1255\":4,\"1289\":1,\"1290\":1,\"1355\":1,\"1839\":1,\"2407\":3,\"2528\":2,\"2542\":1,\"2566\":1,\"2587\":1,\"2843\":1,\"2845\":1,\"2846\":1,\"2872\":2,\"2884\":1}}],[\"was\",{\"1\":{\"2455\":1,\"2462\":1}}],[\"wall模型的安全策略的基础是客户访问的信息不会与当前他们可支配的信息产生冲突\",{\"1\":{\"2119\":1}}],[\"wall模型\",{\"0\":{\"2119\":1}}],[\"walk\",{\"1\":{\"1534\":2,\"1535\":1}}],[\"way\",{\"1\":{\"1726\":1}}],[\"watch\",{\"1\":{\"1490\":1,\"1491\":5,\"1494\":1,\"1514\":1,\"1521\":1,\"1533\":1}}],[\"watcher使用\",{\"1\":{\"1569\":1}}],[\"watchers\",{\"1\":{\"1569\":2}}],[\"watcher实例添加到dep的subs容器里面\",{\"1\":{\"1561\":1}}],[\"watcher都会自增\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"watcher去重\",{\"1\":{\"1541\":1}}],[\"watcher的唯一标识\",{\"1\":{\"1493\":1,\"1557\":1,\"1561\":1,\"1571\":1}}],[\"watcher\",{\"0\":{\"1493\":1,\"1540\":1,\"1557\":1,\"1558\":1,\"1561\":1},\"1\":{\"1486\":1,\"1492\":3,\"1493\":9,\"1517\":1,\"1540\":2,\"1541\":5,\"1557\":4,\"1558\":2,\"1559\":3,\"1560\":3,\"1561\":3,\"1562\":7,\"1569\":1,\"1570\":6,\"1571\":10}}],[\"warn\",{\"1\":{\"1505\":2}}],[\"warnuser\",{\"1\":{\"1415\":1}}],[\"warning\",{\"1\":{\"21\":1,\"64\":1,\"1415\":1}}],[\"wan\",{\"1\":{\"2203\":1}}],[\"wantedby=multi\",{\"1\":{\"1137\":1}}],[\"wangwu\",{\"1\":{\"848\":1}}],[\"wangwang\",{\"1\":{\"317\":1}}],[\"wait2\",{\"1\":{\"1728\":1}}],[\"wait1\",{\"1\":{\"1728\":2}}],[\"wait\",{\"1\":{\"828\":3,\"831\":7,\"1728\":4,\"1729\":2}}],[\"waitadd\",{\"1\":{\"83\":4}}],[\"wade\",{\"1\":{\"762\":2}}],[\"wrong\",{\"1\":{\"341\":2}}],[\"writable\",{\"1\":{\"39\":1,\"490\":1,\"495\":1,\"930\":1,\"1467\":1}}],[\"writehead\",{\"1\":{\"864\":1}}],[\"writetext\",{\"1\":{\"344\":1}}],[\"writeid\",{\"1\":{\"128\":5}}],[\"write指令发送失败\",{\"1\":{\"127\":1}}],[\"write指令发送成功\",{\"1\":{\"127\":1}}],[\"writeblecharacteristicvalue\",{\"0\":{\"125\":1},\"1\":{\"124\":1,\"125\":3,\"127\":2,\"128\":3}}],[\"writefilesync\",{\"1\":{\"109\":1}}],[\"writeable\",{\"1\":{\"39\":1}}],[\"write\",{\"1\":{\"22\":1,\"27\":6,\"65\":1,\"70\":6,\"122\":1,\"128\":1,\"344\":1,\"1029\":1,\"1650\":1}}],[\"wrap\",{\"1\":{\"21\":1,\"64\":1}}],[\"www\",{\"1\":{\"20\":1,\"63\":1,\"239\":2,\"345\":1,\"816\":1,\"1029\":1,\"1036\":3,\"1153\":1,\"1677\":2}}],[\"iaas\",{\"1\":{\"2049\":1}}],[\"io\",{\"1\":{\"1730\":1}}],[\"ios8\",{\"1\":{\"208\":1}}],[\"icosahedrongeometry\",{\"0\":{\"2350\":1,\"2351\":1}}],[\"icon\",{\"1\":{\"127\":6,\"128\":1}}],[\"icu\",{\"1\":{\"1680\":1}}],[\"iworker\",{\"1\":{\"1460\":4}}],[\"it\",{\"1\":{\"1256\":1,\"1414\":1,\"1653\":2}}],[\"iterable\",{\"1\":{\"719\":2,\"874\":2}}],[\"iterator3\",{\"1\":{\"879\":2}}],[\"iterator2\",{\"1\":{\"879\":2}}],[\"iterator1\",{\"1\":{\"879\":2}}],[\"iterator\",{\"0\":{\"636\":1},\"1\":{\"252\":1,\"271\":1,\"272\":1,\"636\":1,\"879\":1}}],[\"iteration\",{\"1\":{\"21\":1,\"64\":1}}],[\"itemerror\",{\"0\":{\"2480\":1}}],[\"itemend\",{\"0\":{\"2479\":1}}],[\"itemx\",{\"1\":{\"703\":2}}],[\"item1\",{\"1\":{\"703\":2}}],[\"itemstart\",{\"0\":{\"2478\":1}}],[\"itemstotal\",{\"1\":{\"2455\":4,\"2462\":4,\"2468\":1,\"2470\":1}}],[\"itemsloaded\",{\"1\":{\"2455\":4,\"2462\":4,\"2468\":1,\"2470\":1}}],[\"itemsize\",{\"1\":{\"2278\":1}}],[\"items\",{\"1\":{\"169\":1,\"207\":1,\"455\":5,\"1235\":1,\"1311\":3,\"1425\":2,\"1535\":3}}],[\"item\",{\"1\":{\"109\":4,\"118\":5,\"119\":6,\"127\":6,\"128\":6,\"285\":2,\"299\":2,\"455\":1,\"693\":2,\"695\":2,\"709\":4,\"712\":3,\"713\":6,\"714\":2,\"715\":2,\"716\":2,\"718\":2,\"719\":2,\"724\":1,\"737\":2,\"767\":2,\"872\":3,\"873\":6,\"874\":2,\"875\":2,\"876\":4,\"878\":4,\"879\":6,\"891\":2,\"1168\":3,\"1425\":2,\"1551\":2,\"1806\":4,\"1814\":4}}],[\"iqiyi\",{\"1\":{\"1168\":1}}],[\"i为\",{\"1\":{\"1065\":1}}],[\"i<范本样式>\",{\"1\":{\"1018\":1}}],[\"i<字符或字符串>或\",{\"1\":{\"1009\":1}}],[\"i或\",{\"1\":{\"930\":1,\"1009\":1}}],[\"ilovayou\",{\"1\":{\"863\":1}}],[\"ipv4\",{\"0\":{\"2215\":1},\"1\":{\"2214\":1}}],[\"ipv6过渡技术\",{\"0\":{\"2215\":1}}],[\"ipv6继承了ipv4动态主机配置协议\",{\"1\":{\"2214\":1}}],[\"ipv6把自动ip地址配置作为标准功能\",{\"1\":{\"2214\":1}}],[\"ipv6规定每个网卡最少有3个ipv6地址\",{\"1\":{\"2214\":1}}],[\"ipv6没有广播的术语\",{\"1\":{\"2214\":1}}],[\"ipv6简化了报文头部格式\",{\"1\":{\"2214\":1}}],[\"ipv6中选项部分的出现方式也有所变化\",{\"1\":{\"2214\":1}}],[\"ipv6地址长度为128位\",{\"1\":{\"2214\":1}}],[\"ipv6是设计用于替代现代版本ip协议\",{\"1\":{\"2214\":1}}],[\"ipv6\",{\"0\":{\"2214\":1}}],[\"ip协议族\",{\"0\":{\"2209\":1},\"1\":{\"1711\":1}}],[\"ip协议查询mac地址\",{\"0\":{\"1691\":1}}],[\"iperson\",{\"1\":{\"1460\":4}}],[\"ip\",{\"1\":{\"855\":2,\"1102\":1,\"1152\":1,\"1153\":5,\"1688\":1,\"1689\":1,\"1696\":1},\"2\":{\"1733\":1}}],[\"iphone6\",{\"1\":{\"206\":1}}],[\"iis\",{\"1\":{\"1695\":1}}],[\"iife\",{\"0\":{\"445\":1},\"1\":{\"444\":2,\"445\":4,\"465\":1,\"902\":4,\"903\":3}}],[\"iiafe\",{\"1\":{\"334\":1}}],[\"i>\",{\"1\":{\"343\":5}}],[\"i18n\",{\"1\":{\"334\":1}}],[\"ie11\",{\"1\":{\"1334\":1}}],[\"ie11不支持\",{\"1\":{\"208\":1}}],[\"ie5\",{\"1\":{\"815\":1}}],[\"ie7+\",{\"1\":{\"815\":1}}],[\"ieee\",{\"1\":{\"606\":1}}],[\"ie8\",{\"1\":{\"517\":1}}],[\"ie6\",{\"1\":{\"517\":1,\"815\":1}}],[\"ie9+\",{\"1\":{\"232\":1}}],[\"ie9\",{\"1\":{\"232\":3,\"1334\":1}}],[\"ie\",{\"1\":{\"184\":1,\"232\":1,\"1876\":1}}],[\"iehack\",{\"1\":{\"183\":2}}],[\"islight\",{\"0\":{\"2857\":1}}],[\"isliteralcaseobjectextendsuppercaseobject\",{\"1\":{\"1431\":1}}],[\"ismaterial\",{\"0\":{\"2655\":1}}],[\"iscamera\",{\"0\":{\"2512\":1}}],[\"iscancel\",{\"1\":{\"1249\":1}}],[\"isbuffergeometry\",{\"0\":{\"2289\":1}}],[\"isboyjc\",{\"1\":{\"1644\":1}}],[\"isemail\",{\"1\":{\"1789\":2}}],[\"isenable\",{\"1\":{\"1429\":2}}],[\"isnan\",{\"1\":{\"1839\":1}}],[\"isnonempty\",{\"1\":{\"1789\":2}}],[\"isn\",{\"1\":{\"1726\":4}}],[\"isnumber\",{\"1\":{\"1438\":1}}],[\"isrealelement\",{\"1\":{\"1528\":2}}],[\"isrequired\",{\"1\":{\"1315\":1,\"1320\":1,\"1323\":1}}],[\"iswebgl2\",{\"1\":{\"2795\":1}}],[\"iswatcher\",{\"1\":{\"1493\":2,\"1571\":1}}],[\"iswritesuccess\",{\"1\":{\"128\":8}}],[\"istaff\",{\"1\":{\"1460\":3}}],[\"istype\",{\"1\":{\"590\":5}}],[\"isorthographiccamera\",{\"0\":{\"2534\":1}}],[\"isobject\",{\"1\":{\"1485\":2,\"1535\":1}}],[\"isolatedmodules\",{\"1\":{\"1454\":1}}],[\"isopenble\",{\"1\":{\"128\":3}}],[\"isuppercaseobjectextendsliteralcaseobject\",{\"1\":{\"1431\":1}}],[\"isatap隧道\",{\"1\":{\"2215\":1}}],[\"isactive=\",{\"1\":{\"1311\":3}}],[\"isarrray\",{\"1\":{\"681\":1}}],[\"isarray>\",{\"1\":{\"1382\":1}}],[\"isarray\",{\"1\":{\"590\":4,\"657\":2,\"681\":5,\"735\":1,\"736\":1,\"737\":1,\"760\":1,\"765\":1,\"768\":2,\"1491\":1,\"1534\":1,\"1535\":1,\"1563\":3}}],[\"isperspectivecamera\",{\"0\":{\"2576\":1}}],[\"ispending\",{\"1\":{\"1307\":2,\"1308\":3,\"1311\":1,\"1312\":3}}],[\"isp\",{\"0\":{\"1686\":1},\"1\":{\"1686\":1}}],[\"isprototypeof\",{\"1\":{\"681\":2}}],[\"isprimary\",{\"1\":{\"128\":1}}],[\"isdark\",{\"1\":{\"1265\":3,\"1267\":3}}],[\"isshadermaterial\",{\"0\":{\"2756\":1}}],[\"issamevnode\",{\"1\":{\"1478\":6}}],[\"issue\",{\"1\":{\"1125\":2}}],[\"isstring\",{\"1\":{\"590\":4,\"1438\":1}}],[\"isfunction\",{\"1\":{\"590\":1,\"1533\":3}}],[\"isview\",{\"0\":{\"401\":1},\"1\":{\"401\":3}}],[\"is\",{\"1\":{\"191\":1,\"237\":1,\"248\":1,\"261\":1,\"334\":1,\"341\":1,\"345\":1,\"445\":1,\"467\":1,\"500\":1,\"507\":1,\"511\":1,\"596\":3,\"864\":2,\"866\":1,\"898\":3,\"1236\":1,\"1256\":1,\"1273\":1,\"1338\":3,\"1340\":4,\"1370\":2,\"1372\":2,\"1414\":1,\"1415\":1,\"1427\":7,\"1428\":2,\"1438\":2,\"1442\":4,\"1445\":1,\"1446\":1,\"1448\":1,\"1505\":1,\"1637\":1,\"1653\":3,\"1705\":1,\"2754\":1,\"2756\":1,\"2761\":1,\"2795\":1,\"2835\":1}}],[\"isintersecting\",{\"1\":{\"87\":2}}],[\"i++\",{\"1\":{\"125\":1,\"127\":1,\"128\":1,\"226\":1,\"248\":2,\"418\":1,\"431\":1,\"436\":1,\"437\":1,\"506\":1,\"582\":1,\"583\":1,\"602\":1,\"645\":1,\"727\":1,\"735\":1,\"743\":1,\"748\":1,\"767\":1,\"888\":1,\"903\":4,\"1235\":1,\"1265\":1,\"1311\":1,\"1476\":1,\"1478\":2,\"1486\":1,\"1493\":1,\"1534\":1,\"1535\":1,\"1542\":1,\"1551\":1,\"1563\":1,\"1571\":1,\"1823\":1,\"1832\":1}}],[\"idbdatabase对象\",{\"1\":{\"1671\":2}}],[\"idbopendbrequest接口定义了几个重要属性\",{\"1\":{\"1671\":1}}],[\"id为685f868\",{\"1\":{\"1637\":1}}],[\"id怎么办\",{\"1\":{\"1615\":1}}],[\"id>\",{\"1\":{\"1614\":1}}],[\"id++\",{\"1\":{\"1493\":1,\"1557\":1,\"1559\":1,\"1561\":1,\"1562\":1,\"1571\":2}}],[\"identified\",{\"1\":{\"1472\":1}}],[\"identifier\",{\"1\":{\"250\":2}}],[\"identical\",{\"1\":{\"1009\":1}}],[\"idontloveyou\",{\"1\":{\"863\":1}}],[\"idle\",{\"1\":{\"379\":1,\"930\":1}}],[\"id=a3fwa\",{\"1\":{\"1659\":1}}],[\"id=1\",{\"1\":{\"1168\":2}}],[\"id=\",{\"1\":{\"234\":2,\"236\":1,\"239\":3,\"240\":1,\"241\":4,\"338\":4,\"339\":1,\"340\":3,\"341\":4,\"342\":2,\"343\":3,\"391\":2,\"392\":1,\"395\":3,\"413\":2,\"414\":2,\"436\":2,\"861\":1,\"862\":1,\"867\":1,\"1475\":1,\"1483\":1,\"1490\":1,\"1539\":1,\"1547\":1,\"1550\":1,\"1556\":1,\"1568\":1,\"1839\":2}}],[\"id\",{\"0\":{\"2287\":1,\"2664\":1},\"1\":{\"83\":2,\"119\":3,\"122\":2,\"123\":2,\"128\":2,\"241\":8,\"261\":9,\"270\":1,\"295\":3,\"341\":3,\"343\":2,\"391\":1,\"433\":18,\"434\":1,\"449\":1,\"458\":2,\"462\":1,\"464\":1,\"558\":1,\"874\":6,\"882\":3,\"929\":1,\"941\":1,\"953\":3,\"954\":1,\"992\":1,\"1035\":1,\"1210\":11,\"1212\":3,\"1265\":2,\"1267\":2,\"1302\":2,\"1366\":5,\"1372\":4,\"1411\":4,\"1460\":2,\"1493\":10,\"1527\":1,\"1539\":1,\"1541\":4,\"1547\":1,\"1549\":1,\"1556\":1,\"1557\":2,\"1559\":2,\"1561\":6,\"1562\":2,\"1568\":1,\"1571\":8,\"1614\":1,\"1653\":1,\"1706\":1,\"1707\":1,\"2282\":1}}],[\"implicitly\",{\"1\":{\"1366\":1}}],[\"implements\",{\"1\":{\"1437\":2}}],[\"implement\",{\"1\":{\"1338\":1}}],[\"important\",{\"1\":{\"1707\":1}}],[\"importhelpers\",{\"1\":{\"1454\":1}}],[\"imports\",{\"1\":{\"39\":2}}],[\"import\",{\"0\":{\"275\":1},\"1\":{\"38\":1,\"39\":11,\"80\":4,\"81\":1,\"82\":5,\"83\":6,\"88\":3,\"94\":2,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"274\":1,\"275\":6,\"276\":1,\"334\":10,\"467\":1,\"469\":1,\"470\":6,\"471\":5,\"472\":3,\"473\":1,\"474\":1,\"1157\":7,\"1158\":2,\"1159\":3,\"1160\":2,\"1161\":4,\"1162\":4,\"1163\":2,\"1167\":15,\"1168\":10,\"1173\":1,\"1174\":1,\"1175\":7,\"1176\":4,\"1177\":3,\"1178\":2,\"1180\":1,\"1181\":2,\"1182\":7,\"1183\":3,\"1184\":2,\"1185\":4,\"1186\":4,\"1187\":2,\"1188\":6,\"1196\":1,\"1197\":2,\"1200\":2,\"1204\":2,\"1211\":1,\"1220\":1,\"1222\":1,\"1227\":1,\"1229\":1,\"1235\":1,\"1243\":1,\"1244\":1,\"1251\":1,\"1255\":1,\"1256\":2,\"1265\":1,\"1269\":1,\"1281\":1,\"1288\":2,\"1289\":1,\"1299\":1,\"1300\":1,\"1311\":1,\"1312\":2,\"1315\":7,\"1320\":8,\"1321\":10,\"1323\":8,\"1324\":10,\"1334\":3,\"1354\":1,\"1484\":2,\"1492\":6,\"1493\":3,\"1501\":1,\"1502\":2,\"1503\":1,\"1504\":2,\"1505\":6,\"1525\":2,\"1527\":2,\"1528\":4,\"1533\":4,\"1535\":2,\"1540\":1,\"1541\":1,\"1543\":4,\"1548\":2,\"1549\":2,\"1561\":1,\"1571\":2,\"1817\":1,\"2359\":1}}],[\"immediate\",{\"1\":{\"831\":2,\"1492\":1}}],[\"immediately\",{\"1\":{\"445\":1}}],[\"ime\",{\"1\":{\"233\":1}}],[\"img>\",{\"1\":{\"859\":1}}],[\"img标签和background的\",{\"1\":{\"414\":1}}],[\"img\",{\"1\":{\"89\":1,\"178\":1,\"181\":1,\"395\":1,\"413\":1,\"472\":1,\"859\":1}}],[\"imgsrc\",{\"1\":{\"87\":2}}],[\"image各有不同的解析方式\",{\"1\":{\"1699\":1}}],[\"image\",{\"1\":{\"21\":3,\"64\":3,\"388\":4,\"472\":4,\"2795\":2}}],[\"i\",{\"1\":{\"37\":1,\"94\":1,\"109\":3,\"123\":5,\"125\":4,\"127\":9,\"128\":7,\"190\":1,\"192\":1,\"193\":1,\"226\":2,\"248\":9,\"267\":1,\"345\":1,\"376\":1,\"378\":1,\"379\":3,\"380\":1,\"418\":4,\"431\":2,\"436\":3,\"437\":2,\"462\":1,\"506\":7,\"537\":1,\"582\":7,\"583\":3,\"607\":2,\"645\":3,\"679\":4,\"692\":2,\"718\":3,\"727\":3,\"735\":5,\"743\":5,\"745\":2,\"748\":6,\"765\":7,\"767\":4,\"843\":2,\"881\":3,\"888\":3,\"903\":17,\"921\":2,\"930\":1,\"989\":1,\"995\":1,\"998\":1,\"999\":1,\"1001\":1,\"1003\":1,\"1009\":1,\"1015\":1,\"1018\":1,\"1056\":4,\"1057\":1,\"1065\":3,\"1080\":1,\"1109\":1,\"1235\":5,\"1265\":4,\"1311\":4,\"1476\":3,\"1478\":8,\"1486\":3,\"1493\":3,\"1534\":3,\"1535\":3,\"1542\":3,\"1551\":3,\"1563\":3,\"1571\":6,\"1823\":3,\"1832\":4,\"2176\":1,\"2446\":5,\"2473\":1,\"2741\":1}}],[\"ifdef<巨集名称>\",{\"1\":{\"1009\":1}}],[\"iframe>\",{\"1\":{\"388\":1,\"861\":1,\"862\":1,\"863\":1,\"867\":1}}],[\"iframe\",{\"0\":{\"867\":1},\"1\":{\"343\":2,\"388\":4,\"389\":3,\"861\":2,\"862\":5,\"863\":4,\"867\":1}}],[\"if\",{\"1\":{\"21\":1,\"64\":1,\"83\":1,\"87\":1,\"94\":1,\"109\":2,\"123\":1,\"127\":1,\"128\":16,\"237\":1,\"239\":2,\"248\":2,\"339\":2,\"341\":1,\"342\":2,\"343\":1,\"345\":2,\"358\":2,\"359\":2,\"395\":1,\"433\":1,\"465\":2,\"495\":1,\"505\":1,\"507\":7,\"559\":2,\"560\":1,\"566\":1,\"568\":1,\"569\":1,\"580\":6,\"582\":4,\"584\":13,\"590\":1,\"591\":2,\"624\":1,\"641\":2,\"657\":2,\"666\":2,\"681\":1,\"698\":2,\"735\":1,\"743\":1,\"746\":1,\"760\":2,\"765\":3,\"766\":3,\"767\":5,\"768\":4,\"774\":1,\"795\":2,\"805\":1,\"815\":1,\"817\":6,\"819\":2,\"828\":2,\"831\":2,\"860\":4,\"862\":1,\"864\":1,\"866\":1,\"898\":5,\"1152\":1,\"1222\":1,\"1235\":1,\"1249\":1,\"1251\":1,\"1255\":2,\"1256\":1,\"1285\":1,\"1286\":1,\"1289\":1,\"1315\":2,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":1,\"1416\":2,\"1423\":1,\"1426\":1,\"1435\":2,\"1436\":2,\"1437\":1,\"1468\":1,\"1476\":8,\"1477\":4,\"1478\":11,\"1479\":1,\"1485\":5,\"1486\":2,\"1491\":4,\"1492\":1,\"1493\":6,\"1505\":1,\"1525\":4,\"1528\":4,\"1533\":5,\"1534\":2,\"1535\":2,\"1541\":1,\"1542\":4,\"1548\":4,\"1549\":1,\"1550\":10,\"1551\":7,\"1557\":1,\"1560\":2,\"1561\":2,\"1562\":1,\"1563\":6,\"1564\":1,\"1570\":4,\"1571\":4,\"1653\":3,\"1754\":1,\"1772\":1,\"1773\":1,\"1774\":1,\"1789\":5,\"1798\":1,\"1814\":4,\"1839\":3,\"2756\":1,\"2795\":1}}],[\"ignorefiles\",{\"1\":{\"21\":1,\"64\":1}}],[\"ignoreunits\",{\"1\":{\"21\":1,\"64\":1}}],[\"ignoreatrules\",{\"1\":{\"21\":1,\"64\":1}}],[\"ignorepseudoelements\",{\"1\":{\"21\":1,\"64\":1}}],[\"ignorepseudoclasses\",{\"1\":{\"21\":1,\"64\":1}}],[\"ignore\",{\"1\":{\"20\":1,\"21\":2,\"22\":1,\"63\":1,\"64\":2,\"65\":1,\"208\":1,\"1009\":5}}],[\"irregular\",{\"1\":{\"19\":1,\"62\":1}}],[\"inject\",{\"1\":{\"1513\":2}}],[\"inactive\",{\"1\":{\"1374\":1}}],[\"in目录\",{\"1\":{\"1009\":1}}],[\"inum\",{\"1\":{\"662\":4}}],[\"in操作符可以用来判断一个属性是否属于一个对象\",{\"1\":{\"639\":1}}],[\"in操作符\",{\"0\":{\"639\":1}}],[\"inherits\",{\"1\":{\"495\":2}}],[\"increse\",{\"1\":{\"1817\":1}}],[\"increment\",{\"1\":{\"464\":4,\"1167\":4,\"1168\":2,\"1197\":4,\"1273\":3,\"1274\":4,\"1287\":2,\"1299\":4,\"1300\":4}}],[\"incompatible\",{\"1\":{\"1340\":1}}],[\"includes\",{\"0\":{\"279\":1,\"289\":1,\"522\":1},\"1\":{\"128\":2,\"279\":5,\"280\":1,\"289\":9,\"522\":5,\"708\":3,\"860\":1,\"1235\":1,\"1265\":1}}],[\"include\",{\"1\":{\"21\":1,\"64\":1,\"1152\":2,\"1153\":4,\"1453\":1}}],[\"invoker\",{\"1\":{\"1826\":2}}],[\"invoked\",{\"1\":{\"445\":1}}],[\"invalid\",{\"1\":{\"21\":1,\"64\":1}}],[\"infiniteloop\",{\"1\":{\"1416\":1}}],[\"infinity减infinity\",{\"1\":{\"617\":1}}],[\"infinity减\",{\"1\":{\"617\":1}}],[\"infinity加\",{\"1\":{\"616\":1}}],[\"infinity\",{\"1\":{\"20\":1,\"63\":1,\"282\":2,\"545\":1,\"616\":3,\"617\":3,\"618\":1,\"619\":2,\"623\":1,\"739\":4,\"763\":2,\"2285\":1}}],[\"infer在这里用于提取函数类型的返回值类型\",{\"1\":{\"1377\":1}}],[\"infer\",{\"0\":{\"1368\":1},\"1\":{\"1368\":3,\"1377\":2,\"1382\":1}}],[\"info\",{\"0\":{\"2800\":1},\"1\":{\"343\":1,\"578\":2,\"817\":1,\"1152\":1,\"2800\":2}}],[\"intro\",{\"1\":{\"843\":2}}],[\"int\",{\"1\":{\"642\":1}}],[\"int32array\",{\"1\":{\"402\":1,\"403\":2,\"404\":1,\"405\":1}}],[\"int32\",{\"1\":{\"402\":1}}],[\"int16array\",{\"1\":{\"402\":1,\"404\":1,\"406\":1}}],[\"int16\",{\"1\":{\"402\":1}}],[\"int8array\",{\"1\":{\"402\":1,\"403\":8,\"404\":1}}],[\"int8\",{\"1\":{\"402\":1}}],[\"into\",{\"1\":{\"340\":3}}],[\"intensity\",{\"0\":{\"2853\":1,\"2856\":1},\"1\":{\"2853\":1,\"2859\":1,\"2872\":2}}],[\"integer大于0\",{\"1\":{\"2795\":1}}],[\"integer\",{\"0\":{\"2287\":1,\"2297\":3,\"2319\":2,\"2331\":1,\"2335\":1,\"2336\":1,\"2338\":1,\"2343\":1,\"2425\":1,\"2426\":1,\"2639\":1,\"2640\":1,\"2641\":1,\"2642\":1,\"2644\":1,\"2645\":1,\"2651\":1,\"2657\":1,\"2658\":1,\"2659\":1,\"2660\":1,\"2661\":1,\"2662\":1,\"2663\":1,\"2664\":1,\"2669\":1,\"2670\":1,\"2674\":1,\"2675\":1,\"2680\":1,\"2711\":1,\"2826\":1,\"2827\":1,\"2835\":1,\"2842\":2,\"2843\":4,\"2845\":2,\"2846\":4,\"2852\":1},\"1\":{\"320\":2,\"2286\":3}}],[\"intervalid\",{\"1\":{\"1282\":2}}],[\"interval\",{\"1\":{\"1188\":2}}],[\"interval=s\",{\"1\":{\"992\":1}}],[\"interfaces\",{\"1\":{\"1338\":1}}],[\"interface\",{\"1\":{\"1054\":1,\"1167\":1,\"1338\":2,\"1339\":1,\"1340\":3,\"1341\":1,\"1342\":3,\"1344\":2,\"1346\":2,\"1348\":1,\"1349\":1,\"1361\":1,\"1365\":1,\"1366\":1,\"1369\":1,\"1370\":1,\"1371\":1,\"1372\":3,\"1374\":1,\"1375\":1,\"1376\":1,\"1380\":1,\"1388\":1,\"1405\":1,\"1422\":1,\"1429\":1,\"1435\":2,\"1437\":1,\"1460\":2}}],[\"interactive\",{\"1\":{\"998\":1,\"2835\":1}}],[\"intersection\",{\"1\":{\"271\":1,\"2647\":1}}],[\"intersectionobserver\",{\"1\":{\"87\":1}}],[\"interpolation\",{\"1\":{\"21\":1,\"64\":1}}],[\"innerwidth\",{\"1\":{\"1289\":1,\"1290\":2}}],[\"innertext\",{\"1\":{\"344\":1}}],[\"inner\",{\"1\":{\"234\":4,\"240\":4,\"431\":2,\"896\":2,\"897\":2}}],[\"innerhtml\",{\"1\":{\"231\":1,\"232\":1,\"237\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":8,\"342\":1,\"343\":5,\"436\":2,\"817\":2,\"821\":1,\"822\":1,\"823\":1,\"1476\":1,\"1653\":1,\"1832\":1}}],[\"inlinesources\",{\"1\":{\"1454\":1}}],[\"inlinesourcemap\",{\"1\":{\"1454\":2}}],[\"inline\",{\"1\":{\"147\":1,\"171\":1,\"172\":1,\"173\":1,\"184\":1}}],[\"indicesoffaces\",{\"1\":{\"2395\":2}}],[\"indices\",{\"1\":{\"2286\":1}}],[\"indicates\",{\"1\":{\"2842\":1}}],[\"indicate\",{\"1\":{\"122\":1}}],[\"indent\",{\"1\":{\"21\":1,\"23\":2,\"64\":1,\"66\":2}}],[\"index0attributename\",{\"0\":{\"2755\":1}}],[\"index时\",{\"1\":{\"2653\":1}}],[\"indexed\",{\"1\":{\"2288\":1}}],[\"indexeddb\",{\"0\":{\"1669\":1},\"1\":{\"1669\":3,\"1670\":6,\"1671\":4}}],[\"indexdb\",{\"1\":{\"1671\":3}}],[\"index代表匹配到的位置\",{\"1\":{\"1551\":1}}],[\"index=\",{\"1\":{\"1311\":1}}],[\"index2\",{\"1\":{\"864\":3}}],[\"index++\",{\"1\":{\"109\":1,\"1541\":1}}],[\"indexof\",{\"0\":{\"520\":1},\"1\":{\"83\":1,\"289\":4,\"520\":5,\"521\":1,\"536\":1,\"682\":1,\"708\":3,\"1550\":1}}],[\"index\",{\"0\":{\"1157\":1,\"1173\":1,\"1181\":1,\"1503\":1,\"1504\":1,\"1505\":1,\"2288\":1,\"2318\":1},\"1\":{\"21\":1,\"64\":1,\"80\":1,\"88\":1,\"109\":4,\"284\":5,\"286\":2,\"324\":2,\"363\":3,\"463\":4,\"517\":7,\"536\":1,\"678\":2,\"703\":2,\"705\":5,\"706\":2,\"712\":4,\"864\":2,\"865\":3,\"866\":2,\"867\":5,\"872\":6,\"873\":2,\"875\":2,\"876\":3,\"877\":6,\"878\":3,\"1146\":1,\"1150\":1,\"1152\":11,\"1153\":3,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1167\":4,\"1168\":1,\"1173\":1,\"1181\":1,\"1183\":2,\"1184\":2,\"1188\":1,\"1311\":2,\"1338\":2,\"1340\":4,\"1357\":4,\"1366\":1,\"1411\":1,\"1478\":3,\"1484\":1,\"1492\":3,\"1502\":2,\"1503\":1,\"1504\":2,\"1505\":1,\"1525\":1,\"1527\":3,\"1528\":1,\"1533\":2,\"1534\":1,\"1535\":2,\"1541\":3,\"1543\":2,\"1548\":1,\"1549\":1,\"1551\":6,\"1560\":1,\"1563\":1,\"1584\":3,\"1677\":1,\"2309\":1,\"2318\":1}}],[\"input<\",{\"1\":{\"1281\":2}}],[\"inputref\",{\"1\":{\"1279\":2,\"1281\":6}}],[\"inputvalue\",{\"1\":{\"1212\":3}}],[\"input\",{\"0\":{\"391\":1},\"1\":{\"109\":2,\"324\":2,\"343\":4,\"391\":6,\"392\":1,\"395\":2,\"413\":1,\"536\":1,\"725\":1,\"1839\":11}}],[\"in\",{\"0\":{\"639\":1,\"718\":1,\"779\":1,\"881\":1,\"1367\":1,\"1435\":1},\"1\":{\"21\":1,\"64\":1,\"83\":1,\"118\":1,\"119\":1,\"127\":1,\"268\":1,\"334\":1,\"342\":1,\"343\":2,\"471\":2,\"482\":2,\"578\":1,\"639\":3,\"653\":2,\"717\":1,\"718\":3,\"719\":7,\"760\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":2,\"779\":4,\"874\":2,\"881\":4,\"886\":1,\"1222\":2,\"1338\":2,\"1367\":2,\"1371\":2,\"1372\":7,\"1373\":2,\"1374\":1,\"1375\":1,\"1376\":1,\"1435\":2,\"1469\":2,\"1477\":4,\"1485\":2,\"1491\":1,\"1501\":1,\"1528\":2,\"1533\":1,\"1569\":1,\"2424\":1,\"2710\":1,\"2754\":1,\"2761\":1,\"2795\":2,\"2835\":1,\"2842\":1}}],[\"instead\",{\"1\":{\"1256\":1}}],[\"instructions\",{\"1\":{\"986\":1}}],[\"instance\",{\"0\":{\"1505\":1},\"1\":{\"1504\":1,\"1773\":4,\"1774\":3}}],[\"instanceof运算符可以用来测试一个对象在其原型链中是否存在一个构造函数的\",{\"1\":{\"641\":1}}],[\"instanceof运算符用来判断一个构造函数的prototype属性所指向的对象是否存在另外一个要检测对象的原型链上\",{\"1\":{\"641\":1}}],[\"instanceof只能正确判断引用数据类型\",{\"1\":{\"641\":1}}],[\"instanceof操作符\",{\"0\":{\"641\":1}}],[\"instanceofblob\",{\"1\":{\"389\":1}}],[\"instanceof\",{\"0\":{\"641\":1,\"657\":1,\"1437\":1},\"1\":{\"358\":1,\"580\":1,\"581\":2,\"641\":7,\"657\":14,\"658\":2,\"681\":2,\"765\":1,\"1437\":1,\"1505\":1}}],[\"install\",{\"1\":{\"4\":1,\"14\":1,\"21\":1,\"36\":1,\"39\":1,\"46\":1,\"57\":1,\"64\":1,\"79\":1,\"80\":1,\"88\":1,\"1036\":3,\"1073\":1,\"1133\":1,\"1134\":1,\"1137\":1,\"1143\":1,\"1328\":1,\"1472\":1}}],[\"inserted是一个数组\",{\"1\":{\"1535\":1}}],[\"inserted\",{\"1\":{\"1535\":5,\"1564\":5}}],[\"insertbefore方法\",{\"1\":{\"1478\":1}}],[\"insertbefore\",{\"1\":{\"1476\":1,\"1478\":6,\"1528\":1}}],[\"insert\",{\"1\":{\"23\":1,\"66\":1,\"1057\":1,\"1065\":3}}],[\"insertpragma\",{\"1\":{\"20\":1,\"63\":1}}],[\"inittexture\",{\"0\":{\"2833\":1}}],[\"initcomputed\",{\"1\":{\"1533\":2,\"1569\":1}}],[\"initdata\",{\"1\":{\"1533\":3}}],[\"initmethods\",{\"1\":{\"1533\":2}}],[\"initmixin\",{\"0\":{\"1507\":1},\"1\":{\"1484\":2,\"1492\":2,\"1505\":2,\"1525\":1,\"1527\":2,\"1528\":2,\"1533\":4,\"1543\":2,\"1548\":1}}],[\"initprops\",{\"1\":{\"1533\":2}}],[\"initprovide\",{\"0\":{\"1515\":1}}],[\"init方法是挂载在vue原型的方法\",{\"1\":{\"1533\":1}}],[\"init方法的对象\",{\"1\":{\"1486\":1,\"1525\":1,\"1533\":1,\"1548\":1}}],[\"initinjections\",{\"0\":{\"1513\":1},\"1\":{\"1515\":1}}],[\"initialize\",{\"1\":{\"1448\":4}}],[\"initialization\",{\"1\":{\"249\":1,\"511\":1}}],[\"initialarg\",{\"1\":{\"1273\":5,\"1274\":1}}],[\"initialdata\",{\"1\":{\"1267\":1}}],[\"initialstate\",{\"1\":{\"1167\":2,\"1168\":2,\"1273\":2,\"1287\":2,\"1297\":2}}],[\"initialvalue\",{\"1\":{\"284\":5,\"705\":5,\"877\":5,\"1274\":2}}],[\"initial\",{\"1\":{\"171\":1,\"202\":2,\"1009\":1,\"1159\":2,\"1173\":2,\"1183\":2,\"1839\":1}}],[\"initrender\",{\"0\":{\"1511\":1}}],[\"initevents\",{\"0\":{\"1510\":1}}],[\"initlifecycle\",{\"0\":{\"1509\":1}}],[\"initwatch\",{\"1\":{\"1491\":2,\"1533\":2}}],[\"initstate\",{\"0\":{\"1514\":1},\"1\":{\"1486\":1,\"1491\":1,\"1525\":2,\"1533\":4,\"1548\":2}}],[\"initglobalapi\",{\"1\":{\"1484\":1,\"1492\":2,\"1504\":2}}],[\"initblue\",{\"1\":{\"117\":2,\"118\":2,\"119\":2,\"127\":2}}],[\"init\",{\"0\":{\"1274\":1},\"1\":{\"7\":1,\"26\":1,\"50\":1,\"69\":1,\"189\":1,\"338\":6,\"1273\":4,\"1274\":12,\"1484\":2,\"1486\":2,\"1492\":2,\"1505\":2,\"1507\":1,\"1525\":2,\"1526\":1,\"1527\":2,\"1528\":2,\"1533\":5,\"1536\":1,\"1543\":2,\"1548\":2,\"1558\":1,\"1583\":1,\"1758\":5,\"1829\":2}}],[\"类脑芯片\",{\"1\":{\"2180\":1}}],[\"类图与对象图\",{\"0\":{\"1914\":1}}],[\"类簇一般用于父类的定义\",{\"1\":{\"1755\":1}}],[\"类别\",{\"1\":{\"1752\":1}}],[\"类装饰器顾名思义\",{\"1\":{\"1466\":1}}],[\"类装饰器声明\",{\"1\":{\"1466\":1}}],[\"类装饰器\",{\"0\":{\"1466\":1},\"1\":{\"1465\":1,\"1466\":1}}],[\"类的分类\",{\"0\":{\"1936\":1}}],[\"类的静态属性和方法是直接定义在类本身上面的\",{\"1\":{\"1391\":1}}],[\"类的定义\",{\"0\":{\"1386\":1}}],[\"类里面可以访问\",{\"1\":{\"1390\":1}}],[\"类里面\",{\"1\":{\"1390\":2}}],[\"类里面的修饰符\",{\"0\":{\"1390\":1}}],[\"类是一种面向对象计算机编程语言的构造\",{\"1\":{\"1386\":1}}],[\"类等在外部是不可见的\",{\"1\":{\"1354\":1}}],[\"类组件\",{\"0\":{\"1319\":1}}],[\"类及回调函数来发送\",{\"1\":{\"559\":1}}],[\"类名\",{\"1\":{\"469\":1}}],[\"类似地\",{\"1\":{\"1764\":1}}],[\"类似仅作用在类型层面的强制类型转换\",{\"1\":{\"1443\":1}}],[\"类似另存新档\",{\"1\":{\"1067\":1}}],[\"类似于单例模式的概念\",{\"1\":{\"1767\":1}}],[\"类似于\",{\"1\":{\"1002\":1,\"1054\":1,\"1527\":1}}],[\"类似\",{\"1\":{\"378\":1,\"521\":1,\"576\":1,\"663\":1,\"813\":1,\"883\":1,\"885\":1,\"1003\":1,\"1454\":1,\"1526\":1,\"1549\":1,\"1558\":1}}],[\"类似数组的对象\",{\"1\":{\"286\":1,\"678\":1}}],[\"类用于创建或加入频道\",{\"1\":{\"343\":1}}],[\"类数组因为不是真正的数组\",{\"1\":{\"731\":1}}],[\"类数组转为数组\",{\"0\":{\"730\":1}}],[\"类数组应用场景\",{\"0\":{\"726\":1}}],[\"类数组概述\",{\"0\":{\"722\":1}}],[\"类数组对象\",{\"0\":{\"721\":1}}],[\"类数组对象有\",{\"1\":{\"254\":1}}],[\"类数组\",{\"1\":{\"299\":1,\"719\":1,\"874\":1,\"888\":1,\"891\":1}}],[\"类型去解析响应内容\",{\"1\":{\"1699\":1}}],[\"类型又是\",{\"1\":{\"1460\":1}}],[\"类型检测无法做到绝对智能\",{\"1\":{\"1443\":1}}],[\"类型断言好比其他语言里的类型转换\",{\"1\":{\"1443\":1}}],[\"类型断言\",{\"0\":{\"1443\":1},\"1\":{\"1443\":1}}],[\"类型而完全不被类型检查\",{\"1\":{\"1442\":1}}],[\"类型推断\",{\"0\":{\"1442\":1}}],[\"类型推断与断言\",{\"0\":{\"1441\":1},\"2\":{\"1450\":1}}],[\"类型保护只支持两种形式\",{\"1\":{\"1436\":1}}],[\"类型守卫\",{\"0\":{\"1434\":1},\"2\":{\"1440\":1}}],[\"类型也不能赋给\",{\"1\":{\"1431\":2}}],[\"类型是\",{\"1\":{\"1427\":1}}],[\"类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型\",{\"1\":{\"1416\":1}}],[\"类型改变为\",{\"1\":{\"1418\":1}}],[\"类型本身\",{\"1\":{\"1418\":1}}],[\"类型本质上是类型系统的一个逃逸舱\",{\"1\":{\"1417\":1}}],[\"类型和\",{\"1\":{\"1418\":1}}],[\"类型只能被赋值给\",{\"1\":{\"1418\":1}}],[\"类型系统的另一种顶级类型\",{\"1\":{\"1418\":1}}],[\"类型成为了类型系统的顶级类型\",{\"1\":{\"1417\":1}}],[\"类型同\",{\"1\":{\"1416\":1}}],[\"类型会被收窄为\",{\"1\":{\"1416\":1}}],[\"类型表示的是那些永不存在的值的类型\",{\"1\":{\"1416\":1}}],[\"类型必须匹配且个数必须为2\",{\"1\":{\"1410\":1}}],[\"类型必须为\",{\"1\":{\"1366\":1}}],[\"类型中除了\",{\"1\":{\"1380\":1}}],[\"类型并使用\",{\"1\":{\"1366\":1}}],[\"类型不一定是\",{\"1\":{\"1427\":1}}],[\"类型不能被用于索引\",{\"1\":{\"1366\":1}}],[\"类型不相同的话\",{\"1\":{\"627\":1}}],[\"类型变量\",{\"1\":{\"1365\":1}}],[\"类型别名常用于联合类型\",{\"1\":{\"1459\":1}}],[\"类型别名用来给一个类型起个新名字\",{\"1\":{\"1459\":1}}],[\"类型别名扩展接口\",{\"0\":{\"1349\":1}}],[\"类型别名扩展类型别名\",{\"0\":{\"1347\":1}}],[\"类型别名不可以\",{\"0\":{\"1344\":1}}],[\"类型别名还可以用于其他类型\",{\"1\":{\"1343\":1}}],[\"类型别名\",{\"0\":{\"1457\":1,\"1459\":1},\"1\":{\"1341\":1,\"1460\":1},\"2\":{\"1462\":1}}],[\"类型转换仅在使用宽松相等运算符时发生\",{\"1\":{\"772\":1}}],[\"类型转换是将一种数据类型转换为另一种数据类型\",{\"1\":{\"772\":1}}],[\"类型转换\",{\"0\":{\"771\":1,\"803\":1},\"2\":{\"809\":1}}],[\"类型标签存储在每个单元的低位中\",{\"1\":{\"642\":1}}],[\"类型标签\",{\"1\":{\"642\":1}}],[\"类型化数组本质上只是一个视图层\",{\"1\":{\"402\":1}}],[\"类型化数组元素默认值为\",{\"1\":{\"402\":1}}],[\"类型化数组的所有成员的类型和格式相同\",{\"1\":{\"402\":1}}],[\"类型化数组的元素都是连续的\",{\"1\":{\"402\":1}}],[\"类型化数组\",{\"1\":{\"402\":1}}],[\"类型的一致性\",{\"1\":{\"1938\":1}}],[\"类型的时候\",{\"1\":{\"1454\":1}}],[\"类型的特性来实现全面性检查\",{\"1\":{\"1416\":1}}],[\"类型的变量没有什么大用\",{\"1\":{\"1415\":1}}],[\"类型的所有属性\",{\"1\":{\"1380\":1}}],[\"类型的所有键\",{\"1\":{\"1366\":1}}],[\"类型的话\",{\"1\":{\"1378\":1}}],[\"类型的子类型\",{\"1\":{\"1366\":1,\"1427\":1}}],[\"类型的值\",{\"1\":{\"1418\":1}}],[\"类型的值也可以赋值给任何类型\",{\"1\":{\"1418\":1}}],[\"类型的值执行任何操作\",{\"1\":{\"1417\":1}}],[\"类型的值时\",{\"1\":{\"768\":1}}],[\"类型的值进行运算时\",{\"1\":{\"667\":1}}],[\"类型的属性\",{\"1\":{\"755\":1}}],[\"类型的\",{\"1\":{\"390\":1,\"662\":1}}],[\"类型的实例\",{\"1\":{\"328\":1}}],[\"类型如下\",{\"1\":{\"388\":1}}],[\"类型\",{\"0\":{\"444\":1,\"1395\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1405\":1,\"1406\":1,\"1410\":1,\"1415\":1,\"1416\":1,\"1417\":1,\"1418\":1},\"1\":{\"123\":1,\"309\":1,\"320\":2,\"388\":3,\"389\":1,\"765\":1,\"1339\":1,\"1360\":1,\"1363\":1,\"1365\":1,\"1366\":3,\"1376\":1,\"1378\":2,\"1381\":1,\"1416\":5,\"1417\":1,\"1418\":1,\"1427\":3,\"1428\":1,\"1430\":1,\"1447\":1,\"1460\":1,\"1520\":1,\"1752\":1,\"2744\":3},\"2\":{\"1433\":1}}],[\"类型定义了不同的成员\",{\"1\":{\"1460\":1}}],[\"类型定义\",{\"1\":{\"30\":1,\"73\":1}}],[\"类\",{\"0\":{\"1385\":1,\"1774\":1},\"1\":{\"19\":1,\"62\":1,\"479\":1,\"1517\":1},\"2\":{\"1394\":1}}],[\"函数依赖\",{\"0\":{\"2247\":1}}],[\"函数形参与实参的数量\",{\"1\":{\"1938\":1}}],[\"函数外部的变量依然指向函数内部的局部变量\",{\"1\":{\"1645\":1}}],[\"函数外面的\",{\"1\":{\"897\":1}}],[\"函数外面使用\",{\"1\":{\"334\":1}}],[\"函数核心代码主要\",{\"1\":{\"1527\":1}}],[\"函数转化成虚拟\",{\"0\":{\"1527\":1}}],[\"函数重载\",{\"0\":{\"1426\":1}}],[\"函数重命名\",{\"1\":{\"470\":1}}],[\"函数声明\",{\"0\":{\"1420\":1}}],[\"函数声明式\",{\"1\":{\"500\":1}}],[\"函数类型等原子类型合并成交叉类型\",{\"1\":{\"1460\":1}}],[\"函数类型\",{\"0\":{\"1419\":1}}],[\"函数呢\",{\"1\":{\"1366\":1}}],[\"函数为例\",{\"1\":{\"1366\":1}}],[\"函数进行状态更新时\",{\"1\":{\"1308\":1}}],[\"函数更新\",{\"0\":{\"1303\":1}}],[\"函数式更新\",{\"0\":{\"1300\":1},\"1\":{\"1300\":1}}],[\"函数只在初次渲染时执行\",{\"1\":{\"1297\":1}}],[\"函数只在组件初次渲染时执行一次\",{\"1\":{\"1274\":1}}],[\"函数可能会更为高效\",{\"1\":{\"1274\":1}}],[\"函数具有更大的灵活性\",{\"1\":{\"1274\":1}}],[\"函数组件\",{\"0\":{\"1322\":1}}],[\"函数组件中执行副作用\",{\"1\":{\"1243\":1}}],[\"函数组件的重新渲染并不会带来明显的性能问题\",{\"1\":{\"1212\":1}}],[\"函数才会重新创建\",{\"1\":{\"1210\":1}}],[\"函数才会被重新创建\",{\"1\":{\"1208\":1}}],[\"函数体\",{\"1\":{\"1210\":1}}],[\"函数体内所有对\",{\"1\":{\"507\":1}}],[\"函数用于\",{\"1\":{\"1209\":1}}],[\"函数引用保持不变\",{\"1\":{\"1208\":1}}],[\"函数也是一种闭包\",{\"1\":{\"903\":1}}],[\"函数运行的结果当做索引的值传递给\",{\"1\":{\"902\":1}}],[\"函数就拥有了\",{\"1\":{\"901\":1}}],[\"函数就是一个异步操作的容器\",{\"1\":{\"592\":1}}],[\"函数赋值后\",{\"1\":{\"901\":1}}],[\"函数是可以访问到\",{\"1\":{\"901\":1}}],[\"函数是不会执行的\",{\"1\":{\"709\":1,\"878\":1}}],[\"函数是不支持默认参数的\",{\"1\":{\"256\":1}}],[\"函数恰恰引用了\",{\"1\":{\"901\":1}}],[\"函数里还可以选择返回一个\",{\"1\":{\"1241\":1}}],[\"函数里\",{\"1\":{\"897\":1}}],[\"函数里面的\",{\"1\":{\"896\":1}}],[\"函数里面的参数对象\",{\"1\":{\"721\":1}}],[\"函数解构\",{\"0\":{\"846\":1}}],[\"函数映射\",{\"1\":{\"839\":1}}],[\"函数显式完成\",{\"1\":{\"789\":1}}],[\"函数将被重新执行\",{\"1\":{\"1264\":1}}],[\"函数将数据类型显式转换为字符串\",{\"1\":{\"781\":1}}],[\"函数将字符串转为数值\",{\"1\":{\"663\":1}}],[\"函数迭代\",{\"0\":{\"736\":1}}],[\"函数一样\",{\"1\":{\"666\":1}}],[\"函数整体转换字符串的类型\",{\"1\":{\"663\":1}}],[\"函数严格很多\",{\"1\":{\"663\":1}}],[\"函数做强制类型转换时\",{\"1\":{\"662\":1}}],[\"函数默认的返回值\",{\"1\":{\"654\":2}}],[\"函数默认参数\",{\"0\":{\"256\":1}}],[\"函数返回的类型都可以根据上下文推断出来\",{\"1\":{\"1442\":1}}],[\"函数返回的是\",{\"1\":{\"594\":1}}],[\"函数返回一个\",{\"1\":{\"595\":1}}],[\"函数完成\",{\"1\":{\"595\":1}}],[\"函数完成异步操作的情况\",{\"1\":{\"590\":1}}],[\"函数表达式\",{\"0\":{\"1421\":1},\"1\":{\"594\":1}}],[\"函数接受\",{\"1\":{\"592\":1,\"1274\":1}}],[\"函数以及\",{\"1\":{\"592\":1}}],[\"函数以及它在其范围内保留的内容\",{\"1\":{\"432\":1}}],[\"函数库可以自动执行\",{\"1\":{\"592\":1}}],[\"函数库用于处理\",{\"1\":{\"592\":1}}],[\"函数库\",{\"0\":{\"592\":1,\"764\":1}}],[\"函数实现同样的异步操作\",{\"1\":{\"591\":1}}],[\"函数实际上也是存在提升的\",{\"1\":{\"500\":1}}],[\"函数相互嵌套\",{\"1\":{\"588\":1}}],[\"函数嵌套使用\",{\"1\":{\"588\":1}}],[\"函数时传入错误的参数类型\",{\"1\":{\"1366\":1}}],[\"函数时\",{\"1\":{\"1309\":1}}],[\"函数时会等待得到结果之后再执行后面的代码\",{\"1\":{\"555\":1}}],[\"函数时需要查看函数代码才能找到参数\",{\"1\":{\"269\":1}}],[\"函数块的顶部和\",{\"1\":{\"507\":1}}],[\"函数调用缺少参数\",{\"1\":{\"654\":2}}],[\"函数调用不会造成阻塞\",{\"1\":{\"595\":1}}],[\"函数调用时\",{\"1\":{\"505\":1}}],[\"函数调用带有\",{\"1\":{\"341\":1}}],[\"函数内部变量是无法在外部访问的\",{\"1\":{\"900\":1}}],[\"函数内部调用\",{\"1\":{\"729\":1}}],[\"函数内部的代码\",{\"1\":{\"505\":1}}],[\"函数内部定义的变量会被销毁\",{\"1\":{\"501\":1}}],[\"函数内部使用\",{\"1\":{\"334\":1}}],[\"函数执行结束之后\",{\"1\":{\"501\":1}}],[\"函数执行上下文对象\",{\"1\":{\"352\":1}}],[\"函数执行上下文用的不多\",{\"1\":{\"350\":1}}],[\"函数执行上下文\",{\"1\":{\"350\":2}}],[\"函数作用域\",{\"0\":{\"897\":1}}],[\"函数作用域是在函数内部定义的变量或者函数\",{\"1\":{\"501\":1}}],[\"函数作为\",{\"1\":{\"1274\":1}}],[\"函数作为参数\",{\"1\":{\"592\":1}}],[\"函数作为一个属性的对象\",{\"1\":{\"455\":1}}],[\"函数作为构造函数使用\",{\"1\":{\"359\":1}}],[\"函数或类\",{\"1\":{\"469\":1}}],[\"函数来进行改变\",{\"1\":{\"732\":1}}],[\"函数来异步调用模块\",{\"1\":{\"464\":1}}],[\"函数来导入模块\",{\"1\":{\"451\":1}}],[\"函数范围内的变量在函数退出调用堆栈后\",{\"1\":{\"431\":1}}],[\"函数之后\",{\"1\":{\"428\":1}}],[\"函数后执行\",{\"1\":{\"374\":1}}],[\"函数本身是通过\",{\"1\":{\"360\":1}}],[\"函数在\",{\"1\":{\"353\":1}}],[\"函数在浏览器全局环境中直接使用不带任何修饰的函数引用进行调用\",{\"1\":{\"353\":1}}],[\"函数的入参分别为\",{\"1\":{\"1464\":1}}],[\"函数的作用\",{\"1\":{\"1366\":1}}],[\"函数的作用域的变量\",{\"1\":{\"901\":1}}],[\"函数的作用域指向全局作用域\",{\"1\":{\"901\":2}}],[\"函数的注意事项\",{\"1\":{\"1273\":1}}],[\"函数的引用\",{\"1\":{\"901\":1}}],[\"函数的内部变量\",{\"1\":{\"900\":1}}],[\"函数的内部指针对象的\",{\"1\":{\"592\":1}}],[\"函数的方式\",{\"1\":{\"734\":1}}],[\"函数的方式和通过\",{\"1\":{\"591\":1}}],[\"函数的参数序列化成字符串\",{\"1\":{\"902\":1}}],[\"函数的参数相加的效果\",{\"1\":{\"731\":1}}],[\"函数的参数传递给\",{\"1\":{\"729\":1}}],[\"函数的返回值\",{\"1\":{\"595\":1}}],[\"函数的自动执行\",{\"1\":{\"592\":1}}],[\"函数的结合是否能带来一定的便捷性呢\",{\"1\":{\"590\":1}}],[\"函数的执行上下文中\",{\"1\":{\"505\":1}}],[\"函数的执行上下文\",{\"1\":{\"505\":1}}],[\"函数的调用方式\",{\"1\":{\"352\":1}}],[\"函数的\",{\"0\":{\"352\":1},\"1\":{\"658\":1}}],[\"函数的上下文可以有任意多个\",{\"1\":{\"350\":1}}],[\"函数中进行定义的\",{\"1\":{\"897\":1}}],[\"函数中定义的变量叫作函数变量\",{\"1\":{\"897\":1}}],[\"函数中作为局部变量的\",{\"1\":{\"896\":1}}],[\"函数中\",{\"1\":{\"365\":1}}],[\"函数中的原因\",{\"1\":{\"595\":1}}],[\"函数中的\",{\"1\":{\"360\":1}}],[\"函数中的代码会有属于它自己的执行上下文\",{\"1\":{\"350\":1}}],[\"函数中来在代码中包含\",{\"1\":{\"334\":1}}],[\"函数中可用\",{\"1\":{\"334\":1}}],[\"函数和方法以这种方式将对象参数转换为数字\",{\"1\":{\"806\":1}}],[\"函数和上面的执行效果其实是一样的\",{\"1\":{\"590\":1}}],[\"函数和\",{\"1\":{\"334\":1}}],[\"函数不接受参数\",{\"1\":{\"300\":1}}],[\"函数扩展\",{\"0\":{\"296\":1}}],[\"函数会在组件卸载的时候执行\",{\"1\":{\"1241\":1}}],[\"函数会从字符串中读取一个数字并删除它后面所有字符\",{\"1\":{\"797\":1}}],[\"函数会执行到下一个存在\",{\"1\":{\"587\":1}}],[\"函数会根据传入字符串参数\",{\"1\":{\"269\":1}}],[\"函数会被注入一个参数为当前的事件对象\",{\"1\":{\"232\":1}}],[\"函数参数表面上是一个数组\",{\"1\":{\"254\":1}}],[\"函数参数解构赋值\",{\"1\":{\"254\":1}}],[\"函数\",{\"0\":{\"257\":1,\"1274\":1,\"1484\":1,\"1552\":1},\"1\":{\"19\":1,\"62\":1,\"257\":1,\"270\":1,\"284\":1,\"334\":1,\"338\":1,\"340\":2,\"341\":1,\"343\":1,\"374\":1,\"458\":1,\"464\":2,\"469\":3,\"502\":2,\"567\":1,\"578\":1,\"580\":1,\"590\":3,\"592\":5,\"595\":1,\"636\":1,\"666\":1,\"705\":1,\"729\":1,\"805\":1,\"1200\":1,\"1204\":2,\"1211\":1,\"1241\":2,\"1273\":2,\"1274\":5,\"1354\":1,\"1366\":1,\"1370\":1,\"1458\":1,\"1467\":1,\"1491\":1,\"1511\":1,\"1526\":1,\"1527\":1,\"1534\":1,\"1547\":1,\"1549\":1,\"1644\":1}}],[\"不再支持在\",{\"1\":{\"2741\":1}}],[\"不再接收客户端发的数据了\",{\"1\":{\"1729\":1}}],[\"不使用近似值来表示光与表面的相互作用\",{\"1\":{\"2717\":1}}],[\"不使用警告音\",{\"1\":{\"989\":1}}],[\"不对灯光作出反应\",{\"1\":{\"2695\":1}}],[\"不应该被更改\",{\"1\":{\"2678\":1,\"2679\":1}}],[\"不久以后\",{\"1\":{\"2141\":1}}],[\"不久以后该指令可能再次执行\",{\"1\":{\"2141\":1}}],[\"不改变的特性\",{\"1\":{\"2125\":1}}],[\"不改变原数组的方法\",{\"1\":{\"682\":1}}],[\"不依赖其他请求\",{\"1\":{\"2078\":1}}],[\"不依赖于\",{\"1\":{\"575\":1}}],[\"不设立独立的核心资源小组\",{\"1\":{\"2016\":1}}],[\"不设置包序号\",{\"1\":{\"1716\":1}}],[\"不考虑动态负载\",{\"1\":{\"2077\":1}}],[\"不考虑任何资源限制\",{\"1\":{\"1955\":1}}],[\"不考虑它的长度\",{\"1\":{\"526\":1}}],[\"不关心项的数据结构\",{\"1\":{\"1832\":1}}],[\"不知道谁发起请求\",{\"1\":{\"1826\":1}}],[\"不知道如何执行与谁执行\",{\"1\":{\"1826\":1}}],[\"不适用于简单对象的创建\",{\"1\":{\"1751\":1}}],[\"不暴露具体的逻辑\",{\"1\":{\"1747\":1}}],[\"不论是否有数据更新\",{\"1\":{\"1737\":1}}],[\"不论页面宽度变大还是缩小\",{\"1\":{\"206\":1}}],[\"不采用三次握手\",{\"1\":{\"1727\":1}}],[\"不采用正常程序来关机\",{\"1\":{\"919\":1}}],[\"不携带数据则不消耗序号\",{\"1\":{\"1726\":1}}],[\"不内置客户端或网络反馈机制\",{\"1\":{\"1716\":1}}],[\"不进行拥塞控制\",{\"1\":{\"1716\":1}}],[\"不进入主线程\",{\"1\":{\"372\":1}}],[\"不跟踪连接状态\",{\"1\":{\"1716\":1}}],[\"不重排\",{\"1\":{\"1716\":1}}],[\"不重传\",{\"1\":{\"1716\":1}}],[\"不确认\",{\"1\":{\"1716\":1}}],[\"不确定需要什么类型\",{\"1\":{\"805\":1}}],[\"不保证交付顺序\",{\"1\":{\"1716\":1}}],[\"不保正消息交付\",{\"1\":{\"1716\":1}}],[\"不保存\",{\"1\":{\"1067\":1}}],[\"不保存修改\",{\"1\":{\"1056\":1,\"1058\":1}}],[\"不保存原来的文件名称及时间戳记\",{\"1\":{\"1021\":1}}],[\"不保存额外的文件属性\",{\"1\":{\"1018\":1}}],[\"不支持阴影\",{\"1\":{\"2872\":1}}],[\"不支持多播和广播传输方式\",{\"1\":{\"1713\":1}}],[\"不支持读写\",{\"1\":{\"1661\":1}}],[\"不阻止解析\",{\"1\":{\"1707\":2}}],[\"不和服务端进行通信\",{\"1\":{\"1663\":1,\"1667\":1}}],[\"不想被客户端\",{\"1\":{\"1661\":1}}],[\"不想页面跳转\",{\"1\":{\"239\":1}}],[\"不够大\",{\"1\":{\"1660\":1}}],[\"不连续的\",{\"1\":{\"1646\":1}}],[\"不断执行这个过程\",{\"1\":{\"1637\":1}}],[\"不断的\",{\"1\":{\"1550\":1}}],[\"不但会把本地的\",{\"1\":{\"1610\":1}}],[\"不希望一些文件出现在跟踪列表中\",{\"1\":{\"1583\":1}}],[\"不停的进行依赖收集\",{\"1\":{\"1563\":1}}],[\"不然会引发匹配bug\",{\"1\":{\"1551\":1}}],[\"不然student\",{\"1\":{\"488\":1}}],[\"不影响核心功能就不实现了\",{\"1\":{\"1549\":1}}],[\"不影响代码运行的变动\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"不破坏封装的前提下\",{\"1\":{\"1535\":1}}],[\"不生成输出文件\",{\"1\":{\"1454\":1}}],[\"不等价\",{\"1\":{\"1442\":3}}],[\"不等于任何其他类型\",{\"1\":{\"802\":1}}],[\"不等于和等于相反\",{\"1\":{\"627\":1}}],[\"不等于\",{\"1\":{\"627\":1}}],[\"不稳定的\",{\"1\":{\"1285\":1}}],[\"不涉及其它\",{\"1\":{\"1212\":1}}],[\"不意味着总是会带来性能提升\",{\"1\":{\"1212\":1}}],[\"不直接修改容器中的状态\",{\"1\":{\"1173\":1}}],[\"不理会文件名称或硬连接是否存在以及该文件是否为符号连接\",{\"1\":{\"1021\":1}}],[\"不去更动原始文件\",{\"1\":{\"1021\":1}}],[\"不压缩具有特定字尾字符串的文件\",{\"1\":{\"1018\":1}}],[\"不比较选项中所指定的文件或目录\",{\"1\":{\"1009\":1}}],[\"不检查大小写的不同\",{\"1\":{\"1009\":1}}],[\"不检查空白行\",{\"1\":{\"1009\":1}}],[\"不检查空格字符的不同\",{\"1\":{\"1009\":1}}],[\"不必是唯一的\",{\"1\":{\"2665\":1}}],[\"不必重写材质\",{\"1\":{\"2633\":1}}],[\"不必重复的占用磁盘空间\",{\"1\":{\"1002\":1}}],[\"不必建立连接或重启状态机\",{\"1\":{\"1716\":1}}],[\"不必要的复杂性\",{\"1\":{\"1269\":1}}],[\"不必要的空白等\",{\"1\":{\"502\":1}}],[\"不复制文件\",{\"1\":{\"998\":1}}],[\"不显示安装的过程\",{\"1\":{\"1072\":1}}],[\"不显示错误信息\",{\"1\":{\"1032\":1}}],[\"不显示警告信息\",{\"1\":{\"1021\":1}}],[\"不显示指令执行过程\",{\"1\":{\"1018\":1}}],[\"不显示文件名称\",{\"1\":{\"1012\":1}}],[\"不显示详细的信息\",{\"1\":{\"1009\":1}}],[\"不显示处理信息\",{\"1\":{\"992\":1}}],[\"不显示下引号\",{\"1\":{\"986\":1}}],[\"不以卷动的方式显示每一页\",{\"1\":{\"986\":1}}],[\"不递归列出目录内的文件\",{\"1\":{\"972\":1}}],[\"不呼叫\",{\"1\":{\"921\":1}}],[\"不把记录写到\",{\"1\":{\"921\":1}}],[\"不做\",{\"1\":{\"919\":1}}],[\"不靠扩展名区分文件类型\",{\"1\":{\"909\":1}}],[\"不用删除\",{\"1\":{\"1478\":1}}],[\"不用再计算了\",{\"1\":{\"902\":1}}],[\"不用考虑不同平台的字节序问题\",{\"1\":{\"408\":1}}],[\"不建议使用do\",{\"1\":{\"890\":1}}],[\"不符合同源策略导致的后果有\",{\"1\":{\"855\":1}}],[\"不符合规则\",{\"1\":{\"32\":1,\"75\":1}}],[\"不一定是在\",{\"1\":{\"1707\":1}}],[\"不一定和删除的元素数量相等\",{\"1\":{\"703\":1}}],[\"不一致\",{\"1\":{\"1200\":1,\"1285\":1}}],[\"不一样\",{\"1\":{\"658\":1,\"1236\":1}}],[\"不添加参数是不行的\",{\"1\":{\"698\":1}}],[\"不包含结束索引\",{\"1\":{\"683\":1}}],[\"不包括源端口\",{\"1\":{\"2208\":1}}],[\"不包括字符串属性\",{\"1\":{\"884\":1}}],[\"不包括该元素\",{\"1\":{\"702\":1}}],[\"不包括\",{\"1\":{\"400\":1}}],[\"不包括继承来的属性\",{\"1\":{\"295\":1,\"882\":1}}],[\"不包括数组中被删除或从未被赋值的元素\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"不存在部分依赖\",{\"1\":{\"2251\":1}}],[\"不存在中心化的硬件或管理机构\",{\"1\":{\"2132\":1}}],[\"不存在只改写一部分数据的情况\",{\"1\":{\"1670\":1}}],[\"不存在花括号变量表达式\",{\"1\":{\"1551\":1}}],[\"不存在则\",{\"1\":{\"1001\":1}}],[\"不存在的就建一个\",{\"1\":{\"975\":1}}],[\"不存在\",{\"1\":{\"681\":1}}],[\"不允许对另一级别进行读写\",{\"1\":{\"2117\":1}}],[\"不允许\",{\"1\":{\"1454\":1}}],[\"不允许给目录创建硬链接\",{\"1\":{\"1002\":1}}],[\"不允许我们在外面访问使用\",{\"1\":{\"657\":1}}],[\"不允许多个空行\",{\"1\":{\"19\":1,\"62\":1}}],[\"不相等运算符会返回true\",{\"1\":{\"627\":1}}],[\"不全等\",{\"1\":{\"627\":1}}],[\"不容易正确配置\",{\"1\":{\"465\":1}}],[\"不常用\",{\"1\":{\"388\":1}}],[\"不管是开始还是结束标签\",{\"1\":{\"1550\":1}}],[\"不管之后有没有赋值\",{\"1\":{\"1442\":1}}],[\"不管元辰还是本地都可以生效etc\",{\"1\":{\"1125\":1}}],[\"不管promise最后的状态如何\",{\"1\":{\"575\":1}}],[\"不管变量声明是写在哪里\",{\"1\":{\"500\":1}}],[\"不管给函数\",{\"1\":{\"355\":1}}],[\"不管发送数据还是读取数据\",{\"1\":{\"116\":1}}],[\"不过度设计\",{\"1\":{\"1904\":1}}],[\"不过⼏乎不⽤做什么处理\",{\"1\":{\"1730\":1}}],[\"不过我们可以不考虑这个\",{\"1\":{\"1650\":1}}],[\"不过虽然\",{\"1\":{\"1649\":1}}],[\"不过一般不建议这样写\",{\"1\":{\"1386\":1}}],[\"不过$\",{\"1\":{\"1104\":1}}],[\"不过会以一页一页的形式显示\",{\"1\":{\"985\":1}}],[\"不过会返回一个从原始字符串的结尾删除了空白的新字符串\",{\"1\":{\"309\":1,\"541\":1}}],[\"不过会返回一个从原始字符串的开头删除了空白的新字符串\",{\"1\":{\"308\":1,\"540\":1}}],[\"不过只要两个操作数中的一个为真\",{\"1\":{\"625\":1}}],[\"不过按语法说明\",{\"1\":{\"595\":1}}],[\"不过catch方法还有一个作用\",{\"1\":{\"572\":1}}],[\"不过\",{\"1\":{\"507\":1,\"562\":1,\"569\":1,\"1067\":1,\"1443\":1,\"2132\":1}}],[\"不过这里也一起说了\",{\"1\":{\"694\":1}}],[\"不过这也直接导致了函数中的变量无论是在哪里声明的\",{\"1\":{\"501\":1}}],[\"不过这一用法要求相应的文件后缀名必须为\",{\"1\":{\"474\":1}}],[\"不过由于\",{\"1\":{\"448\":1}}],[\"不过在引用计数这种算法出现没多久\",{\"1\":{\"1646\":1}}],[\"不过在模板字符串中定义\",{\"1\":{\"255\":1}}],[\"不过在这里\",{\"1\":{\"152\":1}}],[\"不含继承的和\",{\"1\":{\"295\":1,\"882\":1}}],[\"不会\",{\"1\":{\"2744\":1}}],[\"不会循环处理\",{\"1\":{\"2311\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2323\":1}}],[\"不会将消息直接发送给特定的接收者\",{\"1\":{\"1810\":1}}],[\"不会影响到对方\",{\"1\":{\"1804\":1}}],[\"不会影响阻塞后面的代码执行\",{\"1\":{\"555\":1}}],[\"不会发生队首阻塞\",{\"1\":{\"1716\":1}}],[\"不会发生数字转换\",{\"1\":{\"802\":1}}],[\"不会任何拼接操作\",{\"1\":{\"1712\":1}}],[\"不会对数据报文进行任何拆分和拼接操作\",{\"1\":{\"1712\":1}}],[\"不会自动\",{\"1\":{\"1609\":1}}],[\"不会去调用\",{\"1\":{\"1571\":1}}],[\"不会触发重新渲染或其他效应\",{\"1\":{\"1285\":1}}],[\"不会触发渲染\",{\"1\":{\"1279\":1}}],[\"不会进行重新渲染\",{\"1\":{\"1273\":1}}],[\"不会阻止网络请求\",{\"1\":{\"1236\":1}}],[\"不会询问\",{\"1\":{\"1001\":1}}],[\"不会建立新的档案\",{\"1\":{\"981\":1}}],[\"不会早早地把编译工作做完\",{\"1\":{\"895\":1}}],[\"不会拷贝对象的不可枚举的属性\",{\"1\":{\"755\":1}}],[\"不会遍历其原型链上的属性\",{\"1\":{\"719\":1,\"874\":1}}],[\"不会删除属性指向的对象\",{\"1\":{\"640\":1}}],[\"不会继续执行后面的方法\",{\"1\":{\"624\":1}}],[\"不会像线程切换那样消耗资源\",{\"1\":{\"589\":1}}],[\"不会执行\",{\"1\":{\"1086\":2}}],[\"不会执行任何语句\",{\"1\":{\"587\":2}}],[\"不会执行函数\",{\"1\":{\"355\":1}}],[\"不会停止运行\",{\"1\":{\"572\":1}}],[\"不会反映到外部\",{\"1\":{\"565\":1}}],[\"不会在原数组上建立内存\",{\"1\":{\"403\":1}}],[\"不会存储数据\",{\"1\":{\"402\":1}}],[\"不会为空\",{\"1\":{\"402\":1}}],[\"不会修改原始字符串\",{\"1\":{\"308\":1,\"309\":1,\"540\":1,\"541\":1}}],[\"不会改变原始数组\",{\"1\":{\"713\":1,\"873\":1}}],[\"不会改变原对象\",{\"1\":{\"286\":1,\"678\":1}}],[\"不会改变原数组的值\",{\"1\":{\"713\":1}}],[\"不会改变原数组\",{\"1\":{\"285\":1,\"714\":1,\"875\":1}}],[\"不会重叠浮动元素\",{\"1\":{\"184\":1}}],[\"不严格相等于自身\",{\"1\":{\"272\":1}}],[\"不可重读读加锁\",{\"0\":{\"2263\":1}}],[\"不可重复读问题\",{\"1\":{\"2259\":1}}],[\"不可\",{\"1\":{\"2260\":1}}],[\"不可逆\",{\"1\":{\"2108\":1}}],[\"不可抵赖\",{\"1\":{\"2006\":1}}],[\"不可否认性\",{\"1\":{\"2006\":1}}],[\"不可避免带有传统软件工程的一些弊端\",{\"1\":{\"1906\":1}}],[\"不可靠性\",{\"1\":{\"1712\":1}}],[\"不可再分的词法单元\",{\"1\":{\"895\":1}}],[\"不可或缺的一部分\",{\"1\":{\"431\":1}}],[\"不可改变是因为构件没有持久化的标志\",{\"1\":{\"2020\":1}}],[\"不可改变\",{\"1\":{\"399\":1}}],[\"不可作为构造函数\",{\"0\":{\"262\":1}}],[\"不可修改\",{\"1\":{\"247\":1}}],[\"不绑定\",{\"0\":{\"261\":1,\"263\":1}}],[\"不传入参数\",{\"1\":{\"260\":1}}],[\"不能部分地完成\",{\"1\":{\"2258\":1}}],[\"不能还原\",{\"1\":{\"2256\":1}}],[\"不能及时通知dns\",{\"1\":{\"2077\":1}}],[\"不能确定其他构件是否会响应它\",{\"1\":{\"1987\":1}}],[\"不能系统地表达一个项目所包含的各项工作之间的复杂关系\",{\"1\":{\"1956\":1}}],[\"不能过于复杂\",{\"1\":{\"1954\":1}}],[\"不能⼀次提取任意字节的数据\",{\"1\":{\"1731\":1}}],[\"不能有重复\",{\"1\":{\"1670\":1}}],[\"不能被枚举\",{\"1\":{\"1535\":1}}],[\"不能被删除\",{\"1\":{\"432\":1}}],[\"不能赋值给类型\",{\"1\":{\"1427\":1}}],[\"不能直接赋值\",{\"1\":{\"1415\":1}}],[\"不能直接读写所存储的数据\",{\"1\":{\"397\":1}}],[\"不能遍历普通的\",{\"1\":{\"879\":1}}],[\"不能进行隐式转换\",{\"1\":{\"803\":1}}],[\"不能等于其他任何值\",{\"1\":{\"802\":1}}],[\"不能转化为对象\",{\"1\":{\"755\":1}}],[\"不能转换为对象\",{\"1\":{\"254\":1}}],[\"不能检测\",{\"1\":{\"657\":1}}],[\"不能访问\",{\"1\":{\"653\":1}}],[\"不能与其他数据进行运算\",{\"1\":{\"653\":1}}],[\"不能与其他的数据进行比较以及运算\",{\"1\":{\"653\":1}}],[\"不能用于控制文本输入\",{\"1\":{\"1309\":1}}],[\"不能用于字符串的拼接\",{\"1\":{\"617\":1}}],[\"不能用于从文件系统中按路径名简单地读取文件\",{\"1\":{\"393\":1}}],[\"不能在⼀个返回表达式的箭头函数中设置断点\",{\"1\":{\"596\":1}}],[\"不能在模块中的任何地方用作变量名\",{\"1\":{\"467\":1}}],[\"不能向父类构造函数不能传递参数\",{\"1\":{\"485\":1}}],[\"不能给已声明的变量进行赋值\",{\"1\":{\"253\":1}}],[\"不能够完全适配所有的屏幕尺寸\",{\"1\":{\"204\":1}}],[\"不同层次之间耦合度高的系统很难实现\",{\"1\":{\"1983\":1}}],[\"不同等价类\",{\"1\":{\"1939\":1}}],[\"不同类型的事件处理等\",{\"1\":{\"1835\":1}}],[\"不同类型数据的解构方式不同\",{\"1\":{\"251\":1}}],[\"不同分支差异\",{\"0\":{\"1636\":1}}],[\"不同\",{\"1\":{\"1581\":1}}],[\"不同的式回收期间同时会将保留的存储对象搬运汇集到连续的内存空间\",{\"1\":{\"1641\":1}}],[\"不同的依赖数组的区别\",{\"0\":{\"1244\":1}}],[\"不同的是存储器和外设的配置和封装\",{\"1\":{\"2179\":1}}],[\"不同的是先显示内容再清除其他旧资料\",{\"1\":{\"986\":1}}],[\"不同的是它可以获得有效的小数\",{\"1\":{\"663\":1}}],[\"不同的是构造函数习惯上首字母大写\",{\"1\":{\"478\":1}}],[\"不同之处在于内置的uniforms和attributes的定义不会自动添加到glsl\",{\"1\":{\"2617\":1}}],[\"不同之处在于\",{\"1\":{\"322\":1,\"644\":1}}],[\"不同于设备像素\",{\"1\":{\"202\":1}}],[\"不仅可以储存字符串\",{\"1\":{\"1670\":1}}],[\"不仅可以描述html\",{\"1\":{\"1549\":1}}],[\"不仅是小\",{\"1\":{\"1431\":1}}],[\"不仅用于等\",{\"1\":{\"595\":1}}],[\"不仅支持使用\",{\"1\":{\"448\":1}}],[\"不仅\",{\"1\":{\"240\":1}}],[\"不仅麻烦\",{\"1\":{\"181\":1}}],[\"不兼容使用安全漏洞\",{\"1\":{\"2101\":1}}],[\"不兼容\",{\"1\":{\"239\":1,\"517\":1}}],[\"不要针对实现编程\",{\"1\":{\"1937\":1}}],[\"不要在\",{\"1\":{\"1309\":1}}],[\"不要怀疑\",{\"1\":{\"1063\":1}}],[\"不要覆盖任何已存在的文件或目录\",{\"1\":{\"1001\":1}}],[\"不要自动建立用户的登入目录\",{\"1\":{\"944\":1}}],[\"不要使用\",{\"1\":{\"226\":1}}],[\"不要把节点的属性值放在一个循环里当成循环里的变量\",{\"1\":{\"226\":1}}],[\"不是在特定照明下调整材质以使其看起来很好\",{\"1\":{\"2717\":1}}],[\"不是最终产品\",{\"1\":{\"1959\":1}}],[\"不是虚拟\",{\"1\":{\"1520\":1}}],[\"不是\",{\"1\":{\"1340\":1}}],[\"不是所有的状态更新都被视为等同的\",{\"1\":{\"1308\":1}}],[\"不是所有的组件都需要优化\",{\"1\":{\"1269\":1}}],[\"不是不存在编译阶段的\",{\"1\":{\"895\":1}}],[\"不是一个数组\",{\"1\":{\"725\":2}}],[\"不是一个数字\",{\"1\":{\"656\":1}}],[\"不是数值时\",{\"1\":{\"677\":1}}],[\"不是严谨的实例\",{\"1\":{\"657\":1}}],[\"不是严格相等的\",{\"1\":{\"320\":1}}],[\"不是块级作用域\",{\"1\":{\"501\":1}}],[\"不是<title>\",{\"1\":{\"218\":1}}],[\"不是真实存在的\",{\"1\":{\"202\":1}}],[\"不方便维护\",{\"1\":{\"204\":1}}],[\"不需要知道这些菜是怎么做的\",{\"1\":{\"1747\":1}}],[\"不需要建立过多的tp请求\",{\"1\":{\"1737\":1}}],[\"不需要确认\",{\"1\":{\"1716\":1}}],[\"不需要考虑内存中对象的引用关系改变\",{\"1\":{\"1649\":1}}],[\"不需要移动说明没有key复用的\",{\"1\":{\"1478\":1}}],[\"不需要立即同步读取或更改\",{\"1\":{\"1258\":1}}],[\"不需要在这个文件写server的配置\",{\"1\":{\"1153\":1}}],[\"不需要在定义模块的时候声明依赖\",{\"1\":{\"464\":1}}],[\"不需要鼠标\",{\"1\":{\"1054\":1}}],[\"不需要等待异步代码执行的返回结果\",{\"1\":{\"555\":1}}],[\"不需要再解析一遍去获取代码中声明了哪些变量\",{\"1\":{\"502\":1}}],[\"不需要特定的异步线程去执行\",{\"1\":{\"376\":1}}],[\"不需要关心值本身\",{\"1\":{\"269\":1}}],[\"不需要进行转换的类名\",{\"1\":{\"208\":1}}],[\"不需要设置\",{\"1\":{\"178\":1}}],[\"不需要写文件开头的\",{\"1\":{\"20\":1,\"63\":1}}],[\"不省略括号\",{\"1\":{\"20\":1,\"63\":1}}],[\"或像素\",{\"1\":{\"2742\":1}}],[\"或meshphongmaterial\",{\"1\":{\"2717\":1}}],[\"或materials\",{\"1\":{\"2674\":1}}],[\"或光照球\",{\"1\":{\"2695\":1}}],[\"或链路\",{\"1\":{\"2201\":1}}],[\"或是其它类型的object\",{\"1\":{\"2836\":1}}],[\"或是面向特定用途的标准产品\",{\"1\":{\"2179\":1}}],[\"或是padding\",{\"1\":{\"151\":1}}],[\"或片外存储控制接口\",{\"1\":{\"2179\":1}}],[\"或对国家安全造成损害\",{\"1\":{\"2111\":1}}],[\"或损害社会秩序和公共利益\",{\"1\":{\"2111\":1}}],[\"或接收\",{\"1\":{\"2010\":1}}],[\"或构件之间的关系\",{\"1\":{\"2010\":1}}],[\"或该活动最迟开始时间与最早开始时间之差\",{\"1\":{\"1955\":1}}],[\"或形式化方法\",{\"1\":{\"1906\":1}}],[\"或消亡原有系统\",{\"1\":{\"1847\":1}}],[\"或访问行为不一致等情况\",{\"1\":{\"1762\":1}}],[\"或有效期\",{\"1\":{\"1659\":1}}],[\"或自定义\",{\"1\":{\"1309\":1}}],[\"或特定\",{\"1\":{\"1247\":1}}],[\"或其他\",{\"1\":{\"2462\":1}}],[\"或其他实时通信技术时\",{\"1\":{\"1248\":1}}],[\"或其他可能因为函数引用改变而导致意外行为的场合\",{\"1\":{\"1209\":1}}],[\"或其他slice生成的actions\",{\"1\":{\"1168\":1}}],[\"或其他值\",{\"1\":{\"201\":1}}],[\"或功能键\",{\"1\":{\"1061\":1}}],[\"或将文件或目录移入其它位置\",{\"1\":{\"1000\":1}}],[\"或某些临时的故障\",{\"1\":{\"817\":1}}],[\"或内置\",{\"1\":{\"805\":1}}],[\"或通过使用逻辑运算符\",{\"1\":{\"789\":1}}],[\"或长度大于等于\",{\"1\":{\"677\":1}}],[\"或没有设置该参数时\",{\"1\":{\"550\":1}}],[\"或检索与正则表达式相匹配的子字符串\",{\"1\":{\"537\":1}}],[\"或找到一个或多个正则表达式的匹配\",{\"1\":{\"536\":1}}],[\"或替换一个与正则表达式匹配的子串\",{\"1\":{\"535\":1}}],[\"或blob\",{\"1\":{\"413\":1}}],[\"或工作程序都将接收从此处发送的消息\",{\"1\":{\"343\":1}}],[\"或在渲染外部创建的对象\",{\"1\":{\"1236\":1}}],[\"或在\",{\"1\":{\"340\":1}}],[\"或小程序向其他蓝牙设备发送指令\",{\"1\":{\"124\":1}}],[\"或者第一个三角面片的索引\",{\"1\":{\"2286\":1}}],[\"或者不明确哪个处理者应当负责处理特定请求\",{\"1\":{\"1838\":1}}],[\"或者代码逻辑很复杂\",{\"1\":{\"1753\":1}}],[\"或者应⽤层由于某些原因不能及时将\",{\"1\":{\"1730\":1}}],[\"或者执行下面的命令\",{\"1\":{\"1615\":1}}],[\"或者是rendertarget\",{\"1\":{\"2836\":1}}],[\"或者是别的⽤途的数据那么就需要处理粘包\",{\"1\":{\"1730\":1}}],[\"或者是\",{\"1\":{\"1547\":1}}],[\"或者是提供的初始值\",{\"1\":{\"284\":1,\"705\":1,\"877\":1}}],[\"或者移动\",{\"1\":{\"1478\":1}}],[\"或者消费者组件很多\",{\"1\":{\"1225\":1}}],[\"或者其他类型的用户有可执行权限时\",{\"1\":{\"1039\":1}}],[\"或者使用引号将文件名括起来\",{\"1\":{\"973\":1}}],[\"或者任何异步中\",{\"1\":{\"902\":1}}],[\"或者说能量\",{\"1\":{\"2856\":1}}],[\"或者说闭包是个内嵌函数\",{\"1\":{\"900\":1}}],[\"或者说函数被引用包围\",{\"1\":{\"900\":1}}],[\"或者说是知道加了这行代码\",{\"1\":{\"202\":1}}],[\"或者说是能够保持统一效果\",{\"1\":{\"200\":1}}],[\"或者更短的时间\",{\"1\":{\"895\":1}}],[\"或者当使用宽松相等\",{\"1\":{\"805\":1}}],[\"或者多个源对象有同名属性\",{\"1\":{\"755\":1}}],[\"或者科学记数法中的指数\",{\"1\":{\"551\":1}}],[\"或者大于\",{\"1\":{\"550\":1}}],[\"或者在某段时间内系统所能处理的事件的个数\",{\"1\":{\"2004\":1}}],[\"或者在定义事件处理函数的外部函数中\",{\"1\":{\"1653\":1}}],[\"或者在浏览器绘制前修改\",{\"1\":{\"1256\":1}}],[\"或者在模板字符串中插入对象时\",{\"1\":{\"806\":1}}],[\"或者在处理完后重新分配\",{\"1\":{\"429\":1}}],[\"或者在字符串中嵌入变量\",{\"1\":{\"255\":1}}],[\"或者上一次回调函数的返回值\",{\"1\":{\"284\":1,\"705\":1}}],[\"或者目标阶段\",{\"1\":{\"231\":1}}],[\"或者进行全文索引\",{\"1\":{\"217\":1}}],[\"或者overflow\",{\"1\":{\"151\":1}}],[\"或者\",{\"1\":{\"33\":1,\"76\":1,\"206\":1,\"510\":1,\"511\":1,\"613\":1,\"627\":1,\"689\":1,\"804\":1,\"1029\":1,\"1039\":1,\"1354\":1,\"1547\":1,\"2510\":1,\"2643\":1,\"2744\":1,\"2788\":1}}],[\"或\",{\"0\":{\"1113\":1,\"1283\":1},\"1\":{\"19\":1,\"62\":1,\"205\":1,\"316\":1,\"321\":3,\"322\":1,\"355\":1,\"430\":1,\"465\":1,\"550\":2,\"551\":2,\"565\":2,\"597\":1,\"606\":1,\"643\":3,\"644\":1,\"729\":1,\"755\":1,\"791\":1,\"795\":1,\"802\":2,\"806\":2,\"816\":2,\"898\":2,\"944\":1,\"989\":2,\"998\":6,\"1003\":2,\"1006\":3,\"1009\":1,\"1014\":1,\"1032\":2,\"1061\":4,\"1062\":2,\"1209\":1,\"1211\":1,\"1246\":1,\"1247\":1,\"1265\":1,\"1267\":1,\"1273\":1,\"1283\":1,\"1357\":1,\"1436\":1,\"1454\":1,\"1458\":2,\"1510\":1,\"1521\":1,\"1764\":1,\"2286\":1,\"2606\":1,\"2671\":1,\"2708\":1,\"2741\":1,\"2743\":1,\"2744\":1,\"2788\":1}}],[\"ldbms\",{\"1\":{\"2230\":1}}],[\"lg\",{\"1\":{\"1256\":1}}],[\"lt\",{\"1\":{\"1021\":2}}],[\"ltr\",{\"1\":{\"973\":1}}],[\"ll\",{\"1\":{\"1018\":2,\"1029\":1,\"1033\":2}}],[\"llo\",{\"1\":{\"281\":2,\"524\":2}}],[\"l或\",{\"1\":{\"1009\":1,\"1021\":2}}],[\"ln\",{\"0\":{\"1002\":1},\"1\":{\"1002\":1,\"1003\":1,\"1004\":1}}],[\"lname=ford\",{\"1\":{\"816\":1}}],[\"l的输出通过cat打印到终端上\",{\"1\":{\"983\":1}}],[\"l<帐号名称>\",{\"1\":{\"950\":1}}],[\"luminance\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"lu\",{\"1\":{\"950\":1}}],[\"luotianxu1\",{\"1\":{\"41\":1,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1}}],[\"ls命令还可以使用通配符进行模式匹配\",{\"1\":{\"973\":1}}],[\"ls\",{\"0\":{\"971\":1},\"1\":{\"913\":1,\"972\":1,\"973\":7,\"1007\":2,\"1029\":2,\"1036\":1,\"1087\":1,\"1135\":1}}],[\"l\",{\"1\":{\"254\":2,\"338\":4,\"343\":1,\"634\":2,\"840\":2,\"950\":2,\"972\":1,\"983\":1,\"986\":1,\"998\":1,\"1006\":1,\"1007\":2,\"1012\":1,\"1015\":1,\"1018\":2,\"1029\":2,\"1036\":1,\"1061\":2,\"1125\":1,\"1563\":2,\"1617\":1,\"2179\":1}}],[\"lose\",{\"1\":{\"2820\":1,\"2821\":1}}],[\"low\",{\"1\":{\"2788\":1}}],[\"lowp\",{\"1\":{\"2671\":1,\"2788\":1}}],[\"lowercaseobject\",{\"1\":{\"1431\":7}}],[\"lod\",{\"0\":{\"2270\":1},\"1\":{\"2751\":1},\"2\":{\"2272\":1}}],[\"lodash\",{\"0\":{\"764\":1},\"1\":{\"275\":1,\"443\":1,\"764\":1}}],[\"lolo\",{\"1\":{\"1365\":2,\"1413\":1}}],[\"lookat\",{\"0\":{\"2311\":1},\"1\":{\"2311\":1,\"2872\":1}}],[\"lookup\",{\"1\":{\"1137\":1}}],[\"looplist\",{\"1\":{\"766\":4,\"767\":4}}],[\"loop差异\",{\"0\":{\"383\":1}}],[\"loop\",{\"1\":{\"378\":2,\"383\":1,\"2741\":2}}],[\"longarray\",{\"1\":{\"436\":3}}],[\"loaddataend\",{\"1\":{\"1168\":2}}],[\"loadthumbnail\",{\"1\":{\"472\":2}}],[\"loaded\",{\"1\":{\"395\":3,\"449\":1}}],[\"loader\",{\"0\":{\"2473\":2,\"2474\":1},\"1\":{\"79\":1,\"208\":2,\"1334\":2,\"2462\":4,\"2473\":2}}],[\"loadingmanager\",{\"0\":{\"2460\":1,\"2461\":1},\"1\":{\"2462\":3}}],[\"loadingmanager对于大多数加载器来说已经足够了\",{\"1\":{\"2454\":1}}],[\"loadingmanager是一个全局实例\",{\"1\":{\"2454\":1}}],[\"loading\",{\"1\":{\"394\":1,\"1766\":7,\"2455\":4,\"2462\":4}}],[\"load\",{\"1\":{\"233\":1,\"395\":1,\"861\":2,\"862\":2,\"2462\":2,\"2884\":1}}],[\"logarithmicdepthbuffer\",{\"1\":{\"2788\":1,\"2795\":1}}],[\"log命令可以用来查看提交历史\",{\"1\":{\"1630\":1}}],[\"logproperty\",{\"1\":{\"1467\":3}}],[\"loggingidentity\",{\"1\":{\"1369\":2}}],[\"loggingidentity<t\",{\"1\":{\"1369\":1}}],[\"loggedoutput\",{\"1\":{\"1468\":4}}],[\"logged\",{\"1\":{\"1222\":1}}],[\"logger\",{\"1\":{\"1188\":1}}],[\"logo\",{\"1\":{\"1167\":5,\"1168\":5}}],[\"logoutput\",{\"1\":{\"1468\":2}}],[\"logout\",{\"0\":{\"925\":1},\"1\":{\"926\":1,\"1123\":1}}],[\"logs\",{\"1\":{\"1137\":1,\"1150\":1,\"1152\":6}}],[\"log2012\",{\"1\":{\"1033\":5}}],[\"log2014\",{\"1\":{\"1010\":2}}],[\"log2013\",{\"1\":{\"990\":1,\"1004\":1,\"1010\":2}}],[\"log的最后\",{\"1\":{\"993\":1}}],[\"log的内容\",{\"1\":{\"993\":1}}],[\"log的文件的增长情况\",{\"1\":{\"993\":1}}],[\"log文件时\",{\"1\":{\"993\":1}}],[\"log文件的最后\",{\"1\":{\"993\":2}}],[\"loginbutton\",{\"1\":{\"1222\":1}}],[\"login\",{\"0\":{\"927\":1},\"1\":{\"823\":1,\"928\":1,\"953\":1,\"967\":1,\"1229\":3,\"1755\":5}}],[\"logname\",{\"1\":{\"355\":2,\"1118\":1}}],[\"log\",{\"1\":{\"83\":2,\"109\":1,\"117\":3,\"118\":6,\"119\":13,\"121\":1,\"122\":1,\"123\":4,\"125\":1,\"126\":3,\"127\":21,\"128\":28,\"191\":1,\"226\":1,\"234\":6,\"237\":1,\"240\":4,\"241\":4,\"248\":6,\"249\":2,\"252\":5,\"253\":6,\"254\":1,\"256\":1,\"257\":3,\"258\":1,\"260\":4,\"261\":3,\"265\":3,\"266\":1,\"267\":1,\"268\":2,\"271\":5,\"272\":5,\"274\":1,\"275\":2,\"284\":4,\"286\":1,\"287\":4,\"295\":3,\"297\":1,\"299\":1,\"300\":3,\"302\":2,\"303\":1,\"304\":1,\"305\":2,\"317\":1,\"323\":1,\"324\":1,\"328\":7,\"331\":2,\"332\":6,\"334\":9,\"338\":1,\"343\":1,\"345\":5,\"351\":1,\"353\":6,\"354\":6,\"355\":5,\"356\":3,\"357\":2,\"359\":4,\"360\":3,\"362\":6,\"363\":1,\"364\":1,\"365\":1,\"376\":5,\"381\":1,\"382\":2,\"388\":2,\"391\":1,\"392\":1,\"395\":4,\"399\":1,\"400\":1,\"403\":4,\"404\":1,\"405\":1,\"406\":1,\"409\":1,\"413\":2,\"414\":1,\"430\":2,\"431\":1,\"433\":4,\"445\":2,\"452\":5,\"469\":1,\"470\":2,\"478\":2,\"481\":3,\"482\":4,\"484\":5,\"486\":3,\"488\":7,\"490\":5,\"492\":6,\"494\":6,\"495\":2,\"500\":6,\"503\":1,\"505\":2,\"506\":1,\"507\":5,\"508\":5,\"510\":1,\"518\":1,\"520\":3,\"521\":2,\"525\":2,\"526\":1,\"533\":1,\"536\":1,\"543\":1,\"544\":1,\"555\":1,\"558\":1,\"565\":6,\"567\":1,\"568\":2,\"569\":2,\"572\":2,\"573\":1,\"574\":3,\"576\":1,\"577\":1,\"578\":5,\"584\":8,\"587\":6,\"588\":4,\"590\":2,\"591\":2,\"592\":1,\"594\":2,\"595\":4,\"596\":5,\"597\":2,\"602\":3,\"604\":3,\"605\":2,\"621\":1,\"640\":2,\"641\":6,\"645\":1,\"646\":4,\"652\":1,\"653\":5,\"654\":4,\"657\":6,\"658\":6,\"663\":11,\"666\":1,\"678\":1,\"679\":5,\"680\":3,\"684\":4,\"685\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":2,\"692\":2,\"693\":2,\"695\":2,\"696\":2,\"698\":5,\"699\":2,\"701\":2,\"702\":2,\"703\":3,\"705\":4,\"706\":2,\"708\":3,\"710\":3,\"712\":2,\"718\":2,\"719\":2,\"723\":5,\"724\":4,\"725\":3,\"729\":1,\"731\":4,\"732\":3,\"734\":1,\"736\":1,\"737\":1,\"738\":1,\"739\":1,\"740\":1,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"754\":3,\"755\":1,\"756\":4,\"758\":2,\"759\":2,\"762\":1,\"763\":2,\"764\":1,\"765\":1,\"774\":1,\"803\":5,\"819\":4,\"821\":2,\"822\":2,\"823\":2,\"836\":8,\"838\":5,\"840\":2,\"841\":1,\"842\":1,\"843\":9,\"844\":1,\"847\":3,\"848\":1,\"850\":2,\"851\":1,\"859\":2,\"860\":3,\"861\":2,\"862\":1,\"863\":2,\"864\":5,\"865\":1,\"866\":2,\"867\":1,\"872\":2,\"874\":1,\"877\":6,\"879\":3,\"881\":2,\"882\":3,\"884\":1,\"885\":2,\"888\":1,\"889\":1,\"890\":2,\"891\":1,\"896\":6,\"897\":2,\"898\":7,\"900\":1,\"901\":3,\"902\":4,\"903\":4,\"921\":2,\"990\":1,\"993\":4,\"1004\":1,\"1007\":4,\"1010\":4,\"1033\":5,\"1036\":3,\"1146\":1,\"1150\":2,\"1152\":11,\"1153\":7,\"1168\":3,\"1196\":4,\"1197\":4,\"1200\":1,\"1204\":3,\"1210\":1,\"1222\":1,\"1244\":3,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":2,\"1265\":1,\"1273\":1,\"1279\":1,\"1282\":1,\"1286\":2,\"1287\":1,\"1290\":1,\"1315\":2,\"1320\":1,\"1323\":1,\"1324\":1,\"1369\":1,\"1370\":2,\"1386\":2,\"1387\":1,\"1389\":1,\"1390\":4,\"1391\":3,\"1392\":1,\"1411\":2,\"1412\":2,\"1413\":2,\"1415\":1,\"1435\":3,\"1448\":2,\"1466\":2,\"1467\":2,\"1468\":1,\"1469\":3,\"1472\":1,\"1483\":2,\"1490\":3,\"1534\":2,\"1558\":1,\"1568\":1,\"1602\":1,\"1614\":1,\"1625\":1,\"1626\":8,\"1627\":1,\"1628\":2,\"1629\":2,\"1630\":1,\"1671\":2,\"1740\":3,\"1743\":4,\"1753\":3,\"1754\":3,\"1755\":3,\"1758\":6,\"1772\":2,\"1773\":1,\"1774\":1,\"1777\":3,\"1780\":2,\"1789\":4,\"1798\":5,\"1806\":1,\"1814\":3,\"1817\":1,\"1820\":6,\"1823\":2,\"1826\":3,\"1829\":2,\"1839\":3,\"2455\":4,\"2462\":4}}],[\"locator\",{\"1\":{\"1677\":1}}],[\"location=\",{\"1\":{\"1312\":1}}],[\"location\",{\"1\":{\"22\":1,\"65\":1,\"863\":4,\"866\":1,\"1152\":7,\"1153\":4,\"1312\":4}}],[\"localclippingenabled\",{\"0\":{\"2801\":1}}],[\"localclippingenabled为true\",{\"1\":{\"2647\":1}}],[\"localstorage在存储方面没有什么特别的限制\",{\"1\":{\"1665\":1}}],[\"localstorage保存的数据\",{\"1\":{\"1664\":1}}],[\"localstorage可以作为浏览器本地缓存方案\",{\"1\":{\"1663\":1}}],[\"localstorage\",{\"0\":{\"1662\":1},\"1\":{\"1274\":6,\"1297\":1,\"1664\":2,\"1665\":2,\"1666\":1,\"1670\":2}}],[\"localstorge\",{\"1\":{\"855\":1}}],[\"locale=\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"locale\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"localhost\",{\"1\":{\"859\":1,\"860\":2,\"861\":4,\"862\":2,\"863\":2,\"915\":2,\"1033\":3,\"1150\":1,\"1152\":2,\"1153\":1,\"1472\":1}}],[\"localname\",{\"1\":{\"118\":1}}],[\"local\",{\"1\":{\"20\":1,\"63\":1,\"1134\":1,\"1135\":1,\"1137\":9,\"1150\":2,\"1152\":1,\"1153\":2}}],[\"lambert网格材质\",{\"0\":{\"2592\":1}}],[\"layer\",{\"1\":{\"2842\":1}}],[\"layers\",{\"0\":{\"2513\":2}}],[\"layout\",{\"1\":{\"21\":1,\"64\":1}}],[\"lathe\",{\"1\":{\"2446\":2}}],[\"lathegeometry\",{\"0\":{\"2445\":1,\"2446\":1},\"1\":{\"2446\":1}}],[\"latest\",{\"1\":{\"19\":1,\"94\":1}}],[\"lan\",{\"1\":{\"2203\":1}}],[\"lang=\",{\"1\":{\"436\":1,\"1839\":1}}],[\"language\",{\"1\":{\"334\":1,\"500\":1}}],[\"lapadula模型是符合军事安全策略的计算机安全模型\",{\"1\":{\"2117\":1}}],[\"large\",{\"1\":{\"387\":1,\"1009\":1}}],[\"lastindex\",{\"1\":{\"1551\":7}}],[\"lastindexof\",{\"0\":{\"521\":1},\"1\":{\"521\":4,\"536\":1,\"682\":1,\"708\":4}}],[\"lastitem\",{\"1\":{\"109\":3}}],[\"lastmodifieddate\",{\"1\":{\"391\":1}}],[\"lastmodified\",{\"1\":{\"391\":1}}],[\"lastname\",{\"1\":{\"275\":2,\"470\":1,\"1423\":3,\"1424\":2}}],[\"last\",{\"1\":{\"208\":1,\"305\":2,\"1334\":3,\"1728\":1,\"1729\":1,\"2172\":1}}],[\"lab\",{\"1\":{\"94\":3}}],[\"label\",{\"1\":{\"94\":5,\"345\":2}}],[\"lab=tk\",{\"1\":{\"94\":3}}],[\"lazy\",{\"1\":{\"87\":1,\"88\":3,\"89\":1,\"1569\":1,\"1571\":5}}],[\"lit\",{\"1\":{\"2695\":1}}],[\"literal\",{\"1\":{\"1338\":1}}],[\"lifecyclehooks\",{\"1\":{\"1485\":2}}],[\"lifecyclemixin\",{\"0\":{\"1519\":1},\"1\":{\"1479\":1,\"1492\":2,\"1505\":2,\"1528\":3,\"1543\":2}}],[\"lifecycle\",{\"1\":{\"1479\":1,\"1486\":2,\"1492\":1,\"1505\":1,\"1525\":1,\"1526\":2,\"1528\":2,\"1529\":1,\"1543\":1,\"1558\":1}}],[\"lights\",{\"0\":{\"2757\":1},\"1\":{\"2802\":1}}],[\"lightgray\",{\"1\":{\"1255\":2}}],[\"light\",{\"0\":{\"2849\":1,\"2850\":1,\"2859\":1},\"1\":{\"1220\":1,\"1222\":4,\"1223\":1,\"1227\":3,\"1265\":1,\"2864\":2,\"2876\":3,\"2880\":2}}],[\"license\",{\"1\":{\"1021\":1}}],[\"lisi\",{\"1\":{\"848\":1,\"1110\":1}}],[\"list2\",{\"1\":{\"1405\":1}}],[\"list1\",{\"1\":{\"1405\":1}}],[\"listening\",{\"1\":{\"864\":2,\"866\":1,\"1152\":2}}],[\"listener\",{\"1\":{\"432\":5,\"902\":1}}],[\"listen\",{\"1\":{\"191\":1,\"575\":1,\"859\":1,\"860\":2,\"861\":2,\"862\":2,\"863\":2,\"864\":2,\"866\":2,\"1152\":4,\"1153\":3,\"1726\":1}}],[\"listenvaluechange\",{\"1\":{\"123\":2,\"127\":2}}],[\"list\",{\"1\":{\"21\":4,\"64\":4,\"236\":1,\"237\":2,\"526\":2,\"632\":2,\"725\":5,\"1021\":1,\"1073\":1,\"1168\":8,\"1265\":3,\"1590\":1,\"1601\":1,\"1758\":6,\"1823\":4,\"1829\":4,\"1832\":1,\"2424\":1}}],[\"lily\",{\"1\":{\"731\":2}}],[\"lion\",{\"1\":{\"728\":2}}],[\"limit\",{\"1\":{\"526\":2}}],[\"li\",{\"1\":{\"237\":2,\"437\":1,\"1832\":1}}],[\"lianjie\",{\"1\":{\"94\":1}}],[\"li>`\",{\"1\":{\"822\":1,\"823\":1}}],[\"li>\",{\"1\":{\"83\":1,\"215\":2,\"236\":4,\"1168\":1,\"1212\":1,\"1235\":1,\"1311\":1}}],[\"lib64\",{\"1\":{\"1146\":1}}],[\"libuv库负责node\",{\"1\":{\"378\":1}}],[\"libuv是一个基于事件驱动的跨平台抽象层\",{\"1\":{\"378\":1}}],[\"libx264\",{\"1\":{\"94\":1}}],[\"lib\",{\"1\":{\"80\":1,\"471\":1,\"913\":1,\"1137\":1,\"1146\":1,\"1357\":2,\"1454\":1,\"1583\":2}}],[\"libraryname\",{\"1\":{\"39\":1}}],[\"libs\",{\"1\":{\"39\":1}}],[\"liux\",{\"1\":{\"33\":1,\"76\":1}}],[\"linus\",{\"1\":{\"1577\":2}}],[\"linux系统中的w\",{\"1\":{\"2172\":1}}],[\"linuxmore命令类似cat\",{\"1\":{\"985\":1}}],[\"linuxso\",{\"1\":{\"960\":1}}],[\"linux\",{\"0\":{\"907\":1,\"909\":1},\"1\":{\"907\":1,\"909\":5,\"913\":4,\"919\":1,\"960\":1,\"1029\":3,\"1037\":1,\"1054\":1,\"1077\":2,\"1577\":3,\"1695\":1},\"2\":{\"910\":1,\"911\":1,\"932\":1,\"933\":1,\"964\":1,\"965\":1,\"1026\":1,\"1027\":1,\"1051\":1,\"1052\":1,\"1069\":1,\"1070\":1,\"1074\":1,\"1075\":1,\"1126\":1,\"1127\":1}}],[\"lint\",{\"1\":{\"22\":3,\"25\":1,\"27\":1,\"65\":3,\"68\":1,\"70\":1}}],[\"link2013\",{\"1\":{\"1004\":1}}],[\"link>\",{\"1\":{\"859\":1}}],[\"link\",{\"1\":{\"21\":1,\"64\":1,\"859\":1,\"1002\":1,\"1029\":1,\"1312\":1}}],[\"linearencoding\",{\"1\":{\"2799\":1}}],[\"linearmipmaplinearfilter\",{\"1\":{\"2562\":1}}],[\"linedashedmaterial\",{\"0\":{\"2770\":1,\"2771\":1}}],[\"linewidth\",{\"0\":{\"2758\":1}}],[\"linebasicmaterial\",{\"0\":{\"2624\":1,\"2625\":1},\"1\":{\"2411\":1,\"2450\":1}}],[\"lineto\",{\"1\":{\"2407\":4}}],[\"lineheight\",{\"0\":{\"171\":1}}],[\"linefeed\",{\"1\":{\"102\":1}}],[\"line\",{\"1\":{\"19\":1,\"21\":3,\"23\":3,\"62\":1,\"64\":3,\"66\":3,\"171\":2,\"1009\":1,\"2411\":1,\"2442\":5,\"2450\":2}}],[\"lines而不是gl\",{\"1\":{\"2764\":1}}],[\"linesegments\",{\"1\":{\"2442\":1,\"2450\":1}}],[\"lines<字符或字符串>\",{\"1\":{\"1009\":1}}],[\"lines\",{\"1\":{\"19\":1,\"62\":1,\"1009\":2,\"2800\":1}}],[\"led等\",{\"1\":{\"2176\":1}}],[\"least\",{\"1\":{\"1431\":1}}],[\"learn\",{\"1\":{\"1210\":2,\"1366\":1,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1}}],[\"leaks<\",{\"1\":{\"436\":1}}],[\"lexical\",{\"1\":{\"249\":2}}],[\"level\",{\"0\":{\"334\":1,\"2817\":1,\"2818\":1},\"1\":{\"147\":2,\"1789\":2,\"2827\":1,\"2842\":1}}],[\"lenght\",{\"1\":{\"332\":1}}],[\"lengths\",{\"1\":{\"2424\":1}}],[\"lengthwise>\",{\"1\":{\"1369\":1}}],[\"lengthwise\",{\"1\":{\"1369\":1}}],[\"length\",{\"0\":{\"257\":1,\"407\":1},\"1\":{\"23\":2,\"66\":2,\"109\":2,\"123\":1,\"125\":2,\"127\":3,\"128\":1,\"239\":1,\"248\":2,\"254\":2,\"257\":5,\"281\":3,\"286\":2,\"287\":1,\"289\":1,\"332\":2,\"343\":1,\"402\":1,\"403\":4,\"407\":1,\"416\":1,\"418\":3,\"515\":2,\"520\":1,\"524\":3,\"529\":4,\"530\":2,\"582\":3,\"583\":1,\"584\":8,\"639\":1,\"674\":2,\"677\":6,\"678\":2,\"679\":1,\"680\":4,\"684\":1,\"685\":1,\"696\":2,\"723\":1,\"727\":1,\"731\":3,\"735\":1,\"743\":1,\"746\":1,\"748\":2,\"749\":6,\"766\":1,\"767\":2,\"883\":3,\"888\":1,\"1168\":2,\"1339\":1,\"1355\":1,\"1366\":1,\"1369\":5,\"1411\":1,\"1445\":1,\"1446\":1,\"1476\":5,\"1478\":2,\"1486\":1,\"1493\":1,\"1534\":1,\"1535\":1,\"1541\":1,\"1542\":1,\"1550\":5,\"1551\":4,\"1562\":1,\"1563\":1,\"1571\":3,\"1789\":3,\"1814\":1,\"1823\":1,\"1832\":1,\"1839\":2,\"2407\":3}}],[\"len\",{\"1\":{\"109\":3,\"123\":3,\"127\":3,\"239\":2,\"583\":2,\"727\":2,\"888\":2}}],[\"less可以随意浏览文件\",{\"1\":{\"988\":1}}],[\"less\",{\"0\":{\"988\":1},\"1\":{\"22\":2,\"27\":1,\"65\":2,\"70\":1,\"805\":1,\"989\":2,\"990\":2}}],[\"leftcount\",{\"1\":{\"1244\":5}}],[\"left|right\",{\"1\":{\"148\":1}}],[\"left\",{\"0\":{\"2530\":1,\"2535\":1},\"1\":{\"21\":10,\"64\":10,\"159\":2,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"171\":1,\"178\":1,\"184\":1,\"343\":1,\"641\":2,\"657\":2,\"1009\":2,\"1244\":2,\"1256\":2,\"2530\":1,\"2710\":1}}],[\"letter\",{\"1\":{\"21\":1,\"64\":1}}],[\"let\",{\"0\":{\"246\":1,\"1113\":1},\"1\":{\"19\":1,\"62\":1,\"109\":4,\"110\":1,\"123\":2,\"125\":1,\"127\":3,\"128\":10,\"226\":1,\"239\":3,\"246\":3,\"248\":5,\"249\":3,\"250\":5,\"253\":7,\"254\":4,\"255\":1,\"258\":1,\"261\":1,\"268\":3,\"271\":5,\"272\":4,\"279\":1,\"280\":1,\"281\":1,\"284\":4,\"285\":2,\"295\":1,\"299\":2,\"316\":1,\"320\":6,\"326\":2,\"334\":2,\"338\":1,\"355\":4,\"356\":1,\"357\":1,\"359\":4,\"403\":1,\"418\":2,\"430\":1,\"431\":1,\"433\":4,\"436\":1,\"437\":2,\"455\":1,\"467\":1,\"484\":2,\"486\":2,\"488\":2,\"490\":3,\"492\":4,\"494\":2,\"495\":2,\"499\":2,\"500\":1,\"507\":13,\"508\":5,\"509\":2,\"510\":2,\"511\":8,\"518\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":1,\"524\":1,\"525\":1,\"526\":1,\"528\":1,\"529\":1,\"530\":1,\"532\":1,\"533\":2,\"535\":2,\"536\":1,\"537\":1,\"539\":1,\"543\":1,\"544\":1,\"559\":1,\"560\":1,\"569\":4,\"571\":1,\"573\":3,\"574\":3,\"578\":1,\"581\":2,\"582\":4,\"583\":1,\"587\":2,\"590\":8,\"591\":1,\"592\":1,\"594\":2,\"595\":1,\"602\":3,\"604\":3,\"605\":2,\"616\":3,\"621\":5,\"625\":1,\"637\":1,\"639\":1,\"641\":2,\"645\":2,\"646\":1,\"652\":2,\"653\":8,\"654\":2,\"657\":2,\"674\":3,\"676\":1,\"677\":4,\"679\":6,\"680\":2,\"687\":1,\"688\":1,\"689\":2,\"690\":1,\"692\":2,\"693\":2,\"695\":2,\"696\":2,\"698\":9,\"699\":2,\"701\":2,\"702\":1,\"703\":3,\"705\":4,\"706\":2,\"708\":1,\"709\":1,\"710\":1,\"712\":3,\"713\":2,\"714\":2,\"715\":1,\"716\":1,\"719\":2,\"731\":3,\"732\":2,\"734\":1,\"735\":3,\"736\":1,\"737\":1,\"738\":1,\"739\":1,\"740\":2,\"743\":2,\"745\":2,\"746\":1,\"749\":1,\"754\":2,\"755\":3,\"756\":3,\"758\":1,\"759\":1,\"760\":2,\"762\":2,\"763\":2,\"765\":2,\"766\":2,\"767\":5,\"768\":4,\"805\":5,\"806\":3,\"822\":1,\"823\":1,\"828\":3,\"831\":4,\"838\":5,\"840\":3,\"841\":2,\"842\":2,\"843\":8,\"844\":2,\"848\":1,\"850\":5,\"859\":3,\"860\":7,\"861\":5,\"862\":6,\"863\":5,\"872\":3,\"873\":3,\"874\":2,\"875\":1,\"876\":2,\"877\":6,\"878\":2,\"879\":4,\"882\":1,\"883\":1,\"884\":1,\"888\":1,\"889\":1,\"890\":1,\"891\":2,\"898\":8,\"903\":4,\"1161\":1,\"1162\":1,\"1163\":1,\"1173\":1,\"1176\":3,\"1178\":1,\"1185\":3,\"1187\":1,\"1235\":2,\"1256\":2,\"1265\":2,\"1289\":1,\"1311\":3,\"1315\":6,\"1320\":6,\"1321\":6,\"1323\":7,\"1324\":5,\"1338\":3,\"1339\":2,\"1340\":3,\"1343\":1,\"1362\":1,\"1370\":1,\"1386\":2,\"1387\":1,\"1388\":1,\"1389\":1,\"1390\":1,\"1392\":2,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":2,\"1401\":1,\"1402\":3,\"1403\":1,\"1405\":4,\"1407\":2,\"1408\":1,\"1410\":1,\"1411\":4,\"1412\":1,\"1413\":1,\"1415\":2,\"1417\":4,\"1418\":11,\"1421\":1,\"1423\":2,\"1424\":2,\"1425\":1,\"1427\":5,\"1428\":1,\"1430\":2,\"1431\":3,\"1437\":1,\"1442\":5,\"1445\":2,\"1446\":2,\"1447\":1,\"1448\":2,\"1458\":1,\"1459\":1,\"1466\":2,\"1468\":4,\"1469\":1,\"1475\":1,\"1476\":7,\"1477\":8,\"1478\":13,\"1483\":1,\"1485\":5,\"1486\":2,\"1490\":1,\"1491\":2,\"1493\":11,\"1500\":1,\"1525\":1,\"1528\":6,\"1533\":2,\"1534\":4,\"1535\":3,\"1539\":1,\"1541\":3,\"1542\":5,\"1548\":1,\"1549\":3,\"1550\":7,\"1551\":11,\"1552\":3,\"1556\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1560\":1,\"1561\":2,\"1562\":1,\"1563\":3,\"1564\":1,\"1568\":1,\"1569\":2,\"1571\":11,\"1646\":2,\"1753\":3,\"1754\":4,\"1772\":1,\"1789\":2,\"1820\":1,\"1823\":11,\"1832\":1,\"1839\":5,\"2446\":1}}],[\"lf+cr\",{\"1\":{\"1018\":2}}],[\"lf\",{\"1\":{\"20\":1,\"23\":2,\"63\":1,\"66\":2,\"1018\":2}}],[\"文章最开始的例子中\",{\"1\":{\"844\":1}}],[\"文本节点\",{\"1\":{\"1528\":1}}],[\"文本节点的虚拟节点tag都是undefined\",{\"1\":{\"1476\":1}}],[\"文本的比对\",{\"1\":{\"1476\":1}}],[\"文本文件中\",{\"1\":{\"943\":1}}],[\"文本输入的验证\",{\"1\":{\"832\":1}}],[\"文本事件\",{\"1\":{\"233\":1}}],[\"文字可以充分体现最终系统\",{\"1\":{\"1923\":1}}],[\"文字模式\",{\"1\":{\"1021\":1}}],[\"文字会出现在\",{\"1\":{\"340\":1}}],[\"文字围绕着浮动元素排列\",{\"1\":{\"152\":1}}],[\"文档分析工具\",{\"1\":{\"1962\":1}}],[\"文档化\",{\"1\":{\"1900\":1}}],[\"文档中的当前\",{\"1\":{\"472\":1}}],[\"文档\",{\"1\":{\"388\":1,\"821\":1}}],[\"文档注释\",{\"1\":{\"30\":1,\"73\":1}}],[\"文档变更\",{\"1\":{\"16\":1,\"59\":1}}],[\"文件记录和可视化技术的监控工具\",{\"1\":{\"2172\":1}}],[\"文件管理\",{\"0\":{\"2163\":1}}],[\"文件以及数据库检索的结果等\",{\"1\":{\"2061\":1}}],[\"文件报表产生\",{\"1\":{\"1863\":1}}],[\"文件传输\",{\"1\":{\"1715\":1,\"1886\":1}}],[\"文件里\",{\"1\":{\"1684\":1}}],[\"文件里面\",{\"1\":{\"1525\":1}}],[\"文件头部加上\",{\"1\":{\"1653\":1}}],[\"文件而不是源文件的位置\",{\"1\":{\"1454\":1}}],[\"文件命名规范为\",{\"1\":{\"1355\":1}}],[\"文件命名必须改成驼峰规范\",{\"1\":{\"19\":1,\"62\":1}}],[\"文件模块也被称为外部模块\",{\"1\":{\"1354\":1}}],[\"文件模块\",{\"0\":{\"1354\":1}}],[\"文件并创建\",{\"1\":{\"1183\":1,\"1184\":1}}],[\"文件下新建\",{\"1\":{\"1183\":3,\"1184\":2}}],[\"文件夹下新建\",{\"1\":{\"1557\":1}}],[\"文件夹下创建\",{\"1\":{\"1159\":3,\"1160\":2,\"1167\":1,\"1168\":1}}],[\"文件夹来专注响应式逻辑\",{\"1\":{\"1533\":1}}],[\"文件夹\",{\"1\":{\"1158\":1,\"1159\":1,\"1160\":1,\"1167\":2,\"1173\":1,\"1181\":1,\"1484\":1}}],[\"文件扩展名与类型映射表\",{\"1\":{\"1153\":1}}],[\"文件默认不能建立可执行文件\",{\"1\":{\"1044\":1}}],[\"文件默认权限最大为\",{\"1\":{\"1044\":1}}],[\"文件默认权限\",{\"1\":{\"1043\":1}}],[\"文件特殊权限\",{\"1\":{\"1043\":1}}],[\"文件拥有者增加可执行权限\",{\"1\":{\"1041\":1}}],[\"文件所有者所在组\",{\"1\":{\"1039\":1}}],[\"文件所有者\",{\"1\":{\"1037\":1,\"1039\":1}}],[\"文件名\",{\"1\":{\"1035\":2}}],[\"文件或链接文件等等\",{\"1\":{\"1029\":1}}],[\"文件或目录的权限位是由\",{\"1\":{\"1040\":1}}],[\"文件或目录2\",{\"1\":{\"1009\":1}}],[\"文件或目录1\",{\"1\":{\"1009\":1}}],[\"文件或目录\",{\"1\":{\"981\":1,\"1012\":2,\"1014\":1,\"1024\":1,\"1032\":2}}],[\"文件权限被放在一个比特掩码中\",{\"1\":{\"1040\":1}}],[\"文件权限\",{\"0\":{\"1028\":1,\"1029\":1,\"1044\":1}}],[\"文件大小等等\",{\"1\":{\"1006\":1}}],[\"文件类型\",{\"1\":{\"1006\":1}}],[\"文件存在则提示用户是否覆盖\",{\"1\":{\"1003\":1}}],[\"文件属性\",{\"1\":{\"998\":1}}],[\"文件在服务器上的位置\",{\"1\":{\"816\":1}}],[\"文件中的错误\",{\"1\":{\"1454\":1}}],[\"文件中写下代码时\",{\"1\":{\"1353\":1}}],[\"文件中\",{\"1\":{\"463\":1,\"1590\":1}}],[\"文件中包含一个模块\",{\"1\":{\"450\":1}}],[\"文件时\",{\"1\":{\"463\":1}}],[\"文件创建一个\",{\"1\":{\"463\":1}}],[\"文件引入\",{\"1\":{\"462\":1}}],[\"文件和\",{\"1\":{\"1332\":1}}],[\"文件和模块加载器\",{\"1\":{\"461\":1}}],[\"文件和指向设备上其他应用程序的链接成为可能\",{\"1\":{\"345\":1}}],[\"文件内所有代码都运行在独立的作用域\",{\"1\":{\"449\":1}}],[\"文件内容\",{\"1\":{\"394\":1}}],[\"文件即模块\",{\"1\":{\"449\":1}}],[\"文件拖放\",{\"0\":{\"392\":1}}],[\"文件拖放操作生成的\",{\"1\":{\"390\":1}}],[\"文件的根级别位置含有\",{\"1\":{\"1354\":1}}],[\"文件的第一个属性用\",{\"1\":{\"1029\":1}}],[\"文件的开头\",{\"1\":{\"429\":1}}],[\"文件的路径或\",{\"1\":{\"391\":1}}],[\"文件的媒体类型\",{\"1\":{\"391\":1}}],[\"文件\",{\"1\":{\"204\":1,\"378\":1,\"388\":7,\"390\":1,\"451\":1,\"455\":1,\"462\":2,\"463\":1,\"474\":1,\"983\":1,\"989\":1,\"992\":1,\"1001\":4,\"1009\":3,\"1018\":1,\"1021\":1,\"1025\":1,\"1167\":1,\"1174\":1,\"1332\":1,\"1357\":2,\"1454\":4,\"1526\":1,\"1541\":1,\"1583\":1,\"1584\":1,\"1660\":1}}],[\"文件编码是utf\",{\"1\":{\"104\":1}}],[\"文件适用以下规则\",{\"1\":{\"23\":1,\"66\":1}}],[\"o接口\",{\"1\":{\"2176\":1}}],[\"o线程与主库连接\",{\"1\":{\"2080\":1}}],[\"oas\",{\"0\":{\"1867\":1}}],[\"octahedrongeometry\",{\"0\":{\"2354\":1,\"2355\":1}}],[\"oct\",{\"1\":{\"1659\":1}}],[\"octet\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"ouput\",{\"1\":{\"1468\":1}}],[\"out\",{\"1\":{\"2835\":1}}],[\"outdir\",{\"1\":{\"1454\":2}}],[\"outfile\",{\"1\":{\"1454\":1}}],[\"outbox\",{\"1\":{\"344\":1}}],[\"outerhtml\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"outer\",{\"1\":{\"234\":4,\"431\":2}}],[\"outline\",{\"1\":{\"21\":2,\"64\":2,\"1256\":1}}],[\"outputencoding\",{\"0\":{\"2799\":1}}],[\"output\",{\"1\":{\"20\":1,\"63\":1,\"821\":1,\"822\":4,\"823\":4,\"1466\":2,\"1468\":2,\"1469\":1}}],[\"o性能\",{\"1\":{\"1153\":1}}],[\"o为在目前光标所在的上一行处输入新的一行\",{\"1\":{\"1065\":1}}],[\"o为在目前光标所在的下一行处输入新的一行\",{\"1\":{\"1065\":1}}],[\"o表示其他以外的人\",{\"1\":{\"1038\":1}}],[\"others\",{\"1\":{\"1039\":1}}],[\"other\",{\"0\":{\"1343\":1},\"1\":{\"1037\":1,\"1040\":1,\"2835\":1}}],[\"owner\",{\"1\":{\"1037\":1}}],[\"ownkeys\",{\"0\":{\"885\":1},\"1\":{\"268\":1,\"885\":4,\"886\":1}}],[\"o>\",{\"1\":{\"959\":1}}],[\"omit<todo\",{\"1\":{\"1380\":1}}],[\"omit<t\",{\"1\":{\"1380\":2}}],[\"omit\",{\"0\":{\"1380\":1}}],[\"om\",{\"1\":{\"829\":1}}],[\"oltp\",{\"1\":{\"1863\":1}}],[\"oli\",{\"1\":{\"1832\":3}}],[\"oldelm\",{\"1\":{\"1528\":3}}],[\"oldendvnode\",{\"1\":{\"1478\":11}}],[\"oldendindex\",{\"1\":{\"1478\":8}}],[\"oldvalue\",{\"1\":{\"1493\":2,\"1571\":2}}],[\"oldval\",{\"1\":{\"1490\":3}}],[\"oldvnode\",{\"1\":{\"1476\":12,\"1478\":3,\"1528\":4}}],[\"oldstartvnode\",{\"1\":{\"1478\":13}}],[\"oldstartindex\",{\"1\":{\"1478\":4}}],[\"oldstyle\",{\"1\":{\"1477\":2}}],[\"oldprops\",{\"1\":{\"1477\":3}}],[\"oldchildren\",{\"1\":{\"1476\":4,\"1478\":15}}],[\"oldheaders\",{\"1\":{\"1073\":1}}],[\"old\",{\"1\":{\"828\":3,\"930\":1}}],[\"olebuffer\",{\"1\":{\"128\":6}}],[\"over\",{\"1\":{\"596\":1,\"1256\":3}}],[\"overflow为\",{\"1\":{\"148\":1}}],[\"overflow\",{\"0\":{\"184\":1},\"1\":{\"21\":4,\"64\":4,\"151\":1,\"184\":3,\"1256\":1}}],[\"o处理方面使用了自己设计的libuv\",{\"1\":{\"378\":1}}],[\"o1\",{\"1\":{\"354\":3}}],[\"oh\",{\"1\":{\"341\":2,\"819\":2}}],[\"o\",{\"1\":{\"254\":1,\"270\":2,\"279\":1,\"376\":1,\"378\":1,\"379\":3,\"380\":1,\"522\":1,\"634\":1,\"640\":5,\"654\":2,\"840\":1,\"953\":2,\"959\":1,\"989\":1,\"1018\":1,\"1039\":1,\"1041\":1,\"1056\":2,\"1065\":2,\"1125\":1,\"1646\":1}}],[\"ok\",{\"1\":{\"122\":1,\"351\":1,\"1007\":1,\"1410\":1,\"1417\":5,\"1418\":12,\"1427\":1,\"1428\":1,\"1430\":1,\"1431\":9,\"1447\":1,\"1448\":1,\"1458\":2}}],[\"onbeforerender\",{\"1\":{\"2744\":1,\"2761\":1}}],[\"onbeforecompile\",{\"0\":{\"2688\":1}}],[\"onbluetoothadapterstatechange\",{\"1\":{\"128\":1}}],[\"onbluetoothdevicefound\",{\"1\":{\"118\":3,\"119\":2,\"127\":1,\"128\":1}}],[\"onblecharacteristicvaluechange\",{\"1\":{\"120\":1,\"123\":2,\"125\":1,\"126\":1,\"127\":1,\"128\":3}}],[\"onupgradeneeded\",{\"1\":{\"1671\":1}}],[\"onmouseleave=\",{\"1\":{\"1256\":1}}],[\"onmouseenter=\",{\"1\":{\"1256\":1}}],[\"onmessage\",{\"1\":{\"343\":5,\"861\":2,\"865\":1,\"1248\":1}}],[\"onsuccess=function\",{\"1\":{\"1671\":1}}],[\"onsuccess\",{\"1\":{\"1671\":1}}],[\"onsubmit=\",{\"1\":{\"1211\":1}}],[\"onstart\",{\"0\":{\"2468\":1},\"1\":{\"340\":3,\"2455\":2,\"2462\":1}}],[\"ondelete=\",{\"1\":{\"1210\":1}}],[\"ondelete\",{\"1\":{\"1210\":2}}],[\"ondragover\",{\"1\":{\"392\":3}}],[\"ondrop\",{\"1\":{\"392\":3}}],[\"onopen\",{\"1\":{\"865\":1}}],[\"onhashchange\",{\"1\":{\"863\":1}}],[\"onfinally\",{\"1\":{\"584\":3}}],[\"onfulfilledfns\",{\"1\":{\"584\":4}}],[\"onfulfilledcallbacks\",{\"1\":{\"581\":1}}],[\"onfulfilled\",{\"1\":{\"567\":1,\"581\":2,\"584\":8,\"592\":1}}],[\"onreject\",{\"1\":{\"581\":2}}],[\"onrejectedfns\",{\"1\":{\"584\":4}}],[\"onrejectedcallbacks\",{\"1\":{\"581\":1}}],[\"onrejected\",{\"1\":{\"580\":6,\"584\":10}}],[\"onresolved\",{\"1\":{\"580\":6}}],[\"onresult\",{\"1\":{\"340\":4}}],[\"onreadystatechange\",{\"1\":{\"559\":1,\"817\":1,\"819\":1,\"860\":1,\"864\":2,\"866\":2}}],[\"onprogress\",{\"0\":{\"2465\":1,\"2470\":1},\"1\":{\"395\":2,\"2455\":2,\"2462\":1,\"2465\":1}}],[\"onabort\",{\"1\":{\"395\":1}}],[\"onload=\",{\"1\":{\"861\":1,\"862\":1}}],[\"onloadend\",{\"1\":{\"420\":1}}],[\"onload\",{\"0\":{\"2464\":1,\"2469\":1},\"1\":{\"395\":5,\"414\":1,\"419\":1,\"867\":1,\"2455\":2,\"2462\":1,\"2464\":1}}],[\"only以及luminance\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"only标志\",{\"1\":{\"2289\":1,\"2512\":1,\"2534\":1,\"2576\":1}}],[\"only版本需要区分开\",{\"1\":{\"1525\":1,\"1548\":1}}],[\"only\",{\"1\":{\"334\":1,\"1009\":1,\"1338\":1,\"1414\":1,\"2754\":1,\"2756\":1,\"2835\":1}}],[\"once\",{\"1\":{\"432\":2,\"1246\":1,\"1551\":1}}],[\"onchange\",{\"1\":{\"391\":2,\"395\":4,\"413\":1,\"414\":1}}],[\"onchange=\",{\"1\":{\"338\":2,\"1167\":1,\"1168\":1,\"1212\":1,\"1235\":1,\"1265\":1}}],[\"onclickhandler\",{\"1\":{\"1653\":1}}],[\"onclick=\",{\"1\":{\"338\":4,\"339\":1,\"340\":2,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"1162\":2,\"1167\":2,\"1168\":3,\"1177\":2,\"1186\":2,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":2,\"1210\":1,\"1212\":1,\"1222\":2,\"1227\":1,\"1243\":1,\"1244\":2,\"1251\":1,\"1265\":1,\"1269\":1,\"1273\":3,\"1274\":4,\"1281\":2,\"1286\":2,\"1287\":1,\"1299\":1,\"1300\":1,\"1311\":3,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2}}],[\"onclick=function\",{\"1\":{\"231\":1}}],[\"onclick\",{\"1\":{\"231\":1,\"234\":6,\"239\":2,\"240\":1,\"345\":1,\"1653\":3}}],[\"onkeydown\",{\"1\":{\"239\":1}}],[\"on\",{\"1\":{\"232\":1,\"345\":1,\"378\":1,\"379\":1,\"395\":1,\"565\":1,\"864\":3,\"865\":2,\"866\":1,\"1152\":6,\"1153\":5,\"1268\":1,\"1311\":1,\"1414\":3,\"1510\":1,\"1521\":1}}],[\"oneline标志来简化日志的输出\",{\"1\":{\"1631\":1}}],[\"oneline标志\",{\"1\":{\"1626\":1}}],[\"oneline\",{\"1\":{\"1603\":2,\"1626\":1,\"1630\":1}}],[\"onerror=function\",{\"1\":{\"1671\":1}}],[\"onerror\",{\"0\":{\"2466\":1,\"2471\":1},\"1\":{\"340\":3,\"395\":1,\"419\":1,\"559\":1,\"819\":1,\"1671\":1,\"2455\":2,\"2462\":1,\"2466\":1}}],[\"one\",{\"1\":{\"19\":1,\"62\":1,\"300\":2,\"690\":3,\"702\":2,\"703\":3,\"710\":3,\"728\":2,\"1152\":1}}],[\"os\",{\"1\":{\"94\":3}}],[\"osx\",{\"1\":{\"21\":1,\"64\":1}}],[\"ob指的就是数组对应的observer实例\",{\"1\":{\"1564\":1}}],[\"ob就是a\",{\"1\":{\"1535\":1,\"1564\":1}}],[\"ob\",{\"1\":{\"1535\":5,\"1563\":3,\"1564\":6}}],[\"obserber\",{\"1\":{\"1534\":1,\"1535\":3}}],[\"observearray\",{\"1\":{\"1535\":3,\"1564\":1}}],[\"observe\",{\"1\":{\"87\":1,\"1533\":3,\"1534\":2,\"1535\":1,\"1542\":1,\"1560\":2,\"1563\":2}}],[\"observer2\",{\"1\":{\"1806\":2}}],[\"observer1\",{\"1\":{\"1806\":3}}],[\"observers\",{\"1\":{\"1806\":5}}],[\"observer\",{\"1\":{\"87\":3,\"1492\":1,\"1493\":1,\"1533\":2,\"1534\":2,\"1535\":5,\"1540\":1,\"1541\":1,\"1542\":2,\"1557\":2,\"1559\":1,\"1560\":1,\"1561\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1571\":1,\"1802\":3,\"1806\":7}}],[\"objloader\",{\"1\":{\"2462\":1}}],[\"objurl\",{\"1\":{\"413\":3}}],[\"obj3\",{\"1\":{\"354\":2}}],[\"obj2\",{\"1\":{\"304\":2,\"354\":7,\"360\":3,\"633\":2,\"756\":3,\"762\":3,\"763\":2,\"764\":2,\"805\":2,\"843\":2}}],[\"obj1\",{\"1\":{\"304\":2,\"354\":7,\"360\":11,\"633\":2,\"652\":2,\"756\":6,\"762\":3,\"763\":5,\"764\":3,\"805\":2,\"843\":2}}],[\"obj\",{\"1\":{\"261\":13,\"286\":5,\"295\":4,\"302\":4,\"303\":2,\"305\":4,\"324\":1,\"354\":3,\"360\":1,\"363\":2,\"364\":3,\"365\":3,\"433\":8,\"492\":2,\"590\":8,\"652\":3,\"653\":6,\"654\":2,\"678\":5,\"681\":7,\"756\":1,\"763\":3,\"804\":4,\"805\":6,\"806\":1,\"838\":5,\"865\":3,\"879\":1,\"881\":3,\"882\":4,\"883\":4,\"884\":5,\"885\":6,\"1236\":3,\"1366\":14,\"1367\":1,\"1401\":1,\"1493\":4,\"1551\":3,\"1571\":4,\"1653\":7,\"1817\":1,\"2462\":1}}],[\"objectliteral\",{\"1\":{\"1431\":9}}],[\"objectspacenormalmap\",{\"1\":{\"2711\":1}}],[\"objects\",{\"0\":{\"1342\":1}}],[\"object3d\",{\"0\":{\"2816\":1,\"2836\":1},\"1\":{\"2311\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2323\":1,\"2744\":1,\"2761\":1,\"2858\":1}}],[\"object3\",{\"1\":{\"755\":2}}],[\"object2\",{\"1\":{\"755\":2}}],[\"objecturls\",{\"1\":{\"2462\":3}}],[\"objecturl\",{\"1\":{\"421\":1}}],[\"object\",{\"0\":{\"295\":2,\"297\":1,\"313\":1,\"331\":1,\"413\":1,\"421\":1,\"659\":1,\"755\":1,\"762\":1,\"882\":3,\"883\":1,\"884\":1,\"1401\":1,\"1431\":2,\"2282\":1,\"2285\":1,\"2290\":1,\"2293\":1,\"2321\":1,\"2343\":1,\"2346\":1,\"2347\":1,\"2473\":1,\"2475\":1,\"2539\":1,\"2545\":2,\"2578\":1,\"2589\":2,\"2599\":1,\"2619\":1,\"2650\":1,\"2683\":1,\"2690\":1,\"2691\":2,\"2697\":1,\"2746\":1,\"2749\":1,\"2750\":1,\"2751\":1,\"2760\":1,\"2777\":1,\"2788\":1,\"2794\":1,\"2795\":1,\"2798\":1,\"2800\":1,\"2803\":1,\"2807\":1,\"2830\":1,\"2860\":2},\"1\":{\"88\":1,\"272\":2,\"295\":11,\"297\":3,\"313\":8,\"314\":1,\"315\":1,\"320\":4,\"331\":4,\"358\":1,\"359\":2,\"362\":1,\"387\":1,\"403\":2,\"413\":4,\"465\":1,\"481\":1,\"482\":9,\"490\":5,\"492\":2,\"494\":4,\"495\":5,\"560\":1,\"582\":1,\"587\":2,\"590\":8,\"616\":2,\"627\":4,\"641\":4,\"642\":4,\"650\":1,\"652\":1,\"653\":3,\"656\":6,\"657\":6,\"658\":2,\"659\":26,\"662\":2,\"668\":2,\"681\":6,\"689\":2,\"718\":2,\"723\":5,\"724\":2,\"725\":1,\"731\":2,\"755\":4,\"756\":1,\"760\":11,\"762\":2,\"765\":2,\"766\":1,\"767\":1,\"768\":23,\"775\":4,\"784\":2,\"785\":4,\"788\":2,\"804\":1,\"806\":1,\"859\":1,\"881\":2,\"882\":7,\"883\":7,\"884\":3,\"885\":7,\"886\":3,\"889\":1,\"1236\":1,\"1273\":1,\"1338\":1,\"1343\":1,\"1366\":6,\"1372\":2,\"1401\":1,\"1418\":1,\"1431\":26,\"1467\":4,\"1468\":2,\"1469\":2,\"1491\":1,\"1521\":1,\"1527\":1,\"1533\":1,\"1534\":8,\"1535\":2,\"1560\":2,\"1563\":2,\"1570\":1,\"1646\":2,\"1670\":1,\"2462\":1,\"2545\":1,\"2589\":1,\"2691\":1,\"2744\":1,\"2756\":1,\"2795\":1,\"2860\":1}}],[\"op\",{\"1\":{\"1334\":1,\"1758\":3}}],[\"oppose\",{\"1\":{\"1160\":1,\"1162\":4,\"1184\":1,\"1186\":1,\"1188\":1}}],[\"opp\",{\"1\":{\"1159\":3,\"1160\":1,\"1173\":1,\"1177\":1,\"1183\":3,\"1184\":1,\"1188\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"oppnum=\",{\"1\":{\"1320\":1,\"1323\":1,\"1324\":1}}],[\"oppnum++\",{\"1\":{\"1159\":1,\"1173\":1,\"1183\":1}}],[\"oppnum\",{\"1\":{\"1159\":1,\"1161\":4,\"1163\":2,\"1173\":1,\"1176\":2,\"1178\":2,\"1183\":1,\"1185\":2,\"1187\":2,\"1320\":12,\"1321\":10,\"1323\":11,\"1324\":9}}],[\"opts\",{\"1\":{\"1491\":2,\"1533\":6}}],[\"opt\",{\"1\":{\"913\":1,\"1472\":4,\"1753\":3}}],[\"optimize\",{\"1\":{\"1549\":2}}],[\"optimization\",{\"1\":{\"217\":1}}],[\"optionaltarget\",{\"0\":{\"2333\":1,\"2334\":1,\"2341\":1,\"2342\":1},\"1\":{\"2333\":1,\"2334\":1,\"2341\":1,\"2342\":1,\"2438\":2}}],[\"optionaltuple\",{\"1\":{\"1412\":5}}],[\"optionaltestinterface<testinterface>\",{\"1\":{\"1371\":2}}],[\"optionaltestinterface<t>\",{\"1\":{\"1371\":2}}],[\"optional\",{\"1\":{\"1241\":1,\"2835\":1,\"2842\":2}}],[\"option\",{\"1\":{\"653\":2}}],[\"options合并之后的结果\",{\"1\":{\"1486\":1}}],[\"options\",{\"0\":{\"1508\":1},\"1\":{\"208\":1,\"388\":2,\"560\":3,\"860\":1,\"864\":1,\"995\":1,\"998\":1,\"1001\":2,\"1014\":1,\"1072\":2,\"1454\":1,\"1484\":8,\"1485\":5,\"1486\":3,\"1491\":3,\"1492\":6,\"1493\":5,\"1505\":2,\"1507\":1,\"1525\":6,\"1527\":2,\"1528\":2,\"1533\":5,\"1543\":2,\"1547\":1,\"1548\":6,\"1549\":2,\"1557\":3,\"1561\":3,\"1571\":7}}],[\"option>\",{\"1\":{\"83\":3}}],[\"opera\",{\"1\":{\"815\":1}}],[\"operator\",{\"1\":{\"630\":1,\"1039\":2}}],[\"operate\",{\"1\":{\"584\":1}}],[\"opendb\",{\"1\":{\"1671\":2}}],[\"open\",{\"1\":{\"128\":1,\"559\":1,\"816\":2,\"817\":3,\"819\":1,\"860\":1,\"864\":1,\"866\":1,\"1671\":3}}],[\"openbluetoothclock\",{\"1\":{\"128\":2}}],[\"openbluetoothadapter\",{\"1\":{\"117\":2,\"118\":1,\"119\":1,\"127\":1,\"128\":3}}],[\"openbluetoothadapter这个\",{\"1\":{\"117\":1}}],[\"opromise\",{\"1\":{\"583\":2}}],[\"opacity\",{\"0\":{\"2667\":1},\"1\":{\"21\":1,\"64\":1,\"2442\":1,\"2737\":1}}],[\"oddadd\",{\"1\":{\"83\":4}}],[\"of方法被称为异步迭代器\",{\"1\":{\"891\":1}}],[\"of\",{\"0\":{\"299\":1,\"719\":1,\"874\":1,\"891\":1},\"1\":{\"21\":1,\"23\":1,\"64\":1,\"66\":1,\"128\":2,\"271\":1,\"272\":1,\"295\":1,\"299\":3,\"324\":2,\"433\":13,\"678\":8,\"679\":2,\"717\":1,\"719\":11,\"725\":2,\"848\":1,\"874\":7,\"879\":5,\"891\":2,\"1152\":1,\"1244\":1,\"1340\":1,\"1366\":1,\"1370\":2,\"1411\":1,\"1428\":2,\"1442\":2,\"1789\":1,\"2424\":2,\"2455\":2,\"2462\":2,\"2710\":1,\"2754\":1,\"2756\":1,\"2779\":1,\"2795\":3,\"2842\":1}}],[\"offsettop\",{\"1\":{\"226\":2}}],[\"offsetheight\",{\"1\":{\"224\":1}}],[\"offsetwidth\",{\"1\":{\"224\":1,\"1255\":2}}],[\"offset\",{\"1\":{\"21\":1,\"64\":1,\"418\":5,\"2668\":1}}],[\"off\",{\"1\":{\"19\":10,\"23\":1,\"62\":10,\"66\":1,\"1153\":1}}],[\"orthographiccamera\",{\"0\":{\"2527\":1,\"2530\":1},\"1\":{\"2510\":1,\"2528\":1}}],[\"orbitcontrols\",{\"0\":{\"2505\":1}}],[\"orm\",{\"1\":{\"2035\":1}}],[\"oracle\",{\"1\":{\"913\":1}}],[\"orangenumber\",{\"1\":{\"1372\":4}}],[\"orange\",{\"1\":{\"728\":2,\"879\":3}}],[\"or\",{\"1\":{\"343\":1,\"1436\":1,\"1454\":4,\"2578\":1,\"2754\":2,\"2842\":1}}],[\"orient\",{\"1\":{\"21\":1,\"64\":1}}],[\"originalmethod\",{\"1\":{\"1468\":2}}],[\"origin\",{\"1\":{\"11\":1,\"12\":1,\"54\":1,\"55\":1,\"860\":8,\"861\":1,\"864\":1,\"1594\":1,\"1595\":1,\"1606\":1,\"1607\":1,\"1608\":1,\"1609\":2,\"1610\":3,\"1619\":2,\"1621\":2}}],[\"order\",{\"1\":{\"19\":1,\"21\":7,\"62\":1,\"64\":7,\"1826\":4,\"2754\":1}}],[\"org\",{\"1\":{\"19\":1,\"23\":1,\"62\":1,\"66\":1,\"1131\":1,\"1141\":1,\"1153\":1}}],[\"四面缓冲几何体\",{\"0\":{\"2366\":1}}],[\"四原则\",{\"1\":{\"1851\":1}}],[\"四次挥手的过程如下\",{\"1\":{\"1728\":1}}],[\"四次挥手\",{\"0\":{\"1728\":1}}],[\"四\",{\"0\":{\"18\":1,\"61\":1,\"298\":1,\"585\":1,\"622\":1,\"733\":1,\"845\":1,\"1479\":1,\"1528\":1,\"1543\":1,\"1551\":1,\"1560\":1,\"1694\":1}}],[\"测试工具\",{\"1\":{\"1962\":1}}],[\"测试不可能发现所有错误\",{\"1\":{\"1949\":1}}],[\"测试的难度也就越大\",{\"1\":{\"1948\":1}}],[\"测试软件变更后\",{\"1\":{\"1940\":1}}],[\"测试计划提前\",{\"1\":{\"1897\":1}}],[\"测试分阶段\",{\"1\":{\"1897\":1}}],[\"测试贯穿于始终\",{\"1\":{\"1897\":1}}],[\"测试压缩文件是否正确无误\",{\"1\":{\"1021\":1}}],[\"测试宽松相等时\",{\"1\":{\"772\":1}}],[\"测试严格相等时\",{\"1\":{\"772\":1}}],[\"测试版小程序\",{\"1\":{\"108\":1}}],[\"测试\",{\"0\":{\"17\":1,\"32\":1,\"60\":1,\"75\":1},\"1\":{\"1855\":1,\"1902\":1,\"2212\":1}}],[\"hsts\",{\"0\":{\"1679\":1},\"1\":{\"1679\":1}}],[\"hnuser\",{\"1\":{\"957\":1}}],[\"hnust\",{\"1\":{\"83\":1}}],[\"hnlinux\",{\"1\":{\"948\":1,\"951\":1}}],[\"h或\",{\"1\":{\"930\":1,\"1009\":1,\"1021\":1,\"1032\":1}}],[\"husfv\",{\"1\":{\"930\":1}}],[\"husky文件下pre\",{\"1\":{\"31\":1,\"74\":1}}],[\"husky\",{\"1\":{\"25\":1,\"26\":1,\"27\":1,\"33\":3,\"68\":1,\"69\":1,\"70\":1,\"76\":3}}],[\"hugestring\",{\"1\":{\"430\":3,\"432\":5}}],[\"href\",{\"1\":{\"413\":1}}],[\"href=\",{\"1\":{\"239\":3}}],[\"hotfix\",{\"1\":{\"1601\":1}}],[\"hover\",{\"1\":{\"1256\":4}}],[\"hovertooltip\",{\"1\":{\"1256\":1}}],[\"hook\",{\"1\":{\"1212\":2,\"1273\":1,\"1309\":1,\"1485\":2,\"1486\":2},\"2\":{\"1214\":1,\"1231\":1,\"1239\":1,\"1253\":1,\"1262\":1,\"1271\":1,\"1277\":1,\"1292\":1,\"1305\":1,\"1314\":1}}],[\"hooks\",{\"1\":{\"251\":1,\"1212\":2,\"1294\":1}}],[\"hose\",{\"1\":{\"1153\":1}}],[\"hosts\",{\"1\":{\"1684\":1}}],[\"hostname=localhost\",{\"1\":{\"1102\":1}}],[\"hostname\",{\"1\":{\"1102\":1,\"1116\":1,\"1118\":1}}],[\"host\",{\"1\":{\"864\":1,\"1152\":2,\"1677\":2}}],[\"house\",{\"1\":{\"535\":2}}],[\"hoisting\",{\"1\":{\"500\":2}}],[\"howmany\",{\"1\":{\"703\":2}}],[\"how\",{\"1\":{\"255\":1}}],[\"homebrew\",{\"1\":{\"1472\":4}}],[\"homebrew安装mysql\",{\"0\":{\"1472\":1}}],[\"home\",{\"1\":{\"82\":2,\"913\":1,\"945\":1,\"951\":1,\"967\":2,\"1007\":2,\"1019\":3,\"1057\":1,\"1061\":1,\"1376\":3}}],[\"h2字号标题\",{\"1\":{\"218\":1}}],[\"h2>\",{\"1\":{\"83\":2,\"1161\":1,\"1176\":1,\"1185\":1,\"1196\":2,\"1197\":2,\"1200\":1,\"1204\":1,\"1255\":2,\"1265\":1,\"1267\":2,\"1315\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"h1\",{\"1\":{\"218\":1}}],[\"h1>\",{\"1\":{\"83\":1,\"215\":1,\"1299\":1,\"1300\":1,\"1705\":1}}],[\"handedness\",{\"1\":{\"2710\":1}}],[\"handed\",{\"1\":{\"2710\":1}}],[\"handshake\",{\"1\":{\"1726\":1}}],[\"handleendtag\",{\"1\":{\"1550\":2}}],[\"handlestarttag\",{\"1\":{\"1550\":2}}],[\"handlesharing\",{\"1\":{\"345\":2}}],[\"handlenavigation\",{\"1\":{\"1312\":1}}],[\"handlechars\",{\"1\":{\"1550\":2}}],[\"handleclick\",{\"1\":{\"1281\":2,\"1286\":4,\"1303\":2}}],[\"handlecommentsubmit\",{\"1\":{\"1211\":3}}],[\"handleincrement\",{\"1\":{\"1287\":2}}],[\"handleincrease\",{\"1\":{\"1269\":3}}],[\"handleinputchange\",{\"1\":{\"1212\":2}}],[\"handleuserclick\",{\"1\":{\"1268\":1}}],[\"handleaddtodo\",{\"1\":{\"1212\":4}}],[\"handledelete\",{\"1\":{\"1210\":4}}],[\"handlers\",{\"1\":{\"1486\":4}}],[\"handleresize\",{\"1\":{\"1247\":3,\"1290\":3}}],[\"handler\",{\"1\":{\"902\":1,\"1491\":14}}],[\"handle\",{\"1\":{\"559\":1,\"1490\":2,\"1491\":2}}],[\"hard\",{\"1\":{\"1614\":2,\"1615\":2}}],[\"harmony\",{\"1\":{\"596\":1}}],[\"hamano\",{\"1\":{\"1577\":1}}],[\"hap\",{\"1\":{\"651\":1}}],[\"have\",{\"1\":{\"584\":1,\"1244\":1,\"1369\":1}}],[\"hairlines\",{\"1\":{\"208\":1}}],[\"hasattribute\",{\"0\":{\"2310\":1}}],[\"hasownproperty\",{\"1\":{\"331\":2,\"482\":2,\"743\":1,\"760\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":2,\"1431\":1,\"1485\":1}}],[\"hasown\",{\"0\":{\"331\":1},\"1\":{\"331\":2}}],[\"hashmap\",{\"1\":{\"2282\":2,\"2290\":1,\"2296\":3}}],[\"hash>\",{\"1\":{\"1602\":2}}],[\"hash\",{\"0\":{\"863\":1},\"1\":{\"272\":1,\"863\":8,\"1153\":2,\"1602\":1}}],[\"has\",{\"1\":{\"250\":2,\"271\":4,\"272\":2,\"433\":14,\"535\":2,\"1366\":1,\"1411\":1,\"1469\":2,\"1493\":5,\"1541\":4,\"1561\":1,\"1571\":1,\"2710\":1}}],[\"haslayout\",{\"1\":{\"149\":1,\"183\":1}}],[\"hascomma\",{\"1\":{\"109\":2}}],[\"highp\",{\"1\":{\"2671\":1,\"2788\":2}}],[\"high\",{\"1\":{\"1152\":1,\"2788\":1}}],[\"histories\",{\"1\":{\"1609\":3}}],[\"history\",{\"1\":{\"337\":1,\"1083\":2,\"1124\":1}}],[\"historylist\",{\"1\":{\"128\":2}}],[\"histsize=1000\",{\"1\":{\"1102\":1}}],[\"histsize\",{\"1\":{\"1102\":1,\"1116\":1}}],[\"hissize\",{\"1\":{\"1083\":1}}],[\"hint\",{\"1\":{\"806\":10}}],[\"hints\",{\"0\":{\"805\":1},\"1\":{\"804\":1,\"805\":1,\"806\":6,\"807\":3}}],[\"hijk\",{\"1\":{\"525\":1}}],[\"hi\",{\"1\":{\"326\":7,\"1428\":2}}],[\"hide\",{\"1\":{\"1820\":5}}],[\"hideloading\",{\"1\":{\"128\":1}}],[\"hidden\",{\"0\":{\"184\":1},\"1\":{\"151\":1,\"152\":1,\"153\":1,\"184\":2,\"1256\":1,\"1653\":1}}],[\"hidden|auto|scroll\",{\"1\":{\"148\":1}}],[\"hemispherelight\",{\"0\":{\"2863\":1,\"2864\":1},\"1\":{\"2864\":1}}],[\"he\",{\"1\":{\"1501\":1}}],[\"herf=\",{\"1\":{\"859\":1}}],[\"here\",{\"1\":{\"340\":2}}],[\"he40\",{\"1\":{\"663\":1}}],[\"help列出指令格式\",{\"1\":{\"981\":1}}],[\"help\",{\"1\":{\"584\":1,\"930\":1,\"970\":2,\"981\":1,\"1003\":1,\"1009\":2,\"1014\":1,\"1021\":1,\"1032\":3,\"1035\":1,\"1038\":2}}],[\"helle\",{\"1\":{\"280\":1,\"523\":1}}],[\"hello<div><\",{\"1\":{\"1550\":1}}],[\"helloreact\",{\"1\":{\"1196\":1,\"1200\":3,\"1204\":1}}],[\"hello1\",{\"1\":{\"616\":1}}],[\"hello12\",{\"1\":{\"616\":1}}],[\"helloworld\",{\"1\":{\"616\":1}}],[\"hellohello\",{\"1\":{\"282\":1,\"545\":1}}],[\"hello\",{\"1\":{\"125\":1,\"127\":1,\"249\":1,\"254\":2,\"268\":2,\"272\":2,\"279\":1,\"280\":2,\"281\":1,\"282\":1,\"295\":3,\"326\":7,\"332\":1,\"354\":1,\"355\":4,\"364\":5,\"365\":5,\"388\":4,\"389\":2,\"428\":3,\"429\":2,\"431\":2,\"471\":3,\"482\":1,\"515\":1,\"517\":2,\"522\":1,\"523\":2,\"524\":1,\"545\":1,\"568\":2,\"594\":1,\"595\":4,\"602\":1,\"604\":1,\"616\":2,\"634\":1,\"639\":1,\"666\":2,\"774\":1,\"785\":1,\"788\":2,\"790\":1,\"792\":1,\"795\":1,\"840\":1,\"843\":2,\"874\":2,\"882\":3,\"883\":1,\"895\":5,\"1016\":3,\"1078\":1,\"1079\":6,\"1196\":3,\"1200\":4,\"1204\":2,\"1374\":1,\"1386\":2,\"1387\":1,\"1388\":1,\"1389\":1,\"1390\":1,\"1410\":3,\"1418\":1,\"1428\":5,\"1466\":4,\"1527\":1,\"1539\":1,\"1547\":1,\"1549\":1,\"1556\":1,\"1568\":1}}],[\"heartshape\",{\"1\":{\"2403\":9}}],[\"heap\",{\"1\":{\"437\":1}}],[\"heap就变得正常了\",{\"1\":{\"436\":1}}],[\"heap都会出现蓝色的峰值\",{\"1\":{\"436\":1}}],[\"head^\",{\"1\":{\"1614\":1}}],[\"head~3\",{\"1\":{\"1603\":1}}],[\"head~n\",{\"1\":{\"1603\":1,\"1614\":1}}],[\"heading\",{\"1\":{\"930\":1}}],[\"header中的set\",{\"1\":{\"1658\":1,\"1659\":1}}],[\"header\",{\"1\":{\"1153\":6,\"1161\":1,\"1167\":1,\"1168\":1,\"1176\":1,\"1185\":1,\"1315\":2,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1,\"1689\":1,\"1699\":1}}],[\"header和文件的开始放在一个文件里发布\",{\"1\":{\"1153\":1}}],[\"headerslot\",{\"1\":{\"1315\":3}}],[\"headers\",{\"1\":{\"860\":5,\"864\":3,\"1073\":4}}],[\"header>\",{\"1\":{\"215\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"1167\":1,\"1168\":1}}],[\"head\",{\"1\":{\"338\":1,\"340\":2,\"341\":1,\"342\":1,\"343\":1,\"1614\":2,\"1615\":2,\"1634\":1,\"1637\":1}}],[\"head>\",{\"1\":{\"178\":1,\"436\":1,\"1705\":1,\"1839\":1}}],[\"hex\",{\"1\":{\"127\":1}}],[\"hexcharcodestr\",{\"1\":{\"123\":2,\"127\":2}}],[\"hexcharcodetostr\",{\"1\":{\"123\":2,\"127\":2}}],[\"hexarr\",{\"1\":{\"123\":2,\"127\":2}}],[\"heightlayouteffect\",{\"1\":{\"1255\":2}}],[\"heighteffect\",{\"1\":{\"1255\":2}}],[\"height\",{\"0\":{\"2542\":1,\"2587\":1,\"2835\":1,\"2843\":1,\"2845\":1,\"2846\":1},\"1\":{\"21\":4,\"64\":4,\"118\":1,\"119\":1,\"127\":1,\"171\":2,\"181\":1,\"202\":2,\"205\":3,\"207\":1,\"297\":1,\"639\":1,\"838\":3,\"850\":8,\"1255\":4,\"1256\":2,\"1289\":1,\"2528\":2,\"2542\":1,\"2566\":1,\"2587\":1,\"2843\":1,\"2845\":1,\"2846\":1,\"2872\":2,\"2884\":1}}],[\"h3>\",{\"1\":{\"83\":1}}],[\"hyphens\",{\"1\":{\"21\":1,\"64\":1}}],[\"htp协议无法做到服务器主动推送信息\",{\"1\":{\"1737\":1}}],[\"ht\",{\"1\":{\"1152\":1}}],[\"htaccess\",{\"1\":{\"1152\":1}}],[\"htm\",{\"1\":{\"1152\":3,\"1153\":1}}],[\"html文档\",{\"1\":{\"2753\":1,\"2763\":1}}],[\"html5\",{\"1\":{\"1823\":3}}],[\"html4\",{\"1\":{\"1823\":3}}],[\"htmlfolder\",{\"1\":{\"1823\":4}}],[\"html解析\",{\"0\":{\"1701\":1}}],[\"html的页面\",{\"1\":{\"861\":1}}],[\"html页面中使用了\",{\"1\":{\"861\":1}}],[\"htmlcollection\",{\"0\":{\"724\":1},\"1\":{\"721\":1,\"724\":4}}],[\"htmldocument\",{\"1\":{\"659\":1}}],[\"htmldivelement\",{\"1\":{\"339\":1,\"434\":1}}],[\"html>\",{\"1\":{\"215\":1,\"436\":2,\"1705\":1,\"1839\":2}}],[\"html为网页文档内容提供上下文结构和含义\",{\"1\":{\"215\":1}}],[\"html语义化<\",{\"1\":{\"215\":1}}],[\"html语义化\",{\"0\":{\"215\":1},\"1\":{\"215\":1}}],[\"htmlimageelement\",{\"1\":{\"87\":1}}],[\"htmlwhitespacesensitivity\",{\"1\":{\"20\":1,\"63\":1}}],[\"html\",{\"0\":{\"131\":1,\"1550\":1},\"1\":{\"19\":3,\"22\":1,\"27\":1,\"62\":3,\"65\":1,\"70\":1,\"206\":4,\"234\":5,\"388\":2,\"395\":1,\"462\":1,\"463\":5,\"472\":1,\"646\":1,\"724\":2,\"816\":1,\"861\":3,\"862\":5,\"863\":5,\"864\":1,\"865\":2,\"866\":1,\"867\":5,\"909\":1,\"1019\":6,\"1131\":1,\"1146\":6,\"1150\":3,\"1152\":12,\"1153\":7,\"1332\":1,\"1550\":12,\"1677\":1,\"1698\":1,\"1699\":1,\"1704\":1,\"1707\":1,\"1823\":1},\"2\":{\"137\":1,\"138\":1,\"209\":1,\"220\":1,\"227\":1}}],[\"http重定向就是应用层的请求转发\",{\"1\":{\"2077\":1}}],[\"http重定向\",{\"1\":{\"2077\":1}}],[\"httpd\",{\"0\":{\"1695\":1},\"1\":{\"1695\":1}}],[\"httponly\",{\"1\":{\"1661\":3}}],[\"httprequest\",{\"1\":{\"594\":2}}],[\"httppromise\",{\"1\":{\"565\":6,\"594\":1}}],[\"http\",{\"1\":{\"19\":1,\"23\":1,\"62\":1,\"66\":1,\"191\":1,\"239\":2,\"371\":2,\"414\":1,\"559\":3,\"813\":2,\"817\":4,\"859\":1,\"860\":2,\"861\":3,\"862\":2,\"863\":2,\"864\":12,\"865\":3,\"866\":6,\"867\":3,\"1141\":1,\"1152\":2,\"1153\":5,\"1249\":1,\"1335\":1,\"1659\":1,\"1677\":5,\"1689\":1,\"1697\":2}}],[\"https和http协议\",{\"1\":{\"2061\":1}}],[\"https\",{\"1\":{\"11\":1,\"19\":1,\"20\":1,\"41\":1,\"54\":1,\"62\":1,\"63\":1,\"108\":2,\"334\":6,\"565\":3,\"823\":1,\"1131\":1,\"1152\":1,\"1153\":2,\"1168\":1,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1,\"1582\":1,\"1583\":1,\"1677\":2,\"1679\":1}}],[\"h\",{\"1\":{\"16\":1,\"59\":1,\"80\":2,\"82\":2,\"83\":2,\"254\":1,\"634\":1,\"840\":2,\"919\":1,\"920\":2,\"986\":1,\"989\":2,\"1018\":1,\"1035\":1,\"1061\":2,\"1072\":1,\"1539\":2,\"1547\":2,\"1556\":2,\"1568\":2}}],[\"eyesep\",{\"0\":{\"2554\":1}}],[\"erp\",{\"0\":{\"1868\":1}}],[\"errcode\",{\"1\":{\"128\":2}}],[\"errcode=10000\",{\"1\":{\"117\":1}}],[\"errmsg\",{\"1\":{\"122\":1,\"127\":1}}],[\"err\",{\"1\":{\"117\":2,\"118\":4,\"119\":8,\"121\":2,\"122\":2,\"123\":2,\"125\":2,\"126\":2,\"127\":18,\"128\":25,\"328\":10,\"341\":2,\"560\":3,\"565\":1,\"569\":7,\"572\":2,\"581\":4,\"584\":14,\"590\":3,\"591\":4,\"819\":2,\"821\":2,\"822\":2,\"823\":2,\"1168\":2}}],[\"errormsg\",{\"1\":{\"1789\":11}}],[\"errors\",{\"1\":{\"328\":1}}],[\"error\",{\"0\":{\"333\":1},\"1\":{\"19\":3,\"62\":3,\"117\":1,\"118\":2,\"119\":4,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":15,\"128\":14,\"318\":1,\"328\":9,\"333\":4,\"338\":3,\"339\":2,\"340\":5,\"341\":6,\"342\":3,\"343\":3,\"345\":4,\"358\":1,\"381\":2,\"394\":1,\"395\":1,\"467\":1,\"559\":2,\"565\":4,\"566\":1,\"568\":4,\"569\":3,\"571\":1,\"575\":3,\"578\":3,\"580\":2,\"584\":4,\"659\":2,\"765\":1,\"819\":2,\"1150\":1,\"1152\":9,\"1153\":4,\"1249\":4,\"1273\":1,\"1287\":1,\"1338\":2,\"1339\":4,\"1340\":2,\"1354\":1,\"1369\":1,\"1372\":1,\"1374\":1,\"1410\":2,\"1415\":1,\"1416\":2,\"1418\":11,\"1436\":1,\"1448\":1,\"1671\":1,\"1753\":1,\"1754\":2,\"1789\":3,\"1829\":1,\"2455\":1,\"2462\":1}}],[\"e1006\",{\"1\":{\"1460\":1}}],[\"eject\",{\"1\":{\"1332\":2}}],[\"e<范本样式>\",{\"1\":{\"1014\":1}}],[\"e<有效期限>\",{\"1\":{\"944\":1,\"950\":1}}],[\"edf算法\",{\"1\":{\"2190\":1}}],[\"edges\",{\"1\":{\"2450\":2}}],[\"edgesgeometry\",{\"0\":{\"2449\":1,\"2450\":1},\"1\":{\"2450\":1}}],[\"edge\",{\"1\":{\"1737\":1}}],[\"ed\",{\"1\":{\"1009\":4}}],[\"edit\",{\"1\":{\"31\":1,\"74\":1,\"1600\":1}}],[\"editorconfig\",{\"1\":{\"23\":1,\"66\":1}}],[\"editorconfig文件\",{\"1\":{\"23\":1,\"66\":1}}],[\"e或\",{\"1\":{\"1009\":1}}],[\"e选项显示行结束符\",{\"1\":{\"984\":1}}],[\"ecmscript\",{\"1\":{\"1641\":1}}],[\"ecmasript\",{\"1\":{\"681\":1}}],[\"ecmascript®\",{\"1\":{\"500\":1}}],[\"ecmascript6\",{\"1\":{\"499\":1,\"500\":2}}],[\"ecmascript\",{\"1\":{\"333\":1,\"334\":1,\"445\":1,\"467\":2,\"674\":2,\"679\":1,\"691\":1,\"704\":1,\"707\":1,\"708\":1,\"709\":1,\"711\":1,\"1356\":1,\"1454\":1}}],[\"ecmaversion\",{\"1\":{\"19\":1}}],[\"echo\",{\"0\":{\"1078\":1},\"1\":{\"1016\":1,\"1078\":2,\"1079\":1,\"1086\":6,\"1095\":1,\"1096\":1,\"1103\":1,\"1110\":2,\"1113\":1}}],[\"ect\",{\"0\":{\"937\":1}}],[\"etc1\",{\"1\":{\"2798\":1}}],[\"etc\",{\"0\":{\"938\":1,\"939\":1,\"940\":1,\"1118\":1,\"1121\":1},\"1\":{\"913\":1,\"937\":1,\"938\":1,\"943\":1,\"953\":1,\"1016\":2,\"1050\":1,\"1083\":1,\"1087\":1,\"1116\":2,\"1120\":1,\"1121\":1,\"1146\":2,\"1153\":6,\"1472\":1}}],[\"eft\",{\"1\":{\"1460\":1}}],[\"effect\",{\"1\":{\"1241\":1}}],[\"ef\",{\"1\":{\"990\":1,\"1139\":1}}],[\"efg\",{\"1\":{\"525\":2}}],[\"efine\",{\"1\":{\"464\":1}}],[\"eai\",{\"0\":{\"1885\":1}}],[\"east\",{\"1\":{\"1407\":3,\"1408\":2}}],[\"eat\",{\"1\":{\"495\":2}}],[\"eating\",{\"1\":{\"486\":2,\"488\":2,\"494\":2}}],[\"each\",{\"1\":{\"21\":1,\"64\":1}}],[\"emailreg\",{\"1\":{\"1789\":2}}],[\"email\",{\"1\":{\"1588\":4}}],[\"emitdecoratormetadata\",{\"1\":{\"1454\":1}}],[\"emp\",{\"1\":{\"1435\":6}}],[\"employee2\",{\"1\":{\"1740\":3,\"1743\":4}}],[\"employee1\",{\"1\":{\"1740\":3,\"1743\":4}}],[\"employee\",{\"1\":{\"1411\":4,\"1435\":2,\"1740\":3,\"1743\":7}}],[\"empty\",{\"1\":{\"19\":1,\"21\":2,\"62\":1,\"64\":2,\"394\":1,\"678\":1,\"1244\":1,\"1653\":2}}],[\"emotion\",{\"1\":{\"255\":1}}],[\"even\",{\"1\":{\"1653\":2}}],[\"eventtarget\",{\"1\":{\"395\":1}}],[\"eventloop\",{\"1\":{\"376\":2,\"379\":1,\"903\":1}}],[\"event\",{\"0\":{\"238\":1,\"239\":1,\"240\":2,\"241\":2},\"1\":{\"232\":4,\"237\":4,\"239\":3,\"240\":5,\"241\":2,\"340\":6,\"378\":1,\"383\":1,\"395\":2,\"902\":1,\"1212\":2,\"1248\":2,\"1521\":1,\"1735\":1}}],[\"events=\",{\"1\":{\"1510\":1}}],[\"eventsmixin\",{\"0\":{\"1518\":1},\"1\":{\"1505\":2}}],[\"events\",{\"1\":{\"21\":1,\"64\":1,\"1152\":1,\"1153\":1,\"1505\":1}}],[\"every\",{\"0\":{\"715\":1,\"876\":1},\"1\":{\"363\":1,\"682\":1,\"711\":1,\"715\":1,\"876\":3,\"879\":2}}],[\"ev\",{\"1\":{\"234\":2,\"239\":6,\"240\":2,\"340\":4}}],[\"evaluate\",{\"1\":{\"1570\":1,\"1571\":2}}],[\"eval\",{\"1\":{\"94\":1,\"350\":3}}],[\"elm\",{\"1\":{\"1476\":3}}],[\"elapsed\",{\"1\":{\"1282\":1}}],[\"el7\",{\"1\":{\"1141\":1}}],[\"ele\",{\"1\":{\"1820\":17}}],[\"elephant\",{\"1\":{\"728\":2}}],[\"elem2\",{\"1\":{\"724\":3}}],[\"elem1\",{\"1\":{\"724\":5}}],[\"elementui\",{\"1\":{\"80\":2,\"1766\":1}}],[\"elementplusresolve\",{\"1\":{\"39\":2}}],[\"elementplusresolver\",{\"1\":{\"39\":3}}],[\"element\",{\"0\":{\"37\":1,\"80\":1,\"404\":1},\"1\":{\"19\":2,\"21\":1,\"37\":2,\"39\":1,\"62\":2,\"64\":1,\"80\":3,\"305\":4,\"404\":11,\"1363\":1,\"1366\":1,\"1411\":1,\"1550\":9}}],[\"else语句\",{\"1\":{\"622\":1}}],[\"else\",{\"1\":{\"83\":1,\"94\":1,\"128\":3,\"339\":2,\"341\":1,\"342\":1,\"345\":1,\"359\":1,\"465\":2,\"559\":1,\"560\":1,\"566\":1,\"568\":1,\"569\":1,\"591\":1,\"637\":1,\"698\":2,\"735\":1,\"765\":1,\"766\":1,\"767\":1,\"789\":1,\"795\":1,\"815\":1,\"831\":1,\"862\":1,\"1249\":1,\"1251\":1,\"1315\":2,\"1416\":4,\"1423\":1,\"1476\":4,\"1477\":2,\"1478\":6,\"1479\":1,\"1485\":4,\"1491\":1,\"1493\":1,\"1528\":3,\"1535\":1,\"1542\":3,\"1551\":1,\"1570\":1,\"1571\":2,\"1789\":1,\"1814\":2}}],[\"el\",{\"1\":{\"80\":1,\"87\":6,\"231\":1,\"232\":1,\"1475\":1,\"1476\":13,\"1477\":7,\"1478\":17,\"1483\":1,\"1486\":4,\"1490\":1,\"1525\":8,\"1526\":2,\"1528\":13,\"1533\":1,\"1539\":1,\"1547\":2,\"1548\":7,\"1551\":7,\"1556\":1,\"1558\":1,\"1568\":1}}],[\"enable\",{\"1\":{\"1137\":1,\"1145\":1}}],[\"enabled\",{\"1\":{\"39\":2,\"2805\":1}}],[\"english\",{\"1\":{\"486\":1,\"488\":1,\"836\":6,\"844\":2,\"847\":3}}],[\"engine\",{\"1\":{\"217\":1}}],[\"entity\",{\"1\":{\"1501\":1,\"2031\":1}}],[\"enter向下\",{\"1\":{\"986\":1}}],[\"enter\",{\"1\":{\"340\":1,\"587\":2,\"1057\":1}}],[\"entries\",{\"0\":{\"295\":1,\"879\":1,\"882\":1},\"1\":{\"295\":3,\"313\":3,\"314\":2,\"315\":2,\"710\":3,\"879\":5,\"882\":2}}],[\"entry\",{\"0\":{\"1502\":1},\"1\":{\"94\":6,\"1501\":2}}],[\"entry=tk\",{\"1\":{\"94\":2}}],[\"en\",{\"1\":{\"334\":1,\"436\":1,\"1131\":1,\"1153\":1,\"1839\":1}}],[\"encoding\",{\"0\":{\"1702\":1},\"1\":{\"109\":1,\"2799\":1}}],[\"enumerable\",{\"1\":{\"490\":1,\"495\":1,\"884\":1,\"885\":2,\"1467\":2,\"1535\":1,\"1570\":1}}],[\"enum\",{\"0\":{\"1406\":1},\"1\":{\"30\":1,\"73\":1,\"1407\":2,\"1408\":1,\"1409\":2}}],[\"end代表结束符号>\",{\"1\":{\"1550\":1}}],[\"endtagmatch\",{\"1\":{\"1550\":4}}],[\"endtag\",{\"1\":{\"1550\":2}}],[\"endpoint\",{\"1\":{\"1249\":1}}],[\"endings\",{\"1\":{\"388\":1}}],[\"endswith\",{\"0\":{\"281\":1,\"524\":1},\"1\":{\"281\":5,\"524\":5}}],[\"end\",{\"1\":{\"23\":1,\"66\":1,\"287\":2,\"389\":2,\"400\":1,\"528\":2,\"684\":2,\"685\":2,\"702\":3,\"758\":1,\"859\":1,\"860\":3,\"864\":3,\"866\":1,\"1057\":1,\"1061\":1,\"1550\":3,\"1839\":3,\"2741\":1}}],[\"endofline\",{\"1\":{\"20\":1,\"63\":1,\"103\":1}}],[\"envmap\",{\"1\":{\"2562\":1}}],[\"envname\",{\"1\":{\"1101\":1}}],[\"environment\",{\"1\":{\"249\":2,\"2737\":1}}],[\"env\",{\"0\":{\"1101\":1},\"1\":{\"19\":1,\"62\":1,\"108\":2,\"109\":4,\"111\":3,\"1101\":1,\"1501\":1,\"1505\":2}}],[\"eqeqeq\",{\"1\":{\"19\":1,\"62\":1}}],[\"esb\",{\"0\":{\"2040\":1}}],[\"established\",{\"1\":{\"1726\":2,\"1727\":2,\"1728\":1}}],[\"esm\",{\"1\":{\"1501\":2}}],[\"esmodule\",{\"1\":{\"39\":1}}],[\"esnext\",{\"1\":{\"1454\":1}}],[\"es3\",{\"1\":{\"1454\":1}}],[\"esc\",{\"1\":{\"1057\":2,\"1065\":1}}],[\"es2022\",{\"1\":{\"331\":1}}],[\"es2021\",{\"1\":{\"328\":1}}],[\"es2020\",{\"1\":{\"320\":1,\"321\":1,\"322\":1,\"643\":1,\"644\":1}}],[\"es2016\",{\"1\":{\"1454\":1}}],[\"es2015\",{\"1\":{\"1454\":2}}],[\"es2019\",{\"1\":{\"311\":1,\"316\":2,\"317\":2,\"318\":3,\"720\":1}}],[\"es2018\",{\"1\":{\"300\":1,\"301\":1,\"575\":1}}],[\"es2017\",{\"1\":{\"296\":1,\"334\":1,\"1454\":1}}],[\"es13\",{\"0\":{\"330\":1}}],[\"es12\",{\"0\":{\"325\":1},\"1\":{\"326\":4,\"329\":1}}],[\"es10\",{\"0\":{\"306\":1},\"1\":{\"307\":1}}],[\"es11\",{\"0\":{\"244\":1,\"319\":1},\"2\":{\"336\":1}}],[\"es9\",{\"0\":{\"298\":1},\"1\":{\"307\":1}}],[\"es5\",{\"1\":{\"295\":1,\"490\":1,\"743\":1,\"1454\":2,\"1823\":3}}],[\"es8\",{\"0\":{\"291\":1},\"1\":{\"295\":1,\"297\":1}}],[\"es7\",{\"0\":{\"288\":1},\"1\":{\"289\":1,\"290\":1,\"594\":1}}],[\"es\",{\"0\":{\"466\":1,\"1866\":1},\"1\":{\"273\":2,\"448\":1,\"467\":2,\"469\":1,\"470\":1,\"473\":5,\"474\":3,\"683\":1,\"1501\":2}}],[\"es6\",{\"0\":{\"244\":1,\"245\":1,\"495\":1,\"678\":1,\"732\":1,\"739\":1},\"1\":{\"62\":1,\"246\":1,\"249\":3,\"250\":1,\"251\":1,\"252\":1,\"255\":1,\"256\":2,\"259\":1,\"268\":1,\"271\":1,\"272\":1,\"273\":1,\"276\":1,\"301\":1,\"444\":2,\"495\":1,\"501\":2,\"507\":3,\"508\":2,\"511\":1,\"587\":1,\"588\":1,\"650\":1,\"653\":1,\"657\":1,\"674\":1,\"678\":1,\"679\":5,\"681\":2,\"710\":1,\"719\":1,\"732\":3,\"737\":1,\"739\":1,\"742\":1,\"755\":1,\"874\":1,\"895\":2,\"898\":1,\"902\":1,\"903\":3,\"1334\":1,\"1454\":1,\"1823\":3},\"2\":{\"336\":1}}],[\"essential\",{\"1\":{\"19\":1,\"39\":1,\"62\":1,\"63\":1}}],[\"eslint等等\",{\"1\":{\"1549\":1}}],[\"eslintignore文件\",{\"1\":{\"19\":1,\"62\":1}}],[\"eslintrc\",{\"1\":{\"19\":1,\"39\":5,\"62\":2,\"63\":1}}],[\"eslint\",{\"0\":{\"19\":1,\"62\":1,\"101\":1,\"102\":1},\"1\":{\"19\":7,\"22\":2,\"27\":2,\"39\":3,\"62\":5,\"63\":3,\"65\":2,\"70\":2,\"250\":1},\"2\":{\"105\":1,\"106\":1}}],[\"exist\",{\"1\":{\"1338\":1,\"1414\":3}}],[\"exitfullcreen\",{\"1\":{\"339\":1}}],[\"exitfullscreen\",{\"1\":{\"339\":2}}],[\"ex1\",{\"1\":{\"1041\":2}}],[\"exclude<keyof\",{\"1\":{\"1380\":1}}],[\"exclude<string\",{\"1\":{\"1378\":1}}],[\"exclude<\",{\"1\":{\"1378\":2}}],[\"exclude<t\",{\"1\":{\"1378\":2}}],[\"exclude<文件名或目录>\",{\"1\":{\"1009\":1}}],[\"exclude\",{\"0\":{\"1378\":1},\"1\":{\"1009\":1,\"1453\":1}}],[\"ex\",{\"1\":{\"582\":2}}],[\"examples\",{\"1\":{\"2359\":1}}],[\"example\",{\"1\":{\"254\":2,\"331\":3,\"1025\":4,\"1243\":1,\"1244\":1,\"1705\":1,\"1789\":4}}],[\"expires\",{\"1\":{\"1659\":1}}],[\"expires=wed\",{\"1\":{\"1659\":1}}],[\"exprorfn可能传递过来的是一个字符串\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"exprorfn\",{\"1\":{\"1491\":2,\"1492\":2,\"1493\":7,\"1557\":5,\"1561\":5,\"1571\":7}}],[\"expr\",{\"0\":{\"1113\":1},\"1\":{\"1113\":1}}],[\"expression\",{\"1\":{\"445\":1,\"1006\":1,\"1366\":1,\"2473\":1,\"2475\":1}}],[\"express\",{\"1\":{\"190\":1,\"191\":3,\"859\":3,\"860\":8,\"861\":8,\"862\":8,\"863\":8},\"2\":{\"195\":1,\"198\":1}}],[\"expand\",{\"1\":{\"1009\":1}}],[\"expose\",{\"1\":{\"860\":1}}],[\"export\",{\"0\":{\"274\":1},\"1\":{\"39\":1,\"82\":1,\"83\":4,\"87\":1,\"88\":1,\"128\":1,\"274\":9,\"276\":6,\"277\":4,\"334\":6,\"449\":1,\"455\":1,\"469\":9,\"470\":1,\"472\":2,\"1100\":1,\"1111\":1,\"1158\":1,\"1159\":4,\"1160\":2,\"1161\":2,\"1162\":2,\"1163\":1,\"1167\":6,\"1168\":6,\"1173\":1,\"1174\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1180\":1,\"1181\":1,\"1183\":4,\"1184\":2,\"1185\":1,\"1186\":1,\"1187\":1,\"1188\":2,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1220\":1,\"1222\":1,\"1227\":1,\"1235\":1,\"1251\":1,\"1255\":1,\"1256\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1281\":1,\"1289\":1,\"1299\":1,\"1300\":1,\"1311\":1,\"1312\":1,\"1315\":2,\"1320\":3,\"1321\":4,\"1323\":3,\"1324\":4,\"1354\":2,\"1476\":2,\"1479\":1,\"1484\":2,\"1485\":2,\"1486\":2,\"1491\":1,\"1492\":2,\"1493\":2,\"1502\":1,\"1503\":1,\"1504\":1,\"1505\":1,\"1525\":1,\"1526\":1,\"1527\":4,\"1528\":3,\"1533\":5,\"1534\":1,\"1535\":2,\"1540\":1,\"1541\":1,\"1542\":1,\"1543\":2,\"1548\":1,\"1549\":1,\"1550\":1,\"1551\":1,\"1552\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1561\":1,\"1562\":3,\"1571\":3,\"1817\":1}}],[\"exports2\",{\"1\":{\"452\":1}}],[\"exports1\",{\"1\":{\"452\":1}}],[\"exports=module\",{\"1\":{\"452\":1}}],[\"exports=\",{\"1\":{\"452\":1}}],[\"exports\",{\"1\":{\"16\":1,\"19\":1,\"20\":1,\"21\":1,\"27\":1,\"30\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"70\":1,\"73\":1,\"111\":1,\"449\":2,\"451\":1,\"452\":14,\"455\":3,\"464\":7,\"465\":4,\"1335\":1}}],[\"exp\",{\"1\":{\"277\":1}}],[\"experimentaldecorators\",{\"1\":{\"1454\":1}}],[\"experimental\",{\"1\":{\"94\":1,\"474\":2}}],[\"exe\",{\"1\":{\"94\":1,\"578\":8,\"597\":8}}],[\"execquit=\",{\"1\":{\"1137\":1}}],[\"execstop=\",{\"1\":{\"1137\":1}}],[\"execstart=\",{\"1\":{\"1137\":1}}],[\"execstartpre=\",{\"1\":{\"1137\":1}}],[\"execreload=\",{\"1\":{\"1137\":1}}],[\"execute\",{\"1\":{\"1029\":1,\"1826\":4}}],[\"executor\",{\"1\":{\"584\":2}}],[\"execution\",{\"1\":{\"351\":1}}],[\"execfun\",{\"1\":{\"584\":2}}],[\"execfunctionwithcatcherror\",{\"1\":{\"584\":5}}],[\"execcommand\",{\"1\":{\"344\":1}}],[\"exec\",{\"1\":{\"26\":1,\"69\":1,\"1007\":3,\"1551\":1}}],[\"extensionname\",{\"1\":{\"2798\":1}}],[\"extensions\",{\"0\":{\"2751\":1,\"2798\":1},\"1\":{\"2751\":1}}],[\"extended\",{\"1\":{\"193\":1}}],[\"extendsnull\",{\"1\":{\"1381\":1}}],[\"extends\",{\"0\":{\"495\":1,\"1369\":1},\"1\":{\"19\":1,\"21\":1,\"30\":1,\"39\":1,\"62\":1,\"63\":1,\"64\":1,\"73\":1,\"495\":2,\"1163\":1,\"1178\":1,\"1187\":1,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1320\":3,\"1321\":3,\"1346\":1,\"1348\":1,\"1366\":8,\"1368\":1,\"1369\":2,\"1370\":1,\"1372\":1,\"1375\":1,\"1376\":2,\"1377\":2,\"1378\":1,\"1379\":1,\"1380\":2,\"1382\":2,\"1389\":2,\"1390\":1,\"1392\":1,\"1431\":2,\"1466\":1,\"1754\":1,\"1755\":6,\"1780\":1,\"2438\":1}}],[\"extrudesettings\",{\"1\":{\"2407\":2}}],[\"extrudegeometry\",{\"0\":{\"2406\":1,\"2407\":1},\"1\":{\"2407\":1}}],[\"extract<string\",{\"1\":{\"1379\":1}}],[\"extract<\",{\"1\":{\"1379\":1}}],[\"extract<t\",{\"1\":{\"1379\":2}}],[\"extract\",{\"0\":{\"1379\":1}}],[\"extrareducers\",{\"1\":{\"1168\":2}}],[\"ext\",{\"1\":{\"22\":1,\"65\":1,\"2798\":1}}],[\"e\",{\"1\":{\"16\":1,\"59\":1,\"232\":5,\"237\":2,\"239\":7,\"241\":12,\"254\":3,\"277\":1,\"279\":1,\"329\":3,\"338\":1,\"340\":1,\"343\":5,\"391\":2,\"392\":6,\"395\":16,\"413\":2,\"414\":5,\"517\":3,\"522\":1,\"526\":1,\"551\":2,\"558\":1,\"578\":1,\"580\":2,\"597\":2,\"631\":1,\"634\":1,\"635\":2,\"713\":2,\"840\":2,\"844\":2,\"861\":6,\"865\":2,\"873\":2,\"944\":2,\"950\":1,\"983\":1,\"984\":1,\"989\":1,\"1078\":2,\"1167\":1,\"1168\":1,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":2,\"1235\":2,\"1265\":2,\"1301\":2,\"1363\":2,\"1409\":1,\"1563\":8,\"1650\":1,\"1671\":2,\"1707\":4}}],[\"yum\",{\"0\":{\"1071\":1,\"1140\":1,\"1141\":1},\"1\":{\"1071\":2,\"1072\":1,\"1073\":12,\"1133\":1,\"1142\":1,\"1143\":1}}],[\"y$\",{\"1\":{\"1063\":1}}],[\"y0\",{\"1\":{\"1063\":1}}],[\"yg\",{\"1\":{\"1063\":1}}],[\"y1g\",{\"1\":{\"1063\":1}}],[\"y或\",{\"1\":{\"1009\":1}}],[\"y参数时\",{\"1\":{\"1009\":2}}],[\"yield\",{\"0\":{\"588\":1},\"1\":{\"587\":6,\"588\":10,\"589\":1,\"590\":2,\"591\":2,\"636\":3}}],[\"yellow\",{\"1\":{\"696\":2,\"1071\":1}}],[\"years\",{\"1\":{\"551\":1}}],[\"year\",{\"1\":{\"275\":1}}],[\"yes\",{\"1\":{\"202\":2,\"578\":1,\"597\":1,\"801\":1,\"1072\":1}}],[\"yy\",{\"1\":{\"270\":1,\"1056\":1,\"1063\":1}}],[\"your\",{\"1\":{\"343\":1}}],[\"you\",{\"1\":{\"255\":1,\"340\":1}}],[\"y=0\",{\"1\":{\"94\":2}}],[\"y=200\",{\"1\":{\"94\":2}}],[\"y=100\",{\"1\":{\"94\":2}}],[\"y=300\",{\"1\":{\"94\":1}}],[\"y=30\",{\"1\":{\"94\":1}}],[\"y\",{\"0\":{\"2317\":1,\"2323\":1,\"2542\":1,\"2587\":1,\"2835\":1,\"2843\":1,\"2846\":1},\"1\":{\"16\":1,\"21\":1,\"59\":1,\"64\":1,\"118\":1,\"119\":1,\"127\":1,\"189\":1,\"252\":6,\"254\":3,\"256\":2,\"257\":3,\"258\":4,\"259\":2,\"260\":10,\"436\":1,\"838\":8,\"840\":2,\"841\":2,\"843\":2,\"847\":3,\"989\":1,\"998\":1,\"1009\":1,\"1010\":1,\"1018\":1,\"1072\":1,\"1133\":1,\"1143\":1,\"1256\":1,\"1342\":4,\"1343\":1,\"1344\":2,\"1346\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1362\":3,\"1420\":2,\"1421\":3,\"2315\":1,\"2403\":20,\"2542\":1,\"2587\":1,\"2710\":1,\"2843\":2,\"2846\":2}}],[\"squid支持ftp\",{\"1\":{\"2061\":1}}],[\"squid是一个高性能的代理缓存服务器\",{\"1\":{\"2061\":1}}],[\"squid\",{\"1\":{\"2061\":1}}],[\"s架构\",{\"0\":{\"2029\":1}}],[\"s架构与b\",{\"0\":{\"2029\":1}}],[\"sg\",{\"1\":{\"1876\":1}}],[\"sdp\",{\"1\":{\"1876\":1}}],[\"sweep\",{\"1\":{\"1646\":1}}],[\"switch>\",{\"1\":{\"1312\":1}}],[\"switch\",{\"1\":{\"128\":2,\"269\":2,\"581\":1,\"1159\":1,\"1173\":1,\"1183\":1,\"1273\":1,\"1274\":2,\"1287\":1,\"1312\":1,\"1454\":2,\"1535\":1,\"1564\":1,\"1753\":1,\"1754\":1}}],[\"svn\",{\"0\":{\"1581\":1},\"1\":{\"1579\":1,\"1580\":2,\"1581\":4}}],[\"svg>\",{\"1\":{\"1288\":1}}],[\"svg+xml\",{\"1\":{\"388\":1}}],[\"svg\",{\"1\":{\"20\":1,\"63\":1,\"388\":1,\"1167\":1,\"1168\":1,\"1288\":1}}],[\"s代表文json\",{\"1\":{\"1549\":1}}],[\"s方法需要定义\",{\"1\":{\"1527\":1}}],[\"sstf\",{\"0\":{\"2145\":1}}],[\"sst\",{\"1\":{\"1876\":1}}],[\"ssthresh\",{\"1\":{\"1719\":4}}],[\"sse就是利用这种机制\",{\"1\":{\"1737\":1}}],[\"sse的基本思想\",{\"1\":{\"1737\":1}}],[\"sse和nwebsocket间的区别\",{\"0\":{\"1737\":1}}],[\"ssr\",{\"1\":{\"1260\":1}}],[\"ssl\",{\"1\":{\"1152\":8,\"1153\":6}}],[\"ssh\",{\"1\":{\"1102\":3}}],[\"s或\",{\"1\":{\"1009\":1}}],[\"s<压缩字尾字符串>或\",{\"1\":{\"1021\":1}}],[\"s<文件>或\",{\"1\":{\"1009\":1}}],[\"s<字尾备份字符串>\",{\"1\":{\"1003\":1}}],[\"s<shell>\",{\"1\":{\"944\":1,\"950\":1}}],[\"s选项合并空行\",{\"1\":{\"984\":1}}],[\"sbin\",{\"1\":{\"913\":2,\"1135\":1,\"1137\":6,\"1146\":1,\"1150\":1}}],[\"sn\",{\"1\":{\"1604\":2}}],[\"snake\",{\"1\":{\"728\":2}}],[\"snapshot按钮\",{\"1\":{\"437\":1}}],[\"snapshots选项\",{\"1\":{\"437\":1}}],[\"snapshot\",{\"1\":{\"437\":1}}],[\"snippets\",{\"1\":{\"27\":1,\"70\":1}}],[\"small\",{\"1\":{\"1429\":2}}],[\"smf2yvnjcmlwda==\",{\"1\":{\"414\":2}}],[\"smoothing\",{\"1\":{\"21\":2,\"64\":2}}],[\"s3tc\",{\"1\":{\"2798\":1}}],[\"s3\",{\"1\":{\"268\":2}}],[\"s2\",{\"1\":{\"268\":2,\"486\":2,\"488\":2,\"494\":2}}],[\"s1\",{\"1\":{\"268\":2,\"271\":6,\"486\":4,\"488\":6,\"494\":5,\"495\":3,\"1389\":2}}],[\"sym\",{\"1\":{\"1403\":1}}],[\"symbol不能被强制转换为字符串或数字\",{\"1\":{\"803\":1}}],[\"symbol\",{\"0\":{\"268\":1,\"316\":1,\"653\":1,\"803\":1,\"1403\":1,\"1430\":1},\"1\":{\"268\":9,\"269\":4,\"270\":3,\"295\":1,\"316\":5,\"356\":1,\"357\":1,\"627\":1,\"650\":3,\"652\":1,\"653\":6,\"656\":3,\"755\":1,\"763\":1,\"765\":1,\"768\":1,\"803\":12,\"805\":2,\"806\":8,\"882\":1,\"884\":9,\"886\":1,\"1403\":2,\"1418\":1,\"1430\":2,\"1431\":1,\"1436\":1,\"1467\":2,\"1468\":2,\"1469\":2}}],[\"sys\",{\"1\":{\"913\":1}}],[\"systemd\",{\"1\":{\"1137\":1,\"1146\":1}}],[\"systemctl\",{\"1\":{\"1136\":1,\"1137\":4,\"1145\":5}}],[\"system\",{\"1\":{\"94\":1,\"322\":7,\"644\":7,\"1137\":1,\"1146\":1,\"1454\":1,\"1577\":1}}],[\"syn报文是用来同步的\",{\"1\":{\"1729\":1}}],[\"syn=1的报文段不能携带数据\",{\"1\":{\"1726\":1}}],[\"syn\",{\"1\":{\"1726\":8,\"1727\":2}}],[\"sync\",{\"1\":{\"1204\":1}}],[\"syncadd\",{\"1\":{\"555\":4}}],[\"syntaxerror\",{\"1\":{\"250\":2,\"305\":2,\"334\":2}}],[\"slide\",{\"1\":{\"1820\":1}}],[\"slicesize\",{\"1\":{\"418\":3}}],[\"slice方法可以返回一个指定位置的新的\",{\"1\":{\"406\":1}}],[\"slice\",{\"0\":{\"400\":1,\"406\":1,\"528\":1,\"702\":1,\"758\":1},\"1\":{\"123\":1,\"127\":1,\"128\":2,\"358\":1,\"389\":3,\"400\":2,\"403\":1,\"406\":1,\"418\":5,\"527\":1,\"528\":7,\"582\":1,\"681\":1,\"682\":1,\"700\":1,\"702\":4,\"728\":1,\"731\":2,\"746\":1,\"758\":4,\"902\":1,\"1167\":1,\"1168\":2,\"1535\":1,\"1551\":3,\"1564\":1}}],[\"slot等等\",{\"1\":{\"1551\":1}}],[\"slot\",{\"1\":{\"1315\":3}}],[\"slot=\",{\"1\":{\"1315\":2}}],[\"slowpost\",{\"1\":{\"1311\":1}}],[\"slow\",{\"1\":{\"1311\":1}}],[\"slowlist\",{\"1\":{\"1235\":3}}],[\"sleep\",{\"1\":{\"128\":1,\"992\":1}}],[\"soc是一个微小型系统\",{\"1\":{\"2179\":1}}],[\"soc\",{\"1\":{\"2178\":1,\"2179\":1}}],[\"socket\",{\"1\":{\"378\":1,\"865\":4,\"1248\":4,\"1730\":2}}],[\"soucemaps\",{\"1\":{\"1454\":1}}],[\"south\",{\"1\":{\"1407\":3,\"1408\":2}}],[\"sourceroot\",{\"1\":{\"1454\":1}}],[\"sourcemaps\",{\"1\":{\"1454\":2}}],[\"sourcemap\",{\"1\":{\"1454\":2}}],[\"source\",{\"0\":{\"1115\":1,\"2345\":1,\"2519\":1,\"2859\":1},\"1\":{\"21\":2,\"64\":2,\"755\":1,\"765\":9,\"767\":2,\"861\":1,\"1001\":10,\"1080\":1,\"1115\":1,\"1249\":4,\"1422\":1,\"1454\":1,\"1533\":3}}],[\"sotre\",{\"1\":{\"1183\":1,\"1184\":1}}],[\"sortobjects\",{\"0\":{\"2806\":1}}],[\"sortedcomments\",{\"1\":{\"1211\":3}}],[\"sortby\",{\"1\":{\"698\":2}}],[\"sort\",{\"0\":{\"698\":1},\"1\":{\"682\":1,\"697\":1,\"698\":10,\"1211\":1,\"1535\":1}}],[\"someresource\",{\"1\":{\"1653\":5}}],[\"someotherfunction\",{\"1\":{\"1303\":2}}],[\"somefunction\",{\"1\":{\"1303\":2}}],[\"somedata\",{\"1\":{\"1267\":3}}],[\"somevalue\",{\"1\":{\"1218\":1,\"1219\":1,\"1234\":3,\"1445\":1,\"1446\":2}}],[\"somename\",{\"1\":{\"1152\":2}}],[\"some\",{\"0\":{\"716\":1,\"876\":1},\"1\":{\"363\":1,\"682\":1,\"711\":1,\"716\":1,\"737\":3,\"876\":3,\"879\":2,\"1249\":1}}],[\"something\",{\"1\":{\"341\":2,\"595\":2,\"1417\":8}}],[\"somemodule\",{\"1\":{\"276\":1}}],[\"solid\",{\"1\":{\"118\":2,\"119\":2,\"127\":3,\"151\":1}}],[\"s\",{\"1\":{\"109\":4,\"254\":4,\"267\":1,\"270\":2,\"271\":1,\"308\":2,\"309\":2,\"540\":2,\"541\":2,\"636\":4,\"866\":1,\"930\":1,\"944\":2,\"950\":1,\"973\":1,\"983\":1,\"984\":1,\"986\":1,\"987\":1,\"989\":2,\"992\":2,\"1003\":2,\"1004\":1,\"1009\":1,\"1018\":1,\"1021\":1,\"1039\":1,\"1062\":2,\"1106\":1,\"1125\":1,\"1135\":3,\"1137\":3,\"1152\":2,\"1256\":1,\"1527\":3,\"1549\":1,\"1550\":7,\"1551\":1,\"1604\":1}}],[\"scissor\",{\"1\":{\"2843\":1}}],[\"scene\",{\"0\":{\"2816\":1,\"2836\":1},\"1\":{\"2359\":1,\"2371\":1,\"2375\":1,\"2379\":1,\"2383\":1,\"2387\":1,\"2391\":1,\"2399\":1,\"2403\":1,\"2407\":1,\"2430\":1,\"2434\":1,\"2438\":1,\"2442\":1,\"2446\":1,\"2450\":1,\"2462\":2,\"2528\":1,\"2545\":1,\"2562\":5,\"2566\":1,\"2589\":1,\"2691\":1,\"2744\":2,\"2836\":1,\"2860\":1,\"2864\":1,\"2868\":1,\"2872\":2,\"2876\":1,\"2880\":1,\"2884\":1}}],[\"scsan\",{\"0\":{\"2147\":1}}],[\"scss\",{\"0\":{\"36\":1,\"79\":1},\"1\":{\"21\":2,\"22\":2,\"27\":1,\"64\":2,\"65\":2,\"70\":1}}],[\"scan\",{\"0\":{\"2146\":1},\"1\":{\"1823\":4}}],[\"scavenge\",{\"1\":{\"1648\":3}}],[\"scalable\",{\"1\":{\"202\":1}}],[\"scalable=no\",{\"1\":{\"202\":1}}],[\"scale\",{\"0\":{\"2317\":1},\"1\":{\"202\":5,\"2317\":1,\"2438\":4}}],[\"scale=1\",{\"1\":{\"202\":3,\"1839\":1}}],[\"scm\",{\"0\":{\"1879\":1},\"1\":{\"1582\":1,\"1875\":1,\"2178\":1}}],[\"scheme\",{\"1\":{\"1677\":2}}],[\"scheduler\",{\"1\":{\"1493\":2,\"1540\":1,\"1541\":2,\"1571\":1}}],[\"school\",{\"1\":{\"83\":3}}],[\"scgi相关参数文件\",{\"1\":{\"1150\":1}}],[\"scgi\",{\"1\":{\"1150\":3}}],[\"scores\",{\"1\":{\"836\":5,\"844\":2,\"847\":2}}],[\"scorll\",{\"1\":{\"184\":1}}],[\"scrum\",{\"1\":{\"1904\":1}}],[\"screen\",{\"1\":{\"204\":3}}],[\"scrollheight\",{\"1\":{\"343\":2}}],[\"scrolltop\",{\"1\":{\"343\":2}}],[\"scroll\",{\"1\":{\"118\":2,\"119\":2,\"127\":2,\"233\":1,\"829\":1,\"832\":1}}],[\"script\",{\"1\":{\"109\":2,\"376\":1,\"380\":1,\"383\":1,\"462\":3,\"473\":1,\"731\":2,\"859\":8,\"1009\":2,\"1152\":2}}],[\"scripts$fastcgi\",{\"1\":{\"1152\":1}}],[\"scripts\",{\"0\":{\"1500\":1,\"1501\":1},\"1\":{\"108\":1,\"1152\":2,\"1332\":7,\"1499\":2}}],[\"script>\",{\"1\":{\"83\":1,\"117\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1,\"206\":1,\"239\":3,\"240\":1,\"241\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"436\":1,\"462\":2,\"467\":5,\"471\":1,\"473\":3,\"859\":1,\"861\":2,\"862\":2,\"863\":3,\"867\":2,\"1707\":4,\"1817\":1,\"1839\":1}}],[\"saam\",{\"1\":{\"2011\":1}}],[\"samples\",{\"1\":{\"2795\":2}}],[\"sam\",{\"1\":{\"1876\":1}}],[\"salary\",{\"1\":{\"1789\":8}}],[\"sanxin\",{\"1\":{\"867\":3}}],[\"safari\",{\"1\":{\"815\":1,\"1334\":1}}],[\"safe\",{\"1\":{\"320\":2}}],[\"sat\",{\"1\":{\"787\":1}}],[\"sack\",{\"1\":{\"651\":1}}],[\"sayname\",{\"1\":{\"478\":3}}],[\"sayhello\",{\"1\":{\"364\":2,\"431\":2,\"482\":1,\"1458\":4}}],[\"sayhi\",{\"1\":{\"317\":2}}],[\"say\",{\"1\":{\"359\":2,\"859\":2,\"1740\":1,\"1743\":2}}],[\"sass\",{\"1\":{\"36\":1,\"79\":2,\"2049\":1}}],[\"savedcount\",{\"1\":{\"1274\":6}}],[\"save\",{\"1\":{\"25\":1,\"68\":1}}],[\"srctexture\",{\"0\":{\"2818\":1}}],[\"srcelement\",{\"1\":{\"232\":1,\"237\":1}}],[\"src=\",{\"1\":{\"89\":1,\"338\":1,\"339\":1,\"462\":3,\"473\":2,\"859\":2,\"861\":1,\"862\":1,\"863\":1,\"867\":1,\"1167\":1,\"1168\":1,\"1707\":4}}],[\"src\",{\"0\":{\"1502\":1,\"1503\":1,\"1504\":1,\"1505\":1},\"1\":{\"21\":1,\"22\":1,\"39\":2,\"40\":2,\"64\":1,\"65\":1,\"87\":3,\"388\":1,\"389\":1,\"395\":2,\"413\":2,\"414\":1,\"472\":1,\"859\":3,\"862\":1,\"863\":1,\"1157\":1,\"1158\":1,\"1167\":1,\"1173\":2,\"1174\":1,\"1180\":2,\"1181\":2,\"1183\":3,\"1184\":2,\"1335\":1,\"1479\":1,\"1484\":1,\"1485\":1,\"1486\":3,\"1491\":1,\"1492\":2,\"1525\":1,\"1526\":1,\"1527\":2,\"1528\":2,\"1533\":4,\"1534\":1,\"1535\":4,\"1540\":1,\"1541\":1,\"1542\":1,\"1543\":2,\"1548\":1,\"1549\":1,\"1550\":1,\"1551\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1560\":1,\"1561\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1569\":1,\"1570\":1,\"1571\":1}}],[\"simple\",{\"1\":{\"1752\":1}}],[\"signatures\",{\"1\":{\"1340\":1}}],[\"side\",{\"0\":{\"2675\":1},\"1\":{\"1009\":2,\"2383\":1,\"2399\":1,\"2842\":1}}],[\"silent\",{\"1\":{\"992\":1,\"1032\":1}}],[\"since=\",{\"1\":{\"1626\":1}}],[\"since=<date>\",{\"1\":{\"1626\":1}}],[\"since\",{\"1\":{\"817\":2}}],[\"sin\",{\"1\":{\"253\":2,\"2438\":1,\"2446\":1}}],[\"singletion\",{\"1\":{\"1773\":3}}],[\"singleton\",{\"1\":{\"1762\":1,\"1774\":6}}],[\"single2\",{\"1\":{\"1772\":2}}],[\"single1\",{\"1\":{\"1772\":2}}],[\"singledemo\",{\"1\":{\"1772\":8}}],[\"single\",{\"1\":{\"21\":2,\"64\":2}}],[\"singlequote\",{\"1\":{\"20\":1,\"63\":1}}],[\"singleline\",{\"1\":{\"19\":1,\"62\":1}}],[\"sizing\",{\"1\":{\"21\":1,\"64\":1,\"118\":2,\"119\":2,\"127\":3}}],[\"size的值\",{\"1\":{\"2795\":1}}],[\"size\",{\"1\":{\"21\":4,\"23\":1,\"64\":4,\"66\":1,\"171\":2,\"206\":9,\"207\":6,\"271\":2,\"272\":2,\"343\":1,\"388\":2,\"389\":1,\"391\":2,\"1006\":2,\"1007\":2,\"1153\":1,\"1429\":2,\"1646\":5,\"1706\":1,\"2795\":1}}],[\"suspense>\",{\"1\":{\"1312\":1}}],[\"suspense\",{\"0\":{\"1312\":1},\"1\":{\"1312\":3}}],[\"suse\",{\"1\":{\"1071\":1}}],[\"sudoers文件\",{\"1\":{\"1050\":1}}],[\"sudo\",{\"0\":{\"1049\":1},\"1\":{\"1049\":1,\"1141\":1}}],[\"suffix<压缩字尾字符串>\",{\"1\":{\"1021\":1}}],[\"suffix=<字尾备份字符串>\",{\"1\":{\"1003\":1}}],[\"sup\",{\"1\":{\"1159\":3,\"1160\":1,\"1173\":1,\"1177\":1,\"1183\":3,\"1184\":1,\"1188\":1,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2}}],[\"supnum=\",{\"1\":{\"1320\":1,\"1323\":1,\"1324\":1}}],[\"supnum++\",{\"1\":{\"1159\":1,\"1173\":1,\"1183\":1}}],[\"supnum\",{\"1\":{\"1159\":1,\"1161\":4,\"1163\":2,\"1173\":1,\"1176\":2,\"1178\":2,\"1183\":1,\"1185\":2,\"1187\":2,\"1320\":13,\"1321\":11,\"1323\":12,\"1324\":9}}],[\"suppress\",{\"1\":{\"1009\":2}}],[\"support\",{\"1\":{\"1160\":1,\"1162\":4,\"1184\":1,\"1186\":1,\"1188\":1}}],[\"supported\",{\"1\":{\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"2835\":1}}],[\"supports\",{\"1\":{\"21\":1,\"64\":1}}],[\"superadmin\",{\"1\":{\"1753\":5,\"1754\":5}}],[\"superclass\",{\"1\":{\"495\":6}}],[\"super\",{\"1\":{\"495\":3,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1389\":2,\"1390\":1,\"1754\":1,\"1780\":1,\"2438\":1}}],[\"surname\",{\"1\":{\"275\":1}}],[\"subs\",{\"1\":{\"1559\":3,\"1560\":2,\"1562\":3,\"1571\":3}}],[\"subscribe\",{\"1\":{\"1176\":1,\"1178\":1,\"1185\":1,\"1187\":1,\"1814\":4}}],[\"substring\",{\"0\":{\"530\":1},\"1\":{\"527\":1,\"530\":7,\"1422\":1,\"1550\":2}}],[\"substr\",{\"0\":{\"529\":1},\"1\":{\"123\":3,\"127\":3,\"239\":1,\"527\":1,\"529\":6,\"533\":1}}],[\"subclass\",{\"1\":{\"495\":5}}],[\"subblob\",{\"1\":{\"389\":2}}],[\"submit\",{\"1\":{\"239\":1}}],[\"subjectlimit\",{\"1\":{\"16\":1,\"59\":1}}],[\"subject文字长度默认是72\",{\"1\":{\"16\":1,\"59\":1}}],[\"subject\",{\"1\":{\"16\":1,\"30\":2,\"59\":1,\"73\":2,\"83\":3,\"486\":2,\"488\":2,\"494\":1,\"1802\":2,\"1806\":7}}],[\"successfully\",{\"1\":{\"344\":1}}],[\"success\",{\"1\":{\"117\":1,\"118\":3,\"119\":4,\"121\":1,\"122\":1,\"123\":1,\"125\":2,\"126\":1,\"127\":10,\"128\":14,\"300\":1,\"571\":4}}],[\"sum=$\",{\"1\":{\"1113\":1}}],[\"sum\",{\"1\":{\"83\":6,\"284\":4,\"635\":3,\"705\":4,\"706\":2,\"727\":3,\"731\":9,\"732\":13,\"745\":2,\"803\":2,\"805\":1,\"877\":6,\"1420\":1}}],[\"spotlight\",{\"0\":{\"2883\":1,\"2884\":1},\"1\":{\"2884\":11}}],[\"sports\",{\"1\":{\"762\":3}}],[\"spritematerial\",{\"0\":{\"2732\":1,\"2733\":1}}],[\"spread\",{\"1\":{\"264\":1,\"630\":1}}],[\"spheregeometry\",{\"0\":{\"2429\":1,\"2430\":1},\"1\":{\"2430\":1,\"2442\":1}}],[\"sphere\",{\"0\":{\"2284\":1},\"1\":{\"2430\":2,\"2695\":1}}],[\"splice\",{\"0\":{\"703\":1},\"1\":{\"682\":1,\"700\":1,\"703\":9,\"1414\":2,\"1535\":2,\"1564\":1}}],[\"split\",{\"0\":{\"738\":1},\"1\":{\"109\":2,\"526\":6,\"738\":3,\"1426\":1,\"1493\":1,\"1551\":2,\"1571\":1}}],[\"spa\",{\"1\":{\"424\":1}}],[\"span>时\",{\"1\":{\"1550\":1}}],[\"span><\",{\"1\":{\"341\":3,\"343\":2,\"1550\":1}}],[\"span>\",{\"1\":{\"338\":2,\"345\":1,\"1161\":1,\"1176\":1,\"1185\":1,\"1315\":5,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"span\",{\"1\":{\"178\":1,\"1527\":1,\"1549\":1}}],[\"spacing\",{\"1\":{\"21\":3,\"64\":3}}],[\"spacerepeatingpadder\",{\"1\":{\"1437\":4}}],[\"space\",{\"1\":{\"21\":3,\"23\":2,\"64\":3,\"66\":2,\"239\":1,\"986\":1,\"1009\":2,\"1057\":1,\"1256\":1}}],[\"spec\",{\"1\":{\"2788\":2,\"2835\":1}}],[\"specifies\",{\"1\":{\"2842\":2}}],[\"specifiedboolean\",{\"1\":{\"1427\":1}}],[\"specifiednum\",{\"1\":{\"1427\":1}}],[\"specifiedstr\",{\"1\":{\"1427\":4}}],[\"specific\",{\"1\":{\"1431\":1}}],[\"specification\",{\"1\":{\"500\":1,\"2578\":1}}],[\"specificity\",{\"1\":{\"21\":1,\"64\":1}}],[\"specify\",{\"1\":{\"21\":1,\"64\":1,\"1338\":1,\"2754\":1}}],[\"speed\",{\"1\":{\"1009\":1}}],[\"speeaking\",{\"1\":{\"340\":1}}],[\"speechsynthesis\",{\"1\":{\"340\":3}}],[\"speechsynthesisutterance\",{\"1\":{\"340\":3}}],[\"speechrecognition\",{\"1\":{\"340\":7}}],[\"speechtotext\",{\"1\":{\"340\":3}}],[\"speech\",{\"0\":{\"340\":1},\"1\":{\"340\":21}}],[\"speak<\",{\"1\":{\"340\":1}}],[\"speak\",{\"1\":{\"21\":1,\"64\":1,\"340\":9,\"1392\":3}}],[\"sheen\",{\"1\":{\"2737\":1}}],[\"shell=\",{\"1\":{\"1102\":1}}],[\"shell基础\",{\"0\":{\"1076\":1}}],[\"shell\",{\"0\":{\"1077\":1,\"1079\":1,\"1125\":1},\"1\":{\"986\":1,\"1012\":1,\"1071\":1,\"1077\":5,\"1089\":1,\"1099\":3,\"1102\":2}}],[\"shell类型\",{\"1\":{\"939\":1}}],[\"shutdown\",{\"0\":{\"918\":1},\"1\":{\"913\":1,\"918\":1,\"919\":1,\"920\":3,\"921\":1}}],[\"shortlog\",{\"1\":{\"1604\":3}}],[\"should\",{\"1\":{\"1505\":1,\"2710\":1,\"2835\":1}}],[\"shout\",{\"1\":{\"471\":2}}],[\"show\",{\"1\":{\"1603\":3,\"1606\":1,\"1615\":1,\"1617\":1,\"1772\":1,\"1780\":2,\"1820\":6}}],[\"showname\",{\"1\":{\"505\":6}}],[\"showloading\",{\"1\":{\"128\":4}}],[\"showtoast\",{\"1\":{\"127\":12,\"128\":15}}],[\"shim\",{\"1\":{\"463\":2}}],[\"shift\",{\"0\":{\"695\":1},\"1\":{\"359\":1,\"682\":1,\"694\":1,\"695\":4,\"1057\":1,\"1535\":1}}],[\"shadertexturelod\",{\"1\":{\"2751\":1}}],[\"shaders\",{\"1\":{\"2741\":1,\"2742\":1}}],[\"shader\",{\"0\":{\"2688\":2},\"1\":{\"2741\":5,\"2742\":2,\"2743\":4,\"2744\":1,\"2751\":1,\"2754\":1}}],[\"shadermaterial\",{\"0\":{\"2740\":1,\"2741\":1,\"2767\":2},\"1\":{\"2621\":1,\"2741\":3,\"2744\":1,\"2756\":1}}],[\"shader代码中\",{\"1\":{\"2617\":1}}],[\"shadowmap\",{\"0\":{\"2805\":1},\"1\":{\"2805\":1}}],[\"shadowmaterial\",{\"0\":{\"2774\":1,\"2775\":1}}],[\"shadowside\",{\"0\":{\"2674\":1}}],[\"shadow\",{\"0\":{\"940\":1},\"1\":{\"21\":2,\"64\":2,\"1256\":2,\"2695\":1,\"2884\":5}}],[\"sha>\",{\"1\":{\"1618\":1}}],[\"shapegeometry\",{\"0\":{\"2402\":1,\"2403\":1},\"1\":{\"2403\":1}}],[\"shape\",{\"1\":{\"1338\":1,\"2403\":1,\"2407\":8}}],[\"sharing\",{\"1\":{\"860\":1}}],[\"sharepropertydefinition\",{\"1\":{\"1570\":5}}],[\"shared\",{\"1\":{\"1152\":1}}],[\"sharedetails\",{\"1\":{\"345\":2}}],[\"share\",{\"0\":{\"345\":1},\"1\":{\"345\":10,\"1146\":8,\"1153\":2}}],[\"shallowcopy\",{\"1\":{\"760\":1,\"768\":1}}],[\"sh\",{\"1\":{\"20\":1,\"63\":1,\"909\":1,\"1079\":6,\"1121\":1}}],[\"stdout把压缩后的文件输出到标准输出设备\",{\"1\":{\"1021\":1}}],[\"stdout或\",{\"1\":{\"1021\":1}}],[\"stuname\",{\"1\":{\"495\":2}}],[\"studio\",{\"1\":{\"2717\":1}}],[\"study\",{\"1\":{\"486\":4,\"488\":4,\"494\":1}}],[\"students\",{\"1\":{\"848\":2}}],[\"student\",{\"1\":{\"486\":3,\"488\":9,\"494\":5,\"495\":2,\"836\":9,\"844\":2,\"849\":1,\"941\":2,\"1389\":2}}],[\"stencil\",{\"0\":{\"2812\":1},\"1\":{\"2788\":2}}],[\"stencilzpass\",{\"0\":{\"2663\":1}}],[\"stencilzfail\",{\"0\":{\"2662\":1}}],[\"stencilfail\",{\"0\":{\"2661\":1}}],[\"stencilfuncmask\",{\"0\":{\"2660\":1}}],[\"stencilfunc\",{\"0\":{\"2658\":1}}],[\"stencilref\",{\"0\":{\"2659\":1}}],[\"stencilwritemask\",{\"0\":{\"2657\":1}}],[\"stencilwrite\",{\"0\":{\"2656\":1}}],[\"stereocamera\",{\"0\":{\"2548\":1,\"2549\":1,\"2551\":1}}],[\"stereopannernode\",{\"1\":{\"338\":2}}],[\"steps\",{\"1\":{\"2407\":1}}],[\"step3\",{\"1\":{\"596\":5}}],[\"step2\",{\"1\":{\"596\":4}}],[\"step1\",{\"1\":{\"596\":4}}],[\"step=\",{\"1\":{\"338\":2}}],[\"step\",{\"1\":{\"128\":3,\"596\":1}}],[\"strategies\",{\"1\":{\"1789\":2}}],[\"strategry\",{\"1\":{\"1789\":2}}],[\"strategymap\",{\"1\":{\"1784\":1}}],[\"strategy\",{\"1\":{\"1784\":2}}],[\"strats\",{\"1\":{\"1485\":4}}],[\"strlength\",{\"1\":{\"1445\":1,\"1446\":1}}],[\"stream\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"str++\",{\"1\":{\"602\":1}}],[\"str=\",{\"1\":{\"535\":1}}],[\"str\",{\"1\":{\"128\":2,\"267\":2,\"279\":4,\"280\":4,\"281\":4,\"332\":4,\"515\":2,\"517\":10,\"518\":2,\"520\":4,\"521\":3,\"522\":4,\"523\":4,\"524\":4,\"525\":3,\"526\":4,\"528\":6,\"529\":7,\"530\":8,\"532\":2,\"533\":2,\"535\":3,\"536\":2,\"537\":3,\"539\":2,\"543\":2,\"544\":2,\"602\":1,\"634\":2,\"641\":1,\"642\":1,\"689\":2,\"740\":6,\"803\":2,\"1427\":3,\"1442\":3,\"1551\":3}}],[\"stringpadder\",{\"1\":{\"1437\":1}}],[\"stringfy\",{\"1\":{\"765\":1}}],[\"stringify\",{\"0\":{\"763\":1},\"1\":{\"740\":2,\"763\":4,\"864\":1,\"865\":1,\"902\":3,\"1527\":2,\"1549\":1,\"1551\":4,\"1653\":1}}],[\"stringobject\",{\"1\":{\"529\":1}}],[\"stringx\",{\"1\":{\"525\":2}}],[\"string2\",{\"1\":{\"525\":2}}],[\"string1\",{\"1\":{\"525\":2}}],[\"strings\",{\"1\":{\"334\":1,\"719\":1}}],[\"string\",{\"0\":{\"324\":1,\"326\":1,\"662\":1,\"1399\":1,\"1430\":1,\"2292\":1,\"2294\":1,\"2296\":1,\"2308\":1,\"2310\":1,\"2313\":1,\"2474\":1,\"2476\":2,\"2478\":1,\"2479\":1,\"2480\":1,\"2665\":1,\"2671\":1,\"2678\":1,\"2679\":1,\"2689\":1,\"2753\":1,\"2754\":1,\"2755\":1,\"2763\":1},\"1\":{\"123\":1,\"127\":3,\"269\":1,\"279\":1,\"281\":2,\"286\":2,\"299\":1,\"316\":2,\"326\":6,\"417\":1,\"463\":1,\"517\":1,\"520\":2,\"522\":1,\"524\":2,\"525\":1,\"526\":2,\"528\":1,\"529\":1,\"530\":3,\"535\":1,\"536\":1,\"537\":2,\"550\":3,\"551\":1,\"590\":2,\"627\":2,\"641\":1,\"642\":2,\"650\":2,\"652\":1,\"653\":1,\"656\":2,\"659\":1,\"662\":7,\"678\":2,\"698\":1,\"772\":1,\"773\":3,\"781\":1,\"782\":5,\"783\":3,\"784\":5,\"785\":2,\"786\":4,\"787\":1,\"803\":3,\"805\":4,\"806\":7,\"816\":1,\"889\":1,\"891\":1,\"1167\":1,\"1235\":1,\"1315\":1,\"1338\":6,\"1339\":1,\"1340\":19,\"1343\":2,\"1355\":1,\"1365\":1,\"1366\":10,\"1370\":2,\"1371\":3,\"1372\":7,\"1374\":1,\"1375\":2,\"1376\":1,\"1377\":1,\"1378\":1,\"1380\":2,\"1381\":2,\"1382\":1,\"1386\":3,\"1387\":2,\"1388\":3,\"1389\":5,\"1390\":5,\"1391\":2,\"1392\":1,\"1399\":1,\"1405\":2,\"1410\":1,\"1411\":3,\"1412\":1,\"1413\":1,\"1416\":5,\"1418\":1,\"1422\":2,\"1423\":2,\"1424\":2,\"1426\":10,\"1427\":13,\"1428\":1,\"1430\":2,\"1431\":1,\"1435\":3,\"1436\":5,\"1437\":2,\"1438\":2,\"1442\":4,\"1445\":1,\"1446\":2,\"1447\":1,\"1458\":4,\"1459\":2,\"1460\":4,\"1466\":1,\"1467\":5,\"1468\":3,\"1469\":5,\"1476\":1,\"1491\":1,\"1528\":1,\"1542\":2,\"2798\":1}}],[\"strictnullchecks\",{\"1\":{\"1400\":1,\"1415\":1,\"1454\":1}}],[\"strictmode>\",{\"1\":{\"1167\":2}}],[\"strict\",{\"1\":{\"20\":1,\"63\":1,\"94\":1,\"353\":2,\"429\":1,\"1454\":2,\"1653\":1}}],[\"stop\",{\"1\":{\"240\":1,\"338\":5,\"575\":1,\"1135\":1,\"1136\":1,\"1137\":1,\"1145\":1,\"1250\":1,\"1472\":1,\"1649\":1}}],[\"stopimmediatepropagation\",{\"0\":{\"240\":1},\"1\":{\"240\":3}}],[\"stoppropagation\",{\"0\":{\"240\":1},\"1\":{\"240\":4}}],[\"stopdiscovery\",{\"1\":{\"119\":2,\"127\":2}}],[\"stopbluetoothdevicesdiscovery\",{\"1\":{\"118\":1,\"119\":2,\"127\":1,\"128\":5}}],[\"storecredentials\",{\"1\":{\"1229\":1}}],[\"store=\",{\"1\":{\"1157\":1,\"1167\":1}}],[\"store\",{\"0\":{\"1158\":1,\"1175\":1,\"1182\":1},\"1\":{\"83\":4,\"1153\":1,\"1157\":3,\"1158\":3,\"1159\":2,\"1160\":2,\"1162\":1,\"1167\":11,\"1168\":8,\"1173\":4,\"1175\":3,\"1176\":3,\"1177\":3,\"1178\":4,\"1181\":4,\"1182\":3,\"1183\":4,\"1184\":2,\"1185\":3,\"1186\":4,\"1187\":4,\"1188\":4,\"1670\":1,\"1764\":3,\"1765\":3}}],[\"styl\",{\"1\":{\"27\":1,\"70\":1}}],[\"style需要特殊处理下\",{\"1\":{\"1528\":1}}],[\"stylename\",{\"1\":{\"1477\":3,\"1528\":3}}],[\"styled\",{\"1\":{\"255\":1}}],[\"style>\",{\"1\":{\"118\":1,\"119\":1,\"127\":1,\"178\":1}}],[\"style=\",{\"1\":{\"83\":2,\"343\":1,\"1255\":5,\"1256\":1,\"1265\":1,\"1267\":2,\"1289\":1,\"1315\":3,\"1477\":1}}],[\"stylelintignore文件\",{\"1\":{\"21\":1,\"64\":1}}],[\"stylelintrc\",{\"1\":{\"21\":1,\"64\":1}}],[\"stylelint\",{\"0\":{\"21\":1,\"64\":1},\"1\":{\"21\":9,\"22\":3,\"27\":2,\"64\":9,\"65\":3,\"70\":2}}],[\"style\",{\"1\":{\"16\":2,\"21\":10,\"23\":1,\"30\":1,\"39\":2,\"59\":2,\"64\":10,\"66\":1,\"73\":1,\"206\":1,\"224\":1,\"226\":1,\"1289\":1,\"1315\":2,\"1477\":7,\"1528\":4,\"1551\":1}}],[\"stash\",{\"1\":{\"1601\":12}}],[\"staff\",{\"1\":{\"1460\":2}}],[\"stable\",{\"1\":{\"1334\":1}}],[\"stack\",{\"1\":{\"351\":1,\"1550\":5,\"1571\":4}}],[\"stage\",{\"1\":{\"339\":4}}],[\"staged\",{\"1\":{\"25\":1,\"27\":2,\"68\":1,\"70\":2,\"1584\":1,\"1612\":1}}],[\"stat\",{\"1\":{\"1636\":1}}],[\"stat标志\",{\"1\":{\"1636\":1}}],[\"stat标志来简要显示文件增改行数统计\",{\"1\":{\"1631\":1}}],[\"static\",{\"1\":{\"584\":6,\"860\":2,\"861\":2,\"862\":2,\"863\":2,\"1152\":1,\"1178\":1,\"1187\":1,\"1320\":4,\"1321\":1,\"1391\":2,\"1753\":1}}],[\"status==200\",{\"1\":{\"819\":1}}],[\"statustext\",{\"1\":{\"559\":2}}],[\"status\",{\"1\":{\"323\":2,\"559\":1,\"576\":2,\"581\":1,\"584\":28,\"817\":3,\"860\":3,\"864\":1,\"866\":1,\"1145\":1,\"1584\":1,\"1612\":1}}],[\"statemixin\",{\"0\":{\"1517\":1},\"1\":{\"1492\":3,\"1505\":2,\"1543\":3}}],[\"statement\",{\"1\":{\"874\":1}}],[\"state\",{\"0\":{\"1283\":1,\"2807\":1},\"1\":{\"21\":1,\"64\":1,\"83\":14,\"128\":1,\"580\":7,\"1159\":6,\"1161\":5,\"1163\":2,\"1167\":4,\"1168\":8,\"1173\":6,\"1183\":6,\"1196\":4,\"1197\":13,\"1200\":3,\"1204\":6,\"1241\":1,\"1273\":8,\"1274\":16,\"1283\":1,\"1287\":4,\"1303\":1,\"1309\":2,\"1320\":3,\"1321\":3,\"1491\":1,\"1492\":2,\"1505\":1,\"1514\":2,\"1521\":1,\"1525\":1,\"1533\":2,\"1543\":2,\"1548\":1,\"1569\":1,\"1570\":1}}],[\"started\",{\"1\":{\"2455\":1,\"2462\":1}}],[\"startbuild\",{\"1\":{\"1758\":3}}],[\"startbluetoothdevicesdiscovery\",{\"1\":{\"118\":5,\"119\":1,\"127\":1,\"128\":3}}],[\"start就是最开始的提交\",{\"1\":{\"1637\":1}}],[\"startdate\",{\"1\":{\"1435\":3}}],[\"starttagmatch\",{\"1\":{\"1550\":3}}],[\"starttagclose\",{\"1\":{\"1550\":2}}],[\"starttagopen\",{\"1\":{\"1550\":2}}],[\"starttransition\",{\"1\":{\"1307\":2,\"1308\":3,\"1309\":7,\"1311\":3,\"1312\":3}}],[\"starttime\",{\"1\":{\"1235\":2,\"1311\":2}}],[\"starting\",{\"1\":{\"1009\":1}}],[\"startprogram\",{\"1\":{\"560\":1}}],[\"startswith\",{\"0\":{\"280\":1,\"523\":1},\"1\":{\"280\":4,\"523\":4}}],[\"start\",{\"0\":{\"2297\":1,\"2319\":1},\"1\":{\"279\":2,\"287\":2,\"340\":3,\"389\":2,\"522\":2,\"528\":3,\"529\":2,\"684\":2,\"685\":2,\"702\":4,\"758\":1,\"1137\":1,\"1145\":1,\"1250\":1,\"1331\":1,\"1332\":2,\"1435\":1,\"1472\":1,\"1550\":4,\"1637\":2,\"2285\":1,\"2286\":2,\"2741\":1}}],[\"startfounddevice\",{\"1\":{\"128\":2}}],[\"startfounddevicetimeout\",{\"1\":{\"128\":5}}],[\"standard\",{\"1\":{\"21\":2,\"64\":2}}],[\"segments\",{\"0\":{\"2343\":1}}],[\"seq=u+1\",{\"1\":{\"1728\":1}}],[\"seven\",{\"1\":{\"1417\":2,\"1442\":1,\"1458\":1}}],[\"severity\",{\"1\":{\"21\":1,\"64\":1}}],[\"semlinker\",{\"1\":{\"1365\":1,\"1411\":3,\"1412\":1,\"1413\":1,\"1417\":1,\"1426\":1,\"1458\":1,\"1466\":2,\"1467\":2}}],[\"sem\",{\"1\":{\"1365\":8}}],[\"semicolon\",{\"1\":{\"21\":1,\"64\":1}}],[\"semi\",{\"1\":{\"20\":1,\"63\":1}}],[\"session共享机制\",{\"0\":{\"2079\":1}}],[\"sessionstorage就主要是存储你本次会话的浏览足迹\",{\"1\":{\"1668\":1}}],[\"sessionstorage的属性和方法与localstorage完全一样\",{\"1\":{\"1666\":1}}],[\"sessionstorage保存的数据用于浏览器的一次会话\",{\"1\":{\"1666\":1}}],[\"sessionstorage\",{\"0\":{\"1666\":1},\"1\":{\"1666\":2,\"1667\":1,\"1668\":1}}],[\"sessionstorge\",{\"1\":{\"855\":1}}],[\"session\",{\"1\":{\"1152\":2,\"1153\":1,\"1661\":1,\"2031\":1}}],[\"separa\",{\"1\":{\"728\":2}}],[\"separator\",{\"1\":{\"526\":3,\"690\":3}}],[\"sentinel\",{\"1\":{\"656\":1}}],[\"sent\",{\"1\":{\"345\":1,\"1152\":1,\"1153\":1,\"1727\":1}}],[\"sendfile\",{\"1\":{\"1152\":1,\"1153\":2}}],[\"sendmsg\",{\"1\":{\"343\":3}}],[\"send\",{\"1\":{\"125\":2,\"127\":2,\"559\":1,\"816\":2,\"817\":4,\"819\":1,\"860\":1,\"864\":1,\"865\":2,\"866\":1,\"1726\":1,\"1730\":3}}],[\"sex\",{\"1\":{\"296\":1,\"723\":3}}],[\"seconds`\",{\"1\":{\"1282\":1}}],[\"seconds\",{\"1\":{\"919\":2}}],[\"second\",{\"1\":{\"274\":3,\"455\":3,\"469\":3,\"470\":1,\"571\":2,\"1246\":1}}],[\"section2\",{\"1\":{\"215\":1}}],[\"section>\",{\"1\":{\"215\":2}}],[\"section1\",{\"1\":{\"215\":1}}],[\"seo\",{\"0\":{\"217\":1},\"1\":{\"213\":1,\"217\":1}}],[\"self\",{\"1\":{\"174\":2,\"358\":3,\"495\":2,\"580\":8,\"581\":6}}],[\"selecttab\",{\"1\":{\"1311\":5}}],[\"select>\",{\"1\":{\"83\":1}}],[\"select\",{\"1\":{\"21\":1,\"64\":1,\"1288\":1}}],[\"selectorblacklist\",{\"1\":{\"208\":2}}],[\"selector\",{\"1\":{\"21\":2,\"64\":2,\"1355\":1}}],[\"sea\",{\"1\":{\"464\":1}}],[\"seajs\",{\"1\":{\"444\":1}}],[\"searchfunc\",{\"1\":{\"1422\":1}}],[\"searchterm=\",{\"1\":{\"1267\":2}}],[\"searchterm\",{\"1\":{\"1265\":6,\"1267\":8}}],[\"searchelement\",{\"1\":{\"289\":2}}],[\"searchvalue\",{\"1\":{\"279\":2,\"281\":2,\"520\":2,\"522\":2,\"524\":2,\"535\":2,\"537\":1}}],[\"search\",{\"0\":{\"537\":1},\"1\":{\"217\":1,\"537\":3,\"1007\":2,\"1073\":1,\"1142\":1,\"1168\":1,\"1265\":1}}],[\"seallock\",{\"1\":{\"128\":1}}],[\"seagreen\",{\"1\":{\"127\":1}}],[\"servlet\",{\"1\":{\"2031\":1}}],[\"serverless模式\",{\"1\":{\"2054\":1}}],[\"server域名\",{\"1\":{\"1153\":1}}],[\"server对应一个网站\",{\"1\":{\"1153\":1}}],[\"server的配置写到\",{\"1\":{\"1153\":1}}],[\"server如果只写一个就是单纯的额外网发布\",{\"1\":{\"1153\":1}}],[\"server2\",{\"1\":{\"860\":1}}],[\"server1\",{\"1\":{\"860\":2}}],[\"server\",{\"1\":{\"191\":1,\"378\":1,\"559\":3,\"575\":2,\"864\":2,\"865\":1,\"866\":3,\"1137\":1,\"1152\":10,\"1153\":10,\"1332\":1}}],[\"serviceid\",{\"1\":{\"122\":1,\"123\":1,\"125\":1,\"126\":2,\"127\":9,\"128\":3}}],[\"services\",{\"1\":{\"118\":1,\"128\":1,\"1472\":2}}],[\"service\",{\"0\":{\"2038\":1},\"1\":{\"118\":1,\"128\":3,\"1137\":6,\"1146\":1,\"1766\":1}}],[\"sericed\",{\"1\":{\"128\":2}}],[\"sericelist\",{\"1\":{\"128\":6}}],[\"sericeid\",{\"1\":{\"128\":12}}],[\"setviewport\",{\"0\":{\"2846\":1}}],[\"setviewoffset方法来进行设置\",{\"1\":{\"2578\":1}}],[\"setviewoffset设置的偏移量\",{\"1\":{\"2543\":1,\"2581\":1}}],[\"setviewoffset\",{\"0\":{\"2542\":1,\"2587\":1}}],[\"setvalues\",{\"0\":{\"2690\":1}}],[\"setdrawrange\",{\"0\":{\"2319\":1},\"1\":{\"2285\":1}}],[\"setdata\",{\"1\":{\"624\":2}}],[\"setoppnum\",{\"1\":{\"1323\":2,\"1324\":2}}],[\"setlocation\",{\"1\":{\"1312\":2}}],[\"setleftcount\",{\"1\":{\"1244\":2}}],[\"setpixelratio\",{\"0\":{\"2841\":1}}],[\"setpoint\",{\"1\":{\"1342\":2}}],[\"setpage\",{\"1\":{\"1309\":2}}],[\"setprevvalue\",{\"1\":{\"1283\":2}}],[\"setprototypeof\",{\"1\":{\"495\":2}}],[\"setfocallength\",{\"0\":{\"2586\":1}}],[\"setform\",{\"1\":{\"1301\":1}}],[\"setfrompoints\",{\"0\":{\"2320\":1},\"1\":{\"2411\":1}}],[\"setfn\",{\"1\":{\"1303\":4}}],[\"setfloat64\",{\"1\":{\"412\":1}}],[\"setfloat32\",{\"1\":{\"412\":1}}],[\"setanimationloop\",{\"0\":{\"2838\":1}}],[\"setattribute\",{\"0\":{\"2296\":1},\"1\":{\"1477\":1,\"1528\":1,\"2278\":1,\"2282\":1}}],[\"setage\",{\"1\":{\"1296\":1,\"1299\":3,\"1300\":2}}],[\"setamount\",{\"1\":{\"1167\":2,\"1168\":2}}],[\"setheightlayouteffect\",{\"1\":{\"1255\":2}}],[\"setheighteffect\",{\"1\":{\"1255\":2}}],[\"setheader\",{\"1\":{\"860\":7}}],[\"setrendertarget\",{\"0\":{\"2842\":1},\"1\":{\"2799\":1}}],[\"setrequestheader\",{\"1\":{\"816\":1,\"860\":1}}],[\"setrightcount\",{\"1\":{\"1244\":2}}],[\"setclearcolor\",{\"0\":{\"2840\":1}}],[\"setclearalpha\",{\"0\":{\"2839\":1}}],[\"setcontainerrect\",{\"1\":{\"1256\":2}}],[\"setcount\",{\"1\":{\"1243\":2,\"1251\":2,\"1269\":2,\"1297\":1}}],[\"setcurrentuser\",{\"1\":{\"1222\":4,\"1227\":2,\"1229\":2}}],[\"setcallback\",{\"1\":{\"430\":4}}],[\"setter\",{\"1\":{\"1467\":4}}],[\"settext\",{\"1\":{\"1235\":2}}],[\"settab\",{\"1\":{\"1311\":3}}],[\"settargetrect\",{\"1\":{\"1256\":3}}],[\"setting\",{\"1\":{\"1309\":2}}],[\"settimeout\",{\"0\":{\"365\":1,\"382\":1},\"1\":{\"83\":1,\"128\":6,\"299\":1,\"300\":1,\"334\":2,\"362\":3,\"365\":4,\"376\":5,\"378\":1,\"379\":1,\"380\":1,\"381\":1,\"382\":4,\"430\":1,\"555\":1,\"557\":4,\"573\":3,\"574\":3,\"578\":3,\"580\":2,\"584\":1,\"595\":1,\"596\":2,\"597\":2,\"828\":1,\"831\":4,\"891\":1,\"902\":1,\"903\":10,\"1188\":1,\"1201\":4,\"1209\":1,\"1246\":1,\"1303\":1,\"1309\":4,\"1475\":1,\"1490\":1,\"1539\":1,\"1542\":1,\"1556\":1,\"1568\":1,\"1758\":1,\"1806\":2}}],[\"settooltipheight\",{\"1\":{\"1256\":2}}],[\"settodos\",{\"1\":{\"1210\":3,\"1212\":4,\"1302\":2}}],[\"settheme\",{\"1\":{\"1222\":2,\"1227\":2}}],[\"setnodelay\",{\"1\":{\"1730\":1}}],[\"setnum\",{\"1\":{\"1176\":2,\"1185\":2}}],[\"setname\",{\"1\":{\"896\":6,\"1389\":1,\"1390\":1,\"1417\":2}}],[\"setgid\",{\"1\":{\"1039\":1}}],[\"set和自定义的异步或者同步可迭代对象\",{\"1\":{\"891\":1}}],[\"setsize\",{\"0\":{\"2845\":1}}],[\"setscissortest\",{\"0\":{\"2844\":1}}],[\"setscissor\",{\"0\":{\"2843\":1}}],[\"setsupnum\",{\"1\":{\"1323\":2,\"1324\":2}}],[\"setsomedata\",{\"1\":{\"1267\":1}}],[\"setsearchterm\",{\"1\":{\"1265\":2}}],[\"setstate的回调函数中打印message\",{\"1\":{\"1196\":1}}],[\"setstate传入第二个参数callback\",{\"1\":{\"1196\":1}}],[\"setstate使用回调函数作为参数\",{\"1\":{\"1196\":1}}],[\"setstate基本使用\",{\"1\":{\"1196\":1}}],[\"setstate\",{\"0\":{\"1191\":1,\"1195\":1,\"1198\":1,\"1201\":1,\"1202\":1},\"1\":{\"1193\":1,\"1194\":2,\"1195\":2,\"1196\":3,\"1197\":9,\"1199\":4,\"1200\":3,\"1201\":12,\"1204\":2,\"1300\":1,\"1320\":2,\"1321\":2},\"2\":{\"1206\":1}}],[\"setstoragesync\",{\"1\":{\"128\":1}}],[\"sets\",{\"1\":{\"719\":1,\"2843\":1}}],[\"setitem\",{\"1\":{\"1274\":2,\"1664\":2}}],[\"setisdark\",{\"1\":{\"1265\":2}}],[\"setindex\",{\"0\":{\"2318\":1}}],[\"setinputvalue\",{\"1\":{\"1212\":2}}],[\"setint32\",{\"1\":{\"412\":1}}],[\"setint16\",{\"1\":{\"412\":1}}],[\"setint8\",{\"1\":{\"412\":1}}],[\"setinterval\",{\"0\":{\"365\":1},\"1\":{\"365\":3,\"376\":1,\"379\":1,\"380\":1,\"430\":4,\"1209\":1,\"1246\":2,\"1282\":1,\"1653\":1}}],[\"setimmediate\",{\"0\":{\"382\":1},\"1\":{\"376\":1,\"378\":1,\"379\":3,\"380\":1,\"382\":7,\"1542\":2}}],[\"set集合转化为数组\",{\"1\":{\"271\":1}}],[\"set2\",{\"1\":{\"271\":2}}],[\"set1\",{\"1\":{\"271\":2}}],[\"seturlmodifier\",{\"0\":{\"2477\":1},\"1\":{\"2462\":1}}],[\"setupproxy\",{\"1\":{\"1335\":1}}],[\"setup\",{\"1\":{\"1241\":4}}],[\"setup>\",{\"1\":{\"117\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1}}],[\"setuid\",{\"1\":{\"1039\":2}}],[\"setuint32\",{\"1\":{\"412\":1}}],[\"setuint16\",{\"1\":{\"412\":1}}],[\"setuint8\",{\"1\":{\"125\":2,\"127\":2,\"412\":1}}],[\"set\",{\"0\":{\"271\":1,\"742\":1,\"1097\":1},\"1\":{\"21\":1,\"64\":1,\"271\":10,\"272\":6,\"286\":3,\"299\":1,\"344\":1,\"433\":1,\"636\":4,\"678\":3,\"719\":1,\"742\":1,\"842\":3,\"843\":2,\"874\":1,\"1068\":2,\"1097\":1,\"1153\":5,\"1309\":1,\"1311\":1,\"1387\":1,\"1467\":3,\"1493\":1,\"1533\":1,\"1534\":6,\"1560\":1,\"1561\":1,\"1563\":1,\"1570\":3,\"1571\":1,\"1659\":2,\"2438\":1,\"2697\":1,\"2751\":4,\"2779\":1,\"2872\":1,\"2876\":1,\"2884\":1}}],[\"see\",{\"1\":{\"20\":1,\"23\":1,\"63\":1,\"66\":1,\"1282\":1,\"1737\":2,\"2835\":1}}],[\"skip\",{\"1\":{\"19\":1,\"39\":1}}],[\"skipquestions\",{\"1\":{\"16\":1,\"59\":1}}],[\"请确保设置这些标志\",{\"1\":{\"2743\":1}}],[\"请查看perspectivecamera中的示例\",{\"1\":{\"2542\":1}}],[\"请查看loadingmanager页面\",{\"1\":{\"2456\":1,\"2457\":1}}],[\"请参阅webgl\",{\"1\":{\"2672\":1}}],[\"请参阅defaultloadingmanager\",{\"1\":{\"2461\":1}}],[\"请参见curepath\",{\"1\":{\"2327\":1}}],[\"请注意\",{\"1\":{\"2455\":1,\"2531\":1,\"2536\":1,\"2569\":1,\"2577\":1,\"2717\":1,\"2737\":1,\"2744\":1}}],[\"请追加标志\",{\"1\":{\"537\":1}}],[\"请尽可能的使用局部变量\",{\"1\":{\"429\":1}}],[\"请求在链中传递\",{\"1\":{\"1835\":1}}],[\"请求主体\",{\"1\":{\"1689\":1}}],[\"请求报头\",{\"1\":{\"1689\":1}}],[\"请求成功的回调函数句柄\",{\"1\":{\"1671\":1}}],[\"请求失败的回调函数句柄\",{\"1\":{\"1671\":1}}],[\"请求却可以有很多\",{\"1\":{\"1660\":1}}],[\"请求头就会携带登陆时response\",{\"1\":{\"1658\":1}}],[\"请求头字符串的名称\",{\"1\":{\"1153\":1}}],[\"请求的取消\",{\"0\":{\"1249\":1}}],[\"请求的类型\",{\"1\":{\"816\":1}}],[\"请求电影列表\",{\"1\":{\"1168\":1}}],[\"请求方法\",{\"1\":{\"859\":1,\"1689\":1,\"1696\":1}}],[\"请求发送后\",{\"1\":{\"1727\":1}}],[\"请求发送数据量大\",{\"1\":{\"817\":1}}],[\"请求发送数据量小\",{\"1\":{\"817\":1}}],[\"请求发出去到后端\",{\"1\":{\"856\":1}}],[\"请求无法跨域请求\",{\"1\":{\"855\":1}}],[\"请求进行验证\",{\"1\":{\"832\":1}}],[\"请求网络接口\",{\"0\":{\"823\":1}}],[\"请求本地\",{\"0\":{\"822\":1}}],[\"请求本地文本数据\",{\"0\":{\"821\":1}}],[\"请求常见数据格式\",{\"0\":{\"820\":1}}],[\"请求一个\",{\"1\":{\"819\":1}}],[\"请求一定要设置请求头的格式内容\",{\"1\":{\"816\":1}}],[\"请求反之\",{\"1\":{\"817\":1}}],[\"请求安全性低\",{\"1\":{\"817\":1}}],[\"请求时\",{\"1\":{\"817\":1}}],[\"请求数据库版本变化句柄\",{\"1\":{\"1671\":1}}],[\"请求数据区别\",{\"1\":{\"817\":1}}],[\"请求数据流程与\",{\"1\":{\"813\":1}}],[\"请求与接收\",{\"1\":{\"813\":1}}],[\"请求并异步处理服务器返回的响应\",{\"1\":{\"559\":1}}],[\"请求\",{\"1\":{\"414\":1,\"559\":2,\"569\":2,\"819\":1,\"902\":1,\"1249\":1,\"1697\":1,\"1900\":1}}],[\"请求线程去执行\",{\"1\":{\"371\":1}}],[\"请求线程等线程\",{\"1\":{\"371\":1}}],[\"请看下图\",{\"1\":{\"178\":1}}],[\"请检查蓝牙是否打开\",{\"1\":{\"128\":1}}],[\"请打开蓝牙\",{\"1\":{\"128\":1}}],[\"请输入有效的邮箱地址\",{\"1\":{\"1789\":1}}],[\"请输入以下命令\",{\"1\":{\"993\":2}}],[\"请输入新视频名称\",{\"1\":{\"94\":1}}],[\"请输入视频地址\",{\"1\":{\"94\":1}}],[\"请输入要关闭的issue\",{\"1\":{\"16\":1,\"59\":1}}],[\"请输入详细描述\",{\"1\":{\"16\":1,\"59\":1}}],[\"请输入修改范围\",{\"1\":{\"16\":1,\"59\":1}}],[\"请简要描述提交\",{\"1\":{\"16\":1,\"59\":1}}],[\"请选择提交类型\",{\"1\":{\"16\":1,\"59\":1}}],[\"tgaloader\",{\"1\":{\"2473\":1}}],[\"tga$\",{\"1\":{\"2473\":1}}],[\"tgz\",{\"1\":{\"909\":1}}],[\"tz\",{\"1\":{\"2438\":2}}],[\"ty\",{\"1\":{\"2438\":2}}],[\"typings\",{\"1\":{\"1355\":1,\"1357\":1}}],[\"typicode\",{\"1\":{\"334\":4}}],[\"typepropertydescript\",{\"1\":{\"1468\":1}}],[\"typepropertydescript<t>\",{\"1\":{\"1468\":1}}],[\"typed\",{\"1\":{\"2744\":1}}],[\"typedpropertydescriptor<t>\",{\"1\":{\"1468\":1}}],[\"typedarray实例\",{\"1\":{\"406\":1}}],[\"typedarray\",{\"0\":{\"402\":1,\"403\":1,\"405\":1,\"406\":1,\"2835\":1},\"1\":{\"397\":2,\"401\":1,\"402\":3,\"403\":8,\"405\":1,\"407\":2}}],[\"typedarrray\",{\"1\":{\"397\":1}}],[\"typeroots\",{\"1\":{\"1454\":1}}],[\"typename\",{\"1\":{\"1436\":3}}],[\"typearray\",{\"1\":{\"403\":2,\"406\":1}}],[\"typeof是一元运算符\",{\"1\":{\"642\":1}}],[\"typeof操作符\",{\"0\":{\"642\":1}}],[\"typeof运算符是百分之百安全的\",{\"1\":{\"511\":1}}],[\"typeof\",{\"0\":{\"642\":1,\"656\":1,\"1365\":1,\"1436\":1},\"1\":{\"268\":1,\"320\":3,\"358\":1,\"359\":3,\"465\":2,\"495\":2,\"511\":1,\"580\":2,\"582\":3,\"587\":1,\"642\":9,\"656\":12,\"723\":2,\"724\":2,\"725\":1,\"731\":2,\"760\":1,\"765\":1,\"766\":2,\"767\":2,\"768\":3,\"1343\":1,\"1365\":5,\"1416\":2,\"1426\":2,\"1436\":5,\"1438\":2,\"1476\":1,\"1491\":2,\"1493\":2,\"1527\":1,\"1528\":1,\"1533\":1,\"1542\":3,\"1557\":1,\"1561\":1,\"1569\":1,\"1570\":1,\"1571\":2}}],[\"typeerror\",{\"1\":{\"261\":1,\"324\":1,\"326\":1,\"500\":1,\"803\":2,\"806\":1,\"1418\":1}}],[\"type=1\",{\"1\":{\"1168\":1}}],[\"type=forking\",{\"1\":{\"1137\":1}}],[\"type=checkbox\",{\"1\":{\"725\":1}}],[\"type=\",{\"1\":{\"206\":1,\"239\":1,\"338\":2,\"340\":1,\"342\":1,\"343\":1,\"391\":2,\"395\":2,\"413\":1,\"414\":1,\"467\":4,\"471\":1,\"473\":4,\"474\":1,\"1162\":2,\"1177\":2,\"1186\":2,\"1281\":1,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2,\"1817\":1,\"1839\":1}}],[\"typescript\",{\"1\":{\"19\":1,\"39\":1,\"322\":1,\"469\":1,\"1338\":1,\"1339\":1,\"1353\":1,\"1354\":1,\"1356\":2,\"1363\":2,\"1366\":5,\"1386\":1,\"1387\":1,\"1388\":1,\"1389\":1,\"1399\":1,\"1416\":1,\"1417\":2,\"1418\":1,\"1427\":2,\"1430\":1,\"1436\":1,\"1442\":3,\"1443\":5,\"1448\":1,\"1452\":2,\"1454\":2,\"1460\":1},\"2\":{\"1350\":1,\"1358\":1,\"1383\":1,\"1393\":1,\"1432\":1,\"1439\":1,\"1449\":1,\"1455\":1,\"1461\":1,\"1470\":1}}],[\"types\",{\"0\":{\"1343\":1},\"1\":{\"16\":1,\"37\":1,\"39\":2,\"59\":1,\"1150\":2,\"1152\":1,\"1153\":2,\"1159\":5,\"1160\":4,\"1183\":6,\"1184\":4,\"1188\":4,\"1315\":1,\"1320\":2,\"1323\":2,\"1356\":1,\"1357\":2,\"1426\":3,\"1454\":1,\"2835\":1}}],[\"type\",{\"0\":{\"2678\":1},\"1\":{\"15\":1,\"16\":1,\"21\":3,\"30\":3,\"59\":1,\"64\":3,\"73\":3,\"88\":1,\"128\":10,\"343\":1,\"388\":6,\"389\":2,\"391\":2,\"418\":1,\"590\":2,\"816\":1,\"864\":1,\"1006\":2,\"1007\":4,\"1152\":1,\"1153\":1,\"1159\":1,\"1160\":2,\"1167\":1,\"1173\":1,\"1177\":2,\"1183\":1,\"1184\":2,\"1188\":2,\"1273\":4,\"1274\":6,\"1287\":2,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2,\"1338\":6,\"1340\":8,\"1341\":2,\"1342\":3,\"1343\":6,\"1347\":2,\"1348\":1,\"1349\":1,\"1363\":1,\"1365\":3,\"1366\":7,\"1367\":2,\"1368\":1,\"1370\":4,\"1371\":6,\"1372\":9,\"1373\":2,\"1374\":1,\"1375\":2,\"1376\":2,\"1377\":2,\"1378\":4,\"1379\":3,\"1380\":2,\"1381\":3,\"1382\":5,\"1388\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1411\":1,\"1413\":1,\"1414\":3,\"1416\":2,\"1418\":1,\"1426\":1,\"1428\":5,\"1431\":2,\"1435\":1,\"1442\":2,\"1459\":1,\"1460\":2,\"1466\":1,\"1467\":1,\"1468\":1,\"1469\":1,\"1514\":1,\"1550\":6,\"1551\":1,\"1814\":13,\"2756\":1,\"2805\":1,\"2835\":1}}],[\"tx\",{\"1\":{\"2438\":2}}],[\"txt文件被忽略\",{\"1\":{\"1583\":1}}],[\"txt复制到目录\",{\"1\":{\"999\":1}}],[\"txt的文件\",{\"1\":{\"973\":3}}],[\"txt\",{\"1\":{\"127\":2,\"569\":2,\"590\":2,\"591\":2,\"817\":1,\"821\":2,\"973\":7,\"999\":2,\"1007\":2,\"1016\":2,\"1041\":8,\"1583\":1}}],[\"tubegeometry\",{\"0\":{\"2437\":1,\"2438\":1},\"1\":{\"2438\":1}}],[\"tuple\",{\"0\":{\"1410\":1},\"1\":{\"1343\":1,\"1411\":1}}],[\"tps是服务于组织管理层次中最底层\",{\"1\":{\"1863\":1}}],[\"tps\",{\"0\":{\"1863\":1}}],[\"tfunction\",{\"1\":{\"1466\":3}}],[\"t2\",{\"1\":{\"1378\":1}}],[\"t1\",{\"1\":{\"1378\":1,\"1379\":1,\"1381\":1}}],[\"t0\",{\"1\":{\"1378\":1,\"1379\":1,\"1381\":1}}],[\"t>\",{\"1\":{\"1366\":3,\"1370\":1,\"1375\":1,\"1376\":2}}],[\"tvid\",{\"1\":{\"1168\":1}}],[\"tvf\",{\"1\":{\"1025\":1}}],[\"tb\",{\"1\":{\"1078\":1}}],[\"tbody>\",{\"1\":{\"172\":1}}],[\"t选项显示制表符\",{\"1\":{\"984\":1}}],[\"t设定档案的时间记录\",{\"1\":{\"981\":1}}],[\"t<日期时间>\",{\"1\":{\"981\":1,\"1018\":1}}],[\"tt\",{\"1\":{\"945\":4}}],[\"tty7\",{\"1\":{\"931\":1}}],[\"t或\",{\"1\":{\"930\":1,\"1009\":2,\"1021\":1}}],[\"tmp\",{\"1\":{\"913\":1}}],[\"twenty\",{\"1\":{\"772\":1}}],[\"two\",{\"1\":{\"690\":3,\"702\":2,\"703\":4,\"710\":3,\"728\":2}}],[\"tc39\",{\"1\":{\"467\":1}}],[\"tcp协议是⾯向流的协议\",{\"1\":{\"1731\":1}}],[\"tcp协议提供可靠数据传输服务\",{\"1\":{\"1717\":1}}],[\"tcp粘包是怎么回事\",{\"0\":{\"1730\":1}}],[\"tcp采用大小可变的滑动窗口进行流量控制\",{\"1\":{\"1723\":1}}],[\"tcp在发送一个数据之后\",{\"1\":{\"1717\":1}}],[\"tcp使用两套独立的机制来完成重传\",{\"1\":{\"1717\":1}}],[\"tcp会重传其认为已丢失\",{\"1\":{\"1717\":1}}],[\"tcp的三次握手和四次挥手\",{\"0\":{\"1725\":1}}],[\"tcp的可靠传输机制\",{\"0\":{\"1724\":1}}],[\"tcp的流量控制机制\",{\"0\":{\"1723\":1}}],[\"tcp的拥塞控制机制主要是以下四种机制\",{\"1\":{\"1718\":1}}],[\"tcp的拥塞控制机制\",{\"0\":{\"1718\":1}}],[\"tcp的重传机制\",{\"0\":{\"1717\":1}}],[\"tcp的全称是传输控制协议是一种面向连接的\",{\"1\":{\"1713\":1}}],[\"tcp应用场景\",{\"1\":{\"1715\":1}}],[\"tcp与udp的区别\",{\"0\":{\"1714\":1}}],[\"tcp可以立即发送一个数据段\",{\"1\":{\"1713\":1}}],[\"tcp允许通信双方的应用程序在任何时候都能发送数据\",{\"1\":{\"1713\":1}}],[\"tcp能够减小向网络注入数据的速率和数量\",{\"1\":{\"1713\":1}}],[\"tcp为了保证报文传输的可靠\",{\"1\":{\"1713\":1}}],[\"tcp不像udp一样那样一个个报文独立地传输\",{\"1\":{\"1713\":1}}],[\"tcp是面向连接的\",{\"1\":{\"1713\":1}}],[\"tcp和udp的使用场景\",{\"0\":{\"1715\":1}}],[\"tcp和udp的既念及特点\",{\"0\":{\"1711\":1}}],[\"tcp和udp都是传输层协议\",{\"1\":{\"1711\":1}}],[\"tcp传输报文\",{\"0\":{\"1690\":1}}],[\"tcp连接\",{\"0\":{\"1688\":1},\"1\":{\"1676\":1}}],[\"tcp\",{\"0\":{\"1710\":1,\"1713\":1,\"2209\":1},\"1\":{\"379\":1,\"1152\":1,\"1153\":4,\"1688\":1,\"1690\":2,\"1696\":1,\"1724\":6,\"1727\":1,\"1729\":4,\"1730\":2},\"2\":{\"1733\":1}}],[\"t\",{\"0\":{\"2333\":1,\"2341\":1},\"1\":{\"267\":1,\"345\":1,\"797\":1,\"919\":2,\"972\":1,\"983\":1,\"984\":1,\"1018\":2,\"1025\":1,\"1039\":1,\"1106\":1,\"1125\":1,\"1137\":1,\"1361\":2,\"1362\":4,\"1363\":3,\"1366\":7,\"1368\":1,\"1369\":3,\"1370\":2,\"1371\":4,\"1372\":8,\"1373\":4,\"1374\":2,\"1375\":1,\"1376\":2,\"1377\":1,\"1378\":5,\"1379\":3,\"1380\":2,\"1381\":2,\"1382\":1,\"2333\":1,\"2335\":1,\"2341\":1,\"2425\":1,\"2438\":3}}],[\"tangentspacenormalmap\",{\"1\":{\"2711\":1}}],[\"taost1\",{\"1\":{\"1820\":2}}],[\"tags\",{\"1\":{\"1619\":1,\"1621\":1,\"1622\":1}}],[\"tagname\",{\"1\":{\"1550\":6}}],[\"tag\",{\"1\":{\"1476\":6,\"1478\":2,\"1527\":4,\"1528\":3,\"1550\":1,\"1551\":1,\"1617\":2,\"1618\":4,\"1621\":1}}],[\"tail命令会继续显示这些行\",{\"1\":{\"993\":1}}],[\"tail\",{\"0\":{\"991\":1},\"1\":{\"984\":1,\"992\":1,\"993\":4}}],[\"tarage\",{\"1\":{\"1468\":1}}],[\"tar\",{\"0\":{\"1023\":1},\"1\":{\"909\":1,\"1024\":1,\"1025\":22,\"1132\":2}}],[\"targets\",{\"1\":{\"2290\":1}}],[\"targetstack\",{\"1\":{\"1562\":5}}],[\"target指向当前watcher\",{\"1\":{\"1562\":1}}],[\"target指向引起触发事件的元素\",{\"1\":{\"241\":1}}],[\"target移除\",{\"1\":{\"1561\":1}}],[\"target上\",{\"1\":{\"1561\":1}}],[\"target为null\",{\"1\":{\"1559\":1,\"1562\":1}}],[\"targetrect=\",{\"1\":{\"1256\":1}}],[\"targetrect\",{\"1\":{\"1256\":8}}],[\"target是事件的真正发出者\",{\"1\":{\"241\":1}}],[\"target才会等于event\",{\"1\":{\"241\":1}}],[\"target\",{\"0\":{\"241\":1,\"2520\":1,\"2823\":1,\"2832\":1},\"1\":{\"232\":1,\"237\":4,\"241\":12,\"343\":1,\"355\":4,\"391\":1,\"395\":7,\"413\":1,\"414\":3,\"685\":2,\"755\":4,\"765\":4,\"767\":2,\"1137\":4,\"1167\":1,\"1168\":1,\"1212\":1,\"1235\":1,\"1265\":1,\"1301\":2,\"1335\":1,\"1454\":1,\"1464\":2,\"1466\":6,\"1467\":6,\"1468\":2,\"1469\":4,\"1535\":2,\"1559\":2,\"1560\":1,\"1561\":1,\"1562\":5,\"1563\":1,\"1570\":3,\"1571\":4,\"1671\":1,\"1754\":1,\"2520\":1,\"2562\":2,\"2842\":1}}],[\"takelongtime\",{\"1\":{\"596\":4}}],[\"task\",{\"1\":{\"376\":2,\"383\":1}}],[\"tap\",{\"1\":{\"340\":2}}],[\"taptospeak\",{\"1\":{\"340\":4}}],[\"tabbutton>\",{\"1\":{\"1311\":3}}],[\"tabcontainer\",{\"1\":{\"1311\":2}}],[\"tabs\",{\"1\":{\"1009\":1}}],[\"tab\",{\"1\":{\"23\":1,\"66\":1,\"307\":1,\"538\":1,\"989\":1,\"1009\":3,\"1311\":12}}],[\"table>\",{\"1\":{\"172\":1}}],[\"table\",{\"0\":{\"172\":1,\"173\":1},\"1\":{\"21\":1,\"64\":1,\"148\":1,\"173\":1,\"184\":2,\"226\":2}}],[\"tabwidth\",{\"1\":{\"20\":1,\"63\":1}}],[\"td>\",{\"1\":{\"172\":1}}],[\"tonemappingexposure\",{\"0\":{\"2809\":1}}],[\"tonemapping\",{\"0\":{\"2808\":1}}],[\"tonemapped\",{\"0\":{\"2676\":1}}],[\"tononindexed\",{\"0\":{\"2322\":1}}],[\"torusknot\",{\"1\":{\"2387\":2}}],[\"torusknotgeometry\",{\"0\":{\"2386\":1,\"2387\":1},\"1\":{\"2387\":1}}],[\"torus\",{\"1\":{\"2379\":2}}],[\"torusgeometry\",{\"0\":{\"2378\":1,\"2379\":1},\"1\":{\"2379\":1}}],[\"torvalds\",{\"1\":{\"1577\":1}}],[\"tojson\",{\"0\":{\"2321\":1,\"2346\":1,\"2545\":1,\"2589\":1,\"2691\":1,\"2860\":1},\"1\":{\"2688\":1}}],[\"toast\",{\"1\":{\"1820\":4}}],[\"toarray\",{\"1\":{\"1315\":2,\"1365\":2}}],[\"tomcat\",{\"1\":{\"1423\":1,\"1424\":1}}],[\"tom2\",{\"1\":{\"1338\":1}}],[\"tom\",{\"1\":{\"1338\":7,\"1340\":6,\"1417\":2,\"1423\":3,\"1424\":3}}],[\"tofixed\",{\"1\":{\"1320\":1,\"1321\":1,\"1323\":1}}],[\"to=\",{\"1\":{\"1312\":2}}],[\"tooltipy\",{\"1\":{\"1256\":2}}],[\"tooltipx\",{\"1\":{\"1256\":2}}],[\"tooltipheight\",{\"1\":{\"1256\":3}}],[\"tooltip>\",{\"1\":{\"1256\":1}}],[\"tooltipcontent\",{\"1\":{\"1256\":2}}],[\"tooltipcontent=\",{\"1\":{\"1256\":3}}],[\"tooltip\",{\"1\":{\"1256\":11}}],[\"toolbar\",{\"1\":{\"1220\":2,\"1222\":1}}],[\"toolkit\",{\"0\":{\"1166\":1},\"1\":{\"1167\":4,\"1168\":2}}],[\"todopreview\",{\"1\":{\"1375\":2,\"1380\":2}}],[\"todo<\",{\"1\":{\"1212\":1}}],[\"todo=\",{\"1\":{\"1210\":1}}],[\"todos的依赖导致这个usecallback几乎失去了其作用\",{\"1\":{\"1212\":1}}],[\"todos\",{\"1\":{\"1210\":6,\"1212\":5,\"1302\":3}}],[\"todo\",{\"1\":{\"1210\":11,\"1212\":3,\"1366\":9,\"1374\":3,\"1375\":2,\"1380\":2}}],[\"todoitem\",{\"1\":{\"1210\":4}}],[\"todolist\",{\"1\":{\"1210\":3,\"1212\":1}}],[\"todataurl\",{\"1\":{\"414\":1}}],[\"today\",{\"1\":{\"255\":1}}],[\"touch\",{\"0\":{\"980\":1},\"1\":{\"981\":1}}],[\"touppercase\",{\"0\":{\"533\":1},\"1\":{\"531\":1,\"533\":3}}],[\"tokenization\",{\"0\":{\"1704\":1}}],[\"tokens\",{\"1\":{\"1551\":5}}],[\"token\",{\"1\":{\"895\":2,\"1249\":1}}],[\"totals\",{\"1\":{\"1168\":3}}],[\"total\",{\"1\":{\"395\":3,\"455\":9,\"745\":2,\"877\":2,\"1029\":1,\"1320\":3,\"1321\":3,\"1323\":3}}],[\"toggle\",{\"1\":{\"339\":3,\"1222\":1,\"1227\":1}}],[\"tolocalestring\",{\"0\":{\"689\":1},\"1\":{\"686\":1,\"689\":4}}],[\"tolocalelowercase\",{\"1\":{\"237\":1}}],[\"tolowercase\",{\"0\":{\"532\":1},\"1\":{\"123\":1,\"127\":1,\"531\":1,\"532\":2}}],[\"to\",{\"1\":{\"208\":4,\"240\":1,\"340\":5,\"343\":2,\"345\":1,\"463\":1,\"530\":4,\"803\":2,\"804\":1,\"806\":1,\"986\":2,\"999\":3,\"1007\":2,\"1021\":1,\"1146\":1,\"1152\":4,\"1282\":1,\"1338\":2,\"1340\":4,\"1366\":1,\"1370\":2,\"1414\":1,\"1428\":2,\"1442\":1,\"1609\":1,\"2638\":1,\"2710\":1,\"2751\":4,\"2754\":2,\"2756\":1,\"2761\":1,\"2779\":1,\"2835\":1,\"2842\":2}}],[\"tostring\",{\"0\":{\"317\":1,\"544\":1,\"659\":1,\"687\":1,\"738\":1},\"1\":{\"123\":1,\"127\":1,\"254\":4,\"316\":2,\"317\":3,\"320\":2,\"544\":2,\"590\":6,\"591\":2,\"659\":15,\"662\":12,\"681\":4,\"686\":1,\"687\":3,\"689\":3,\"723\":2,\"724\":1,\"725\":1,\"738\":3,\"740\":1,\"782\":2,\"783\":3,\"806\":15,\"864\":2,\"865\":1,\"1366\":1,\"1426\":2,\"1431\":1,\"1447\":2,\"1534\":1}}],[\"toprimitive\",{\"1\":{\"804\":2,\"805\":1,\"806\":12,\"807\":3}}],[\"topright\",{\"1\":{\"21\":1,\"64\":1}}],[\"topleft\",{\"1\":{\"21\":1,\"64\":1}}],[\"top\",{\"0\":{\"334\":1,\"2530\":1,\"2538\":1},\"1\":{\"21\":10,\"64\":10,\"165\":2,\"166\":1,\"167\":1,\"168\":1,\"226\":1,\"1256\":4,\"2530\":1}}],[\"tiechui\",{\"1\":{\"1806\":1}}],[\"tick\",{\"1\":{\"383\":3,\"1541\":1,\"1542\":1}}],[\"timestamp\",{\"1\":{\"1468\":1}}],[\"times\",{\"1\":{\"1286\":2}}],[\"times`\",{\"1\":{\"1244\":3}}],[\"timeend\",{\"1\":{\"596\":3}}],[\"time3\",{\"1\":{\"596\":4}}],[\"time2\",{\"1\":{\"596\":4}}],[\"time1\",{\"1\":{\"596\":4}}],[\"timeoutpromise\",{\"1\":{\"574\":1}}],[\"timeout\",{\"1\":{\"381\":2,\"382\":2,\"828\":4,\"831\":14,\"1152\":3,\"1153\":4}}],[\"timerfunc\",{\"1\":{\"1542\":6}}],[\"timerid\",{\"1\":{\"430\":2}}],[\"timer\",{\"1\":{\"379\":5,\"903\":1,\"1246\":2,\"1282\":1}}],[\"timers\",{\"1\":{\"379\":1}}],[\"time\",{\"1\":{\"255\":2,\"299\":3,\"342\":4,\"596\":3,\"891\":3,\"919\":2,\"1282\":2,\"1728\":1,\"1729\":1,\"2744\":1}}],[\"time>\",{\"1\":{\"215\":1}}],[\"timing\",{\"1\":{\"21\":2,\"64\":2}}],[\"title=\",{\"1\":{\"1315\":3}}],[\"title>\",{\"1\":{\"436\":1,\"1705\":1,\"1839\":1}}],[\"title属性\",{\"1\":{\"218\":1}}],[\"title\",{\"1\":{\"94\":9,\"108\":2,\"127\":12,\"128\":7,\"345\":3,\"822\":1,\"1161\":1,\"1167\":2,\"1176\":1,\"1185\":1,\"1243\":1,\"1244\":1,\"1302\":4,\"1315\":3,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1,\"1374\":3,\"1375\":3,\"1376\":4,\"1380\":2}}],[\"tk\",{\"1\":{\"94\":4}}],[\"tkinter\",{\"1\":{\"94\":1}}],[\"that\",{\"1\":{\"828\":4,\"831\":7}}],[\"thanks\",{\"1\":{\"568\":2}}],[\"throttle\",{\"1\":{\"828\":2,\"829\":1}}],[\"throw\",{\"1\":{\"333\":1,\"358\":1,\"560\":1,\"575\":1,\"578\":1,\"580\":1,\"584\":1,\"1273\":1,\"1287\":1,\"1416\":1,\"1436\":1,\"1753\":1,\"1754\":2,\"1829\":1}}],[\"threejs\",{\"2\":{\"2271\":1,\"2274\":1,\"2324\":1,\"2348\":1,\"2352\":1,\"2356\":1,\"2360\":1,\"2364\":1,\"2368\":1,\"2372\":1,\"2376\":1,\"2380\":1,\"2384\":1,\"2388\":1,\"2392\":1,\"2396\":1,\"2400\":1,\"2404\":1,\"2408\":1,\"2412\":1,\"2427\":1,\"2431\":1,\"2435\":1,\"2439\":1,\"2443\":1,\"2447\":1,\"2451\":1,\"2458\":1,\"2481\":1,\"2485\":1,\"2489\":1,\"2493\":1,\"2497\":1,\"2500\":1,\"2503\":1,\"2506\":1,\"2521\":1,\"2525\":1,\"2546\":1,\"2559\":1,\"2563\":1,\"2590\":1,\"2594\":1,\"2610\":1,\"2614\":1,\"2622\":1,\"2626\":1,\"2630\":1,\"2692\":1,\"2714\":1,\"2718\":1,\"2722\":1,\"2726\":1,\"2730\":1,\"2734\":1,\"2738\":1,\"2768\":1,\"2772\":1,\"2783\":1,\"2847\":1,\"2861\":1,\"2865\":1,\"2869\":1,\"2873\":1,\"2877\":1,\"2881\":1,\"2885\":1}}],[\"three\",{\"1\":{\"690\":3,\"702\":3,\"703\":5,\"710\":3,\"728\":2,\"1726\":1,\"2278\":4,\"2359\":3,\"2371\":3,\"2375\":3,\"2379\":3,\"2383\":4,\"2387\":3,\"2391\":3,\"2395\":1,\"2399\":4,\"2403\":4,\"2407\":4,\"2411\":9,\"2430\":3,\"2434\":3,\"2438\":5,\"2442\":3,\"2446\":4,\"2450\":4,\"2455\":4,\"2462\":4,\"2528\":1,\"2545\":2,\"2562\":5,\"2566\":1,\"2589\":2,\"2674\":4,\"2675\":1,\"2691\":2,\"2737\":1,\"2741\":2,\"2744\":6,\"2754\":2,\"2805\":4,\"2860\":2,\"2864\":1,\"2868\":1,\"2872\":1,\"2876\":1,\"2880\":1,\"2884\":2}}],[\"thunk函数允许执行异步逻辑\",{\"1\":{\"1168\":1}}],[\"thunk\",{\"0\":{\"590\":1},\"1\":{\"590\":6,\"591\":3,\"592\":1,\"597\":1,\"1188\":2}}],[\"thumbnail\",{\"1\":{\"472\":3}}],[\"this就是a\",{\"1\":{\"1535\":1,\"1564\":1}}],[\"this代表的就是数据本身\",{\"1\":{\"1535\":1,\"1564\":1}}],[\"thisvalue\",{\"1\":{\"363\":2,\"872\":1,\"873\":1,\"875\":1,\"876\":2,\"878\":2}}],[\"this\",{\"0\":{\"261\":1,\"348\":1,\"352\":1,\"360\":1,\"361\":1,\"429\":1,\"2296\":1,\"2298\":1,\"2299\":1,\"2301\":1,\"2311\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2318\":1,\"2320\":1,\"2323\":1,\"2345\":1,\"2347\":1,\"2473\":1,\"2475\":1,\"2477\":1,\"2519\":1,\"2686\":1,\"2767\":1,\"2859\":1},\"1\":{\"83\":2,\"128\":112,\"231\":1,\"239\":3,\"261\":11,\"262\":4,\"286\":4,\"338\":4,\"342\":1,\"343\":2,\"345\":1,\"349\":4,\"350\":3,\"352\":6,\"353\":7,\"354\":10,\"355\":12,\"356\":1,\"357\":1,\"358\":7,\"359\":11,\"360\":9,\"361\":2,\"362\":12,\"363\":6,\"364\":3,\"365\":4,\"429\":2,\"455\":3,\"465\":2,\"467\":5,\"478\":8,\"484\":6,\"486\":4,\"488\":4,\"490\":1,\"492\":2,\"494\":4,\"495\":10,\"559\":5,\"580\":7,\"581\":1,\"584\":30,\"659\":1,\"678\":4,\"711\":1,\"712\":3,\"713\":2,\"729\":1,\"806\":5,\"828\":2,\"831\":3,\"867\":1,\"872\":3,\"873\":2,\"875\":1,\"1163\":1,\"1178\":3,\"1187\":3,\"1193\":1,\"1194\":1,\"1195\":1,\"1196\":8,\"1197\":15,\"1200\":4,\"1204\":8,\"1256\":4,\"1320\":7,\"1321\":6,\"1386\":3,\"1387\":3,\"1388\":2,\"1389\":6,\"1390\":8,\"1391\":3,\"1415\":1,\"1427\":7,\"1437\":2,\"1442\":3,\"1445\":1,\"1446\":1,\"1454\":1,\"1467\":5,\"1468\":4,\"1469\":1,\"1479\":1,\"1484\":4,\"1486\":2,\"1492\":2,\"1493\":27,\"1505\":2,\"1514\":1,\"1521\":1,\"1525\":3,\"1527\":2,\"1528\":2,\"1533\":4,\"1534\":1,\"1535\":5,\"1540\":2,\"1543\":1,\"1548\":3,\"1549\":1,\"1552\":1,\"1557\":8,\"1559\":2,\"1561\":16,\"1562\":5,\"1564\":2,\"1568\":2,\"1570\":1,\"1571\":43,\"1653\":3,\"1740\":5,\"1743\":8,\"1753\":2,\"1754\":2,\"1772\":1,\"1773\":2,\"1774\":3,\"1777\":10,\"1780\":1,\"1789\":3,\"1798\":6,\"1806\":7,\"1814\":10,\"1820\":6,\"1823\":8,\"1826\":4,\"1829\":2,\"1839\":7,\"2438\":2,\"2749\":1,\"2751\":1,\"2842\":1},\"2\":{\"367\":1}}],[\"there\",{\"1\":{\"2455\":1,\"2462\":1}}],[\"them\",{\"1\":{\"343\":1}}],[\"themeprovider\",{\"1\":{\"1222\":1}}],[\"theme<\",{\"1\":{\"1220\":1}}],[\"themebutton\",{\"1\":{\"1220\":3}}],[\"themecontext\",{\"0\":{\"1174\":1,\"1180\":1},\"1\":{\"1174\":3,\"1175\":3,\"1176\":3,\"1177\":3,\"1178\":3,\"1180\":4,\"1182\":3,\"1185\":3,\"1186\":3,\"1187\":3,\"1220\":4,\"1222\":1,\"1223\":2,\"1227\":3,\"1321\":12,\"1324\":13}}],[\"theme\",{\"1\":{\"39\":1,\"80\":1,\"1220\":2,\"1222\":4,\"1227\":4}}],[\"then代码块\",{\"1\":{\"596\":1}}],[\"then代码块中使⽤调试器的步进\",{\"1\":{\"596\":1}}],[\"then方法返回的是一个新的promise实例\",{\"1\":{\"571\":1}}],[\"then方法接受两个回调函数作为参数\",{\"1\":{\"571\":1}}],[\"then所在的微任务队列\",{\"1\":{\"376\":1}}],[\"then时\",{\"1\":{\"376\":1}}],[\"then\",{\"0\":{\"571\":1,\"581\":1},\"1\":{\"300\":1,\"323\":1,\"328\":2,\"334\":1,\"341\":2,\"344\":2,\"345\":2,\"376\":6,\"380\":1,\"381\":1,\"565\":6,\"567\":3,\"568\":3,\"569\":14,\"570\":1,\"571\":4,\"572\":1,\"573\":1,\"574\":2,\"575\":3,\"576\":1,\"577\":1,\"578\":4,\"580\":2,\"581\":13,\"582\":6,\"583\":2,\"584\":11,\"591\":1,\"592\":1,\"596\":4,\"819\":2,\"821\":2,\"822\":2,\"823\":2,\"859\":1,\"865\":1,\"1168\":1,\"1249\":1,\"1542\":1}}],[\"the\",{\"1\":{\"21\":3,\"64\":3,\"237\":1,\"345\":1,\"1152\":3,\"1256\":3,\"1281\":2,\"1282\":2,\"1290\":1,\"1469\":1,\"1505\":1,\"1637\":1,\"1649\":1,\"2424\":2,\"2473\":1,\"2474\":1,\"2562\":2,\"2710\":4,\"2754\":1,\"2779\":1,\"2795\":2,\"2826\":1,\"2827\":1,\"2835\":2,\"2842\":3,\"2843\":1}}],[\"tslib\",{\"1\":{\"1454\":1}}],[\"ts2411\",{\"1\":{\"1340\":1}}],[\"ts2322\",{\"1\":{\"1338\":2,\"1340\":1}}],[\"tsconfig\",{\"0\":{\"40\":1,\"1452\":1,\"1453\":1},\"1\":{\"37\":1,\"40\":2,\"1400\":1}}],[\"ts\",{\"1\":{\"21\":1,\"22\":2,\"27\":1,\"38\":1,\"39\":3,\"64\":1,\"65\":2,\"70\":1,\"81\":1,\"88\":1,\"1167\":3,\"1168\":4,\"1338\":2,\"1340\":2,\"1353\":2,\"1354\":3,\"1355\":2,\"1357\":5,\"1370\":2,\"1427\":1,\"1428\":2,\"1430\":2,\"1431\":9,\"1442\":1,\"1443\":2,\"1447\":1,\"1454\":2,\"1466\":2}}],[\"tsx\",{\"1\":{\"21\":1,\"22\":2,\"27\":1,\"64\":1,\"65\":2,\"70\":1}}],[\"texsubimage2d\",{\"1\":{\"2818\":1}}],[\"textureloader\",{\"1\":{\"2884\":1}}],[\"textures\",{\"1\":{\"2800\":1}}],[\"texture\",{\"0\":{\"2601\":1,\"2602\":1,\"2606\":1,\"2699\":1,\"2700\":1,\"2703\":1,\"2708\":1,\"2709\":1,\"2710\":1,\"2817\":1,\"2818\":2,\"2833\":2},\"1\":{\"2562\":1,\"2741\":1,\"2751\":1,\"2795\":5,\"2798\":5,\"2799\":1}}],[\"text里面还有剩余的普通文本\",{\"1\":{\"1551\":1}}],[\"textend\",{\"1\":{\"1550\":4}}],[\"textnode\",{\"1\":{\"1542\":3}}],[\"textcontent\",{\"1\":{\"1475\":1,\"1476\":1}}],[\"textfile3\",{\"1\":{\"984\":1}}],[\"textfile2\",{\"1\":{\"984\":2}}],[\"textfile1\",{\"1\":{\"984\":2}}],[\"textarea\",{\"1\":{\"340\":2}}],[\"textarea>\",{\"1\":{\"340\":1}}],[\"texttospeech\",{\"1\":{\"340\":3}}],[\"textinput\",{\"1\":{\"233\":1,\"1281\":1}}],[\"text>\",{\"1\":{\"118\":2,\"119\":2,\"127\":2}}],[\"textlab\",{\"1\":{\"94\":1}}],[\"textlab=tk\",{\"1\":{\"94\":1}}],[\"text=\",{\"1\":{\"94\":6,\"1235\":2}}],[\"text\",{\"1\":{\"21\":8,\"64\":8,\"94\":3,\"171\":2,\"172\":1,\"173\":1,\"206\":1,\"239\":1,\"340\":9,\"343\":2,\"345\":3,\"354\":8,\"388\":8,\"389\":1,\"821\":2,\"1009\":1,\"1210\":3,\"1211\":1,\"1212\":5,\"1235\":7,\"1256\":2,\"1281\":1,\"1366\":5,\"1476\":5,\"1527\":6,\"1528\":2,\"1550\":12,\"1551\":8,\"1839\":1}}],[\"tetrahedrongeometry\",{\"0\":{\"2366\":1,\"2367\":1}}],[\"terminal\",{\"1\":{\"986\":1}}],[\"term\",{\"1\":{\"986\":1}}],[\"teach\",{\"1\":{\"484\":2}}],[\"teacher\",{\"1\":{\"484\":9}}],[\"tencentadapater\",{\"1\":{\"1780\":2}}],[\"tencentmap\",{\"1\":{\"1780\":2}}],[\"tencent\",{\"1\":{\"269\":3}}],[\"template\",{\"1\":{\"1475\":1,\"1483\":1,\"1490\":1,\"1511\":1,\"1525\":6,\"1539\":1,\"1547\":3,\"1548\":6,\"1549\":2,\"1552\":2,\"1556\":1,\"1568\":1}}],[\"template>\",{\"1\":{\"83\":1,\"117\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1}}],[\"temp\",{\"1\":{\"749\":3,\"850\":2,\"1150\":5}}],[\"tempinp\",{\"1\":{\"239\":2}}],[\"testc\",{\"1\":{\"1814\":3}}],[\"testb\",{\"1\":{\"1814\":3}}],[\"testdb\",{\"1\":{\"1671\":2}}],[\"testinterface\",{\"1\":{\"1371\":1}}],[\"testfile\",{\"1\":{\"987\":2}}],[\"test>node\",{\"1\":{\"596\":1}}],[\"testa\",{\"1\":{\"1814\":3}}],[\"testawt\",{\"1\":{\"595\":2}}],[\"testasync\",{\"1\":{\"595\":2}}],[\"testasy\",{\"1\":{\"594\":2,\"595\":2}}],[\"testpromise\",{\"1\":{\"568\":3}}],[\"testmodule2\",{\"1\":{\"452\":3}}],[\"testmodule1\",{\"1\":{\"452\":3}}],[\"testmodule\",{\"1\":{\"452\":6}}],[\"test2\",{\"1\":{\"94\":4}}],[\"test2=tk\",{\"1\":{\"94\":1}}],[\"test1\",{\"1\":{\"94\":4,\"1777\":2}}],[\"test1=tk\",{\"1\":{\"94\":1}}],[\"test\",{\"1\":{\"16\":2,\"27\":1,\"30\":1,\"59\":2,\"70\":1,\"73\":1,\"82\":3,\"109\":2,\"226\":1,\"232\":3,\"239\":5,\"265\":2,\"274\":4,\"299\":2,\"469\":1,\"595\":2,\"816\":1,\"821\":2,\"891\":2,\"976\":1,\"979\":1,\"999\":1,\"1016\":5,\"1021\":1,\"1033\":3,\"1332\":2,\"1551\":1,\"1629\":2,\"1644\":1,\"1646\":2,\"1777\":2,\"1789\":1,\"1817\":2}}],[\"triangles\",{\"1\":{\"2288\":1,\"2764\":1,\"2800\":1}}],[\"trimend\",{\"0\":{\"307\":1,\"541\":1},\"1\":{\"307\":1,\"309\":2,\"541\":2}}],[\"trimedstr\",{\"1\":{\"123\":4,\"127\":4}}],[\"trimstart\",{\"0\":{\"307\":1,\"308\":1,\"309\":1,\"540\":1},\"1\":{\"307\":1,\"308\":2,\"538\":1,\"540\":2}}],[\"trim去除字符串首位空格\",{\"1\":{\"239\":1}}],[\"trim\",{\"0\":{\"539\":1},\"1\":{\"23\":1,\"66\":1,\"123\":1,\"127\":1,\"239\":1,\"307\":1,\"308\":1,\"309\":1,\"343\":1,\"538\":1,\"539\":2,\"1417\":1,\"1418\":1,\"1551\":1}}],[\"tree\",{\"0\":{\"1705\":1},\"1\":{\"1150\":1,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1}}],[\"try\",{\"1\":{\"318\":2,\"333\":1,\"334\":1,\"338\":1,\"340\":1,\"343\":1,\"345\":1,\"578\":1,\"580\":1,\"581\":2,\"582\":1,\"584\":2,\"597\":2}}],[\"tr>\",{\"1\":{\"172\":1}}],[\"tracing\",{\"1\":{\"2054\":1}}],[\"tracked\",{\"1\":{\"1584\":1}}],[\"transmission\",{\"1\":{\"2672\":1,\"2737\":1}}],[\"transaction\",{\"1\":{\"1670\":1}}],[\"transpile\",{\"1\":{\"1501\":1}}],[\"transpilemodule\",{\"1\":{\"1454\":1}}],[\"transparent\",{\"0\":{\"2677\":1,\"2781\":1},\"1\":{\"388\":1,\"2442\":1,\"2606\":1,\"2708\":1}}],[\"transcript\",{\"1\":{\"340\":6}}],[\"translations\",{\"1\":{\"334\":3}}],[\"translate\",{\"0\":{\"2323\":1},\"1\":{\"168\":1}}],[\"transition\",{\"1\":{\"21\":5,\"64\":5,\"1256\":1}}],[\"transform\",{\"0\":{\"168\":1},\"1\":{\"21\":2,\"64\":2,\"168\":1,\"226\":1,\"1289\":1}}],[\"trailing\",{\"1\":{\"21\":1,\"23\":1,\"64\":1,\"66\":1}}],[\"trailingcomma\",{\"1\":{\"20\":1,\"63\":1}}],[\"true代表渲染watcher\",{\"1\":{\"1557\":1,\"1561\":1}}],[\"true为真\",{\"1\":{\"889\":1}}],[\"true单双引号\",{\"1\":{\"20\":1,\"63\":1}}],[\"true有\",{\"1\":{\"20\":1,\"63\":1}}],[\"true\",{\"1\":{\"19\":2,\"20\":2,\"21\":5,\"23\":2,\"39\":3,\"62\":3,\"63\":2,\"64\":5,\"66\":2,\"83\":2,\"122\":4,\"128\":3,\"208\":1,\"248\":2,\"254\":3,\"271\":2,\"272\":1,\"274\":2,\"279\":2,\"280\":3,\"281\":4,\"285\":1,\"289\":4,\"320\":8,\"341\":3,\"401\":2,\"432\":2,\"469\":4,\"481\":3,\"482\":3,\"490\":4,\"495\":2,\"507\":2,\"522\":2,\"523\":3,\"524\":3,\"559\":1,\"568\":2,\"578\":5,\"587\":2,\"588\":1,\"590\":2,\"597\":3,\"616\":1,\"617\":1,\"623\":7,\"627\":2,\"639\":2,\"641\":6,\"642\":1,\"656\":1,\"657\":14,\"658\":3,\"659\":1,\"663\":2,\"664\":6,\"667\":3,\"668\":1,\"669\":1,\"674\":1,\"676\":1,\"679\":4,\"681\":1,\"699\":1,\"708\":1,\"714\":1,\"715\":2,\"716\":2,\"725\":1,\"754\":1,\"772\":3,\"773\":4,\"774\":2,\"775\":6,\"777\":7,\"778\":3,\"779\":3,\"783\":4,\"790\":3,\"791\":3,\"792\":4,\"794\":3,\"795\":14,\"798\":2,\"802\":3,\"806\":1,\"816\":2,\"819\":1,\"860\":2,\"862\":1,\"864\":2,\"866\":1,\"875\":1,\"876\":4,\"878\":2,\"879\":2,\"889\":1,\"898\":1,\"1251\":1,\"1307\":1,\"1335\":2,\"1397\":1,\"1400\":1,\"1412\":1,\"1415\":1,\"1416\":1,\"1418\":1,\"1427\":2,\"1429\":4,\"1431\":7,\"1442\":2,\"1454\":22,\"1467\":5,\"1486\":1,\"1490\":2,\"1492\":1,\"1493\":2,\"1541\":1,\"1542\":2,\"1558\":1,\"1569\":1,\"1570\":2,\"1571\":2,\"1773\":1,\"1774\":1,\"2407\":1,\"2442\":1,\"2562\":2,\"2652\":1,\"2676\":1,\"2744\":1,\"2750\":2,\"2781\":1,\"2795\":1,\"2813\":1,\"2814\":1,\"2815\":1,\"2884\":1}}],[\"修bug\",{\"1\":{\"1949\":1}}],[\"修饰的变量只能在构造函数中初始化\",{\"1\":{\"1388\":1}}],[\"修正文字\",{\"1\":{\"171\":1}}],[\"修复符号链接\",{\"1\":{\"1035\":1}}],[\"修复错误也是软件维护的一部分\",{\"1\":{\"442\":1}}],[\"修复了这种不严谨的设计\",{\"1\":{\"250\":1}}],[\"修复\",{\"1\":{\"16\":1,\"30\":1,\"59\":1,\"73\":1}}],[\"修改一个微服务不能影响另一个微服务\",{\"1\":{\"2056\":1}}],[\"修改构件\",{\"1\":{\"2028\":1}}],[\"修改必须在4人月内完成\",{\"1\":{\"2007\":1}}],[\"修改后端需求\",{\"1\":{\"1926\":1}}],[\"修改操作一致性问题\",{\"1\":{\"2244\":1}}],[\"修改操作\",{\"0\":{\"1612\":1}}],[\"修改完成后可以集中进行更新\",{\"1\":{\"1580\":1}}],[\"修改完配置文件后\",{\"1\":{\"1115\":1}}],[\"修改的内容提交到中央服务器\",{\"1\":{\"1579\":1}}],[\"修改watcher\",{\"0\":{\"1571\":1}}],[\"修改组名\",{\"1\":{\"960\":1}}],[\"修改在密码过期后多少天即关闭该帐号\",{\"1\":{\"950\":1}}],[\"修改帐号的有效期限\",{\"1\":{\"950\":1}}],[\"修改用户\",{\"1\":{\"2039\":1}}],[\"修改用户id\",{\"1\":{\"950\":1}}],[\"修改用户登入后所使用的shell\",{\"1\":{\"950\":1}}],[\"修改用户登入时的目录\",{\"1\":{\"950\":1}}],[\"修改用户帐号名称\",{\"1\":{\"950\":1}}],[\"修改用户帐号的备注文字\",{\"1\":{\"950\":1}}],[\"修改用户所属的附加群组\",{\"1\":{\"950\":1}}],[\"修改用户所属的群组\",{\"1\":{\"950\":1}}],[\"修改期限前n天发出警告\",{\"1\":{\"940\":1}}],[\"修改日期\",{\"1\":{\"940\":1}}],[\"修改如下\",{\"1\":{\"866\":1}}],[\"修改其中一个\",{\"1\":{\"761\":1}}],[\"修改其中一个那么另外一个也会改变\",{\"1\":{\"652\":1}}],[\"修改状态\",{\"1\":{\"580\":2}}],[\"修改了\",{\"1\":{\"484\":1}}],[\"修改了该属性\",{\"1\":{\"484\":1}}],[\"修改计时器回调中引用的对象\",{\"1\":{\"430\":1}}],[\"修改vue\",{\"0\":{\"110\":1}}],[\"修改git\",{\"0\":{\"104\":1}}],[\"修改app\",{\"1\":{\"82\":1}}],[\"修改main\",{\"1\":{\"38\":1,\"81\":1,\"82\":1,\"83\":1}}],[\"修改内容为\",{\"1\":{\"31\":1,\"74\":1}}],[\"修改配置文件\",{\"0\":{\"27\":1,\"70\":1}}],[\"修改package\",{\"0\":{\"22\":1,\"34\":1,\"65\":1,\"77\":1,\"108\":1}}],[\"修改\",{\"0\":{\"15\":1,\"40\":1,\"58\":1,\"1046\":1,\"1493\":1},\"1\":{\"19\":1,\"20\":1,\"39\":1,\"63\":1,\"1168\":2,\"1188\":2,\"1584\":1}}],[\"修改分支名称\",{\"0\":{\"10\":1,\"53\":1}}],[\"fk\",{\"1\":{\"2255\":1}}],[\"f2\",{\"1\":{\"2255\":1}}],[\"f1\",{\"1\":{\"2255\":1}}],[\"f是r上的函数依赖集\",{\"1\":{\"2255\":1}}],[\"f是它的依赖集\",{\"1\":{\"2253\":1}}],[\"fpga\",{\"1\":{\"2180\":1}}],[\"fcfs\",{\"0\":{\"2144\":1}}],[\"ftp\",{\"1\":{\"1677\":1}}],[\"f参数类似\",{\"1\":{\"1018\":1}}],[\"f<范本文件>\",{\"1\":{\"1014\":1}}],[\"f<名称文件>\",{\"1\":{\"1012\":1}}],[\"f<缓冲天数>\",{\"1\":{\"944\":1,\"950\":1}}],[\"f或\",{\"1\":{\"1009\":1,\"1021\":1,\"1032\":1}}],[\"f合用\",{\"1\":{\"992\":2}}],[\"f不使用\",{\"1\":{\"981\":1}}],[\"fg\",{\"1\":{\"528\":1}}],[\"fg=\",{\"1\":{\"94\":3}}],[\"fbound\",{\"1\":{\"358\":3}}],[\"frontside\",{\"1\":{\"2674\":2,\"2675\":1}}],[\"fromjson\",{\"0\":{\"2347\":1}}],[\"from<文件>\",{\"1\":{\"1009\":1}}],[\"fromentries\",{\"0\":{\"313\":1},\"1\":{\"313\":3,\"314\":1,\"315\":1}}],[\"fromindex\",{\"1\":{\"289\":5,\"520\":2}}],[\"fromcharcode\",{\"1\":{\"123\":1,\"127\":1,\"417\":1}}],[\"from\",{\"0\":{\"286\":1},\"1\":{\"39\":4,\"80\":3,\"82\":3,\"83\":6,\"88\":3,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"271\":2,\"274\":1,\"275\":3,\"276\":5,\"277\":1,\"286\":10,\"334\":7,\"469\":1,\"470\":6,\"472\":2,\"473\":1,\"474\":1,\"530\":4,\"678\":13,\"679\":1,\"710\":4,\"732\":4,\"742\":1,\"1157\":7,\"1158\":2,\"1159\":3,\"1160\":2,\"1161\":4,\"1162\":4,\"1163\":2,\"1167\":13,\"1168\":9,\"1173\":1,\"1174\":1,\"1175\":7,\"1176\":4,\"1177\":3,\"1178\":2,\"1180\":1,\"1181\":2,\"1182\":7,\"1183\":3,\"1184\":2,\"1185\":4,\"1186\":4,\"1187\":2,\"1188\":6,\"1196\":1,\"1197\":2,\"1200\":2,\"1204\":2,\"1211\":1,\"1220\":1,\"1222\":1,\"1227\":1,\"1229\":1,\"1235\":1,\"1243\":1,\"1244\":1,\"1251\":1,\"1255\":1,\"1256\":2,\"1265\":1,\"1269\":1,\"1281\":1,\"1288\":2,\"1289\":1,\"1299\":1,\"1300\":1,\"1311\":1,\"1312\":2,\"1315\":7,\"1320\":8,\"1321\":10,\"1323\":8,\"1324\":10,\"1484\":2,\"1492\":6,\"1493\":3,\"1502\":2,\"1503\":1,\"1504\":2,\"1505\":6,\"1525\":2,\"1527\":2,\"1528\":4,\"1533\":4,\"1535\":2,\"1540\":1,\"1541\":1,\"1543\":4,\"1548\":2,\"1549\":2,\"1561\":1,\"1571\":2,\"1817\":1,\"2359\":1,\"2843\":1}}],[\"frustum\",{\"1\":{\"2530\":1,\"2542\":1,\"2568\":1,\"2578\":1}}],[\"fruits\",{\"1\":{\"526\":2,\"1372\":2}}],[\"frag\",{\"1\":{\"2795\":1}}],[\"fragdepth\",{\"1\":{\"2751\":1}}],[\"fragment\",{\"1\":{\"2751\":1,\"2795\":1}}],[\"fragmentshader\",{\"0\":{\"2753\":1},\"1\":{\"2741\":1,\"2744\":1,\"2753\":1,\"2763\":1}}],[\"fragment>\",{\"1\":{\"470\":2}}],[\"framebuffertexture\",{\"0\":{\"2817\":1}}],[\"frameborder=\",{\"1\":{\"861\":1,\"862\":1}}],[\"frame\",{\"1\":{\"861\":4,\"867\":2,\"2800\":1}}],[\"friends\",{\"1\":{\"490\":4,\"492\":5,\"493\":2}}],[\"fr\",{\"1\":{\"334\":1}}],[\"female\",{\"1\":{\"1664\":1}}],[\"fedora\",{\"1\":{\"908\":1,\"1071\":1}}],[\"fetchcomments\",{\"1\":{\"1211\":2}}],[\"fetchusers\",{\"1\":{\"334\":2}}],[\"fetch\",{\"0\":{\"818\":1,\"821\":1,\"822\":1,\"823\":1},\"1\":{\"334\":10,\"337\":1,\"819\":4,\"821\":1,\"822\":1,\"823\":1,\"1168\":1,\"1609\":1,\"1622\":1}}],[\"features\",{\"1\":{\"1167\":4,\"1168\":5}}],[\"feature\",{\"1\":{\"30\":1,\"73\":1}}],[\"feat\",{\"1\":{\"16\":2,\"30\":1,\"59\":2,\"73\":1}}],[\"f\",{\"1\":{\"329\":2,\"526\":1,\"635\":2,\"658\":2,\"764\":3,\"919\":2,\"921\":2,\"944\":2,\"950\":1,\"953\":2,\"972\":1,\"986\":2,\"989\":2,\"992\":1,\"993\":1,\"995\":1,\"998\":1,\"1001\":1,\"1003\":1,\"1006\":1,\"1007\":4,\"1012\":1,\"1018\":2,\"1025\":6,\"1035\":1,\"1038\":1,\"1061\":1,\"1379\":1,\"1409\":1,\"1613\":2,\"1829\":5}}],[\"fullheight\",{\"0\":{\"2542\":1,\"2587\":1},\"1\":{\"2542\":1,\"2587\":1}}],[\"fullwidth\",{\"0\":{\"2542\":1,\"2587\":1},\"1\":{\"2542\":1,\"2587\":1}}],[\"full\",{\"1\":{\"1256\":1,\"1501\":1}}],[\"fullfilled\",{\"1\":{\"577\":3}}],[\"fullsreenelement\",{\"1\":{\"339\":1}}],[\"fullscreenelement\",{\"1\":{\"339\":1}}],[\"fullscreen<\",{\"1\":{\"339\":1}}],[\"fullscreen\",{\"0\":{\"339\":1},\"1\":{\"339\":4}}],[\"fulfilled\",{\"1\":{\"323\":1,\"563\":1,\"564\":1,\"565\":1,\"566\":1,\"576\":1,\"581\":4,\"582\":2,\"583\":1,\"584\":5,\"1168\":3}}],[\"fun3\",{\"1\":{\"901\":6}}],[\"fun2\",{\"1\":{\"901\":8}}],[\"fun\",{\"1\":{\"584\":1}}],[\"fun1\",{\"1\":{\"261\":5,\"900\":3,\"901\":11}}],[\"funcd\",{\"1\":{\"260\":2}}],[\"func\",{\"1\":{\"258\":2,\"274\":3,\"305\":2,\"469\":6,\"470\":1,\"828\":5,\"831\":7,\"1320\":1,\"1323\":1,\"1365\":1,\"1377\":1}}],[\"funcc\",{\"1\":{\"257\":2,\"260\":3}}],[\"funcb\",{\"1\":{\"250\":2,\"257\":2,\"260\":2}}],[\"funca\",{\"1\":{\"250\":2,\"257\":2,\"260\":4}}],[\"functionlogged\",{\"1\":{\"1469\":2}}],[\"function>\",{\"1\":{\"1378\":1,\"1379\":1,\"1466\":1}}],[\"functions\",{\"0\":{\"1342\":1}}],[\"function内使用\",{\"1\":{\"891\":1}}],[\"function\",{\"0\":{\"2464\":1,\"2465\":1,\"2466\":1,\"2468\":1,\"2469\":1,\"2470\":1,\"2471\":1,\"2477\":1,\"2838\":1},\"1\":{\"21\":3,\"64\":3,\"88\":1,\"109\":1,\"117\":1,\"118\":3,\"119\":5,\"121\":1,\"122\":1,\"123\":5,\"125\":1,\"126\":1,\"127\":14,\"128\":1,\"206\":1,\"231\":1,\"232\":1,\"234\":6,\"237\":1,\"239\":3,\"240\":1,\"241\":4,\"250\":4,\"254\":2,\"256\":1,\"257\":3,\"258\":1,\"260\":4,\"261\":1,\"265\":1,\"269\":2,\"270\":1,\"274\":3,\"277\":1,\"286\":1,\"296\":1,\"299\":4,\"302\":1,\"305\":1,\"317\":1,\"323\":1,\"333\":1,\"334\":1,\"338\":7,\"339\":1,\"340\":10,\"341\":2,\"342\":1,\"343\":2,\"344\":3,\"345\":1,\"351\":3,\"353\":3,\"354\":5,\"355\":6,\"356\":3,\"357\":3,\"358\":5,\"359\":6,\"360\":2,\"362\":4,\"363\":3,\"364\":3,\"365\":2,\"419\":1,\"420\":1,\"428\":2,\"429\":1,\"430\":4,\"431\":3,\"432\":3,\"433\":2,\"434\":5,\"436\":1,\"437\":1,\"445\":5,\"452\":5,\"455\":9,\"462\":1,\"463\":6,\"464\":3,\"465\":3,\"469\":5,\"472\":1,\"478\":3,\"481\":1,\"482\":2,\"484\":4,\"486\":3,\"488\":3,\"490\":1,\"492\":3,\"494\":5,\"495\":7,\"500\":7,\"505\":1,\"506\":1,\"507\":2,\"508\":1,\"555\":3,\"559\":2,\"565\":1,\"567\":1,\"568\":1,\"569\":5,\"571\":5,\"575\":1,\"576\":1,\"577\":1,\"580\":7,\"582\":6,\"583\":1,\"584\":1,\"587\":3,\"588\":2,\"590\":3,\"591\":2,\"594\":3,\"595\":5,\"596\":6,\"636\":1,\"641\":3,\"642\":2,\"652\":1,\"654\":2,\"656\":3,\"657\":3,\"658\":1,\"659\":2,\"668\":1,\"678\":1,\"681\":1,\"698\":1,\"712\":1,\"713\":1,\"723\":2,\"727\":1,\"728\":1,\"729\":2,\"731\":2,\"732\":3,\"735\":1,\"736\":2,\"737\":1,\"738\":1,\"739\":1,\"740\":1,\"743\":1,\"746\":1,\"760\":1,\"765\":2,\"766\":1,\"767\":2,\"768\":2,\"795\":1,\"806\":1,\"817\":1,\"819\":2,\"821\":1,\"822\":1,\"823\":1,\"828\":5,\"831\":11,\"836\":2,\"843\":1,\"847\":3,\"859\":1,\"860\":4,\"861\":3,\"862\":1,\"863\":1,\"864\":5,\"865\":1,\"866\":3,\"867\":1,\"872\":2,\"873\":2,\"875\":1,\"876\":2,\"877\":1,\"878\":2,\"885\":1,\"891\":3,\"896\":2,\"897\":1,\"898\":4,\"900\":2,\"901\":6,\"902\":12,\"903\":5,\"1159\":1,\"1161\":1,\"1162\":1,\"1167\":1,\"1168\":1,\"1173\":1,\"1176\":1,\"1177\":1,\"1183\":1,\"1185\":1,\"1186\":1,\"1210\":2,\"1211\":2,\"1212\":1,\"1219\":1,\"1220\":3,\"1222\":4,\"1227\":1,\"1229\":1,\"1235\":2,\"1236\":1,\"1243\":1,\"1244\":1,\"1251\":1,\"1255\":1,\"1256\":1,\"1265\":2,\"1267\":5,\"1269\":1,\"1273\":3,\"1274\":6,\"1281\":4,\"1282\":1,\"1283\":1,\"1285\":1,\"1286\":4,\"1287\":3,\"1288\":1,\"1289\":1,\"1290\":1,\"1299\":2,\"1300\":2,\"1303\":2,\"1311\":2,\"1312\":2,\"1315\":2,\"1323\":3,\"1324\":4,\"1335\":1,\"1362\":1,\"1365\":1,\"1366\":5,\"1369\":1,\"1370\":2,\"1415\":1,\"1416\":3,\"1418\":1,\"1420\":1,\"1421\":1,\"1423\":1,\"1424\":1,\"1425\":2,\"1426\":5,\"1428\":1,\"1435\":1,\"1436\":1,\"1438\":2,\"1442\":2,\"1448\":2,\"1466\":7,\"1467\":3,\"1468\":3,\"1469\":2,\"1476\":2,\"1477\":1,\"1478\":2,\"1479\":2,\"1484\":3,\"1485\":3,\"1486\":3,\"1491\":3,\"1492\":4,\"1493\":4,\"1502\":1,\"1505\":1,\"1525\":3,\"1526\":1,\"1527\":9,\"1528\":6,\"1533\":12,\"1534\":2,\"1535\":2,\"1541\":2,\"1542\":2,\"1543\":3,\"1548\":3,\"1549\":2,\"1550\":7,\"1551\":4,\"1552\":2,\"1557\":1,\"1558\":1,\"1560\":1,\"1561\":1,\"1562\":2,\"1563\":2,\"1564\":1,\"1569\":2,\"1570\":4,\"1571\":4,\"1646\":1,\"1653\":10,\"1671\":3,\"1740\":2,\"1743\":2,\"1755\":1,\"1772\":2,\"1773\":3,\"1777\":9,\"1780\":1,\"1789\":1,\"1814\":3,\"1817\":1,\"1820\":3,\"1823\":5,\"1829\":5,\"1832\":2,\"1839\":3,\"2455\":4,\"2462\":5}}],[\"fname=henry\",{\"1\":{\"816\":1}}],[\"fn2\",{\"1\":{\"353\":2,\"355\":2,\"445\":8}}],[\"fn1\",{\"1\":{\"353\":6,\"355\":1,\"445\":11,\"470\":1}}],[\"fn\",{\"1\":{\"255\":1,\"270\":2,\"353\":3,\"354\":25,\"355\":12,\"362\":5,\"364\":1,\"431\":2,\"470\":1,\"500\":4,\"507\":4,\"508\":2,\"580\":1,\"584\":4,\"654\":2,\"657\":3,\"658\":3,\"902\":10,\"1211\":4,\"1303\":2,\"1839\":2}}],[\"fsck\",{\"1\":{\"919\":2}}],[\"fs\",{\"1\":{\"109\":4,\"560\":4,\"569\":9,\"590\":1,\"591\":1,\"1137\":1}}],[\"ff1+ff\",{\"1\":{\"94\":1}}],[\"ff1\",{\"1\":{\"94\":1}}],[\"ff\",{\"1\":{\"94\":5,\"232\":1,\"484\":1}}],[\"ffmpeg\",{\"1\":{\"93\":1,\"94\":2}}],[\"flushcallbacks\",{\"1\":{\"1542\":5}}],[\"flushschedulerqueue\",{\"1\":{\"1493\":2,\"1541\":2}}],[\"flushsync\",{\"0\":{\"1203\":1},\"1\":{\"1203\":10,\"1204\":3}}],[\"floor\",{\"1\":{\"749\":1}}],[\"floatvertextextures\",{\"1\":{\"2795\":1}}],[\"float扩展\",{\"1\":{\"2795\":1}}],[\"floatfragmenttextures\",{\"1\":{\"2795\":1}}],[\"float64array\",{\"1\":{\"402\":1,\"404\":1}}],[\"float64\",{\"1\":{\"402\":1}}],[\"float32array\",{\"1\":{\"402\":1,\"404\":1,\"2278\":1}}],[\"float32\",{\"1\":{\"402\":1}}],[\"float为\",{\"1\":{\"148\":1}}],[\"float\",{\"0\":{\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":3,\"2323\":3,\"2333\":1,\"2334\":1,\"2337\":1,\"2340\":3,\"2341\":1,\"2342\":1,\"2532\":1,\"2533\":1,\"2535\":1,\"2536\":1,\"2537\":1,\"2538\":1,\"2542\":6,\"2553\":1,\"2554\":1,\"2570\":1,\"2571\":1,\"2572\":1,\"2573\":1,\"2574\":1,\"2575\":1,\"2577\":1,\"2582\":1,\"2583\":1,\"2584\":1,\"2585\":1,\"2586\":1,\"2587\":6,\"2603\":1,\"2604\":1,\"2605\":1,\"2607\":1,\"2637\":1,\"2667\":1,\"2701\":1,\"2704\":1,\"2705\":1,\"2758\":1,\"2765\":1,\"2822\":1,\"2835\":4,\"2839\":1,\"2840\":1,\"2853\":1,\"2856\":1},\"1\":{\"21\":1,\"64\":1,\"178\":1,\"184\":1,\"2744\":1}}],[\"flase\",{\"1\":{\"653\":1}}],[\"flatshading\",{\"0\":{\"2706\":1,\"2759\":1}}],[\"flatten\",{\"1\":{\"734\":3,\"735\":3,\"736\":3,\"737\":2,\"738\":2,\"739\":2,\"740\":2}}],[\"flatmap\",{\"0\":{\"310\":1,\"312\":1},\"1\":{\"312\":5}}],[\"flat\",{\"0\":{\"310\":1,\"311\":1,\"720\":1,\"739\":1},\"1\":{\"311\":10,\"312\":1,\"720\":7,\"739\":6}}],[\"flag\",{\"1\":{\"109\":1,\"578\":4,\"597\":3,\"2756\":1}}],[\"flex|flex\",{\"1\":{\"148\":1}}],[\"flex\",{\"0\":{\"169\":1,\"170\":1},\"1\":{\"21\":1,\"64\":1,\"169\":1,\"170\":1,\"207\":1,\"1244\":1}}],[\"fardistance\",{\"0\":{\"2605\":1}}],[\"far\",{\"0\":{\"2530\":1,\"2533\":1,\"2568\":1,\"2571\":1},\"1\":{\"2530\":1,\"2568\":1,\"2884\":1}}],[\"fatal\",{\"1\":{\"1609\":1}}],[\"face\",{\"1\":{\"2826\":1,\"2835\":1}}],[\"facebook\",{\"1\":{\"1583\":1}}],[\"factor\",{\"1\":{\"803\":2}}],[\"factory\",{\"1\":{\"458\":2,\"464\":1,\"465\":6,\"1752\":3,\"1755\":2}}],[\"fadeinanimation\",{\"1\":{\"1250\":1}}],[\"fastcgi临时数据目录\",{\"1\":{\"1150\":1}}],[\"fastcgi的参数文件\",{\"1\":{\"1150\":1}}],[\"fastcgi相关参数的配置文件\",{\"1\":{\"1150\":1}}],[\"fastcgi\",{\"1\":{\"1150\":6,\"1152\":5}}],[\"fast\",{\"1\":{\"1021\":2}}],[\"fallthrough\",{\"1\":{\"1454\":1}}],[\"fallback=\",{\"1\":{\"1312\":1}}],[\"fallback\",{\"1\":{\"334\":1,\"345\":1,\"473\":3,\"1236\":1}}],[\"false为假\",{\"1\":{\"889\":1}}],[\"false双引号\",{\"1\":{\"20\":1,\"63\":1}}],[\"false\",{\"1\":{\"20\":6,\"23\":1,\"39\":2,\"63\":6,\"66\":1,\"98\":1,\"104\":1,\"122\":1,\"128\":2,\"193\":1,\"208\":2,\"232\":2,\"239\":1,\"268\":1,\"279\":3,\"280\":2,\"281\":2,\"285\":1,\"289\":3,\"320\":4,\"321\":3,\"401\":2,\"482\":1,\"495\":1,\"522\":3,\"523\":2,\"524\":2,\"558\":1,\"568\":1,\"578\":5,\"587\":2,\"588\":4,\"597\":4,\"616\":1,\"623\":6,\"639\":1,\"641\":4,\"643\":3,\"657\":3,\"658\":2,\"663\":2,\"664\":9,\"667\":2,\"668\":1,\"669\":1,\"679\":4,\"714\":1,\"715\":1,\"716\":1,\"758\":1,\"759\":1,\"764\":1,\"765\":1,\"772\":2,\"773\":1,\"774\":1,\"777\":1,\"783\":4,\"788\":1,\"790\":1,\"791\":4,\"793\":3,\"794\":3,\"795\":7,\"798\":2,\"802\":2,\"806\":1,\"816\":1,\"817\":1,\"862\":1,\"875\":1,\"876\":2,\"879\":2,\"884\":1,\"885\":1,\"1251\":1,\"1265\":1,\"1302\":2,\"1307\":1,\"1366\":1,\"1375\":1,\"1380\":1,\"1417\":1,\"1429\":4,\"1431\":2,\"1493\":2,\"1501\":1,\"1535\":2,\"1542\":2,\"1549\":1,\"1571\":1,\"2438\":1,\"2442\":1,\"2562\":1,\"2638\":1,\"2646\":1,\"2648\":1,\"2673\":1,\"2751\":4,\"2757\":1,\"2761\":1,\"2800\":2,\"2805\":2,\"2813\":2,\"2814\":2,\"2815\":2}}],[\"false没有\",{\"1\":{\"20\":1,\"63\":1}}],[\"failifmajorperformancecaveat\",{\"1\":{\"2788\":1}}],[\"failure\",{\"1\":{\"571\":1}}],[\"failed\",{\"1\":{\"344\":1}}],[\"fail\",{\"1\":{\"117\":1,\"118\":3,\"119\":4,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":9,\"128\":9,\"300\":1,\"578\":5}}],[\"family\",{\"1\":{\"21\":3,\"64\":3}}],[\"fish\",{\"1\":{\"2462\":2}}],[\"fits\",{\"1\":{\"1256\":2}}],[\"fit\",{\"1\":{\"1256\":1,\"1646\":8}}],[\"firewalld\",{\"1\":{\"1136\":1}}],[\"firefox\",{\"1\":{\"815\":1,\"1334\":1}}],[\"firstname\",{\"1\":{\"275\":1,\"470\":1,\"1423\":3,\"1424\":2}}],[\"firstpersonname\",{\"1\":{\"83\":1}}],[\"first\",{\"1\":{\"21\":1,\"64\":1,\"274\":5,\"469\":5,\"470\":1,\"571\":1,\"862\":3,\"1637\":1,\"1646\":4}}],[\"five\",{\"1\":{\"690\":3,\"702\":2,\"703\":3,\"710\":3,\"728\":2}}],[\"fin=1\",{\"1\":{\"1728\":2}}],[\"fin\",{\"1\":{\"1728\":5}}],[\"find函数用来遍历uniquelist\",{\"1\":{\"767\":1}}],[\"findindex\",{\"0\":{\"878\":1},\"1\":{\"363\":1,\"682\":1,\"709\":3,\"878\":6,\"879\":2}}],[\"find\",{\"0\":{\"878\":1,\"1005\":1},\"1\":{\"128\":1,\"363\":1,\"682\":1,\"709\":3,\"767\":2,\"878\":6,\"879\":2,\"1006\":1,\"1007\":12,\"1443\":2}}],[\"finally本质上是then方法的特例\",{\"1\":{\"575\":1}}],[\"finally方法里面的操作\",{\"1\":{\"575\":1}}],[\"finally方法的回调函数不接受任何参数\",{\"1\":{\"575\":1}}],[\"finally方法用于指定不管\",{\"1\":{\"575\":1}}],[\"finally\",{\"0\":{\"300\":1,\"575\":1},\"1\":{\"300\":6,\"570\":1,\"575\":3,\"584\":1}}],[\"final\",{\"1\":{\"23\":1,\"66\":1}}],[\"filmoffset\",{\"0\":{\"2573\":1}}],[\"filmoffset被设置为了一个非零的值\",{\"1\":{\"2572\":1}}],[\"filmgauge的焦距\",{\"1\":{\"2586\":1}}],[\"filmgauge单位相同\",{\"1\":{\"2573\":1}}],[\"filmgauge\",{\"0\":{\"2572\":1},\"1\":{\"2583\":1,\"2584\":1,\"2585\":1}}],[\"fill功能\",{\"1\":{\"2668\":1}}],[\"fill\",{\"0\":{\"287\":1,\"684\":1},\"1\":{\"21\":1,\"64\":1,\"287\":10,\"682\":1,\"683\":1,\"684\":10,\"685\":1}}],[\"filteredusers\",{\"1\":{\"1267\":3}}],[\"filterusers\",{\"1\":{\"1265\":2,\"1267\":2}}],[\"filter\",{\"0\":{\"285\":1,\"714\":1,\"875\":1},\"1\":{\"21\":1,\"64\":1,\"271\":2,\"285\":4,\"682\":1,\"711\":1,\"714\":4,\"875\":8,\"879\":1,\"1210\":2,\"1265\":1,\"1806\":1,\"1814\":1,\"2798\":1}}],[\"file<文件>\",{\"1\":{\"1009\":1}}],[\"file3\",{\"1\":{\"984\":1}}],[\"file中\",{\"1\":{\"983\":1}}],[\"file可以将file1和file2的内容连接起来\",{\"1\":{\"983\":1}}],[\"file2\",{\"1\":{\"983\":1,\"984\":2,\"1025\":2,\"1041\":2}}],[\"file1\",{\"1\":{\"983\":1,\"984\":2,\"1025\":2,\"1041\":6}}],[\"file的效果一样\",{\"1\":{\"981\":1}}],[\"filenames\",{\"1\":{\"986\":2}}],[\"filename会将指定文件的内容输出到终端上\",{\"1\":{\"983\":1}}],[\"filename\",{\"1\":{\"413\":1,\"449\":1,\"569\":2,\"590\":2,\"591\":2,\"973\":2,\"983\":1,\"984\":10,\"1067\":3,\"1152\":1,\"1677\":2}}],[\"file对象转化为url\",{\"1\":{\"413\":1}}],[\"fileinput\",{\"1\":{\"391\":5,\"395\":11,\"413\":4,\"414\":4}}],[\"filelist\",{\"1\":{\"390\":1,\"391\":1,\"392\":2}}],[\"filereader\",{\"0\":{\"393\":1},\"1\":{\"386\":1,\"393\":3,\"394\":8,\"395\":8,\"414\":1,\"419\":1,\"420\":1}}],[\"filemode\",{\"1\":{\"98\":1}}],[\"files\",{\"1\":{\"40\":1,\"391\":1,\"392\":4,\"395\":3,\"413\":1,\"414\":1,\"1009\":2,\"1014\":3,\"1152\":1,\"1453\":1,\"2455\":2,\"2462\":2}}],[\"filepaths\",{\"1\":{\"333\":2}}],[\"filepath\",{\"1\":{\"39\":1,\"333\":2}}],[\"file\",{\"0\":{\"390\":1,\"1011\":1,\"2474\":1},\"1\":{\"19\":1,\"62\":1,\"386\":1,\"390\":5,\"391\":6,\"392\":4,\"395\":3,\"413\":5,\"414\":1,\"819\":1,\"973\":5,\"999\":2,\"1001\":7,\"1007\":2,\"1009\":2,\"1012\":2,\"1016\":4,\"1029\":1,\"1038\":1,\"1041\":2,\"1677\":1,\"1823\":12,\"2455\":2,\"2462\":3,\"2474\":2}}],[\"fixed\",{\"1\":{\"184\":1}}],[\"fix\",{\"1\":{\"16\":2,\"22\":2,\"27\":4,\"30\":1,\"59\":2,\"65\":2,\"70\":4,\"73\":1}}],[\"fog\",{\"0\":{\"2707\":1,\"2752\":1,\"2780\":1}}],[\"focallength\",{\"0\":{\"2586\":1}}],[\"focusinput\",{\"1\":{\"1281\":2}}],[\"focus\",{\"0\":{\"2574\":1},\"1\":{\"233\":1,\"1256\":1,\"1281\":2}}],[\"fov\",{\"0\":{\"2568\":1,\"2575\":1},\"1\":{\"2568\":1,\"2585\":1,\"2884\":1}}],[\"folder\",{\"1\":{\"1823\":11}}],[\"four\",{\"1\":{\"690\":3,\"702\":2,\"703\":3,\"710\":3,\"728\":2}}],[\"found\",{\"1\":{\"118\":2,\"119\":2,\"127\":2,\"2887\":1}}],[\"fomatting\",{\"1\":{\"147\":1}}],[\"fontsize\",{\"1\":{\"206\":1,\"1315\":2}}],[\"font=\",{\"1\":{\"94\":8}}],[\"font\",{\"1\":{\"21\":8,\"64\":8,\"171\":2,\"206\":9,\"207\":6,\"343\":1,\"1706\":1}}],[\"forwardref\",{\"1\":{\"1281\":2}}],[\"forwarded\",{\"1\":{\"1152\":1,\"1153\":3}}],[\"forward\",{\"1\":{\"1009\":1}}],[\"forcecontextrestore\",{\"0\":{\"2821\":1}}],[\"forcecontextloss\",{\"0\":{\"2820\":1}}],[\"forcesinglepass\",{\"0\":{\"2654\":1}}],[\"forceupdate\",{\"1\":{\"1178\":1,\"1187\":1}}],[\"force\",{\"1\":{\"953\":1,\"998\":1,\"1021\":1,\"2761\":1}}],[\"for循环可以用来遍历数组\",{\"1\":{\"888\":1}}],[\"for循环是应该是最常见的循环方式了\",{\"1\":{\"888\":1}}],[\"forms\",{\"1\":{\"724\":3}}],[\"form\",{\"1\":{\"271\":1,\"679\":1,\"724\":1,\"816\":1,\"1281\":1,\"1301\":2}}],[\"format\",{\"1\":{\"1152\":1,\"1153\":1,\"1501\":1,\"2545\":1,\"2589\":1,\"2691\":1,\"2860\":1}}],[\"format标记\",{\"1\":{\"20\":1,\"63\":1}}],[\"formatting\",{\"1\":{\"19\":1,\"39\":1,\"147\":4}}],[\"foreach\",{\"0\":{\"712\":1,\"872\":1},\"1\":{\"88\":1,\"128\":1,\"363\":6,\"580\":2,\"584\":6,\"682\":1,\"711\":1,\"712\":3,\"713\":2,\"719\":1,\"822\":2,\"823\":1,\"872\":7,\"874\":1,\"879\":1,\"884\":1,\"1315\":1,\"1425\":1,\"1476\":1,\"1485\":1,\"1491\":1,\"1493\":1,\"1528\":1,\"1535\":1,\"1551\":1,\"1562\":1,\"1564\":1,\"1571\":1,\"1806\":1,\"1814\":1,\"2462\":1}}],[\"for=\",{\"1\":{\"83\":1,\"118\":1,\"119\":1,\"127\":1}}],[\"for\",{\"0\":{\"299\":1,\"718\":1,\"719\":1,\"874\":1,\"881\":1,\"888\":1,\"891\":1},\"1\":{\"21\":1,\"64\":1,\"109\":1,\"123\":1,\"125\":1,\"127\":2,\"128\":3,\"226\":1,\"248\":2,\"268\":1,\"271\":1,\"272\":1,\"295\":1,\"299\":3,\"324\":2,\"418\":2,\"431\":1,\"436\":1,\"437\":1,\"506\":3,\"582\":1,\"583\":1,\"602\":1,\"645\":2,\"653\":2,\"679\":2,\"717\":2,\"718\":3,\"719\":18,\"725\":2,\"727\":1,\"735\":1,\"743\":1,\"748\":1,\"760\":1,\"765\":1,\"766\":1,\"767\":2,\"768\":2,\"795\":1,\"803\":3,\"848\":1,\"872\":1,\"874\":9,\"879\":5,\"881\":4,\"886\":1,\"888\":1,\"891\":3,\"898\":1,\"903\":5,\"986\":1,\"1152\":1,\"1153\":3,\"1235\":1,\"1265\":1,\"1290\":1,\"1311\":1,\"1476\":1,\"1477\":4,\"1478\":2,\"1485\":2,\"1486\":1,\"1491\":1,\"1493\":1,\"1501\":1,\"1528\":2,\"1533\":1,\"1534\":1,\"1535\":1,\"1541\":1,\"1542\":1,\"1551\":2,\"1563\":1,\"1569\":1,\"1571\":1,\"1612\":1,\"1789\":1,\"1823\":1,\"1832\":1,\"2446\":1,\"2710\":1,\"2741\":1,\"2754\":1,\"2788\":1,\"2835\":2}}],[\"football\",{\"1\":{\"692\":2,\"762\":1}}],[\"footerslot\",{\"1\":{\"1315\":3}}],[\"footer>\",{\"1\":{\"215\":1}}],[\"footer\",{\"1\":{\"16\":2,\"59\":2,\"215\":1,\"1162\":1,\"1177\":1,\"1186\":1,\"1315\":2,\"1320\":2,\"1321\":1,\"1323\":2,\"1324\":2}}],[\"foo\",{\"1\":{\"20\":1,\"63\":1,\"252\":3,\"253\":11,\"274\":1,\"276\":4,\"305\":4,\"314\":2,\"315\":2,\"353\":3,\"355\":2,\"360\":11,\"362\":5,\"374\":1,\"428\":4,\"429\":3,\"467\":3,\"469\":1,\"472\":3,\"500\":3,\"506\":2,\"635\":1,\"723\":5,\"729\":5,\"842\":2,\"843\":3,\"847\":3,\"884\":3,\"898\":8,\"902\":2,\"1353\":3,\"1354\":3,\"1377\":1,\"1416\":14,\"1417\":1,\"1418\":1,\"1653\":4,\"2750\":2}}],[\"vec4\",{\"1\":{\"2744\":1}}],[\"vec3\",{\"1\":{\"2744\":2}}],[\"vec2\",{\"1\":{\"2744\":1}}],[\"vectors的值\",{\"1\":{\"2795\":3}}],[\"vector4\",{\"1\":{\"2744\":1}}],[\"vector2\",{\"0\":{\"2712\":1,\"2817\":1,\"2818\":1,\"2832\":2},\"1\":{\"2446\":1,\"2744\":2}}],[\"vector3\",{\"0\":{\"2311\":1,\"2520\":2,\"2608\":1},\"1\":{\"2411\":5,\"2438\":1,\"2744\":2}}],[\"vector\",{\"0\":{\"2311\":1,\"2333\":2,\"2334\":2,\"2341\":2,\"2342\":2},\"1\":{\"2311\":1}}],[\"vertextextures\",{\"1\":{\"2795\":1}}],[\"vertex\",{\"1\":{\"2795\":3}}],[\"vertexshader和fragmentshader使用引用拷贝\",{\"1\":{\"2767\":1}}],[\"vertexshader\",{\"0\":{\"2763\":1},\"1\":{\"2741\":1,\"2744\":1,\"2753\":1,\"2763\":1}}],[\"vertexcolors\",{\"0\":{\"2681\":1,\"2762\":1}}],[\"verticesofcube\",{\"1\":{\"2395\":2}}],[\"vertices\",{\"1\":{\"2278\":2}}],[\"vertical\",{\"1\":{\"21\":1,\"64\":1,\"171\":1,\"173\":1}}],[\"verbose\",{\"1\":{\"998\":1,\"1021\":1,\"1032\":1}}],[\"version列出版本讯息\",{\"1\":{\"981\":1}}],[\"version\",{\"0\":{\"2680\":1},\"1\":{\"930\":1,\"970\":2,\"981\":1,\"1003\":2,\"1009\":1,\"1021\":1,\"1032\":3,\"1035\":1,\"1038\":2,\"1153\":1,\"1329\":1,\"1334\":3,\"1357\":1,\"1577\":1,\"1582\":1,\"1671\":1,\"2754\":1}}],[\"versions\",{\"1\":{\"208\":1}}],[\"v模型\",{\"0\":{\"1897\":1}}],[\"vca\",{\"1\":{\"1876\":1}}],[\"v<major>\",{\"1\":{\"1618\":1}}],[\"v<备份方式>\",{\"1\":{\"1003\":1}}],[\"v表示创建文本\",{\"1\":{\"1551\":1}}],[\"v代表创建文本\",{\"1\":{\"1549\":1}}],[\"vdom\",{\"1\":{\"1492\":1,\"1527\":2,\"1528\":3,\"1543\":1}}],[\"vnode\",{\"1\":{\"1476\":17,\"1477\":3,\"1479\":6,\"1520\":2,\"1527\":5,\"1528\":15}}],[\"vname\",{\"1\":{\"896\":5}}],[\"vsmshadowmap\",{\"1\":{\"2805\":1}}],[\"vscode\",{\"1\":{\"1583\":1}}],[\"vscode文件被忽略\",{\"1\":{\"1583\":1}}],[\"vs\",{\"0\":{\"1255\":1,\"1581\":1}}],[\"v可以看到nginx的安装的文件路径\",{\"1\":{\"1144\":1}}],[\"vbird后\",{\"1\":{\"1062\":1}}],[\"vbird的话\",{\"1\":{\"1062\":1}}],[\"vbird去向下搜寻vbird这个字符串\",{\"1\":{\"1062\":1}}],[\"vbird即可\",{\"1\":{\"1062\":1}}],[\"v或\",{\"1\":{\"1009\":1,\"1021\":2,\"1032\":1}}],[\"v调用\",{\"1\":{\"986\":1}}],[\"votefooter>\",{\"1\":{\"1161\":1,\"1176\":1,\"1185\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"votefooter\",{\"0\":{\"1162\":1,\"1177\":1,\"1186\":1},\"1\":{\"1161\":2,\"1162\":4,\"1176\":2,\"1177\":3,\"1185\":2,\"1186\":3,\"1320\":5,\"1321\":5,\"1323\":8,\"1324\":6}}],[\"votemain>\",{\"1\":{\"1161\":1,\"1176\":1,\"1185\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"votemain\",{\"0\":{\"1163\":1,\"1178\":1,\"1187\":1},\"1\":{\"1161\":2,\"1163\":2,\"1176\":2,\"1178\":2,\"1185\":2,\"1187\":2,\"1320\":5,\"1321\":5,\"1323\":8,\"1324\":8}}],[\"voteaction\",{\"1\":{\"1160\":6,\"1184\":7,\"1188\":3}}],[\"votereducer\",{\"1\":{\"1159\":4,\"1183\":5}}],[\"vote>\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"vote\",{\"0\":{\"1161\":1,\"1176\":1,\"1185\":1},\"1\":{\"1157\":2,\"1159\":7,\"1160\":3,\"1161\":8,\"1162\":3,\"1163\":1,\"1173\":2,\"1175\":2,\"1176\":4,\"1177\":2,\"1182\":2,\"1183\":7,\"1184\":3,\"1185\":5,\"1186\":2,\"1187\":1,\"1188\":2,\"1320\":4,\"1321\":4,\"1323\":5,\"1324\":5}}],[\"void\",{\"0\":{\"646\":1,\"1415\":1},\"1\":{\"646\":7,\"1342\":2,\"1355\":2,\"1378\":1,\"1379\":1,\"1386\":2,\"1389\":1,\"1390\":1,\"1392\":1,\"1400\":1,\"1415\":4,\"1466\":4,\"1467\":1,\"1468\":1,\"1469\":1,\"1571\":1}}],[\"void操作符\",{\"0\":{\"646\":1}}],[\"volume\",{\"1\":{\"340\":2}}],[\"volnode\",{\"1\":{\"338\":6}}],[\"vol\",{\"1\":{\"338\":2}}],[\"v2\",{\"1\":{\"595\":2}}],[\"v18\",{\"1\":{\"1236\":1}}],[\"v18以前\",{\"1\":{\"1236\":1}}],[\"v1\",{\"1\":{\"595\":2,\"1617\":1,\"1618\":1}}],[\"v8\",{\"0\":{\"1641\":1,\"1647\":1},\"1\":{\"589\":2,\"1641\":3,\"1648\":4,\"1649\":1,\"1650\":2}}],[\"v8引擎将结果返回给用户\",{\"1\":{\"378\":1}}],[\"v8引擎负责解析javascript脚本\",{\"1\":{\"378\":1}}],[\"vm实例\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"vm\",{\"0\":{\"1508\":1},\"1\":{\"1475\":2,\"1476\":1,\"1479\":6,\"1483\":1,\"1486\":21,\"1490\":2,\"1491\":10,\"1492\":1,\"1493\":9,\"1509\":4,\"1510\":1,\"1511\":2,\"1514\":4,\"1517\":3,\"1518\":1,\"1520\":1,\"1521\":2,\"1525\":9,\"1526\":6,\"1527\":9,\"1528\":3,\"1533\":25,\"1539\":4,\"1548\":8,\"1556\":4,\"1557\":3,\"1558\":5,\"1561\":5,\"1568\":3,\"1569\":5,\"1571\":10}}],[\"vms\",{\"1\":{\"1018\":2}}],[\"vmax\",{\"1\":{\"208\":1}}],[\"vmin\",{\"1\":{\"208\":1}}],[\"vh相对与视口的宽高\",{\"1\":{\"208\":1}}],[\"vh\",{\"0\":{\"208\":1},\"1\":{\"208\":5}}],[\"vw\",{\"0\":{\"208\":1},\"1\":{\"208\":10}}],[\"vitals\",{\"1\":{\"1332\":1}}],[\"vite\",{\"1\":{\"39\":5}}],[\"virtual\",{\"1\":{\"1152\":1}}],[\"vim\",{\"0\":{\"1068\":1},\"1\":{\"1054\":1,\"1056\":5,\"1058\":3}}],[\"vi编辑器\",{\"0\":{\"1053\":1}}],[\"visible\",{\"0\":{\"2682\":1},\"1\":{\"2562\":2}}],[\"visibility\",{\"1\":{\"21\":2,\"64\":2,\"226\":1}}],[\"visual\",{\"1\":{\"1054\":1}}],[\"visudo\",{\"0\":{\"1050\":1}}],[\"vi\",{\"0\":{\"1054\":1},\"1\":{\"986\":1,\"1054\":2,\"1056\":1,\"1067\":1,\"1137\":1}}],[\"vibtime\",{\"1\":{\"342\":2}}],[\"vibrate\",{\"1\":{\"342\":9}}],[\"vibration\",{\"0\":{\"342\":1},\"1\":{\"342\":3}}],[\"videostageel\",{\"1\":{\"339\":5}}],[\"video>\",{\"1\":{\"339\":1}}],[\"video\",{\"1\":{\"226\":1,\"339\":6,\"388\":1}}],[\"viewpage\",{\"1\":{\"1753\":8,\"1754\":5}}],[\"viewport插件进行单位转换比较方便\",{\"1\":{\"208\":1}}],[\"viewportunit\",{\"1\":{\"208\":2}}],[\"viewportheight\",{\"1\":{\"208\":2}}],[\"viewportwidth\",{\"1\":{\"208\":2}}],[\"viewport\",{\"0\":{\"201\":1},\"1\":{\"201\":2,\"202\":2,\"208\":3,\"1839\":1}}],[\"view3\",{\"1\":{\"411\":1}}],[\"view2\",{\"1\":{\"403\":2,\"411\":1}}],[\"view1\",{\"1\":{\"403\":2,\"411\":1}}],[\"view\",{\"0\":{\"2539\":1,\"2578\":1},\"1\":{\"118\":1,\"119\":1,\"127\":1,\"401\":2,\"403\":13,\"404\":1,\"406\":2,\"409\":2,\"410\":4,\"411\":4,\"2031\":1}}],[\"view>\",{\"1\":{\"82\":1,\"117\":1,\"118\":5,\"119\":5,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":8}}],[\"view><\",{\"1\":{\"82\":1}}],[\"views\",{\"1\":{\"82\":2,\"1157\":1,\"1175\":1,\"1182\":1,\"1315\":2}}],[\"v\",{\"1\":{\"21\":2,\"64\":2,\"83\":2,\"87\":1,\"89\":1,\"94\":1,\"118\":1,\"119\":1,\"127\":1,\"267\":1,\"983\":1,\"989\":1,\"992\":1,\"998\":1,\"1003\":2,\"1012\":1,\"1015\":1,\"1016\":2,\"1018\":2,\"1025\":6,\"1032\":1,\"1033\":2,\"1035\":1,\"1038\":1,\"1144\":1,\"1363\":2,\"1436\":2,\"1510\":1,\"1521\":1,\"1527\":5,\"1549\":2,\"1551\":5,\"1606\":1}}],[\"validate\",{\"1\":{\"1789\":2}}],[\"validator\",{\"1\":{\"1789\":6}}],[\"valid\",{\"1\":{\"334\":1,\"2754\":1}}],[\"val\",{\"1\":{\"239\":3,\"464\":2,\"582\":9,\"1527\":5,\"1533\":2}}],[\"value数据库\",{\"1\":{\"2061\":1}}],[\"value8\",{\"1\":{\"1418\":1}}],[\"value7\",{\"1\":{\"1418\":1}}],[\"value6\",{\"1\":{\"1418\":1}}],[\"value5\",{\"1\":{\"1418\":1}}],[\"value4\",{\"1\":{\"1418\":1}}],[\"value3\",{\"1\":{\"1418\":1}}],[\"valueprop\",{\"1\":{\"1218\":1}}],[\"valueof\",{\"0\":{\"543\":1,\"688\":1},\"1\":{\"542\":1,\"543\":2,\"686\":1,\"688\":2,\"806\":12,\"828\":1}}],[\"value+\",{\"1\":{\"343\":1}}],[\"value2\",{\"1\":{\"313\":3,\"698\":3,\"1418\":1}}],[\"value1\",{\"1\":{\"313\":3,\"698\":3,\"1418\":1}}],[\"values\",{\"0\":{\"295\":1,\"297\":1,\"879\":1,\"882\":1,\"2690\":1},\"1\":{\"295\":3,\"297\":2,\"584\":4,\"710\":3,\"879\":5,\"882\":2,\"2690\":1,\"2751\":1,\"2754\":1}}],[\"value=this\",{\"1\":{\"239\":1}}],[\"value=\",{\"1\":{\"83\":3,\"338\":2,\"1167\":1,\"1168\":1,\"1175\":1,\"1182\":1,\"1212\":1,\"1218\":1,\"1220\":1,\"1222\":2,\"1223\":2,\"1227\":2,\"1229\":1,\"1235\":1,\"1265\":1,\"1321\":1,\"1324\":1}}],[\"value\",{\"0\":{\"1223\":1,\"1229\":1,\"2841\":1},\"1\":{\"16\":10,\"59\":10,\"83\":14,\"109\":2,\"118\":1,\"119\":3,\"121\":1,\"122\":1,\"123\":2,\"125\":2,\"126\":3,\"127\":19,\"128\":1,\"239\":3,\"286\":5,\"287\":2,\"297\":1,\"320\":2,\"323\":1,\"328\":7,\"338\":7,\"340\":4,\"342\":1,\"343\":3,\"433\":3,\"490\":1,\"495\":1,\"566\":1,\"567\":3,\"571\":1,\"576\":1,\"580\":14,\"581\":1,\"584\":15,\"587\":5,\"588\":6,\"590\":3,\"591\":1,\"636\":1,\"656\":1,\"678\":5,\"684\":2,\"803\":2,\"849\":2,\"874\":6,\"884\":1,\"885\":1,\"1167\":9,\"1168\":4,\"1193\":1,\"1195\":1,\"1212\":1,\"1223\":1,\"1225\":2,\"1229\":2,\"1235\":1,\"1251\":1,\"1265\":1,\"1283\":11,\"1285\":7,\"1301\":2,\"1363\":1,\"1369\":1,\"1377\":1,\"1387\":2,\"1417\":6,\"1418\":28,\"1436\":3,\"1437\":2,\"1468\":2,\"1493\":3,\"1534\":13,\"1535\":9,\"1550\":1,\"1551\":5,\"1560\":5,\"1563\":11,\"1570\":1,\"1571\":4,\"1789\":8,\"1832\":2,\"1839\":3,\"2744\":2,\"2760\":5,\"2795\":1}}],[\"varying\",{\"1\":{\"2742\":1,\"2795\":1}}],[\"varyings\",{\"1\":{\"2742\":3,\"2744\":1}}],[\"variable\",{\"1\":{\"874\":2,\"1448\":1,\"1653\":2}}],[\"variables\",{\"1\":{\"21\":1,\"64\":1}}],[\"var\",{\"1\":{\"19\":2,\"62\":2,\"123\":6,\"125\":1,\"127\":7,\"128\":1,\"206\":1,\"231\":1,\"232\":1,\"237\":2,\"246\":1,\"248\":4,\"249\":1,\"250\":6,\"253\":1,\"261\":3,\"265\":1,\"266\":2,\"267\":2,\"274\":4,\"277\":1,\"286\":1,\"338\":4,\"340\":4,\"343\":2,\"353\":3,\"354\":4,\"355\":1,\"358\":2,\"359\":1,\"360\":2,\"363\":1,\"364\":2,\"365\":2,\"436\":2,\"437\":1,\"445\":7,\"455\":1,\"464\":1,\"467\":1,\"478\":2,\"481\":1,\"482\":1,\"495\":2,\"499\":1,\"500\":8,\"503\":1,\"505\":2,\"506\":1,\"507\":4,\"508\":2,\"509\":1,\"511\":2,\"587\":1,\"588\":1,\"596\":1,\"657\":1,\"658\":3,\"662\":6,\"678\":1,\"713\":1,\"718\":2,\"719\":2,\"724\":1,\"725\":2,\"727\":2,\"728\":1,\"731\":1,\"743\":1,\"748\":1,\"764\":3,\"815\":1,\"819\":2,\"864\":1,\"866\":1,\"867\":1,\"881\":4,\"883\":1,\"885\":1,\"895\":6,\"896\":2,\"897\":1,\"898\":2,\"900\":2,\"901\":7,\"902\":7,\"903\":3,\"913\":1,\"921\":2,\"1007\":4,\"1146\":1,\"1153\":3,\"1472\":2,\"1653\":5,\"1664\":2,\"1671\":2,\"1740\":4,\"1743\":6,\"1773\":2,\"1777\":4,\"1817\":1,\"1829\":4,\"1832\":2}}],[\"vue组件data推荐使用函数\",{\"1\":{\"1533\":1}}],[\"vue的时候传入的属性\",{\"1\":{\"1525\":1,\"1533\":1,\"1548\":1}}],[\"vue的时候传入的属性和全局的vue\",{\"1\":{\"1486\":1}}],[\"vue就是一个构造函数\",{\"1\":{\"1484\":1,\"1533\":1}}],[\"vue用了双指针的方式\",{\"1\":{\"1476\":1}}],[\"vue实例化\",{\"1\":{\"1475\":1,\"1483\":1,\"1490\":1,\"1539\":1,\"1547\":1,\"1556\":1,\"1568\":1}}],[\"vuex\",{\"0\":{\"83\":1,\"1765\":1},\"1\":{\"83\":6,\"1765\":2}}],[\"vuerouter\",{\"1\":{\"82\":3}}],[\"vue2\",{\"1\":{\"47\":1,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1},\"2\":{\"85\":1}}],[\"vue2+webpack基础模板\",{\"0\":{\"44\":1}}],[\"vueindentscriptandstyle\",{\"1\":{\"20\":1,\"63\":1}}],[\"vue文件脚本和样式标签缩进\",{\"1\":{\"20\":1,\"63\":1}}],[\"vuejs\",{\"1\":{\"19\":1,\"62\":1}}],[\"vue3\",{\"1\":{\"11\":1,\"19\":1,\"39\":1,\"41\":1,\"54\":1},\"2\":{\"43\":1}}],[\"vue3+vite基础模板\",{\"0\":{\"1\":1}}],[\"vue\",{\"0\":{\"82\":1},\"1\":{\"3\":1,\"19\":13,\"22\":3,\"27\":1,\"39\":8,\"46\":1,\"47\":1,\"62\":11,\"63\":2,\"65\":3,\"70\":1,\"80\":5,\"82\":9,\"83\":4,\"88\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":1,\"1475\":2,\"1479\":2,\"1483\":2,\"1484\":7,\"1486\":1,\"1490\":1,\"1492\":10,\"1501\":1,\"1502\":4,\"1503\":2,\"1504\":3,\"1505\":9,\"1507\":4,\"1514\":2,\"1517\":3,\"1518\":1,\"1519\":1,\"1520\":2,\"1521\":1,\"1525\":3,\"1527\":9,\"1528\":7,\"1533\":11,\"1539\":1,\"1543\":8,\"1547\":1,\"1548\":3,\"1556\":1,\"1557\":1,\"1568\":1,\"1765\":2,\"1766\":2},\"2\":{\"194\":1,\"197\":1,\"1481\":1,\"1488\":1,\"1495\":1,\"1522\":1,\"1530\":1,\"1537\":1,\"1545\":1,\"1554\":1,\"1566\":1,\"1573\":1}}],[\"=<>`\",{\"1\":{\"1550\":1}}],[\"=表示唯一设定权限\",{\"1\":{\"1038\":1}}],[\"=control\",{\"1\":{\"1003\":1}}],[\"=输出当前行的行号\",{\"1\":{\"986\":1}}],[\"=$\",{\"1\":{\"859\":1}}],[\"=0\",{\"1\":{\"727\":1}}],[\"=this\",{\"1\":{\"356\":1,\"357\":1}}],[\"=e\",{\"1\":{\"343\":1}}],[\"=>void>\",{\"1\":{\"1382\":1}}],[\"=>void\",{\"1\":{\"1379\":1}}],[\"=>\",{\"0\":{\"782\":1,\"783\":1,\"784\":1,\"785\":1,\"786\":1,\"787\":1,\"790\":1,\"791\":1,\"792\":1,\"793\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1},\"1\":{\"20\":1,\"39\":1,\"63\":1,\"80\":1,\"82\":3,\"83\":2,\"87\":1,\"88\":1,\"123\":1,\"127\":1,\"128\":38,\"191\":1,\"208\":1,\"240\":3,\"259\":1,\"260\":5,\"261\":2,\"271\":2,\"272\":2,\"284\":2,\"285\":1,\"286\":1,\"299\":1,\"300\":5,\"312\":4,\"328\":4,\"333\":1,\"334\":6,\"341\":4,\"343\":1,\"344\":1,\"345\":4,\"362\":3,\"376\":3,\"381\":3,\"382\":2,\"391\":1,\"392\":2,\"395\":7,\"413\":1,\"414\":2,\"418\":1,\"419\":3,\"420\":2,\"433\":7,\"436\":1,\"470\":1,\"471\":1,\"558\":1,\"560\":1,\"565\":9,\"566\":1,\"568\":4,\"569\":15,\"571\":3,\"572\":2,\"573\":6,\"574\":9,\"575\":6,\"578\":7,\"580\":4,\"581\":3,\"583\":1,\"584\":40,\"590\":10,\"591\":5,\"592\":1,\"595\":1,\"596\":5,\"597\":5,\"635\":2,\"678\":1,\"679\":1,\"698\":2,\"705\":2,\"706\":1,\"709\":2,\"712\":1,\"713\":3,\"714\":1,\"715\":1,\"716\":1,\"731\":2,\"732\":3,\"737\":1,\"745\":1,\"772\":2,\"819\":3,\"821\":3,\"822\":4,\"823\":4,\"849\":1,\"859\":5,\"864\":2,\"865\":6,\"872\":1,\"873\":3,\"875\":1,\"876\":2,\"877\":3,\"878\":2,\"884\":1,\"891\":1,\"902\":1,\"1161\":2,\"1162\":3,\"1163\":1,\"1167\":6,\"1168\":14,\"1176\":3,\"1177\":2,\"1178\":1,\"1185\":3,\"1186\":2,\"1187\":1,\"1188\":4,\"1194\":1,\"1195\":1,\"1196\":3,\"1197\":5,\"1200\":1,\"1204\":3,\"1210\":9,\"1211\":5,\"1212\":7,\"1222\":2,\"1227\":1,\"1229\":2,\"1235\":1,\"1243\":2,\"1244\":5,\"1245\":2,\"1246\":3,\"1247\":3,\"1248\":3,\"1249\":4,\"1250\":2,\"1251\":2,\"1255\":2,\"1256\":5,\"1265\":8,\"1267\":4,\"1268\":2,\"1269\":2,\"1273\":2,\"1274\":6,\"1281\":1,\"1282\":3,\"1283\":1,\"1288\":1,\"1289\":3,\"1290\":3,\"1297\":1,\"1299\":1,\"1300\":3,\"1303\":2,\"1309\":4,\"1311\":7,\"1312\":1,\"1315\":1,\"1320\":1,\"1321\":2,\"1323\":2,\"1324\":2,\"1342\":1,\"1355\":1,\"1362\":1,\"1365\":1,\"1368\":1,\"1370\":2,\"1377\":3,\"1378\":1,\"1379\":1,\"1382\":2,\"1421\":1,\"1443\":2,\"1458\":1,\"1459\":1,\"1466\":1,\"1467\":5,\"1468\":1,\"1469\":1,\"1475\":1,\"1476\":1,\"1478\":2,\"1485\":1,\"1486\":2,\"1490\":1,\"1491\":1,\"1493\":1,\"1528\":1,\"1533\":1,\"1535\":1,\"1539\":1,\"1542\":4,\"1551\":2,\"1556\":1,\"1558\":1,\"1562\":1,\"1564\":1,\"1568\":1,\"1569\":1,\"1570\":2,\"1571\":1,\"1758\":2,\"1789\":4,\"1806\":4,\"1814\":2,\"1839\":2,\"2462\":3}}],[\"==>\",{\"1\":{\"802\":3}}],[\"==nan为true\",{\"1\":{\"656\":1}}],[\"==\",{\"0\":{\"777\":1},\"1\":{\"19\":1,\"62\":1,\"94\":1,\"123\":1,\"127\":1,\"128\":4,\"320\":1,\"322\":3,\"358\":1,\"359\":1,\"559\":1,\"584\":2,\"610\":2,\"627\":11,\"644\":3,\"657\":1,\"746\":1,\"760\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":2,\"772\":3,\"774\":1,\"777\":7,\"802\":6,\"805\":3,\"806\":1,\"807\":2,\"817\":2,\"864\":2,\"866\":2,\"1210\":2,\"1222\":1,\"1285\":1,\"1436\":1,\"1476\":4,\"1477\":2,\"1478\":5,\"1493\":3,\"1505\":1,\"1527\":1,\"1542\":3,\"1549\":1,\"1551\":1,\"1569\":1,\"1570\":1,\"1571\":2,\"1806\":1,\"1814\":1}}],[\"===\",{\"1\":{\"19\":1,\"62\":1,\"83\":1,\"109\":1,\"123\":1,\"127\":1,\"128\":2,\"237\":1,\"254\":2,\"268\":1,\"289\":1,\"320\":6,\"343\":1,\"359\":2,\"465\":2,\"481\":3,\"482\":1,\"495\":2,\"559\":1,\"580\":7,\"582\":5,\"584\":9,\"590\":4,\"607\":2,\"627\":2,\"641\":1,\"653\":1,\"658\":5,\"674\":1,\"679\":2,\"681\":4,\"699\":1,\"708\":1,\"754\":1,\"758\":1,\"759\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":2,\"768\":1,\"772\":3,\"773\":2,\"774\":1,\"860\":3,\"1222\":1,\"1227\":1,\"1286\":1,\"1311\":6,\"1315\":2,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1,\"1416\":2,\"1426\":2,\"1436\":3,\"1438\":2,\"1476\":1,\"1491\":2,\"1527\":1,\"1528\":3,\"1533\":1,\"1534\":2,\"1541\":1,\"1550\":1,\"1551\":1,\"1557\":1,\"1560\":1,\"1561\":1,\"1563\":1,\"1754\":1,\"1772\":1,\"1773\":1,\"1774\":1,\"1789\":1,\"1798\":1,\"1839\":2}}],[\"=\",{\"0\":{\"777\":1},\"1\":{\"16\":1,\"19\":1,\"20\":1,\"21\":1,\"23\":9,\"27\":1,\"30\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"66\":9,\"70\":1,\"73\":1,\"83\":1,\"87\":5,\"88\":2,\"94\":9,\"109\":13,\"110\":1,\"111\":1,\"118\":1,\"119\":3,\"123\":10,\"125\":4,\"127\":23,\"128\":55,\"191\":2,\"192\":1,\"193\":1,\"206\":3,\"207\":1,\"226\":1,\"231\":2,\"232\":2,\"234\":6,\"237\":2,\"239\":10,\"240\":2,\"248\":8,\"249\":2,\"250\":6,\"252\":8,\"253\":8,\"254\":5,\"255\":2,\"256\":2,\"257\":5,\"258\":2,\"259\":1,\"260\":9,\"261\":4,\"265\":1,\"266\":2,\"267\":2,\"268\":3,\"269\":3,\"270\":2,\"271\":8,\"272\":4,\"274\":4,\"277\":1,\"279\":1,\"280\":1,\"281\":1,\"284\":4,\"285\":2,\"286\":1,\"287\":1,\"295\":1,\"297\":1,\"299\":1,\"300\":2,\"302\":2,\"303\":2,\"304\":3,\"305\":4,\"308\":1,\"309\":1,\"313\":2,\"314\":1,\"315\":1,\"316\":1,\"320\":6,\"321\":5,\"322\":2,\"323\":3,\"326\":2,\"327\":4,\"328\":2,\"329\":5,\"331\":1,\"332\":2,\"334\":13,\"338\":10,\"339\":2,\"340\":25,\"341\":8,\"342\":3,\"343\":13,\"344\":1,\"345\":2,\"353\":3,\"354\":9,\"355\":8,\"356\":3,\"357\":3,\"358\":4,\"359\":11,\"360\":6,\"362\":2,\"363\":1,\"364\":2,\"365\":2,\"388\":5,\"389\":5,\"391\":2,\"392\":4,\"394\":1,\"395\":17,\"399\":1,\"400\":1,\"401\":2,\"403\":12,\"404\":2,\"405\":2,\"406\":1,\"409\":2,\"410\":2,\"411\":5,\"413\":5,\"414\":9,\"416\":1,\"417\":1,\"418\":10,\"419\":3,\"420\":2,\"421\":1,\"428\":2,\"429\":1,\"430\":4,\"431\":3,\"432\":1,\"433\":9,\"434\":4,\"436\":6,\"437\":3,\"445\":7,\"452\":5,\"453\":1,\"455\":12,\"464\":3,\"465\":2,\"467\":3,\"469\":4,\"470\":1,\"471\":2,\"472\":4,\"478\":9,\"481\":1,\"482\":3,\"484\":10,\"486\":7,\"488\":9,\"490\":4,\"492\":6,\"494\":9,\"495\":10,\"500\":6,\"503\":1,\"505\":2,\"506\":1,\"507\":5,\"508\":5,\"511\":5,\"515\":1,\"517\":2,\"518\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":1,\"524\":1,\"525\":1,\"526\":3,\"528\":1,\"529\":1,\"530\":1,\"532\":1,\"533\":3,\"535\":1,\"536\":1,\"537\":1,\"539\":1,\"540\":1,\"541\":1,\"543\":1,\"544\":1,\"559\":4,\"560\":2,\"565\":1,\"566\":1,\"569\":4,\"571\":1,\"573\":3,\"574\":3,\"576\":3,\"577\":3,\"578\":2,\"580\":8,\"581\":5,\"582\":6,\"583\":3,\"584\":24,\"587\":3,\"588\":1,\"590\":13,\"591\":6,\"592\":2,\"594\":2,\"595\":3,\"596\":7,\"597\":2,\"602\":5,\"604\":3,\"605\":2,\"607\":5,\"608\":5,\"609\":4,\"610\":5,\"611\":3,\"613\":1,\"616\":3,\"621\":9,\"625\":1,\"627\":2,\"631\":5,\"632\":2,\"633\":3,\"634\":1,\"635\":5,\"636\":5,\"637\":1,\"638\":5,\"639\":2,\"640\":3,\"641\":3,\"643\":5,\"644\":2,\"645\":5,\"646\":6,\"652\":3,\"653\":8,\"654\":1,\"657\":4,\"658\":4,\"662\":6,\"674\":3,\"676\":1,\"677\":4,\"678\":1,\"679\":4,\"680\":4,\"681\":1,\"684\":1,\"685\":1,\"687\":1,\"688\":1,\"689\":2,\"690\":1,\"692\":2,\"693\":2,\"695\":2,\"696\":2,\"698\":9,\"699\":2,\"701\":2,\"702\":1,\"703\":3,\"705\":4,\"706\":2,\"708\":1,\"709\":1,\"710\":1,\"712\":3,\"713\":3,\"714\":2,\"715\":1,\"716\":1,\"718\":1,\"719\":1,\"724\":2,\"725\":2,\"727\":2,\"728\":1,\"731\":4,\"732\":2,\"734\":1,\"735\":4,\"736\":1,\"737\":2,\"738\":1,\"739\":1,\"740\":4,\"742\":1,\"743\":5,\"745\":2,\"746\":1,\"748\":4,\"749\":6,\"754\":3,\"755\":3,\"756\":5,\"758\":1,\"759\":1,\"760\":2,\"762\":4,\"763\":5,\"764\":3,\"765\":3,\"766\":10,\"767\":14,\"768\":4,\"772\":1,\"774\":1,\"803\":6,\"805\":6,\"806\":7,\"807\":3,\"815\":3,\"817\":3,\"819\":3,\"821\":1,\"822\":2,\"823\":2,\"828\":9,\"831\":15,\"836\":2,\"838\":13,\"840\":3,\"841\":2,\"842\":2,\"843\":22,\"844\":4,\"847\":1,\"848\":1,\"849\":2,\"850\":8,\"851\":3,\"859\":9,\"860\":8,\"861\":7,\"862\":9,\"863\":8,\"864\":14,\"865\":8,\"866\":6,\"867\":4,\"872\":3,\"873\":3,\"874\":1,\"875\":2,\"876\":2,\"877\":6,\"878\":2,\"879\":4,\"881\":1,\"882\":1,\"883\":2,\"884\":2,\"885\":1,\"888\":3,\"889\":1,\"890\":1,\"891\":1,\"895\":5,\"896\":3,\"897\":1,\"898\":5,\"900\":2,\"901\":7,\"902\":12,\"903\":4,\"1038\":1,\"1039\":1,\"1110\":2,\"1152\":1,\"1153\":1,\"1157\":1,\"1158\":1,\"1159\":6,\"1160\":2,\"1161\":2,\"1162\":2,\"1163\":1,\"1167\":9,\"1168\":15,\"1173\":5,\"1174\":1,\"1175\":1,\"1176\":5,\"1177\":2,\"1178\":4,\"1180\":1,\"1181\":1,\"1182\":1,\"1183\":6,\"1184\":2,\"1185\":5,\"1186\":2,\"1187\":4,\"1188\":4,\"1196\":2,\"1197\":4,\"1200\":2,\"1204\":2,\"1210\":4,\"1211\":3,\"1212\":7,\"1217\":1,\"1219\":1,\"1220\":2,\"1222\":4,\"1227\":4,\"1229\":3,\"1234\":1,\"1235\":6,\"1236\":2,\"1243\":2,\"1244\":3,\"1246\":1,\"1247\":1,\"1248\":2,\"1249\":1,\"1250\":1,\"1251\":3,\"1255\":4,\"1256\":11,\"1264\":1,\"1265\":7,\"1267\":6,\"1268\":1,\"1269\":2,\"1273\":3,\"1274\":4,\"1279\":1,\"1281\":3,\"1282\":2,\"1283\":3,\"1285\":2,\"1286\":3,\"1287\":3,\"1288\":2,\"1289\":9,\"1290\":3,\"1296\":1,\"1297\":2,\"1299\":1,\"1300\":1,\"1301\":1,\"1303\":2,\"1307\":1,\"1311\":8,\"1312\":2,\"1315\":13,\"1320\":13,\"1321\":11,\"1323\":16,\"1324\":11,\"1335\":2,\"1338\":3,\"1339\":5,\"1340\":3,\"1342\":2,\"1343\":7,\"1344\":1,\"1347\":2,\"1348\":1,\"1349\":1,\"1353\":2,\"1354\":2,\"1362\":3,\"1365\":5,\"1366\":10,\"1367\":2,\"1368\":1,\"1370\":2,\"1371\":6,\"1372\":8,\"1373\":2,\"1374\":3,\"1375\":3,\"1376\":3,\"1377\":3,\"1378\":4,\"1379\":3,\"1380\":3,\"1381\":3,\"1382\":5,\"1386\":3,\"1387\":4,\"1388\":3,\"1389\":5,\"1390\":5,\"1391\":2,\"1392\":2,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":2,\"1401\":1,\"1402\":5,\"1403\":1,\"1405\":4,\"1407\":3,\"1408\":5,\"1409\":3,\"1410\":3,\"1411\":4,\"1412\":2,\"1413\":2,\"1414\":2,\"1415\":1,\"1416\":3,\"1417\":7,\"1418\":18,\"1421\":1,\"1423\":2,\"1424\":3,\"1425\":1,\"1426\":2,\"1427\":7,\"1428\":3,\"1430\":2,\"1431\":22,\"1435\":1,\"1437\":1,\"1442\":13,\"1443\":4,\"1445\":2,\"1446\":2,\"1448\":2,\"1458\":3,\"1459\":2,\"1460\":3,\"1466\":5,\"1467\":9,\"1468\":7,\"1469\":3,\"1475\":2,\"1476\":13,\"1477\":8,\"1478\":29,\"1479\":6,\"1483\":1,\"1484\":3,\"1485\":9,\"1486\":7,\"1490\":2,\"1491\":7,\"1492\":3,\"1493\":32,\"1500\":1,\"1502\":2,\"1525\":11,\"1526\":1,\"1527\":8,\"1528\":13,\"1533\":8,\"1534\":5,\"1535\":10,\"1539\":4,\"1541\":7,\"1542\":15,\"1543\":1,\"1548\":11,\"1549\":3,\"1550\":28,\"1551\":18,\"1552\":3,\"1556\":2,\"1557\":7,\"1558\":1,\"1559\":4,\"1560\":2,\"1561\":10,\"1562\":7,\"1563\":6,\"1564\":5,\"1568\":2,\"1569\":6,\"1570\":5,\"1571\":36,\"1646\":4,\"1653\":12,\"1719\":2,\"1740\":7,\"1743\":11,\"1753\":5,\"1754\":8,\"1755\":4,\"1758\":1,\"1766\":1,\"1772\":4,\"1773\":4,\"1774\":3,\"1777\":6,\"1789\":7,\"1798\":5,\"1806\":6,\"1814\":4,\"1817\":2,\"1820\":6,\"1823\":19,\"1826\":4,\"1829\":8,\"1832\":4,\"1839\":10,\"1966\":1,\"2072\":1,\"2133\":2,\"2142\":1,\"2278\":5,\"2359\":3,\"2371\":3,\"2375\":3,\"2379\":3,\"2383\":3,\"2387\":3,\"2391\":3,\"2395\":3,\"2399\":3,\"2403\":6,\"2407\":7,\"2411\":5,\"2430\":3,\"2434\":3,\"2438\":10,\"2442\":6,\"2446\":5,\"2450\":3,\"2455\":4,\"2462\":11,\"2528\":1,\"2562\":6,\"2566\":1,\"2749\":1,\"2751\":1,\"2800\":1,\"2805\":1,\"2864\":1,\"2868\":1,\"2872\":5,\"2876\":1,\"2880\":1,\"2884\":8}}],[\"在内部用于处理场景渲染对象的排序\",{\"1\":{\"2804\":1}}],[\"在内部用于使用pointlight来实现阴影映射\",{\"1\":{\"2597\":1}}],[\"在世界空间中被指定为three\",{\"1\":{\"2796\":1}}],[\"在世界空间中指定为three\",{\"1\":{\"2647\":1}}],[\"在所有情况下\",{\"1\":{\"2788\":1}}],[\"在所有同源窗口中都是共享的\",{\"1\":{\"1666\":1}}],[\"在其值更改时自动刷新\",{\"1\":{\"2744\":1}}],[\"在其他同步脚本执行后\",{\"1\":{\"1707\":1}}],[\"在透明度比较高的时候\",{\"1\":{\"2737\":1}}],[\"在实践中\",{\"1\":{\"2717\":1}}],[\"在实际开发中\",{\"1\":{\"1370\":1}}],[\"在实际的场景中\",{\"1\":{\"436\":1}}],[\"在0\",{\"1\":{\"2667\":1}}],[\"在模板操作constants\",{\"1\":{\"2663\":1}}],[\"在模板操作\",{\"1\":{\"2661\":1,\"2662\":1}}],[\"在模板函数\",{\"1\":{\"2658\":1}}],[\"在模块中可用\",{\"1\":{\"467\":1}}],[\"在模块内不会创建名为\",{\"1\":{\"467\":1}}],[\"在绘制2d叠加时\",{\"1\":{\"2653\":1}}],[\"在meshstandardmaterial或meshphysicalmaterial上使用此材质时\",{\"1\":{\"2613\":1}}],[\"在任何参数被改变以后必须被调用\",{\"1\":{\"2544\":1,\"2588\":1}}],[\"在任务管理器中查看每个选项卡的\",{\"1\":{\"425\":1}}],[\"在较大的viewing\",{\"1\":{\"2542\":1}}],[\"在三维空间中计算出鼠标移过了什么物体\",{\"1\":{\"2496\":1}}],[\"在加载期间覆写资源\",{\"1\":{\"2462\":1}}],[\"在加载模块时\",{\"1\":{\"464\":1}}],[\"在曲线上的点\",{\"1\":{\"2341\":1}}],[\"在类的内部\",{\"1\":{\"2296\":1}}],[\"在类的原型继承中\",{\"1\":{\"657\":1}}],[\"在停止状态下\",{\"1\":{\"2265\":1}}],[\"在关系模式r中\",{\"1\":{\"2250\":1}}],[\"在为用户提供方便的同时\",{\"1\":{\"2199\":1}}],[\"在智能化\",{\"1\":{\"2178\":1}}],[\"在安全攸关系统中的嵌入式软件\",{\"1\":{\"2177\":1}}],[\"在安卓手机中\",{\"1\":{\"339\":1}}],[\"在web服务器测试中\",{\"1\":{\"2171\":1}}],[\"在wrap元素中添加\",{\"1\":{\"151\":1}}],[\"在计算机的存储系统体系中\",{\"1\":{\"2141\":1}}],[\"在计算机中\",{\"1\":{\"609\":1}}],[\"在什么地方适合阻止未授权访问的过程\",{\"1\":{\"2126\":1}}],[\"在意外或错误使用的情况下维持软件系统的功能特性的基本能力\",{\"1\":{\"2089\":1}}],[\"在固定的一个缓存时间的基础上+随机一个时间作为缓存失效时间\",{\"1\":{\"2071\":1}}],[\"在atam基础上建立的\",{\"1\":{\"2011\":1}}],[\"在a声明之前使用typeof关键字报错了\",{\"1\":{\"511\":1}}],[\"在系统开发之前\",{\"1\":{\"2011\":1}}],[\"在saam发展而来\",{\"1\":{\"2011\":1}}],[\"在setcallback返回时被删除\",{\"1\":{\"430\":1}}],[\"在1秒内完成用户的交易请求\",{\"1\":{\"2010\":1}}],[\"在功能分解中\",{\"1\":{\"1974\":1}}],[\"在真实环境下\",{\"1\":{\"1940\":1}}],[\"在应用系列内保持一致性\",{\"1\":{\"1928\":1}}],[\"在应用涉及很多细粒度的交互\",{\"1\":{\"1212\":1}}],[\"在生产工艺设计\",{\"1\":{\"1873\":1}}],[\"在生成器内部\",{\"1\":{\"589\":1}}],[\"在需求增加时可以很方便的扩充新的责任\",{\"1\":{\"1839\":1}}],[\"在责任链模式中\",{\"1\":{\"1835\":1}}],[\"在观察者模式中\",{\"1\":{\"1802\":1}}],[\"在图片加载时可以使用虚拟代理\",{\"1\":{\"1794\":1}}],[\"在图中也可以发现\",{\"1\":{\"374\":1}}],[\"在通过抽象工厂让子类继承父类\",{\"1\":{\"1755\":1}}],[\"在抽象工厂中\",{\"1\":{\"1755\":1}}],[\"在抽象工厂模式中\",{\"1\":{\"1755\":1}}],[\"在工厂模式中\",{\"1\":{\"1747\":1}}],[\"在工作目录下的bbb目录中\",{\"1\":{\"979\":1}}],[\"在工作目录下的runoob2目录中\",{\"1\":{\"976\":1}}],[\"在工作目录下\",{\"1\":{\"976\":1}}],[\"在确认报文段中syn=1\",{\"1\":{\"1726\":1}}],[\"在确实是否相等\",{\"1\":{\"627\":1}}],[\"在开始发送的时候设置cwnd\",{\"1\":{\"1719\":1}}],[\"在开发时\",{\"1\":{\"622\":1}}],[\"在开发中可能会碰到这样的需求\",{\"1\":{\"569\":1}}],[\"在开发过程中\",{\"1\":{\"322\":1,\"503\":1,\"644\":1}}],[\"在达到一定次数还没有成功时放弃并发送一个复位信号\",{\"1\":{\"1717\":1}}],[\"在线视频\",{\"1\":{\"1715\":1}}],[\"在线帮助\",{\"1\":{\"930\":1,\"970\":1,\"1018\":1,\"1021\":1,\"1032\":1}}],[\"在添加首部后就向下交付p层\",{\"1\":{\"1712\":1}}],[\"在接收端有以下⼏种常⻅的情况\",{\"1\":{\"1730\":1}}],[\"在接收端\",{\"1\":{\"1712\":1}}],[\"在发送请求前添加统一的请求头或记录日志\",{\"1\":{\"1794\":1}}],[\"在发送端\",{\"1\":{\"1712\":1}}],[\"在发送数据时\",{\"1\":{\"1688\":1}}],[\"在os模型中\",{\"1\":{\"1712\":1}}],[\"在网络冗余设计中\",{\"1\":{\"2212\":1}}],[\"在网络中它与tcp协议一样用于处理数据包\",{\"1\":{\"1712\":1}}],[\"在网站登录中\",{\"1\":{\"1755\":1}}],[\"在网页中\",{\"1\":{\"413\":1}}],[\"在匹配一个节点对应的\",{\"1\":{\"1706\":1}}],[\"在建立连接前\",{\"1\":{\"1690\":1}}],[\"在前端开发中\",{\"1\":{\"1794\":1,\"1802\":2}}],[\"在前端面试中也常被问到\",{\"1\":{\"499\":1}}],[\"在前面的步骤我们已经得到服务器的\",{\"1\":{\"1689\":1}}],[\"在前面所有步骤没有缓存的情况下\",{\"1\":{\"1687\":1}}],[\"在indexeddb大部分操作并不是我们常用的调用方法\",{\"1\":{\"1671\":1}}],[\"在页面关闭之前不会被释放\",{\"1\":{\"1653\":1}}],[\"在脚本中我们将对象\",{\"1\":{\"1650\":1}}],[\"在介绍并行之前\",{\"1\":{\"1649\":1}}],[\"在运行垃圾回收的频率上有所差异\",{\"1\":{\"1646\":1}}],[\"在历史提交中可能会有很多次合并的提交记录\",{\"1\":{\"1628\":1}}],[\"在创建对象时\",{\"1\":{\"1747\":1}}],[\"在创建标签时\",{\"1\":{\"1618\":1}}],[\"在创建执行上下文阶段\",{\"1\":{\"506\":1}}],[\"在删除分支之前\",{\"1\":{\"1595\":1}}],[\"在将分支推送到远程仓库之前\",{\"1\":{\"1594\":1}}],[\"在tokens里面放入普通文本\",{\"1\":{\"1551\":1}}],[\"在更新的时候\",{\"1\":{\"1476\":1}}],[\"在控制台会输出以下结果\",{\"1\":{\"1467\":1}}],[\"在控制台中执行下述代码\",{\"1\":{\"724\":1}}],[\"在表达式和声明上有隐含的\",{\"1\":{\"1454\":1}}],[\"在表达式中\",{\"1\":{\"802\":1}}],[\"在严格模式下\",{\"1\":{\"1431\":2}}],[\"在示例中的第\",{\"1\":{\"1430\":1}}],[\"在条件类型语句中\",{\"1\":{\"1368\":1}}],[\"在以后的推送或者拉取时就可以简化命令为\",{\"1\":{\"1610\":1}}],[\"在以上代码中\",{\"1\":{\"1366\":1,\"1372\":1}}],[\"在以下示例中\",{\"1\":{\"433\":1}}],[\"在以下场景中将非常有用\",{\"1\":{\"334\":1}}],[\"在项目根目录下\",{\"1\":{\"1357\":1}}],[\"在默认情况下\",{\"1\":{\"1353\":1}}],[\"在大多数属性发生改变之后\",{\"1\":{\"2531\":1,\"2569\":1}}],[\"在大多数的情况下使用接口类型和类型别名的效果等价\",{\"1\":{\"1341\":1}}],[\"在大部分情况下\",{\"1\":{\"1212\":1}}],[\"在面向对象语言中\",{\"1\":{\"1338\":1,\"1386\":1}}],[\"在多次渲染中可能使用异步和优化技术\",{\"1\":{\"1285\":1}}],[\"在多行元素的内容之前和之后需要换行符\",{\"1\":{\"19\":1,\"62\":1}}],[\"在渲染期间读\",{\"1\":{\"1285\":1}}],[\"在渲染期间修改\",{\"1\":{\"1285\":1}}],[\"在渲染前接收到多次不同的值时\",{\"1\":{\"1236\":1}}],[\"在服务器端渲染时不会运行\",{\"1\":{\"1260\":1}}],[\"在服务器端领域和嵌入式领域有非常广泛的应用\",{\"1\":{\"907\":1}}],[\"在初始渲染时\",{\"1\":{\"1234\":1}}],[\"在组件卸载时取消动画\",{\"1\":{\"1289\":1}}],[\"在组件卸载前\",{\"1\":{\"1246\":1}}],[\"在组件中访问\",{\"0\":{\"1219\":1},\"1\":{\"1220\":1}}],[\"在组件生命周期或\",{\"1\":{\"1201\":1}}],[\"在你的例子中\",{\"1\":{\"1197\":1}}],[\"在回调中获取更新后的状态\",{\"1\":{\"1196\":1}}],[\"在状态更新后被调用\",{\"1\":{\"1195\":1}}],[\"在如下位置创建服务脚本\",{\"1\":{\"1137\":1}}],[\"在退出前完成已经接受的连接请求\",{\"1\":{\"1135\":1}}],[\"在赋值前被使用了\",{\"1\":{\"1448\":1}}],[\"在赋值的时候引用变量\",{\"0\":{\"1096\":1}}],[\"在赋值给对应的变量\",{\"1\":{\"253\":1}}],[\"在双引号里特殊符号都没有特殊含义\",{\"1\":{\"1089\":1}}],[\"在目前所在行的第一个非空格符处开始输入\",{\"1\":{\"1065\":1}}],[\"在底线命令模式中\",{\"1\":{\"1058\":1}}],[\"在文本中移动光标\",{\"1\":{\"1057\":1}}],[\"在文件名称里假如版本编号\",{\"1\":{\"1018\":1}}],[\"在文件夹\",{\"1\":{\"1016\":1}}],[\"在文件\",{\"1\":{\"1016\":1}}],[\"在命令模式下按下\",{\"1\":{\"1057\":1,\"1058\":1}}],[\"在当前行的上方插入一个新行\",{\"1\":{\"1056\":1}}],[\"在当前行的下方插入一个新行\",{\"1\":{\"1056\":1}}],[\"在当前目录中\",{\"1\":{\"1016\":1}}],[\"在当前目录下查找最近\",{\"1\":{\"1007\":1}}],[\"在光标下一个位置开始输入文本\",{\"1\":{\"1056\":1}}],[\"在光标当前位置开始输入文本\",{\"1\":{\"1056\":1}}],[\"在标准输入中查找字符串\",{\"1\":{\"1016\":1}}],[\"在标签的右括号之前要求或禁止换行\",{\"1\":{\"19\":1,\"62\":1}}],[\"在输入模式中\",{\"1\":{\"1057\":1}}],[\"在输入框中输入振动的持续时间并按下按钮\",{\"1\":{\"342\":1}}],[\"在输出时\",{\"1\":{\"1009\":1}}],[\"在比较目录时\",{\"1\":{\"1009\":2}}],[\"在比较第一个参数和数组的每一项时\",{\"1\":{\"708\":1}}],[\"在复制前提示确认\",{\"1\":{\"998\":1}}],[\"在画面下方显示\",{\"1\":{\"986\":1}}],[\"在终端显示文件\",{\"1\":{\"983\":1}}],[\"在每次组建渲染的时候都被调用\",{\"1\":{\"1286\":1}}],[\"在每行前面加上\",{\"1\":{\"1009\":1}}],[\"在每个udp包中就有了消息头\",{\"1\":{\"1731\":1}}],[\"在每个文档显示前搜寻该字串\",{\"1\":{\"986\":1}}],[\"在每个模块内部\",{\"1\":{\"449\":1}}],[\"在每一行的末尾显示$符号\",{\"1\":{\"983\":1}}],[\"在列出的文件名称后加一符号\",{\"1\":{\"972\":1}}],[\"在重开机之前先把所有网络相关的装置先停止\",{\"1\":{\"921\":1}}],[\"在重开机前不做将记忆体资料写回硬盘的动作\",{\"1\":{\"921\":1}}],[\"在重写的过程中很有可能出现把之前的\",{\"1\":{\"658\":1}}],[\"在主线程同步任务执行完后才去执行宏任务\",{\"1\":{\"903\":1}}],[\"在主线程上排队执行的任务\",{\"1\":{\"372\":1}}],[\"在定时器\",{\"1\":{\"902\":1}}],[\"在传输中每一位数据都占据一个固定的时间长度\",{\"1\":{\"2186\":1}}],[\"在传输数据报文时是很高效的\",{\"1\":{\"1712\":1}}],[\"在传输层\",{\"1\":{\"1712\":1}}],[\"在传统的编译语言中\",{\"1\":{\"895\":1}}],[\"在传入参数的那一刻\",{\"1\":{\"254\":1}}],[\"在规定时间内\",{\"1\":{\"827\":1,\"830\":1}}],[\"在极少数情况下发生\",{\"1\":{\"805\":1}}],[\"在操作需要字符串的上下文中\",{\"1\":{\"805\":1}}],[\"在数据库正常运行的状态下\",{\"1\":{\"2265\":1}}],[\"在数据发送之前缓存他们\",{\"1\":{\"1730\":1}}],[\"在数组的解构中\",{\"1\":{\"843\":1}}],[\"在数组中\",{\"1\":{\"680\":1}}],[\"在数学运算中\",{\"1\":{\"794\":1}}],[\"在拷贝数据中对应的引用\",{\"1\":{\"767\":1}}],[\"在堆内存中开辟一块内存用于存放复制的对象\",{\"1\":{\"761\":1}}],[\"在第一次增量分段中全部标记为黑色\",{\"1\":{\"1650\":1}}],[\"在第一次渲染时\",{\"1\":{\"1273\":1}}],[\"在第n1与n2行之间寻找word1这个字符串\",{\"1\":{\"1062\":1}}],[\"在第\",{\"1\":{\"740\":1}}],[\"在一些多次触发事件的场景下\",{\"1\":{\"1813\":1}}],[\"在一些原生事件处理函数中\",{\"1\":{\"1201\":1}}],[\"在一些情况下\",{\"1\":{\"725\":1}}],[\"在一行字当中\",{\"1\":{\"1063\":1}}],[\"在一个利益冲突组中\",{\"1\":{\"2119\":1}}],[\"在一个复杂的系统中\",{\"1\":{\"1813\":1}}],[\"在一个有\",{\"1\":{\"724\":1}}],[\"在一个模块文件中只能使用一次\",{\"1\":{\"469\":1}}],[\"在一个宏任务中\",{\"1\":{\"376\":1}}],[\"在日常开发中经常会遇到各种类数组对象\",{\"1\":{\"723\":1}}],[\"在很多情况下\",{\"1\":{\"698\":1,\"1442\":1}}],[\"在很多时候\",{\"1\":{\"236\":1}}],[\"在对头删除元素\",{\"1\":{\"694\":1}}],[\"在对象中获取一些属性的值\",{\"1\":{\"1370\":1}}],[\"在对象字面量中\",{\"1\":{\"305\":1}}],[\"在对象的解构中\",{\"1\":{\"305\":1}}],[\"在对象的解构赋值中\",{\"1\":{\"253\":1}}],[\"在对象\",{\"1\":{\"20\":1,\"63\":1}}],[\"在两个元素之间插入\",{\"1\":{\"690\":1}}],[\"在调用方法之后把当前watcher实例从全局dep\",{\"1\":{\"1561\":1}}],[\"在调用方法之前先把当前watcher实例推到全局dep\",{\"1\":{\"1561\":1}}],[\"在调用\",{\"1\":{\"689\":1,\"1561\":1}}],[\"在没有\",{\"1\":{\"806\":1}}],[\"在没有第二个参数时默认以十进制转换数值\",{\"1\":{\"663\":1}}],[\"在没有得到返回结果之前\",{\"1\":{\"555\":1}}],[\"在下面的代码中\",{\"1\":{\"678\":1}}],[\"在下面的示例中\",{\"1\":{\"430\":1,\"434\":2}}],[\"在下面代码中\",{\"1\":{\"646\":1}}],[\"在react的项目中\",{\"1\":{\"637\":1}}],[\"在ecmascript\",{\"1\":{\"621\":1}}],[\"在说这些操作符之前\",{\"1\":{\"606\":1}}],[\"在必要时将操作数自动转化为数值\",{\"1\":{\"601\":1}}],[\"在等待\",{\"1\":{\"1106\":1}}],[\"在等\",{\"1\":{\"595\":1}}],[\"在返回的\",{\"1\":{\"592\":1}}],[\"在错误发生的时候\",{\"1\":{\"578\":1}}],[\"在此方法中声明了\",{\"1\":{\"1507\":1}}],[\"在此段代码执行完未返回结果之前\",{\"1\":{\"555\":1}}],[\"在此作用域中用\",{\"1\":{\"511\":1}}],[\"在执行垃圾回收的过程中\",{\"1\":{\"1649\":1}}],[\"在执行覆盖前\",{\"1\":{\"1001\":1}}],[\"在执行的时候\",{\"1\":{\"578\":1,\"888\":1}}],[\"在执行的过程中\",{\"1\":{\"565\":1}}],[\"在执行完then或catch指定的回调函数以后\",{\"1\":{\"575\":1}}],[\"在执行器中调用\",{\"1\":{\"563\":2}}],[\"在执行某段代码时\",{\"1\":{\"555\":1}}],[\"在执行上下文中\",{\"1\":{\"349\":1}}],[\"在词法环境内部\",{\"1\":{\"510\":1}}],[\"在该文件中列出要忽略的文件和文件夹\",{\"1\":{\"1583\":1}}],[\"在该作用域块内部也声明了变量\",{\"1\":{\"510\":1}}],[\"在该函数中\",{\"1\":{\"445\":1}}],[\"在预编译时\",{\"1\":{\"502\":1}}],[\"在解释\",{\"1\":{\"813\":1}}],[\"在解析的过程中\",{\"1\":{\"502\":1}}],[\"在解构赋值时\",{\"1\":{\"253\":1,\"1411\":1}}],[\"在解构时还支持使用默认值\",{\"1\":{\"252\":1}}],[\"在js代码执行之前\",{\"1\":{\"502\":1}}],[\"在jsx中使用单引号而不是双引号\",{\"1\":{\"20\":1,\"63\":1}}],[\"在编译shader程序之前立即执行的可选回调\",{\"1\":{\"2688\":1}}],[\"在编译阶段和执行阶段阶段的过程如下\",{\"1\":{\"895\":1}}],[\"在编译阶段会被存放到词法环境中\",{\"1\":{\"509\":1}}],[\"在编译阶段会被存放到变量环境中\",{\"1\":{\"509\":1}}],[\"在编译阶段\",{\"1\":{\"507\":1}}],[\"在编译阶段都会被提取到执行上下文的变量环境中\",{\"1\":{\"501\":1}}],[\"在编辑的数据中\",{\"1\":{\"1067\":1}}],[\"在编程中也有很多对象只需要唯一一个\",{\"1\":{\"1762\":1}}],[\"在编程语言中\",{\"1\":{\"896\":1}}],[\"在编程过程中\",{\"1\":{\"739\":1}}],[\"在编写代码时\",{\"1\":{\"321\":1,\"643\":1}}],[\"在吃饭\",{\"1\":{\"495\":1}}],[\"在new实例化的时候\",{\"1\":{\"495\":1}}],[\"在最简单的情况下\",{\"1\":{\"562\":1}}],[\"在最基本的层面上\",{\"1\":{\"556\":1}}],[\"在最近的文件夹中创建一个\",{\"1\":{\"474\":1}}],[\"在最后一个子元素新添加最后一个冗余元素\",{\"1\":{\"182\":1}}],[\"在导入时可以为其指定任意名称\",{\"1\":{\"469\":1}}],[\"在导入的时候为其指定任意名字\",{\"1\":{\"274\":1}}],[\"在依赖项数组中列出的任何内容都必须与工厂函数中的分配相匹配\",{\"1\":{\"463\":1}}],[\"在路径中\",{\"1\":{\"463\":1}}],[\"在哪里可以找到模块\",{\"1\":{\"463\":1}}],[\"在哪里可以找到\",{\"1\":{\"463\":1}}],[\"在某些实时性要求高的场景\",{\"1\":{\"1712\":1}}],[\"在某些场景下是可以替换掉节流和防抖的\",{\"1\":{\"1237\":1}}],[\"在某些情况下\",{\"1\":{\"1203\":1,\"1251\":1,\"1259\":1,\"1283\":1,\"1303\":2}}],[\"在某些情况下不适合在\",{\"1\":{\"450\":1}}],[\"在某些早期的\",{\"1\":{\"1201\":1}}],[\"在某些特定的编程场景中会出现\",{\"1\":{\"721\":1}}],[\"在某些同步任务完成后立马执行\",{\"1\":{\"378\":2}}],[\"在非严格模式下\",{\"1\":{\"427\":1}}],[\"在设计目的上\",{\"1\":{\"408\":1}}],[\"在清空队列时\",{\"1\":{\"383\":1}}],[\"在事件循环的\",{\"1\":{\"383\":1}}],[\"在事件循环的各个阶段之间执行\",{\"1\":{\"383\":1}}],[\"在事件驱动的模式下\",{\"1\":{\"375\":1}}],[\"在poll阶段为空闲时\",{\"1\":{\"382\":1}}],[\"在poll阶段完成时执行\",{\"1\":{\"382\":1}}],[\"在package\",{\"1\":{\"15\":1,\"58\":1}}],[\"在进入下一个阶段之前立即执行\",{\"1\":{\"381\":1}}],[\"在进入该阶段时如果没有设定了\",{\"1\":{\"379\":1}}],[\"在进行模板比较或者模板操作的时候所用的基准值\",{\"1\":{\"2659\":1}}],[\"在进行降级之前要对系统进行梳理\",{\"1\":{\"2075\":1}}],[\"在进行比较时\",{\"1\":{\"627\":1}}],[\"在进行除法操作\",{\"1\":{\"619\":1}}],[\"在进行乘法操作\",{\"1\":{\"618\":1}}],[\"在进行加操作时\",{\"1\":{\"616\":1}}],[\"在进行\",{\"1\":{\"354\":1}}],[\"在进行解构\",{\"1\":{\"254\":1}}],[\"在处理宏任务和微任务的逻辑时的执行情况如下\",{\"1\":{\"376\":1}}],[\"在同一个时间只能做一件事情\",{\"1\":{\"371\":1}}],[\"在属性\",{\"1\":{\"363\":1}}],[\"在这一阶段\",{\"1\":{\"2218\":1}}],[\"在这一阶段根据需求规范和通信规范\",{\"1\":{\"2217\":1}}],[\"在这种情况下\",{\"1\":{\"805\":1,\"806\":1,\"1269\":1,\"1282\":1,\"1303\":2}}],[\"在这运行流程进入作用域创建变量\",{\"1\":{\"511\":1}}],[\"在这个过程中\",{\"1\":{\"1645\":1}}],[\"在这个示例中\",{\"1\":{\"1211\":1}}],[\"在这个方法中\",{\"1\":{\"1197\":1}}],[\"在这个范围内无法访问\",{\"1\":{\"898\":1}}],[\"在这个块级作用域当中\",{\"1\":{\"898\":1}}],[\"在这个\",{\"1\":{\"581\":1}}],[\"在这个例子里\",{\"1\":{\"565\":1}}],[\"在这个例子中\",{\"1\":{\"362\":1,\"1274\":1}}],[\"在这个执行器里\",{\"1\":{\"565\":1}}],[\"在这个短暂的编译阶段\",{\"1\":{\"501\":1}}],[\"在这段代码中\",{\"1\":{\"445\":1,\"507\":1}}],[\"在这里我们左上和右下顶点被复制了两次\",{\"1\":{\"2278\":1}}],[\"在这里面\",{\"1\":{\"1747\":1}}],[\"在这里就类似div\",{\"1\":{\"1550\":1}}],[\"在这里是\",{\"1\":{\"1416\":1}}],[\"在这里可以访问更新后的状态\",{\"1\":{\"1195\":1}}],[\"在这里可以基于\",{\"1\":{\"1194\":1}}],[\"在这里修改别名\",{\"1\":{\"1120\":1}}],[\"在这里修改\",{\"1\":{\"1119\":1}}],[\"在这里修改系统变量\",{\"1\":{\"1118\":1}}],[\"在这里取\",{\"1\":{\"206\":1}}],[\"在这里并不是一个固定的值\",{\"1\":{\"206\":1}}],[\"在箭头函数中\",{\"1\":{\"362\":1}}],[\"在箭头函数中访问\",{\"1\":{\"263\":1}}],[\"在上下文中当类型检查器无法断定类型时\",{\"1\":{\"1447\":1}}],[\"在上述的代码中\",{\"1\":{\"1460\":1}}],[\"在上述例子中\",{\"1\":{\"1370\":1}}],[\"在上述代码中\",{\"1\":{\"354\":1,\"1429\":1}}],[\"在上面示例中\",{\"1\":{\"1460\":1}}],[\"在上面的例子中\",{\"1\":{\"1265\":1,\"2753\":1,\"2763\":1}}],[\"在上面的代码中\",{\"1\":{\"772\":1,\"806\":1}}],[\"在上面的示例中\",{\"1\":{\"432\":1,\"433\":1,\"1212\":1}}],[\"在上面代码上\",{\"1\":{\"492\":1}}],[\"在上面代码的执行过程中\",{\"1\":{\"382\":1}}],[\"在上面代码中\",{\"1\":{\"359\":1,\"1365\":1,\"1366\":1}}],[\"在上一步符号化中\",{\"1\":{\"1705\":1}}],[\"在上一步\",{\"1\":{\"121\":1}}],[\"在浏览器控制台输入\",{\"1\":{\"896\":1}}],[\"在浏览器接收后端数据时被浏览器的跨域报错拦下来\",{\"1\":{\"856\":1}}],[\"在浏览器使用\",{\"0\":{\"473\":1}}],[\"在浏览器环境且支持\",{\"1\":{\"465\":1}}],[\"在浏览器环境下\",{\"1\":{\"353\":1}}],[\"在浏览器中\",{\"1\":{\"383\":2,\"427\":1}}],[\"在浏览器中完成异步任务提供了基础\",{\"1\":{\"371\":1}}],[\"在浏览器窗口\",{\"1\":{\"201\":1}}],[\"在函数组件中\",{\"1\":{\"1219\":1}}],[\"在函数内部包含了对象所有的创建逻辑\",{\"1\":{\"1753\":1}}],[\"在函数内部\",{\"1\":{\"1194\":1}}],[\"在函数内部用一个对象存储输入的参数\",{\"1\":{\"902\":1}}],[\"在函数内部可以将参数直接进行累加操作\",{\"1\":{\"727\":1}}],[\"在函数内部可以直接获取\",{\"1\":{\"727\":1}}],[\"在函数内进行了提升\",{\"1\":{\"898\":1}}],[\"在函数作用域内部\",{\"1\":{\"509\":1}}],[\"在函数作用域中也存在变量提升\",{\"1\":{\"500\":1}}],[\"在函数\",{\"1\":{\"434\":1,\"1646\":1}}],[\"在函数的指向绑定形式有四种\",{\"1\":{\"352\":1}}],[\"在函数执行结束后\",{\"1\":{\"1645\":1}}],[\"在函数执行上下文中\",{\"1\":{\"350\":1}}],[\"在函数执⾏完毕后\",{\"1\":{\"351\":1}}],[\"在函数调用时\",{\"1\":{\"258\":1}}],[\"在全局执行上下文中\",{\"1\":{\"350\":1}}],[\"在扬声器中说出输入框中的文本\",{\"1\":{\"340\":1}}],[\"在单引号中所有的特殊符号\",{\"1\":{\"1089\":1}}],[\"在单击时调用\",{\"1\":{\"338\":1}}],[\"在单行元素的内容之前和之后需要换行符\",{\"1\":{\"19\":1,\"62\":1}}],[\"在被输出到音频输出\",{\"1\":{\"338\":1}}],[\"在探索一个对象的内容时\",{\"1\":{\"322\":1,\"644\":1}}],[\"在引用为null\",{\"1\":{\"644\":1}}],[\"在引用为\",{\"1\":{\"322\":1}}],[\"在引入\",{\"1\":{\"248\":1}}],[\"在不延误总工期的前提下\",{\"1\":{\"1955\":1}}],[\"在不同分支之间进行代码合并时\",{\"1\":{\"1602\":1}}],[\"在不同的场地存储同一数据的多个副本\",{\"1\":{\"2229\":1}}],[\"在不同的视觉容器中表示不同的大小\",{\"1\":{\"206\":1}}],[\"在不同的分辨率下都能达到适配\",{\"1\":{\"205\":1}}],[\"在不需要重新刷新页面的情况下\",{\"1\":{\"812\":1}}],[\"在不传参数时\",{\"1\":{\"311\":1,\"720\":1}}],[\"在语义上不够明确直观\",{\"1\":{\"289\":1}}],[\"在扩展库时\",{\"1\":{\"272\":1}}],[\"在平时的开发中\",{\"1\":{\"255\":1,\"627\":1}}],[\"在用户的请求到达反向代理服务器时\",{\"1\":{\"2077\":1}}],[\"在用户访问的过程中\",{\"1\":{\"223\":1}}],[\"在用户不进行手动缩放的情况下\",{\"1\":{\"201\":1}}],[\"在索引数据库中\",{\"1\":{\"217\":1}}],[\"在小屏幕下就会存在小屏幕字体更小的情况\",{\"1\":{\"207\":1}}],[\"在垂直方向和水平方向都是相对于直接父亲元素的\",{\"1\":{\"205\":1}}],[\"在移动端缩放不会改变布局视口的宽度\",{\"1\":{\"201\":1}}],[\"在移动端和\",{\"1\":{\"201\":1}}],[\"在屏幕的底部\",{\"1\":{\"161\":1}}],[\"在连接完设备后\",{\"1\":{\"120\":1}}],[\"在使用此材质显示对象时要使用何种混合\",{\"1\":{\"2643\":1}}],[\"在使用此命令后\",{\"1\":{\"1614\":1}}],[\"在使用迭代器模式之后\",{\"1\":{\"1832\":1}}],[\"在使用代理模式时\",{\"1\":{\"1797\":1}}],[\"在使用非\",{\"1\":{\"1288\":1}}],[\"在使用数组解构时\",{\"1\":{\"839\":1}}],[\"在使用模块时\",{\"1\":{\"443\":1}}],[\"在使用模板字符串时\",{\"1\":{\"255\":1}}],[\"在使用的时候需要注意\",{\"1\":{\"363\":1}}],[\"在使用正则表达式的时候\",{\"1\":{\"326\":1}}],[\"在使用\",{\"1\":{\"118\":1,\"322\":1,\"359\":1,\"463\":1,\"578\":1,\"677\":1,\"1009\":3,\"1203\":1,\"1583\":1}}],[\"在根目录下创建modifymanifest\",{\"0\":{\"109\":1}}],[\"在根目录下新建commitlint\",{\"1\":{\"30\":1,\"73\":1}}],[\"在根目录下新建\",{\"1\":{\"16\":1,\"59\":1}}],[\"在\",{\"0\":{\"474\":1,\"1175\":1,\"1182\":1},\"1\":{\"80\":1,\"122\":2,\"123\":3,\"125\":3,\"126\":1,\"185\":1,\"200\":1,\"202\":1,\"233\":1,\"246\":1,\"249\":1,\"250\":2,\"251\":1,\"253\":1,\"255\":2,\"256\":1,\"289\":1,\"295\":2,\"297\":1,\"301\":1,\"307\":2,\"311\":1,\"316\":1,\"318\":1,\"320\":2,\"331\":1,\"333\":1,\"334\":1,\"337\":1,\"340\":1,\"353\":2,\"354\":1,\"370\":1,\"390\":2,\"399\":1,\"414\":1,\"425\":4,\"429\":1,\"445\":1,\"449\":1,\"450\":1,\"451\":1,\"454\":1,\"462\":1,\"464\":1,\"470\":1,\"474\":1,\"478\":1,\"479\":1,\"482\":3,\"484\":1,\"499\":1,\"500\":3,\"501\":1,\"506\":1,\"511\":1,\"555\":1,\"565\":1,\"597\":1,\"642\":1,\"674\":1,\"681\":1,\"698\":1,\"710\":1,\"719\":1,\"720\":1,\"721\":1,\"803\":1,\"806\":1,\"874\":1,\"895\":1,\"896\":2,\"897\":1,\"898\":1,\"913\":1,\"1029\":3,\"1077\":1,\"1089\":1,\"1173\":1,\"1180\":1,\"1181\":1,\"1183\":3,\"1184\":2,\"1201\":3,\"1203\":2,\"1234\":1,\"1235\":1,\"1236\":1,\"1243\":1,\"1285\":1,\"1308\":1,\"1386\":1,\"1387\":1,\"1389\":1,\"1415\":1,\"1416\":1,\"1417\":1,\"1427\":1,\"1442\":1,\"1443\":1,\"1518\":1,\"1519\":1,\"1520\":2,\"1557\":1,\"1559\":1,\"1582\":1,\"1646\":1,\"1648\":1,\"1653\":1,\"1730\":1,\"1764\":1,\"2020\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2741\":1,\"2742\":1,\"2744\":2,\"2856\":1}}],[\"在html中空格是否是敏感的\",{\"1\":{\"20\":1,\"63\":1}}],[\"删除具有指定名称的\",{\"1\":{\"2313\":1}}],[\"删除异常\",{\"1\":{\"2244\":1}}],[\"删除indexeddb\",{\"1\":{\"1671\":1}}],[\"删除对dom的引用\",{\"1\":{\"1653\":1}}],[\"删除标签\",{\"0\":{\"1621\":1}}],[\"删除文件\",{\"0\":{\"1613\":1}}],[\"删除远程仓库分支\",{\"1\":{\"1595\":1}}],[\"删除分支\",{\"0\":{\"1595\":1}}],[\"删除老的el节点\",{\"1\":{\"1528\":1}}],[\"删除老的样式\",{\"1\":{\"1477\":1}}],[\"删除以下文件\",{\"1\":{\"1472\":1}}],[\"删除编译后的所有的注释\",{\"1\":{\"1454\":1}}],[\"删除变量\",{\"1\":{\"1098\":1}}],[\"删除别名unalias\",{\"1\":{\"1080\":1}}],[\"删除软件包命令\",{\"1\":{\"1073\":1}}],[\"删除某一个\",{\"1\":{\"1071\":1}}],[\"删除游标所在处\",{\"1\":{\"1063\":2}}],[\"删除光标所在到最后一行的所有数据\",{\"1\":{\"1063\":1}}],[\"删除光标所在到第一行的所有数据\",{\"1\":{\"1063\":1}}],[\"删除光标后一个字符\",{\"1\":{\"1057\":1}}],[\"删除光标前一个字符\",{\"1\":{\"1057\":1}}],[\"删除键\",{\"1\":{\"1057\":1}}],[\"删除当前光标所在处的字符\",{\"1\":{\"1056\":1}}],[\"删除当前目录下的所有文件及目录\",{\"1\":{\"996\":1}}],[\"删除原始文件\",{\"1\":{\"1018\":1}}],[\"删除压缩文件前面不必要的数据\",{\"1\":{\"1018\":1}}],[\"删除前逐一询问确认\",{\"1\":{\"995\":1}}],[\"删除名为test的子目录\",{\"1\":{\"979\":1}}],[\"删除一个群组\",{\"1\":{\"957\":1}}],[\"删除用户\",{\"1\":{\"2039\":1}}],[\"删除用户账号\",{\"1\":{\"948\":1}}],[\"删除用户登入目录以及目录中所有文件\",{\"1\":{\"947\":1}}],[\"删除帐号\",{\"1\":{\"943\":1}}],[\"删除项目的位置\",{\"1\":{\"703\":1}}],[\"删除项目\",{\"1\":{\"703\":1}}],[\"删除它\",{\"1\":{\"432\":1}}],[\"删除它们并回收内存\",{\"1\":{\"425\":1}}],[\"删除元素\",{\"1\":{\"271\":2}}],[\"删除\",{\"0\":{\"1063\":1},\"1\":{\"15\":1,\"703\":2,\"1475\":1}}],[\"nz\",{\"1\":{\"2842\":1}}],[\"ny\",{\"1\":{\"2842\":1}}],[\"nyy\",{\"1\":{\"1063\":1}}],[\"nloaded\",{\"1\":{\"2455\":2,\"2462\":2}}],[\"n+2模式\",{\"1\":{\"2213\":1}}],[\"n+1模式\",{\"1\":{\"2213\":2}}],[\"n版本程序设计\",{\"0\":{\"2093\":1}}],[\"n标志来仅显示最近n次的提交\",{\"1\":{\"1631\":1}}],[\"ncname\",{\"1\":{\"1550\":3}}],[\"nss\",{\"1\":{\"1137\":1}}],[\"n=$\",{\"1\":{\"1096\":1}}],[\"n重复执行第\",{\"1\":{\"1084\":1}}],[\"n2\",{\"1\":{\"1067\":1}}],[\"n2s\",{\"1\":{\"1062\":1}}],[\"n为数字\",{\"1\":{\"1063\":2}}],[\"ndd\",{\"1\":{\"1063\":1}}],[\"nx\",{\"1\":{\"1063\":1,\"2842\":1}}],[\"n1与n2为数字\",{\"1\":{\"1062\":1}}],[\"n1\",{\"1\":{\"1062\":1,\"1067\":1}}],[\"ngx\",{\"1\":{\"1141\":1}}],[\"ng\",{\"1\":{\"1061\":1}}],[\"nginx都可以充当反向代理服务器\",{\"1\":{\"2077\":1}}],[\"nginx使用哈希表\",{\"1\":{\"1153\":1}}],[\"nginx进程启动后\",{\"1\":{\"1150\":1}}],[\"nginx日志目录\",{\"1\":{\"1150\":1}}],[\"nginx默认站点目录\",{\"1\":{\"1150\":1}}],[\"nginx所有配置文件的目录\",{\"1\":{\"1150\":1}}],[\"nginx模块目录\",{\"1\":{\"1146\":1}}],[\"nginx库文件\",{\"1\":{\"1146\":1}}],[\"nginx配置文件\",{\"1\":{\"1146\":1}}],[\"nginx启动\",{\"0\":{\"1145\":1}}],[\"nginx\",{\"0\":{\"866\":1,\"1132\":1,\"1139\":1,\"1141\":1,\"1143\":1,\"1144\":1},\"1\":{\"866\":7,\"1131\":1,\"1132\":2,\"1134\":1,\"1135\":5,\"1137\":24,\"1139\":1,\"1141\":2,\"1142\":1,\"1143\":1,\"1144\":2,\"1145\":5,\"1146\":19,\"1150\":8,\"1152\":2,\"1153\":14,\"1695\":1},\"2\":{\"1147\":1,\"1148\":1,\"1154\":1,\"1155\":1}}],[\"n类似\",{\"1\":{\"1009\":1}}],[\"n或\",{\"1\":{\"1009\":2,\"1021\":2}}],[\"n选项显示行号\",{\"1\":{\"984\":1}}],[\"n<enter>\",{\"1\":{\"1061\":1}}],[\"n<space>\",{\"1\":{\"1061\":1}}],[\"n<字尾字符串>\",{\"1\":{\"1018\":1}}],[\"n<行数>\",{\"1\":{\"992\":1}}],[\"n<\",{\"1\":{\"236\":1}}],[\"nat\",{\"1\":{\"2215\":3}}],[\"native\",{\"1\":{\"1332\":1,\"1454\":1,\"1472\":1}}],[\"nagle\",{\"1\":{\"1730\":6}}],[\"navbar\",{\"1\":{\"1758\":6}}],[\"navigator\",{\"1\":{\"334\":1,\"341\":7,\"342\":6,\"344\":2,\"345\":5}}],[\"nav>\",{\"1\":{\"215\":1,\"1312\":1}}],[\"na\",{\"1\":{\"282\":9,\"545\":9}}],[\"nan是一个特殊值\",{\"1\":{\"656\":1}}],[\"nan是一个\",{\"1\":{\"656\":1}}],[\"nan指\",{\"1\":{\"656\":1}}],[\"nanana\",{\"1\":{\"282\":1,\"545\":1}}],[\"nana\",{\"1\":{\"282\":1,\"545\":1}}],[\"nan\",{\"0\":{\"786\":1,\"800\":1},\"1\":{\"272\":3,\"282\":2,\"285\":1,\"289\":5,\"518\":1,\"545\":1,\"550\":5,\"551\":2,\"602\":2,\"604\":3,\"616\":1,\"617\":2,\"623\":2,\"653\":3,\"656\":2,\"663\":13,\"664\":2,\"667\":6,\"669\":1,\"714\":1,\"763\":1,\"772\":3,\"774\":1,\"775\":2,\"776\":1,\"786\":3,\"791\":2,\"795\":1,\"796\":1,\"797\":3,\"800\":7,\"801\":1,\"802\":3,\"875\":1,\"889\":1}}],[\"name>\",{\"1\":{\"1073\":3,\"1607\":1,\"1617\":1,\"1618\":1}}],[\"name=localstorage\",{\"1\":{\"1664\":1}}],[\"name=林三心\",{\"1\":{\"864\":1,\"866\":1}}],[\"name=\",{\"1\":{\"202\":1,\"867\":1,\"1094\":1,\"1839\":1}}],[\"named\",{\"1\":{\"21\":1,\"64\":1}}],[\"namespaced\",{\"1\":{\"83\":2}}],[\"names\",{\"1\":{\"19\":1,\"62\":1,\"1110\":5}}],[\"name\",{\"0\":{\"862\":1,\"2292\":1,\"2296\":1,\"2308\":1,\"2310\":1,\"2313\":1,\"2665\":1},\"1\":{\"16\":10,\"21\":3,\"39\":2,\"59\":10,\"64\":3,\"82\":2,\"83\":5,\"108\":2,\"109\":2,\"111\":1,\"118\":2,\"119\":1,\"127\":1,\"128\":2,\"232\":2,\"255\":2,\"270\":1,\"272\":2,\"295\":3,\"296\":1,\"297\":1,\"321\":4,\"322\":6,\"328\":1,\"341\":3,\"355\":5,\"356\":4,\"357\":2,\"359\":8,\"364\":4,\"365\":5,\"391\":1,\"433\":5,\"445\":9,\"455\":6,\"478\":7,\"484\":3,\"486\":1,\"488\":2,\"490\":5,\"492\":5,\"494\":2,\"495\":6,\"505\":9,\"511\":9,\"627\":1,\"639\":1,\"643\":4,\"644\":6,\"652\":3,\"689\":1,\"721\":1,\"723\":3,\"762\":3,\"785\":1,\"806\":10,\"836\":6,\"838\":3,\"844\":2,\"847\":3,\"848\":5,\"849\":1,\"860\":4,\"862\":3,\"864\":2,\"865\":3,\"866\":3,\"882\":3,\"895\":14,\"896\":4,\"897\":6,\"972\":1,\"995\":1,\"1006\":1,\"1007\":3,\"1021\":2,\"1098\":1,\"1152\":5,\"1153\":2,\"1167\":1,\"1168\":2,\"1222\":2,\"1236\":1,\"1265\":4,\"1267\":2,\"1301\":2,\"1338\":8,\"1339\":1,\"1340\":7,\"1343\":1,\"1357\":1,\"1365\":3,\"1366\":2,\"1370\":7,\"1371\":3,\"1372\":7,\"1386\":7,\"1387\":4,\"1388\":7,\"1389\":10,\"1390\":12,\"1391\":4,\"1392\":1,\"1405\":2,\"1435\":4,\"1458\":2,\"1464\":1,\"1467\":7,\"1469\":1,\"1483\":1,\"1490\":1,\"1492\":1,\"1527\":1,\"1533\":1,\"1549\":1,\"1550\":1,\"1551\":2,\"1587\":4,\"1607\":1,\"1644\":1,\"1664\":2,\"1671\":6,\"1740\":6,\"1743\":10,\"1753\":8,\"1754\":5,\"1773\":5,\"1774\":3,\"1806\":4,\"1817\":1}}],[\"nu相反\",{\"1\":{\"1068\":1}}],[\"nu\",{\"1\":{\"1068\":1}}],[\"nul\",{\"1\":{\"650\":1}}],[\"null会转化为0\",{\"1\":{\"616\":1}}],[\"null\",{\"0\":{\"654\":1,\"786\":1,\"793\":1,\"799\":1,\"1400\":1},\"1\":{\"21\":4,\"64\":4,\"128\":10,\"253\":2,\"254\":1,\"285\":2,\"309\":1,\"321\":3,\"322\":4,\"355\":3,\"359\":1,\"417\":1,\"429\":1,\"433\":2,\"436\":1,\"482\":1,\"559\":1,\"616\":1,\"617\":1,\"623\":1,\"627\":1,\"642\":5,\"643\":3,\"644\":3,\"650\":1,\"652\":1,\"653\":1,\"654\":1,\"656\":2,\"657\":3,\"658\":1,\"659\":2,\"662\":7,\"663\":2,\"664\":2,\"667\":1,\"668\":1,\"669\":1,\"689\":1,\"714\":2,\"755\":2,\"763\":1,\"767\":1,\"774\":1,\"775\":1,\"777\":1,\"786\":3,\"788\":1,\"793\":1,\"795\":1,\"799\":3,\"802\":7,\"815\":1,\"828\":1,\"831\":2,\"875\":2,\"889\":1,\"1162\":2,\"1217\":1,\"1222\":2,\"1227\":3,\"1229\":1,\"1255\":2,\"1256\":6,\"1279\":1,\"1281\":2,\"1283\":1,\"1286\":4,\"1288\":1,\"1289\":2,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2,\"1381\":2,\"1400\":5,\"1415\":1,\"1416\":1,\"1418\":1,\"1431\":7,\"1447\":2,\"1454\":1,\"1458\":1,\"1478\":5,\"1493\":1,\"1527\":1,\"1550\":1,\"1558\":1,\"1559\":2,\"1562\":1,\"1571\":1,\"1653\":1,\"1671\":1,\"1839\":2,\"2283\":1,\"2284\":1,\"2288\":1,\"2303\":1,\"2304\":1,\"2578\":1,\"2640\":1,\"2642\":1,\"2645\":1,\"2647\":1,\"2674\":1,\"2754\":1,\"2838\":1}}],[\"numspaces\",{\"1\":{\"1437\":2}}],[\"num=48\",{\"1\":{\"1168\":1}}],[\"num2=3\",{\"1\":{\"1113\":1}}],[\"num2\",{\"1\":{\"602\":4,\"637\":2}}],[\"num1=2\",{\"1\":{\"1113\":1}}],[\"num1++\",{\"1\":{\"602\":1}}],[\"num1\",{\"1\":{\"602\":2,\"637\":2}}],[\"num\",{\"1\":{\"353\":4,\"431\":2,\"495\":3,\"500\":11,\"507\":15,\"805\":1,\"889\":4,\"890\":5,\"986\":2,\"1161\":1,\"1176\":1,\"1185\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1,\"1402\":3,\"1430\":6,\"1442\":2,\"1443\":4,\"1468\":2}}],[\"number对象的\",{\"1\":{\"782\":1}}],[\"numbers\",{\"1\":{\"635\":2,\"841\":2,\"844\":2}}],[\"number类型\",{\"1\":{\"539\":1}}],[\"number\",{\"0\":{\"663\":1,\"1398\":1,\"1430\":1,\"2530\":6,\"2540\":1,\"2568\":4,\"2579\":1,\"2799\":1,\"2809\":1,\"2817\":1,\"2818\":1,\"2831\":1,\"2841\":1},\"1\":{\"254\":1,\"309\":1,\"320\":6,\"327\":2,\"342\":1,\"605\":1,\"627\":4,\"641\":1,\"642\":1,\"650\":3,\"652\":1,\"653\":1,\"656\":4,\"657\":5,\"658\":1,\"659\":1,\"662\":2,\"663\":21,\"667\":2,\"772\":1,\"773\":3,\"782\":1,\"797\":4,\"798\":3,\"799\":2,\"800\":5,\"801\":1,\"802\":4,\"803\":1,\"805\":3,\"806\":5,\"807\":1,\"889\":1,\"1167\":1,\"1274\":2,\"1297\":1,\"1315\":1,\"1320\":2,\"1323\":2,\"1338\":3,\"1339\":2,\"1340\":12,\"1342\":8,\"1343\":3,\"1344\":2,\"1346\":2,\"1347\":2,\"1348\":2,\"1349\":2,\"1355\":1,\"1365\":4,\"1366\":4,\"1369\":2,\"1370\":1,\"1371\":3,\"1372\":5,\"1377\":1,\"1378\":2,\"1379\":1,\"1381\":2,\"1382\":2,\"1389\":6,\"1390\":6,\"1398\":1,\"1402\":2,\"1405\":3,\"1410\":1,\"1411\":3,\"1413\":1,\"1414\":8,\"1415\":1,\"1416\":4,\"1418\":1,\"1420\":3,\"1421\":6,\"1426\":6,\"1430\":8,\"1431\":1,\"1436\":4,\"1437\":1,\"1438\":2,\"1442\":6,\"1443\":6,\"1445\":1,\"1446\":1,\"1448\":2,\"1458\":1,\"1460\":3,\"1468\":2,\"1469\":3,\"1839\":1,\"2744\":1,\"2795\":1}}],[\"number=\",{\"1\":{\"83\":1}}],[\"npx\",{\"1\":{\"31\":1,\"74\":1}}],[\"npm\",{\"1\":{\"3\":1,\"5\":1,\"14\":1,\"46\":1,\"48\":1,\"57\":1,\"112\":1,\"189\":1,\"190\":1,\"192\":1,\"193\":1,\"462\":2,\"1328\":1,\"1331\":1}}],[\"negated\",{\"1\":{\"2710\":1}}],[\"needsupdate\",{\"0\":{\"2666\":1},\"1\":{\"2680\":1,\"2744\":1,\"2805\":1}}],[\"needed\",{\"1\":{\"20\":1,\"63\":1}}],[\"needed|consistent|preserve>\",{\"1\":{\"20\":1,\"63\":1}}],[\"neardistance\",{\"0\":{\"2607\":1}}],[\"near\",{\"0\":{\"2530\":1,\"2536\":1,\"2568\":1,\"2577\":1},\"1\":{\"2530\":1,\"2568\":1,\"2884\":1}}],[\"network\",{\"1\":{\"2081\":1}}],[\"net\",{\"1\":{\"1125\":1}}],[\"nextrule\",{\"1\":{\"1839\":7}}],[\"nextsibling\",{\"1\":{\"1476\":1,\"1478\":1,\"1528\":1}}],[\"nexttab\",{\"1\":{\"1311\":4}}],[\"nexttick\",{\"0\":{\"381\":1,\"1542\":1},\"1\":{\"376\":1,\"378\":1,\"380\":1,\"381\":5,\"383\":1,\"1492\":1,\"1493\":2,\"1541\":3,\"1542\":1,\"1543\":1}}],[\"nextid++\",{\"1\":{\"1302\":2}}],[\"next\",{\"1\":{\"383\":3,\"473\":1,\"587\":7,\"588\":6,\"589\":1,\"590\":7,\"591\":4,\"592\":2,\"736\":4,\"860\":2,\"1541\":1,\"1542\":1,\"1839\":4}}],[\"newname\",{\"1\":{\"1597\":1}}],[\"newendvnode\",{\"1\":{\"1478\":7}}],[\"newendindex\",{\"1\":{\"1478\":9}}],[\"newelementx\",{\"1\":{\"692\":1,\"696\":1}}],[\"newelement2\",{\"1\":{\"692\":1,\"696\":1}}],[\"newelement1\",{\"1\":{\"692\":1,\"696\":1}}],[\"newvnode\",{\"1\":{\"1478\":3}}],[\"newval\",{\"1\":{\"1467\":3,\"1490\":6}}],[\"newvalue\",{\"1\":{\"535\":2,\"1493\":3,\"1533\":2,\"1534\":3,\"1560\":4,\"1563\":4,\"1571\":3}}],[\"newstartvnode\",{\"1\":{\"1478\":11}}],[\"newstartindex\",{\"1\":{\"1478\":4}}],[\"newstate\",{\"1\":{\"1194\":1,\"1299\":1}}],[\"newstyle\",{\"1\":{\"1477\":2}}],[\"newprops\",{\"1\":{\"1477\":8,\"1528\":6}}],[\"newchildren\",{\"1\":{\"1476\":6,\"1478\":13}}],[\"newclip\",{\"1\":{\"344\":2}}],[\"newmethod\",{\"1\":{\"1468\":2}}],[\"newuserinfo\",{\"1\":{\"1372\":6}}],[\"newlocation\",{\"1\":{\"1312\":2}}],[\"newline\",{\"1\":{\"19\":3,\"23\":1,\"62\":3,\"66\":1}}],[\"newtodo\",{\"1\":{\"1212\":4}}],[\"newtestinterface\",{\"1\":{\"1371\":4}}],[\"newtest\",{\"1\":{\"999\":1}}],[\"newfile\",{\"1\":{\"1025\":2}}],[\"newgrp\",{\"0\":{\"961\":1},\"1\":{\"962\":1,\"963\":1}}],[\"newrgb\",{\"1\":{\"851\":3}}],[\"newdate\",{\"1\":{\"828\":1}}],[\"new2\",{\"1\":{\"754\":1}}],[\"new40\",{\"1\":{\"551\":1}}],[\"new100\",{\"1\":{\"550\":1}}],[\"newhtml\",{\"1\":{\"343\":4}}],[\"newobject\",{\"1\":{\"760\":3,\"768\":6}}],[\"newobj\",{\"1\":{\"303\":2,\"359\":4}}],[\"new\",{\"0\":{\"359\":1,\"398\":1,\"403\":1,\"409\":1},\"1\":{\"80\":1,\"82\":2,\"83\":2,\"87\":1,\"109\":2,\"123\":1,\"125\":2,\"127\":3,\"128\":7,\"261\":2,\"262\":1,\"271\":6,\"272\":4,\"286\":2,\"299\":1,\"300\":1,\"315\":1,\"324\":1,\"333\":2,\"338\":2,\"340\":4,\"343\":2,\"352\":1,\"358\":1,\"359\":3,\"360\":6,\"362\":1,\"376\":1,\"380\":1,\"388\":4,\"389\":1,\"394\":1,\"395\":4,\"398\":1,\"399\":1,\"400\":1,\"401\":2,\"403\":11,\"404\":2,\"405\":2,\"406\":1,\"409\":3,\"410\":2,\"411\":2,\"413\":1,\"414\":1,\"416\":2,\"417\":1,\"418\":3,\"419\":2,\"420\":2,\"430\":2,\"432\":1,\"433\":2,\"436\":1,\"455\":2,\"472\":2,\"478\":3,\"481\":1,\"482\":1,\"484\":6,\"486\":2,\"488\":3,\"494\":2,\"495\":1,\"559\":1,\"565\":1,\"566\":2,\"568\":4,\"569\":1,\"571\":3,\"573\":3,\"574\":3,\"578\":2,\"581\":1,\"582\":1,\"583\":1,\"584\":12,\"591\":1,\"595\":1,\"596\":1,\"597\":1,\"636\":2,\"656\":3,\"657\":3,\"658\":2,\"659\":4,\"664\":2,\"677\":6,\"678\":2,\"680\":2,\"689\":1,\"742\":1,\"775\":2,\"782\":2,\"787\":1,\"806\":1,\"815\":2,\"819\":1,\"842\":1,\"843\":1,\"859\":1,\"860\":1,\"864\":1,\"865\":3,\"866\":1,\"891\":1,\"1009\":2,\"1188\":1,\"1211\":2,\"1248\":1,\"1250\":1,\"1273\":1,\"1287\":1,\"1362\":1,\"1386\":2,\"1387\":1,\"1388\":1,\"1389\":1,\"1390\":1,\"1392\":2,\"1416\":1,\"1417\":1,\"1418\":2,\"1436\":1,\"1437\":1,\"1466\":2,\"1467\":2,\"1468\":3,\"1475\":1,\"1483\":1,\"1486\":1,\"1490\":1,\"1492\":1,\"1493\":1,\"1507\":1,\"1533\":2,\"1534\":1,\"1539\":1,\"1542\":1,\"1547\":1,\"1549\":1,\"1550\":2,\"1552\":1,\"1556\":1,\"1558\":1,\"1560\":1,\"1561\":1,\"1563\":1,\"1568\":1,\"1569\":1,\"1571\":1,\"1646\":2,\"1740\":2,\"1743\":4,\"1747\":1,\"1753\":4,\"1754\":7,\"1755\":6,\"1758\":4,\"1772\":2,\"1773\":1,\"1774\":2,\"1780\":2,\"1789\":1,\"1798\":2,\"1806\":3,\"1820\":1,\"1823\":10,\"1826\":3,\"1829\":2,\"1839\":2,\"2278\":5,\"2359\":3,\"2371\":3,\"2375\":3,\"2379\":3,\"2383\":3,\"2387\":3,\"2391\":3,\"2395\":1,\"2399\":3,\"2403\":4,\"2407\":4,\"2411\":9,\"2430\":3,\"2434\":3,\"2438\":5,\"2442\":3,\"2446\":4,\"2450\":4,\"2462\":4,\"2473\":1,\"2528\":1,\"2562\":4,\"2566\":1,\"2744\":1,\"2864\":1,\"2868\":1,\"2872\":2,\"2876\":1,\"2880\":1,\"2884\":2}}],[\"nested\",{\"1\":{\"21\":1,\"64\":1}}],[\"never\",{\"0\":{\"1416\":1},\"1\":{\"21\":2,\"64\":2,\"1378\":2,\"1379\":1,\"1381\":1,\"1382\":1,\"1416\":16,\"1460\":1}}],[\"nofallthroughcasesinswitch\",{\"1\":{\"1454\":1}}],[\"nounusedparameters\",{\"1\":{\"1454\":1}}],[\"nounusedlocals\",{\"1\":{\"1454\":1}}],[\"noimplicitreturns\",{\"1\":{\"1454\":1}}],[\"noimplicitthis\",{\"1\":{\"1454\":1}}],[\"noimplicitany\",{\"1\":{\"1454\":1}}],[\"noemit\",{\"1\":{\"1454\":1}}],[\"normalscale\",{\"0\":{\"2712\":1},\"1\":{\"2710\":1}}],[\"normalmaptype\",{\"0\":{\"2711\":1}}],[\"normalmap\",{\"0\":{\"2710\":1}}],[\"normal\",{\"1\":{\"2462\":1,\"2710\":1}}],[\"normaluser\",{\"1\":{\"1753\":2}}],[\"normalized\",{\"1\":{\"2741\":1}}],[\"normalizenormals\",{\"0\":{\"2312\":1}}],[\"normalize\",{\"1\":{\"38\":3,\"81\":3}}],[\"north\",{\"1\":{\"1407\":6,\"1408\":3}}],[\"nopush\",{\"1\":{\"1152\":1,\"1153\":2}}],[\"nobody\",{\"1\":{\"1152\":1}}],[\"noarch\",{\"1\":{\"1141\":2}}],[\"nodmeon\",{\"1\":{\"864\":1}}],[\"nodetype\",{\"1\":{\"1476\":1,\"1528\":1}}],[\"nodelay\",{\"1\":{\"1153\":1}}],[\"nodelay的解释\",{\"1\":{\"1153\":1}}],[\"nodelist\",{\"0\":{\"725\":1},\"1\":{\"721\":1,\"725\":5}}],[\"node与浏览器event\",{\"0\":{\"383\":1}}],[\"nodejs和浏览器的事件循环流程对比如下\",{\"1\":{\"383\":1}}],[\"nodejs\",{\"1\":{\"378\":1}}],[\"nodename\",{\"1\":{\"237\":1}}],[\"node\",{\"0\":{\"377\":1,\"474\":1,\"560\":1,\"864\":1},\"1\":{\"15\":1,\"19\":2,\"20\":1,\"21\":1,\"22\":1,\"40\":1,\"58\":1,\"62\":2,\"63\":1,\"64\":1,\"65\":1,\"334\":3,\"353\":1,\"376\":2,\"378\":3,\"380\":1,\"383\":6,\"390\":1,\"444\":1,\"448\":3,\"450\":2,\"453\":1,\"454\":1,\"465\":3,\"474\":5,\"560\":1,\"766\":4,\"767\":4,\"864\":1,\"866\":1,\"1332\":4,\"1454\":3,\"1499\":1,\"1505\":1,\"1551\":4,\"1583\":3,\"1641\":1,\"1653\":6,\"1730\":1}}],[\"nomodule\",{\"1\":{\"473\":5}}],[\"nonnullable<string\",{\"1\":{\"1381\":2}}],[\"nonnullable<t>\",{\"1\":{\"1381\":2}}],[\"nonnullable\",{\"0\":{\"1381\":1}}],[\"nonu\",{\"1\":{\"1068\":1}}],[\"non\",{\"1\":{\"326\":1,\"885\":1}}],[\"none的节点\",{\"1\":{\"1707\":1}}],[\"none\",{\"1\":{\"20\":1,\"63\":1,\"226\":1,\"817\":1,\"1256\":1}}],[\"now\",{\"1\":{\"299\":1,\"343\":1,\"828\":3,\"891\":1,\"920\":2,\"1212\":2,\"1235\":2,\"1311\":2}}],[\"notsure\",{\"1\":{\"1417\":3}}],[\"notice\",{\"1\":{\"1152\":1}}],[\"notifyid\",{\"1\":{\"128\":5}}],[\"notify\",{\"1\":{\"122\":1,\"123\":2,\"127\":2,\"128\":1,\"1560\":1,\"1562\":1,\"1563\":1,\"1564\":1,\"1571\":1,\"1735\":1,\"1806\":2}}],[\"notifyblecharacteristicvaluechange\",{\"1\":{\"120\":1,\"123\":2,\"127\":1,\"128\":3}}],[\"notes\",{\"1\":{\"993\":4,\"1146\":1}}],[\"not\",{\"1\":{\"248\":1,\"261\":1,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"445\":1,\"467\":1,\"500\":1,\"507\":1,\"511\":1,\"656\":1,\"898\":3,\"1256\":1,\"1334\":2,\"1338\":3,\"1340\":4,\"1370\":2,\"1414\":3,\"1428\":2,\"1442\":1,\"1612\":1,\"2754\":1,\"2887\":1}}],[\"no\",{\"1\":{\"19\":4,\"21\":8,\"31\":1,\"62\":4,\"64\":8,\"74\":1,\"202\":1,\"250\":1,\"568\":2,\"578\":4,\"597\":3,\"981\":2,\"1021\":1,\"1032\":1,\"1153\":1,\"1389\":5,\"1411\":1,\"1600\":1,\"1604\":2,\"1628\":1}}],[\"n\",{\"1\":{\"16\":1,\"59\":1,\"109\":2,\"282\":1,\"388\":1,\"596\":14,\"677\":1,\"797\":2,\"919\":1,\"921\":3,\"944\":1,\"959\":2,\"960\":1,\"983\":1,\"984\":3,\"986\":1,\"989\":3,\"992\":1,\"993\":1,\"1001\":1,\"1003\":1,\"1006\":6,\"1009\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1061\":2,\"1062\":2,\"1063\":1,\"1084\":1,\"1104\":1,\"1106\":1,\"1125\":1,\"1153\":1,\"1400\":1,\"1493\":4,\"1550\":2,\"1551\":1,\"1571\":4,\"1601\":2,\"1604\":1,\"1646\":1,\"2213\":2}}],[\"dhcp\",{\"0\":{\"2210\":1},\"1\":{\"2214\":1}}],[\"dsttexture\",{\"0\":{\"2818\":1}}],[\"dsp采用一种哈佛结构\",{\"1\":{\"2179\":1}}],[\"dsp处理器对系统结构和指令进行了特殊设计\",{\"1\":{\"2179\":1}}],[\"dsp\",{\"1\":{\"2179\":1}}],[\"dssa\",{\"0\":{\"1997\":1}}],[\"dss的作用在于提高决策的有效性而不是提高决策的效率\",{\"1\":{\"1865\":1}}],[\"dss主要用于解决半结构化及非结构化问题\",{\"1\":{\"1865\":1}}],[\"dss用来支援用户作决策而不是代替用户作决策\",{\"1\":{\"1865\":1}}],[\"dss\",{\"0\":{\"1865\":1}}],[\"dpos\",{\"1\":{\"2133\":1}}],[\"dpr\",{\"1\":{\"998\":1}}],[\"dns服务器直接给出负载均衡后的服务器ip\",{\"1\":{\"2077\":1}}],[\"dns域名解析负载均衡就是在用户请求dns服务器\",{\"1\":{\"2077\":1}}],[\"dns域名解析负载均衡\",{\"1\":{\"2077\":1}}],[\"dns\",{\"0\":{\"1686\":1,\"2211\":1},\"1\":{\"1684\":1,\"1686\":2,\"1687\":1}}],[\"dns缓存\",{\"1\":{\"1684\":1}}],[\"dns查询\",{\"0\":{\"1682\":1},\"1\":{\"1676\":1}}],[\"dname\",{\"1\":{\"341\":3}}],[\"d3\",{\"1\":{\"1250\":1,\"1288\":5}}],[\"d0\",{\"1\":{\"1063\":1}}],[\"d$\",{\"1\":{\"1063\":1}}],[\"dg\",{\"1\":{\"1063\":1}}],[\"dd\",{\"1\":{\"1056\":1,\"1063\":1}}],[\"drawbuffers\",{\"1\":{\"2751\":1}}],[\"draw\",{\"1\":{\"2286\":2,\"2751\":1}}],[\"drawrange\",{\"0\":{\"2285\":1},\"1\":{\"2319\":1}}],[\"dr\",{\"1\":{\"1029\":2}}],[\"dropzone\",{\"1\":{\"392\":3}}],[\"drop\",{\"1\":{\"392\":2}}],[\"dvcs\",{\"1\":{\"1577\":1}}],[\"dv\",{\"1\":{\"1019\":1}}],[\"d或\",{\"1\":{\"1009\":1,\"1021\":1}}],[\"dark\",{\"1\":{\"1220\":1,\"1222\":1,\"1223\":1,\"1227\":1,\"1265\":1}}],[\"danger\",{\"1\":{\"1162\":1,\"1177\":1,\"1186\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"daemon\",{\"1\":{\"1137\":1}}],[\"days\",{\"1\":{\"1006\":2}}],[\"date2\",{\"1\":{\"805\":1}}],[\"date1\",{\"1\":{\"805\":1}}],[\"date\",{\"1\":{\"299\":1,\"343\":1,\"656\":1,\"657\":2,\"659\":2,\"689\":1,\"765\":1,\"775\":2,\"787\":1,\"891\":1,\"1176\":1,\"1185\":1,\"1211\":4,\"1212\":2,\"1366\":4,\"1435\":2,\"1468\":1}}],[\"datetime=\",{\"1\":{\"215\":1}}],[\"data属性就是传入的data\",{\"1\":{\"1533\":1}}],[\"data=\",{\"1\":{\"1267\":1}}],[\"data=xhr\",{\"1\":{\"819\":1}}],[\"datas\",{\"1\":{\"625\":1}}],[\"data2\",{\"1\":{\"590\":4,\"591\":2,\"1730\":6}}],[\"data1\",{\"1\":{\"590\":4,\"591\":2,\"1730\":6}}],[\"data对象是回调范围的一部分\",{\"1\":{\"430\":1}}],[\"dataurl\",{\"1\":{\"414\":1}}],[\"datatransfer\",{\"1\":{\"390\":1,\"392\":2}}],[\"dataview实例有以下常用属性\",{\"1\":{\"410\":1}}],[\"dataview视图可以通过构造函数来创建\",{\"1\":{\"409\":1}}],[\"dataview视图提供更多操作选项\",{\"1\":{\"408\":1}}],[\"dataviews\",{\"1\":{\"397\":1}}],[\"dataview\",{\"0\":{\"408\":1,\"409\":1},\"1\":{\"125\":4,\"127\":4,\"397\":2,\"401\":2,\"408\":2,\"409\":5,\"410\":1,\"411\":2,\"412\":1}}],[\"data\",{\"1\":{\"83\":1,\"119\":3,\"127\":3,\"128\":3,\"343\":1,\"394\":1,\"413\":1,\"430\":3,\"462\":3,\"560\":2,\"565\":3,\"569\":24,\"572\":2,\"590\":2,\"591\":4,\"624\":4,\"625\":1,\"766\":9,\"767\":11,\"819\":3,\"821\":3,\"822\":3,\"823\":3,\"859\":4,\"861\":2,\"864\":1,\"865\":7,\"867\":2,\"1168\":3,\"1248\":1,\"1249\":1,\"1343\":1,\"1475\":1,\"1476\":2,\"1477\":1,\"1483\":1,\"1490\":1,\"1514\":5,\"1517\":1,\"1521\":2,\"1527\":5,\"1528\":2,\"1533\":15,\"1534\":7,\"1539\":1,\"1542\":1,\"1547\":1,\"1556\":1,\"1560\":2,\"1563\":2,\"1568\":1}}],[\"dlfpcsu\",{\"1\":{\"986\":1}}],[\"d设定时间与日期\",{\"1\":{\"981\":1}}],[\"d<进行动作>\",{\"1\":{\"1014\":1}}],[\"d<巨集名称>或\",{\"1\":{\"1009\":1}}],[\"d<日期时间>\",{\"1\":{\"981\":1}}],[\"d<登入目录>\",{\"1\":{\"944\":1}}],[\"d登入目录>\",{\"1\":{\"950\":1}}],[\"d1g\",{\"1\":{\"1063\":1}}],[\"d1\",{\"1\":{\"663\":1}}],[\"dynamic\",{\"1\":{\"471\":2,\"1146\":1}}],[\"dconnected\",{\"1\":{\"341\":3}}],[\"db\",{\"1\":{\"1671\":4}}],[\"db=e\",{\"1\":{\"1671\":1}}],[\"dbconnector\",{\"1\":{\"334\":1}}],[\"dblclick\",{\"1\":{\"233\":1}}],[\"dump\",{\"1\":{\"2080\":1}}],[\"during\",{\"1\":{\"1309\":1}}],[\"duration\",{\"1\":{\"21\":2,\"64\":2}}],[\"duplicateremoval\",{\"1\":{\"128\":2}}],[\"dts\",{\"1\":{\"39\":2}}],[\"dithering\",{\"0\":{\"2673\":1}}],[\"different\",{\"1\":{\"2710\":1}}],[\"difference\",{\"1\":{\"271\":1,\"805\":1}}],[\"diffuse\",{\"1\":{\"2462\":1}}],[\"diff对比的是工作区与暂存区的共同文件\",{\"1\":{\"1633\":1}}],[\"diff对比的是工作区与最后一次commit提交的共同文件\",{\"1\":{\"1633\":1}}],[\"diff算法原理\",{\"0\":{\"1475\":1},\"2\":{\"1482\":1}}],[\"diff\",{\"0\":{\"1008\":1},\"1\":{\"1008\":2,\"1009\":3,\"1010\":2,\"1480\":1,\"1487\":1,\"1632\":1,\"1636\":2}}],[\"did\",{\"1\":{\"341\":3}}],[\"divisions\",{\"0\":{\"2335\":1,\"2336\":1,\"2338\":1,\"2425\":1,\"2426\":1},\"1\":{\"2335\":1,\"2336\":1,\"2425\":1,\"2426\":1}}],[\"div1\",{\"1\":{\"1820\":1}}],[\"div\",{\"1\":{\"178\":3,\"205\":2,\"207\":2,\"339\":2,\"434\":6,\"1343\":3,\"1527\":2,\"1539\":1,\"1547\":1,\"1549\":2,\"1556\":1,\"1568\":1,\"1706\":1}}],[\"div>`\",{\"1\":{\"1475\":1,\"1483\":1,\"1490\":1,\"1539\":1,\"1547\":1,\"1556\":1,\"1568\":1}}],[\"div>\",{\"1\":{\"83\":1,\"172\":1,\"178\":1,\"234\":2,\"241\":4,\"338\":8,\"339\":4,\"340\":12,\"341\":10,\"342\":7,\"343\":10,\"392\":1,\"1161\":2,\"1162\":1,\"1163\":1,\"1167\":1,\"1168\":1,\"1176\":2,\"1177\":1,\"1178\":1,\"1185\":2,\"1186\":1,\"1187\":1,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1210\":2,\"1211\":1,\"1212\":1,\"1219\":1,\"1220\":1,\"1222\":1,\"1243\":1,\"1244\":3,\"1251\":1,\"1255\":7,\"1256\":3,\"1265\":5,\"1267\":7,\"1269\":2,\"1281\":1,\"1282\":1,\"1283\":1,\"1285\":1,\"1289\":1,\"1290\":1,\"1311\":2,\"1312\":1,\"1315\":2,\"1320\":4,\"1321\":4,\"1323\":4,\"1324\":5,\"1476\":2,\"1550\":2,\"1705\":1}}],[\"dirty代表取值时是否执行用户提供的方法\",{\"1\":{\"1571\":1}}],[\"dirty\",{\"1\":{\"1570\":1,\"1571\":4}}],[\"direct\",{\"1\":{\"1501\":1}}],[\"directory\",{\"1\":{\"1001\":12,\"1025\":4}}],[\"directives\",{\"1\":{\"88\":5}}],[\"directiveslist\",{\"1\":{\"88\":3}}],[\"directive\",{\"1\":{\"87\":1,\"88\":1,\"1766\":1}}],[\"directionallight\",{\"0\":{\"2867\":1,\"2868\":1},\"1\":{\"2868\":3}}],[\"direction\",{\"1\":{\"21\":1,\"64\":1,\"1407\":9,\"1408\":3,\"1428\":3}}],[\"dirname\",{\"1\":{\"860\":2,\"861\":2,\"862\":2,\"863\":2,\"968\":2,\"975\":1,\"978\":1}}],[\"dir\",{\"1\":{\"109\":1,\"1016\":2,\"1407\":2,\"1408\":1,\"1428\":1,\"1460\":1}}],[\"dir为项目所在的绝对路径\",{\"1\":{\"109\":1}}],[\"displacementbias\",{\"0\":{\"2604\":1,\"2705\":1}}],[\"displacementscale\",{\"0\":{\"2603\":1,\"2704\":1}}],[\"displacementmap\",{\"0\":{\"2602\":1,\"2703\":1}}],[\"displayvalue\",{\"1\":{\"1283\":1,\"1285\":1}}],[\"displayed\",{\"1\":{\"1256\":1}}],[\"displayinfo\",{\"1\":{\"836\":3}}],[\"displaymsg\",{\"1\":{\"343\":9}}],[\"display为\",{\"1\":{\"148\":1}}],[\"display\",{\"1\":{\"21\":1,\"64\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":2,\"174\":1,\"178\":1,\"184\":1,\"207\":1,\"226\":1,\"1780\":3}}],[\"dispose\",{\"0\":{\"2307\":1,\"2687\":1,\"2819\":1}}],[\"dispatch\",{\"1\":{\"1162\":3,\"1167\":3,\"1168\":4,\"1177\":2,\"1186\":2,\"1188\":2,\"1273\":11,\"1274\":6,\"1287\":2}}],[\"discovery\",{\"1\":{\"118\":2,\"119\":2,\"127\":2}}],[\"distance\",{\"0\":{\"2340\":1}}],[\"distributed\",{\"1\":{\"1577\":1}}],[\"dist\",{\"1\":{\"19\":1,\"20\":1,\"21\":1,\"62\":1,\"63\":1,\"64\":1,\"1501\":1}}],[\"dodecahedrongeometry\",{\"0\":{\"2362\":1,\"2363\":1}}],[\"dodgerblue\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"doesn\",{\"1\":{\"1369\":1}}],[\"does\",{\"1\":{\"1256\":1,\"1338\":1,\"1414\":3}}],[\"download\",{\"1\":{\"1131\":1,\"1582\":1}}],[\"down按键\",{\"1\":{\"1061\":1}}],[\"down\",{\"1\":{\"1057\":1,\"1428\":2}}],[\"doss应具有的特征\",{\"1\":{\"1865\":1}}],[\"dos\",{\"1\":{\"1018\":1}}],[\"dosomething\",{\"1\":{\"432\":3,\"1490\":2}}],[\"do\",{\"0\":{\"890\":1},\"1\":{\"795\":1,\"890\":2}}],[\"doubleside\",{\"1\":{\"2383\":1,\"2399\":1,\"2674\":1,\"2675\":1}}],[\"double\",{\"1\":{\"642\":1,\"1468\":3}}],[\"doit\",{\"1\":{\"596\":10}}],[\"done\",{\"1\":{\"394\":1,\"587\":5,\"588\":7,\"590\":1,\"591\":1,\"1302\":2,\"1366\":5}}],[\"dogname\",{\"1\":{\"321\":6,\"643\":6}}],[\"dog\",{\"1\":{\"316\":9,\"317\":1,\"478\":4,\"693\":2,\"1071\":1}}],[\"domelement\",{\"0\":{\"2797\":2},\"1\":{\"2797\":1}}],[\"domcontentloaded\",{\"1\":{\"1707\":4}}],[\"dom中操作有很多常见的逻辑\",{\"1\":{\"1478\":1}}],[\"dom节点等\",{\"1\":{\"888\":1}}],[\"domain=\",{\"1\":{\"1659\":1}}],[\"domain\",{\"0\":{\"867\":1},\"1\":{\"867\":3,\"1659\":3,\"1660\":1,\"1677\":2}}],[\"dom引用在函数范围内\",{\"1\":{\"434\":1}}],[\"domstring\",{\"1\":{\"388\":1}}],[\"domsubtreemodified\",{\"1\":{\"233\":1}}],[\"dom3\",{\"1\":{\"230\":1,\"233\":1}}],[\"dom2\",{\"1\":{\"230\":1}}],[\"dom1\",{\"1\":{\"230\":1}}],[\"dom0\",{\"1\":{\"230\":1,\"231\":1}}],[\"dom事件机制\",{\"0\":{\"229\":1}}],[\"dom\",{\"0\":{\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"434\":1,\"437\":1,\"1250\":2,\"1281\":1,\"1527\":1,\"1528\":2},\"1\":{\"223\":3,\"230\":7,\"232\":1,\"233\":2,\"234\":2,\"255\":3,\"337\":1,\"370\":1,\"432\":1,\"434\":4,\"435\":1,\"436\":1,\"437\":3,\"558\":1,\"724\":4,\"839\":1,\"855\":1,\"1157\":1,\"1167\":1,\"1175\":1,\"1182\":1,\"1199\":2,\"1201\":2,\"1203\":2,\"1204\":1,\"1243\":1,\"1246\":1,\"1247\":1,\"1250\":2,\"1255\":2,\"1256\":3,\"1258\":2,\"1259\":2,\"1260\":1,\"1281\":1,\"1288\":1,\"1290\":1,\"1312\":1,\"1315\":1,\"1332\":1,\"1343\":1,\"1356\":1,\"1475\":3,\"1478\":2,\"1511\":2,\"1520\":4,\"1521\":1,\"1527\":1,\"1528\":2,\"1653\":2,\"1707\":4}}],[\"dollar\",{\"1\":{\"21\":1,\"64\":1}}],[\"doc目录下多层目录的所有以\",{\"1\":{\"1583\":1}}],[\"doc目录下的\",{\"1\":{\"1583\":1}}],[\"doc\",{\"1\":{\"1146\":5,\"1583\":2}}],[\"doctype\",{\"1\":{\"436\":1,\"1839\":1}}],[\"documentelement\",{\"1\":{\"206\":2,\"234\":2}}],[\"document\",{\"0\":{\"867\":1},\"1\":{\"206\":2,\"226\":1,\"231\":1,\"232\":1,\"234\":8,\"237\":1,\"240\":2,\"241\":4,\"339\":6,\"344\":2,\"388\":1,\"389\":1,\"391\":1,\"392\":1,\"395\":4,\"413\":2,\"414\":3,\"432\":5,\"434\":8,\"436\":5,\"437\":3,\"558\":1,\"632\":1,\"659\":1,\"724\":3,\"725\":1,\"817\":2,\"821\":1,\"822\":2,\"823\":1,\"859\":3,\"861\":1,\"862\":1,\"863\":2,\"867\":4,\"902\":1,\"1152\":1,\"1157\":1,\"1167\":1,\"1175\":1,\"1182\":1,\"1243\":1,\"1244\":1,\"1247\":1,\"1256\":1,\"1315\":1,\"1343\":1,\"1476\":2,\"1525\":1,\"1528\":2,\"1542\":1,\"1548\":1,\"1653\":4,\"1659\":3,\"1661\":1,\"1707\":4,\"1762\":1,\"1832\":1,\"1839\":5,\"2797\":1}}],[\"doclock\",{\"1\":{\"20\":1,\"63\":1}}],[\"docs\",{\"1\":{\"16\":2,\"19\":1,\"30\":1,\"59\":2,\"62\":1,\"73\":1,\"1153\":1}}],[\"determine\",{\"1\":{\"2835\":1}}],[\"details\",{\"1\":{\"2788\":1,\"2835\":1}}],[\"detachedelement\",{\"1\":{\"437\":2}}],[\"detacheddiv\",{\"1\":{\"434\":4}}],[\"detached\",{\"1\":{\"434\":3}}],[\"detachevent\",{\"1\":{\"232\":1}}],[\"debug\",{\"0\":{\"2794\":1}}],[\"debounced\",{\"1\":{\"831\":3}}],[\"debounce\",{\"1\":{\"829\":1,\"831\":3}}],[\"derivatives\",{\"1\":{\"2751\":2}}],[\"dereference\",{\"1\":{\"1032\":1}}],[\"dead\",{\"1\":{\"1334\":1}}],[\"deny\",{\"1\":{\"1152\":2}}],[\"dep实例存放在watcher里面\",{\"1\":{\"1562\":1}}],[\"dep实例的唯一标识\",{\"1\":{\"1559\":1,\"1562\":1}}],[\"dependent\",{\"1\":{\"2835\":1}}],[\"dependency2\",{\"1\":{\"463\":1,\"1210\":2}}],[\"dependency1\",{\"1\":{\"463\":1,\"1210\":2}}],[\"dependencies\",{\"1\":{\"458\":4,\"464\":1,\"1211\":2,\"1241\":2,\"1244\":1,\"1264\":2}}],[\"dependarray\",{\"1\":{\"1563\":3}}],[\"depend\",{\"1\":{\"1560\":1,\"1562\":1,\"1563\":4,\"1570\":1,\"1571\":4}}],[\"dep就会保存watcher\",{\"1\":{\"1560\":1,\"1563\":1}}],[\"dep和watcher是多对多的关系\",{\"1\":{\"1559\":1,\"1562\":1}}],[\"dep\",{\"0\":{\"1559\":1,\"1562\":1},\"1\":{\"1493\":5,\"1559\":5,\"1560\":8,\"1561\":6,\"1562\":8,\"1563\":8,\"1564\":1,\"1570\":1,\"1571\":12}}],[\"depsid\",{\"1\":{\"1493\":3,\"1561\":3,\"1571\":3}}],[\"deps\",{\"1\":{\"1211\":2,\"1493\":2,\"1561\":2,\"1571\":4}}],[\"depth扩展\",{\"1\":{\"2795\":1}}],[\"depthwrite\",{\"0\":{\"2653\":1}}],[\"depthfunc\",{\"0\":{\"2651\":1}}],[\"depthtest\",{\"0\":{\"2652\":1},\"1\":{\"2442\":1}}],[\"depth\",{\"0\":{\"2812\":1},\"1\":{\"312\":1,\"739\":3,\"2407\":1,\"2751\":1,\"2788\":2,\"2798\":1}}],[\"destroyed\",{\"1\":{\"1485\":1}}],[\"dest\",{\"1\":{\"1001\":11,\"1501\":1}}],[\"destination\",{\"1\":{\"338\":1,\"999\":3,\"2835\":1}}],[\"descriptor\",{\"1\":{\"1464\":2,\"1468\":5}}],[\"description=nginx\",{\"1\":{\"1137\":1}}],[\"description\",{\"1\":{\"316\":2,\"1375\":1,\"1380\":2}}],[\"description和keywords\",{\"1\":{\"219\":1}}],[\"desc\",{\"1\":{\"1390\":1}}],[\"descending\",{\"1\":{\"21\":1,\"64\":1}}],[\"demotwo>\",{\"1\":{\"1315\":1}}],[\"demotwo\",{\"1\":{\"1315\":4}}],[\"demoone>\",{\"1\":{\"1315\":3}}],[\"demoone\",{\"1\":{\"1315\":8}}],[\"demo\",{\"1\":{\"338\":1,\"340\":4,\"341\":1,\"342\":1,\"343\":1,\"1315\":1}}],[\"de\",{\"1\":{\"286\":2,\"678\":2}}],[\"delivery\",{\"1\":{\"2081\":1}}],[\"del\",{\"1\":{\"1057\":1}}],[\"delegation\",{\"1\":{\"235\":1}}],[\"deleteattribute\",{\"0\":{\"2313\":1}}],[\"deleteuser\",{\"1\":{\"2039\":1}}],[\"deletedb\",{\"1\":{\"1671\":1}}],[\"deletedatabase\",{\"1\":{\"1671\":2}}],[\"delete操作符\",{\"0\":{\"640\":1}}],[\"deleteelement\",{\"1\":{\"434\":4}}],[\"delete\",{\"0\":{\"102\":1,\"640\":1},\"1\":{\"239\":1,\"271\":2,\"640\":2,\"864\":1,\"1374\":1,\"1467\":1,\"1595\":1,\"1621\":1,\"2039\":1}}],[\"delay\",{\"1\":{\"21\":2,\"64\":2,\"1188\":3}}],[\"decrese\",{\"1\":{\"1817\":1}}],[\"decrement\",{\"1\":{\"1167\":4,\"1168\":2,\"1273\":2,\"1274\":4}}],[\"dec\",{\"1\":{\"1029\":1}}],[\"decoder\",{\"1\":{\"1501\":1}}],[\"decorate\",{\"1\":{\"1630\":1}}],[\"decorated\",{\"1\":{\"1469\":1}}],[\"decorated`\",{\"1\":{\"1469\":1}}],[\"decorators\",{\"1\":{\"1465\":4}}],[\"decoration\",{\"1\":{\"21\":1,\"64\":1}}],[\"decompress或\",{\"1\":{\"1021\":1}}],[\"declare\",{\"0\":{\"1108\":1,\"1109\":1},\"1\":{\"1109\":1,\"1110\":1,\"1111\":1,\"1112\":1,\"1355\":1,\"1466\":1,\"1467\":1,\"1468\":1,\"1469\":1}}],[\"declared\",{\"1\":{\"250\":2}}],[\"declarations\",{\"1\":{\"21\":1,\"64\":1}}],[\"declaration\",{\"1\":{\"21\":5,\"64\":5,\"1454\":1}}],[\"deeppartial<t\",{\"1\":{\"1372\":1}}],[\"deeppartial<t>\",{\"1\":{\"1372\":2}}],[\"deepcopy\",{\"1\":{\"768\":2}}],[\"deep\",{\"1\":{\"21\":4,\"64\":4,\"764\":1,\"1490\":2}}],[\"defs\",{\"1\":{\"953\":1}}],[\"defer与async区别\",{\"1\":{\"1707\":1}}],[\"defer><\",{\"1\":{\"1707\":2}}],[\"deferredtext\",{\"1\":{\"1235\":4}}],[\"deferredvalue\",{\"1\":{\"1234\":6,\"1236\":1}}],[\"defer\",{\"1\":{\"473\":1,\"1707\":2}}],[\"definition\",{\"1\":{\"457\":1,\"464\":1,\"465\":1}}],[\"defines\",{\"0\":{\"2650\":1,\"2750\":1},\"1\":{\"2750\":1,\"2754\":1}}],[\"definecomputed\",{\"1\":{\"1569\":1,\"1570\":1}}],[\"defineconfig\",{\"1\":{\"39\":1}}],[\"definereactive\",{\"1\":{\"1534\":3,\"1560\":1,\"1563\":1}}],[\"defineproperty数据劫持核心\",{\"1\":{\"1534\":1,\"1560\":1,\"1563\":1}}],[\"defineproperty\",{\"1\":{\"885\":1,\"1467\":2,\"1521\":1,\"1533\":1,\"1534\":3,\"1535\":4,\"1560\":1,\"1563\":1,\"1570\":1}}],[\"defineproperties\",{\"1\":{\"884\":1}}],[\"defined\",{\"1\":{\"248\":1,\"445\":1,\"467\":1,\"507\":1,\"511\":1,\"898\":3}}],[\"define\",{\"1\":{\"19\":1,\"62\":1,\"458\":2,\"463\":5,\"464\":3,\"465\":4,\"2650\":1,\"2750\":3,\"2754\":1}}],[\"def\",{\"1\":{\"94\":1,\"286\":2,\"526\":1,\"678\":2}}],[\"defaultattributevalues\",{\"0\":{\"2749\":1},\"1\":{\"2749\":1}}],[\"defaultloadingmanager\",{\"0\":{\"2453\":1,\"2454\":1},\"1\":{\"2455\":4}}],[\"defaulttagre\",{\"1\":{\"1551\":4}}],[\"defaultslot\",{\"1\":{\"1315\":2}}],[\"defaultprops\",{\"1\":{\"1315\":1,\"1320\":2,\"1323\":2}}],[\"defaultvalue\",{\"1\":{\"1217\":3}}],[\"default\",{\"1\":{\"19\":1,\"39\":4,\"62\":1,\"82\":1,\"83\":4,\"87\":1,\"88\":1,\"128\":2,\"274\":5,\"275\":1,\"276\":4,\"277\":2,\"321\":4,\"322\":2,\"334\":1,\"469\":4,\"470\":1,\"643\":4,\"644\":2,\"805\":1,\"806\":4,\"807\":2,\"1146\":1,\"1150\":6,\"1152\":1,\"1153\":4,\"1158\":1,\"1159\":3,\"1160\":2,\"1161\":2,\"1162\":2,\"1163\":1,\"1167\":3,\"1168\":3,\"1173\":2,\"1174\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1180\":1,\"1181\":1,\"1183\":3,\"1184\":2,\"1185\":1,\"1186\":1,\"1187\":1,\"1188\":2,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1220\":1,\"1222\":1,\"1227\":1,\"1235\":1,\"1251\":1,\"1255\":1,\"1256\":1,\"1265\":1,\"1267\":2,\"1269\":1,\"1273\":1,\"1274\":2,\"1281\":1,\"1287\":1,\"1289\":1,\"1299\":1,\"1300\":1,\"1311\":1,\"1312\":1,\"1315\":2,\"1320\":3,\"1321\":4,\"1323\":3,\"1324\":4,\"1454\":1,\"1484\":1,\"1492\":1,\"1493\":1,\"1502\":1,\"1503\":1,\"1504\":1,\"1505\":1,\"1514\":1,\"1527\":1,\"1528\":1,\"1533\":1,\"1535\":1,\"1540\":1,\"1543\":1,\"1557\":1,\"1559\":1,\"1561\":1,\"1562\":1,\"1564\":1,\"1571\":1,\"1753\":1,\"1754\":1,\"1817\":1,\"2754\":1,\"2761\":1,\"2779\":1,\"2788\":2}}],[\"devops等技术为基础建立的一套云技术产品体系\",{\"1\":{\"2052\":1}}],[\"development\",{\"1\":{\"1334\":1}}],[\"devel\",{\"1\":{\"1133\":2}}],[\"devtools\",{\"1\":{\"435\":1,\"437\":1}}],[\"device<\",{\"1\":{\"341\":1}}],[\"devicewidth\",{\"1\":{\"206\":9}}],[\"devicepixelratio\",{\"1\":{\"202\":1}}],[\"device\",{\"1\":{\"128\":11,\"202\":2,\"341\":11,\"342\":1,\"343\":1}}],[\"devicehistorylist\",{\"1\":{\"128\":12}}],[\"devicename\",{\"1\":{\"128\":18}}],[\"devicelist\",{\"1\":{\"128\":4}}],[\"devices\",{\"1\":{\"118\":2,\"119\":1,\"127\":1,\"128\":3}}],[\"deviceid\",{\"1\":{\"118\":2,\"119\":6,\"121\":2,\"122\":2,\"123\":2,\"125\":2,\"126\":2,\"127\":16,\"128\":21}}],[\"dev\",{\"1\":{\"5\":1,\"25\":1,\"48\":1,\"68\":1,\"112\":1,\"913\":1,\"1332\":1}}],[\"d\",{\"1\":{\"14\":1,\"21\":1,\"29\":1,\"36\":1,\"38\":1,\"39\":3,\"57\":1,\"63\":2,\"64\":1,\"72\":1,\"79\":1,\"80\":1,\"81\":1,\"241\":8,\"254\":2,\"303\":2,\"304\":2,\"305\":2,\"329\":2,\"332\":2,\"508\":2,\"526\":2,\"621\":2,\"631\":1,\"633\":2,\"635\":2,\"646\":2,\"719\":2,\"765\":2,\"844\":2,\"921\":3,\"944\":3,\"945\":1,\"950\":1,\"951\":1,\"972\":1,\"986\":1,\"989\":2,\"998\":1,\"1003\":1,\"1006\":1,\"1009\":1,\"1018\":2,\"1029\":2,\"1061\":1,\"1121\":1,\"1125\":1,\"1153\":3,\"1355\":2,\"1357\":6,\"1382\":1,\"1409\":2,\"1454\":1,\"1595\":2,\"1621\":1,\"1650\":6,\"1707\":4,\"1730\":1}}],[\"gl\",{\"1\":{\"2795\":9}}],[\"glsl3\",{\"1\":{\"2754\":1}}],[\"glsl1\",{\"1\":{\"2754\":1}}],[\"glslversion\",{\"0\":{\"2754\":1}}],[\"glsl\",{\"1\":{\"2741\":3,\"2744\":2,\"2754\":2}}],[\"gltfloader\",{\"1\":{\"2462\":1}}],[\"gltf\",{\"1\":{\"2462\":4}}],[\"globalname\",{\"1\":{\"896\":4}}],[\"globalthis\",{\"1\":{\"467\":1}}],[\"globalspropvalue\",{\"1\":{\"39\":1}}],[\"global\",{\"1\":{\"21\":1,\"37\":1,\"64\":1,\"104\":1,\"261\":7,\"326\":1,\"353\":1,\"465\":1,\"659\":1,\"896\":3,\"1356\":1,\"1484\":1,\"1492\":1,\"1504\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1591\":1,\"1653\":2}}],[\"gdbms\",{\"1\":{\"2230\":1}}],[\"g2c\",{\"1\":{\"1869\":1}}],[\"g2b\",{\"1\":{\"1869\":1}}],[\"g2e\",{\"1\":{\"1869\":1}}],[\"g2g\",{\"1\":{\"1869\":1}}],[\"garbage\",{\"1\":{\"1769\":1}}],[\"gain\",{\"1\":{\"338\":3}}],[\"gmt\",{\"1\":{\"1659\":1}}],[\"gmt+0800\",{\"1\":{\"775\":1,\"787\":1}}],[\"gpu中集成了同时运行在gh的频率上的成千上万个core\",{\"1\":{\"2179\":1}}],[\"gpu目前已广泛用于各行各业\",{\"1\":{\"2179\":1}}],[\"gpu采用了核心技术\",{\"1\":{\"2179\":1}}],[\"gpu可用于个人电脑\",{\"1\":{\"2179\":1}}],[\"gpu是图形处理单元的缩写\",{\"1\":{\"2179\":1}}],[\"gpu\",{\"1\":{\"2179\":1,\"2180\":1,\"2277\":1,\"2741\":2,\"2743\":1,\"2833\":1,\"2835\":1}}],[\"gpg\",{\"1\":{\"1616\":1}}],[\"gpl\",{\"1\":{\"94\":1}}],[\"guard\",{\"1\":{\"1616\":1}}],[\"gnu\",{\"1\":{\"1616\":1}}],[\"gcc\",{\"1\":{\"1133\":1}}],[\"gc\",{\"0\":{\"1647\":1},\"1\":{\"1062\":2,\"1646\":1,\"1649\":3,\"1650\":8,\"1769\":1}}],[\"gg\",{\"1\":{\"1061\":1}}],[\"g表示与该文件的拥有者属于同一个群体\",{\"1\":{\"1038\":1}}],[\"gt\",{\"1\":{\"1021\":2}}],[\"gb\",{\"1\":{\"1006\":1}}],[\"g<群组>\",{\"1\":{\"944\":2,\"950\":2}}],[\"gshow\",{\"0\":{\"938\":1}}],[\"gzip\",{\"0\":{\"1020\":1},\"1\":{\"1021\":1,\"1022\":1,\"1025\":5,\"1152\":1,\"1153\":2,\"1699\":1}}],[\"gz\",{\"1\":{\"909\":1,\"1025\":8,\"1132\":1}}],[\"gopher\",{\"1\":{\"2061\":1}}],[\"got\",{\"1\":{\"1436\":1}}],[\"good\",{\"1\":{\"1286\":2,\"1637\":1}}],[\"google\",{\"1\":{\"340\":1,\"1641\":1,\"1707\":1}}],[\"golfball\",{\"1\":{\"692\":2}}],[\"given\",{\"1\":{\"2756\":1}}],[\"gid\",{\"1\":{\"953\":3,\"1039\":1}}],[\"gi\",{\"1\":{\"535\":1}}],[\"gif\",{\"1\":{\"388\":2}}],[\"git提供了下面的命令用来记录每一次命令\",{\"1\":{\"1615\":1}}],[\"gitconfig\",{\"1\":{\"1590\":1}}],[\"git全局配置之后\",{\"1\":{\"104\":1}}],[\"git显示有差异\",{\"0\":{\"98\":1}}],[\"git相关\",{\"0\":{\"97\":1}}],[\"gitignore\",{\"1\":{\"22\":1,\"65\":1,\"1583\":1}}],[\"github\",{\"0\":{\"11\":1,\"12\":1,\"41\":1,\"54\":1,\"55\":1},\"1\":{\"11\":1,\"41\":1,\"54\":1,\"823\":2,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1,\"1583\":1}}],[\"git\",{\"0\":{\"7\":1,\"50\":1,\"1575\":1,\"1576\":1,\"1577\":1,\"1581\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1611\":1},\"1\":{\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":2,\"12\":1,\"30\":1,\"34\":5,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":2,\"55\":1,\"73\":1,\"77\":5,\"98\":1,\"104\":1,\"296\":1,\"1577\":4,\"1580\":1,\"1581\":4,\"1582\":4,\"1583\":7,\"1584\":11,\"1586\":3,\"1587\":3,\"1588\":3,\"1589\":1,\"1590\":1,\"1591\":3,\"1593\":3,\"1594\":3,\"1595\":4,\"1596\":2,\"1597\":2,\"1598\":1,\"1599\":2,\"1600\":4,\"1601\":8,\"1602\":4,\"1603\":4,\"1604\":3,\"1606\":3,\"1607\":2,\"1608\":1,\"1609\":7,\"1610\":6,\"1612\":1,\"1613\":4,\"1614\":13,\"1615\":4,\"1617\":3,\"1618\":4,\"1619\":2,\"1620\":1,\"1621\":3,\"1622\":1,\"1623\":1,\"1625\":1,\"1626\":8,\"1627\":1,\"1628\":2,\"1629\":2,\"1630\":2,\"1632\":1,\"1636\":2,\"1637\":6},\"2\":{\"99\":1,\"100\":1,\"1638\":1,\"1639\":1}}],[\"graph\",{\"1\":{\"1630\":1}}],[\"gray\",{\"1\":{\"1256\":2}}],[\"grade\",{\"1\":{\"848\":5}}],[\"greaterthan2\",{\"1\":{\"1443\":4}}],[\"grep\",{\"0\":{\"1013\":1},\"1\":{\"1014\":2,\"1016\":6,\"1097\":1,\"1101\":1,\"1139\":1,\"1144\":1}}],[\"greeter\",{\"1\":{\"1466\":6,\"1469\":2}}],[\"greet\",{\"1\":{\"1459\":1,\"1466\":4}}],[\"greeting\",{\"1\":{\"843\":2,\"1466\":6,\"1469\":2}}],[\"green\",{\"1\":{\"677\":1,\"680\":2,\"687\":2,\"688\":2,\"696\":2,\"843\":5}}],[\"greenyellow\",{\"1\":{\"178\":1}}],[\"groupname\",{\"1\":{\"1006\":1}}],[\"groupmod\",{\"0\":{\"958\":1},\"1\":{\"959\":1,\"960\":1}}],[\"groupdel\",{\"0\":{\"955\":1},\"1\":{\"956\":1,\"957\":1}}],[\"group1\",{\"1\":{\"954\":1}}],[\"groupadd\",{\"0\":{\"952\":1},\"1\":{\"953\":1,\"954\":2}}],[\"group\",{\"0\":{\"937\":1},\"1\":{\"937\":1,\"938\":1,\"953\":1,\"1006\":1,\"1035\":2,\"1037\":1,\"1038\":1,\"1039\":1,\"1040\":1,\"2297\":1}}],[\"groups\",{\"0\":{\"2286\":1},\"1\":{\"324\":2,\"536\":1,\"941\":1,\"2297\":1,\"2302\":1}}],[\"grid\",{\"0\":{\"174\":1},\"1\":{\"21\":1,\"64\":1,\"174\":1}}],[\"geometries\",{\"1\":{\"2359\":1,\"2800\":1}}],[\"geometry\",{\"1\":{\"94\":3,\"2278\":3,\"2359\":2,\"2371\":2,\"2375\":2,\"2379\":2,\"2383\":2,\"2387\":2,\"2391\":2,\"2395\":1,\"2399\":2,\"2403\":2,\"2407\":2,\"2411\":2,\"2430\":2,\"2434\":2,\"2438\":2,\"2442\":2,\"2446\":2,\"2450\":2}}],[\"genprops\",{\"1\":{\"1551\":2}}],[\"gen2\",{\"1\":{\"588\":2}}],[\"gen1\",{\"1\":{\"588\":2}}],[\"generatemipmaps\",{\"1\":{\"2562\":1}}],[\"generate\",{\"1\":{\"1549\":2,\"1551\":2,\"1552\":1}}],[\"generator\",{\"0\":{\"585\":1,\"586\":1,\"587\":1,\"590\":1,\"591\":1},\"1\":{\"587\":5,\"588\":7,\"590\":3,\"591\":2,\"592\":6,\"594\":1,\"636\":1}}],[\"genericnumber<number>\",{\"1\":{\"1362\":1}}],[\"genericnumber<t>\",{\"1\":{\"1362\":1}}],[\"genericidentityfn<t>\",{\"1\":{\"1361\":1}}],[\"generics\",{\"1\":{\"1360\":1}}],[\"generic\",{\"1\":{\"21\":1,\"64\":1}}],[\"gender=localstorage\",{\"1\":{\"1664\":1}}],[\"gender=male\",{\"1\":{\"1659\":1}}],[\"gender\",{\"1\":{\"478\":6,\"1338\":3,\"1340\":4,\"1370\":5,\"1664\":2}}],[\"gen\",{\"1\":{\"299\":4,\"587\":3,\"590\":4,\"591\":3,\"592\":2,\"636\":2,\"891\":4,\"1551\":2}}],[\"getdrawingbuffersize\",{\"0\":{\"2830\":1}}],[\"getdata\",{\"1\":{\"860\":3,\"1653\":1,\"1758\":5,\"1829\":4}}],[\"getrendertarget\",{\"0\":{\"2828\":1}}],[\"getworlddirection\",{\"0\":{\"2520\":1}}],[\"gethandler\",{\"0\":{\"2474\":1}}],[\"gettangent中给定的曲线的端点距离相等\",{\"1\":{\"2342\":1}}],[\"gettangentat\",{\"0\":{\"2342\":1}}],[\"gettangent\",{\"0\":{\"2341\":1}}],[\"getter\",{\"1\":{\"1467\":4,\"1493\":4,\"1557\":2,\"1561\":3,\"1569\":2,\"1571\":4}}],[\"getters\",{\"1\":{\"83\":2}}],[\"gettext\",{\"1\":{\"821\":1}}],[\"gettextinput\",{\"1\":{\"94\":1}}],[\"getutotmapping\",{\"0\":{\"2340\":1}}],[\"getuint32\",{\"1\":{\"411\":1}}],[\"getuint16\",{\"1\":{\"411\":3}}],[\"getuint8\",{\"1\":{\"411\":2}}],[\"getlengths\",{\"0\":{\"2338\":1}}],[\"getlength\",{\"0\":{\"2337\":1}}],[\"getlength计算曲线的累积分段长度时的分段量\",{\"1\":{\"2331\":1}}],[\"getlockbytes\",{\"1\":{\"128\":2}}],[\"getactivemipmaplevel\",{\"0\":{\"2827\":1}}],[\"getactivecubeface\",{\"0\":{\"2826\":1}}],[\"getattribute\",{\"0\":{\"2308\":1},\"1\":{\"2282\":1}}],[\"getallbuilds\",{\"1\":{\"1500\":1}}],[\"get方法会重新渲染页面\",{\"1\":{\"1493\":1,\"1571\":1}}],[\"getmaxprecision\",{\"1\":{\"2795\":1}}],[\"getmaxanisotropy\",{\"1\":{\"2795\":1}}],[\"getmainname\",{\"1\":{\"1391\":2}}],[\"getmovie\",{\"1\":{\"1168\":1}}],[\"getmoviedata\",{\"1\":{\"1168\":6}}],[\"getmovielistapi\",{\"1\":{\"1168\":2}}],[\"getitem\",{\"1\":{\"1274\":2,\"1297\":1,\"1664\":2}}],[\"getindex\",{\"0\":{\"2309\":1}}],[\"getinstance\",{\"1\":{\"1753\":4}}],[\"getinitialcount都会被调用\",{\"1\":{\"1286\":1}}],[\"getinitialcount\",{\"1\":{\"1274\":3,\"1286\":3}}],[\"getint32\",{\"1\":{\"411\":1}}],[\"getint16\",{\"1\":{\"411\":1}}],[\"getint8\",{\"1\":{\"411\":1}}],[\"getboundingclientrect\",{\"1\":{\"1256\":3}}],[\"getbledevicecharacteristics方法建议使用settimeout延迟1秒后再执行\",{\"1\":{\"127\":1}}],[\"getbledevicecharacteristics\",{\"1\":{\"120\":1,\"122\":2,\"126\":1,\"127\":1,\"128\":3}}],[\"getbledeviceservices方法建议使用settimeout延迟1秒后再执行\",{\"1\":{\"127\":1}}],[\"getbledeviceservices\",{\"1\":{\"120\":1,\"121\":1,\"127\":1,\"128\":3}}],[\"getownpropertynames\",{\"0\":{\"883\":1},\"1\":{\"883\":4,\"885\":1,\"886\":1}}],[\"getownpropertysymbols\",{\"0\":{\"884\":1},\"1\":{\"653\":2,\"884\":2,\"885\":1,\"886\":1}}],[\"geteffectivefov\",{\"0\":{\"2582\":1}}],[\"getexternal\",{\"1\":{\"823\":1}}],[\"getelementsbytagname\",{\"1\":{\"388\":1,\"389\":1,\"632\":1,\"721\":1}}],[\"getelementbyid\",{\"1\":{\"231\":1,\"232\":1,\"237\":1,\"241\":4,\"344\":1,\"391\":1,\"392\":1,\"395\":4,\"413\":2,\"414\":3,\"434\":2,\"436\":2,\"437\":1,\"558\":1,\"817\":2,\"821\":1,\"822\":2,\"823\":1,\"861\":1,\"862\":1,\"867\":1,\"902\":1,\"1157\":1,\"1167\":1,\"1175\":1,\"1182\":1,\"1315\":1,\"1653\":1,\"1839\":5}}],[\"getjson\",{\"1\":{\"822\":2}}],[\"getno\",{\"1\":{\"1389\":1}}],[\"getnum\",{\"1\":{\"500\":4}}],[\"getname\",{\"1\":{\"490\":3,\"492\":2,\"495\":4,\"896\":3,\"897\":5,\"1386\":4,\"1389\":1,\"1390\":1}}],[\"getfocallength\",{\"0\":{\"2585\":1}}],[\"getfilmwidth\",{\"0\":{\"2584\":1}}],[\"getfilmheight\",{\"0\":{\"2583\":1}}],[\"getfriends\",{\"1\":{\"492\":3}}],[\"getfloat64\",{\"1\":{\"411\":1}}],[\"getfloat32\",{\"1\":{\"411\":1}}],[\"getpixelratio\",{\"0\":{\"2831\":1}}],[\"getpaddingstring\",{\"1\":{\"1437\":3}}],[\"getprototypeof方法用来获取指定对象的原型\",{\"1\":{\"641\":1,\"657\":1}}],[\"getprototypeof\",{\"1\":{\"481\":1,\"495\":1,\"641\":2,\"657\":2,\"681\":2}}],[\"getpoint给出与曲线末端等距的点\",{\"1\":{\"2340\":1}}],[\"getpoints\",{\"0\":{\"2335\":1,\"2425\":1},\"1\":{\"2411\":1}}],[\"getpointat\",{\"0\":{\"2334\":1}}],[\"getpoint\",{\"0\":{\"2333\":1},\"1\":{\"256\":4,\"2438\":1}}],[\"getvalues<t\",{\"1\":{\"1370\":1}}],[\"getvalues\",{\"1\":{\"1370\":7}}],[\"getvalue\",{\"1\":{\"269\":8}}],[\"getsize\",{\"0\":{\"2832\":1}}],[\"getspacedpoints\",{\"0\":{\"2336\":1,\"2426\":1}}],[\"getspacedpoints等方法时的精度\",{\"1\":{\"2331\":1}}],[\"getstate\",{\"1\":{\"1176\":1,\"1178\":1,\"1185\":1,\"1187\":1}}],[\"getstudentinfo\",{\"1\":{\"847\":2,\"849\":5}}],[\"getstoragesync\",{\"1\":{\"128\":1}}],[\"getsomething\",{\"1\":{\"595\":2}}],[\"getservices\",{\"1\":{\"121\":2,\"127\":2}}],[\"getcurrentviewport\",{\"0\":{\"2829\":1}}],[\"getcurvelengths\",{\"0\":{\"2424\":1}}],[\"getclearcolor\",{\"0\":{\"2823\":1}}],[\"getclearalpha\",{\"0\":{\"2822\":1}}],[\"getchildren\",{\"1\":{\"1551\":2}}],[\"getcharacteristics\",{\"1\":{\"122\":2,\"127\":2}}],[\"getcontextattributes\",{\"0\":{\"2825\":1}}],[\"getcontext\",{\"0\":{\"2824\":1},\"1\":{\"414\":1}}],[\"getcwd\",{\"1\":{\"94\":1}}],[\"get\",{\"1\":{\"94\":2,\"272\":7,\"341\":1,\"433\":2,\"559\":1,\"565\":1,\"816\":1,\"817\":6,\"819\":1,\"859\":2,\"860\":2,\"864\":3,\"866\":1,\"1249\":1,\"1387\":1,\"1467\":1,\"1493\":3,\"1533\":1,\"1534\":3,\"1540\":1,\"1557\":3,\"1560\":1,\"1561\":3,\"1563\":2,\"1569\":1,\"1570\":3,\"1571\":5,\"1689\":2,\"2039\":3,\"2424\":1,\"2798\":1}}],[\"g\",{\"1\":{\"14\":1,\"46\":1,\"57\":1,\"239\":1,\"324\":2,\"326\":2,\"529\":1,\"535\":1,\"536\":1,\"537\":1,\"587\":7,\"588\":5,\"590\":5,\"591\":1,\"592\":2,\"740\":2,\"764\":1,\"843\":2,\"944\":4,\"945\":1,\"950\":2,\"953\":4,\"954\":1,\"959\":2,\"989\":3,\"1006\":1,\"1018\":1,\"1039\":1,\"1061\":1,\"1062\":3,\"1328\":1,\"1550\":1,\"1551\":1}}],[\"三级封锁协议\",{\"1\":{\"2260\":1}}],[\"三是集成命令\",{\"1\":{\"2172\":1}}],[\"三层次模型\",{\"0\":{\"2001\":1}}],[\"三流\",{\"1\":{\"1879\":1}}],[\"三次握手的建立连接的过程就是相互确认初始序号的过程\",{\"1\":{\"1727\":1}}],[\"三次握手\",{\"0\":{\"1726\":1},\"1\":{\"1690\":1,\"1713\":1,\"1726\":1}}],[\"三色标记法的\",{\"1\":{\"1650\":1}}],[\"三色标记法\",{\"1\":{\"1650\":2}}],[\"三目运算符\",{\"1\":{\"774\":1}}],[\"三个对象依次引用\",{\"1\":{\"1650\":1}}],[\"三个方法的语法如下\",{\"1\":{\"879\":1}}],[\"三个方法都返回一个数组的迭代对象\",{\"1\":{\"879\":1}}],[\"三个方法都可以改变函数\",{\"1\":{\"355\":1}}],[\"三个弊端\",{\"1\":{\"657\":1}}],[\"三种表示方法各不相同\",{\"1\":{\"606\":1}}],[\"三种表示方法均有符号位和数值位两部分\",{\"1\":{\"606\":1}}],[\"三栏布局\",{\"0\":{\"159\":1}}],[\"三\",{\"0\":{\"13\":1,\"56\":1,\"291\":1,\"435\":1,\"561\":1,\"615\":1,\"721\":1,\"844\":1,\"887\":1,\"1478\":1,\"1493\":1,\"1521\":1,\"1527\":1,\"1535\":1,\"1542\":1,\"1550\":1,\"1559\":1,\"1571\":1,\"1611\":1,\"1688\":1}}],[\"uv2\",{\"1\":{\"2749\":1}}],[\"uv\",{\"1\":{\"2277\":1,\"2749\":1}}],[\"uvh\",{\"1\":{\"1141\":1}}],[\"uart\",{\"1\":{\"2176\":1}}],[\"udp具有保护消息边界\",{\"1\":{\"1731\":1}}],[\"udp段都是⼀条消息\",{\"1\":{\"1731\":1}}],[\"udp是⾯向消息的协议\",{\"1\":{\"1731\":1}}],[\"udp在传输数据之前不需要先建立连接\",{\"1\":{\"1716\":1}}],[\"udp协议为什么不可靠\",{\"0\":{\"1716\":1}}],[\"udp应用场景\",{\"1\":{\"1715\":1}}],[\"udp头部包含了以下几个数据\",{\"1\":{\"1712\":1}}],[\"udp对应用层交下来的报文\",{\"1\":{\"1712\":1}}],[\"udp不止支持一对一的传输方式\",{\"1\":{\"1712\":1}}],[\"udp只去除p报文头就传递给应用层\",{\"1\":{\"1712\":1}}],[\"udp只会给数据增加一个udp头标识下是udp协议\",{\"1\":{\"1712\":1}}],[\"udp有不提供数据包分组\",{\"1\":{\"1712\":1}}],[\"udp的全称是用户数据报协议\",{\"1\":{\"1712\":1}}],[\"udp\",{\"0\":{\"1710\":1,\"1712\":1}}],[\"u>\",{\"1\":{\"1378\":2,\"1379\":2}}],[\"uwsgi相关参数文件\",{\"1\":{\"1150\":1}}],[\"uwsgi\",{\"1\":{\"1150\":3}}],[\"uppercaseobject\",{\"1\":{\"1431\":9}}],[\"upstream\",{\"1\":{\"1153\":1}}],[\"upgrade\",{\"1\":{\"1146\":2,\"1153\":4}}],[\"up按键\",{\"1\":{\"1061\":1}}],[\"up\",{\"1\":{\"1057\":1,\"1428\":3}}],[\"updateprojectionmatrix\",{\"0\":{\"2544\":1,\"2588\":1}}],[\"updateprojectionmatrix来使得这些改变生效\",{\"1\":{\"2531\":1,\"2569\":1}}],[\"updateproperties更新属性\",{\"0\":{\"1477\":1}}],[\"updateproperties\",{\"1\":{\"1476\":2,\"1477\":1,\"1528\":2}}],[\"updatearclengths\",{\"0\":{\"2339\":1}}],[\"updateuser\",{\"1\":{\"2039\":1}}],[\"update挂载在vue的原型\",{\"1\":{\"1528\":1}}],[\"update和\",{\"1\":{\"1526\":1,\"1558\":1}}],[\"updatecomponent\",{\"1\":{\"1486\":2,\"1558\":2}}],[\"updateclipboard\",{\"1\":{\"344\":1}}],[\"updated\",{\"1\":{\"1485\":1}}],[\"updatestyle\",{\"0\":{\"2845\":1}}],[\"updates\",{\"1\":{\"1290\":1}}],[\"updater\",{\"1\":{\"1071\":1}}],[\"update\",{\"0\":{\"1479\":1,\"1528\":1,\"2558\":1},\"1\":{\"998\":1,\"1016\":2,\"1073\":3,\"1479\":1,\"1486\":2,\"1493\":2,\"1519\":1,\"1526\":3,\"1528\":2,\"1540\":2,\"1544\":1,\"1556\":1,\"1558\":2,\"1561\":3,\"1562\":1,\"1565\":1,\"1571\":4,\"1806\":3,\"2562\":2,\"2761\":1}}],[\"uml图\",{\"0\":{\"1912\":1}}],[\"umask\",{\"0\":{\"1043\":1,\"1046\":1},\"1\":{\"1044\":1,\"1045\":1,\"1047\":1,\"1048\":1,\"1118\":1,\"1121\":1}}],[\"umd\",{\"0\":{\"465\":1},\"1\":{\"444\":2,\"465\":9,\"467\":1,\"1454\":1}}],[\"u+x\",{\"1\":{\"1041\":1,\"1079\":1}}],[\"ug+w\",{\"1\":{\"1041\":1}}],[\"ugo+r\",{\"1\":{\"1041\":1}}],[\"ugo\",{\"1\":{\"1039\":1}}],[\"ugoa\",{\"1\":{\"1038\":1}}],[\"u表示该文件的拥有者\",{\"1\":{\"1038\":1}}],[\"u<列数>或\",{\"1\":{\"1009\":1}}],[\"u<uid>\",{\"1\":{\"944\":1,\"950\":1}}],[\"u或\",{\"1\":{\"930\":1}}],[\"ubuntu\",{\"1\":{\"908\":1}}],[\"uri\",{\"1\":{\"414\":1,\"464\":2,\"817\":2}}],[\"url重写\",{\"0\":{\"1698\":1}}],[\"url解析\",{\"0\":{\"1677\":1},\"1\":{\"1676\":1}}],[\"url>\",{\"1\":{\"1607\":1}}],[\"urllib\",{\"1\":{\"864\":4,\"866\":2}}],[\"url4\",{\"1\":{\"565\":1}}],[\"url3\",{\"1\":{\"565\":1}}],[\"url2\",{\"1\":{\"565\":1}}],[\"url1\",{\"1\":{\"565\":1,\"594\":1}}],[\"url可以改为加载相对于当前模块的图像\",{\"1\":{\"472\":1}}],[\"url的\",{\"1\":{\"414\":1}}],[\"url构造函数的\",{\"1\":{\"413\":1}}],[\"urlencoded\",{\"1\":{\"193\":1,\"816\":1}}],[\"url\",{\"0\":{\"413\":1,\"421\":1,\"2476\":1,\"2478\":1,\"2479\":1,\"2480\":1},\"1\":{\"108\":2,\"111\":1,\"345\":1,\"388\":3,\"389\":1,\"391\":1,\"394\":1,\"395\":3,\"413\":18,\"414\":1,\"421\":1,\"472\":6,\"559\":2,\"565\":2,\"569\":2,\"816\":2,\"817\":1,\"819\":2,\"859\":2,\"864\":4,\"865\":2,\"866\":2,\"1258\":1,\"1607\":1,\"1677\":1,\"1698\":1,\"2455\":6,\"2462\":18,\"2468\":1,\"2470\":1,\"2471\":1,\"2476\":1,\"2478\":1,\"2479\":1,\"2480\":1,\"2884\":1}}],[\"usb\",{\"1\":{\"2176\":1}}],[\"ustb\",{\"1\":{\"1196\":3,\"1200\":1,\"1204\":1}}],[\"using\",{\"1\":{\"1152\":1,\"2710\":1}}],[\"usingawait\",{\"1\":{\"334\":8}}],[\"usr\",{\"1\":{\"1134\":1,\"1135\":1,\"1137\":10,\"1146\":12,\"1150\":2,\"1153\":3}}],[\"useless\",{\"1\":{\"1460\":2}}],[\"uselayouteffect<\",{\"1\":{\"1255\":1}}],[\"uselayouteffect\",{\"0\":{\"1254\":1,\"1255\":1,\"1256\":1,\"1259\":1},\"1\":{\"1255\":6,\"1256\":6,\"1260\":2}}],[\"usetransition\",{\"0\":{\"1233\":1,\"1306\":1,\"1311\":1,\"1312\":1},\"1\":{\"1233\":2,\"1236\":2,\"1307\":1,\"1309\":2,\"1311\":2,\"1312\":2}}],[\"usetabs\",{\"1\":{\"20\":1,\"63\":1}}],[\"used\",{\"1\":{\"1366\":1,\"1448\":1,\"2761\":1}}],[\"usedeferredvalue\",{\"0\":{\"1232\":1,\"1233\":1},\"1\":{\"1233\":2,\"1234\":1,\"1235\":4,\"1236\":10,\"1237\":4,\"1309\":1}}],[\"usedispatch\",{\"1\":{\"1167\":2,\"1168\":2}}],[\"usememo<\",{\"1\":{\"1265\":1,\"1267\":2}}],[\"usememocurrentusers\",{\"1\":{\"1265\":2,\"1267\":1}}],[\"usememodemo\",{\"1\":{\"1265\":2}}],[\"usememo\",{\"0\":{\"1211\":1,\"1229\":1,\"1263\":1},\"1\":{\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":8,\"1229\":3,\"1264\":3,\"1265\":7,\"1267\":8,\"1268\":3,\"1269\":7,\"1323\":2}}],[\"usecallback\",{\"0\":{\"1207\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1229\":1},\"1\":{\"1208\":1,\"1209\":3,\"1210\":4,\"1211\":8,\"1212\":16,\"1229\":3,\"1323\":2,\"1324\":1}}],[\"usecapture\",{\"1\":{\"232\":2}}],[\"usecontexthook\",{\"1\":{\"1219\":1}}],[\"usecontext\",{\"0\":{\"1215\":1},\"1\":{\"1176\":2,\"1177\":2,\"1185\":2,\"1186\":2,\"1217\":1,\"1219\":1,\"1220\":3,\"1222\":2,\"1224\":1,\"1225\":1,\"1227\":1,\"1324\":4}}],[\"useselector\",{\"1\":{\"1167\":2,\"1168\":3}}],[\"usestate\",{\"0\":{\"1293\":1},\"1\":{\"251\":1,\"470\":1,\"1167\":2,\"1168\":2,\"1176\":2,\"1185\":2,\"1210\":1,\"1212\":2,\"1222\":3,\"1227\":3,\"1229\":1,\"1235\":2,\"1243\":2,\"1244\":3,\"1251\":2,\"1255\":3,\"1256\":4,\"1265\":3,\"1267\":1,\"1269\":2,\"1273\":2,\"1279\":3,\"1283\":1,\"1294\":2,\"1296\":1,\"1297\":2,\"1299\":2,\"1300\":2,\"1303\":2,\"1311\":2,\"1312\":2,\"1323\":3,\"1324\":3}}],[\"useeffect<\",{\"1\":{\"1255\":1}}],[\"useeffect\",{\"0\":{\"1240\":1,\"1255\":1,\"1258\":1},\"1\":{\"470\":1,\"1176\":2,\"1185\":2,\"1209\":1,\"1210\":1,\"1212\":1,\"1241\":2,\"1243\":3,\"1244\":8,\"1245\":1,\"1246\":2,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":2,\"1255\":8,\"1258\":2,\"1259\":1,\"1260\":1,\"1274\":2,\"1282\":1,\"1283\":5,\"1285\":2,\"1288\":2,\"1289\":2,\"1290\":1}}],[\"userdata\",{\"0\":{\"2293\":1,\"2683\":1}}],[\"userdef\",{\"1\":{\"1569\":5,\"1570\":3}}],[\"userdel\",{\"0\":{\"946\":1},\"1\":{\"943\":1,\"947\":1,\"948\":1}}],[\"userfactory\",{\"1\":{\"1754\":9}}],[\"userinfo\",{\"1\":{\"1372\":4}}],[\"userid\",{\"1\":{\"343\":2}}],[\"usereducer\",{\"0\":{\"1272\":1,\"1275\":1,\"1287\":1},\"1\":{\"1273\":6,\"1274\":5,\"1275\":4,\"1287\":3}}],[\"useref\",{\"0\":{\"1278\":1},\"1\":{\"1251\":2,\"1255\":3,\"1256\":4,\"1279\":10,\"1281\":5,\"1282\":2,\"1283\":2,\"1285\":1,\"1286\":3,\"1287\":2,\"1288\":3,\"1289\":3,\"1290\":2}}],[\"userlist\",{\"1\":{\"1267\":4}}],[\"usercontext\",{\"1\":{\"1227\":1}}],[\"user=root\",{\"1\":{\"1102\":1}}],[\"username=hello\",{\"1\":{\"1659\":1}}],[\"username1\",{\"1\":{\"1626\":1}}],[\"username\",{\"1\":{\"1006\":1,\"1268\":2,\"1411\":4,\"1626\":2}}],[\"usermod\",{\"0\":{\"949\":1},\"1\":{\"950\":1,\"951\":2}}],[\"useradd\",{\"0\":{\"943\":1},\"1\":{\"943\":2,\"944\":2,\"945\":5}}],[\"users中的数据\",{\"1\":{\"823\":1}}],[\"users\",{\"1\":{\"334\":28,\"823\":1,\"1036\":1,\"1037\":1,\"1265\":2,\"1374\":1}}],[\"user\",{\"1\":{\"21\":1,\"64\":1,\"202\":2,\"270\":2,\"322\":6,\"433\":13,\"644\":6,\"823\":2,\"913\":2,\"930\":1,\"940\":1,\"1006\":1,\"1035\":1,\"1039\":1,\"1040\":1,\"1102\":1,\"1118\":1,\"1137\":1,\"1152\":3,\"1153\":3,\"1211\":4,\"1229\":1,\"1265\":5,\"1267\":6,\"1387\":5,\"1472\":1,\"1492\":2,\"1493\":3,\"1571\":3,\"1587\":3,\"1588\":2,\"1753\":13,\"1754\":8,\"1773\":2,\"2039\":3}}],[\"use\",{\"1\":{\"19\":1,\"62\":1,\"80\":1,\"82\":1,\"83\":1,\"88\":1,\"192\":1,\"193\":2,\"353\":2,\"429\":1,\"860\":3,\"861\":2,\"862\":2,\"863\":2,\"1335\":1,\"1454\":1,\"1653\":1,\"1766\":1,\"2751\":4,\"2795\":1,\"2835\":1}}],[\"ul\",{\"1\":{\"236\":1,\"437\":4}}],[\"ul>\",{\"1\":{\"83\":1,\"215\":1,\"236\":1,\"1168\":1,\"1212\":1,\"1235\":1,\"1311\":1}}],[\"util\",{\"1\":{\"1485\":1,\"1505\":1,\"1541\":1,\"1542\":1}}],[\"utils\",{\"1\":{\"128\":1,\"1484\":1,\"1493\":1,\"1533\":2,\"1535\":2}}],[\"utf8\",{\"1\":{\"560\":1,\"569\":4}}],[\"utf\",{\"1\":{\"23\":2,\"66\":2,\"109\":1,\"388\":1,\"518\":1,\"1150\":2,\"1839\":1}}],[\"uuid\",{\"0\":{\"2294\":1,\"2679\":1},\"1\":{\"118\":1,\"122\":1,\"128\":3,\"2294\":1}}],[\"uint32\",{\"1\":{\"402\":1}}],[\"uint32array\",{\"1\":{\"401\":1,\"402\":2,\"404\":3,\"405\":1}}],[\"uint16array\",{\"1\":{\"402\":2,\"404\":1}}],[\"uint16\",{\"1\":{\"402\":1}}],[\"uint8clampedarray\",{\"1\":{\"402\":1}}],[\"uint8c\",{\"1\":{\"402\":1}}],[\"uint8\",{\"1\":{\"402\":1}}],[\"uint8arraytohex\",{\"1\":{\"128\":1}}],[\"uint8array\",{\"1\":{\"123\":1,\"127\":1,\"402\":2,\"403\":1,\"404\":1,\"416\":1,\"417\":1,\"418\":1,\"2835\":1}}],[\"ui\",{\"1\":{\"80\":2,\"233\":1,\"339\":2,\"370\":3,\"376\":1,\"1203\":1,\"1234\":1,\"1235\":1,\"1236\":1,\"1285\":2,\"1311\":1,\"1312\":1,\"1589\":1,\"1802\":1}}],[\"unroll\",{\"1\":{\"2741\":2}}],[\"unreal和\",{\"1\":{\"2717\":1}}],[\"unrelated\",{\"1\":{\"1609\":3}}],[\"until=\",{\"1\":{\"1626\":1}}],[\"until=<date>\",{\"1\":{\"1626\":1}}],[\"untracked\",{\"1\":{\"1584\":1}}],[\"unmounted\",{\"1\":{\"1249\":1}}],[\"unmodified\",{\"1\":{\"817\":1,\"1584\":1}}],[\"unstable\",{\"1\":{\"1312\":1}}],[\"unsubscribe\",{\"1\":{\"1185\":2,\"1814\":1}}],[\"unsubcribe\",{\"1\":{\"1176\":2}}],[\"unset\",{\"0\":{\"1098\":1},\"1\":{\"1098\":1}}],[\"unshift\",{\"0\":{\"696\":1},\"1\":{\"83\":1,\"682\":1,\"694\":2,\"696\":3,\"1535\":2,\"1564\":1}}],[\"uncompress\",{\"1\":{\"1021\":1}}],[\"uncaught\",{\"1\":{\"248\":1,\"249\":1,\"250\":2,\"261\":1,\"305\":2,\"326\":1,\"445\":1,\"500\":1,\"507\":1,\"511\":2,\"578\":3,\"803\":2,\"898\":1}}],[\"unauthorized\",{\"1\":{\"817\":1}}],[\"undefind\",{\"0\":{\"654\":1}}],[\"undefined>\",{\"1\":{\"1381\":2}}],[\"undefined时才返回右边的值\",{\"1\":{\"643\":1}}],[\"undefined的值是\",{\"1\":{\"642\":1}}],[\"undefined转化为数字是nan\",{\"1\":{\"616\":1}}],[\"undefined\",{\"0\":{\"786\":1,\"793\":1,\"800\":1,\"1400\":1,\"2297\":1,\"2302\":1,\"2303\":1,\"2304\":1,\"2305\":1,\"2306\":1,\"2307\":1,\"2312\":1,\"2319\":1,\"2339\":1,\"2422\":1,\"2423\":1,\"2478\":1,\"2479\":1,\"2480\":1,\"2542\":1,\"2543\":1,\"2544\":1,\"2558\":1,\"2581\":1,\"2586\":1,\"2587\":1,\"2588\":1,\"2687\":1,\"2688\":1,\"2690\":1,\"2812\":1,\"2813\":1,\"2814\":1,\"2815\":1,\"2816\":1,\"2817\":1,\"2818\":1,\"2819\":1,\"2820\":1,\"2821\":1,\"2833\":1,\"2834\":1,\"2835\":1,\"2836\":1,\"2837\":1,\"2838\":1,\"2839\":1,\"2840\":1,\"2841\":1,\"2842\":1,\"2843\":1,\"2844\":1,\"2845\":1,\"2846\":1},\"1\":{\"249\":4,\"252\":3,\"254\":1,\"261\":1,\"271\":2,\"272\":4,\"285\":2,\"286\":3,\"309\":1,\"321\":3,\"322\":6,\"324\":2,\"334\":3,\"352\":1,\"353\":2,\"354\":2,\"355\":1,\"363\":2,\"445\":2,\"467\":2,\"482\":1,\"500\":3,\"505\":3,\"507\":2,\"517\":2,\"536\":1,\"539\":1,\"584\":3,\"587\":1,\"588\":1,\"616\":1,\"623\":1,\"627\":1,\"640\":1,\"642\":2,\"643\":2,\"644\":6,\"646\":3,\"650\":2,\"652\":1,\"653\":1,\"654\":4,\"656\":3,\"657\":3,\"658\":1,\"659\":2,\"662\":7,\"663\":2,\"664\":2,\"667\":1,\"668\":1,\"669\":1,\"677\":2,\"678\":3,\"679\":5,\"680\":2,\"689\":1,\"695\":1,\"709\":1,\"714\":2,\"755\":2,\"763\":1,\"766\":2,\"767\":2,\"774\":1,\"775\":1,\"777\":1,\"786\":3,\"788\":2,\"793\":1,\"795\":1,\"800\":2,\"802\":5,\"838\":3,\"843\":3,\"849\":1,\"875\":2,\"878\":1,\"889\":1,\"898\":1,\"1340\":2,\"1370\":2,\"1381\":2,\"1382\":1,\"1400\":5,\"1415\":1,\"1416\":1,\"1418\":1,\"1431\":7,\"1442\":2,\"1443\":2,\"1447\":2,\"1458\":5,\"1476\":1,\"1478\":1,\"1527\":7,\"1541\":1,\"1542\":3,\"1549\":2,\"1551\":1,\"1798\":1}}],[\"unobserve\",{\"1\":{\"87\":1}}],[\"unplugin\",{\"1\":{\"39\":5}}],[\"uniform2\",{\"1\":{\"2760\":1}}],[\"uniform1\",{\"1\":{\"2760\":1}}],[\"uniformsneedupdate\",{\"0\":{\"2761\":1}}],[\"uniforms逐帧被刷新\",{\"1\":{\"2760\":1}}],[\"uniforms传递给shader\",{\"1\":{\"2752\":1}}],[\"uniforms\",{\"0\":{\"2743\":1,\"2744\":1,\"2760\":1},\"1\":{\"2741\":2,\"2742\":5,\"2743\":2,\"2744\":5,\"2761\":1,\"2767\":1,\"2795\":2}}],[\"uniform\",{\"1\":{\"1677\":1,\"2744\":2,\"2748\":1,\"2760\":1,\"2761\":1,\"2795\":2}}],[\"unified=<列数>\",{\"1\":{\"1009\":1}}],[\"union\",{\"1\":{\"1343\":1}}],[\"unidirectional\",{\"1\":{\"1009\":1}}],[\"unix\",{\"1\":{\"907\":1,\"1018\":1,\"1037\":1}}],[\"uniquedata\",{\"1\":{\"767\":3}}],[\"uniquelist\",{\"1\":{\"767\":5}}],[\"uniquearray\",{\"1\":{\"743\":2}}],[\"universal\",{\"1\":{\"465\":1}}],[\"uniapp蓝牙\",{\"0\":{\"115\":1}}],[\"uniapp\",{\"2\":{\"113\":1,\"114\":1,\"129\":1}}],[\"uniapp分环境打包\",{\"0\":{\"107\":1}}],[\"uni\",{\"0\":{\"125\":1,\"126\":1},\"1\":{\"108\":9,\"109\":6,\"111\":3,\"117\":2,\"118\":10,\"119\":8,\"120\":4,\"121\":1,\"122\":1,\"123\":4,\"124\":3,\"125\":4,\"126\":4,\"127\":25,\"128\":20}}],[\"units的值\",{\"1\":{\"2795\":2}}],[\"unitprecision\",{\"1\":{\"208\":2}}],[\"unit\",{\"1\":{\"21\":1,\"64\":1,\"1137\":1}}],[\"unicode\",{\"1\":{\"21\":2,\"64\":2,\"516\":1,\"518\":1}}],[\"unknownemployee\",{\"1\":{\"1435\":2}}],[\"unknown\",{\"0\":{\"1418\":1},\"1\":{\"21\":4,\"64\":4,\"1418\":15}}],[\"u\",{\"0\":{\"2334\":1,\"2340\":1,\"2342\":1},\"1\":{\"12\":1,\"55\":1,\"913\":1,\"944\":1,\"945\":1,\"950\":2,\"951\":1,\"986\":1,\"989\":2,\"998\":1,\"1001\":1,\"1009\":2,\"1018\":1,\"1039\":2,\"1056\":1,\"1061\":1,\"1063\":1,\"1125\":1,\"1372\":4,\"1378\":3,\"1379\":2,\"1400\":1,\"1472\":1,\"1594\":1,\"1610\":2,\"2334\":1,\"2336\":1,\"2342\":1,\"2426\":1}}],[\"pz\",{\"1\":{\"2842\":1}}],[\"pvrtc\",{\"1\":{\"2798\":1}}],[\"pv4可选字段\",{\"1\":{\"1712\":1}}],[\"pbr\",{\"1\":{\"2717\":1}}],[\"p中每个模式ri上的fd集是fi\",{\"1\":{\"2255\":1}}],[\"pt网关实现两种协议的转换翻译和地址的映射\",{\"1\":{\"2215\":1}}],[\"pt使用网关设备连接ipv6和ipv4网络\",{\"1\":{\"2215\":1}}],[\"pt技术\",{\"1\":{\"2215\":1}}],[\"pts\",{\"1\":{\"931\":3}}],[\"pdr值越大\",{\"1\":{\"2170\":1}}],[\"pdr值的方法来衡量机器性能\",{\"1\":{\"2170\":1}}],[\"pdf结尾的文件被忽略\",{\"1\":{\"1583\":1}}],[\"pdf\",{\"1\":{\"388\":2,\"1583\":1}}],[\"pki公钥体系\",{\"1\":{\"2109\":1}}],[\"p标志来展开显示每次提交的内容差异对比\",{\"1\":{\"1631\":1}}],[\"physically\",{\"1\":{\"2856\":1}}],[\"physicallycorrectlights\",{\"0\":{\"2802\":1}}],[\"physical\",{\"1\":{\"2672\":1,\"2802\":1}}],[\"phong模型来计算反射率\",{\"1\":{\"2613\":1}}],[\"phong网格材质\",{\"0\":{\"2612\":1}}],[\"phrase\",{\"1\":{\"1469\":2}}],[\"php$\",{\"1\":{\"1152\":2}}],[\"php\",{\"1\":{\"909\":1,\"1152\":3}}],[\"p>\",{\"1\":{\"1163\":2,\"1167\":1,\"1168\":1,\"1178\":2,\"1187\":2,\"1222\":1,\"1243\":1,\"1244\":2,\"1251\":1,\"1320\":3,\"1321\":3,\"1323\":3,\"1324\":4,\"1705\":1}}],[\"p可以查看所有的类型\",{\"1\":{\"1111\":1}}],[\"p可以粘贴\",{\"1\":{\"1063\":2}}],[\"p则为贴在游标上一行\",{\"1\":{\"1063\":1}}],[\"p为将已复制的数据在光标下一行贴上\",{\"1\":{\"1063\":1}}],[\"py\",{\"1\":{\"1041\":2,\"1256\":2,\"2842\":1}}],[\"python实现webm转mp4\",{\"0\":{\"92\":1}}],[\"p或\",{\"1\":{\"1009\":1}}],[\"ps1登陆提示符在这里修改\",{\"1\":{\"1121\":1}}],[\"ps\",{\"1\":{\"990\":1,\"1139\":1,\"2172\":1}}],[\"ps查看进程信息并通过less分页显示\",{\"1\":{\"990\":1}}],[\"pseudo\",{\"1\":{\"21\":2,\"64\":2}}],[\"p是当子目录被删除后使它也成为空目录的话\",{\"1\":{\"978\":1}}],[\"p参数\",{\"1\":{\"976\":1}}],[\"p确保目录名称存在\",{\"1\":{\"975\":1}}],[\"pwd\",{\"0\":{\"969\":1},\"1\":{\"970\":1}}],[\"p4\",{\"1\":{\"584\":3}}],[\"p3\",{\"1\":{\"584\":4}}],[\"p2\",{\"1\":{\"484\":4,\"490\":3,\"492\":3,\"493\":1,\"584\":6}}],[\"png\",{\"1\":{\"388\":2,\"395\":1,\"472\":1,\"2462\":2}}],[\"pnpm\",{\"1\":{\"4\":1,\"14\":1,\"21\":1,\"25\":1,\"26\":1,\"27\":1,\"29\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"57\":1,\"63\":2,\"64\":1,\"68\":1,\"69\":1,\"70\":1,\"72\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1}}],[\"pem\",{\"1\":{\"1152\":1}}],[\"people\",{\"1\":{\"490\":4,\"492\":3,\"495\":3}}],[\"pen\",{\"1\":{\"455\":1}}],[\"pending\",{\"1\":{\"382\":1,\"563\":1,\"564\":2,\"565\":2,\"566\":1,\"580\":7,\"581\":1,\"584\":8,\"1168\":2,\"1493\":4,\"1542\":4}}],[\"peter\",{\"1\":{\"433\":8}}],[\"perspectivecamera\",{\"0\":{\"2528\":1,\"2555\":1,\"2556\":1,\"2558\":1,\"2565\":1,\"2566\":1,\"2568\":1},\"1\":{\"2510\":1,\"2566\":1}}],[\"persion\",{\"1\":{\"1370\":1}}],[\"persionreducer\",{\"1\":{\"1159\":1,\"1183\":1}}],[\"persion模块下reducer\",{\"1\":{\"1159\":1}}],[\"personlist\",{\"1\":{\"83\":6}}],[\"person\",{\"1\":{\"83\":3,\"296\":1,\"297\":2,\"356\":3,\"357\":3,\"359\":11,\"467\":3,\"478\":4,\"481\":9,\"482\":16,\"484\":4,\"486\":3,\"488\":8,\"494\":4,\"762\":3,\"806\":12,\"838\":2,\"1338\":11,\"1339\":1,\"1340\":7,\"1365\":3,\"1366\":4,\"1370\":12,\"1386\":4,\"1389\":2,\"1467\":2}}],[\"personabout\",{\"1\":{\"83\":3}}],[\"permission\",{\"1\":{\"1039\":2}}],[\"perm\",{\"1\":{\"1007\":1}}],[\"percent\",{\"1\":{\"395\":2}}],[\"per\",{\"0\":{\"404\":1},\"1\":{\"19\":2,\"62\":2,\"404\":11,\"478\":2,\"1246\":1}}],[\"performauthentication\",{\"1\":{\"1755\":4}}],[\"performance\",{\"1\":{\"1235\":2,\"1311\":2,\"2788\":1}}],[\"perf\",{\"1\":{\"16\":2,\"30\":1,\"59\":2,\"73\":1}}],[\"p1\",{\"1\":{\"359\":2,\"484\":4,\"490\":6,\"492\":8,\"493\":1,\"584\":3,\"1386\":4,\"1467\":2}}],[\"pi2\",{\"1\":{\"2650\":1}}],[\"pi\",{\"1\":{\"2438\":1,\"2650\":1}}],[\"pim会被换变换成一个或多个psm\",{\"1\":{\"1996\":1}}],[\"pick<todo\",{\"1\":{\"1375\":1}}],[\"pick<t\",{\"1\":{\"1375\":1,\"1380\":1}}],[\"pick\",{\"0\":{\"1375\":1},\"1\":{\"1375\":1,\"1602\":3}}],[\"pid文件\",{\"1\":{\"1150\":1}}],[\"pidfile=\",{\"1\":{\"1137\":1}}],[\"pid\",{\"1\":{\"992\":1,\"1105\":1,\"1137\":1,\"1150\":1,\"1152\":2,\"1153\":2}}],[\"pid=pid\",{\"1\":{\"992\":1}}],[\"pitch\",{\"1\":{\"340\":1}}],[\"pitch=1\",{\"1\":{\"340\":1}}],[\"pinia\",{\"1\":{\"39\":1}}],[\"px`\",{\"1\":{\"1255\":2,\"1256\":2}}],[\"px\",{\"1\":{\"206\":1,\"207\":2,\"208\":6,\"1256\":2,\"1289\":1,\"1707\":1,\"2842\":1}}],[\"pcfsoftshadowmap\",{\"1\":{\"2805\":1}}],[\"pcfshadowmap\",{\"1\":{\"2805\":1}}],[\"pc机或工作站\",{\"1\":{\"2177\":1}}],[\"pcb\",{\"1\":{\"2150\":2}}],[\"pcw\",{\"1\":{\"1168\":1}}],[\"pcre\",{\"1\":{\"1133\":2}}],[\"pc\",{\"1\":{\"200\":3,\"201\":3}}],[\"p\",{\"1\":{\"83\":3,\"267\":1,\"436\":1,\"572\":1,\"975\":1,\"976\":1,\"978\":1,\"979\":1,\"986\":2,\"998\":1,\"1009\":1,\"1056\":2,\"1063\":2,\"1106\":1,\"1109\":1,\"1153\":1,\"1256\":1,\"1367\":1,\"1371\":4,\"1372\":4,\"1373\":4,\"1374\":2,\"1375\":2,\"1376\":1,\"1382\":2,\"1542\":2,\"1706\":1}}],[\"please\",{\"1\":{\"345\":1}}],[\"plane对象\",{\"1\":{\"2647\":1,\"2796\":1}}],[\"plane\",{\"1\":{\"2399\":2,\"2533\":1,\"2571\":1,\"2577\":1}}],[\"planegeometry\",{\"0\":{\"2398\":1,\"2399\":1},\"1\":{\"2399\":1}}],[\"plain\",{\"1\":{\"388\":5,\"389\":1}}],[\"platforms\",{\"0\":{\"1502\":1,\"1503\":1}}],[\"platform\",{\"1\":{\"108\":2,\"2835\":1}}],[\"placeholder=\",{\"1\":{\"340\":2,\"342\":1,\"343\":1,\"1265\":1}}],[\"place\",{\"1\":{\"94\":8}}],[\"play\",{\"1\":{\"21\":1,\"64\":1,\"338\":5,\"359\":3,\"494\":1}}],[\"plus的css样式\",{\"1\":{\"204\":1}}],[\"plus样式\",{\"1\":{\"39\":1}}],[\"plus\",{\"0\":{\"37\":1},\"1\":{\"37\":2,\"39\":2}}],[\"plugins\",{\"1\":{\"21\":1,\"39\":1,\"64\":1,\"208\":1}}],[\"plugin\",{\"1\":{\"19\":1,\"39\":3,\"62\":1,\"63\":3}}],[\"potential\",{\"1\":{\"1653\":1}}],[\"potentiallyhugearray\",{\"1\":{\"431\":3}}],[\"pointlight\",{\"0\":{\"2875\":1,\"2876\":1},\"1\":{\"2876\":1}}],[\"points使用的默认材质\",{\"1\":{\"2729\":1}}],[\"pointsmaterial\",{\"0\":{\"2728\":1,\"2729\":1}}],[\"points\",{\"0\":{\"2320\":1},\"1\":{\"2359\":1,\"2411\":2,\"2446\":3,\"2800\":1}}],[\"pointx\",{\"1\":{\"1346\":2,\"1347\":2,\"1348\":2,\"1349\":2}}],[\"point\",{\"1\":{\"1342\":2,\"1344\":4,\"1346\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1414\":5}}],[\"pointer\",{\"1\":{\"21\":1,\"64\":1}}],[\"port\",{\"1\":{\"575\":1,\"864\":9,\"865\":2,\"866\":4,\"1152\":1,\"1677\":2}}],[\"porps\",{\"1\":{\"251\":1}}],[\"polygon\",{\"1\":{\"2668\":1}}],[\"polygonoffsetunits\",{\"0\":{\"2670\":1}}],[\"polygonoffsetfactor\",{\"0\":{\"2669\":1}}],[\"polygonoffset\",{\"0\":{\"2668\":1}}],[\"polyhedrongeometry\",{\"0\":{\"2394\":1,\"2395\":1},\"1\":{\"2395\":1}}],[\"polyfill\",{\"1\":{\"681\":1,\"1334\":5}}],[\"poll\",{\"1\":{\"379\":7}}],[\"politicalchannel\",{\"1\":{\"343\":1}}],[\"politics\",{\"1\":{\"343\":7}}],[\"politicschannel\",{\"1\":{\"343\":4}}],[\"poptarget\",{\"1\":{\"1493\":2,\"1561\":2,\"1562\":1,\"1571\":3}}],[\"pop\",{\"0\":{\"693\":1},\"1\":{\"374\":1,\"682\":1,\"691\":2,\"693\":3,\"766\":1,\"767\":1,\"1366\":1,\"1414\":2,\"1535\":1,\"1550\":1,\"1562\":1,\"1601\":3}}],[\"power\",{\"1\":{\"2788\":1}}],[\"powerpreference\",{\"1\":{\"2788\":1}}],[\"pow\",{\"1\":{\"290\":2,\"621\":2,\"2133\":1}}],[\"pos\",{\"1\":{\"2133\":1}}],[\"possibleconstructorreturn\",{\"1\":{\"495\":2}}],[\"poststab\",{\"1\":{\"1311\":1}}],[\"posts\",{\"1\":{\"822\":2,\"1311\":4}}],[\"post请求参数放在send里面\",{\"1\":{\"816\":1}}],[\"post请求时才使用字符串参数\",{\"1\":{\"816\":1}}],[\"post\",{\"1\":{\"816\":3,\"817\":4,\"822\":2,\"864\":1,\"1150\":1,\"1211\":1,\"1689\":1,\"2039\":1}}],[\"postmessage\",{\"0\":{\"861\":1},\"1\":{\"343\":3,\"861\":3}}],[\"postcss\",{\"1\":{\"22\":1,\"65\":1,\"208\":4,\"1334\":1}}],[\"position为\",{\"1\":{\"148\":1}}],[\"position\",{\"0\":{\"2817\":1,\"2818\":1},\"1\":{\"21\":3,\"64\":3,\"165\":2,\"166\":2,\"167\":2,\"168\":2,\"184\":1,\"1289\":5,\"1469\":2,\"2278\":1,\"2562\":2,\"2872\":1,\"2876\":1,\"2884\":1}}],[\"pull\",{\"1\":{\"1609\":5}}],[\"purecomponent\",{\"1\":{\"1320\":1}}],[\"put请求不做任何处理\",{\"1\":{\"860\":1}}],[\"put\",{\"1\":{\"860\":2,\"864\":1,\"2039\":1}}],[\"publish\",{\"1\":{\"1814\":3}}],[\"public\",{\"1\":{\"20\":1,\"21\":2,\"63\":1,\"64\":2,\"1386\":1,\"1388\":1,\"1390\":2,\"1391\":1,\"1467\":1}}],[\"pubsub\",{\"1\":{\"1814\":6}}],[\"pubdate>time\",{\"1\":{\"215\":1}}],[\"pushtarget\",{\"1\":{\"1493\":2,\"1561\":2,\"1562\":1,\"1571\":3}}],[\"push\",{\"0\":{\"692\":1},\"1\":{\"12\":1,\"34\":2,\"55\":1,\"77\":2,\"118\":1,\"119\":1,\"123\":1,\"127\":2,\"128\":3,\"374\":1,\"418\":1,\"431\":1,\"436\":1,\"455\":2,\"484\":1,\"490\":1,\"492\":1,\"494\":1,\"580\":2,\"581\":3,\"584\":8,\"682\":1,\"691\":2,\"692\":3,\"694\":1,\"731\":6,\"735\":1,\"743\":1,\"766\":1,\"767\":2,\"1235\":1,\"1265\":1,\"1302\":1,\"1311\":1,\"1315\":3,\"1339\":1,\"1366\":1,\"1414\":2,\"1425\":3,\"1468\":1,\"1493\":2,\"1535\":3,\"1541\":1,\"1542\":1,\"1550\":4,\"1551\":3,\"1561\":1,\"1562\":2,\"1564\":2,\"1571\":3,\"1594\":1,\"1595\":1,\"1601\":2,\"1610\":5,\"1619\":2,\"1621\":2,\"1789\":1,\"1806\":1,\"1814\":1,\"1823\":1,\"2446\":1,\"2462\":1}}],[\"pragma\",{\"1\":{\"2741\":2}}],[\"pr\",{\"1\":{\"1009\":1}}],[\"privacy\",{\"1\":{\"1616\":1}}],[\"private\",{\"1\":{\"1390\":2,\"1437\":2}}],[\"privatetmp=true\",{\"1\":{\"1137\":1}}],[\"privileges\",{\"1\":{\"1435\":4}}],[\"primary\",{\"1\":{\"1162\":2,\"1177\":2,\"1186\":2,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2}}],[\"primitive\",{\"1\":{\"804\":1,\"806\":1,\"1343\":1}}],[\"price\",{\"1\":{\"455\":8}}],[\"printemployeeinformation\",{\"1\":{\"1435\":1}}],[\"print\",{\"1\":{\"436\":4}}],[\"printwidth\",{\"1\":{\"20\":1,\"63\":1}}],[\"premultiplied\",{\"1\":{\"2788\":1}}],[\"premultipliedalpha\",{\"0\":{\"2672\":1},\"1\":{\"2788\":1}}],[\"precision\",{\"0\":{\"2671\":1},\"1\":{\"2788\":1,\"2795\":1}}],[\"prefer\",{\"1\":{\"1152\":1}}],[\"prefix选项指定安装的目录\",{\"1\":{\"1134\":1}}],[\"prefix=\",{\"1\":{\"1134\":1}}],[\"presenter\",{\"1\":{\"2032\":1}}],[\"preservedrawingbuffer\",{\"1\":{\"2788\":1}}],[\"preserve\",{\"1\":{\"20\":1,\"63\":1,\"998\":1,\"1454\":2}}],[\"press\",{\"1\":{\"986\":2}}],[\"prepare\",{\"1\":{\"379\":1}}],[\"prevvnode\",{\"1\":{\"1479\":3}}],[\"prevvalue\",{\"1\":{\"1283\":2}}],[\"prevtodos\",{\"1\":{\"1212\":4}}],[\"prevstate\",{\"1\":{\"1194\":6,\"1196\":2,\"1300\":2}}],[\"previous\",{\"1\":{\"1283\":1,\"1285\":1}}],[\"previousvalue\",{\"1\":{\"284\":1,\"705\":1,\"1283\":6,\"1285\":5}}],[\"preview\",{\"1\":{\"395\":4,\"413\":5,\"414\":4}}],[\"prev\",{\"1\":{\"284\":6,\"705\":6,\"706\":3,\"736\":2,\"877\":9}}],[\"preventdefault\",{\"0\":{\"239\":1},\"1\":{\"239\":2,\"392\":3}}],[\"prewx\",{\"1\":{\"108\":1,\"112\":1}}],[\"pre\",{\"0\":{\"1703\":1},\"1\":{\"27\":1,\"33\":2,\"70\":1,\"76\":2,\"1167\":1,\"1265\":2,\"1454\":1}}],[\"prettierignore\",{\"1\":{\"20\":1,\"63\":1}}],[\"prettierrc文件\",{\"0\":{\"103\":1}}],[\"prettierrc\",{\"1\":{\"20\":2,\"63\":1}}],[\"prettier\",{\"0\":{\"20\":1,\"63\":1,\"102\":2},\"1\":{\"19\":1,\"20\":2,\"21\":2,\"22\":2,\"27\":6,\"39\":1,\"63\":6,\"64\":2,\"65\":2,\"70\":6}}],[\"programs\",{\"1\":{\"2800\":1}}],[\"progress\",{\"1\":{\"395\":3}}],[\"projectionmatrixinverse\",{\"0\":{\"2516\":1}}],[\"projectionmatrix\",{\"0\":{\"2515\":1}}],[\"protected\",{\"1\":{\"1390\":2}}],[\"proto\",{\"1\":{\"359\":1,\"481\":1,\"482\":3,\"495\":2,\"641\":5,\"657\":5,\"1535\":1}}],[\"prototype\",{\"0\":{\"399\":1,\"400\":1,\"405\":1,\"406\":1,\"659\":1,\"758\":1,\"759\":1},\"1\":{\"123\":1,\"127\":1,\"254\":2,\"262\":1,\"320\":2,\"326\":1,\"331\":2,\"356\":1,\"357\":1,\"358\":5,\"359\":3,\"403\":1,\"455\":2,\"478\":1,\"479\":1,\"481\":5,\"482\":6,\"484\":5,\"486\":1,\"488\":7,\"494\":5,\"495\":3,\"580\":1,\"582\":1,\"590\":4,\"641\":6,\"657\":6,\"658\":1,\"659\":13,\"681\":7,\"723\":2,\"724\":1,\"725\":1,\"728\":1,\"731\":3,\"902\":1,\"1466\":2,\"1469\":1,\"1479\":1,\"1486\":1,\"1492\":2,\"1502\":1,\"1517\":3,\"1519\":1,\"1525\":2,\"1527\":4,\"1528\":1,\"1533\":1,\"1534\":1,\"1535\":1,\"1543\":1,\"1548\":2,\"1743\":1,\"1766\":1,\"1772\":1,\"1777\":2,\"1820\":2,\"1823\":3,\"1829\":3}}],[\"prod\",{\"1\":{\"1501\":1}}],[\"production\",{\"1\":{\"1334\":1,\"1501\":1,\"1505\":1}}],[\"prodwx\",{\"1\":{\"108\":1}}],[\"proc\",{\"1\":{\"913\":1}}],[\"processes\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"processing\",{\"1\":{\"333\":1}}],[\"process\",{\"0\":{\"381\":1},\"1\":{\"109\":5,\"111\":3,\"376\":1,\"378\":1,\"380\":1,\"381\":2,\"383\":1,\"1505\":1,\"2080\":1}}],[\"proxy\",{\"1\":{\"866\":1,\"1150\":1,\"1152\":2,\"1153\":11,\"1335\":1,\"1533\":3,\"1793\":1,\"1798\":5}}],[\"proxyres\",{\"1\":{\"864\":2}}],[\"proxyreq\",{\"1\":{\"864\":1}}],[\"provider>组件\",{\"1\":{\"1218\":1}}],[\"provider>\",{\"1\":{\"1157\":1,\"1167\":1,\"1175\":1,\"1182\":1,\"1218\":1,\"1220\":1,\"1222\":2,\"1223\":2,\"1227\":2,\"1229\":1,\"1321\":1,\"1324\":1}}],[\"provider\",{\"0\":{\"1218\":1,\"1223\":1},\"1\":{\"1157\":1,\"1167\":1,\"1175\":1,\"1182\":1,\"1217\":1,\"1218\":1,\"1220\":2,\"1222\":3,\"1223\":2,\"1225\":1,\"1227\":2,\"1229\":1,\"1321\":1,\"1324\":1}}],[\"provide\",{\"1\":{\"345\":1,\"1513\":2}}],[\"province\",{\"1\":{\"322\":4,\"644\":4}}],[\"profile与大多数平台上webgl渲染器的限制\",{\"1\":{\"2758\":1,\"2765\":1}}],[\"profile\",{\"0\":{\"1118\":1,\"1119\":1},\"1\":{\"275\":2,\"470\":1,\"1083\":1,\"1116\":2,\"1121\":1}}],[\"promise传递中间值很麻烦\",{\"1\":{\"596\":1}}],[\"promise虽然摆脱了回调地狱\",{\"1\":{\"596\":1}}],[\"promise实例\",{\"1\":{\"582\":1}}],[\"promise的调试很差\",{\"1\":{\"596\":1}}],[\"promise的错误捕获比较冗余\",{\"1\":{\"596\":1}}],[\"promise的话需要将结果传入\",{\"1\":{\"582\":1}}],[\"promise的实现\",{\"0\":{\"579\":1}}],[\"promise的异常处理\",{\"0\":{\"578\":1}}],[\"promise的方法\",{\"0\":{\"570\":1}}],[\"promise3\",{\"1\":{\"573\":2,\"574\":2}}],[\"promise2\",{\"1\":{\"573\":2,\"574\":2}}],[\"promise1\",{\"1\":{\"573\":2,\"574\":3}}],[\"promise对象的catch方法相当于then方法的第二个参数\",{\"1\":{\"572\":1}}],[\"promise常用的方法\",{\"1\":{\"570\":1}}],[\"promises\",{\"1\":{\"328\":8,\"584\":11}}],[\"promise\",{\"0\":{\"300\":1,\"323\":1,\"328\":1,\"561\":1,\"562\":1,\"563\":1,\"564\":1,\"565\":1,\"566\":1,\"567\":1,\"568\":1,\"569\":1,\"580\":1,\"581\":1,\"582\":1,\"583\":1,\"591\":1},\"1\":{\"128\":7,\"299\":1,\"300\":7,\"323\":11,\"328\":14,\"334\":4,\"341\":1,\"376\":6,\"380\":1,\"381\":3,\"419\":1,\"420\":1,\"473\":1,\"562\":9,\"563\":1,\"565\":12,\"566\":8,\"567\":4,\"568\":8,\"569\":11,\"571\":6,\"573\":4,\"574\":5,\"575\":7,\"576\":12,\"577\":9,\"578\":5,\"580\":1,\"581\":11,\"582\":6,\"583\":6,\"584\":24,\"591\":4,\"592\":4,\"594\":3,\"595\":9,\"596\":4,\"597\":3,\"859\":1,\"865\":1,\"891\":1,\"1188\":3,\"1542\":2,\"1758\":1}}],[\"prosewrap\",{\"1\":{\"20\":1,\"63\":1}}],[\"prop<t\",{\"1\":{\"1366\":3}}],[\"propname\",{\"1\":{\"1340\":3}}],[\"proptypes\",{\"1\":{\"1315\":4,\"1320\":7,\"1323\":7}}],[\"props信息\",{\"1\":{\"1196\":1}}],[\"props\",{\"0\":{\"1283\":1},\"1\":{\"1161\":2,\"1162\":2,\"1163\":1,\"1194\":5,\"1196\":4,\"1197\":4,\"1200\":3,\"1204\":2,\"1241\":1,\"1267\":3,\"1281\":2,\"1283\":1,\"1315\":5,\"1320\":2,\"1323\":4,\"1324\":1,\"1514\":8,\"1517\":1,\"1521\":3,\"1533\":1}}],[\"propagation<\",{\"1\":{\"240\":1}}],[\"propagation\",{\"1\":{\"234\":1}}],[\"propertykey\",{\"1\":{\"1467\":2,\"1468\":2,\"1469\":2}}],[\"propertydecorator\",{\"1\":{\"1467\":1}}],[\"property1\",{\"1\":{\"490\":1}}],[\"property\",{\"1\":{\"21\":1,\"64\":1,\"331\":3,\"885\":1,\"1338\":1,\"1340\":1,\"1369\":1,\"1372\":2,\"1374\":1,\"1414\":4,\"1465\":1,\"1467\":3}}],[\"properties\",{\"0\":{\"2803\":1},\"1\":{\"21\":2,\"64\":2,\"122\":1,\"128\":2,\"1338\":1}}],[\"prop\",{\"1\":{\"19\":2,\"62\":2,\"1209\":1,\"1212\":2,\"1309\":1,\"1315\":1,\"1320\":2,\"1323\":2,\"1366\":12}}],[\"paas\",{\"1\":{\"2049\":1}}],[\"payload\",{\"1\":{\"1167\":3,\"1168\":7}}],[\"paginate\",{\"1\":{\"1009\":1}}],[\"pageinfo>\",{\"1\":{\"1376\":1}}],[\"pageinfo\",{\"1\":{\"1376\":1}}],[\"pages\",{\"1\":{\"1152\":1}}],[\"pageup\",{\"1\":{\"989\":1}}],[\"pagedown\",{\"1\":{\"989\":1}}],[\"page\",{\"1\":{\"21\":1,\"64\":1,\"343\":2,\"1057\":2,\"1152\":3,\"1153\":2,\"1168\":1,\"1376\":1,\"1705\":3,\"2643\":1}}],[\"passing\",{\"1\":{\"2842\":1}}],[\"password\",{\"1\":{\"940\":2,\"1472\":1}}],[\"passwd\",{\"0\":{\"939\":1},\"1\":{\"943\":2}}],[\"pass\",{\"1\":{\"866\":1,\"1152\":3,\"1153\":1}}],[\"pan\",{\"1\":{\"338\":2}}],[\"pannernode\",{\"1\":{\"338\":4}}],[\"panner\",{\"1\":{\"338\":1}}],[\"pause\",{\"1\":{\"338\":5}}],[\"padder的类型收窄为\",{\"1\":{\"1437\":1}}],[\"padder\",{\"1\":{\"1437\":6}}],[\"padding等\",{\"1\":{\"151\":1}}],[\"padding\",{\"1\":{\"21\":5,\"64\":5,\"118\":1,\"119\":1,\"127\":2,\"205\":1,\"1436\":6}}],[\"padleft\",{\"1\":{\"1436\":1}}],[\"padend\",{\"0\":{\"292\":1,\"294\":1,\"548\":1},\"1\":{\"292\":1,\"294\":3,\"548\":3}}],[\"padstart\",{\"0\":{\"292\":1,\"293\":1,\"547\":1},\"1\":{\"292\":1,\"293\":8,\"546\":1,\"547\":8}}],[\"parsing<\",{\"1\":{\"1705\":2}}],[\"parsing\",{\"0\":{\"1703\":1}}],[\"parsestarttag\",{\"1\":{\"1550\":2}}],[\"parse\",{\"1\":{\"560\":1,\"740\":3,\"763\":3,\"864\":2,\"865\":1,\"866\":1,\"1549\":3,\"1550\":2,\"1552\":1}}],[\"parsefloat\",{\"0\":{\"551\":1},\"1\":{\"551\":9,\"663\":8,\"796\":1,\"797\":3}}],[\"parseint\",{\"0\":{\"550\":1},\"1\":{\"123\":1,\"127\":1,\"549\":1,\"550\":13,\"663\":14,\"773\":1,\"796\":1,\"797\":4}}],[\"parser中间件\",{\"1\":{\"193\":1}}],[\"parser模块\",{\"1\":{\"193\":1}}],[\"parser\",{\"0\":{\"193\":1},\"1\":{\"27\":1,\"62\":2,\"70\":1,\"193\":3}}],[\"parseroptions\",{\"1\":{\"19\":1,\"62\":1}}],[\"partialedwindow\",{\"1\":{\"1372\":1}}],[\"partial<userinfo>\",{\"1\":{\"1372\":2}}],[\"partial<t>有个局限性\",{\"1\":{\"1372\":1}}],[\"partial<t>\",{\"1\":{\"1372\":2}}],[\"partial\",{\"0\":{\"1372\":1}}],[\"partialpoint\",{\"1\":{\"1343\":1}}],[\"partialpointy\",{\"1\":{\"1343\":2}}],[\"partialpointx\",{\"1\":{\"1343\":2}}],[\"parentval\",{\"1\":{\"1485\":8}}],[\"parentnode\",{\"1\":{\"1476\":2,\"1528\":1}}],[\"parentelm\",{\"1\":{\"1476\":3,\"1528\":3}}],[\"parentcomponent\",{\"1\":{\"1267\":1}}],[\"parent\",{\"1\":{\"449\":1,\"494\":2,\"495\":7,\"766\":6,\"767\":7,\"863\":2,\"1390\":2,\"1391\":4,\"1485\":5,\"1550\":2}}],[\"parallel\",{\"0\":{\"1649\":1}}],[\"paragraph\",{\"1\":{\"436\":4}}],[\"parameterindex\",{\"1\":{\"1469\":4}}],[\"parameterdecorator\",{\"1\":{\"1469\":1}}],[\"parameters<\",{\"1\":{\"1382\":1}}],[\"parameters<typeofmath\",{\"1\":{\"1382\":1}}],[\"parameters<typeofparseint>\",{\"1\":{\"1382\":1}}],[\"parameters<typeofarray\",{\"1\":{\"1382\":1}}],[\"parameters<t\",{\"1\":{\"1382\":1}}],[\"parameters<t>\",{\"1\":{\"1382\":1}}],[\"parameters\",{\"0\":{\"1382\":1,\"2599\":1,\"2619\":1,\"2697\":1,\"2746\":1,\"2777\":1,\"2788\":1},\"1\":{\"1468\":1,\"2599\":1,\"2619\":1,\"2697\":1,\"2746\":1,\"2777\":1,\"2788\":1}}],[\"parameter\",{\"1\":{\"1370\":1,\"1428\":1,\"1442\":1,\"1465\":1,\"1469\":2,\"2835\":1}}],[\"params\",{\"1\":{\"859\":5,\"865\":2,\"1150\":6,\"1152\":1,\"1829\":2}}],[\"param1\",{\"1\":{\"305\":2}}],[\"param\",{\"1\":{\"128\":3,\"1152\":1,\"2303\":1,\"2304\":1}}],[\"pack\",{\"1\":{\"21\":1,\"64\":1}}],[\"packages\",{\"1\":{\"1073\":1,\"1141\":1}}],[\"package\",{\"0\":{\"15\":1,\"58\":1,\"1333\":1,\"1499\":1},\"1\":{\"27\":2,\"70\":2,\"474\":1,\"1072\":2,\"1357\":2}}],[\"pattern\",{\"1\":{\"342\":2,\"986\":2,\"989\":1,\"1006\":1,\"1007\":1,\"1014\":2,\"1016\":2,\"1762\":1,\"1784\":1,\"1793\":1,\"1802\":1}}],[\"patch用来渲染和更新视图\",{\"1\":{\"1528\":1}}],[\"patch是渲染vnode为真实dom核心\",{\"1\":{\"1528\":1}}],[\"patchchildren\",{\"1\":{\"1476\":1,\"1478\":1}}],[\"patch和讯渲染方法改写\",{\"0\":{\"1476\":1}}],[\"patch\",{\"1\":{\"19\":1,\"1476\":1,\"1478\":6,\"1479\":2,\"1528\":6,\"1618\":1}}],[\"pathrewrite\",{\"1\":{\"1335\":1}}],[\"path=\",{\"1\":{\"1312\":2}}],[\"path变量\",{\"1\":{\"1121\":1}}],[\"paths\",{\"1\":{\"40\":1,\"463\":2,\"1332\":1,\"1454\":1}}],[\"path\",{\"0\":{\"1103\":1},\"1\":{\"15\":1,\"22\":1,\"40\":2,\"58\":1,\"65\":1,\"82\":2,\"109\":2,\"463\":2,\"864\":1,\"999\":3,\"1007\":2,\"1116\":1,\"1118\":1,\"1119\":1,\"1493\":3,\"1571\":3,\"1677\":2,\"2438\":2,\"2474\":1}}],[\"6over4隧道\",{\"1\":{\"2215\":1}}],[\"6to4隧道\",{\"1\":{\"2215\":1}}],[\"6个环节包括\",{\"1\":{\"2121\":1}}],[\"685f868\",{\"1\":{\"1637\":1}}],[\"68495\",{\"1\":{\"1036\":1}}],[\"65\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"65535\",{\"1\":{\"402\":1,\"518\":1}}],[\"666\",{\"1\":{\"1044\":2,\"1413\":1,\"1417\":1}}],[\"66\",{\"1\":{\"455\":3}}],[\"60年代\",{\"1\":{\"1863\":1}}],[\"60ms\",{\"1\":{\"1649\":2}}],[\"600\",{\"1\":{\"1153\":2,\"1256\":1}}],[\"6000\",{\"1\":{\"860\":1}}],[\"60\",{\"1\":{\"455\":2,\"550\":2,\"817\":1}}],[\"644\",{\"1\":{\"1007\":1}}],[\"64\",{\"1\":{\"320\":1,\"402\":1,\"445\":1,\"606\":3,\"611\":1,\"1029\":1}}],[\"640\",{\"1\":{\"206\":2}}],[\"6\",{\"0\":{\"12\":1,\"34\":1,\"55\":1,\"77\":1,\"264\":1,\"318\":1,\"343\":1,\"414\":1,\"421\":1,\"434\":1,\"465\":1,\"494\":1,\"511\":1,\"527\":1,\"576\":1,\"578\":1,\"612\":1,\"621\":1,\"636\":1,\"641\":1,\"700\":1,\"740\":1,\"877\":1,\"1513\":1,\"1604\":1,\"1622\":1,\"1629\":1,\"1718\":1},\"1\":{\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"127\":1,\"239\":2,\"266\":2,\"272\":3,\"280\":1,\"284\":2,\"312\":4,\"379\":1,\"403\":5,\"445\":1,\"455\":1,\"523\":1,\"528\":2,\"529\":1,\"530\":4,\"631\":2,\"701\":2,\"705\":2,\"712\":2,\"740\":1,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"794\":1,\"838\":1,\"872\":2,\"877\":2,\"903\":4,\"1021\":1,\"1040\":2,\"1132\":2,\"1146\":1,\"1338\":1,\"1402\":1,\"1437\":1,\"1454\":1,\"1563\":1,\"1839\":1,\"2395\":6,\"2403\":4}}],[\"bpm\",{\"1\":{\"1884\":1}}],[\"bpr\",{\"1\":{\"1884\":1}}],[\"bpr和bpm\",{\"0\":{\"1884\":1}}],[\"bsp\",{\"1\":{\"1876\":1}}],[\"b2g\",{\"1\":{\"1869\":1}}],[\"bb\",{\"1\":{\"1483\":1,\"1490\":1,\"1568\":2}}],[\"bbb目录成为空目录\",{\"1\":{\"979\":1}}],[\"bbb\",{\"1\":{\"253\":8,\"286\":1,\"678\":1,\"979\":1}}],[\"bg\",{\"1\":{\"1256\":5}}],[\"bg=\",{\"1\":{\"94\":1}}],[\"b<工作目录>\",{\"1\":{\"1018\":1}}],[\"b<显示列数>\",{\"1\":{\"1014\":1}}],[\"b或\",{\"1\":{\"1009\":2}}],[\"b或c开头\",{\"1\":{\"973\":1}}],[\"b选项仅显示非空行的行号\",{\"1\":{\"984\":1}}],[\"bz2\",{\"1\":{\"909\":1}}],[\"b^c\",{\"1\":{\"610\":1}}],[\"bc范式\",{\"0\":{\"2253\":1}}],[\"bclvz\",{\"1\":{\"1012\":1}}],[\"bc\",{\"1\":{\"610\":1}}],[\"bcd\",{\"1\":{\"537\":1,\"1730\":1}}],[\"bcdefg\",{\"1\":{\"528\":1,\"529\":2,\"530\":1}}],[\"bcdef\",{\"1\":{\"528\":1,\"530\":2}}],[\"btoa\",{\"1\":{\"414\":2,\"417\":1}}],[\"btn\",{\"1\":{\"94\":1,\"231\":4,\"232\":4,\"240\":8,\"1839\":4}}],[\"btn=tk\",{\"1\":{\"94\":1}}],[\"bevelsegments\",{\"1\":{\"2407\":1}}],[\"bevelsize\",{\"1\":{\"2407\":1}}],[\"beveloffset\",{\"1\":{\"2407\":1}}],[\"bevelthickness\",{\"1\":{\"2407\":1}}],[\"bevelenabled\",{\"1\":{\"2407\":1}}],[\"beziercurveto\",{\"1\":{\"2403\":6}}],[\"bell\",{\"1\":{\"2117\":1}}],[\"below\",{\"1\":{\"1256\":3}}],[\"bean\",{\"1\":{\"2031\":2}}],[\"beta测试\",{\"1\":{\"1940\":1}}],[\"being\",{\"1\":{\"1448\":1}}],[\"benign\",{\"1\":{\"1104\":1}}],[\"best\",{\"1\":{\"1021\":2,\"1646\":2}}],[\"begin\",{\"1\":{\"400\":1}}],[\"because\",{\"1\":{\"345\":1,\"1366\":1,\"1414\":1}}],[\"be\",{\"1\":{\"305\":2,\"358\":1,\"1366\":1,\"1505\":1,\"2710\":1,\"2761\":1,\"2835\":1}}],[\"been\",{\"1\":{\"250\":2,\"1469\":2}}],[\"beforefn\",{\"1\":{\"1777\":2}}],[\"before=<date>\",{\"1\":{\"1626\":1}}],[\"beforedestroy\",{\"1\":{\"1485\":1}}],[\"beforeupdate\",{\"1\":{\"1485\":1,\"1486\":1}}],[\"beforemount\",{\"1\":{\"1485\":1,\"1486\":1,\"1525\":1}}],[\"beforecreate\",{\"0\":{\"1512\":1},\"1\":{\"1485\":1,\"1486\":1,\"1521\":1}}],[\"before\",{\"1\":{\"19\":1,\"21\":2,\"62\":1,\"64\":2,\"249\":1,\"511\":1,\"1448\":1,\"1777\":2}}],[\"b\",{\"1\":{\"241\":3,\"254\":3,\"261\":5,\"265\":2,\"269\":5,\"286\":2,\"302\":4,\"303\":2,\"304\":2,\"305\":2,\"322\":2,\"328\":3,\"329\":2,\"351\":2,\"405\":2,\"445\":2,\"455\":4,\"463\":2,\"508\":4,\"510\":3,\"518\":1,\"526\":2,\"555\":4,\"569\":1,\"587\":1,\"589\":6,\"604\":1,\"605\":2,\"610\":1,\"616\":2,\"621\":2,\"631\":2,\"633\":2,\"635\":2,\"644\":2,\"645\":1,\"646\":3,\"654\":2,\"657\":3,\"662\":4,\"674\":1,\"678\":2,\"698\":4,\"713\":2,\"719\":2,\"729\":2,\"731\":2,\"732\":2,\"755\":2,\"756\":6,\"763\":4,\"764\":3,\"765\":2,\"775\":1,\"777\":1,\"778\":2,\"779\":2,\"838\":2,\"840\":2,\"842\":2,\"843\":4,\"844\":2,\"847\":2,\"861\":4,\"862\":5,\"863\":6,\"867\":1,\"873\":2,\"881\":2,\"883\":1,\"885\":3,\"944\":1,\"983\":1,\"984\":2,\"989\":3,\"1001\":1,\"1003\":1,\"1006\":1,\"1012\":1,\"1018\":1,\"1061\":1,\"1211\":2,\"1265\":3,\"1343\":1,\"1367\":2,\"1378\":4,\"1379\":1,\"1382\":1,\"1405\":1,\"1409\":1,\"1415\":1,\"1426\":8,\"1442\":5,\"1483\":1,\"1594\":2,\"1596\":2,\"1623\":1,\"1646\":9,\"1650\":3,\"1707\":2,\"1730\":1,\"1789\":1,\"1798\":6,\"1814\":2}}],[\"bypass\",{\"1\":{\"1153\":1}}],[\"bytearray\",{\"1\":{\"418\":2}}],[\"bytearrays\",{\"1\":{\"418\":3}}],[\"bytenumbers\",{\"1\":{\"418\":3}}],[\"bytecharacters\",{\"1\":{\"418\":3}}],[\"bytes\",{\"0\":{\"404\":1},\"1\":{\"404\":11,\"1152\":1,\"1153\":1}}],[\"byteoffset\",{\"0\":{\"410\":1},\"1\":{\"403\":2,\"409\":2,\"410\":2,\"416\":1}}],[\"byte\",{\"1\":{\"399\":1}}],[\"bytelength\",{\"0\":{\"399\":1,\"407\":1,\"410\":1},\"1\":{\"128\":2,\"398\":2,\"399\":2,\"407\":1,\"409\":2,\"410\":2}}],[\"by\",{\"1\":{\"215\":1,\"1009\":1,\"1265\":1,\"1472\":1,\"2779\":1}}],[\"bfc不会重叠浮动元素\",{\"0\":{\"152\":1}}],[\"bfc会阻止垂直外边距折叠\",{\"0\":{\"151\":1}}],[\"bfc就是页面上的一个隔离的独立容器\",{\"1\":{\"149\":1}}],[\"bfc的区域不会与float\",{\"1\":{\"149\":1}}],[\"bfc是一个容器\",{\"1\":{\"147\":1}}],[\"bfc\",{\"0\":{\"146\":1},\"1\":{\"184\":8},\"2\":{\"155\":1}}],[\"b4\",{\"1\":{\"118\":1}}],[\"black\",{\"1\":{\"2779\":1}}],[\"blank\",{\"1\":{\"1009\":1}}],[\"blp模型的安全规则如下\",{\"1\":{\"2117\":1}}],[\"blp模型\",{\"0\":{\"2117\":1}}],[\"blob3\",{\"1\":{\"2462\":1}}],[\"blob2\",{\"1\":{\"2462\":1}}],[\"blob1\",{\"1\":{\"2462\":1}}],[\"blobs\",{\"1\":{\"2462\":2}}],[\"blobtobase64\",{\"1\":{\"420\":1}}],[\"blobtoarraybuffer\",{\"1\":{\"419\":1}}],[\"blobpropertybag\",{\"1\":{\"388\":1}}],[\"blob\",{\"0\":{\"387\":1,\"388\":1,\"389\":1,\"416\":1,\"418\":1,\"419\":1,\"420\":1,\"421\":1},\"1\":{\"386\":1,\"387\":5,\"388\":20,\"389\":14,\"390\":3,\"391\":1,\"393\":1,\"394\":5,\"395\":1,\"397\":3,\"413\":4,\"416\":2,\"418\":3,\"419\":2,\"420\":2,\"421\":1,\"1670\":1,\"2462\":1}}],[\"block|inline\",{\"1\":{\"148\":1}}],[\"block\",{\"1\":{\"21\":2,\"64\":2,\"147\":2,\"171\":1,\"172\":1,\"173\":1,\"178\":1,\"184\":1}}],[\"blendsrc的透明度\",{\"1\":{\"2645\":1}}],[\"blendsrcalpha\",{\"0\":{\"2645\":1}}],[\"blendsrc\",{\"0\":{\"2644\":1}}],[\"blending\",{\"0\":{\"2643\":2}}],[\"blendequationalpha\",{\"0\":{\"2642\":1}}],[\"blendequation\",{\"0\":{\"2641\":1},\"1\":{\"2642\":1,\"2643\":1}}],[\"blenddst的透明度\",{\"1\":{\"2640\":1}}],[\"blenddstalpha\",{\"0\":{\"2640\":1}}],[\"blenddst\",{\"0\":{\"2639\":1},\"1\":{\"2643\":1}}],[\"ble\",{\"1\":{\"341\":3}}],[\"blur\",{\"1\":{\"233\":1}}],[\"bluedata\",{\"1\":{\"128\":6}}],[\"bluedevicelist\",{\"1\":{\"118\":3,\"119\":3,\"127\":3}}],[\"bluetoothaction\",{\"1\":{\"341\":5}}],[\"bluetooth\",{\"0\":{\"341\":1},\"1\":{\"128\":1,\"341\":10,\"2203\":1}}],[\"bluetoothdata\",{\"1\":{\"128\":3}}],[\"blue\",{\"1\":{\"94\":3,\"128\":2,\"535\":4,\"623\":1,\"677\":1,\"680\":3,\"687\":2,\"688\":2,\"696\":2,\"728\":2,\"843\":6,\"1255\":1,\"1256\":3,\"1289\":1}}],[\"biba模型能够防止数据从低完整性级别流向高完整性级别\",{\"1\":{\"2118\":1}}],[\"biba模型主要用于防止非授权修改系统信息\",{\"1\":{\"2118\":1}}],[\"bila模型\",{\"0\":{\"2118\":1}}],[\"bi\",{\"0\":{\"1880\":1}}],[\"bisect\",{\"1\":{\"1637\":6}}],[\"big\",{\"1\":{\"1402\":4,\"1429\":2}}],[\"biglnt\",{\"1\":{\"650\":3}}],[\"bigint\",{\"0\":{\"320\":1,\"1402\":1},\"1\":{\"320\":15,\"604\":3,\"650\":1,\"652\":1,\"1402\":3}}],[\"bigsum\",{\"1\":{\"83\":4}}],[\"bits\",{\"1\":{\"642\":1}}],[\"bit\",{\"1\":{\"123\":2,\"127\":2,\"642\":1}}],[\"binary\",{\"1\":{\"387\":1}}],[\"bindattriblocation\",{\"1\":{\"2755\":1}}],[\"bindevent\",{\"1\":{\"1653\":3}}],[\"bind\",{\"0\":{\"355\":1},\"1\":{\"261\":2,\"355\":13,\"358\":1,\"360\":7,\"362\":1,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2}}],[\"bin\",{\"1\":{\"94\":1,\"913\":2,\"939\":2,\"1029\":2,\"1033\":4,\"1036\":3,\"1079\":1,\"1102\":1,\"1146\":1,\"1472\":1}}],[\"bidi\",{\"1\":{\"21\":1,\"64\":1}}],[\"bumpscale\",{\"0\":{\"2701\":1}}],[\"bumpmap\",{\"0\":{\"2700\":1}}],[\"but\",{\"1\":{\"1372\":2}}],[\"buttonref\",{\"1\":{\"1256\":4}}],[\"buttonwithtooltip\",{\"1\":{\"1256\":1}}],[\"buttonwithtooltip>\",{\"1\":{\"1256\":3}}],[\"button2\",{\"1\":{\"822\":1}}],[\"button\",{\"1\":{\"94\":1,\"118\":1,\"119\":1,\"127\":1,\"1162\":1,\"1177\":1,\"1186\":1,\"1256\":3,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"button>\",{\"1\":{\"83\":4,\"117\":1,\"118\":2,\"119\":2,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":7,\"240\":1,\"338\":4,\"339\":1,\"340\":2,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"436\":2,\"1162\":2,\"1167\":2,\"1168\":3,\"1177\":2,\"1186\":2,\"1196\":2,\"1197\":2,\"1200\":1,\"1204\":2,\"1210\":1,\"1212\":1,\"1220\":1,\"1222\":2,\"1227\":1,\"1243\":1,\"1244\":2,\"1251\":1,\"1256\":1,\"1265\":1,\"1269\":1,\"1273\":3,\"1274\":4,\"1281\":2,\"1286\":2,\"1287\":1,\"1299\":1,\"1300\":1,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2,\"1839\":1}}],[\"buffers\",{\"1\":{\"2751\":1}}],[\"buffersize\",{\"1\":{\"1730\":1}}],[\"bufferattribute\",{\"0\":{\"2288\":1,\"2296\":1,\"2308\":1,\"2309\":1,\"2313\":1,\"2318\":1},\"1\":{\"2278\":1,\"2290\":1,\"2741\":1,\"2744\":4}}],[\"buffergeometry\",{\"0\":{\"2276\":1,\"2277\":1,\"2280\":1,\"2300\":1,\"2301\":2,\"2322\":1},\"1\":{\"2277\":1,\"2278\":1,\"2280\":1,\"2283\":1,\"2284\":1,\"2286\":1,\"2287\":1,\"2292\":1,\"2293\":1,\"2300\":1,\"2301\":2,\"2307\":1,\"2320\":1,\"2321\":1,\"2322\":1,\"2411\":1,\"2741\":2,\"2744\":2}}],[\"buffer\",{\"0\":{\"405\":1,\"410\":1,\"2835\":1},\"1\":{\"123\":2,\"125\":3,\"127\":5,\"128\":12,\"399\":2,\"400\":3,\"401\":3,\"403\":5,\"404\":2,\"405\":2,\"409\":6,\"410\":4,\"411\":2,\"416\":1,\"2282\":1,\"2788\":2,\"2835\":1}}],[\"bug修复\",{\"1\":{\"1618\":1}}],[\"bug\",{\"1\":{\"30\":1,\"73\":1,\"817\":1,\"1601\":2,\"1797\":1}}],[\"build目录下的文件被忽略\",{\"1\":{\"1583\":1}}],[\"builds\",{\"1\":{\"1500\":2}}],[\"buildname\",{\"1\":{\"1423\":3,\"1424\":3}}],[\"builder\",{\"1\":{\"1168\":2,\"1758\":4}}],[\"build\",{\"0\":{\"1500\":1},\"1\":{\"16\":2,\"30\":1,\"59\":2,\"73\":1,\"1332\":2,\"1499\":2,\"1500\":1,\"1501\":1,\"1583\":1}}],[\"brew\",{\"1\":{\"1472\":3}}],[\"break\",{\"1\":{\"21\":1,\"64\":1,\"109\":1,\"128\":2,\"136\":1,\"581\":3,\"719\":1,\"872\":1,\"874\":1,\"1159\":2,\"1173\":3,\"1183\":2,\"1535\":2,\"1564\":2,\"1754\":3}}],[\"brief\",{\"1\":{\"1009\":1}}],[\"browserrouter>\",{\"1\":{\"1312\":1}}],[\"browserrouter\",{\"1\":{\"1312\":1}}],[\"browser\",{\"1\":{\"345\":1,\"1501\":3}}],[\"browsers\",{\"1\":{\"208\":1}}],[\"browserslist\",{\"1\":{\"27\":1,\"70\":1,\"1334\":1}}],[\"broadcastchannel\",{\"1\":{\"343\":10}}],[\"broadcast\",{\"0\":{\"343\":1},\"1\":{\"343\":1}}],[\"br\",{\"0\":{\"185\":1},\"1\":{\"185\":2}}],[\"bracketspacing\",{\"1\":{\"20\":1,\"63\":1}}],[\"bracket\",{\"1\":{\"19\":1,\"62\":1}}],[\"branch\",{\"1\":{\"10\":1,\"53\":1,\"1593\":3,\"1595\":2,\"1597\":2}}],[\"boundingsphere\",{\"0\":{\"2284\":1},\"1\":{\"2304\":1}}],[\"boundingbox\",{\"0\":{\"2283\":1},\"1\":{\"2303\":1}}],[\"bounce\",{\"1\":{\"1820\":2}}],[\"bool\",{\"1\":{\"1442\":2}}],[\"boolean设置为true的次数\",{\"1\":{\"2680\":1}}],[\"boolean\",{\"0\":{\"664\":1,\"1397\":1,\"1430\":1,\"2289\":1,\"2291\":1,\"2310\":1,\"2343\":1,\"2420\":1,\"2512\":1,\"2519\":1,\"2534\":1,\"2576\":1,\"2638\":1,\"2646\":1,\"2648\":1,\"2649\":1,\"2652\":1,\"2653\":1,\"2654\":1,\"2655\":1,\"2656\":1,\"2666\":1,\"2668\":1,\"2672\":1,\"2673\":1,\"2676\":1,\"2677\":1,\"2681\":1,\"2682\":1,\"2706\":1,\"2707\":1,\"2748\":1,\"2752\":1,\"2756\":1,\"2757\":1,\"2759\":1,\"2761\":1,\"2762\":1,\"2764\":1,\"2780\":1,\"2781\":1,\"2790\":1,\"2791\":1,\"2792\":1,\"2793\":1,\"2801\":1,\"2802\":1,\"2806\":1,\"2812\":3,\"2844\":2,\"2845\":1,\"2857\":1},\"1\":{\"254\":1,\"285\":1,\"627\":2,\"641\":1,\"642\":2,\"650\":2,\"652\":1,\"653\":1,\"656\":2,\"659\":1,\"662\":1,\"664\":10,\"666\":2,\"714\":1,\"772\":1,\"773\":3,\"789\":1,\"790\":4,\"791\":6,\"792\":5,\"793\":3,\"795\":2,\"806\":1,\"875\":1,\"889\":1,\"1366\":2,\"1375\":1,\"1380\":1,\"1397\":1,\"1412\":1,\"1416\":2,\"1418\":1,\"1422\":1,\"1429\":1,\"1430\":2,\"1431\":1,\"1436\":1,\"1493\":1,\"1571\":1}}],[\"boot\",{\"1\":{\"913\":1,\"1029\":1}}],[\"book\",{\"1\":{\"455\":2}}],[\"boo\",{\"1\":{\"276\":1,\"472\":1}}],[\"bob\",{\"1\":{\"255\":1}}],[\"both\",{\"0\":{\"182\":1},\"1\":{\"182\":1}}],[\"bottomleft\",{\"1\":{\"21\":1,\"64\":1}}],[\"bottomright\",{\"1\":{\"21\":1,\"64\":1}}],[\"bottom\",{\"0\":{\"2530\":1,\"2532\":1},\"1\":{\"21\":10,\"64\":10,\"118\":3,\"119\":3,\"127\":3,\"166\":1,\"1256\":1,\"2530\":1}}],[\"bold\",{\"1\":{\"94\":8}}],[\"boxgeometry\",{\"0\":{\"2433\":1,\"2434\":1},\"1\":{\"2434\":1,\"2450\":1}}],[\"box3\",{\"0\":{\"2283\":1}}],[\"boxelem\",{\"1\":{\"1289\":2}}],[\"boxref\",{\"1\":{\"1289\":3}}],[\"boxcomparison\",{\"1\":{\"1255\":2}}],[\"box2元素的样式加上overflow\",{\"1\":{\"152\":1}}],[\"box重叠\",{\"1\":{\"149\":1}}],[\"box如何布局\",{\"1\":{\"147\":1}}],[\"box参与\",{\"1\":{\"147\":1}}],[\"box\",{\"1\":{\"21\":6,\"64\":6,\"118\":6,\"119\":6,\"127\":8,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"170\":1,\"171\":1,\"172\":2,\"173\":1,\"174\":1,\"1161\":1,\"1176\":1,\"1185\":1,\"1315\":4,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1}}],[\"border\",{\"1\":{\"21\":32,\"64\":32,\"118\":4,\"119\":4,\"127\":6,\"205\":2}}],[\"bom\",{\"1\":{\"21\":1,\"64\":1}}],[\"bodyparser\",{\"1\":{\"193\":3}}],[\"body>前\",{\"1\":{\"1707\":1}}],[\"body>\",{\"1\":{\"178\":1,\"215\":1,\"240\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"436\":1,\"867\":1,\"1705\":1,\"1839\":1}}],[\"body\",{\"1\":{\"16\":2,\"59\":2,\"193\":2,\"234\":6,\"240\":3,\"338\":1,\"339\":1,\"340\":2,\"341\":1,\"342\":1,\"343\":1,\"434\":5,\"436\":3,\"859\":2,\"863\":1,\"1150\":1,\"1256\":1,\"2797\":1}}],[\"banner\",{\"1\":{\"1501\":1}}],[\"banana\",{\"1\":{\"879\":3}}],[\"bananas\",{\"1\":{\"526\":2}}],[\"babael\",{\"1\":{\"1334\":1}}],[\"babel\",{\"1\":{\"62\":1,\"495\":1,\"1334\":1,\"1549\":1}}],[\"bad\",{\"1\":{\"1286\":1,\"1637\":2}}],[\"badminton\",{\"1\":{\"692\":2}}],[\"basicshadowmap\",{\"1\":{\"2805\":1}}],[\"bashrc\",{\"0\":{\"1120\":1,\"1121\":1},\"1\":{\"1080\":2,\"1116\":2,\"1119\":1,\"1120\":1}}],[\"bash\",{\"0\":{\"1119\":1},\"1\":{\"939\":2,\"1079\":1,\"1081\":1,\"1083\":1,\"1102\":1,\"1116\":1,\"1123\":1,\"1124\":1}}],[\"basketball\",{\"1\":{\"692\":2,\"762\":2}}],[\"based\",{\"1\":{\"1152\":1}}],[\"base64data\",{\"1\":{\"418\":2}}],[\"base64toblob\",{\"1\":{\"418\":1}}],[\"base64\",{\"0\":{\"414\":1,\"417\":1,\"418\":1,\"420\":1},\"1\":{\"386\":1,\"394\":1,\"395\":2,\"414\":8,\"417\":1,\"1665\":1}}],[\"baseappid\",{\"1\":{\"111\":1}}],[\"basename\",{\"1\":{\"111\":1}}],[\"baseurl\",{\"1\":{\"111\":1,\"463\":3,\"1454\":2}}],[\"base\",{\"1\":{\"11\":1,\"41\":1,\"47\":1,\"54\":1,\"108\":6,\"109\":2,\"111\":3}}],[\"baidumap\",{\"1\":{\"1780\":2}}],[\"baidu\",{\"1\":{\"269\":6,\"345\":1,\"1659\":3}}],[\"baz\",{\"1\":{\"252\":3,\"253\":13,\"305\":2,\"314\":2,\"315\":2,\"360\":2,\"884\":3,\"902\":2}}],[\"backside\",{\"1\":{\"2674\":2,\"2675\":1}}],[\"backingfield\",{\"1\":{\"1467\":4}}],[\"backup\",{\"1\":{\"1003\":2}}],[\"back\",{\"1\":{\"239\":1,\"1057\":1}}],[\"backface\",{\"1\":{\"21\":1,\"64\":1}}],[\"background\",{\"1\":{\"21\":8,\"64\":8,\"178\":1,\"207\":1,\"1255\":4,\"1265\":1,\"1267\":2,\"1289\":1,\"1477\":1}}],[\"barrier\",{\"1\":{\"1650\":1}}],[\"barchart\",{\"1\":{\"1288\":1}}],[\"bar\",{\"1\":{\"20\":1,\"63\":1,\"252\":3,\"253\":11,\"276\":2,\"305\":2,\"314\":2,\"315\":2,\"355\":2,\"360\":8,\"428\":6,\"429\":2,\"472\":2,\"635\":1,\"729\":4,\"842\":2,\"847\":1,\"898\":11,\"902\":2,\"1353\":2,\"1354\":2,\"1417\":1,\"1418\":1,\"1653\":1,\"2750\":2}}],[\"r77\",{\"1\":{\"2741\":1}}],[\"r72\",{\"1\":{\"2741\":1}}],[\"rk\",{\"1\":{\"2255\":1}}],[\"rkhncff\",{\"1\":{\"919\":1}}],[\"r2\",{\"1\":{\"2255\":1}}],[\"r1\",{\"1\":{\"2255\":1}}],[\"r属于bcdf当切仅当其f中每个依赖的决定因素必定包含r的某个候选码\",{\"1\":{\"2253\":1}}],[\"rdb\",{\"1\":{\"2069\":1}}],[\"rdb和aof\",{\"1\":{\"2069\":1}}],[\"ringgeometry\",{\"0\":{\"2382\":1,\"2383\":1},\"1\":{\"2383\":1}}],[\"ria架构风格\",{\"0\":{\"2034\":1}}],[\"rightcount\",{\"1\":{\"1244\":8}}],[\"right\",{\"0\":{\"2530\":1,\"2537\":1},\"1\":{\"21\":10,\"64\":10,\"166\":1,\"184\":1,\"641\":2,\"657\":2,\"1244\":1,\"1428\":2,\"2530\":1}}],[\"rtt\",{\"1\":{\"1713\":1}}],[\"r会一直取代光标所在的文字\",{\"1\":{\"1065\":1}}],[\"r表示可读取\",{\"1\":{\"1038\":1}}],[\"rwx\",{\"1\":{\"1040\":3}}],[\"rwxx\",{\"1\":{\"1038\":1}}],[\"rw\",{\"1\":{\"1036\":1,\"1040\":2}}],[\"r代表可读\",{\"1\":{\"1029\":1}}],[\"rvf\",{\"1\":{\"1025\":1}}],[\"r或\",{\"1\":{\"1009\":1,\"1021\":1,\"1032\":1}}],[\"r或者\",{\"1\":{\"999\":1}}],[\"rm\",{\"0\":{\"994\":1},\"1\":{\"995\":1,\"996\":1,\"1007\":2,\"1608\":1,\"1613\":4}}],[\"rmdir\",{\"0\":{\"977\":1},\"1\":{\"978\":1,\"979\":2}}],[\"r使用参考档的时间记录\",{\"1\":{\"981\":1}}],[\"r<参考文件或目录>\",{\"1\":{\"981\":1}}],[\"rpc\",{\"1\":{\"2054\":1}}],[\"rpms\",{\"1\":{\"1141\":1}}],[\"rpm\",{\"1\":{\"909\":1,\"1071\":2,\"1141\":2,\"1144\":1,\"1146\":1}}],[\"rpx\",{\"1\":{\"21\":1,\"64\":1}}],[\"rgb值会影响每个像素片段的曲面法线\",{\"1\":{\"2710\":1}}],[\"rgb\",{\"1\":{\"843\":6,\"851\":3}}],[\"rfc6585\",{\"1\":{\"817\":1}}],[\"rfc4918\",{\"1\":{\"817\":1}}],[\"rfc2616\",{\"1\":{\"817\":1}}],[\"r\",{\"1\":{\"267\":1,\"919\":1,\"920\":1,\"944\":1,\"945\":1,\"947\":2,\"953\":2,\"972\":2,\"995\":1,\"996\":1,\"998\":1,\"999\":2,\"1015\":1,\"1016\":2,\"1018\":1,\"1019\":2,\"1025\":1,\"1033\":2,\"1035\":3,\"1036\":2,\"1038\":1,\"1039\":1,\"1040\":3,\"1041\":1,\"1056\":1,\"1065\":3,\"1067\":1,\"1109\":1,\"1125\":1,\"1152\":1,\"1368\":3,\"1377\":4,\"1551\":1,\"1593\":1,\"1613\":1}}],[\"rssi\",{\"1\":{\"118\":1}}],[\"rotation\",{\"1\":{\"2314\":1,\"2315\":1,\"2316\":1,\"2323\":1}}],[\"rotatez\",{\"0\":{\"2316\":1}}],[\"rotatey\",{\"0\":{\"2315\":1}}],[\"rotatex\",{\"0\":{\"2314\":1}}],[\"rotate\",{\"1\":{\"1820\":1}}],[\"rom算法\",{\"1\":{\"2411\":1}}],[\"rom\",{\"1\":{\"2176\":1}}],[\"role\",{\"1\":{\"1753\":2,\"1754\":2}}],[\"room\",{\"1\":{\"1375\":1,\"1380\":1}}],[\"rootfolder\",{\"1\":{\"1823\":5}}],[\"rootdirs\",{\"1\":{\"1454\":1}}],[\"rootdir\",{\"1\":{\"1454\":1}}],[\"rootnode\",{\"1\":{\"1236\":2}}],[\"root\",{\"1\":{\"19\":1,\"21\":1,\"23\":1,\"62\":1,\"64\":1,\"66\":1,\"465\":4,\"766\":3,\"767\":3,\"913\":1,\"915\":2,\"931\":4,\"937\":5,\"938\":4,\"939\":6,\"940\":2,\"945\":1,\"951\":2,\"963\":1,\"1029\":5,\"1033\":6,\"1036\":4,\"1049\":1,\"1150\":1,\"1152\":6,\"1153\":4,\"1157\":3,\"1167\":3,\"1175\":3,\"1182\":3,\"1315\":3,\"1472\":2,\"1550\":4,\"1823\":1}}],[\"ro\",{\"1\":{\"1339\":5}}],[\"roughness工作流程\",{\"1\":{\"2717\":1}}],[\"rounded\",{\"1\":{\"1256\":3}}],[\"round\",{\"1\":{\"395\":1,\"748\":1}}],[\"route\",{\"1\":{\"1312\":1}}],[\"routes\",{\"1\":{\"82\":1}}],[\"router源码中就有嵌套了六七层条件操作符的地方\",{\"1\":{\"637\":1}}],[\"router\",{\"0\":{\"82\":1},\"1\":{\"39\":1,\"82\":6,\"83\":1,\"1312\":1}}],[\"rcs\",{\"1\":{\"1009\":2}}],[\"rc\",{\"1\":{\"27\":1,\"70\":1}}],[\"rawshadermaterial\",{\"0\":{\"2616\":1,\"2617\":1},\"1\":{\"2741\":1,\"2743\":1}}],[\"rawstr\",{\"1\":{\"123\":3,\"127\":3}}],[\"raycasting\",{\"1\":{\"2496\":1}}],[\"raycaster\",{\"0\":{\"2496\":1}}],[\"raid6\",{\"1\":{\"2213\":1}}],[\"raid5\",{\"1\":{\"2213\":1}}],[\"raid3\",{\"1\":{\"2213\":1}}],[\"raid10\",{\"1\":{\"2213\":1}}],[\"raid1\",{\"1\":{\"2213\":1}}],[\"raid0与raid1长处的结合\",{\"1\":{\"2213\":1}}],[\"raid0+1\",{\"1\":{\"2213\":1}}],[\"raid0\",{\"1\":{\"2213\":1}}],[\"raid\",{\"0\":{\"2213\":1}}],[\"ram\",{\"1\":{\"2176\":1}}],[\"ratio\",{\"1\":{\"1320\":3,\"1321\":3,\"1323\":5}}],[\"rate\",{\"1\":{\"340\":1}}],[\"rate=1\",{\"1\":{\"340\":1}}],[\"random\",{\"1\":{\"748\":1,\"749\":1,\"1418\":1}}],[\"randomindex\",{\"1\":{\"748\":3,\"749\":4}}],[\"range\",{\"1\":{\"338\":4,\"817\":1}}],[\"rangeerror\",{\"1\":{\"282\":2,\"545\":2,\"677\":1}}],[\"rangeend\",{\"1\":{\"20\":1,\"63\":1}}],[\"rangestart\",{\"1\":{\"20\":1,\"63\":1}}],[\"race方法和all一样\",{\"1\":{\"574\":1}}],[\"race\",{\"0\":{\"574\":1,\"583\":1},\"1\":{\"570\":1,\"574\":2,\"583\":2,\"584\":1}}],[\"radians\",{\"0\":{\"2314\":1,\"2315\":1,\"2316\":1}}],[\"radix\",{\"1\":{\"550\":4}}],[\"radius\",{\"1\":{\"21\":9,\"64\":9,\"205\":2}}],[\"rule\",{\"1\":{\"21\":4,\"64\":4,\"1789\":4}}],[\"rules\",{\"1\":{\"19\":3,\"21\":3,\"30\":1,\"62\":3,\"64\":3,\"73\":1,\"1707\":1,\"1789\":3}}],[\"rushstack\",{\"1\":{\"19\":1}}],[\"runtime\",{\"0\":{\"1502\":1,\"1503\":1},\"1\":{\"1501\":1,\"1502\":1,\"1525\":1,\"1548\":1}}],[\"runtime+compiler\",{\"1\":{\"1501\":1}}],[\"runoob2\",{\"1\":{\"976\":1}}],[\"runoob\",{\"1\":{\"954\":1,\"976\":1}}],[\"running\",{\"1\":{\"191\":1}}],[\"run\",{\"1\":{\"5\":1,\"48\":1,\"112\":1,\"590\":3,\"591\":2,\"597\":3,\"1153\":1,\"1493\":2,\"1540\":1,\"1541\":1,\"1571\":1}}],[\"re\",{\"1\":{\"1244\":2}}],[\"ret\",{\"1\":{\"1168\":1}}],[\"returntype<func>\",{\"1\":{\"1377\":1}}],[\"returntype<t\",{\"1\":{\"1377\":1}}],[\"returntype<t>只是将\",{\"1\":{\"1377\":1}}],[\"returntype<t>\",{\"1\":{\"1368\":1}}],[\"returntype\",{\"0\":{\"1377\":1}}],[\"returnexports\",{\"1\":{\"465\":1}}],[\"returns\",{\"1\":{\"128\":1,\"2826\":1,\"2827\":1}}],[\"return\",{\"1\":{\"39\":1,\"83\":4,\"102\":1,\"123\":4,\"127\":4,\"128\":8,\"239\":1,\"254\":2,\"260\":4,\"274\":2,\"277\":1,\"284\":2,\"286\":1,\"299\":1,\"305\":1,\"333\":1,\"338\":1,\"345\":1,\"354\":4,\"355\":2,\"356\":1,\"357\":1,\"358\":1,\"359\":3,\"362\":2,\"418\":1,\"419\":1,\"420\":1,\"430\":2,\"431\":1,\"433\":3,\"434\":1,\"445\":2,\"455\":4,\"463\":1,\"464\":1,\"465\":1,\"469\":4,\"470\":1,\"472\":1,\"490\":1,\"492\":3,\"495\":5,\"555\":1,\"559\":1,\"565\":4,\"568\":1,\"569\":11,\"571\":2,\"575\":1,\"580\":2,\"581\":3,\"582\":3,\"583\":1,\"584\":11,\"587\":2,\"590\":7,\"591\":2,\"594\":1,\"595\":3,\"596\":4,\"641\":2,\"657\":2,\"678\":1,\"681\":1,\"698\":3,\"705\":2,\"706\":1,\"713\":2,\"719\":1,\"727\":1,\"728\":1,\"735\":1,\"736\":2,\"737\":1,\"738\":1,\"739\":1,\"740\":1,\"743\":1,\"746\":2,\"760\":2,\"765\":2,\"766\":1,\"767\":3,\"768\":4,\"806\":4,\"828\":2,\"831\":3,\"843\":1,\"847\":1,\"849\":1,\"859\":1,\"865\":1,\"872\":1,\"873\":4,\"874\":1,\"877\":3,\"891\":1,\"900\":1,\"901\":1,\"902\":7,\"1159\":1,\"1160\":2,\"1161\":3,\"1162\":2,\"1163\":1,\"1167\":1,\"1168\":3,\"1173\":1,\"1176\":2,\"1177\":1,\"1178\":1,\"1183\":1,\"1184\":2,\"1185\":2,\"1186\":1,\"1187\":1,\"1188\":3,\"1194\":1,\"1196\":2,\"1197\":5,\"1200\":1,\"1204\":1,\"1210\":2,\"1211\":3,\"1212\":1,\"1219\":1,\"1220\":3,\"1222\":5,\"1227\":1,\"1229\":1,\"1235\":2,\"1243\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1255\":1,\"1256\":3,\"1265\":4,\"1267\":7,\"1268\":2,\"1269\":2,\"1273\":3,\"1274\":10,\"1281\":3,\"1282\":2,\"1283\":1,\"1285\":1,\"1286\":2,\"1287\":2,\"1288\":1,\"1289\":2,\"1290\":2,\"1299\":1,\"1300\":1,\"1311\":3,\"1312\":1,\"1315\":2,\"1320\":4,\"1321\":5,\"1323\":5,\"1324\":6,\"1362\":1,\"1365\":1,\"1366\":5,\"1369\":1,\"1370\":2,\"1387\":1,\"1389\":2,\"1390\":1,\"1391\":1,\"1420\":1,\"1421\":1,\"1423\":2,\"1424\":1,\"1426\":2,\"1436\":2,\"1437\":2,\"1438\":2,\"1442\":3,\"1466\":1,\"1467\":1,\"1468\":2,\"1475\":1,\"1476\":4,\"1478\":3,\"1483\":1,\"1484\":1,\"1485\":4,\"1490\":1,\"1491\":1,\"1493\":2,\"1525\":1,\"1527\":8,\"1528\":3,\"1533\":3,\"1534\":3,\"1535\":1,\"1539\":2,\"1547\":2,\"1549\":2,\"1550\":3,\"1551\":6,\"1552\":2,\"1556\":2,\"1560\":2,\"1563\":2,\"1564\":1,\"1568\":3,\"1570\":2,\"1571\":2,\"1753\":3,\"1754\":3,\"1755\":3,\"1758\":2,\"1772\":1,\"1773\":2,\"1774\":1,\"1777\":4,\"1789\":8,\"1798\":2,\"1814\":2,\"1817\":4,\"1829\":2,\"1839\":7,\"2438\":1,\"2462\":1}}],[\"rectlighthelper\",{\"1\":{\"2872\":2}}],[\"rectlight\",{\"1\":{\"2872\":5}}],[\"rectarealighthelper\",{\"1\":{\"2872\":1}}],[\"rectarealightuniformslib\",{\"1\":{\"2872\":1}}],[\"rectarealight\",{\"0\":{\"2871\":1,\"2872\":1},\"1\":{\"2872\":1}}],[\"receiver\",{\"1\":{\"1826\":6}}],[\"received\",{\"1\":{\"1727\":1}}],[\"recipientsids\",{\"1\":{\"1735\":1}}],[\"recv\",{\"1\":{\"1730\":1}}],[\"recursive\",{\"0\":{\"2519\":1},\"1\":{\"998\":1,\"1009\":1,\"1021\":1,\"1032\":1}}],[\"record<page\",{\"1\":{\"1376\":1}}],[\"record<k\",{\"1\":{\"1376\":2}}],[\"record\",{\"0\":{\"1376\":1}}],[\"recommend\",{\"1\":{\"1168\":1}}],[\"recommended\",{\"1\":{\"19\":1,\"39\":1,\"62\":1,\"63\":2}}],[\"recognition\",{\"1\":{\"340\":10}}],[\"reboot\",{\"0\":{\"921\":1},\"1\":{\"913\":1,\"921\":1,\"922\":1}}],[\"relevant\",{\"1\":{\"2754\":1}}],[\"release\",{\"1\":{\"1141\":1}}],[\"reload\",{\"1\":{\"866\":1,\"1135\":1,\"1137\":3,\"1145\":1}}],[\"relativepath\",{\"1\":{\"472\":2}}],[\"relative\",{\"1\":{\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"1256\":1}}],[\"req\",{\"1\":{\"859\":2,\"860\":7,\"864\":5,\"866\":2}}],[\"request=window\",{\"1\":{\"1671\":1}}],[\"request\",{\"1\":{\"864\":1,\"1249\":1,\"1671\":2,\"1689\":1}}],[\"requestdevice\",{\"1\":{\"341\":6}}],[\"requestfullscreen\",{\"1\":{\"339\":4}}],[\"requestanimationframe\",{\"1\":{\"226\":1,\"1289\":2}}],[\"required<t>\",{\"1\":{\"1373\":1}}],[\"required\",{\"0\":{\"1373\":1},\"1\":{\"1372\":2,\"1373\":1}}],[\"requirejs\",{\"0\":{\"462\":1},\"1\":{\"444\":1,\"460\":1,\"461\":2,\"462\":6,\"463\":10}}],[\"requirepragma\",{\"1\":{\"20\":1,\"63\":1}}],[\"require\",{\"1\":{\"19\":2,\"62\":1,\"109\":1,\"110\":1,\"128\":1,\"191\":1,\"192\":1,\"193\":1,\"208\":2,\"449\":1,\"451\":1,\"452\":2,\"453\":2,\"454\":1,\"455\":3,\"458\":2,\"462\":13,\"463\":3,\"464\":8,\"560\":1,\"565\":1,\"569\":2,\"592\":1,\"764\":1,\"859\":2,\"860\":2,\"861\":2,\"862\":2,\"863\":2,\"864\":5,\"865\":1,\"866\":2,\"1335\":1,\"1500\":1}}],[\"regular\",{\"1\":{\"2473\":1,\"2475\":1}}],[\"reg\",{\"1\":{\"658\":3}}],[\"regex\",{\"0\":{\"2473\":1,\"2475\":1},\"1\":{\"537\":1,\"2473\":1,\"2475\":1}}],[\"regexp\",{\"1\":{\"109\":2,\"324\":3,\"535\":3,\"536\":7,\"537\":2,\"656\":1,\"657\":2,\"658\":2,\"659\":2,\"763\":1,\"765\":1,\"1550\":2}}],[\"rej\",{\"1\":{\"574\":2}}],[\"reject就调用catch方法\",{\"1\":{\"819\":1}}],[\"reject返回值\",{\"1\":{\"584\":1}}],[\"rejectedcallbacks\",{\"1\":{\"580\":2}}],[\"rejected\",{\"1\":{\"323\":3,\"328\":2,\"563\":1,\"564\":2,\"565\":1,\"566\":1,\"572\":1,\"576\":3,\"577\":4,\"580\":3,\"581\":3,\"584\":5,\"1168\":3}}],[\"reject\",{\"0\":{\"568\":1},\"1\":{\"128\":13,\"299\":1,\"300\":2,\"323\":1,\"328\":5,\"419\":2,\"563\":1,\"565\":5,\"566\":4,\"568\":8,\"569\":3,\"571\":3,\"573\":3,\"574\":4,\"576\":1,\"577\":1,\"578\":4,\"580\":5,\"581\":8,\"582\":3,\"583\":2,\"584\":25,\"591\":2,\"597\":3,\"859\":1,\"865\":1,\"891\":1}}],[\"revd\",{\"1\":{\"1726\":1}}],[\"reverse\",{\"0\":{\"699\":1},\"1\":{\"682\":1,\"697\":1,\"699\":3,\"1478\":1,\"1535\":1}}],[\"revert\",{\"1\":{\"16\":2,\"30\":1,\"59\":2,\"73\":1}}],[\"revokeobjecturl\",{\"1\":{\"413\":2,\"2462\":1}}],[\"reassign\",{\"1\":{\"1374\":1}}],[\"reasons\",{\"1\":{\"584\":5}}],[\"reason\",{\"1\":{\"323\":1,\"576\":1,\"581\":1,\"584\":9}}],[\"real\",{\"1\":{\"1153\":1}}],[\"react中的状态管理\",{\"0\":{\"1764\":1}}],[\"react18\",{\"0\":{\"1202\":1},\"1\":{\"1201\":2}}],[\"reactdom\",{\"1\":{\"1157\":2,\"1167\":2,\"1175\":2,\"1182\":2,\"1236\":2,\"1315\":2}}],[\"react\",{\"0\":{\"1156\":1},\"1\":{\"251\":2,\"443\":2,\"470\":4,\"637\":1,\"1157\":4,\"1161\":3,\"1162\":3,\"1163\":4,\"1167\":7,\"1168\":2,\"1174\":3,\"1175\":3,\"1176\":2,\"1177\":2,\"1178\":3,\"1180\":3,\"1182\":3,\"1185\":2,\"1186\":2,\"1187\":3,\"1194\":3,\"1196\":2,\"1197\":4,\"1199\":5,\"1200\":2,\"1201\":8,\"1203\":8,\"1204\":3,\"1209\":1,\"1210\":2,\"1211\":2,\"1212\":2,\"1217\":3,\"1220\":3,\"1222\":3,\"1227\":1,\"1229\":1,\"1234\":1,\"1235\":1,\"1236\":3,\"1237\":3,\"1243\":2,\"1244\":2,\"1251\":2,\"1255\":6,\"1256\":3,\"1265\":2,\"1267\":2,\"1269\":2,\"1273\":3,\"1274\":1,\"1281\":1,\"1285\":2,\"1288\":2,\"1289\":1,\"1290\":1,\"1297\":1,\"1299\":1,\"1300\":1,\"1308\":3,\"1311\":3,\"1312\":7,\"1315\":9,\"1320\":9,\"1321\":12,\"1323\":6,\"1324\":9,\"1328\":1,\"1329\":1,\"1330\":1,\"1332\":8,\"1334\":4,\"1454\":2,\"1583\":1,\"1764\":3},\"2\":{\"1164\":1,\"1169\":1,\"1189\":1,\"1205\":1,\"1213\":1,\"1230\":1,\"1238\":1,\"1252\":1,\"1261\":1,\"1270\":1,\"1276\":1,\"1291\":1,\"1304\":1,\"1313\":1,\"1316\":1,\"1325\":1,\"1336\":1}}],[\"reading\",{\"1\":{\"2835\":1}}],[\"readpixels\",{\"1\":{\"2835\":1}}],[\"readrendertargetpixels\",{\"0\":{\"2835\":1}}],[\"readme\",{\"1\":{\"1146\":2}}],[\"ready\",{\"1\":{\"568\":2}}],[\"readystate==4\",{\"1\":{\"819\":1}}],[\"readystate\",{\"1\":{\"394\":1,\"559\":1,\"817\":4,\"860\":1,\"864\":1,\"866\":1}}],[\"readfilethunk\",{\"1\":{\"590\":4}}],[\"readfilepromise\",{\"1\":{\"569\":13,\"591\":3}}],[\"readfile\",{\"1\":{\"560\":2,\"569\":5,\"590\":1,\"591\":1}}],[\"readfiles\",{\"1\":{\"333\":1}}],[\"readfilesync\",{\"1\":{\"109\":1}}],[\"readastext\",{\"1\":{\"394\":1,\"395\":3}}],[\"readasdataurl\",{\"1\":{\"394\":1,\"395\":4,\"414\":1,\"420\":1}}],[\"readasbinarystring\",{\"1\":{\"394\":1}}],[\"readasarraybuffer\",{\"1\":{\"394\":1,\"419\":1}}],[\"readablestream\",{\"1\":{\"387\":1}}],[\"readable\",{\"1\":{\"39\":1}}],[\"reader\",{\"1\":{\"394\":1,\"395\":11,\"414\":3,\"419\":5,\"420\":4}}],[\"readtext\",{\"1\":{\"344\":1}}],[\"read指令发送失败\",{\"1\":{\"127\":1}}],[\"read指令发送成功\",{\"1\":{\"127\":1}}],[\"readblecharacteristicvalue\",{\"0\":{\"126\":1},\"1\":{\"124\":1,\"126\":2,\"127\":1}}],[\"read\",{\"0\":{\"1106\":1},\"1\":{\"122\":1,\"126\":3,\"127\":2,\"569\":4,\"1029\":1,\"1106\":4,\"1153\":1,\"1414\":1,\"2289\":1,\"2512\":1,\"2534\":1,\"2576\":1,\"2756\":1,\"2835\":1}}],[\"readonly<todo>\",{\"1\":{\"1374\":1}}],[\"readonly<t>\",{\"1\":{\"1373\":2,\"1374\":2}}],[\"readonlyarray<number>\",{\"1\":{\"1339\":1}}],[\"readonlyarray<t>\",{\"1\":{\"1339\":1}}],[\"readonly\",{\"0\":{\"1374\":1,\"1388\":1},\"1\":{\"39\":1,\"1339\":1,\"1371\":2,\"1373\":2,\"1374\":2,\"1388\":4,\"1414\":4}}],[\"remaining\",{\"1\":{\"582\":2}}],[\"removehandler\",{\"0\":{\"2475\":1}}],[\"removeattribute\",{\"1\":{\"1477\":1}}],[\"removecomments\",{\"1\":{\"1454\":1}}],[\"removechild\",{\"1\":{\"434\":3,\"859\":1,\"1476\":1,\"1478\":1,\"1528\":1}}],[\"remove\",{\"1\":{\"338\":1,\"339\":1,\"340\":1,\"341\":2,\"342\":1,\"343\":1,\"1073\":1,\"1806\":2}}],[\"removeeventlistener\",{\"1\":{\"232\":2,\"432\":4,\"1247\":1,\"1290\":1}}],[\"remote\",{\"1\":{\"11\":1,\"54\":1,\"1137\":1,\"1606\":3,\"1607\":3,\"1608\":1}}],[\"rem\",{\"0\":{\"206\":1,\"207\":1},\"1\":{\"206\":6,\"207\":5}}],[\"rewritemanifest\",{\"1\":{\"110\":1}}],[\"reportwebvitals\",{\"1\":{\"1167\":3}}],[\"report\",{\"1\":{\"1009\":1}}],[\"replacechild\",{\"1\":{\"1476\":1}}],[\"replaceall\",{\"0\":{\"326\":1},\"1\":{\"326\":5}}],[\"replacemanifest\",{\"1\":{\"109\":3}}],[\"replace\",{\"0\":{\"535\":1},\"1\":{\"94\":2,\"109\":1,\"239\":1,\"326\":1,\"534\":1,\"535\":5,\"740\":1,\"1065\":1,\"1550\":1}}],[\"repr\",{\"1\":{\"94\":1}}],[\"repeat视同为\",{\"1\":{\"545\":1}}],[\"repeat\",{\"0\":{\"282\":1},\"1\":{\"21\":1,\"64\":1,\"282\":13,\"286\":2,\"431\":2,\"471\":2,\"545\":11,\"678\":2}}],[\"redis常见问题\",{\"0\":{\"2070\":1}}],[\"redis的持久化主要有两种方式\",{\"1\":{\"2069\":1}}],[\"redis的持久化\",{\"0\":{\"2069\":1}}],[\"redis数据淘汰算法\",{\"0\":{\"2068\":1}}],[\"redis数据类型\",{\"0\":{\"2067\":1}}],[\"redis数据分片方案\",{\"0\":{\"2066\":1}}],[\"redis集群切片的常见方式\",{\"0\":{\"2065\":1}}],[\"redis分布式存储方案\",{\"0\":{\"2064\":1}}],[\"redis是一个开源的使用ansi\",{\"1\":{\"2061\":1}}],[\"redis\",{\"1\":{\"2061\":1}}],[\"redirect\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"reduxpromise\",{\"1\":{\"1188\":2}}],[\"reduxthunk\",{\"1\":{\"1188\":2}}],[\"reduxlogger\",{\"1\":{\"1188\":2}}],[\"reduxjs\",{\"1\":{\"1167\":2,\"1168\":2}}],[\"redux\",{\"0\":{\"1156\":1,\"1166\":1,\"1171\":1,\"1275\":1},\"1\":{\"1157\":1,\"1158\":1,\"1159\":1,\"1161\":1,\"1162\":1,\"1163\":1,\"1167\":4,\"1168\":1,\"1173\":1,\"1181\":1,\"1183\":1,\"1188\":6,\"1275\":4,\"1764\":4},\"2\":{\"1165\":1,\"1170\":1,\"1190\":1}}],[\"reducers\",{\"0\":{\"1159\":1,\"1183\":1},\"1\":{\"1158\":1,\"1159\":2,\"1167\":2,\"1168\":1,\"1181\":1,\"1183\":4,\"1188\":1}}],[\"reduceright\",{\"0\":{\"706\":1,\"877\":1},\"1\":{\"682\":1,\"704\":1,\"706\":1,\"877\":2,\"879\":2}}],[\"reducer\",{\"1\":{\"284\":1,\"705\":1,\"1158\":2,\"1159\":2,\"1167\":2,\"1168\":2,\"1173\":3,\"1181\":2,\"1183\":2,\"1188\":2,\"1273\":7,\"1275\":1,\"1287\":2}}],[\"reduce\",{\"0\":{\"284\":1,\"705\":1,\"736\":1,\"745\":1,\"877\":1},\"1\":{\"284\":8,\"455\":2,\"682\":1,\"704\":1,\"705\":8,\"706\":2,\"731\":3,\"732\":4,\"736\":4,\"745\":1,\"877\":9,\"879\":2,\"1478\":1}}],[\"redhat\",{\"1\":{\"908\":1,\"1071\":1}}],[\"red\",{\"1\":{\"83\":2,\"535\":4,\"676\":1,\"677\":1,\"680\":2,\"687\":2,\"688\":2,\"696\":2,\"728\":2,\"843\":5,\"1255\":1,\"1477\":2}}],[\"rendertarget\",{\"0\":{\"2828\":1,\"2829\":1,\"2835\":1,\"2842\":1},\"1\":{\"2835\":1,\"2842\":1}}],[\"renderlists\",{\"0\":{\"2804\":1}}],[\"renderer是否假设颜色有\",{\"1\":{\"2788\":1}}],[\"renderer\",{\"0\":{\"2688\":1},\"1\":{\"2288\":1,\"2562\":2,\"2797\":1,\"2800\":2}}],[\"rendermap\",{\"1\":{\"1780\":3}}],[\"rendermixin\",{\"0\":{\"1520\":1},\"1\":{\"1492\":2,\"1505\":2,\"1527\":3,\"1528\":2,\"1543\":2}}],[\"renderfn\",{\"1\":{\"1549\":2,\"1552\":2}}],[\"render函数里面有\",{\"1\":{\"1527\":1}}],[\"render方法都是挂载在vue原型的方法\",{\"1\":{\"1526\":1,\"1558\":1}}],[\"render\",{\"0\":{\"1527\":2,\"1552\":1,\"2836\":1},\"1\":{\"80\":1,\"82\":1,\"83\":1,\"1157\":1,\"1163\":1,\"1167\":1,\"1175\":1,\"1178\":1,\"1182\":1,\"1187\":1,\"1196\":1,\"1197\":2,\"1200\":2,\"1204\":2,\"1210\":1,\"1236\":2,\"1244\":2,\"1315\":1,\"1320\":4,\"1321\":3,\"1323\":1,\"1324\":1,\"1486\":2,\"1492\":1,\"1493\":1,\"1505\":1,\"1511\":1,\"1520\":1,\"1521\":1,\"1525\":4,\"1526\":3,\"1527\":7,\"1528\":1,\"1539\":1,\"1543\":1,\"1547\":3,\"1548\":4,\"1549\":1,\"1556\":2,\"1558\":2,\"1561\":1,\"1568\":1,\"1571\":1,\"1758\":5,\"1829\":3,\"2562\":4,\"2744\":1,\"2800\":1,\"2842\":1}}],[\"renderingcontext\",{\"1\":{\"2788\":1,\"2795\":1}}],[\"rendering\",{\"1\":{\"21\":1,\"64\":1}}],[\"refusing\",{\"1\":{\"1609\":1}}],[\"refs\",{\"1\":{\"1285\":2,\"1621\":1}}],[\"ref=\",{\"1\":{\"1255\":2,\"1256\":3,\"1281\":3,\"1288\":1,\"1289\":1}}],[\"reflog\",{\"1\":{\"1615\":2}}],[\"reflayouteffect\",{\"1\":{\"1255\":4}}],[\"reflexive\",{\"1\":{\"656\":1}}],[\"reflect\",{\"0\":{\"885\":1},\"1\":{\"268\":1,\"885\":4,\"886\":1}}],[\"refeffect\",{\"1\":{\"1255\":4}}],[\"referer\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"referenceposition\",{\"0\":{\"2608\":1}}],[\"reference\",{\"1\":{\"1646\":1}}],[\"reference=<参考文件或目录>\",{\"1\":{\"1032\":2}}],[\"referenceerror\",{\"1\":{\"248\":1,\"249\":1,\"445\":1,\"507\":1,\"511\":2,\"898\":2}}],[\"references\",{\"1\":{\"40\":1}}],[\"ref\",{\"0\":{\"1285\":1,\"1286\":1},\"1\":{\"118\":2,\"119\":3,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":7,\"1250\":1,\"1256\":4,\"1279\":1,\"1281\":2,\"1285\":4,\"1286\":2}}],[\"refactor\",{\"1\":{\"16\":2,\"30\":1,\"59\":2,\"73\":1}}],[\"resetstate\",{\"0\":{\"2837\":1}}],[\"resetglstate\",{\"0\":{\"2834\":1}}],[\"reset\",{\"1\":{\"1614\":5,\"1615\":2,\"1637\":1,\"2800\":2}}],[\"res1\",{\"1\":{\"594\":2}}],[\"resource\",{\"1\":{\"860\":1,\"1677\":1}}],[\"resovle\",{\"1\":{\"571\":2}}],[\"resolveurl\",{\"0\":{\"2476\":1}}],[\"resolve就调用then方法\",{\"1\":{\"819\":1}}],[\"resolve=>\",{\"1\":{\"595\":1}}],[\"resolve返回值\",{\"1\":{\"584\":1}}],[\"resolvedurl\",{\"1\":{\"2477\":1}}],[\"resolvedcallbacks\",{\"1\":{\"580\":2}}],[\"resolved\",{\"1\":{\"323\":2,\"564\":1,\"572\":1,\"576\":2,\"577\":3,\"580\":3,\"592\":1}}],[\"resolve\",{\"0\":{\"567\":1},\"1\":{\"128\":15,\"299\":2,\"300\":1,\"323\":1,\"328\":1,\"376\":2,\"381\":1,\"419\":2,\"420\":2,\"563\":1,\"565\":5,\"566\":4,\"567\":4,\"568\":5,\"569\":3,\"571\":4,\"573\":6,\"574\":5,\"576\":1,\"577\":2,\"578\":5,\"580\":3,\"581\":11,\"582\":3,\"583\":3,\"584\":29,\"591\":2,\"594\":1,\"595\":3,\"596\":2,\"597\":2,\"859\":2,\"865\":2,\"891\":2,\"1188\":2,\"1501\":2,\"1542\":1,\"1758\":2}}],[\"resolvestyle\",{\"1\":{\"39\":1}}],[\"resolves\",{\"1\":{\"39\":1}}],[\"resolvers\",{\"1\":{\"39\":3}}],[\"resolution\",{\"1\":{\"19\":1,\"2744\":1}}],[\"res=>\",{\"1\":{\"571\":3,\"573\":1}}],[\"responsexml\",{\"1\":{\"817\":1}}],[\"responsetext\",{\"1\":{\"817\":3,\"819\":1,\"864\":1,\"866\":1}}],[\"response\",{\"1\":{\"559\":1,\"819\":2,\"860\":1,\"1153\":1,\"1229\":3,\"1249\":2,\"1659\":1,\"1699\":1}}],[\"resp\",{\"1\":{\"334\":8}}],[\"restful\",{\"1\":{\"2044\":1}}],[\"rest的5个原则\",{\"1\":{\"2039\":1}}],[\"rest是一种通常使用http和xml进行基于web通信的技术\",{\"1\":{\"2039\":1}}],[\"resttuple\",{\"1\":{\"1413\":3}}],[\"resttupletype\",{\"1\":{\"1413\":2}}],[\"rest2\",{\"1\":{\"305\":1}}],[\"rest1\",{\"1\":{\"305\":1}}],[\"rest\",{\"0\":{\"305\":1,\"2039\":1},\"1\":{\"252\":1,\"264\":1,\"302\":2,\"305\":10}}],[\"reshex\",{\"1\":{\"123\":3,\"127\":4}}],[\"res\",{\"1\":{\"117\":2,\"118\":6,\"119\":10,\"121\":2,\"122\":2,\"123\":5,\"125\":2,\"126\":2,\"127\":23,\"128\":29,\"565\":9,\"571\":6,\"573\":1,\"574\":4,\"582\":3,\"584\":19,\"590\":3,\"591\":5,\"592\":2,\"637\":1,\"743\":3,\"766\":4,\"767\":5,\"821\":2,\"822\":2,\"823\":2,\"859\":2,\"860\":13,\"864\":5,\"866\":2,\"1168\":4,\"1823\":2}}],[\"resultindex\",{\"1\":{\"340\":2}}],[\"results\",{\"1\":{\"323\":2,\"340\":2,\"576\":2,\"577\":2,\"584\":7}}],[\"resultstr\",{\"1\":{\"123\":3,\"127\":3}}],[\"result\",{\"1\":{\"94\":2,\"123\":2,\"127\":3,\"128\":3,\"328\":2,\"359\":5,\"394\":6,\"395\":4,\"414\":2,\"419\":1,\"420\":1,\"575\":3,\"581\":8,\"584\":2,\"589\":1,\"594\":2,\"595\":2,\"596\":6,\"653\":3,\"735\":6,\"900\":2,\"901\":3,\"1426\":2,\"1468\":3,\"1493\":2,\"1535\":2,\"1564\":2,\"1571\":2,\"1671\":1,\"1777\":2}}],[\"resized\",{\"1\":{\"1247\":1}}],[\"resize事件发生时\",{\"1\":{\"224\":1}}],[\"resize\",{\"1\":{\"21\":1,\"64\":1,\"832\":1,\"1247\":2,\"1290\":2}}],[\"5g核心网中引入了sba服务化架构\",{\"1\":{\"2205\":1}}],[\"5g网络的主要特征\",{\"1\":{\"2205\":1}}],[\"5g技术\",{\"0\":{\"2205\":1}}],[\"5m\",{\"1\":{\"1152\":1,\"1153\":1,\"1669\":1}}],[\"57596\",{\"1\":{\"1102\":1}}],[\"53\",{\"1\":{\"1036\":1}}],[\"5500\",{\"1\":{\"864\":2,\"865\":1,\"866\":1,\"867\":1}}],[\"5555\",{\"1\":{\"867\":2}}],[\"555\",{\"1\":{\"272\":1}}],[\"565格式中为绿色提供了额外的精度\",{\"1\":{\"2601\":1,\"2699\":1}}],[\"56\",{\"1\":{\"773\":2,\"788\":1}}],[\"5null\",{\"1\":{\"668\":1}}],[\"5undefined\",{\"1\":{\"668\":1}}],[\"5function\",{\"1\":{\"668\":1}}],[\"5false\",{\"1\":{\"668\":1}}],[\"5true\",{\"1\":{\"668\":1}}],[\"51\",{\"1\":{\"668\":1,\"931\":1}}],[\"5的运算结果如下\",{\"1\":{\"610\":1}}],[\"5的值为7\",{\"1\":{\"608\":1}}],[\"544\",{\"1\":{\"945\":1}}],[\"54number\",{\"1\":{\"802\":1}}],[\"54\",{\"1\":{\"802\":1}}],[\"54321\",{\"1\":{\"433\":8}}],[\"5403023058681398\",{\"1\":{\"253\":1}}],[\"504\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"502\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"50x\",{\"1\":{\"1146\":1,\"1150\":1,\"1152\":3,\"1153\":2}}],[\"503\",{\"1\":{\"817\":1,\"1152\":1,\"1153\":1}}],[\"50px\",{\"1\":{\"165\":2,\"167\":2,\"207\":1,\"1255\":2}}],[\"50\",{\"1\":{\"165\":2,\"167\":2,\"168\":4,\"205\":1,\"455\":3,\"550\":2,\"782\":2,\"843\":1,\"2411\":1,\"2876\":3}}],[\"500格式\",{\"1\":{\"2109\":2}}],[\"5000\",{\"1\":{\"574\":1}}],[\"500\",{\"1\":{\"128\":4,\"596\":2,\"817\":1,\"937\":1,\"953\":1,\"1152\":1,\"1153\":1,\"1256\":1,\"1265\":1,\"1311\":1,\"2884\":1}}],[\"5842\",{\"1\":{\"817\":1}}],[\"58\",{\"1\":{\"118\":1}}],[\"5\",{\"0\":{\"11\":1,\"23\":1,\"33\":1,\"54\":1,\"66\":1,\"76\":1,\"83\":1,\"259\":1,\"317\":1,\"324\":1,\"342\":1,\"382\":1,\"413\":1,\"420\":1,\"433\":1,\"464\":1,\"492\":1,\"508\":1,\"524\":1,\"526\":1,\"570\":1,\"575\":1,\"584\":1,\"611\":1,\"620\":1,\"635\":1,\"640\":1,\"681\":1,\"697\":1,\"716\":1,\"739\":1,\"760\":1,\"768\":1,\"851\":1,\"876\":1,\"885\":1,\"1250\":1,\"1512\":1,\"1584\":1,\"1591\":1,\"1597\":1,\"1603\":1,\"1610\":1,\"1621\":1,\"1628\":1,\"1637\":1,\"1687\":1,\"1693\":1,\"1717\":1,\"1852\":1},\"1\":{\"82\":1,\"119\":1,\"127\":1,\"206\":7,\"208\":1,\"218\":2,\"254\":1,\"266\":2,\"281\":3,\"284\":2,\"285\":2,\"287\":14,\"293\":1,\"294\":1,\"311\":4,\"332\":3,\"389\":1,\"403\":2,\"406\":1,\"437\":1,\"467\":1,\"506\":2,\"508\":1,\"515\":1,\"517\":2,\"524\":1,\"547\":1,\"548\":1,\"551\":3,\"607\":2,\"608\":1,\"631\":4,\"635\":1,\"646\":1,\"663\":2,\"667\":4,\"668\":10,\"678\":4,\"679\":3,\"681\":2,\"684\":14,\"685\":3,\"689\":1,\"695\":2,\"698\":12,\"699\":2,\"701\":2,\"705\":2,\"706\":2,\"708\":1,\"709\":1,\"711\":1,\"712\":4,\"713\":1,\"714\":2,\"715\":1,\"716\":1,\"734\":2,\"735\":2,\"736\":1,\"737\":1,\"738\":1,\"739\":1,\"740\":2,\"742\":3,\"743\":3,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"773\":1,\"784\":4,\"794\":6,\"799\":2,\"802\":2,\"817\":2,\"844\":2,\"872\":4,\"873\":1,\"875\":2,\"876\":2,\"877\":4,\"878\":2,\"888\":1,\"903\":7,\"989\":1,\"1040\":2,\"1159\":1,\"1173\":1,\"1183\":1,\"1256\":1,\"1338\":2,\"1339\":1,\"1340\":2,\"1365\":1,\"1472\":2,\"1478\":1,\"1534\":1,\"1550\":1,\"1563\":1,\"1615\":2,\"1649\":4,\"1798\":2,\"2210\":1,\"2335\":1,\"2336\":1,\"2371\":1,\"2375\":2,\"2383\":1,\"2391\":1,\"2395\":4,\"2403\":9,\"2411\":6,\"2438\":1,\"2446\":2,\"2842\":1,\"2868\":1,\"2872\":2}}],[\"4g\",{\"1\":{\"2203\":1}}],[\"479\",{\"1\":{\"2133\":1}}],[\"4大价值观\",{\"1\":{\"1904\":1}}],[\"4kb\",{\"1\":{\"1660\":1}}],[\"457\",{\"1\":{\"2133\":1}}],[\"45\",{\"1\":{\"1300\":1,\"2566\":1}}],[\"456\",{\"1\":{\"327\":1,\"1483\":1,\"1556\":1}}],[\"43\",{\"1\":{\"1299\":1}}],[\"44\",{\"1\":{\"1832\":1}}],[\"443\",{\"1\":{\"1152\":1,\"1153\":2}}],[\"444\",{\"1\":{\"584\":2}}],[\"4+1视图\",{\"1\":{\"1969\":1}}],[\"4+0+1\",{\"1\":{\"1040\":1}}],[\"4+2+0\",{\"1\":{\"1040\":1}}],[\"4+2+1\",{\"1\":{\"1040\":1}}],[\"499\",{\"1\":{\"937\":1}}],[\"46\",{\"1\":{\"774\":1}}],[\"46|8|37|38|39|40\",{\"1\":{\"239\":1}}],[\"41\",{\"1\":{\"762\":2}}],[\"414px\",{\"1\":{\"204\":1}}],[\"4years\",{\"1\":{\"550\":1}}],[\"4096\",{\"1\":{\"1029\":2}}],[\"404\",{\"1\":{\"817\":1,\"1146\":1,\"1152\":2,\"1153\":2,\"2887\":1}}],[\"403\",{\"1\":{\"817\":1}}],[\"401\",{\"1\":{\"817\":1}}],[\"40\",{\"1\":{\"550\":3,\"551\":2,\"782\":2,\"817\":1}}],[\"4000\",{\"1\":{\"860\":2,\"861\":4,\"862\":2,\"863\":2,\"2884\":1}}],[\"400\",{\"1\":{\"128\":1,\"342\":2,\"817\":1,\"850\":2}}],[\"400rpx\",{\"1\":{\"118\":1,\"119\":1,\"127\":1}}],[\"48\",{\"1\":{\"931\":1}}],[\"48～57\",{\"1\":{\"518\":1}}],[\"4849066497880004\",{\"1\":{\"253\":1}}],[\"4294967295\",{\"1\":{\"402\":1}}],[\"42\",{\"1\":{\"314\":2,\"315\":2,\"467\":1,\"663\":3,\"1296\":1,\"1299\":1,\"1300\":1,\"1418\":1}}],[\"4以下不支持\",{\"1\":{\"208\":1}}],[\"4\",{\"0\":{\"10\":1,\"17\":1,\"22\":1,\"32\":1,\"53\":1,\"60\":1,\"65\":1,\"75\":1,\"82\":1,\"250\":1,\"256\":1,\"263\":1,\"277\":1,\"282\":1,\"287\":1,\"297\":1,\"305\":1,\"316\":1,\"323\":1,\"329\":1,\"334\":1,\"341\":1,\"359\":1,\"361\":1,\"365\":1,\"381\":1,\"383\":1,\"396\":1,\"419\":1,\"432\":1,\"456\":1,\"474\":1,\"490\":1,\"507\":1,\"523\":1,\"525\":1,\"560\":1,\"569\":1,\"574\":1,\"583\":1,\"592\":1,\"597\":1,\"610\":1,\"619\":1,\"634\":1,\"639\":1,\"680\":1,\"690\":1,\"694\":1,\"715\":1,\"738\":1,\"747\":1,\"757\":1,\"765\":1,\"767\":1,\"804\":1,\"843\":1,\"850\":1,\"875\":1,\"884\":1,\"891\":1,\"903\":1,\"1249\":1,\"1511\":1,\"1583\":1,\"1590\":1,\"1596\":1,\"1602\":1,\"1605\":1,\"1609\":1,\"1620\":1,\"1627\":1,\"1632\":1,\"1636\":1,\"1681\":1,\"1686\":1,\"1692\":1,\"1698\":1,\"1705\":1,\"1716\":1,\"1722\":1,\"1851\":1},\"1\":{\"21\":1,\"63\":1,\"64\":1,\"119\":1,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"127\":1,\"218\":1,\"240\":1,\"260\":1,\"266\":4,\"271\":2,\"275\":1,\"284\":6,\"285\":4,\"289\":1,\"293\":2,\"294\":1,\"303\":2,\"304\":2,\"305\":2,\"311\":8,\"312\":8,\"332\":3,\"402\":3,\"403\":2,\"404\":4,\"470\":1,\"478\":1,\"484\":3,\"494\":1,\"508\":1,\"520\":1,\"526\":1,\"547\":2,\"548\":1,\"559\":1,\"569\":2,\"584\":2,\"588\":2,\"602\":1,\"621\":2,\"631\":4,\"633\":2,\"635\":1,\"654\":3,\"663\":2,\"674\":2,\"680\":1,\"685\":3,\"686\":1,\"692\":1,\"695\":2,\"696\":1,\"698\":2,\"699\":2,\"701\":2,\"705\":6,\"706\":3,\"708\":2,\"709\":1,\"710\":2,\"712\":2,\"713\":2,\"714\":4,\"715\":1,\"716\":2,\"720\":4,\"727\":1,\"731\":1,\"734\":2,\"735\":2,\"736\":2,\"737\":2,\"738\":2,\"739\":2,\"740\":3,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"758\":2,\"759\":2,\"777\":1,\"784\":4,\"794\":1,\"802\":3,\"817\":1,\"844\":2,\"860\":1,\"864\":1,\"866\":1,\"872\":2,\"873\":2,\"875\":4,\"876\":3,\"877\":9,\"878\":2,\"888\":1,\"903\":2,\"989\":1,\"1002\":1,\"1029\":1,\"1040\":1,\"1256\":3,\"1274\":1,\"1339\":1,\"1357\":1,\"1429\":2,\"1430\":1,\"1443\":2,\"1478\":1,\"1534\":1,\"1535\":1,\"1550\":1,\"1563\":1,\"1564\":1,\"1568\":1,\"1577\":1,\"1789\":1,\"1798\":2,\"2395\":4,\"2403\":3,\"2744\":1,\"2842\":1}}],[\"mcu\",{\"1\":{\"2176\":1,\"2178\":1,\"2179\":1}}],[\"m=\",{\"1\":{\"1096\":1}}],[\"msaa\",{\"1\":{\"2795\":1}}],[\"ms\",{\"1\":{\"1018\":1}}],[\"msg\",{\"0\":{\"31\":1,\"74\":1},\"1\":{\"31\":1,\"33\":1,\"74\":1,\"76\":1,\"125\":4,\"127\":10,\"343\":5,\"568\":2}}],[\"m<魔法数字文件>\",{\"1\":{\"1012\":1}}],[\"mmin\",{\"1\":{\"1006\":1}}],[\"mmnr\",{\"1\":{\"944\":1}}],[\"mt\",{\"1\":{\"1256\":1}}],[\"mtime\",{\"1\":{\"1006\":2,\"1007\":2}}],[\"mts\",{\"1\":{\"22\":1,\"65\":1}}],[\"mb\",{\"1\":{\"1006\":1}}],[\"mvvm架构风格\",{\"0\":{\"2033\":1}}],[\"mvp是mvc的变种\",{\"1\":{\"2032\":1}}],[\"mvp架构风格\",{\"0\":{\"2032\":1}}],[\"mvc架构风格\",{\"0\":{\"2031\":1}}],[\"mv\",{\"0\":{\"1000\":1},\"1\":{\"1001\":6}}],[\"m改变档案的修改时间记录\",{\"1\":{\"981\":1}}],[\"mkdir\",{\"0\":{\"974\":1},\"1\":{\"975\":1,\"976\":2}}],[\"mnt\",{\"1\":{\"913\":1}}],[\"mr\",{\"1\":{\"535\":2}}],[\"mygreeting\",{\"1\":{\"1466\":4}}],[\"mygenericnumber\",{\"1\":{\"1362\":3}}],[\"myfavoritenumber\",{\"1\":{\"1442\":3,\"1458\":3}}],[\"myname\",{\"1\":{\"1387\":6}}],[\"mylib\",{\"1\":{\"1357\":3}}],[\"myinput\",{\"1\":{\"1281\":1}}],[\"myinstanceof\",{\"1\":{\"641\":1,\"657\":1}}],[\"myapp\",{\"1\":{\"1227\":1,\"1229\":1}}],[\"myapply\",{\"1\":{\"357\":1}}],[\"mydb=\",{\"1\":{\"1671\":1}}],[\"mydb\",{\"1\":{\"1671\":3}}],[\"myd\",{\"1\":{\"945\":1}}],[\"mydiv\",{\"1\":{\"558\":2,\"817\":2}}],[\"mywebsocket\",{\"1\":{\"865\":2}}],[\"mysql日志文件\",{\"1\":{\"1472\":1}}],[\"mysql数据目录\",{\"1\":{\"1472\":1}}],[\"mysql配置文件\",{\"1\":{\"1472\":1}}],[\"mysql二进制文件\",{\"1\":{\"1472\":1}}],[\"mysql\",{\"1\":{\"1472\":8},\"2\":{\"1473\":1,\"1474\":1}}],[\"mysum\",{\"1\":{\"1421\":1}}],[\"mysymbol\",{\"1\":{\"803\":12}}],[\"myset\",{\"1\":{\"271\":3}}],[\"myclass\",{\"1\":{\"1829\":2}}],[\"mycomponent\",{\"1\":{\"1219\":1,\"1236\":2}}],[\"mycontext\",{\"1\":{\"1217\":1,\"1218\":1,\"1219\":1}}],[\"myconcat\",{\"1\":{\"728\":4}}],[\"mycall\",{\"1\":{\"356\":2,\"357\":1}}],[\"mypromise\",{\"1\":{\"580\":2,\"581\":3,\"584\":14}}],[\"mymodule\",{\"1\":{\"452\":2,\"453\":1}}],[\"my\",{\"1\":{\"276\":3,\"341\":2,\"973\":4,\"1330\":1,\"1331\":1,\"1415\":1,\"1472\":1,\"2650\":1}}],[\"m2\",{\"1\":{\"272\":6}}],[\"mpeg\",{\"1\":{\"388\":2}}],[\"mp3\",{\"1\":{\"338\":1,\"388\":1}}],[\"mp\",{\"1\":{\"108\":2,\"109\":1}}],[\"mp4\",{\"1\":{\"94\":1,\"339\":1,\"388\":1}}],[\"mz\",{\"1\":{\"94\":6}}],[\"mzlab\",{\"1\":{\"94\":1}}],[\"mzlab=tk\",{\"1\":{\"94\":1}}],[\"morphtargetsrelative\",{\"0\":{\"2291\":1}}],[\"morph\",{\"1\":{\"2290\":1}}],[\"morphattributes\",{\"0\":{\"2290\":1}}],[\"more\",{\"0\":{\"985\":1},\"1\":{\"986\":2,\"987\":2,\"989\":1,\"1087\":1}}],[\"mobx\",{\"1\":{\"1764\":3}}],[\"moveto\",{\"1\":{\"2403\":1,\"2407\":1}}],[\"movenode\",{\"1\":{\"1478\":3}}],[\"moveindex\",{\"1\":{\"1478\":4}}],[\"move\",{\"1\":{\"1428\":3}}],[\"movingbox\",{\"1\":{\"1289\":2}}],[\"movie\",{\"1\":{\"1168\":4}}],[\"movieslice\",{\"1\":{\"1168\":8}}],[\"motd\",{\"1\":{\"1125\":1}}],[\"mon\",{\"1\":{\"775\":1}}],[\"money\",{\"1\":{\"327\":2}}],[\"mountcomponent\",{\"0\":{\"1526\":1},\"1\":{\"1486\":1,\"1525\":2,\"1526\":2,\"1558\":1}}],[\"mounted\",{\"1\":{\"83\":1,\"87\":1,\"1251\":3,\"1485\":1,\"1486\":1,\"1525\":1}}],[\"mousedown\",{\"1\":{\"829\":1}}],[\"mousemove\",{\"1\":{\"829\":3}}],[\"mouse\",{\"1\":{\"693\":2}}],[\"mousewheel\",{\"1\":{\"233\":1}}],[\"mouseup\",{\"1\":{\"233\":1}}],[\"modifiers\",{\"1\":{\"1373\":1}}],[\"modifier\",{\"1\":{\"1373\":1}}],[\"modified\",{\"1\":{\"817\":1,\"1071\":1,\"1584\":1}}],[\"modifymanifest\",{\"1\":{\"110\":1}}],[\"mode=24\",{\"1\":{\"1168\":1}}],[\"model\",{\"1\":{\"83\":1,\"2031\":1}}],[\"mode\",{\"1\":{\"21\":2,\"64\":2,\"1038\":2,\"1065\":4,\"1265\":2}}],[\"modern\",{\"1\":{\"19\":1}}],[\"modulea\",{\"1\":{\"1817\":3}}],[\"moduleresolution\",{\"1\":{\"1454\":1}}],[\"module1\",{\"1\":{\"473\":2,\"474\":4}}],[\"module\",{\"1\":{\"15\":1,\"16\":1,\"19\":2,\"20\":1,\"21\":1,\"27\":1,\"30\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"70\":1,\"73\":1,\"111\":1,\"273\":2,\"276\":3,\"334\":4,\"444\":2,\"445\":11,\"449\":2,\"452\":4,\"453\":1,\"455\":1,\"457\":1,\"463\":1,\"464\":5,\"465\":3,\"467\":4,\"469\":1,\"470\":3,\"471\":1,\"472\":2,\"473\":4,\"474\":1,\"1335\":1,\"1454\":1,\"1817\":1}}],[\"modules和\",{\"1\":{\"1583\":1}}],[\"modulespecifier\",{\"1\":{\"471\":2}}],[\"modules\",{\"1\":{\"15\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"58\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"83\":1,\"88\":1,\"454\":1,\"474\":2,\"1146\":1,\"1153\":1,\"1332\":1,\"1501\":1,\"1583\":2}}],[\"musion\",{\"1\":{\"1370\":4}}],[\"must\",{\"1\":{\"305\":2,\"358\":1}}],[\"mutationobserver\",{\"1\":{\"1542\":3}}],[\"mutations中的jia被调用了\",{\"1\":{\"83\":1}}],[\"mutations\",{\"1\":{\"83\":2}}],[\"mutaionobserver\",{\"1\":{\"376\":1}}],[\"multisample\",{\"1\":{\"2795\":1}}],[\"multiplyscalar\",{\"1\":{\"2438\":1}}],[\"multiply\",{\"1\":{\"1798\":7}}],[\"multiple=\",{\"1\":{\"391\":2}}],[\"multiple\",{\"1\":{\"19\":1,\"62\":1,\"391\":2}}],[\"multiline\",{\"1\":{\"19\":1,\"62\":1}}],[\"multi\",{\"1\":{\"19\":1,\"62\":1}}],[\"mda\",{\"0\":{\"1996\":1}}],[\"md结尾的文件\",{\"1\":{\"1583\":1}}],[\"md5\",{\"1\":{\"1152\":1}}],[\"mdn定义名称\",{\"1\":{\"413\":1}}],[\"mdn\",{\"1\":{\"387\":1,\"836\":1,\"837\":1,\"900\":1}}],[\"md\",{\"1\":{\"22\":1,\"23\":2,\"27\":1,\"65\":1,\"66\":2,\"70\":1,\"1256\":1,\"1583\":1}}],[\"mjs\",{\"1\":{\"22\":1,\"65\":1,\"334\":1,\"471\":1,\"474\":5}}],[\"mediump\",{\"1\":{\"2671\":1,\"2788\":1}}],[\"mediasource\",{\"1\":{\"338\":3}}],[\"mediaquery\",{\"1\":{\"208\":2}}],[\"media\",{\"1\":{\"21\":1,\"64\":1,\"204\":3,\"913\":1}}],[\"memcache通过在内存里维护一个统一的巨大的hash表\",{\"1\":{\"2061\":1}}],[\"memcache是一个高性能的分布式的内存对象缓存系统\",{\"1\":{\"2061\":1}}],[\"memcache\",{\"1\":{\"2061\":1}}],[\"memory\",{\"1\":{\"2800\":1}}],[\"memorize\",{\"1\":{\"902\":4}}],[\"memoizeduserlist\",{\"1\":{\"1267\":2}}],[\"memoizedexpensivecomponent\",{\"1\":{\"1267\":2}}],[\"memoizedvalue\",{\"1\":{\"1265\":1}}],[\"memoizedcallback\",{\"1\":{\"1210\":1}}],[\"memo\",{\"1\":{\"1209\":1,\"1210\":1,\"1212\":2,\"1235\":2,\"1267\":5,\"1311\":2,\"1323\":2,\"1324\":2,\"1478\":3}}],[\"meaasge\",{\"1\":{\"1600\":1}}],[\"merges\",{\"1\":{\"1604\":2,\"1628\":2}}],[\"merge\",{\"1\":{\"1596\":2,\"1602\":1,\"1609\":3}}],[\"mergefield\",{\"1\":{\"1485\":3}}],[\"mergehook\",{\"1\":{\"1485\":2}}],[\"mergeoptions\",{\"0\":{\"1485\":1},\"1\":{\"1484\":3,\"1485\":1,\"1486\":1}}],[\"merged\",{\"1\":{\"633\":1}}],[\"mergedobj\",{\"1\":{\"304\":2}}],[\"meshes\",{\"1\":{\"2744\":1}}],[\"meshphysicalmaterial\",{\"0\":{\"2736\":1,\"2737\":1},\"1\":{\"2872\":1}}],[\"meshphongmaterial\",{\"0\":{\"2612\":1,\"2613\":1},\"1\":{\"2593\":1}}],[\"meshdepthmaterial\",{\"0\":{\"2724\":1,\"2725\":1}}],[\"meshdistancematerial\",{\"0\":{\"2596\":1,\"2597\":1},\"1\":{\"2597\":1}}],[\"meshnormalmaterial\",{\"0\":{\"2720\":1,\"2721\":1}}],[\"meshstandardmaterial\",{\"0\":{\"2716\":1,\"2717\":1},\"1\":{\"2737\":1,\"2872\":1}}],[\"meshstandardmaterial或者meshphysicalmaterial\",{\"1\":{\"2593\":1}}],[\"meshmatcapmaterial\",{\"0\":{\"2694\":1,\"2695\":1},\"1\":{\"2695\":1}}],[\"meshlambertmaterial\",{\"0\":{\"2592\":1,\"2593\":1},\"1\":{\"2562\":1}}],[\"mesh\",{\"1\":{\"2278\":2,\"2311\":1,\"2359\":3,\"2371\":1,\"2375\":1,\"2379\":1,\"2383\":3,\"2387\":1,\"2391\":1,\"2399\":1,\"2403\":3,\"2407\":3,\"2430\":1,\"2434\":1,\"2438\":3,\"2446\":1,\"2562\":1}}],[\"meshbasicmaterial\",{\"0\":{\"2628\":1,\"2629\":1},\"1\":{\"2278\":1,\"2359\":1,\"2371\":1,\"2375\":1,\"2379\":1,\"2383\":1,\"2387\":1,\"2391\":1,\"2399\":1,\"2403\":1,\"2407\":1,\"2430\":1,\"2434\":1,\"2438\":1,\"2446\":1}}],[\"mesh化架构模式\",{\"1\":{\"2054\":1}}],[\"messge\",{\"1\":{\"1600\":1}}],[\"message来指定\",{\"1\":{\"1618\":1}}],[\"message>\",{\"1\":{\"1601\":1}}],[\"message=\",{\"1\":{\"1200\":1}}],[\"message或\",{\"1\":{\"930\":1}}],[\"messagehex\",{\"1\":{\"127\":3}}],[\"message\",{\"1\":{\"127\":3,\"328\":1,\"343\":1,\"840\":3,\"865\":1,\"919\":2,\"1196\":8,\"1200\":7,\"1204\":13,\"1415\":1,\"1416\":2,\"1459\":3,\"1600\":1,\"1604\":1,\"1814\":11}}],[\"messages\",{\"1\":{\"16\":1,\"59\":1}}],[\"mesg或\",{\"1\":{\"930\":1}}],[\"me\",{\"1\":{\"240\":1,\"1256\":3,\"1286\":2,\"1403\":1}}],[\"metrics三个方面\",{\"1\":{\"2054\":1}}],[\"methoddecorator\",{\"1\":{\"1468\":1}}],[\"method\",{\"1\":{\"816\":2,\"860\":1,\"885\":2,\"1465\":1,\"1468\":2,\"1535\":4,\"1564\":4,\"1752\":1}}],[\"methodstopatch\",{\"1\":{\"1535\":2,\"1564\":1}}],[\"methods\",{\"0\":{\"806\":1,\"2858\":1},\"1\":{\"83\":1,\"860\":1,\"864\":3,\"1490\":1,\"1514\":3,\"1521\":1,\"1533\":1}}],[\"metah\",{\"1\":{\"1972\":1}}],[\"meta\",{\"0\":{\"2545\":1,\"2589\":1,\"2691\":1,\"2860\":1},\"1\":{\"202\":1,\"472\":3,\"2545\":1,\"2589\":1,\"2691\":1,\"2860\":1}}],[\"mipmap\",{\"1\":{\"2827\":1,\"2842\":1}}],[\"mis系统四大部件\",{\"1\":{\"1864\":1}}],[\"mis\",{\"0\":{\"1864\":1}}],[\"missing\",{\"1\":{\"21\":1,\"64\":1,\"1338\":1,\"1372\":2}}],[\"mix\",{\"1\":{\"1152\":1}}],[\"mixin混入原理\",{\"0\":{\"1483\":1},\"2\":{\"1489\":1}}],[\"mixin\",{\"0\":{\"1484\":1},\"1\":{\"21\":1,\"64\":1,\"1483\":1,\"1484\":2}}],[\"mime类型\",{\"1\":{\"1153\":1}}],[\"mime\",{\"1\":{\"388\":4,\"389\":1,\"391\":1,\"1150\":2,\"1152\":1,\"1153\":1,\"1699\":1}}],[\"microsoft\",{\"1\":{\"815\":1}}],[\"microtask\",{\"1\":{\"376\":1,\"383\":2}}],[\"micro\",{\"1\":{\"376\":1}}],[\"mic\",{\"1\":{\"340\":2}}],[\"mic<\",{\"1\":{\"340\":1}}],[\"middleware\",{\"1\":{\"1335\":1}}],[\"middle\",{\"1\":{\"171\":1,\"173\":1}}],[\"minfilter\",{\"1\":{\"2562\":1}}],[\"minlength\",{\"1\":{\"1789\":1}}],[\"minor\",{\"1\":{\"1618\":1}}],[\"mini\",{\"1\":{\"1334\":1}}],[\"minimal\",{\"1\":{\"1009\":1}}],[\"minimum\",{\"1\":{\"202\":3}}],[\"min=\",{\"1\":{\"338\":2}}],[\"minpixelvalue\",{\"1\":{\"208\":2}}],[\"min\",{\"1\":{\"21\":2,\"64\":2,\"953\":1,\"1501\":1}}],[\"major\",{\"1\":{\"1618\":1}}],[\"maynullorundefinedorstring\",{\"1\":{\"1447\":3}}],[\"may\",{\"1\":{\"1338\":1}}],[\"makeindexbykey\",{\"1\":{\"1478\":2}}],[\"make\",{\"1\":{\"1134\":2}}],[\"mail\",{\"1\":{\"1118\":1}}],[\"mainname\",{\"1\":{\"1391\":3}}],[\"main=\",{\"1\":{\"462\":2}}],[\"mainloop\",{\"1\":{\"94\":3}}],[\"main\",{\"0\":{\"1175\":1,\"1182\":1},\"1\":{\"10\":1,\"12\":1,\"53\":1,\"55\":1,\"80\":1,\"88\":1,\"374\":1,\"462\":1,\"1152\":3,\"1153\":2,\"1163\":1,\"1178\":1,\"1187\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":2,\"1357\":2,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1}}],[\"ma\",{\"1\":{\"989\":1}}],[\"manager\",{\"1\":{\"2462\":9,\"2473\":1}}],[\"man\",{\"1\":{\"2203\":1}}],[\"mango\",{\"1\":{\"879\":3}}],[\"manifestarr\",{\"1\":{\"109\":5}}],[\"manifest\",{\"1\":{\"109\":5}}],[\"manifestpath\",{\"1\":{\"109\":3}}],[\"male\",{\"1\":{\"723\":2,\"1338\":1,\"1340\":3}}],[\"matcap贴图\",{\"1\":{\"2709\":1}}],[\"matcap\",{\"0\":{\"2709\":1},\"1\":{\"2695\":1}}],[\"matching\",{\"1\":{\"1009\":1}}],[\"matched\",{\"1\":{\"817\":1}}],[\"match\",{\"0\":{\"536\":1},\"1\":{\"324\":2,\"534\":1,\"536\":3,\"817\":1,\"1550\":7,\"1551\":5}}],[\"matchall\",{\"0\":{\"324\":1},\"1\":{\"324\":2}}],[\"matrixworld\",{\"1\":{\"2744\":1}}],[\"matrixworld包含了相机的世界变换矩阵\",{\"1\":{\"2514\":1}}],[\"matrixworldinverse\",{\"0\":{\"2514\":1}}],[\"matrix4\",{\"0\":{\"2298\":1,\"2514\":1,\"2515\":1,\"2516\":1}}],[\"matrix\",{\"0\":{\"2298\":1}}],[\"materials\",{\"1\":{\"2672\":1,\"2741\":1}}],[\"materialindex\",{\"0\":{\"2297\":1},\"1\":{\"2286\":2}}],[\"material\",{\"0\":{\"2632\":1,\"2633\":1,\"2635\":1,\"2685\":1,\"2686\":2},\"1\":{\"2278\":2,\"2359\":2,\"2371\":2,\"2375\":2,\"2379\":2,\"2383\":2,\"2387\":2,\"2391\":2,\"2399\":2,\"2403\":2,\"2407\":2,\"2411\":2,\"2430\":2,\"2434\":2,\"2438\":2,\"2442\":3,\"2446\":2,\"2678\":1,\"2710\":1,\"2744\":1,\"2746\":1,\"2747\":1,\"2779\":1}}],[\"math\",{\"1\":{\"128\":1,\"253\":1,\"277\":1,\"290\":2,\"395\":1,\"464\":2,\"621\":1,\"748\":2,\"749\":2,\"806\":1,\"836\":6,\"844\":2,\"847\":3,\"1418\":1,\"2438\":2,\"2446\":1,\"2650\":1}}],[\"magic\",{\"1\":{\"269\":1}}],[\"master\",{\"1\":{\"94\":1,\"1610\":5,\"1629\":2}}],[\"maproot\",{\"1\":{\"1454\":1}}],[\"mapsize\",{\"1\":{\"2884\":2}}],[\"maps\",{\"1\":{\"719\":1}}],[\"mapstate\",{\"1\":{\"83\":2}}],[\"mapcache\",{\"1\":{\"433\":6}}],[\"map\",{\"0\":{\"272\":1,\"315\":1,\"713\":1,\"743\":1,\"843\":1,\"873\":1,\"2606\":1,\"2708\":1},\"1\":{\"123\":1,\"127\":1,\"128\":2,\"272\":28,\"286\":3,\"299\":1,\"312\":2,\"315\":1,\"333\":1,\"363\":1,\"433\":1,\"636\":1,\"678\":3,\"679\":1,\"682\":1,\"711\":1,\"713\":7,\"719\":1,\"743\":4,\"801\":1,\"843\":3,\"859\":1,\"873\":11,\"874\":1,\"879\":1,\"891\":1,\"1168\":1,\"1210\":1,\"1212\":1,\"1265\":1,\"1267\":2,\"1370\":2,\"1454\":2,\"1551\":1,\"1780\":2,\"2710\":1,\"2717\":1,\"2737\":1,\"2795\":1,\"2884\":1}}],[\"mapmutations\",{\"1\":{\"83\":2}}],[\"mapactions\",{\"1\":{\"83\":2}}],[\"mapgetters\",{\"1\":{\"83\":2}}],[\"mac地址过滤\",{\"1\":{\"2220\":1}}],[\"mac地址认证\",{\"1\":{\"2220\":1}}],[\"mac地址表会每隔一定时间\",{\"1\":{\"2208\":1}}],[\"mac地址\",{\"1\":{\"2208\":1}}],[\"macrotask\",{\"1\":{\"383\":1}}],[\"macro\",{\"1\":{\"376\":1,\"383\":1}}],[\"macos\",{\"1\":{\"33\":1,\"76\":1}}],[\"mac\",{\"0\":{\"33\":1,\"76\":1},\"1\":{\"1691\":2,\"1692\":4}}],[\"mary1000\",{\"1\":{\"806\":1}}],[\"mary\",{\"1\":{\"806\":6}}],[\"mark\",{\"1\":{\"433\":8,\"1646\":2,\"1650\":1}}],[\"marks\",{\"1\":{\"21\":1,\"64\":1}}],[\"margintop\",{\"1\":{\"1255\":3}}],[\"margin重叠三个条件\",{\"1\":{\"149\":1}}],[\"margin\",{\"0\":{\"166\":1,\"170\":1},\"1\":{\"21\":10,\"64\":10,\"118\":2,\"119\":2,\"127\":4,\"165\":2,\"166\":1,\"170\":1,\"205\":1,\"1429\":2}}],[\"maxvertexuniforms\",{\"1\":{\"2795\":1}}],[\"maxvertextextures\",{\"1\":{\"2795\":2}}],[\"maxvaryings\",{\"1\":{\"2795\":1}}],[\"maxtextures\",{\"1\":{\"2795\":1}}],[\"maxtexturesize\",{\"1\":{\"2795\":1}}],[\"maxsamples\",{\"1\":{\"2795\":1}}],[\"maxfragmentuniforms\",{\"1\":{\"2795\":1}}],[\"maxcubemapsize\",{\"1\":{\"2795\":1}}],[\"maxattributes\",{\"1\":{\"2795\":1}}],[\"max>\",{\"1\":{\"1382\":1}}],[\"max=\",{\"1\":{\"338\":2}}],[\"max2\",{\"1\":{\"320\":4}}],[\"max1\",{\"1\":{\"320\":4}}],[\"maximum\",{\"1\":{\"202\":3,\"2795\":1}}],[\"max\",{\"1\":{\"19\":2,\"21\":2,\"23\":2,\"62\":2,\"64\":2,\"66\":2,\"204\":3,\"320\":8,\"860\":1,\"1153\":1,\"1659\":1,\"2717\":1,\"2795\":9}}],[\"m\",{\"1\":{\"9\":1,\"10\":1,\"52\":1,\"53\":1,\"272\":1,\"636\":4,\"930\":1,\"944\":2,\"989\":1,\"1006\":1,\"1012\":1,\"1018\":1,\"1061\":1,\"1125\":1,\"1256\":1,\"1591\":2,\"1597\":3,\"1600\":3,\"1601\":1,\"1618\":2}}],[\"cylinder\",{\"1\":{\"2375\":2}}],[\"cylindergeometry\",{\"0\":{\"2374\":1,\"2375\":1},\"1\":{\"2375\":1}}],[\"c语言编写\",{\"1\":{\"2061\":1}}],[\"c2架构风格\",{\"0\":{\"1995\":1}}],[\"c2等\",{\"1\":{\"1972\":1}}],[\"c2g\",{\"1\":{\"1869\":1}}],[\"csf\",{\"1\":{\"1876\":1}}],[\"cssfolder\",{\"1\":{\"1823\":4}}],[\"css解析\",{\"0\":{\"1706\":1}}],[\"css语义就是class和id命名的语义\",{\"1\":{\"216\":1}}],[\"css语义化\",{\"0\":{\"216\":1},\"1\":{\"215\":1}}],[\"css语义化<\",{\"1\":{\"215\":1}}],[\"css3\",{\"0\":{\"204\":1},\"1\":{\"208\":1,\"1334\":1,\"1823\":3}}],[\"css2\",{\"1\":{\"147\":1,\"1823\":3}}],[\"css`\",{\"1\":{\"39\":1}}],[\"css初始化\",{\"0\":{\"38\":1,\"81\":1}}],[\"css\",{\"0\":{\"132\":1,\"173\":1},\"1\":{\"20\":2,\"22\":2,\"38\":3,\"63\":2,\"65\":2,\"80\":1,\"81\":3,\"201\":4,\"202\":2,\"204\":3,\"207\":1,\"208\":1,\"226\":1,\"388\":2,\"505\":2,\"511\":2,\"1167\":2,\"1168\":1,\"1660\":1,\"1698\":1,\"1706\":7,\"1707\":5,\"1823\":1},\"2\":{\"154\":1,\"162\":1,\"175\":1,\"186\":1}}],[\"cwnd指的是拥塞窗口\",{\"1\":{\"1719\":1}}],[\"cwbkmg\",{\"1\":{\"1006\":1}}],[\"c++应用程序中\",{\"1\":{\"1641\":1}}],[\"c++编写的\",{\"1\":{\"1641\":1}}],[\"c++🤣\",{\"1\":{\"602\":1}}],[\"c8ad045\",{\"1\":{\"1637\":1}}],[\"cc\",{\"1\":{\"1568\":3}}],[\"ccc\",{\"1\":{\"118\":1,\"119\":1,\"127\":1,\"253\":5,\"286\":1,\"678\":1}}],[\"c代表创建元素\",{\"1\":{\"1549\":1}}],[\"ciphers\",{\"1\":{\"1152\":2}}],[\"circumference\",{\"1\":{\"275\":1,\"470\":1}}],[\"circlegeometry\",{\"0\":{\"2370\":1,\"2371\":1},\"1\":{\"2371\":1}}],[\"circle\",{\"1\":{\"275\":4,\"277\":1,\"470\":4,\"2371\":2}}],[\"cfvr\",{\"1\":{\"1038\":1}}],[\"cfhrv\",{\"1\":{\"1032\":2}}],[\"cvf\",{\"1\":{\"1025\":1}}],[\"c或\",{\"1\":{\"1021\":1,\"1032\":1}}],[\"cmmi\",{\"0\":{\"1960\":1}}],[\"cm\",{\"1\":{\"1591\":3}}],[\"cmin\",{\"1\":{\"1006\":1}}],[\"cmd\",{\"0\":{\"464\":1},\"1\":{\"94\":2,\"444\":2,\"464\":10,\"467\":1}}],[\"cp=\",{\"1\":{\"1080\":1}}],[\"cp\",{\"0\":{\"997\":1},\"1\":{\"998\":1,\"999\":3,\"1019\":2,\"1080\":1}}],[\"cpu有几核就写几\",{\"1\":{\"1153\":1}}],[\"cpu\",{\"1\":{\"929\":1,\"1769\":1,\"2179\":1}}],[\"c<显示列数>\",{\"1\":{\"1014\":1}}],[\"c<行数>或\",{\"1\":{\"1009\":1}}],[\"c<数目>\",{\"1\":{\"992\":1}}],[\"c<备注>\",{\"1\":{\"944\":1,\"950\":1}}],[\"c假如目的档案不存在\",{\"1\":{\"981\":1}}],[\"cd\",{\"0\":{\"967\":1},\"1\":{\"968\":1,\"1036\":1,\"1132\":1,\"1135\":1,\"1331\":1}}],[\"cdn的全程是content\",{\"1\":{\"2081\":1}}],[\"cdn\",{\"1\":{\"463\":2}}],[\"ctp的估算方法是\",{\"1\":{\"2170\":1}}],[\"ctp用mtops表示\",{\"1\":{\"2170\":1}}],[\"ctril+u\",{\"1\":{\"1082\":1}}],[\"ctril+e\",{\"1\":{\"1082\":1}}],[\"ctril+a\",{\"1\":{\"1082\":1}}],[\"ctril+l\",{\"1\":{\"1082\":1}}],[\"ctril+c\",{\"1\":{\"1082\":1}}],[\"ctrl\",{\"1\":{\"989\":4,\"993\":1,\"1056\":1,\"1061\":4,\"1063\":1}}],[\"ctrl+b返回上一屏\",{\"1\":{\"986\":1}}],[\"ctrl+f向下滚动一屏\",{\"1\":{\"986\":1}}],[\"ctime\",{\"1\":{\"1006\":1,\"1007\":2}}],[\"ctx\",{\"1\":{\"414\":1}}],[\"cts\",{\"1\":{\"22\":1,\"65\":1}}],[\"cbam\",{\"1\":{\"2011\":1}}],[\"cbse的构件应该具备的特征\",{\"1\":{\"1900\":1}}],[\"cbse体现了\",{\"1\":{\"1900\":1}}],[\"cbse\",{\"0\":{\"1900\":1}}],[\"cbname\",{\"1\":{\"859\":3}}],[\"cb\",{\"1\":{\"364\":2,\"430\":2,\"1492\":5,\"1493\":5,\"1542\":2,\"1543\":2,\"1557\":3,\"1561\":3,\"1571\":4,\"1814\":6}}],[\"cert\",{\"1\":{\"1152\":2}}],[\"certificate\",{\"1\":{\"1152\":2,\"1153\":2}}],[\"centos\",{\"1\":{\"908\":1,\"1141\":2}}],[\"center\",{\"0\":{\"2299\":1},\"1\":{\"159\":1,\"169\":2,\"171\":1,\"172\":1,\"173\":1,\"174\":2,\"207\":2}}],[\"cellar\",{\"1\":{\"1472\":1}}],[\"cell\",{\"1\":{\"173\":1,\"184\":1}}],[\"cell|table\",{\"1\":{\"148\":1}}],[\"ceil\",{\"1\":{\"128\":1}}],[\"c4\",{\"1\":{\"118\":1}}],[\"c\",{\"0\":{\"2029\":1},\"1\":{\"94\":2,\"241\":3,\"254\":3,\"265\":2,\"267\":1,\"286\":2,\"302\":4,\"303\":2,\"304\":2,\"305\":2,\"328\":2,\"329\":3,\"351\":2,\"505\":1,\"508\":2,\"520\":1,\"526\":3,\"535\":1,\"536\":2,\"596\":1,\"604\":1,\"610\":1,\"616\":1,\"621\":2,\"631\":1,\"633\":2,\"635\":2,\"645\":1,\"646\":3,\"662\":2,\"678\":2,\"713\":2,\"719\":2,\"729\":2,\"755\":2,\"756\":6,\"763\":4,\"764\":1,\"765\":2,\"838\":2,\"844\":2,\"862\":6,\"863\":7,\"873\":2,\"881\":2,\"883\":1,\"919\":1,\"944\":1,\"950\":1,\"986\":1,\"993\":2,\"1006\":1,\"1007\":2,\"1009\":5,\"1012\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":2,\"1025\":2,\"1035\":1,\"1038\":1,\"1063\":1,\"1083\":1,\"1137\":2,\"1367\":2,\"1378\":4,\"1379\":1,\"1382\":1,\"1405\":1,\"1409\":2,\"1511\":1,\"1527\":6,\"1549\":3,\"1551\":3,\"1650\":6,\"1707\":2,\"1730\":1,\"1789\":2}}],[\"castshadow\",{\"1\":{\"2884\":1}}],[\"cases\",{\"1\":{\"2835\":1}}],[\"case\",{\"1\":{\"30\":1,\"73\":1,\"128\":2,\"269\":4,\"581\":3,\"1009\":1,\"1159\":2,\"1173\":2,\"1183\":2,\"1273\":2,\"1274\":4,\"1287\":1,\"1454\":1,\"1535\":3,\"1564\":3,\"1753\":3,\"1754\":3,\"2710\":1}}],[\"capabilities\",{\"0\":{\"2795\":1}}],[\"captured\",{\"1\":{\"578\":2}}],[\"caption\",{\"1\":{\"184\":1}}],[\"caption|inline\",{\"1\":{\"148\":1}}],[\"cameras\",{\"1\":{\"2744\":1}}],[\"camerar\",{\"0\":{\"2556\":1}}],[\"cameral\",{\"0\":{\"2555\":1}}],[\"camera\",{\"0\":{\"2508\":1,\"2510\":1,\"2518\":1,\"2519\":1,\"2558\":1,\"2816\":2,\"2836\":2},\"1\":{\"2528\":2,\"2562\":2,\"2566\":2,\"2569\":1,\"2744\":2,\"2836\":1,\"2884\":3}}],[\"cachingproxy\",{\"1\":{\"1798\":2}}],[\"cache对程序员来说是透明的\",{\"1\":{\"2141\":1}}],[\"cache是访问速度最快的层次\",{\"1\":{\"2141\":1}}],[\"cache的功能\",{\"1\":{\"2141\":1}}],[\"cachedvalue\",{\"1\":{\"1264\":1}}],[\"cached\",{\"1\":{\"433\":3,\"1613\":2}}],[\"cache\",{\"0\":{\"2141\":1},\"1\":{\"22\":3,\"65\":3,\"433\":7,\"902\":14,\"1152\":1,\"1153\":2,\"1798\":4}}],[\"cac0a92b9530\",{\"1\":{\"1153\":1}}],[\"caojh\",{\"1\":{\"945\":1}}],[\"catmullromcurve3\",{\"0\":{\"2410\":1,\"2411\":1},\"1\":{\"2411\":1}}],[\"cat会将ls\",{\"1\":{\"983\":1}}],[\"cat\",{\"0\":{\"982\":1},\"1\":{\"693\":2,\"983\":3,\"984\":14,\"1392\":4,\"1423\":1,\"1424\":2}}],[\"cats\",{\"1\":{\"663\":2}}],[\"catch\",{\"0\":{\"318\":1,\"572\":1},\"1\":{\"300\":1,\"318\":4,\"328\":2,\"333\":1,\"334\":1,\"338\":1,\"340\":1,\"341\":2,\"343\":1,\"345\":2,\"565\":2,\"569\":2,\"570\":1,\"575\":1,\"578\":3,\"580\":1,\"581\":2,\"582\":1,\"584\":4,\"596\":1,\"597\":3,\"819\":1,\"821\":1,\"822\":1,\"823\":1,\"1249\":1}}],[\"cargeometry\",{\"1\":{\"2562\":1}}],[\"car访问不到\",{\"1\":{\"1390\":2}}],[\"car\",{\"1\":{\"535\":2,\"1390\":8,\"2562\":6}}],[\"cart2\",{\"1\":{\"455\":2}}],[\"cart1\",{\"1\":{\"455\":3}}],[\"cart\",{\"1\":{\"455\":25}}],[\"card\",{\"1\":{\"338\":3,\"339\":2,\"340\":6,\"341\":3,\"342\":3,\"343\":3}}],[\"carriage\",{\"1\":{\"102\":1}}],[\"candela\",{\"1\":{\"2856\":1}}],[\"can\",{\"1\":{\"1366\":1,\"2761\":1}}],[\"cancelanimationframe\",{\"1\":{\"1289\":1}}],[\"cancelled\",{\"1\":{\"1249\":1}}],[\"canceltoken\",{\"1\":{\"1249\":2}}],[\"cancel\",{\"1\":{\"831\":1,\"1249\":1}}],[\"canvas\",{\"1\":{\"337\":1,\"414\":5,\"2788\":1}}],[\"cannot\",{\"1\":{\"249\":1,\"511\":1,\"803\":2,\"1374\":1,\"1414\":1}}],[\"cause\",{\"0\":{\"333\":1},\"1\":{\"333\":1}}],[\"calbonus\",{\"1\":{\"1789\":3}}],[\"calculatevalue\",{\"1\":{\"1264\":3}}],[\"calculator\",{\"1\":{\"463\":7,\"1468\":2,\"1798\":4}}],[\"calc\",{\"0\":{\"167\":1},\"1\":{\"167\":2,\"1468\":3}}],[\"calls\",{\"1\":{\"2800\":1}}],[\"callhook\",{\"1\":{\"1486\":6}}],[\"callnow\",{\"1\":{\"831\":2}}],[\"callee\",{\"1\":{\"723\":5}}],[\"called\",{\"1\":{\"326\":1,\"1505\":1}}],[\"callbacks和poll\",{\"1\":{\"382\":1}}],[\"callbacks\",{\"1\":{\"379\":2,\"581\":6,\"1542\":4}}],[\"callback\",{\"0\":{\"1195\":1,\"2477\":1,\"2838\":1},\"1\":{\"232\":2,\"284\":4,\"345\":1,\"371\":1,\"458\":2,\"580\":4,\"590\":2,\"705\":4,\"859\":7,\"877\":2,\"1832\":2,\"2477\":1,\"2838\":1}}],[\"call\",{\"0\":{\"355\":1,\"486\":1,\"659\":1},\"1\":{\"123\":1,\"127\":1,\"261\":2,\"320\":1,\"331\":1,\"355\":10,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":3,\"362\":1,\"403\":1,\"486\":1,\"488\":2,\"494\":1,\"495\":5,\"582\":2,\"590\":4,\"659\":13,\"681\":3,\"723\":2,\"724\":1,\"725\":1,\"728\":1,\"729\":1,\"731\":4,\"902\":1,\"1309\":2,\"1486\":1,\"1493\":1,\"1527\":1,\"1533\":1,\"1534\":1,\"1571\":2,\"2286\":2}}],[\"crm的价值\",{\"1\":{\"1878\":1}}],[\"crm的主要模块\",{\"1\":{\"1878\":1}}],[\"crm的核心思想就是以客户为中心\",{\"1\":{\"1878\":1}}],[\"crm的目的是提高收入\",{\"1\":{\"1878\":1}}],[\"crm\",{\"0\":{\"1878\":1}}],[\"crt\",{\"1\":{\"1153\":1}}],[\"creator\",{\"1\":{\"1758\":2}}],[\"createlogin\",{\"1\":{\"1755\":5}}],[\"createlist\",{\"1\":{\"437\":3}}],[\"createcomputedgetter\",{\"1\":{\"1570\":3}}],[\"createcontext\",{\"1\":{\"1174\":1,\"1180\":1,\"1217\":2,\"1220\":1,\"1222\":1,\"1227\":3,\"1321\":1,\"1324\":1}}],[\"createastelement\",{\"1\":{\"1550\":2}}],[\"createasyncthunk\",{\"1\":{\"1168\":4}}],[\"createtextelement\",{\"1\":{\"1527\":1}}],[\"createtextnode\",{\"1\":{\"1476\":1,\"1527\":1,\"1528\":1,\"1542\":1}}],[\"createwatcher\",{\"1\":{\"1491\":3}}],[\"created\",{\"0\":{\"1516\":1},\"1\":{\"1483\":2,\"1485\":1,\"1486\":1,\"1521\":1}}],[\"createelm\",{\"1\":{\"1476\":5,\"1478\":3,\"1528\":3}}],[\"createelement\",{\"1\":{\"434\":5,\"436\":1,\"437\":2,\"859\":1,\"863\":1,\"1343\":1,\"1476\":1,\"1511\":2,\"1521\":1,\"1527\":2,\"1528\":1,\"1653\":3,\"1832\":1}}],[\"createproxymiddleware\",{\"1\":{\"1335\":2}}],[\"createportal\",{\"1\":{\"1256\":2}}],[\"createroot\",{\"1\":{\"1157\":1,\"1167\":1,\"1175\":1,\"1182\":1,\"1236\":1,\"1315\":1}}],[\"create不会建立新档案\",{\"1\":{\"981\":1}}],[\"create的效果一样\",{\"1\":{\"981\":1}}],[\"createslice\",{\"1\":{\"1167\":2,\"1168\":2}}],[\"createstore\",{\"1\":{\"1158\":2,\"1173\":2,\"1181\":2,\"1188\":2}}],[\"createstyleimportplugin\",{\"1\":{\"39\":2}}],[\"createserver\",{\"1\":{\"864\":2,\"866\":1}}],[\"createobjecturl\",{\"1\":{\"388\":2,\"389\":1,\"413\":4,\"421\":1,\"2462\":1}}],[\"createnew\",{\"1\":{\"359\":2}}],[\"creategain\",{\"1\":{\"338\":2}}],[\"createmediaelementsource\",{\"1\":{\"338\":2}}],[\"createbleconnenction\",{\"1\":{\"128\":3}}],[\"createbleconnection\",{\"1\":{\"119\":2,\"127\":1,\"128\":1}}],[\"create\",{\"1\":{\"3\":1,\"47\":1,\"358\":1,\"359\":1,\"490\":5,\"492\":2,\"494\":4,\"495\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1467\":1,\"1535\":1,\"1754\":4,\"2562\":3}}],[\"credentials\",{\"1\":{\"860\":1,\"1229\":1}}],[\"cross\",{\"1\":{\"860\":1}}],[\"crlf\",{\"1\":{\"23\":1,\"66\":1}}],[\"cr\",{\"1\":{\"23\":1,\"66\":1}}],[\"chown\",{\"0\":{\"1034\":1},\"1\":{\"1035\":2,\"1036\":1}}],[\"chore\",{\"1\":{\"16\":2,\"30\":1,\"59\":2,\"73\":1}}],[\"chgrp\",{\"0\":{\"1031\":1},\"1\":{\"1032\":2,\"1033\":2}}],[\"chunk\",{\"1\":{\"864\":3}}],[\"cherry\",{\"1\":{\"1602\":2}}],[\"cherries\",{\"1\":{\"526\":2}}],[\"cheney\",{\"1\":{\"1648\":2}}],[\"chen\",{\"1\":{\"653\":3}}],[\"checkrule\",{\"1\":{\"1839\":2}}],[\"checklength\",{\"1\":{\"1839\":2}}],[\"checknumber\",{\"1\":{\"1839\":3}}],[\"checkempty\",{\"1\":{\"1839\":2}}],[\"checked\",{\"1\":{\"725\":1}}],[\"checked>1<\",{\"1\":{\"83\":1}}],[\"checkshadererrors\",{\"1\":{\"2794\":1}}],[\"checks\",{\"1\":{\"1839\":3}}],[\"checkout\",{\"1\":{\"1594\":2,\"1614\":1,\"1620\":1,\"1623\":1}}],[\"checkjs\",{\"1\":{\"1454\":1}}],[\"checkbox\",{\"1\":{\"725\":2}}],[\"check\",{\"1\":{\"379\":2,\"1073\":1,\"1416\":1,\"1839\":4,\"2756\":1}}],[\"chicken\",{\"1\":{\"693\":2}}],[\"childob指代的就是observer实例对象\",{\"1\":{\"1563\":1}}],[\"childob就是observer实例\",{\"1\":{\"1563\":1}}],[\"childob\",{\"1\":{\"1563\":4}}],[\"childval\",{\"1\":{\"1485\":8}}],[\"child\",{\"1\":{\"494\":4,\"495\":7,\"1315\":5,\"1390\":6,\"1476\":4,\"1485\":4,\"1528\":2}}],[\"children\",{\"1\":{\"449\":1,\"1222\":2,\"1256\":5,\"1315\":12,\"1476\":4,\"1478\":2,\"1527\":4,\"1528\":2,\"1550\":3,\"1551\":7}}],[\"chinese\",{\"0\":{\"2119\":1},\"1\":{\"484\":2,\"486\":1,\"488\":1,\"494\":1,\"836\":6,\"844\":2,\"847\":3,\"2119\":1}}],[\"chromematerial\",{\"1\":{\"2562\":2}}],[\"chrome\",{\"1\":{\"435\":1,\"484\":1,\"815\":1,\"1334\":1,\"1641\":1}}],[\"chrome不仅拥有多个进程\",{\"1\":{\"371\":1}}],[\"chrom\",{\"1\":{\"232\":1}}],[\"chain\",{\"1\":{\"1839\":3}}],[\"chatarea\",{\"1\":{\"343\":1}}],[\"chat\",{\"1\":{\"343\":3}}],[\"changing\",{\"1\":{\"2761\":1}}],[\"changename\",{\"1\":{\"1388\":1}}],[\"changeorigin\",{\"1\":{\"1335\":1}}],[\"change=\",{\"1\":{\"1320\":1,\"1323\":1,\"1324\":1}}],[\"changed\",{\"1\":{\"1251\":1}}],[\"changetextsync\",{\"1\":{\"1204\":2}}],[\"changetext\",{\"1\":{\"1196\":2,\"1200\":2,\"1204\":2}}],[\"changes\",{\"1\":{\"1032\":1,\"1146\":1,\"1612\":1}}],[\"change\",{\"1\":{\"1009\":1,\"1320\":6,\"1321\":6,\"1323\":6,\"1324\":6}}],[\"changepan\",{\"1\":{\"338\":3}}],[\"changevolume\",{\"1\":{\"338\":3}}],[\"channel<\",{\"1\":{\"343\":1}}],[\"channel\",{\"0\":{\"343\":1},\"1\":{\"343\":1,\"1168\":1}}],[\"chartref\",{\"1\":{\"1288\":3}}],[\"charcodeat\",{\"0\":{\"518\":1},\"1\":{\"125\":1,\"127\":1,\"418\":1,\"516\":2,\"518\":2}}],[\"charat\",{\"0\":{\"517\":1},\"1\":{\"125\":1,\"127\":1,\"516\":2,\"517\":8}}],[\"characterdata\",{\"1\":{\"1542\":1}}],[\"characteristic\",{\"1\":{\"128\":1}}],[\"characteristicid\",{\"1\":{\"123\":1,\"125\":1,\"126\":2,\"127\":7,\"128\":2}}],[\"characteristics\",{\"1\":{\"122\":2,\"128\":2}}],[\"character\",{\"1\":{\"102\":2,\"128\":5}}],[\"charset=\",{\"1\":{\"1839\":1}}],[\"charset\",{\"1\":{\"23\":1,\"66\":1,\"1152\":1}}],[\"chalk\",{\"1\":{\"39\":1,\"80\":1}}],[\"chmod\",{\"0\":{\"1037\":1},\"1\":{\"33\":2,\"76\":2,\"913\":1,\"1038\":1,\"1040\":1,\"1041\":7,\"1079\":2}}],[\"cjs\",{\"1\":{\"22\":1,\"27\":1,\"39\":1,\"65\":1,\"70\":1}}],[\"cjs文件\",{\"1\":{\"19\":1,\"21\":1,\"62\":1,\"64\":1}}],[\"cubes\",{\"1\":{\"2835\":1}}],[\"cuberendertarget\",{\"1\":{\"2562\":3}}],[\"cubecamera\",{\"0\":{\"2561\":1,\"2562\":1},\"1\":{\"2562\":5}}],[\"cube\",{\"1\":{\"2434\":2,\"2562\":3,\"2795\":1,\"2826\":1,\"2842\":1}}],[\"cumulative\",{\"1\":{\"2424\":1}}],[\"cug\",{\"1\":{\"595\":2}}],[\"cuger\",{\"1\":{\"595\":2}}],[\"cuggz\",{\"1\":{\"355\":2,\"359\":3,\"639\":1,\"843\":2}}],[\"curves数组中\",{\"1\":{\"2422\":1}}],[\"curves数组\",{\"1\":{\"2419\":1}}],[\"curves\",{\"0\":{\"2419\":1},\"1\":{\"2424\":2}}],[\"curvepath仅仅是一个已连接的曲线的数组\",{\"1\":{\"2415\":1}}],[\"curvepath\",{\"0\":{\"2414\":1,\"2417\":1}}],[\"curveobject\",{\"1\":{\"2411\":1}}],[\"curve\",{\"0\":{\"2327\":1,\"2329\":1,\"2344\":1,\"2345\":1,\"2422\":2},\"1\":{\"2329\":1,\"2411\":2,\"2424\":1,\"2438\":1}}],[\"curepath\",{\"0\":{\"2415\":1}}],[\"cure\",{\"0\":{\"2326\":1}}],[\"currval\",{\"1\":{\"1467\":3}}],[\"curr\",{\"1\":{\"340\":4}}],[\"currentparent\",{\"1\":{\"1550\":7}}],[\"currentref\",{\"1\":{\"1283\":1}}],[\"current\",{\"1\":{\"1250\":1,\"1251\":2,\"1255\":4,\"1256\":6,\"1279\":3,\"1281\":2,\"1282\":2,\"1283\":7,\"1285\":5,\"1286\":6,\"1287\":2,\"1288\":1,\"1289\":4,\"1290\":2,\"1478\":3,\"2826\":1,\"2827\":1}}],[\"currentuser\",{\"1\":{\"1222\":5,\"1227\":2,\"1229\":3}}],[\"currentusercontext\",{\"1\":{\"1222\":3,\"1227\":2}}],[\"currentindex\",{\"1\":{\"877\":2}}],[\"currently\",{\"1\":{\"345\":1}}],[\"currentvalue\",{\"1\":{\"284\":1,\"363\":3,\"705\":1,\"872\":2,\"873\":2,\"875\":2,\"876\":3,\"877\":2,\"878\":3}}],[\"currenttarget始终是监听事件者\",{\"1\":{\"241\":1}}],[\"currenttarget则是事件绑定的元素\",{\"1\":{\"241\":1}}],[\"currenttarget\",{\"0\":{\"241\":1},\"1\":{\"241\":13}}],[\"cur\",{\"1\":{\"284\":6,\"705\":6,\"706\":3,\"731\":4,\"732\":6,\"877\":9}}],[\"curcharcode\",{\"1\":{\"123\":3,\"127\":3}}],[\"cursor\",{\"1\":{\"21\":1,\"64\":1}}],[\"customprogramcachekey\",{\"0\":{\"2689\":1}}],[\"customdistancematerial\",{\"1\":{\"2597\":1}}],[\"customsincurve\",{\"1\":{\"2438\":2}}],[\"customscripts\",{\"1\":{\"463\":3}}],[\"customscope\",{\"1\":{\"16\":1,\"59\":1}}],[\"customlink>\",{\"1\":{\"1312\":2}}],[\"customname\",{\"1\":{\"274\":1,\"469\":1,\"470\":1}}],[\"custom\",{\"1\":{\"21\":1,\"64\":1,\"112\":1,\"2650\":1,\"2754\":1}}],[\"customizable\",{\"1\":{\"14\":1,\"15\":1,\"57\":1,\"58\":1}}],[\"cleanup\",{\"1\":{\"1241\":2}}],[\"clean\",{\"1\":{\"1073\":5,\"1375\":1,\"1380\":1}}],[\"clearstencil\",{\"0\":{\"2815\":1}}],[\"cleardepth\",{\"0\":{\"2814\":1}}],[\"clearcolor\",{\"0\":{\"2813\":1}}],[\"clearcoat\",{\"1\":{\"2737\":2}}],[\"clearviewoffset方法来进行清除\",{\"1\":{\"2578\":1}}],[\"clearviewoffset\",{\"0\":{\"2543\":1,\"2581\":1}}],[\"cleargroups\",{\"0\":{\"2302\":1}}],[\"cleared\",{\"1\":{\"436\":1}}],[\"clearinterval\",{\"1\":{\"430\":1,\"1246\":1,\"1282\":1}}],[\"cleartimeout\",{\"1\":{\"128\":2,\"831\":4}}],[\"clear\",{\"0\":{\"182\":1,\"2812\":1},\"1\":{\"21\":1,\"64\":1,\"182\":1,\"185\":2,\"271\":2,\"272\":2,\"436\":2,\"2813\":1,\"2814\":1,\"2815\":1}}],[\"clock\",{\"2\":{\"2504\":1}}],[\"cloneforce\",{\"1\":{\"767\":1}}],[\"cloneloop\",{\"1\":{\"766\":1}}],[\"clonedeep\",{\"0\":{\"764\":1},\"1\":{\"764\":2}}],[\"cloneobj\",{\"1\":{\"492\":3,\"756\":1}}],[\"clone\",{\"0\":{\"2300\":1,\"2344\":1,\"2518\":1,\"2685\":1,\"2767\":1},\"1\":{\"492\":2,\"494\":2,\"765\":3,\"1583\":1,\"2688\":1}}],[\"closure\",{\"1\":{\"900\":1}}],[\"closepath\",{\"0\":{\"2423\":1}}],[\"closed\",{\"0\":{\"2343\":1},\"1\":{\"1726\":1,\"1728\":2,\"1729\":2}}],[\"closedb\",{\"1\":{\"1671\":1}}],[\"close\",{\"1\":{\"338\":2,\"339\":1,\"340\":2,\"341\":3,\"342\":2,\"343\":2,\"378\":2,\"379\":2,\"1248\":1,\"1671\":2,\"1728\":1,\"1729\":1}}],[\"closebleconnection\",{\"1\":{\"128\":7}}],[\"closing\",{\"1\":{\"19\":1,\"62\":1}}],[\"clash\",{\"1\":{\"272\":1}}],[\"classdecorator\",{\"1\":{\"1466\":1}}],[\"classic\",{\"1\":{\"1454\":1}}],[\"classes\",{\"1\":{\"1338\":1}}],[\"classname=\",{\"1\":{\"1161\":4,\"1162\":1,\"1163\":1,\"1167\":3,\"1168\":3,\"1176\":4,\"1177\":1,\"1178\":1,\"1185\":4,\"1186\":1,\"1187\":1,\"1235\":1,\"1244\":1,\"1256\":4,\"1315\":4,\"1320\":6,\"1321\":6,\"1323\":6,\"1324\":7}}],[\"classname\",{\"1\":{\"721\":1,\"1315\":2,\"1477\":1,\"1528\":1}}],[\"class创建类的方式\",{\"1\":{\"511\":1}}],[\"classcallcheck\",{\"1\":{\"495\":2}}],[\"classlist\",{\"1\":{\"338\":1,\"339\":1,\"340\":1,\"341\":2,\"342\":1,\"343\":1}}],[\"class属性作为html与css衔接的纽带\",{\"1\":{\"216\":1}}],[\"class类名等内容\",{\"1\":{\"213\":1}}],[\"class=\",{\"1\":{\"118\":2,\"119\":2,\"127\":5,\"172\":2,\"338\":5,\"339\":4,\"340\":8,\"341\":5,\"342\":5,\"343\":9}}],[\"class\",{\"1\":{\"21\":1,\"64\":1,\"128\":1,\"495\":2,\"584\":1,\"1163\":1,\"1178\":1,\"1187\":1,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1320\":3,\"1321\":3,\"1362\":1,\"1386\":3,\"1387\":1,\"1388\":2,\"1389\":2,\"1390\":2,\"1391\":1,\"1392\":2,\"1437\":2,\"1465\":1,\"1466\":2,\"1467\":1,\"1468\":1,\"1469\":1,\"1477\":2,\"1493\":1,\"1528\":2,\"1534\":1,\"1535\":2,\"1540\":1,\"1557\":1,\"1559\":1,\"1561\":1,\"1562\":1,\"1571\":2,\"1706\":1,\"1707\":1,\"1743\":1,\"1753\":1,\"1754\":2,\"1755\":8,\"1758\":3,\"1774\":1,\"1780\":3,\"1789\":1,\"1798\":2,\"1806\":2,\"1826\":3,\"1839\":1,\"2438\":1}}],[\"client=192\",{\"1\":{\"1102\":1}}],[\"client\",{\"1\":{\"1102\":1,\"1150\":1,\"1157\":1,\"1167\":1,\"1175\":1,\"1182\":1,\"1315\":1,\"1826\":2}}],[\"clientwidth\",{\"1\":{\"206\":1}}],[\"clickcounter\",{\"1\":{\"1286\":2}}],[\"clicked\",{\"1\":{\"1244\":3,\"1286\":2}}],[\"click\",{\"1\":{\"232\":2,\"236\":1,\"237\":1,\"239\":2,\"240\":8,\"241\":4,\"436\":2,\"437\":1,\"558\":1,\"822\":1,\"902\":1,\"1355\":1,\"1839\":1}}],[\"click=\",{\"1\":{\"83\":4,\"117\":1,\"118\":2,\"119\":3,\"121\":1,\"122\":1,\"123\":1,\"125\":1,\"126\":1,\"127\":8}}],[\"cli\",{\"1\":{\"29\":1,\"46\":1,\"72\":1}}],[\"clipshadows\",{\"0\":{\"2648\":1}}],[\"clipping\",{\"0\":{\"2748\":1},\"1\":{\"2647\":1,\"2695\":1}}],[\"clippingplanes\",{\"0\":{\"2647\":1,\"2796\":1}}],[\"clipintersection\",{\"0\":{\"2646\":1}}],[\"cliptext\",{\"1\":{\"344\":2}}],[\"clipboard\",{\"0\":{\"344\":1},\"1\":{\"344\":5}}],[\"clip\",{\"1\":{\"21\":2,\"64\":2}}],[\"cnf\",{\"1\":{\"1472\":1}}],[\"cnt\",{\"1\":{\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1}}],[\"cnblogs\",{\"1\":{\"239\":2}}],[\"cn\",{\"1\":{\"19\":1,\"20\":1,\"62\":1,\"63\":1,\"1157\":1,\"1175\":1,\"1182\":1,\"1677\":2}}],[\"coverage\",{\"1\":{\"2638\":1}}],[\"cookie也是在所有同源窗口中都是共享的\",{\"1\":{\"1666\":1}}],[\"cookie去更改cookie\",{\"1\":{\"1661\":1}}],[\"cookie与安全\",{\"0\":{\"1661\":1}}],[\"cookie是用来维护用户信息的\",{\"1\":{\"1660\":1}}],[\"cookie是服务端生成\",{\"1\":{\"1658\":1}}],[\"cookie=\",{\"1\":{\"1659\":3}}],[\"cookie可以读写cookie\",{\"1\":{\"1659\":1}}],[\"cookie的大小限制在4kb左右\",{\"1\":{\"1660\":1}}],[\"cookie的生成方式主要有两种\",{\"1\":{\"1659\":1}}],[\"cookie的过期时间\",{\"1\":{\"1659\":1}}],[\"cookie后\",{\"1\":{\"1659\":1}}],[\"cookie头部携带至请求中发送给服务器\",{\"1\":{\"1659\":1}}],[\"cookie头部传递多个值\",{\"1\":{\"1659\":1}}],[\"cookie头部告知客户端\",{\"1\":{\"1659\":1}}],[\"cookie在响应中通过set\",{\"1\":{\"1659\":1}}],[\"cookie指某些网站为了辨别用户身份而储存在用户本地终端上的数据\",{\"1\":{\"1658\":1}}],[\"cookie\",{\"0\":{\"1657\":1},\"1\":{\"855\":1,\"1658\":1,\"1659\":5,\"1660\":10,\"1661\":2,\"1665\":1}}],[\"cow\",{\"1\":{\"693\":2}}],[\"copewithin\",{\"1\":{\"683\":1}}],[\"copytexturetotexture\",{\"0\":{\"2818\":1}}],[\"copyteximage2d\",{\"1\":{\"2817\":1}}],[\"copyframebuffertotexture\",{\"0\":{\"2817\":1}}],[\"copywithin\",{\"0\":{\"685\":1},\"1\":{\"685\":3}}],[\"copy\",{\"0\":{\"2301\":1,\"2345\":1,\"2519\":1,\"2686\":1,\"2859\":1},\"1\":{\"87\":2,\"764\":1,\"2562\":1,\"2688\":1}}],[\"co\",{\"0\":{\"592\":1},\"1\":{\"592\":9}}],[\"couldn\",{\"1\":{\"345\":1}}],[\"counting\",{\"1\":{\"1646\":1}}],[\"countref\",{\"1\":{\"1286\":8}}],[\"counterreducer\",{\"1\":{\"1274\":4}}],[\"counter值为0\",{\"1\":{\"1197\":1}}],[\"counterstate\",{\"1\":{\"1167\":2}}],[\"counterslice\",{\"1\":{\"1167\":8,\"1168\":4}}],[\"counter++\",{\"1\":{\"430\":2}}],[\"counter\",{\"1\":{\"259\":1,\"430\":4,\"1167\":3,\"1168\":2,\"1197\":3,\"1251\":2,\"1269\":2,\"1273\":1,\"1274\":2,\"1287\":1,\"1299\":1,\"1300\":1,\"1542\":5}}],[\"countabout\",{\"1\":{\"83\":7}}],[\"count\",{\"0\":{\"2297\":1,\"2319\":1},\"1\":{\"21\":1,\"64\":1,\"83\":2,\"930\":1,\"1196\":3,\"1197\":13,\"1204\":1,\"1243\":4,\"1244\":2,\"1251\":7,\"1269\":5,\"1273\":8,\"1274\":21,\"1282\":3,\"1287\":6,\"1297\":2,\"1817\":2,\"2285\":1,\"2286\":2}}],[\"cos\",{\"1\":{\"253\":2}}],[\"correct\",{\"1\":{\"2856\":1}}],[\"corba\",{\"0\":{\"2022\":1}}],[\"cortana\",{\"1\":{\"340\":1}}],[\"cors\",{\"0\":{\"860\":1},\"1\":{\"192\":4,\"860\":4,\"864\":1}}],[\"core\",{\"0\":{\"1504\":1,\"1505\":1},\"1\":{\"98\":1,\"102\":1,\"104\":1,\"1503\":1,\"2758\":1,\"2765\":1}}],[\"codegen\",{\"1\":{\"1549\":1,\"1551\":1}}],[\"code\",{\"1\":{\"27\":1,\"70\":1,\"239\":2,\"345\":1,\"1549\":2,\"1551\":2,\"1552\":2,\"2754\":1}}],[\"collecation\",{\"1\":{\"1769\":1}}],[\"collapse\",{\"1\":{\"21\":6,\"64\":6}}],[\"column\",{\"1\":{\"1009\":2}}],[\"color实例\",{\"1\":{\"2823\":1}}],[\"color调节\",{\"1\":{\"2708\":1}}],[\"colorwrite\",{\"0\":{\"2649\":1}}],[\"colors\",{\"1\":{\"676\":1,\"677\":1,\"680\":6,\"687\":2,\"688\":2}}],[\"color\",{\"0\":{\"2702\":2,\"2779\":2,\"2812\":1,\"2823\":2,\"2840\":2,\"2852\":1,\"2855\":2},\"1\":{\"21\":7,\"64\":7,\"83\":2,\"178\":1,\"1477\":1,\"1589\":1,\"2278\":1,\"2359\":1,\"2371\":1,\"2375\":1,\"2379\":1,\"2383\":1,\"2387\":1,\"2391\":1,\"2399\":1,\"2403\":1,\"2407\":1,\"2411\":1,\"2430\":1,\"2434\":1,\"2438\":1,\"2446\":1,\"2450\":1,\"2562\":1,\"2697\":1,\"2702\":1,\"2744\":1,\"2749\":1,\"2779\":1,\"2852\":1,\"2855\":1,\"2856\":1,\"2859\":1}}],[\"colon\",{\"1\":{\"21\":2,\"64\":2}}],[\"cone\",{\"1\":{\"2391\":2}}],[\"conegeometry\",{\"0\":{\"2390\":1},\"1\":{\"2391\":1}}],[\"concurrent\",{\"0\":{\"1651\":1}}],[\"concurs\",{\"1\":{\"1152\":1}}],[\"concat\",{\"0\":{\"701\":1,\"759\":1},\"1\":{\"358\":1,\"525\":4,\"682\":1,\"700\":1,\"701\":3,\"731\":1,\"735\":2,\"736\":1,\"737\":2,\"759\":3,\"885\":1,\"1366\":1,\"1485\":1}}],[\"conf的原始备份文件\",{\"1\":{\"1150\":1}}],[\"conf\",{\"1\":{\"866\":1,\"909\":1,\"1137\":4,\"1146\":2,\"1150\":5,\"1153\":5}}],[\"confirmed\",{\"1\":{\"584\":1}}],[\"confirmcommit\",{\"1\":{\"16\":1,\"59\":1}}],[\"configprovider>\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"configprovider\",{\"1\":{\"1157\":1,\"1175\":1,\"1182\":1}}],[\"configuration\",{\"1\":{\"1152\":1}}],[\"configurable\",{\"1\":{\"490\":1,\"495\":1,\"1467\":2,\"1535\":1,\"1570\":1}}],[\"configurestore创建一个redux数据\",{\"1\":{\"1167\":1,\"1168\":1}}],[\"configurestore\",{\"1\":{\"1167\":2,\"1168\":2}}],[\"configure\",{\"1\":{\"1134\":1}}],[\"config\",{\"0\":{\"110\":1,\"1501\":1},\"1\":{\"15\":1,\"16\":1,\"19\":2,\"21\":4,\"27\":1,\"29\":1,\"30\":2,\"39\":3,\"58\":1,\"59\":1,\"63\":1,\"64\":4,\"70\":1,\"72\":1,\"73\":2,\"98\":1,\"104\":1,\"462\":3,\"463\":3,\"560\":1,\"1332\":4,\"1429\":2,\"1500\":1,\"1586\":2,\"1587\":2,\"1588\":2,\"1589\":1,\"1590\":1,\"1591\":2}}],[\"convention\",{\"1\":{\"2710\":1}}],[\"conventional\",{\"1\":{\"29\":1,\"30\":1,\"72\":1,\"73\":1}}],[\"convexgeometry\",{\"0\":{\"2358\":1,\"2359\":1},\"1\":{\"2359\":3}}],[\"convert\",{\"1\":{\"803\":2}}],[\"contactpage\",{\"1\":{\"1312\":1}}],[\"contact\",{\"1\":{\"1311\":4,\"1312\":2,\"1376\":3}}],[\"containerrect=\",{\"1\":{\"1256\":1}}],[\"containerrect\",{\"1\":{\"1256\":5}}],[\"containerref=\",{\"1\":{\"1256\":3}}],[\"containerref\",{\"1\":{\"1256\":8}}],[\"container\",{\"1\":{\"472\":1,\"1829\":2}}],[\"controller\",{\"1\":{\"2031\":1}}],[\"controlflowanalysiswithnever\",{\"1\":{\"1416\":3}}],[\"control=<备份方式>\",{\"1\":{\"1003\":1}}],[\"control\",{\"1\":{\"860\":8,\"864\":3,\"1153\":1,\"1577\":1}}],[\"controls\",{\"1\":{\"338\":1}}],[\"continue\",{\"1\":{\"719\":1,\"767\":1,\"872\":2,\"874\":1,\"986\":1,\"1485\":1,\"1550\":2}}],[\"context状态的各种属性的函数\",{\"1\":{\"2807\":1}}],[\"contextvalue\",{\"1\":{\"1219\":4,\"1229\":2}}],[\"contexttype\",{\"1\":{\"1178\":1,\"1187\":1,\"1321\":1}}],[\"context<行数>\",{\"1\":{\"1009\":1}}],[\"context直译为\",{\"1\":{\"147\":1}}],[\"context\",{\"0\":{\"1217\":1,\"1218\":1,\"1219\":1,\"1222\":1,\"1227\":1,\"1228\":1},\"1\":{\"83\":6,\"147\":4,\"356\":5,\"357\":5,\"358\":2,\"390\":1,\"1174\":1,\"1178\":2,\"1187\":2,\"1217\":2,\"1218\":1,\"1219\":1,\"1220\":3,\"1222\":4,\"1223\":1,\"1224\":1,\"1227\":2,\"1228\":1,\"1321\":3,\"1324\":2,\"1784\":1,\"2788\":1,\"2795\":2,\"2820\":1,\"2821\":1}}],[\"contentwindow\",{\"1\":{\"861\":1,\"862\":1,\"867\":1}}],[\"contenttype\",{\"1\":{\"389\":2,\"418\":2}}],[\"content=\",{\"1\":{\"202\":1,\"1839\":1}}],[\"content\",{\"1\":{\"19\":2,\"21\":1,\"62\":2,\"64\":1,\"169\":1,\"207\":1,\"237\":1,\"816\":1,\"864\":1}}],[\"connected\",{\"1\":{\"341\":3}}],[\"connections\",{\"1\":{\"1152\":1,\"1153\":1}}],[\"connection\",{\"1\":{\"334\":1,\"865\":1,\"1153\":1}}],[\"connect\",{\"1\":{\"119\":2,\"127\":2,\"338\":3,\"1153\":1,\"1161\":3,\"1162\":3,\"1163\":2}}],[\"consumer>\",{\"1\":{\"1321\":2,\"1324\":2}}],[\"console\",{\"1\":{\"83\":2,\"109\":1,\"117\":4,\"118\":8,\"119\":17,\"121\":2,\"122\":2,\"123\":5,\"125\":2,\"126\":4,\"127\":30,\"128\":28,\"191\":1,\"226\":1,\"234\":6,\"237\":1,\"240\":4,\"241\":4,\"248\":6,\"249\":2,\"252\":5,\"253\":4,\"254\":1,\"256\":1,\"257\":3,\"258\":1,\"260\":4,\"261\":3,\"265\":3,\"266\":1,\"267\":1,\"268\":2,\"271\":5,\"272\":5,\"274\":1,\"275\":2,\"284\":4,\"286\":1,\"287\":4,\"295\":3,\"297\":1,\"299\":1,\"300\":3,\"302\":2,\"303\":1,\"304\":1,\"305\":2,\"317\":1,\"323\":1,\"324\":1,\"328\":7,\"331\":2,\"332\":6,\"334\":9,\"338\":1,\"340\":2,\"341\":1,\"343\":1,\"345\":5,\"351\":1,\"353\":6,\"354\":9,\"355\":5,\"356\":3,\"357\":2,\"359\":4,\"360\":3,\"362\":6,\"363\":1,\"364\":1,\"365\":1,\"376\":5,\"381\":3,\"382\":2,\"388\":2,\"391\":1,\"392\":1,\"395\":4,\"399\":1,\"400\":1,\"403\":4,\"404\":1,\"405\":1,\"406\":1,\"409\":1,\"413\":2,\"414\":1,\"430\":2,\"431\":1,\"433\":4,\"445\":2,\"452\":5,\"469\":1,\"470\":2,\"478\":2,\"481\":3,\"482\":4,\"484\":5,\"486\":3,\"488\":7,\"490\":5,\"492\":6,\"494\":6,\"495\":2,\"500\":6,\"503\":1,\"505\":2,\"506\":1,\"507\":5,\"508\":5,\"518\":1,\"520\":3,\"521\":2,\"525\":2,\"526\":1,\"533\":1,\"536\":1,\"543\":1,\"544\":1,\"555\":1,\"558\":1,\"559\":2,\"565\":6,\"567\":1,\"568\":2,\"569\":2,\"572\":2,\"573\":1,\"574\":3,\"576\":1,\"577\":1,\"578\":5,\"584\":8,\"587\":6,\"588\":4,\"590\":2,\"591\":2,\"592\":1,\"594\":2,\"595\":4,\"596\":11,\"597\":2,\"602\":3,\"604\":3,\"605\":2,\"621\":1,\"640\":2,\"641\":6,\"645\":1,\"646\":4,\"652\":1,\"653\":5,\"654\":4,\"657\":6,\"658\":6,\"663\":11,\"666\":1,\"678\":1,\"679\":5,\"680\":3,\"684\":4,\"685\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":2,\"692\":2,\"693\":2,\"695\":2,\"696\":2,\"698\":5,\"699\":2,\"701\":2,\"702\":2,\"703\":3,\"705\":4,\"706\":2,\"708\":3,\"710\":3,\"712\":2,\"718\":2,\"719\":2,\"723\":5,\"724\":4,\"725\":3,\"729\":1,\"731\":4,\"732\":3,\"734\":1,\"736\":1,\"737\":1,\"738\":1,\"739\":1,\"740\":1,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"754\":3,\"755\":1,\"756\":4,\"758\":2,\"759\":2,\"762\":1,\"763\":2,\"764\":1,\"765\":1,\"774\":1,\"803\":5,\"819\":4,\"821\":2,\"822\":2,\"823\":2,\"836\":8,\"838\":5,\"840\":2,\"841\":1,\"842\":1,\"843\":9,\"844\":1,\"847\":3,\"848\":1,\"850\":2,\"851\":1,\"859\":3,\"860\":3,\"861\":2,\"862\":1,\"863\":2,\"864\":5,\"865\":1,\"866\":2,\"867\":1,\"872\":2,\"874\":1,\"877\":6,\"879\":3,\"881\":2,\"882\":3,\"884\":1,\"885\":2,\"888\":1,\"889\":1,\"890\":2,\"891\":1,\"896\":6,\"897\":2,\"898\":7,\"900\":1,\"901\":3,\"902\":4,\"903\":4,\"1168\":3,\"1196\":4,\"1197\":4,\"1200\":1,\"1204\":3,\"1210\":1,\"1244\":3,\"1246\":2,\"1247\":1,\"1248\":1,\"1249\":3,\"1265\":1,\"1273\":1,\"1279\":1,\"1282\":2,\"1286\":2,\"1287\":1,\"1290\":2,\"1315\":2,\"1320\":1,\"1323\":1,\"1324\":1,\"1369\":1,\"1370\":2,\"1386\":2,\"1387\":1,\"1389\":1,\"1390\":4,\"1391\":3,\"1392\":1,\"1411\":2,\"1412\":2,\"1413\":2,\"1415\":1,\"1435\":3,\"1448\":2,\"1460\":1,\"1466\":4,\"1467\":2,\"1468\":2,\"1469\":2,\"1483\":2,\"1490\":3,\"1534\":2,\"1558\":1,\"1568\":1,\"1671\":2,\"1740\":3,\"1743\":4,\"1753\":3,\"1754\":3,\"1755\":3,\"1758\":6,\"1772\":2,\"1773\":1,\"1774\":1,\"1777\":3,\"1780\":2,\"1789\":4,\"1798\":5,\"1806\":1,\"1814\":3,\"1817\":1,\"1820\":6,\"1823\":2,\"1826\":3,\"1829\":2,\"1839\":3,\"2455\":4,\"2462\":4}}],[\"consola\",{\"1\":{\"39\":1}}],[\"constants以获取其它备选项\",{\"1\":{\"2808\":1}}],[\"constants页面以获取其他格式细节\",{\"1\":{\"2799\":1}}],[\"constants\",{\"1\":{\"2658\":1,\"2661\":1,\"2662\":1,\"2805\":1}}],[\"constant\",{\"0\":{\"2808\":1},\"1\":{\"2643\":1}}],[\"construction\",{\"0\":{\"1705\":1}}],[\"constructor就为person了\",{\"1\":{\"488\":1}}],[\"constructor\",{\"0\":{\"481\":1,\"658\":1},\"1\":{\"128\":1,\"261\":1,\"359\":4,\"362\":1,\"481\":2,\"484\":1,\"488\":3,\"494\":1,\"495\":4,\"584\":1,\"658\":11,\"681\":2,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1386\":2,\"1387\":1,\"1388\":1,\"1389\":2,\"1390\":2,\"1391\":1,\"1437\":2,\"1466\":2,\"1467\":1,\"1469\":2,\"1486\":1,\"1493\":1,\"1505\":1,\"1534\":1,\"1535\":2,\"1557\":1,\"1559\":1,\"1561\":1,\"1562\":1,\"1571\":2,\"1743\":1,\"1753\":1,\"1754\":2,\"1774\":1,\"1780\":1,\"1789\":1,\"1798\":1,\"1806\":2,\"1826\":2,\"1839\":1,\"2438\":1}}],[\"const关键字出现之前\",{\"1\":{\"511\":1}}],[\"const和\",{\"1\":{\"499\":1}}],[\"const\",{\"0\":{\"246\":1},\"1\":{\"19\":1,\"62\":1,\"87\":3,\"88\":2,\"109\":7,\"118\":1,\"119\":2,\"123\":1,\"125\":2,\"127\":9,\"128\":4,\"191\":2,\"192\":1,\"193\":1,\"240\":1,\"246\":3,\"247\":3,\"248\":3,\"249\":1,\"250\":1,\"252\":7,\"253\":1,\"254\":1,\"257\":3,\"259\":1,\"260\":9,\"269\":3,\"270\":1,\"271\":3,\"287\":1,\"297\":1,\"300\":2,\"302\":2,\"303\":2,\"304\":3,\"305\":4,\"308\":1,\"309\":1,\"313\":2,\"314\":1,\"315\":1,\"321\":4,\"322\":2,\"323\":3,\"324\":1,\"327\":4,\"328\":2,\"331\":1,\"332\":2,\"334\":8,\"338\":1,\"339\":1,\"340\":6,\"342\":1,\"343\":5,\"345\":2,\"354\":5,\"355\":3,\"360\":3,\"362\":2,\"388\":4,\"389\":4,\"391\":1,\"392\":2,\"394\":1,\"395\":9,\"399\":1,\"400\":1,\"401\":2,\"403\":5,\"404\":2,\"405\":2,\"406\":1,\"409\":2,\"410\":2,\"411\":5,\"413\":3,\"414\":6,\"416\":1,\"417\":1,\"418\":7,\"419\":1,\"420\":1,\"421\":1,\"430\":3,\"431\":2,\"432\":1,\"433\":3,\"434\":3,\"453\":1,\"469\":4,\"470\":1,\"471\":2,\"472\":3,\"499\":1,\"500\":1,\"507\":6,\"510\":1,\"511\":2,\"515\":1,\"517\":2,\"526\":2,\"540\":1,\"541\":1,\"559\":1,\"560\":1,\"565\":1,\"566\":1,\"576\":3,\"577\":3,\"578\":1,\"580\":1,\"581\":3,\"584\":13,\"590\":5,\"591\":5,\"592\":1,\"595\":2,\"596\":5,\"597\":2,\"631\":4,\"632\":2,\"633\":3,\"634\":1,\"635\":5,\"636\":5,\"639\":1,\"640\":2,\"643\":4,\"644\":2,\"653\":1,\"684\":1,\"685\":1,\"718\":1,\"742\":1,\"743\":1,\"748\":2,\"749\":1,\"766\":6,\"767\":6,\"774\":1,\"803\":6,\"828\":4,\"831\":7,\"836\":2,\"838\":3,\"843\":6,\"844\":2,\"847\":1,\"848\":1,\"849\":2,\"851\":3,\"859\":3,\"864\":11,\"865\":5,\"866\":4,\"875\":1,\"879\":3,\"888\":1,\"898\":3,\"902\":3,\"1157\":1,\"1158\":1,\"1159\":4,\"1160\":2,\"1161\":1,\"1162\":1,\"1167\":8,\"1168\":11,\"1173\":2,\"1174\":1,\"1175\":1,\"1176\":2,\"1177\":2,\"1178\":2,\"1180\":1,\"1181\":1,\"1182\":1,\"1183\":4,\"1184\":2,\"1185\":2,\"1186\":2,\"1187\":2,\"1188\":3,\"1196\":1,\"1197\":2,\"1200\":1,\"1204\":1,\"1210\":4,\"1211\":3,\"1212\":7,\"1217\":1,\"1219\":1,\"1220\":2,\"1222\":4,\"1227\":4,\"1229\":3,\"1234\":1,\"1235\":4,\"1236\":2,\"1243\":1,\"1244\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":2,\"1255\":4,\"1256\":9,\"1264\":1,\"1265\":5,\"1267\":6,\"1268\":1,\"1269\":2,\"1273\":3,\"1274\":4,\"1279\":1,\"1281\":3,\"1282\":2,\"1283\":2,\"1285\":1,\"1286\":2,\"1287\":3,\"1288\":2,\"1289\":4,\"1290\":2,\"1296\":1,\"1297\":2,\"1299\":1,\"1300\":1,\"1303\":2,\"1307\":1,\"1311\":5,\"1312\":2,\"1315\":3,\"1321\":1,\"1323\":4,\"1324\":6,\"1335\":1,\"1344\":1,\"1353\":2,\"1354\":2,\"1355\":1,\"1365\":2,\"1366\":9,\"1370\":1,\"1372\":3,\"1374\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1380\":1,\"1414\":1,\"1416\":1,\"1426\":1,\"1442\":6,\"1443\":4,\"1458\":1,\"1460\":1,\"1467\":5,\"1476\":1,\"1478\":2,\"1479\":2,\"1485\":2,\"1486\":2,\"1491\":2,\"1493\":1,\"1525\":4,\"1527\":3,\"1528\":4,\"1533\":2,\"1535\":4,\"1541\":1,\"1542\":3,\"1548\":4,\"1550\":12,\"1551\":2,\"1562\":1,\"1564\":2,\"1569\":3,\"1570\":2,\"1755\":4,\"1758\":1,\"1772\":2,\"1789\":5,\"1798\":2,\"1806\":3,\"1814\":1,\"1817\":1,\"1820\":1,\"1823\":2,\"1826\":2,\"1839\":1,\"2278\":4,\"2359\":3,\"2371\":3,\"2375\":3,\"2379\":3,\"2383\":3,\"2387\":3,\"2391\":3,\"2395\":3,\"2399\":3,\"2403\":5,\"2407\":6,\"2411\":5,\"2430\":3,\"2434\":3,\"2438\":7,\"2442\":3,\"2446\":4,\"2450\":3,\"2462\":6,\"2528\":1,\"2562\":4,\"2566\":1,\"2864\":1,\"2868\":1,\"2872\":4,\"2876\":1,\"2880\":1,\"2884\":1}}],[\"combinereducers\",{\"1\":{\"1159\":2,\"1183\":2}}],[\"combined\",{\"1\":{\"983\":1}}],[\"compressed\",{\"1\":{\"2798\":3}}],[\"compensate\",{\"1\":{\"2710\":1}}],[\"compile\",{\"0\":{\"2816\":1},\"1\":{\"1502\":1}}],[\"compiletofunctions\",{\"0\":{\"1549\":1},\"1\":{\"1502\":2,\"1525\":2,\"1548\":2,\"1549\":1,\"1552\":1}}],[\"compiler\",{\"0\":{\"1502\":1},\"1\":{\"1501\":1,\"1502\":1,\"1525\":2,\"1548\":2,\"1549\":1,\"1550\":1,\"1551\":1}}],[\"compileroptions\",{\"0\":{\"1454\":1},\"1\":{\"37\":1,\"40\":1,\"1453\":1,\"1454\":1}}],[\"compact\",{\"1\":{\"1646\":1}}],[\"companyid\",{\"1\":{\"1460\":2}}],[\"comparison1\",{\"1\":{\"1267\":4}}],[\"compare\",{\"1\":{\"698\":2}}],[\"computefrenetframes\",{\"0\":{\"2343\":1}}],[\"computevertexnormals\",{\"0\":{\"2306\":1}}],[\"computetangents\",{\"0\":{\"2305\":1}}],[\"computeboundingsphere\",{\"0\":{\"2304\":1},\"1\":{\"2284\":1}}],[\"computeboundingbox\",{\"0\":{\"2303\":1},\"1\":{\"2283\":1}}],[\"computeexpensivevalue\",{\"1\":{\"1265\":2}}],[\"computedgetter\",{\"1\":{\"1570\":1}}],[\"computedwatchers\",{\"1\":{\"1569\":1,\"1570\":1}}],[\"computedname\",{\"1\":{\"1568\":2}}],[\"computed\",{\"1\":{\"83\":1,\"433\":5,\"1514\":1,\"1521\":1,\"1533\":1,\"1568\":1,\"1569\":4,\"1572\":1}}],[\"comp\",{\"1\":{\"470\":2}}],[\"compose\",{\"1\":{\"877\":1}}],[\"compositionstart\",{\"1\":{\"233\":1}}],[\"component=\",{\"1\":{\"1312\":2}}],[\"componentwillunmount\",{\"1\":{\"1259\":1}}],[\"componentdidupdate\",{\"1\":{\"1259\":1}}],[\"componentdidmount\",{\"1\":{\"1178\":1,\"1187\":1,\"1259\":1}}],[\"components\",{\"1\":{\"39\":6}}],[\"component\",{\"1\":{\"19\":2,\"62\":2,\"82\":2,\"1163\":1,\"1178\":1,\"1187\":1,\"1196\":2,\"1197\":4,\"1200\":2,\"1204\":2,\"1249\":1,\"1320\":2,\"1321\":3,\"2710\":1}}],[\"completed\",{\"1\":{\"1375\":3,\"1380\":2}}],[\"complete\",{\"1\":{\"128\":1,\"2455\":1,\"2462\":1}}],[\"command\",{\"1\":{\"984\":1,\"1072\":2,\"1826\":6}}],[\"command=gettextinput\",{\"1\":{\"94\":1}}],[\"commonjs\",{\"0\":{\"446\":1},\"1\":{\"444\":2,\"448\":4,\"449\":3,\"450\":3,\"451\":1,\"454\":1,\"457\":1,\"462\":3,\"464\":1,\"465\":2,\"467\":2,\"474\":1,\"1454\":2}}],[\"common\",{\"1\":{\"128\":1,\"464\":1,\"1009\":2}}],[\"commenttext\",{\"1\":{\"1211\":2}}],[\"comments=\",{\"1\":{\"1211\":1}}],[\"comments\",{\"1\":{\"1211\":7}}],[\"commentspage\",{\"1\":{\"1211\":3}}],[\"comment\",{\"1\":{\"20\":1,\"21\":1,\"63\":1,\"64\":1}}],[\"commit文件\",{\"1\":{\"31\":1,\"74\":1}}],[\"commit文件钟的\",{\"1\":{\"27\":1,\"70\":1}}],[\"commitlint\",{\"1\":{\"29\":2,\"30\":1,\"31\":1,\"72\":2,\"73\":1,\"74\":1}}],[\"commitizen\",{\"1\":{\"14\":1,\"15\":1,\"57\":1,\"58\":1}}],[\"commit\",{\"0\":{\"13\":1,\"28\":1,\"31\":1,\"56\":1,\"71\":1,\"74\":1},\"1\":{\"9\":1,\"16\":1,\"17\":1,\"33\":3,\"34\":2,\"52\":1,\"59\":1,\"60\":1,\"76\":3,\"77\":2,\"83\":3,\"1591\":2,\"1600\":4,\"1602\":1,\"1604\":5,\"1612\":1,\"1614\":4,\"1636\":1,\"1637\":2}}],[\"com\",{\"1\":{\"11\":1,\"41\":1,\"54\":1,\"108\":2,\"239\":2,\"334\":4,\"345\":1,\"823\":2,\"867\":3,\"1153\":2,\"1168\":1,\"1248\":1,\"1311\":1,\"1480\":1,\"1487\":1,\"1494\":1,\"1529\":1,\"1536\":1,\"1544\":1,\"1553\":1,\"1565\":1,\"1572\":1,\"1582\":1,\"1583\":1,\"1659\":3,\"1677\":2,\"1789\":2}}],[\"cz来代替git\",{\"1\":{\"16\":1,\"17\":1,\"59\":1,\"60\":1}}],[\"cz\",{\"1\":{\"14\":1,\"15\":1,\"16\":1,\"34\":2,\"57\":1,\"58\":1,\"59\":1,\"77\":2}}],[\"二十面缓冲几何体\",{\"0\":{\"2350\":1}}],[\"二级封锁协议\",{\"1\":{\"2260\":1}}],[\"二级缓存\",{\"1\":{\"2071\":1}}],[\"二是通过系统记录文件查阅系统在特定时间内的运行状态\",{\"1\":{\"2172\":1}}],[\"二是基于确认信息\",{\"1\":{\"1717\":1}}],[\"二是为新对象定义额外属性的对象\",{\"1\":{\"490\":1}}],[\"二元加\",{\"1\":{\"805\":1}}],[\"二元加操作符用于计算数值操作或者拼接字符串操作\",{\"1\":{\"616\":1}}],[\"二元\",{\"1\":{\"805\":1}}],[\"二元操作符可以将两个表达式合成一个更复杂的表达式\",{\"1\":{\"601\":1}}],[\"二进制可执行程序\",{\"1\":{\"1150\":1}}],[\"二进制文件\",{\"1\":{\"909\":1}}],[\"二进制加号除外\",{\"1\":{\"805\":1}}],[\"二进制数据\",{\"1\":{\"414\":1}}],[\"二进制数据下载链接等的\",{\"1\":{\"413\":1}}],[\"二进制\",{\"0\":{\"386\":1},\"1\":{\"408\":1,\"1040\":1},\"2\":{\"423\":1}}],[\"二\",{\"0\":{\"6\":1,\"49\":1,\"288\":1,\"426\":1,\"556\":1,\"606\":1,\"682\":1,\"837\":1,\"880\":1,\"1477\":1,\"1485\":1,\"1492\":1,\"1506\":1,\"1526\":1,\"1534\":1,\"1541\":1,\"1549\":1,\"1558\":1,\"1570\":1,\"1585\":1,\"1682\":1}}],[\"2中\",{\"1\":{\"2556\":1}}],[\"2pc事务提交的两个阶段\",{\"0\":{\"2234\":1}}],[\"2px\",{\"1\":{\"118\":1,\"119\":1,\"127\":2}}],[\"2msl\",{\"1\":{\"1729\":1}}],[\"28\",{\"1\":{\"1659\":1}}],[\"2时\",{\"1\":{\"804\":1}}],[\"218903\",{\"1\":{\"2133\":1}}],[\"21次提交中\",{\"1\":{\"1637\":1}}],[\"212\",{\"1\":{\"797\":1}}],[\"212px\",{\"1\":{\"797\":1}}],[\"21\",{\"1\":{\"663\":3,\"745\":1,\"746\":1,\"1132\":2,\"1659\":1}}],[\"2左移5位\",{\"1\":{\"611\":1}}],[\"2d\",{\"1\":{\"414\":1}}],[\"24小时工作\",{\"1\":{\"2005\":1}}],[\"24小时内被修改过的文件\",{\"1\":{\"1006\":1}}],[\"24小时内被访问过的文件\",{\"1\":{\"1006\":1}}],[\"24小时内状态发生变化的文件\",{\"1\":{\"1006\":1}}],[\"2454\",{\"1\":{\"1448\":1}}],[\"24\",{\"1\":{\"411\":1}}],[\"24rem\",{\"1\":{\"207\":1}}],[\"254\",{\"1\":{\"2210\":1}}],[\"250mb\",{\"1\":{\"1670\":1}}],[\"250m\",{\"1\":{\"1669\":1}}],[\"25fasle\",{\"1\":{\"788\":1}}],[\"25null\",{\"1\":{\"788\":1}}],[\"2510\",{\"1\":{\"788\":1}}],[\"2515\",{\"1\":{\"774\":1}}],[\"251ms\",{\"1\":{\"596\":1}}],[\"25\",{\"1\":{\"774\":1,\"788\":6,\"838\":2,\"1036\":1,\"1338\":2,\"1340\":2,\"1648\":2,\"2442\":1}}],[\"2556\",{\"1\":{\"788\":1}}],[\"255\",{\"1\":{\"402\":1,\"843\":4,\"851\":1,\"1091\":1}}],[\"2531\",{\"1\":{\"1447\":1}}],[\"253\",{\"1\":{\"320\":1}}],[\"2nf\",{\"1\":{\"2252\":1}}],[\"2n\",{\"1\":{\"320\":4}}],[\"2<\",{\"1\":{\"236\":1}}],[\"234\",{\"1\":{\"1550\":1}}],[\"2345\",{\"1\":{\"1428\":1,\"1442\":1}}],[\"2350e\",{\"1\":{\"773\":1}}],[\"2322\",{\"1\":{\"1427\":1,\"1428\":1,\"1430\":2,\"1431\":9,\"1443\":2}}],[\"232\",{\"1\":{\"677\":1}}],[\"23\",{\"1\":{\"215\":1,\"689\":1,\"773\":2,\"774\":2,\"865\":1}}],[\"2rem\",{\"1\":{\"207\":1}}],[\"20世纪50\",{\"1\":{\"1863\":1}}],[\"20px\",{\"1\":{\"1315\":2}}],[\"20<space>\",{\"1\":{\"1061\":1}}],[\"2049\",{\"1\":{\"2109\":1}}],[\"2048\",{\"1\":{\"1153\":1}}],[\"204\",{\"1\":{\"817\":1}}],[\"203\",{\"1\":{\"797\":3}}],[\"203px\",{\"1\":{\"797\":1}}],[\"20twenty\",{\"1\":{\"772\":1}}],[\"2022\",{\"0\":{\"330\":1},\"1\":{\"333\":1,\"775\":1,\"787\":2,\"1626\":2}}],[\"2021\",{\"0\":{\"325\":1}}],[\"2020\",{\"0\":{\"319\":1}}],[\"2012\",{\"1\":{\"1029\":2}}],[\"2014\",{\"1\":{\"931\":4}}],[\"2019\",{\"0\":{\"306\":1}}],[\"2017\",{\"0\":{\"291\":1}}],[\"2016\",{\"0\":{\"288\":1},\"1\":{\"689\":1}}],[\"2015\",{\"0\":{\"245\":1},\"1\":{\"467\":1,\"500\":1}}],[\"2018年03月23日<\",{\"1\":{\"215\":1}}],[\"2018\",{\"0\":{\"298\":1},\"1\":{\"215\":1,\"1659\":1}}],[\"2005\",{\"1\":{\"1577\":2}}],[\"200px\",{\"1\":{\"1255\":2}}],[\"200\",{\"1\":{\"342\":5,\"559\":1,\"596\":3,\"817\":2,\"843\":4,\"851\":1,\"860\":1,\"864\":2,\"866\":1,\"1235\":1,\"1740\":2,\"1743\":3}}],[\"2000\",{\"1\":{\"299\":1,\"573\":1,\"574\":1,\"891\":1,\"1188\":1,\"1568\":1,\"1806\":1}}],[\"20000\",{\"1\":{\"128\":1}}],[\"200x100\",{\"1\":{\"94\":2}}],[\"20s超时\",{\"1\":{\"128\":1}}],[\"20rpx\",{\"1\":{\"118\":2,\"119\":2,\"127\":4}}],[\"20\",{\"1\":{\"21\":1,\"64\":1,\"94\":8,\"128\":6,\"445\":4,\"772\":3,\"782\":3,\"787\":2,\"797\":2,\"987\":1,\"993\":1,\"1007\":3,\"1414\":1,\"1626\":1,\"1774\":1,\"2375\":1,\"2391\":1,\"2438\":1}}],[\"222222\",{\"1\":{\"1777\":2}}],[\"222\",{\"1\":{\"584\":2}}],[\"22\",{\"1\":{\"21\":1,\"64\":1,\"774\":1,\"806\":4,\"1102\":1,\"1405\":1,\"1468\":1,\"1832\":1}}],[\"2\",{\"0\":{\"4\":1,\"8\":1,\"15\":1,\"20\":1,\"26\":1,\"30\":1,\"37\":1,\"47\":1,\"51\":1,\"58\":1,\"63\":1,\"69\":1,\"73\":1,\"80\":1,\"232\":1,\"248\":1,\"251\":1,\"253\":1,\"258\":1,\"261\":1,\"266\":1,\"270\":1,\"275\":1,\"280\":1,\"285\":1,\"290\":1,\"294\":1,\"295\":1,\"300\":1,\"303\":1,\"309\":1,\"310\":1,\"312\":1,\"315\":1,\"321\":1,\"327\":1,\"332\":1,\"339\":1,\"351\":1,\"352\":1,\"354\":1,\"363\":1,\"371\":1,\"372\":1,\"376\":1,\"379\":1,\"389\":1,\"390\":1,\"392\":1,\"395\":1,\"402\":1,\"417\":1,\"429\":1,\"430\":1,\"437\":1,\"443\":1,\"445\":1,\"451\":1,\"461\":1,\"468\":1,\"486\":1,\"501\":1,\"503\":1,\"506\":1,\"510\":1,\"516\":1,\"518\":1,\"521\":1,\"529\":1,\"533\":1,\"536\":1,\"540\":1,\"544\":1,\"548\":1,\"551\":1,\"558\":1,\"564\":1,\"565\":1,\"568\":1,\"572\":1,\"581\":1,\"588\":1,\"590\":1,\"595\":1,\"603\":1,\"605\":1,\"608\":1,\"614\":1,\"617\":1,\"624\":1,\"628\":1,\"632\":1,\"637\":1,\"675\":1,\"677\":1,\"685\":1,\"686\":1,\"688\":1,\"693\":1,\"696\":1,\"699\":1,\"702\":1,\"706\":1,\"709\":1,\"713\":1,\"719\":1,\"724\":1,\"726\":1,\"728\":1,\"732\":1,\"736\":1,\"741\":1,\"743\":1,\"746\":1,\"749\":1,\"755\":1,\"759\":1,\"761\":1,\"763\":1,\"774\":1,\"780\":1,\"789\":1,\"806\":1,\"816\":1,\"839\":1,\"841\":1,\"848\":1,\"873\":1,\"882\":1,\"889\":1,\"897\":1,\"899\":1,\"901\":1,\"1247\":1,\"1509\":1,\"1578\":1,\"1580\":1,\"1588\":1,\"1592\":1,\"1594\":1,\"1600\":1,\"1607\":1,\"1614\":1,\"1616\":1,\"1618\":1,\"1626\":1,\"1634\":1,\"1679\":1,\"1684\":1,\"1690\":1,\"1696\":1,\"1703\":1,\"1706\":1,\"1714\":1,\"1720\":1,\"1849\":1},\"1\":{\"20\":1,\"23\":1,\"30\":1,\"63\":2,\"66\":1,\"73\":1,\"82\":1,\"83\":1,\"118\":3,\"119\":1,\"123\":6,\"124\":2,\"127\":7,\"178\":3,\"205\":1,\"230\":1,\"233\":1,\"234\":1,\"240\":1,\"248\":7,\"250\":2,\"252\":9,\"253\":1,\"254\":2,\"256\":2,\"257\":1,\"258\":2,\"260\":1,\"265\":2,\"266\":2,\"271\":7,\"277\":1,\"279\":1,\"282\":2,\"284\":9,\"285\":4,\"286\":3,\"289\":7,\"290\":2,\"302\":4,\"303\":2,\"304\":2,\"305\":4,\"311\":13,\"312\":12,\"320\":6,\"323\":2,\"332\":3,\"338\":1,\"354\":3,\"360\":8,\"383\":2,\"394\":1,\"402\":2,\"403\":2,\"404\":2,\"433\":4,\"464\":1,\"484\":5,\"486\":1,\"488\":1,\"494\":1,\"495\":1,\"500\":2,\"507\":7,\"508\":1,\"510\":1,\"522\":1,\"528\":2,\"529\":1,\"536\":1,\"545\":2,\"550\":2,\"555\":4,\"557\":1,\"569\":4,\"573\":2,\"574\":2,\"576\":2,\"577\":3,\"578\":2,\"584\":2,\"587\":2,\"588\":2,\"590\":2,\"591\":1,\"602\":2,\"605\":2,\"606\":1,\"607\":2,\"611\":1,\"616\":6,\"617\":2,\"621\":6,\"631\":4,\"633\":2,\"635\":2,\"636\":8,\"641\":1,\"642\":2,\"645\":1,\"646\":1,\"654\":1,\"657\":1,\"658\":1,\"662\":4,\"663\":2,\"667\":6,\"674\":3,\"676\":1,\"677\":1,\"678\":5,\"680\":2,\"685\":1,\"695\":2,\"698\":2,\"699\":2,\"701\":3,\"702\":2,\"703\":3,\"705\":9,\"706\":4,\"708\":3,\"709\":4,\"710\":2,\"712\":2,\"713\":4,\"714\":4,\"715\":1,\"716\":1,\"718\":3,\"719\":1,\"720\":7,\"727\":2,\"729\":2,\"731\":4,\"732\":3,\"734\":2,\"735\":2,\"736\":2,\"737\":2,\"738\":2,\"739\":3,\"740\":2,\"742\":3,\"743\":3,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"754\":3,\"755\":2,\"756\":6,\"758\":2,\"759\":2,\"764\":1,\"772\":1,\"773\":3,\"774\":1,\"775\":3,\"777\":1,\"778\":3,\"784\":6,\"792\":1,\"797\":1,\"800\":1,\"802\":2,\"803\":1,\"804\":1,\"806\":1,\"838\":4,\"841\":2,\"843\":4,\"844\":2,\"847\":3,\"864\":2,\"872\":2,\"873\":4,\"874\":2,\"875\":4,\"876\":2,\"877\":12,\"878\":5,\"879\":2,\"881\":2,\"883\":2,\"885\":1,\"888\":1,\"901\":6,\"902\":16,\"903\":2,\"931\":1,\"989\":1,\"1002\":2,\"1029\":1,\"1040\":1,\"1086\":10,\"1087\":2,\"1096\":2,\"1110\":1,\"1196\":1,\"1197\":4,\"1210\":1,\"1220\":1,\"1222\":1,\"1256\":2,\"1274\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1334\":1,\"1339\":1,\"1344\":1,\"1357\":1,\"1405\":3,\"1407\":1,\"1411\":2,\"1425\":1,\"1429\":2,\"1443\":5,\"1448\":2,\"1468\":1,\"1475\":1,\"1476\":1,\"1478\":1,\"1483\":1,\"1490\":1,\"1511\":2,\"1533\":1,\"1534\":1,\"1535\":2,\"1539\":1,\"1542\":1,\"1549\":1,\"1563\":2,\"1564\":2,\"1568\":1,\"1646\":1,\"1649\":1,\"1789\":1,\"1798\":2,\"1829\":1,\"2028\":1,\"2076\":1,\"2395\":6,\"2407\":1,\"2438\":2,\"2446\":2,\"2528\":4,\"2650\":1,\"2744\":1,\"2754\":1,\"2760\":1,\"2842\":1}}],[\"3d\",{\"1\":{\"2717\":1}}],[\"3g\",{\"1\":{\"2203\":1}}],[\"3大要素包括人员\",{\"1\":{\"2121\":1}}],[\"35\",{\"1\":{\"1370\":3}}],[\"386\",{\"1\":{\"1125\":1}}],[\"344\",{\"1\":{\"954\":1}}],[\"34\",{\"1\":{\"797\":2}}],[\"3years\",{\"1\":{\"663\":1}}],[\"33\",{\"1\":{\"663\":1,\"1460\":1,\"1832\":1}}],[\"333\",{\"1\":{\"584\":2}}],[\"333333px\",{\"1\":{\"207\":1}}],[\"30px\",{\"1\":{\"1255\":1}}],[\"304modified\",{\"1\":{\"817\":1}}],[\"304\",{\"1\":{\"817\":1,\"860\":1}}],[\"302108\",{\"1\":{\"1033\":2}}],[\"302\",{\"1\":{\"817\":1}}],[\"301永久重定向响应\",{\"1\":{\"1697\":1}}],[\"301\",{\"1\":{\"817\":1}}],[\"30\",{\"1\":{\"642\":1,\"773\":1,\"782\":1,\"1365\":1,\"2884\":1}}],[\"300\",{\"1\":{\"342\":2,\"596\":4,\"850\":2,\"860\":1}}],[\"3000\",{\"1\":{\"299\":1,\"573\":1,\"574\":1,\"595\":1,\"859\":2,\"860\":2,\"861\":2,\"862\":2,\"863\":2,\"891\":1,\"2744\":2}}],[\"3007\",{\"1\":{\"191\":2}}],[\"300px\",{\"1\":{\"171\":1}}],[\"31\",{\"1\":{\"642\":1,\"663\":1}}],[\"3^5的值为6\",{\"1\":{\"610\":1}}],[\"3秒钟之后出现cug\",{\"1\":{\"595\":1}}],[\"3秒钟之后出现hello\",{\"1\":{\"595\":1}}],[\"36\",{\"1\":{\"550\":2}}],[\"324abc\",{\"1\":{\"663\":1}}],[\"324\",{\"1\":{\"663\":2}}],[\"32\",{\"1\":{\"402\":4,\"606\":2,\"642\":1,\"677\":1,\"806\":2,\"2371\":1,\"2375\":1,\"2383\":1,\"2391\":1,\"2430\":1}}],[\"320\",{\"1\":{\"206\":2}}],[\"320px\",{\"1\":{\"204\":1}}],[\"3<\",{\"1\":{\"236\":1}}],[\"375\",{\"1\":{\"206\":1,\"208\":2}}],[\"375px\",{\"1\":{\"204\":1}}],[\"3\",{\"0\":{\"5\":1,\"9\":1,\"16\":1,\"21\":1,\"27\":1,\"31\":1,\"38\":1,\"39\":1,\"48\":1,\"52\":1,\"59\":1,\"64\":1,\"70\":1,\"74\":1,\"81\":1,\"233\":1,\"249\":1,\"254\":1,\"255\":1,\"262\":1,\"267\":1,\"276\":1,\"281\":1,\"286\":1,\"296\":1,\"301\":1,\"304\":1,\"313\":1,\"322\":1,\"328\":1,\"333\":1,\"340\":1,\"355\":1,\"360\":1,\"364\":1,\"377\":1,\"380\":1,\"393\":1,\"408\":1,\"418\":1,\"431\":1,\"444\":1,\"446\":1,\"455\":1,\"473\":1,\"488\":1,\"504\":1,\"519\":1,\"522\":1,\"530\":1,\"537\":1,\"541\":1,\"559\":1,\"566\":1,\"573\":1,\"582\":1,\"589\":1,\"591\":1,\"596\":1,\"609\":1,\"618\":1,\"625\":1,\"633\":1,\"638\":1,\"678\":1,\"679\":1,\"689\":1,\"691\":1,\"703\":1,\"714\":1,\"720\":1,\"725\":1,\"729\":1,\"730\":1,\"737\":1,\"744\":1,\"756\":1,\"764\":1,\"766\":1,\"796\":1,\"803\":1,\"807\":1,\"817\":1,\"842\":1,\"849\":1,\"874\":1,\"883\":1,\"890\":1,\"898\":1,\"902\":1,\"1248\":1,\"1510\":1,\"1581\":1,\"1582\":1,\"1589\":1,\"1595\":1,\"1598\":1,\"1601\":1,\"1608\":1,\"1615\":1,\"1619\":1,\"1624\":1,\"1635\":1,\"1680\":1,\"1685\":1,\"1691\":1,\"1697\":1,\"1704\":1,\"1707\":1,\"1715\":1,\"1721\":1,\"1850\":1},\"1\":{\"3\":1,\"21\":2,\"64\":2,\"82\":1,\"83\":2,\"118\":1,\"119\":1,\"127\":1,\"208\":1,\"230\":2,\"231\":1,\"234\":1,\"248\":5,\"252\":9,\"254\":2,\"260\":1,\"265\":2,\"266\":2,\"271\":6,\"282\":2,\"284\":9,\"285\":4,\"286\":5,\"287\":2,\"289\":7,\"293\":2,\"302\":4,\"303\":2,\"304\":2,\"305\":4,\"311\":12,\"312\":4,\"324\":1,\"332\":1,\"354\":1,\"360\":2,\"383\":2,\"403\":4,\"411\":1,\"458\":1,\"464\":3,\"484\":5,\"486\":1,\"488\":1,\"494\":1,\"508\":1,\"521\":1,\"545\":2,\"547\":2,\"555\":2,\"569\":2,\"573\":2,\"574\":1,\"578\":1,\"584\":2,\"587\":2,\"588\":2,\"590\":1,\"602\":1,\"606\":1,\"607\":2,\"608\":2,\"610\":1,\"616\":1,\"617\":6,\"621\":2,\"631\":4,\"633\":2,\"635\":1,\"636\":2,\"642\":1,\"645\":1,\"654\":1,\"657\":1,\"662\":2,\"663\":7,\"667\":1,\"674\":4,\"676\":1,\"678\":5,\"680\":1,\"684\":2,\"685\":3,\"695\":2,\"698\":2,\"699\":2,\"701\":3,\"702\":1,\"705\":9,\"706\":4,\"708\":3,\"709\":2,\"710\":3,\"712\":2,\"713\":4,\"714\":4,\"715\":1,\"716\":1,\"718\":2,\"719\":1,\"720\":6,\"727\":2,\"729\":2,\"731\":3,\"732\":3,\"734\":2,\"735\":2,\"736\":2,\"737\":2,\"738\":2,\"739\":2,\"740\":2,\"742\":2,\"743\":2,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"754\":3,\"755\":2,\"758\":2,\"759\":2,\"764\":1,\"775\":1,\"777\":1,\"778\":1,\"784\":6,\"792\":1,\"800\":1,\"802\":2,\"806\":1,\"838\":3,\"841\":2,\"844\":2,\"847\":1,\"872\":2,\"873\":4,\"874\":2,\"875\":4,\"876\":2,\"877\":13,\"878\":3,\"879\":2,\"881\":2,\"883\":2,\"888\":1,\"898\":5,\"901\":2,\"902\":4,\"903\":2,\"989\":1,\"1002\":2,\"1040\":1,\"1196\":1,\"1220\":1,\"1244\":1,\"1274\":1,\"1339\":1,\"1340\":1,\"1357\":1,\"1369\":2,\"1405\":2,\"1407\":2,\"1425\":1,\"1427\":1,\"1430\":1,\"1443\":3,\"1476\":1,\"1478\":1,\"1533\":1,\"1534\":1,\"1535\":1,\"1539\":1,\"1549\":1,\"1550\":2,\"1563\":2,\"1564\":1,\"1568\":1,\"1626\":1,\"1649\":2,\"1789\":1,\"1798\":2,\"1829\":1,\"2028\":1,\"2278\":2,\"2379\":1,\"2387\":1,\"2395\":3,\"2403\":1,\"2438\":1,\"2744\":4,\"2754\":1,\"2842\":1}}],[\"1中\",{\"1\":{\"2555\":1}}],[\"1个均分点\",{\"1\":{\"2426\":1}}],[\"1个点\",{\"1\":{\"2425\":1}}],[\"1个程序由若干个段\",{\"1\":{\"2162\":1}}],[\"1小时内修改\",{\"1\":{\"2005\":1}}],[\"1分钟内切换至备用服务器\",{\"1\":{\"2005\":1}}],[\"1m\",{\"1\":{\"1152\":1}}],[\"1mb\",{\"1\":{\"1007\":1}}],[\"1的12345天内修改\",{\"1\":{\"940\":1}}],[\"1的元素\",{\"1\":{\"287\":1,\"684\":1}}],[\"1相距的天数密码不可改的天数\",{\"1\":{\"940\":2}}],[\"1f\",{\"1\":{\"663\":1}}],[\"1变成0\",{\"1\":{\"609\":1}}],[\"1s后打印结果\",{\"1\":{\"555\":1}}],[\"17982\",{\"1\":{\"940\":2}}],[\"17\",{\"1\":{\"550\":1,\"663\":1,\"931\":3}}],[\"19\",{\"1\":{\"663\":1,\"836\":1,\"844\":1,\"847\":1,\"931\":1,\"1029\":1,\"2403\":1}}],[\"192\",{\"1\":{\"445\":1,\"931\":2}}],[\"1970\",{\"1\":{\"391\":1}}],[\"19px\",{\"1\":{\"343\":1}}],[\"1nf\",{\"1\":{\"2251\":1}}],[\"1n\",{\"1\":{\"320\":3}}],[\"180\",{\"1\":{\"838\":1}}],[\"188\",{\"1\":{\"297\":2}}],[\"18\",{\"1\":{\"295\":3,\"297\":2,\"356\":2,\"357\":2,\"359\":3,\"478\":1,\"495\":1,\"639\":1,\"663\":2,\"723\":2,\"775\":2,\"836\":1,\"844\":1,\"847\":1,\"882\":3,\"931\":1,\"1203\":1,\"1774\":1}}],[\"1500\",{\"1\":{\"596\":1}}],[\"1507\",{\"1\":{\"596\":1}}],[\"15\",{\"1\":{\"284\":1,\"293\":1,\"547\":1,\"550\":1,\"663\":3,\"698\":7,\"705\":1,\"706\":1,\"774\":1,\"775\":1,\"877\":2,\"1626\":1,\"2403\":2,\"2430\":1,\"2750\":2}}],[\"1<x<=10\",{\"1\":{\"1939\":1}}],[\"1<\",{\"1\":{\"236\":1,\"1274\":2}}],[\"1vw\",{\"1\":{\"208\":1}}],[\"1rem\",{\"1\":{\"206\":3,\"207\":1}}],[\"12s\",{\"1\":{\"797\":1}}],[\"128\",{\"1\":{\"445\":1,\"2562\":1}}],[\"123>\",{\"1\":{\"1550\":1}}],[\"1234string\",{\"1\":{\"775\":1}}],[\"12345\",{\"1\":{\"433\":8,\"623\":1}}],[\"123\",{\"1\":{\"254\":1,\"272\":4,\"331\":1,\"482\":3,\"590\":1,\"662\":2,\"689\":2,\"791\":2,\"795\":2,\"797\":2,\"898\":2,\"1353\":1,\"1354\":1,\"1398\":1,\"1475\":1,\"1533\":1,\"1539\":1,\"1550\":2,\"1556\":1}}],[\"12\",{\"0\":{\"283\":1,\"546\":1},\"1\":{\"253\":1,\"474\":1,\"616\":3,\"646\":1,\"662\":1,\"706\":1,\"797\":2,\"877\":1,\"931\":2,\"1339\":1,\"2403\":1,\"2407\":1}}],[\"12px\",{\"1\":{\"206\":1}}],[\"127\",{\"1\":{\"191\":1,\"864\":6,\"865\":3,\"866\":5,\"867\":5,\"1152\":4,\"1153\":2}}],[\"110\",{\"1\":{\"642\":1,\"1040\":1}}],[\"1110\",{\"1\":{\"611\":1}}],[\"111111\",{\"1\":{\"1777\":2}}],[\"1111\",{\"1\":{\"606\":3,\"609\":2,\"1490\":1}}],[\"111\",{\"1\":{\"584\":2,\"1040\":1,\"1547\":1,\"1758\":2}}],[\"11\",{\"0\":{\"278\":1,\"545\":1,\"646\":1,\"717\":1,\"1731\":1},\"1\":{\"126\":1,\"127\":1,\"284\":1,\"388\":1,\"567\":3,\"653\":2,\"663\":3,\"705\":1,\"877\":1,\"1033\":2,\"1468\":1,\"1832\":1,\"2403\":2}}],[\"16进制表示光的颜色\",{\"1\":{\"2852\":1}}],[\"169\",{\"1\":{\"2210\":1}}],[\"16次提交是有问题的\",{\"1\":{\"1637\":1}}],[\"168\",{\"1\":{\"931\":2,\"1102\":1}}],[\"1660493819396\",{\"1\":{\"775\":1}}],[\"16px\",{\"1\":{\"171\":1}}],[\"16\",{\"1\":{\"123\":2,\"127\":2,\"399\":2,\"400\":2,\"401\":1,\"402\":3,\"403\":2,\"404\":1,\"409\":1,\"410\":1,\"518\":1,\"550\":2,\"662\":2,\"663\":1,\"1146\":5,\"2379\":1,\"2387\":1,\"2403\":4,\"2407\":1,\"2430\":1}}],[\"14px\",{\"1\":{\"1706\":1}}],[\"14\",{\"1\":{\"118\":1,\"275\":1,\"470\":1,\"646\":1,\"706\":1,\"877\":1,\"931\":3,\"1029\":1}}],[\"1px=\",{\"1\":{\"208\":1}}],[\"1px\",{\"1\":{\"118\":1,\"119\":1,\"127\":1,\"151\":2}}],[\"10和11作为测试数据\",{\"1\":{\"1939\":1}}],[\"10和10都是数字并且是完全相等的\",{\"1\":{\"772\":1}}],[\"10m\",{\"1\":{\"1669\":1}}],[\"10ms\",{\"1\":{\"376\":1}}],[\"10px\",{\"1\":{\"1255\":2}}],[\"10以上的参数需要用大括号包含\",{\"1\":{\"1104\":1}}],[\"10cj\",{\"1\":{\"1063\":1}}],[\"101\",{\"1\":{\"1040\":1}}],[\"1011\",{\"1\":{\"611\":1}}],[\"1010\",{\"1\":{\"606\":5,\"611\":1,\"662\":1}}],[\"10n\",{\"1\":{\"320\":3}}],[\"1024\",{\"1\":{\"290\":2,\"621\":3,\"1152\":1,\"1153\":2,\"2884\":2}}],[\"10rpx\",{\"1\":{\"118\":1,\"119\":1,\"127\":2}}],[\"100n\",{\"1\":{\"1402\":2}}],[\"1001\",{\"1\":{\"609\":2}}],[\"100ms\",{\"1\":{\"376\":2}}],[\"100vh\",{\"1\":{\"208\":1}}],[\"100vw\",{\"1\":{\"208\":2}}],[\"100px=2rem\",{\"1\":{\"207\":1}}],[\"100px\",{\"1\":{\"207\":1,\"1255\":2,\"1289\":2}}],[\"100\",{\"1\":{\"118\":1,\"119\":1,\"128\":1,\"205\":1,\"208\":1,\"299\":1,\"334\":3,\"395\":1,\"642\":1,\"653\":2,\"772\":1,\"836\":1,\"843\":4,\"844\":1,\"847\":1,\"851\":1,\"891\":1,\"1040\":1,\"1102\":1,\"1256\":1,\"1289\":1,\"1320\":1,\"1321\":1,\"1323\":1,\"1339\":1,\"1740\":2,\"1743\":3,\"2379\":1,\"2387\":1,\"2442\":3,\"2450\":3,\"2876\":1,\"2884\":2}}],[\"10000\",{\"1\":{\"436\":2,\"478\":3,\"1083\":1,\"1789\":1}}],[\"1000000\",{\"1\":{\"436\":1}}],[\"1000000000\",{\"1\":{\"327\":1}}],[\"100000\",{\"1\":{\"430\":2,\"432\":1,\"2562\":1}}],[\"10003\",{\"1\":{\"128\":1}}],[\"10001\",{\"1\":{\"128\":1}}],[\"1000\",{\"1\":{\"83\":1,\"118\":1,\"122\":2,\"123\":2,\"125\":2,\"127\":2,\"226\":1,\"300\":1,\"430\":2,\"555\":1,\"573\":1,\"574\":1,\"578\":2,\"597\":1,\"606\":2,\"609\":2,\"611\":1,\"805\":1,\"806\":1,\"902\":1,\"1083\":1,\"1188\":1,\"1246\":1,\"1250\":1,\"1282\":1,\"1309\":2,\"1390\":1,\"1475\":1,\"1490\":1,\"1539\":1,\"1556\":1,\"1653\":1,\"1758\":1,\"1806\":1,\"2528\":1,\"2566\":1,\"2884\":1}}],[\"10\",{\"0\":{\"273\":1,\"542\":1,\"645\":1,\"711\":1,\"1730\":1},\"1\":{\"83\":1,\"118\":1,\"125\":1,\"127\":1,\"207\":1,\"218\":2,\"284\":1,\"290\":2,\"311\":1,\"320\":2,\"353\":1,\"376\":3,\"403\":5,\"431\":1,\"550\":3,\"551\":6,\"606\":5,\"621\":3,\"640\":3,\"645\":1,\"662\":1,\"663\":4,\"667\":1,\"677\":3,\"679\":3,\"698\":10,\"705\":1,\"727\":1,\"748\":1,\"749\":1,\"772\":4,\"782\":3,\"788\":1,\"797\":8,\"805\":1,\"806\":2,\"877\":1,\"889\":1,\"890\":1,\"920\":2,\"984\":2,\"993\":5,\"1029\":1,\"1104\":1,\"1146\":1,\"1159\":1,\"1173\":1,\"1183\":1,\"1311\":1,\"1315\":2,\"1320\":1,\"1321\":1,\"1323\":1,\"1324\":1,\"1369\":1,\"1389\":1,\"1390\":1,\"1410\":4,\"1414\":1,\"1448\":2,\"2379\":1,\"2387\":1,\"2403\":1,\"2411\":4,\"2438\":1,\"2446\":2,\"2872\":2}}],[\"1334\",{\"1\":{\"208\":1}}],[\"13\",{\"0\":{\"549\":1},\"1\":{\"21\":2,\"64\":2,\"343\":1,\"474\":2,\"663\":2,\"931\":1,\"1033\":2}}],[\"130\",{\"1\":{\"20\":1,\"23\":1,\"63\":1,\"66\":1}}],[\"1\",{\"0\":{\"3\":1,\"7\":1,\"14\":1,\"19\":1,\"25\":1,\"29\":1,\"36\":1,\"46\":1,\"50\":1,\"57\":1,\"62\":1,\"68\":1,\"72\":1,\"79\":1,\"246\":1,\"247\":1,\"252\":1,\"257\":1,\"260\":1,\"265\":1,\"269\":1,\"274\":1,\"279\":1,\"284\":1,\"289\":1,\"292\":1,\"293\":1,\"299\":1,\"302\":1,\"307\":1,\"308\":1,\"311\":1,\"314\":1,\"320\":1,\"326\":1,\"331\":1,\"338\":1,\"349\":1,\"350\":1,\"353\":1,\"362\":1,\"369\":1,\"370\":1,\"373\":1,\"378\":1,\"387\":1,\"388\":1,\"391\":1,\"394\":1,\"397\":1,\"416\":1,\"427\":1,\"428\":1,\"436\":1,\"441\":1,\"442\":1,\"447\":1,\"457\":1,\"467\":1,\"484\":1,\"500\":1,\"502\":1,\"505\":1,\"509\":1,\"515\":1,\"517\":1,\"520\":1,\"528\":1,\"532\":1,\"535\":1,\"539\":1,\"543\":1,\"547\":1,\"550\":1,\"557\":1,\"562\":1,\"563\":1,\"567\":1,\"571\":1,\"580\":1,\"586\":1,\"587\":1,\"594\":1,\"602\":1,\"604\":1,\"607\":1,\"613\":1,\"616\":1,\"623\":1,\"627\":1,\"630\":1,\"631\":1,\"674\":1,\"676\":1,\"683\":1,\"684\":1,\"687\":1,\"692\":1,\"695\":1,\"698\":1,\"701\":1,\"705\":1,\"708\":1,\"712\":1,\"718\":1,\"722\":1,\"723\":1,\"727\":1,\"731\":1,\"734\":1,\"735\":1,\"742\":1,\"745\":1,\"748\":1,\"753\":1,\"754\":1,\"758\":1,\"762\":1,\"772\":1,\"773\":1,\"781\":1,\"805\":1,\"815\":1,\"838\":1,\"840\":1,\"846\":1,\"847\":1,\"872\":1,\"881\":1,\"888\":1,\"895\":1,\"896\":1,\"900\":1,\"1246\":1,\"1508\":1,\"1577\":1,\"1579\":1,\"1586\":1,\"1587\":1,\"1593\":1,\"1599\":1,\"1606\":1,\"1612\":1,\"1613\":1,\"1617\":1,\"1625\":1,\"1633\":1,\"1678\":1,\"1683\":1,\"1689\":1,\"1695\":1,\"1701\":1,\"1702\":2,\"1703\":1,\"1704\":1,\"1705\":1,\"1711\":1,\"1719\":1,\"1845\":1},\"1\":{\"19\":1,\"21\":3,\"31\":1,\"62\":1,\"64\":3,\"74\":1,\"83\":3,\"109\":1,\"117\":1,\"118\":1,\"119\":2,\"122\":1,\"127\":1,\"128\":3,\"147\":1,\"178\":3,\"191\":1,\"208\":3,\"218\":2,\"230\":2,\"234\":1,\"240\":2,\"248\":7,\"249\":1,\"250\":4,\"252\":9,\"253\":2,\"254\":2,\"256\":4,\"257\":3,\"258\":2,\"260\":1,\"265\":2,\"266\":2,\"271\":7,\"272\":1,\"282\":3,\"284\":10,\"285\":3,\"286\":3,\"287\":1,\"289\":8,\"293\":3,\"295\":3,\"300\":1,\"302\":2,\"303\":2,\"304\":2,\"305\":2,\"311\":12,\"312\":6,\"320\":3,\"323\":2,\"327\":1,\"332\":5,\"338\":5,\"340\":4,\"353\":3,\"354\":6,\"360\":2,\"363\":1,\"388\":1,\"391\":2,\"394\":1,\"402\":3,\"403\":1,\"404\":2,\"411\":1,\"433\":9,\"436\":1,\"464\":2,\"484\":5,\"486\":1,\"488\":1,\"494\":1,\"500\":5,\"503\":2,\"507\":6,\"508\":1,\"510\":1,\"511\":1,\"517\":3,\"518\":1,\"520\":3,\"521\":2,\"528\":4,\"529\":7,\"530\":10,\"533\":1,\"537\":2,\"545\":3,\"547\":2,\"550\":1,\"555\":5,\"557\":1,\"569\":4,\"573\":2,\"574\":1,\"576\":2,\"577\":1,\"578\":3,\"584\":3,\"587\":2,\"588\":2,\"590\":2,\"591\":1,\"602\":2,\"604\":2,\"605\":2,\"606\":15,\"607\":10,\"608\":7,\"609\":2,\"610\":6,\"616\":13,\"617\":2,\"621\":3,\"627\":11,\"631\":4,\"633\":2,\"635\":2,\"636\":8,\"642\":3,\"645\":1,\"654\":1,\"656\":1,\"657\":3,\"658\":2,\"659\":1,\"662\":3,\"663\":4,\"667\":7,\"668\":1,\"674\":4,\"676\":1,\"678\":3,\"679\":3,\"680\":2,\"681\":1,\"684\":1,\"685\":1,\"689\":1,\"695\":2,\"698\":13,\"699\":2,\"701\":3,\"702\":1,\"703\":2,\"705\":10,\"706\":4,\"708\":3,\"709\":2,\"710\":2,\"712\":2,\"713\":6,\"714\":3,\"715\":1,\"716\":1,\"718\":3,\"719\":1,\"720\":6,\"727\":4,\"728\":1,\"729\":2,\"731\":4,\"732\":3,\"734\":2,\"735\":2,\"736\":2,\"737\":2,\"738\":2,\"739\":3,\"740\":2,\"742\":4,\"743\":5,\"745\":1,\"746\":3,\"748\":3,\"749\":1,\"754\":1,\"755\":3,\"756\":6,\"758\":2,\"759\":2,\"763\":4,\"764\":3,\"765\":2,\"773\":1,\"774\":1,\"775\":11,\"776\":4,\"777\":8,\"778\":3,\"779\":5,\"784\":6,\"792\":1,\"794\":1,\"795\":1,\"798\":2,\"800\":1,\"801\":2,\"804\":2,\"806\":1,\"838\":2,\"841\":2,\"843\":6,\"844\":2,\"847\":3,\"864\":11,\"865\":3,\"866\":5,\"867\":5,\"872\":2,\"873\":6,\"874\":2,\"875\":3,\"876\":2,\"877\":13,\"878\":3,\"879\":2,\"881\":2,\"882\":3,\"883\":4,\"884\":1,\"885\":1,\"888\":1,\"889\":1,\"890\":1,\"900\":3,\"901\":1,\"902\":15,\"903\":6,\"931\":3,\"937\":1,\"940\":3,\"986\":1,\"989\":1,\"1002\":2,\"1018\":1,\"1021\":2,\"1033\":3,\"1036\":1,\"1040\":2,\"1062\":2,\"1086\":10,\"1087\":2,\"1102\":1,\"1110\":1,\"1132\":2,\"1146\":12,\"1152\":5,\"1153\":4,\"1167\":2,\"1168\":1,\"1196\":1,\"1197\":4,\"1210\":1,\"1220\":1,\"1222\":1,\"1235\":1,\"1243\":1,\"1244\":2,\"1251\":1,\"1256\":1,\"1265\":1,\"1269\":1,\"1273\":2,\"1274\":5,\"1282\":1,\"1286\":2,\"1287\":2,\"1289\":1,\"1299\":1,\"1300\":2,\"1311\":1,\"1315\":1,\"1320\":2,\"1321\":2,\"1323\":2,\"1324\":2,\"1334\":3,\"1339\":1,\"1344\":1,\"1357\":2,\"1366\":1,\"1372\":1,\"1377\":1,\"1389\":1,\"1401\":1,\"1405\":3,\"1407\":2,\"1411\":3,\"1413\":1,\"1414\":3,\"1417\":1,\"1418\":1,\"1425\":1,\"1427\":2,\"1431\":3,\"1436\":1,\"1437\":1,\"1442\":9,\"1443\":2,\"1454\":1,\"1475\":3,\"1476\":2,\"1478\":6,\"1483\":1,\"1490\":1,\"1533\":1,\"1534\":1,\"1535\":1,\"1539\":1,\"1542\":2,\"1549\":1,\"1550\":6,\"1551\":3,\"1562\":1,\"1563\":2,\"1564\":1,\"1568\":1,\"1571\":1,\"1646\":5,\"1648\":1,\"1649\":4,\"1671\":1,\"1719\":1,\"1726\":2,\"1817\":1,\"1829\":1,\"1914\":2,\"1939\":1,\"2028\":1,\"2076\":1,\"2213\":1,\"2278\":18,\"2312\":1,\"2333\":1,\"2334\":1,\"2340\":2,\"2341\":1,\"2342\":1,\"2383\":1,\"2395\":28,\"2399\":2,\"2407\":3,\"2434\":3,\"2438\":2,\"2528\":1,\"2536\":1,\"2562\":1,\"2566\":1,\"2577\":1,\"2667\":2,\"2701\":1,\"2712\":3,\"2744\":2,\"2749\":3,\"2760\":2,\"2839\":1,\"2842\":1,\"2853\":1,\"2856\":1,\"2864\":1,\"2872\":1,\"2876\":1}}],[\"一级封锁协议加上事务t在读取数据r之前先对其加s锁\",{\"1\":{\"2260\":2}}],[\"一级封锁协议\",{\"1\":{\"2260\":1}}],[\"一点对多点的通信\",{\"1\":{\"2214\":1}}],[\"一主多从\",{\"1\":{\"2080\":1}}],[\"一组构件框架和构件框架之间的互操作设计组成\",{\"1\":{\"2020\":1}}],[\"一组甚至全部软件包的命令\",{\"1\":{\"1071\":1}}],[\"一对多关系\",{\"1\":{\"1752\":1}}],[\"一对一关系\",{\"1\":{\"1752\":1}}],[\"一是通过系统本身提供的命令\",{\"1\":{\"2172\":1}}],[\"一是基于时间\",{\"1\":{\"1717\":1}}],[\"一是用作新对象原型的对象\",{\"1\":{\"490\":1}}],[\"一部分\",{\"1\":{\"1646\":1}}],[\"一开始只是递归对数据进行响应式处理无法收集依赖\",{\"1\":{\"1563\":1}}],[\"一开始都是将\",{\"1\":{\"731\":1}}],[\"一些常见的用例包括\",{\"1\":{\"1203\":1}}],[\"一些小的图片都可以使用\",{\"1\":{\"414\":1}}],[\"一定是一个数字\",{\"1\":{\"1443\":1}}],[\"一定是异步吗\",{\"0\":{\"1201\":1}}],[\"一定要带上\",{\"1\":{\"1153\":1}}],[\"一项一项地去遍历\",{\"1\":{\"735\":1}}],[\"一元运算符也会把运算子转成数值\",{\"1\":{\"667\":1,\"669\":1}}],[\"一元减操作符和一元加操作符类似\",{\"1\":{\"605\":1}}],[\"一元减运算符\",{\"0\":{\"605\":1}}],[\"一元加\",{\"1\":{\"805\":1}}],[\"一元加和减操作符主要用于基本的算术运算\",{\"1\":{\"605\":1}}],[\"一元加操作符会将其操作数转化为数值\",{\"1\":{\"604\":1}}],[\"一元加运算符\",{\"0\":{\"604\":1}}],[\"一元操作符具有以下特点\",{\"1\":{\"601\":1}}],[\"一元操作符\",{\"0\":{\"601\":1}}],[\"一共用了\",{\"1\":{\"596\":1}}],[\"一起被收集到数组\",{\"1\":{\"1542\":1}}],[\"一起使用\",{\"1\":{\"953\":1,\"1458\":1}}],[\"一起使用的模块的名称\",{\"1\":{\"463\":1}}],[\"一起\",{\"1\":{\"581\":1}}],[\"一种使用sprite的材质\",{\"1\":{\"2733\":1}}],[\"一种按深度绘制几何体的材质\",{\"1\":{\"2725\":1}}],[\"一种把法向量映射到rgb颜色的材质\",{\"1\":{\"2721\":1}}],[\"一种基于物理的标准材质\",{\"1\":{\"2717\":1}}],[\"一种用于绘制虚线样式几何体的材质\",{\"1\":{\"2771\":1}}],[\"一种用于绘制线框样式几何体的材质\",{\"1\":{\"2625\":1}}],[\"一种用于具有镜面高光的光泽表面的材质\",{\"1\":{\"2613\":1}}],[\"一种非光泽表面的材质\",{\"1\":{\"2593\":1}}],[\"一种特殊的分布式数据库\",{\"1\":{\"2133\":1}}],[\"一种情况是需要另一个分支的所有代码变动\",{\"1\":{\"1602\":1}}],[\"一种最简单的异步操作就是在一定时间之后运行某些代码\",{\"1\":{\"557\":1}}],[\"一种是你要发送一些数据给蓝牙设备\",{\"1\":{\"124\":1}}],[\"一份在子类型实例中\",{\"1\":{\"489\":1}}],[\"一份在原型对象中\",{\"1\":{\"489\":1}}],[\"一直会以恒定的速度发送数据\",{\"1\":{\"1712\":1}}],[\"一直执行\",{\"1\":{\"587\":1}}],[\"一直找到最顶层\",{\"1\":{\"482\":1}}],[\"一直在增加\",{\"1\":{\"436\":1}}],[\"一旦浏览器下载了\",{\"1\":{\"1706\":1}}],[\"一旦定义了任意属性\",{\"1\":{\"1340\":1}}],[\"一旦暴露\",{\"1\":{\"1332\":1}}],[\"一旦开启\",{\"1\":{\"860\":1}}],[\"一旦将它们转换为原始值\",{\"1\":{\"807\":1}}],[\"一旦状态改变就不会再变\",{\"1\":{\"565\":1}}],[\"一旦去掉\",{\"1\":{\"511\":1}}],[\"一旦这个值被输出\",{\"1\":{\"449\":1}}],[\"一旦不再需要\",{\"1\":{\"432\":1}}],[\"一旦被绑定\",{\"1\":{\"360\":1}}],[\"一次完整的\",{\"1\":{\"1650\":1}}],[\"一次显示的行数\",{\"1\":{\"986\":1}}],[\"一次性读取装置\",{\"1\":{\"1029\":1}}],[\"一次性\",{\"1\":{\"565\":1}}],[\"一次在创建子类型实例的时候\",{\"1\":{\"489\":1}}],[\"一次在创建子类型原型对象的时候\",{\"1\":{\"489\":1}}],[\"一次\",{\"1\":{\"376\":1,\"565\":1}}],[\"一样发送一个\",{\"1\":{\"1728\":1}}],[\"一样\",{\"1\":{\"340\":1,\"765\":1,\"1194\":1,\"1236\":1,\"1416\":1,\"1431\":1}}],[\"一致性\",{\"1\":{\"2258\":1}}],[\"一致就接受\",{\"1\":{\"1692\":1}}],[\"一致\",{\"1\":{\"308\":1,\"309\":1,\"540\":1,\"541\":1,\"872\":1,\"1338\":1}}],[\"一般嵌入式系统由嵌入式处理器\",{\"1\":{\"2176\":1}}],[\"一般有\",{\"1\":{\"2133\":1}}],[\"一般\",{\"1\":{\"2080\":1}}],[\"一般在网关位置\",{\"1\":{\"2077\":1}}],[\"一般构件库的文档中全面而准确地说明一下内容\",{\"1\":{\"2028\":1}}],[\"一般以\",{\"1\":{\"2010\":1}}],[\"一般用在人工智能领域和dss\",{\"1\":{\"1992\":1}}],[\"一般用来创建同一类对象\",{\"1\":{\"1747\":1}}],[\"一般适用于比较简单的小型项目\",{\"1\":{\"1956\":1}}],[\"一般原则wbs的树形结构不超过6层\",{\"1\":{\"1954\":1}}],[\"一般的访问流程是客户端直接向目标服务器发送请求并获取内容\",{\"1\":{\"1794\":1}}],[\"一般的用户也都可以使用\",{\"1\":{\"913\":1}}],[\"一般不容易扩展\",{\"1\":{\"1770\":1}}],[\"一般来说\",{\"1\":{\"1723\":1,\"2461\":1}}],[\"一般来说不少于\",{\"1\":{\"1670\":1}}],[\"一般来说不会小于\",{\"1\":{\"1669\":1}}],[\"一般来讲\",{\"1\":{\"201\":1}}],[\"一般存放在\",{\"1\":{\"1584\":1}}],[\"一般是每隔一定时间\",{\"1\":{\"1959\":1}}],[\"一般是\",{\"1\":{\"1153\":1}}],[\"一般是由后端来开启的\",{\"1\":{\"860\":1}}],[\"一般模式切换到指令行模式的可用的按钮说明\",{\"0\":{\"1066\":1}}],[\"一般模式切换到编辑模式的可用的按钮说明\",{\"0\":{\"1064\":1}}],[\"一般模式可用的光标移动\",{\"0\":{\"1060\":1}}],[\"一般参数有简化和完整两种写法\",{\"1\":{\"916\":1}}],[\"一般我们认为\",{\"1\":{\"595\":1}}],[\"一般情况下备用路径仅仅在主路径失效时投入使用\",{\"1\":{\"2212\":1}}],[\"一般情况下\",{\"1\":{\"566\":1}}],[\"一般情况下还是使用\",{\"1\":{\"207\":1}}],[\"一般通过回调函数处理这个调用之后拿到结果\",{\"1\":{\"555\":1}}],[\"一般为\",{\"1\":{\"206\":1}}],[\"一般需要固定高度\",{\"1\":{\"205\":1}}],[\"一般都比移动端浏览器可视区域大很多\",{\"1\":{\"201\":1}}],[\"一个常见的例子是模拟一个灯泡发出的光\",{\"1\":{\"2876\":1}}],[\"一个canvas\",{\"1\":{\"2797\":1}}],[\"一个包含当前渲染环境\",{\"1\":{\"2795\":1}}],[\"一个供渲染器绘制其输出的canvas\",{\"1\":{\"2788\":1}}],[\"一个有如下属性的对象\",{\"1\":{\"2751\":1}}],[\"一个顶点一个值\",{\"1\":{\"2744\":1}}],[\"一个以简单着色\",{\"1\":{\"2629\":1}}],[\"一个典型的用例是覆盖纹理的默认加载器\",{\"1\":{\"2473\":1}}],[\"一个扩展了curve的抽象基类\",{\"1\":{\"2415\":1}}],[\"一个报文\",{\"1\":{\"2201\":1}}],[\"一个主体最多只能访问一个公司数据集\",{\"1\":{\"2119\":1}}],[\"一个主体一旦访问过一个客体\",{\"1\":{\"2119\":1}}],[\"一个一定不存在的数据会被这个bitmap拦截掉\",{\"1\":{\"2072\":1}}],[\"一个模型通为多个视图提供数据\",{\"1\":{\"2031\":1}}],[\"一个模块里的变量\",{\"1\":{\"1354\":1}}],[\"一个原子构件是一个模块和一组资源\",{\"1\":{\"2020\":1}}],[\"一个用于构建产品的好的核心资源库\",{\"1\":{\"2016\":1}}],[\"一个连接件可以和任意数目和其他构件和连接件连接\",{\"1\":{\"1995\":1}}],[\"一个构件触发一个事件时\",{\"1\":{\"1987\":1}}],[\"一个软件的可靠性越高\",{\"1\":{\"1948\":1}}],[\"一个类存在两个或多个独立变化的维度\",{\"1\":{\"1820\":1}}],[\"一个类应该只关心内部逻辑\",{\"1\":{\"1770\":1}}],[\"一个工厂类负责所有产品的实例化\",{\"1\":{\"1752\":1}}],[\"一个工作进程下的最大连接\",{\"1\":{\"1153\":1}}],[\"一个简单的例子\",{\"1\":{\"1747\":1}}],[\"一个带有所有接收者id\",{\"1\":{\"1735\":1}}],[\"一个是备用路径\",{\"1\":{\"2212\":1}}],[\"一个是处于闲置状态的空间我们称之为\",{\"1\":{\"1648\":1}}],[\"一个是处于使用状态的空间我们暂且称之为\",{\"1\":{\"1648\":1}}],[\"一个是回调函数\",{\"1\":{\"903\":1}}],[\"一个两个还好\",{\"1\":{\"1644\":1}}],[\"一个新的后缀表达式操作符\",{\"1\":{\"1447\":1}}],[\"一个新的对象对原始对象的属性值进行精确地拷贝\",{\"1\":{\"753\":1}}],[\"一个接口中只能定义一个任意属性\",{\"1\":{\"1340\":1}}],[\"一个接一个地放置\",{\"1\":{\"149\":1}}],[\"一个经常被提到的问题是性能优化\",{\"1\":{\"1224\":1}}],[\"一个需要频繁触发的函数\",{\"1\":{\"830\":1}}],[\"一个操作数\",{\"1\":{\"775\":1}}],[\"一个嵌套了两层的数组\",{\"1\":{\"739\":1}}],[\"一个具有可枚举属性并且可以迭代的对象\",{\"1\":{\"719\":1,\"874\":1}}],[\"一个比较函数的形式可以如下\",{\"1\":{\"698\":1}}],[\"一个很经典的\",{\"1\":{\"681\":1}}],[\"一个超出整数范围的数字\",{\"1\":{\"642\":1}}],[\"一个线程也可以拥有多个协程\",{\"1\":{\"589\":1}}],[\"一个线程上可以存在多个协程\",{\"1\":{\"589\":1}}],[\"一个字符串转换为一个整数\",{\"1\":{\"663\":1}}],[\"一个字符串值\",{\"1\":{\"535\":1}}],[\"一个字节等于\",{\"1\":{\"402\":1}}],[\"一个非负的整数\",{\"1\":{\"530\":2}}],[\"一个在全局执行上下文中\",{\"1\":{\"505\":1}}],[\"一个\",{\"1\":{\"465\":1,\"855\":1,\"1153\":1}}],[\"一个对象应当对其他对象有尽可能少的了解\",{\"1\":{\"1937\":1}}],[\"一个对象\",{\"1\":{\"464\":1,\"2683\":1,\"2800\":1}}],[\"一个函数即可\",{\"1\":{\"1268\":1}}],[\"一个函数和一个依赖项数组\",{\"1\":{\"1265\":1}}],[\"一个函数和对其周围状态的引用捆绑在一起\",{\"1\":{\"900\":1}}],[\"一个函数执行一次后\",{\"1\":{\"827\":1}}],[\"一个函数\",{\"1\":{\"464\":1}}],[\"一个已经存在的\",{\"1\":{\"409\":1}}],[\"一个上传的文件就对应一个\",{\"1\":{\"391\":1}}],[\"一个程序中只有一个全局执行上下文\",{\"1\":{\"350\":1}}],[\"一个数值参数\",{\"1\":{\"311\":1,\"720\":1}}],[\"一个事件发生后\",{\"1\":{\"234\":1}}],[\"一个浮动的内联元素\",{\"1\":{\"178\":1}}],[\"一\",{\"0\":{\"2\":1,\"45\":1,\"245\":1,\"425\":1,\"555\":1,\"601\":1,\"673\":1,\"836\":1,\"871\":1,\"1476\":1,\"1484\":1,\"1491\":1,\"1498\":1,\"1525\":1,\"1533\":1,\"1540\":1,\"1548\":1,\"1557\":1,\"1569\":1,\"1576\":1,\"1677\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map

import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,b as n}from"./app-yfkt0gmh.js";const l="/img/softExamination/118.jpg",o="/img/softExamination/119.jpg",r="/img/softExamination/120.jpg",s="/img/softExamination/121.jpg",p="/img/softExamination/122.jpg",g="/img/softExamination/123.jpg",c="/img/softExamination/124.jpg",h={};function m(d,i){return a(),e("div",null,i[0]||(i[0]=[n('<h2 id="可靠性相关概念" tabindex="-1"><a class="header-anchor" href="#可靠性相关概念"><span>可靠性相关概念</span></a></h2><ul><li>可靠性是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力</li><li>可用性是系统能够正常运行的事件比例</li></ul><p>软件可靠性 ≠ 硬件可靠性</p><ul><li>复杂性：软件复杂性比硬件高，大部分失效来自于软件失效</li><li>物理退化：硬件失效主要是物理退化所致，软件不存在物理退化</li><li>唯一性：软件是唯一的，每个COPY版本都一样，而两个硬件不可能完全一样</li><li>版本更新周期：硬件较慢，软件较快</li></ul><h2 id="可靠性指标" tabindex="-1"><a class="header-anchor" href="#可靠性指标"><span>可靠性指标</span></a></h2><figure><img src="'+l+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="串联系统与并联系统" tabindex="-1"><a class="header-anchor" href="#串联系统与并联系统"><span>串联系统与并联系统</span></a></h2><p><img src="'+o+'" alt=" " loading="lazy"><img src="'+r+'" alt=" " loading="lazy"></p><h2 id="可靠性设计" tabindex="-1"><a class="header-anchor" href="#可靠性设计"><span>可靠性设计</span></a></h2><ol><li>软件的开发方法和开发环境</li><li>运行环境</li><li>软件规模</li><li>软件内部结构</li><li>软件的可靠性投入</li></ol><figure><img src="'+s+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="n版本程序设计" tabindex="-1"><a class="header-anchor" href="#n版本程序设计"><span>N版本程序设计</span></a></h3><figure><img src="'+p+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="恢复块方法" tabindex="-1"><a class="header-anchor" href="#恢复块方法"><span>恢复块方法</span></a></h3><figure><img src="'+g+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="防卫式程序设计" tabindex="-1"><a class="header-anchor" href="#防卫式程序设计"><span>防卫式程序设计</span></a></h3><ul><li>对于程序中存在的错误和不一致性，通过在程序中包含错误检查代码和错误恢复代码，使得一旦错误发生，程序能撤销错误状态，恢复到一个已知的正确状态中去</li><li>实现策略：错误检测、破坏估计、错误恢复</li></ul><h3 id="双机容错" tabindex="-1"><a class="header-anchor" href="#双机容错"><span>双机容错</span></a></h3><figure><img src="'+c+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure>',19)]))}const E=t(h,[["render",m],["__file","05.系统可靠性分析与设计.html.vue"]]),x=JSON.parse('{"path":"/study/%E8%BD%AF%E8%80%83/05.%E7%B3%BB%E7%BB%9F%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1.html","title":"系统可靠性分析与设计","lang":"zh-CN","frontmatter":{"title":"系统可靠性分析与设计","icon":"sheji","order":5,"date":"2024-07-08T00:00:00.000Z","category":["软考"],"tag":["软考"],"description":"可靠性相关概念 可靠性是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力 可用性是系统能够正常运行的事件比例 软件可靠性 ≠ 硬件可靠性 复杂性：软件复杂性比硬件高，大部分失效来自于软件失效 物理退化：硬件失效主要是物理退化所致，软件不存在物理退化 唯一性：软件是唯一的，每个COPY版本都一样，而两个硬件不可能完全...","head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/study/%E8%BD%AF%E8%80%83/05.%E7%B3%BB%E7%BB%9F%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1.html"}],["meta",{"property":"og:title","content":"系统可靠性分析与设计"}],["meta",{"property":"og:description","content":"可靠性相关概念 可靠性是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力 可用性是系统能够正常运行的事件比例 软件可靠性 ≠ 硬件可靠性 复杂性：软件复杂性比硬件高，大部分失效来自于软件失效 物理退化：硬件失效主要是物理退化所致，软件不存在物理退化 唯一性：软件是唯一的，每个COPY版本都一样，而两个硬件不可能完全..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://luotianxu1.github.io/img/softExamination/118.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"软考"}],["meta",{"property":"article:published_time","content":"2024-07-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"系统可靠性分析与设计\\",\\"image\\":[\\"https://luotianxu1.github.io/img/softExamination/118.jpg\\",\\"https://luotianxu1.github.io/img/softExamination/119.jpg\\",\\"https://luotianxu1.github.io/img/softExamination/120.jpg\\",\\"https://luotianxu1.github.io/img/softExamination/121.jpg\\",\\"https://luotianxu1.github.io/img/softExamination/122.jpg\\",\\"https://luotianxu1.github.io/img/softExamination/123.jpg\\",\\"https://luotianxu1.github.io/img/softExamination/124.jpg\\"],\\"datePublished\\":\\"2024-07-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"可靠性相关概念","slug":"可靠性相关概念","link":"#可靠性相关概念","children":[]},{"level":2,"title":"可靠性指标","slug":"可靠性指标","link":"#可靠性指标","children":[]},{"level":2,"title":"串联系统与并联系统","slug":"串联系统与并联系统","link":"#串联系统与并联系统","children":[]},{"level":2,"title":"可靠性设计","slug":"可靠性设计","link":"#可靠性设计","children":[{"level":3,"title":"N版本程序设计","slug":"n版本程序设计","link":"#n版本程序设计","children":[]},{"level":3,"title":"恢复块方法","slug":"恢复块方法","link":"#恢复块方法","children":[]},{"level":3,"title":"防卫式程序设计","slug":"防卫式程序设计","link":"#防卫式程序设计","children":[]},{"level":3,"title":"双机容错","slug":"双机容错","link":"#双机容错","children":[]}]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":1.23,"words":369},"filePathRelative":"study/软考/05.系统可靠性分析与设计.md","localizedDate":"2024年7月8日","excerpt":"<h2>可靠性相关概念</h2>\\n<ul>\\n<li>可靠性是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力</li>\\n<li>可用性是系统能够正常运行的事件比例</li>\\n</ul>\\n<p>软件可靠性 ≠ 硬件可靠性</p>\\n<ul>\\n<li>复杂性：软件复杂性比硬件高，大部分失效来自于软件失效</li>\\n<li>物理退化：硬件失效主要是物理退化所致，软件不存在物理退化</li>\\n<li>唯一性：软件是唯一的，每个COPY版本都一样，而两个硬件不可能完全一样</li>\\n<li>版本更新周期：硬件较慢，软件较快</li>\\n</ul>\\n<h2>可靠性指标</h2>","autoDesc":true}');export{E as comp,x as data};

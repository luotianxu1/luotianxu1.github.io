import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o,c,a as n,d as l,b as p}from"./app-BZCNBBDt.js";const r={};function s(d,i){const e=a("IFrame");return o(),c("div",null,[i[0]||(i[0]=n("h2",{id:"animationmixer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#animationmixer"},[n("span",null,"AnimationMixer")])],-1)),i[1]||(i[1]=n("p",null,"动画混合器是用于场景中特定对象的动画的播放器。当场景中的多个对象独立动画时，每个对象都可以使用同一个动画混合器。",-1)),l(e,{url:"https://luotainxu-demo.netlify.app/#/threejs/animation"}),i[2]||(i[2]=p('<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2><h3 id="animationmixer-rootobject-object3d" tabindex="-1"><a class="header-anchor" href="#animationmixer-rootobject-object3d"><span>AnimationMixer( rootObject : Object3D )</span></a></h3><ul><li>rootObject - 混合器播放的动画所属的对象</li></ul><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><h3 id="time-number" tabindex="-1"><a class="header-anchor" href="#time-number"><span>.time : Number</span></a></h3><p>全局的混合器时间(单位秒; 混合器创建的时刻记作0时刻)</p><h3 id="timescale-number" tabindex="-1"><a class="header-anchor" href="#timescale-number"><span>.timeScale : Number</span></a></h3><p>全局时间(mixer time)的比例因子</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h2 id="clipaction-clip-animationclip-optionalroot-object3d-animationaction" tabindex="-1"><a class="header-anchor" href="#clipaction-clip-animationclip-optionalroot-object3d-animationaction"><span>.clipAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction</span></a></h2><p>返回所传入的剪辑参数的AnimationAction, 根对象参数可选，默认值为混合器的默认根对象。第一个参数可以是动画剪辑(AnimationClip)对象或者动画剪辑的名称。</p><p>如果不存在符合传入的剪辑和根对象这两个参数的动作, 该方法将会创建一个。传入相同的参数多次调用将会返回同一个剪辑实例。</p><h2 id="existingaction-clip-animationclip-optionalroot-object3d-animationaction" tabindex="-1"><a class="header-anchor" href="#existingaction-clip-animationclip-optionalroot-object3d-animationaction"><span>.existingAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction</span></a></h2><p>返回传入剪辑的已有AnimationAction, 根对象参数可选，默认值为混合器的默认根对象。</p><p>第一个参数可以是动画剪辑(AnimationClip)对象或者动画剪辑的名称。</p><h2 id="getroot-object3d" tabindex="-1"><a class="header-anchor" href="#getroot-object3d"><span>.getRoot () : Object3D</span></a></h2><p>返回混合器的根对象</p><h2 id="stopallaction-this" tabindex="-1"><a class="header-anchor" href="#stopallaction-this"><span>.stopAllAction () : this</span></a></h2><p>停用混合器上所有预定的动作</p><h2 id="update-deltatimeinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#update-deltatimeinseconds-number-this"><span>.update (deltaTimeInSeconds : Number) : this</span></a></h2><p>推进混合器时间并更新动画</p><p>通常在渲染循环中完成, 传入按照混合器的时间比例(timeScale)缩放过的clock.getDelta</p><h2 id="settime-timeinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#settime-timeinseconds-number-this"><span>.setTime (timeInSeconds : Number) : this</span></a></h2><p>设置全局混合器到一个给定的时间，并相应地更新动画。</p><p>当你需要在一个动画里跳转到一个精确的时间，该函数将是十分有用的。输入的参数将会被混合器的timeScale进行缩放。</p><h2 id="uncacheclip-clip-animationclip-undefined" tabindex="-1"><a class="header-anchor" href="#uncacheclip-clip-animationclip-undefined"><span>.uncacheClip (clip : AnimationClip) : undefined</span></a></h2><p>释放剪辑的所有内存资源</p><h2 id="uncacheroot-root-object3d-undefined" tabindex="-1"><a class="header-anchor" href="#uncacheroot-root-object3d-undefined"><span>.uncacheRoot (root : Object3D) : undefined</span></a></h2><p>释放根对象的所有内存资源</p><h2 id="uncacheaction-clip-animationclip-optionalroot-object3d-undefined" tabindex="-1"><a class="header-anchor" href="#uncacheaction-clip-animationclip-optionalroot-object3d-undefined"><span>.uncacheAction (clip : AnimationClip, optionalRoot : Object3D) : undefined</span></a></h2><p>释放动作的所有内存资源</p>',31))])}const u=t(r,[["render",s],["__file","AnimationMixer.html.vue"]]),b=JSON.parse('{"path":"/threejs/%E5%8A%A8%E7%94%BB/AnimationMixer.html","title":"AnimationMixer","lang":"zh-CN","frontmatter":{"title":"AnimationMixer","icon":"markdown","order":1,"date":"2023-03-20T00:00:00.000Z","category":["threejs"],"tag":["动画"],"description":"AnimationMixer 动画混合器是用于场景中特定对象的动画的播放器。当场景中的多个对象独立动画时，每个对象都可以使用同一个动画混合器。","head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/threejs/%E5%8A%A8%E7%94%BB/AnimationMixer.html"}],["meta",{"property":"og:title","content":"AnimationMixer"}],["meta",{"property":"og:description","content":"AnimationMixer 动画混合器是用于场景中特定对象的动画的播放器。当场景中的多个对象独立动画时，每个对象都可以使用同一个动画混合器。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"动画"}],["meta",{"property":"article:published_time","content":"2023-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AnimationMixer\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"AnimationMixer","slug":"animationmixer","link":"#animationmixer","children":[]},{"level":2,"title":"构造器","slug":"构造器","link":"#构造器","children":[{"level":3,"title":"AnimationMixer( rootObject : Object3D )","slug":"animationmixer-rootobject-object3d","link":"#animationmixer-rootobject-object3d","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":".time : Number","slug":"time-number","link":"#time-number","children":[]},{"level":3,"title":".timeScale : Number","slug":"timescale-number","link":"#timescale-number","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":2,"title":".clipAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction","slug":"clipaction-clip-animationclip-optionalroot-object3d-animationaction","link":"#clipaction-clip-animationclip-optionalroot-object3d-animationaction","children":[]},{"level":2,"title":".existingAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction","slug":"existingaction-clip-animationclip-optionalroot-object3d-animationaction","link":"#existingaction-clip-animationclip-optionalroot-object3d-animationaction","children":[]},{"level":2,"title":".getRoot () : Object3D","slug":"getroot-object3d","link":"#getroot-object3d","children":[]},{"level":2,"title":".stopAllAction () : this","slug":"stopallaction-this","link":"#stopallaction-this","children":[]},{"level":2,"title":".update (deltaTimeInSeconds : Number) : this","slug":"update-deltatimeinseconds-number-this","link":"#update-deltatimeinseconds-number-this","children":[]},{"level":2,"title":".setTime (timeInSeconds : Number) : this","slug":"settime-timeinseconds-number-this","link":"#settime-timeinseconds-number-this","children":[]},{"level":2,"title":".uncacheClip (clip : AnimationClip) : undefined","slug":"uncacheclip-clip-animationclip-undefined","link":"#uncacheclip-clip-animationclip-undefined","children":[]},{"level":2,"title":".uncacheRoot (root : Object3D) : undefined","slug":"uncacheroot-root-object3d-undefined","link":"#uncacheroot-root-object3d-undefined","children":[]},{"level":2,"title":".uncacheAction (clip : AnimationClip, optionalRoot : Object3D) : undefined","slug":"uncacheaction-clip-animationclip-optionalroot-object3d-undefined","link":"#uncacheaction-clip-animationclip-optionalroot-object3d-undefined","children":[]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":1.69,"words":508},"filePathRelative":"threejs/动画/AnimationMixer.md","localizedDate":"2023年3月20日","excerpt":"<h2>AnimationMixer</h2>\\n<p>动画混合器是用于场景中特定对象的动画的播放器。当场景中的多个对象独立动画时，每个对象都可以使用同一个动画混合器。</p>\\n<iframe url=\\"https://luotainxu-demo.netlify.app/#/threejs/animation\\">\\n<h2 id=\\"构造器\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#构造器\\"><span>构造器</span></a></h2>\\n<h3 id=\\"animationmixer-rootobject-object3d\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#animationmixer-rootobject-object3d\\"><span>AnimationMixer( rootObject : Object3D )</span></a></h3>\\n<ul>\\n<li>rootObject - 混合器播放的动画所属的对象</li>\\n</ul>\\n<h2 id=\\"属性\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#属性\\"><span>属性</span></a></h2>\\n<h3 id=\\"time-number\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#time-number\\"><span>.time : Number</span></a></h3>\\n<p>全局的混合器时间(单位秒; 混合器创建的时刻记作0时刻)</p>\\n<h3 id=\\"timescale-number\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#timescale-number\\"><span>.timeScale : Number</span></a></h3>\\n<p>全局时间(mixer time)的比例因子</p>\\n<h2 id=\\"方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#方法\\"><span>方法</span></a></h2>\\n<h2 id=\\"clipaction-clip-animationclip-optionalroot-object3d-animationaction\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#clipaction-clip-animationclip-optionalroot-object3d-animationaction\\"><span>.clipAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction</span></a></h2>\\n<p>返回所传入的剪辑参数的AnimationAction, 根对象参数可选，默认值为混合器的默认根对象。第一个参数可以是动画剪辑(AnimationClip)对象或者动画剪辑的名称。</p>\\n<p>如果不存在符合传入的剪辑和根对象这两个参数的动作, 该方法将会创建一个。传入相同的参数多次调用将会返回同一个剪辑实例。</p>\\n<h2 id=\\"existingaction-clip-animationclip-optionalroot-object3d-animationaction\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#existingaction-clip-animationclip-optionalroot-object3d-animationaction\\"><span>.existingAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction</span></a></h2>\\n<p>返回传入剪辑的已有AnimationAction, 根对象参数可选，默认值为混合器的默认根对象。</p>\\n<p>第一个参数可以是动画剪辑(AnimationClip)对象或者动画剪辑的名称。</p>\\n<h2 id=\\"getroot-object3d\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#getroot-object3d\\"><span>.getRoot () : Object3D</span></a></h2>\\n<p>返回混合器的根对象</p>\\n<h2 id=\\"stopallaction-this\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#stopallaction-this\\"><span>.stopAllAction () : this</span></a></h2>\\n<p>停用混合器上所有预定的动作</p>\\n<h2 id=\\"update-deltatimeinseconds-number-this\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#update-deltatimeinseconds-number-this\\"><span>.update (deltaTimeInSeconds : Number) : this</span></a></h2>\\n<p>推进混合器时间并更新动画</p>\\n<p>通常在渲染循环中完成, 传入按照混合器的时间比例(timeScale)缩放过的clock.getDelta</p>\\n<h2 id=\\"settime-timeinseconds-number-this\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#settime-timeinseconds-number-this\\"><span>.setTime (timeInSeconds : Number) : this</span></a></h2>\\n<p>设置全局混合器到一个给定的时间，并相应地更新动画。</p>\\n<p>当你需要在一个动画里跳转到一个精确的时间，该函数将是十分有用的。输入的参数将会被混合器的timeScale进行缩放。</p>\\n<h2 id=\\"uncacheclip-clip-animationclip-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#uncacheclip-clip-animationclip-undefined\\"><span>.uncacheClip (clip : AnimationClip) : undefined</span></a></h2>\\n<p>释放剪辑的所有内存资源</p>\\n<h2 id=\\"uncacheroot-root-object3d-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#uncacheroot-root-object3d-undefined\\"><span>.uncacheRoot (root : Object3D) : undefined</span></a></h2>\\n<p>释放根对象的所有内存资源</p>\\n<h2 id=\\"uncacheaction-clip-animationclip-optionalroot-object3d-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#uncacheaction-clip-animationclip-optionalroot-object3d-undefined\\"><span>.uncacheAction (clip : AnimationClip, optionalRoot : Object3D) : undefined</span></a></h2>\\n<p>释放动作的所有内存资源</p>\\n</iframe>","autoDesc":true}');export{u as comp,b as data};

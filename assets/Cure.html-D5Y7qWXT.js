import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as l,a as t,e as a,d as s,w as c,b as g}from"./app-BlTcOGK_.js";const p={};function h(d,e){const n=o("RouteLink");return i(),l("div",null,[e[3]||(e[3]=t("h2",{id:"curve",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#curve"},[t("span",null,"Curve")])],-1)),t("p",null,[e[1]||(e[1]=a("用于创建包含插值方法的Curve对象的抽象基类。 有关Curve的数组，请参见")),s(n,{to:"/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/CurePath.html"},{default:c(()=>e[0]||(e[0]=[a("CurePath")])),_:1}),e[2]||(e[2]=a("。"))]),e[4]||(e[4]=g('<h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2><h3 id="curve-1" tabindex="-1"><a class="header-anchor" href="#curve-1"><span>Curve()</span></a></h3><p>创建一个 Curve.</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><h3 id="arclengthdivisions-integer" tabindex="-1"><a class="header-anchor" href="#arclengthdivisions-integer"><span>.arcLengthDivisions : Integer</span></a></h3><p>确定.GetLength计算曲线的累积分段长度时的分段量。 为确保.getSpacedPoints等方法时的精度，如果曲线非常大，建议增加.arcLengthDivisions。默认值为200</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h3 id="getpoint-t-float-optionaltarget-vector-vector" tabindex="-1"><a class="header-anchor" href="#getpoint-t-float-optionaltarget-vector-vector"><span>.getPoint ( t : Float, optionalTarget : Vector ) : Vector</span></a></h3><ul><li>t - 曲线上的位置。必须在[0,1]范围内</li><li>optionalTarget — (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。</li></ul><p>返回曲线上给定位置的点。</p><h3 id="getpointat-u-float-optionaltarget-vector-vector" tabindex="-1"><a class="header-anchor" href="#getpointat-u-float-optionaltarget-vector-vector"><span>.getPointAt ( u : Float, optionalTarget : Vector ) : Vector</span></a></h3><ul><li>u - 根据弧长在曲线上的位置。必须在范围[0，1]内。</li><li>optionalTarget — (可选) 如果需要, (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。</li></ul><p>根据弧长返回曲线上给定位置的点。</p><h3 id="getpoints-divisions-integer-array" tabindex="-1"><a class="header-anchor" href="#getpoints-divisions-integer-array"><span>.getPoints ( divisions : Integer ) : Array</span></a></h3><ul><li>divisions -- 要将曲线划分为的分段数。默认是 5.</li></ul><p>使用getPoint（t）返回一组divisions+1的点</p><h3 id="getspacedpoints-divisions-integer-array" tabindex="-1"><a class="header-anchor" href="#getspacedpoints-divisions-integer-array"><span>.getSpacedPoints ( divisions : Integer ) : Array</span></a></h3><ul><li>divisions -- 要将曲线划分为的分段数。默认是 5.</li></ul><p>使用getPointAt（u）返回一个分段+1的等距点的数组。</p><h3 id="getlength-float" tabindex="-1"><a class="header-anchor" href="#getlength-float"><span>.getLength () : Float</span></a></h3><p>获取总曲线弧长。</p><h3 id="getlengths-divisions-integer-array" tabindex="-1"><a class="header-anchor" href="#getlengths-divisions-integer-array"><span>.getLengths ( divisions : Integer ) : Array</span></a></h3><p>获取累积段长度的列表。</p><h3 id="updatearclengths-undefined" tabindex="-1"><a class="header-anchor" href="#updatearclengths-undefined"><span>.updateArcLengths () : undefined</span></a></h3><p>更新累积段距离缓存。</p><h3 id="getutotmapping-u-float-distance-float-float" tabindex="-1"><a class="header-anchor" href="#getutotmapping-u-float-distance-float-float"><span>.getUtoTmapping ( u : Float, distance : Float ) : Float</span></a></h3><p>给定范围（0..1）内的u，返回范围（0..1）内的t， 然后可以用t来使用 .getPoint给出与曲线末端等距的点。</p><h3 id="gettangent-t-float-optionaltarget-vector-vector" tabindex="-1"><a class="header-anchor" href="#gettangent-t-float-optionaltarget-vector-vector"><span>.getTangent ( t : Float, optionalTarget : Vector ) : Vector</span></a></h3><ul><li>t -在曲线上的点，必须在范围 [ 0, 1 ].</li><li>optionalTarget — (可选) 如果需要, (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。</li></ul><p>返回t处的单位向量切线。如果派生曲线未实现其 切线求导，将使用相距一个小三角形的两个点来求与其实际梯度的近似值</p><h3 id="gettangentat-u-float-optionaltarget-vector-vector" tabindex="-1"><a class="header-anchor" href="#gettangentat-u-float-optionaltarget-vector-vector"><span>.getTangentAt ( u : Float, optionalTarget : Vector ) : Vector</span></a></h3><ul><li>u - 根据弧长在曲线上的位置，必须在范围[ 0, 1 ]。</li><li>optionalTarget —(可选) 如果需要, (可选) 如果需要, 结果将复制到此向量中，否则将创建一个新向量。</li></ul><p>返回一个点处的切线，该点与 .getTangent中给定的曲线的端点距离相等</p><h3 id="computefrenetframes-segments-integer-closed-boolean-object" tabindex="-1"><a class="header-anchor" href="#computefrenetframes-segments-integer-closed-boolean-object"><span>.computeFrenetFrames ( segments : Integer, closed : Boolean ) : Object</span></a></h3><p>生成Frenet帧。需要三维空间中的曲线定义。用于TubeGeometry或ExtradeGeometry等几何图形。</p><h3 id="clone-curve" tabindex="-1"><a class="header-anchor" href="#clone-curve"><span>.clone () : Curve</span></a></h3><p>创建此实例的克隆。</p><h3 id="copy-source-curve-this" tabindex="-1"><a class="header-anchor" href="#copy-source-curve-this"><span>.copy ( source : Curve ) : this</span></a></h3><p>将另一个Curve对象复制到此实例。</p><h3 id="tojson-object" tabindex="-1"><a class="header-anchor" href="#tojson-object"><span>.toJSON () : Object</span></a></h3><p>返回此实例的JSON对象表示形式。</p><h3 id="fromjson-json-object-this" tabindex="-1"><a class="header-anchor" href="#fromjson-json-object-this"><span>.fromJSON ( json : Object ) : this</span></a></h3><p>将给定的JSON数据复制到此实例。</p>',43))])}const f=r(p,[["render",h],["__file","Cure.html.vue"]]),m=JSON.parse('{"path":"/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/Cure.html","title":"Cure","lang":"zh-CN","frontmatter":{"title":"Cure","icon":"markdown","order":24,"date":"2023-03-20T00:00:00.000Z","category":["threejs"],"tag":["几何体"],"description":"Curve 用于创建包含插值方法的Curve对象的抽象基类。 有关Curve的数组，请参见。 构造函数 Curve() 创建一个 Curve. 属性 .arcLengthDivisions : Integer 确定.GetLength计算曲线的累积分段长度时的分段量。 为确保.getSpacedPoints等方法时的精度，如果曲线非常大，建议增加.ar...","head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/Cure.html"}],["meta",{"property":"og:title","content":"Cure"}],["meta",{"property":"og:description","content":"Curve 用于创建包含插值方法的Curve对象的抽象基类。 有关Curve的数组，请参见。 构造函数 Curve() 创建一个 Curve. 属性 .arcLengthDivisions : Integer 确定.GetLength计算曲线的累积分段长度时的分段量。 为确保.getSpacedPoints等方法时的精度，如果曲线非常大，建议增加.ar..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"几何体"}],["meta",{"property":"article:published_time","content":"2023-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cure\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"Curve","slug":"curve","link":"#curve","children":[]},{"level":2,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[{"level":3,"title":"Curve()","slug":"curve-1","link":"#curve-1","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":".arcLengthDivisions : Integer","slug":"arclengthdivisions-integer","link":"#arclengthdivisions-integer","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":".getPoint ( t : Float, optionalTarget : Vector ) : Vector","slug":"getpoint-t-float-optionaltarget-vector-vector","link":"#getpoint-t-float-optionaltarget-vector-vector","children":[]},{"level":3,"title":".getPointAt ( u : Float, optionalTarget : Vector ) : Vector","slug":"getpointat-u-float-optionaltarget-vector-vector","link":"#getpointat-u-float-optionaltarget-vector-vector","children":[]},{"level":3,"title":".getPoints ( divisions : Integer ) : Array","slug":"getpoints-divisions-integer-array","link":"#getpoints-divisions-integer-array","children":[]},{"level":3,"title":".getSpacedPoints ( divisions : Integer ) : Array","slug":"getspacedpoints-divisions-integer-array","link":"#getspacedpoints-divisions-integer-array","children":[]},{"level":3,"title":".getLength () : Float","slug":"getlength-float","link":"#getlength-float","children":[]},{"level":3,"title":".getLengths ( divisions : Integer ) : Array","slug":"getlengths-divisions-integer-array","link":"#getlengths-divisions-integer-array","children":[]},{"level":3,"title":".updateArcLengths () : undefined","slug":"updatearclengths-undefined","link":"#updatearclengths-undefined","children":[]},{"level":3,"title":".getUtoTmapping ( u : Float, distance : Float ) : Float","slug":"getutotmapping-u-float-distance-float-float","link":"#getutotmapping-u-float-distance-float-float","children":[]},{"level":3,"title":".getTangent ( t : Float, optionalTarget : Vector ) : Vector","slug":"gettangent-t-float-optionaltarget-vector-vector","link":"#gettangent-t-float-optionaltarget-vector-vector","children":[]},{"level":3,"title":".getTangentAt ( u : Float, optionalTarget : Vector ) : Vector","slug":"gettangentat-u-float-optionaltarget-vector-vector","link":"#gettangentat-u-float-optionaltarget-vector-vector","children":[]},{"level":3,"title":".computeFrenetFrames ( segments : Integer, closed : Boolean ) : Object","slug":"computefrenetframes-segments-integer-closed-boolean-object","link":"#computefrenetframes-segments-integer-closed-boolean-object","children":[]},{"level":3,"title":".clone () : Curve","slug":"clone-curve","link":"#clone-curve","children":[]},{"level":3,"title":".copy ( source : Curve ) : this","slug":"copy-source-curve-this","link":"#copy-source-curve-this","children":[]},{"level":3,"title":".toJSON () : Object","slug":"tojson-object","link":"#tojson-object","children":[]},{"level":3,"title":".fromJSON ( json : Object ) : this","slug":"fromjson-json-object-this","link":"#fromjson-json-object-this","children":[]}]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":2.25,"words":675},"filePathRelative":"threejs/几何体/Cure.md","localizedDate":"2023年3月20日","excerpt":"<h2>Curve</h2>\\n<p>用于创建包含插值方法的Curve对象的抽象基类。 有关Curve的数组，请参见<a href=\\"/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/CurePath.html\\" target=\\"_blank\\">CurePath</a>。</p>\\n<h2>构造函数</h2>\\n<h3>Curve()</h3>\\n<p>创建一个 Curve.</p>\\n<h2>属性</h2>\\n<h3>.arcLengthDivisions : Integer</h3>\\n<p>确定.GetLength计算曲线的累积分段长度时的分段量。 为确保.getSpacedPoints等方法时的精度，如果曲线非常大，建议增加.arcLengthDivisions。默认值为200</p>","autoDesc":true}');export{f as comp,m as data};

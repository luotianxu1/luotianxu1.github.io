import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as r,c as t,b as i}from"./app-C2aR6FVm.js";const o={};function n(l,e){return r(),t("div",null,e[0]||(e[0]=[i('<h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2><h3 id="camera" tabindex="-1"><a class="header-anchor" href="#camera"><span>Camera()</span></a></h3><p>创建一个新的Camera（摄像机）。注意：这个类并不是被直接调用的；你所想要的或许是一个 PerspectiveCamera（透视摄像机）或者 OrthographicCamera（正交摄像机）。</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><p>共有属性请参见其基类Object3D</p><h3 id="iscamera-boolean" tabindex="-1"><a class="header-anchor" href="#iscamera-boolean"><span>.isCamera : Boolean</span></a></h3><p>Read-only标志，用于检查给定对象是否为Camera类型。</p><h3 id="layers-layers" tabindex="-1"><a class="header-anchor" href="#layers-layers"><span>.layers : Layers</span></a></h3><p>摄像机是一个layers的成员. 这是一个从Object3D继承而来的属性。</p><p>当摄像机的视点被渲染的时候，物体必须和当前被看到的摄像机共享至少一个层。</p><h3 id="matrixworldinverse-matrix4" tabindex="-1"><a class="header-anchor" href="#matrixworldinverse-matrix4"><span>.matrixWorldInverse : Matrix4</span></a></h3><p>这是matrixWorld矩阵的逆矩阵。 MatrixWorld包含了相机的世界变换矩阵。</p><h3 id="projectionmatrix-matrix4" tabindex="-1"><a class="header-anchor" href="#projectionmatrix-matrix4"><span>.projectionMatrix : Matrix4</span></a></h3><p>这是投影变换矩阵。</p><h3 id="projectionmatrixinverse-matrix4" tabindex="-1"><a class="header-anchor" href="#projectionmatrixinverse-matrix4"><span>.projectionMatrixInverse : Matrix4</span></a></h3><p>这是投影变换矩阵的逆矩阵。</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><p>共有方法请参见其基类Object3D。</p><h3 id="clone-camera" tabindex="-1"><a class="header-anchor" href="#clone-camera"><span>.clone ( ) : Camera</span></a></h3><p>返回一个具有和当前相机的属性一样的新的相机。</p><h3 id="copy-source-camera-recursive-boolean-this" tabindex="-1"><a class="header-anchor" href="#copy-source-camera-recursive-boolean-this"><span>.copy ( source : Camera, recursive : Boolean ) : this</span></a></h3><p>将源摄像机的属性复制到新摄像机中。</p><h3 id="getworlddirection-target-vector3-vector3" tabindex="-1"><a class="header-anchor" href="#getworlddirection-target-vector3-vector3"><span>.getWorldDirection ( target : Vector3 ) : Vector3</span></a></h3><p>target — 调用该函数的结果将复制给该Vector3对象。</p><p>返回一个能够表示当前摄像机所正视的世界空间方向的Vector3对象。 （注意：摄像机俯视时，其Z轴坐标为负。）</p>',25)]))}const p=a(o,[["render",n],["__file","摄像机.html.vue"]]),h=JSON.parse('{"path":"/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%91%84%E5%83%8F%E6%9C%BA.html","title":"Camera（摄像机）","lang":"zh-CN","frontmatter":{"title":"Camera（摄像机）","icon":"markdown","order":1,"date":"2023-03-20T00:00:00.000Z","category":["threejs"],"tag":["摄像机"],"description":"构造函数 Camera() 创建一个新的Camera（摄像机）。注意：这个类并不是被直接调用的；你所想要的或许是一个 PerspectiveCamera（透视摄像机）或者 OrthographicCamera（正交摄像机）。 属性 共有属性请参见其基类Object3D .isCamera : Boolean Read-only标志，用于检查给定对象是否...","head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%91%84%E5%83%8F%E6%9C%BA.html"}],["meta",{"property":"og:title","content":"Camera（摄像机）"}],["meta",{"property":"og:description","content":"构造函数 Camera() 创建一个新的Camera（摄像机）。注意：这个类并不是被直接调用的；你所想要的或许是一个 PerspectiveCamera（透视摄像机）或者 OrthographicCamera（正交摄像机）。 属性 共有属性请参见其基类Object3D .isCamera : Boolean Read-only标志，用于检查给定对象是否..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"摄像机"}],["meta",{"property":"article:published_time","content":"2023-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Camera（摄像机）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[{"level":3,"title":"Camera()","slug":"camera","link":"#camera","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":".isCamera : Boolean","slug":"iscamera-boolean","link":"#iscamera-boolean","children":[]},{"level":3,"title":".layers : Layers","slug":"layers-layers","link":"#layers-layers","children":[]},{"level":3,"title":".matrixWorldInverse : Matrix4","slug":"matrixworldinverse-matrix4","link":"#matrixworldinverse-matrix4","children":[]},{"level":3,"title":".projectionMatrix : Matrix4","slug":"projectionmatrix-matrix4","link":"#projectionmatrix-matrix4","children":[]},{"level":3,"title":".projectionMatrixInverse : Matrix4","slug":"projectionmatrixinverse-matrix4","link":"#projectionmatrixinverse-matrix4","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":".clone ( ) : Camera","slug":"clone-camera","link":"#clone-camera","children":[]},{"level":3,"title":".copy ( source : Camera, recursive : Boolean ) : this","slug":"copy-source-camera-recursive-boolean-this","link":"#copy-source-camera-recursive-boolean-this","children":[]},{"level":3,"title":".getWorldDirection ( target : Vector3 ) : Vector3","slug":"getworlddirection-target-vector3-vector3","link":"#getworlddirection-target-vector3-vector3","children":[]}]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":1.11,"words":334},"filePathRelative":"threejs/摄像机/摄像机.md","localizedDate":"2023年3月20日","excerpt":"<h2>构造函数</h2>\\n<h3>Camera()</h3>\\n<p>创建一个新的Camera（摄像机）。注意：这个类并不是被直接调用的；你所想要的或许是一个 PerspectiveCamera（透视摄像机）或者 OrthographicCamera（正交摄像机）。</p>\\n<h2>属性</h2>\\n<p>共有属性请参见其基类Object3D</p>\\n<h3>.isCamera : Boolean</h3>\\n<p>Read-only标志，用于检查给定对象是否为Camera类型。</p>\\n<h3>.layers : Layers</h3>\\n<p>摄像机是一个layers的成员. 这是一个从Object3D继承而来的属性。</p>","autoDesc":true}');export{p as comp,h as data};

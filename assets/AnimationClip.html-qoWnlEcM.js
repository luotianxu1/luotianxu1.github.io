import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as r,c as o,a as e,d as s,b as p}from"./app-BZCNBBDt.js";const l={};function c(h,a){const n=t("IFrame");return r(),o("div",null,[a[0]||(a[0]=e("h2",{id:"animationclip",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#animationclip"},[e("span",null,"AnimationClip")])],-1)),a[1]||(a[1]=e("p",null,"动画剪辑（AnimationClip）是一个可重用的关键帧轨道集，它代表动画。",-1)),s(n,{url:"https://luotainxu-demo.netlify.app/#/threejs/animation"}),a[2]||(a[2]=p('<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2><p>AnimationClip( name : String, duration : Number, tracks : Array )</p><ul><li>name - 此剪辑的名称</li><li>duration - 持续时间 (单位秒). 如果传入负数, 持续时间将会从传入的数组中计算得到。</li><li>tracks - 一个由关键帧轨道（KeyframeTracks）组成的数组。</li></ul><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><h3 id="duration-number" tabindex="-1"><a class="header-anchor" href="#duration-number"><span>.duration : Number</span></a></h3><p>剪辑的持续时间 (单位秒). 可以通过resetDuration从轨道数组（tracks）计算出来。</p><h3 id="name-string" tabindex="-1"><a class="header-anchor" href="#name-string"><span>.name : String</span></a></h3><p>剪辑的名称. 调用findByName根据名称搜索某个剪辑</p><h3 id="tracks-array" tabindex="-1"><a class="header-anchor" href="#tracks-array"><span>.tracks : Array</span></a></h3><p>一个包含该剪辑中有动画的所有属性的关键帧轨道（KeyframeTrack）的数组。</p><h3 id="uuid-string" tabindex="-1"><a class="header-anchor" href="#uuid-string"><span>.uuid : String</span></a></h3><p>剪辑实例的UUID，自动分配且不可编辑。</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h3 id="clone-animationclip" tabindex="-1"><a class="header-anchor" href="#clone-animationclip"><span>.clone () : AnimationClip</span></a></h3><h3 id="optimize-this" tabindex="-1"><a class="header-anchor" href="#optimize-this"><span>.optimize () : this</span></a></h3><p>通过移除等效的顺序键（在变形目标序列中很常见）来优化每一个轨道</p><h3 id="resetduration-this" tabindex="-1"><a class="header-anchor" href="#resetduration-this"><span>.resetDuration () : this</span></a></h3><p>将剪辑的持续时间（duration）设为最长的关键帧轨道(KeyframeTrack)的持续时间。</p><h3 id="tojson-object" tabindex="-1"><a class="header-anchor" href="#tojson-object"><span>.toJSON () : Object</span></a></h3><p>Returns a JSON object representing the serialized animation clip.</p><h3 id="trim-this" tabindex="-1"><a class="header-anchor" href="#trim-this"><span>.trim () : this</span></a></h3><p>修剪所有的轨道到该剪辑的持续时间。</p><h3 id="validate-boolean" tabindex="-1"><a class="header-anchor" href="#validate-boolean"><span>.validate () : Boolean</span></a></h3><p>对剪辑中的每个轨道执行最小验证。如果所有轨道都有效，返回true。</p><h2 id="静态方法" tabindex="-1"><a class="header-anchor" href="#静态方法"><span>静态方法</span></a></h2><h3 id="createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array" tabindex="-1"><a class="header-anchor" href="#createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array"><span>.CreateClipsFromMorphTargetSequences ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : Array</span></a></h3><p>返回从几何体的变形目标序列(morph target sequences)创建的新动画剪辑(AnimationClip)数组，并尝试将变形目标名称分类为基于动画组的模式，如“Walk_001、Walk_002、Run_001、Run_002……”。</p><h3 id="createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip" tabindex="-1"><a class="header-anchor" href="#createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip"><span>.CreateFromMorphTargetSequence ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : AnimationClip</span></a></h3><p>返回一个由几何体变形目标数组(morph targets array)得到的新动画剪辑，接收名称和帧率参数。</p><p>说明: 帧率是必须参数, 但是动画速度可能会在AnimationAction中被animationAction.setDuration方法重写。</p><h3 id="findbyname-objectorcliparray-object-name-string-animationclip" tabindex="-1"><a class="header-anchor" href="#findbyname-objectorcliparray-object-name-string-animationclip"><span>.findByName ( objectOrClipArray : Object, name : String ) : AnimationClip</span></a></h3><p>根据名称搜索动画剪辑(AnimationClip), 接收一个动画剪辑数组或者一个包含名为&quot;animation&quot;的数组的网格（或几何体）作为第一个参数。</p><h3 id="parse-json-object-animationclip" tabindex="-1"><a class="header-anchor" href="#parse-json-object-animationclip"><span>.parse ( json : Object ) : AnimationClip</span></a></h3><p>解析剪辑的JSON表示，并返回一个动画剪辑(AnimationClip)。</p><h3 id="parseanimation-animation-object-bones-array-animationclip" tabindex="-1"><a class="header-anchor" href="#parseanimation-animation-object-bones-array-animationclip"><span>.parseAnimation ( animation : Object, bones : Array ) : AnimationClip</span></a></h3><p>解析动画层级格式并返回动画剪辑。</p><h3 id="tojson-clip-animationclip-object" tabindex="-1"><a class="header-anchor" href="#tojson-clip-animationclip-object"><span>.toJSON ( clip : AnimationClip ) : Object</span></a></h3><p>接收一个动画剪辑为参数并返回一个JSON对象.</p>',38))])}const u=i(l,[["render",c],["__file","AnimationClip.html.vue"]]),b=JSON.parse('{"path":"/threejs/%E5%8A%A8%E7%94%BB/AnimationClip.html","title":"AnimationClip","lang":"zh-CN","frontmatter":{"title":"AnimationClip","icon":"markdown","order":2,"date":"2023-03-20T00:00:00.000Z","category":["threejs"],"tag":["动画"],"description":"AnimationClip 动画剪辑（AnimationClip）是一个可重用的关键帧轨道集，它代表动画。","head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/threejs/%E5%8A%A8%E7%94%BB/AnimationClip.html"}],["meta",{"property":"og:title","content":"AnimationClip"}],["meta",{"property":"og:description","content":"AnimationClip 动画剪辑（AnimationClip）是一个可重用的关键帧轨道集，它代表动画。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"动画"}],["meta",{"property":"article:published_time","content":"2023-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AnimationClip\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"AnimationClip","slug":"animationclip","link":"#animationclip","children":[]},{"level":2,"title":"构造器","slug":"构造器","link":"#构造器","children":[]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":".duration : Number","slug":"duration-number","link":"#duration-number","children":[]},{"level":3,"title":".name : String","slug":"name-string","link":"#name-string","children":[]},{"level":3,"title":".tracks : Array","slug":"tracks-array","link":"#tracks-array","children":[]},{"level":3,"title":".uuid : String","slug":"uuid-string","link":"#uuid-string","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":".clone () : AnimationClip","slug":"clone-animationclip","link":"#clone-animationclip","children":[]},{"level":3,"title":".optimize () : this","slug":"optimize-this","link":"#optimize-this","children":[]},{"level":3,"title":".resetDuration () : this","slug":"resetduration-this","link":"#resetduration-this","children":[]},{"level":3,"title":".toJSON () : Object","slug":"tojson-object","link":"#tojson-object","children":[]},{"level":3,"title":".trim () : this","slug":"trim-this","link":"#trim-this","children":[]},{"level":3,"title":".validate () : Boolean","slug":"validate-boolean","link":"#validate-boolean","children":[]}]},{"level":2,"title":"静态方法","slug":"静态方法","link":"#静态方法","children":[{"level":3,"title":".CreateClipsFromMorphTargetSequences ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : Array","slug":"createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array","link":"#createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array","children":[]},{"level":3,"title":".CreateFromMorphTargetSequence ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : AnimationClip","slug":"createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip","link":"#createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip","children":[]},{"level":3,"title":".findByName ( objectOrClipArray : Object, name : String ) : AnimationClip","slug":"findbyname-objectorcliparray-object-name-string-animationclip","link":"#findbyname-objectorcliparray-object-name-string-animationclip","children":[]},{"level":3,"title":".parse ( json : Object ) : AnimationClip","slug":"parse-json-object-animationclip","link":"#parse-json-object-animationclip","children":[]},{"level":3,"title":".parseAnimation ( animation : Object, bones : Array ) : AnimationClip","slug":"parseanimation-animation-object-bones-array-animationclip","link":"#parseanimation-animation-object-bones-array-animationclip","children":[]},{"level":3,"title":".toJSON ( clip : AnimationClip ) : Object","slug":"tojson-clip-animationclip-object","link":"#tojson-clip-animationclip-object","children":[]}]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":1.95,"words":584},"filePathRelative":"threejs/动画/AnimationClip.md","localizedDate":"2023年3月20日","excerpt":"<h2>AnimationClip</h2>\\n<p>动画剪辑（AnimationClip）是一个可重用的关键帧轨道集，它代表动画。</p>\\n<iframe url=\\"https://luotainxu-demo.netlify.app/#/threejs/animation\\">\\n<h2 id=\\"构造器\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#构造器\\"><span>构造器</span></a></h2>\\n<p>AnimationClip( name : String, duration : Number, tracks : Array )</p>\\n<ul>\\n<li>name - 此剪辑的名称</li>\\n<li>duration - 持续时间 (单位秒). 如果传入负数, 持续时间将会从传入的数组中计算得到。</li>\\n<li>tracks - 一个由关键帧轨道（KeyframeTracks）组成的数组。</li>\\n</ul>\\n<h2 id=\\"属性\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#属性\\"><span>属性</span></a></h2>\\n<h3 id=\\"duration-number\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#duration-number\\"><span>.duration : Number</span></a></h3>\\n<p>剪辑的持续时间 (单位秒). 可以通过resetDuration从轨道数组（tracks）计算出来。</p>\\n<h3 id=\\"name-string\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#name-string\\"><span>.name : String</span></a></h3>\\n<p>剪辑的名称. 调用findByName根据名称搜索某个剪辑</p>\\n<h3 id=\\"tracks-array\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#tracks-array\\"><span>.tracks : Array</span></a></h3>\\n<p>一个包含该剪辑中有动画的所有属性的关键帧轨道（KeyframeTrack）的数组。</p>\\n<h3 id=\\"uuid-string\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#uuid-string\\"><span>.uuid : String</span></a></h3>\\n<p>剪辑实例的UUID，自动分配且不可编辑。</p>\\n<h2 id=\\"方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#方法\\"><span>方法</span></a></h2>\\n<h3 id=\\"clone-animationclip\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#clone-animationclip\\"><span>.clone () : AnimationClip</span></a></h3>\\n<h3 id=\\"optimize-this\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#optimize-this\\"><span>.optimize () : this</span></a></h3>\\n<p>通过移除等效的顺序键（在变形目标序列中很常见）来优化每一个轨道</p>\\n<h3 id=\\"resetduration-this\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#resetduration-this\\"><span>.resetDuration () : this</span></a></h3>\\n<p>将剪辑的持续时间（duration）设为最长的关键帧轨道(KeyframeTrack)的持续时间。</p>\\n<h3 id=\\"tojson-object\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#tojson-object\\"><span>.toJSON () : Object</span></a></h3>\\n<p>Returns a JSON object representing the serialized animation clip.</p>\\n<h3 id=\\"trim-this\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#trim-this\\"><span>.trim () : this</span></a></h3>\\n<p>修剪所有的轨道到该剪辑的持续时间。</p>\\n<h3 id=\\"validate-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#validate-boolean\\"><span>.validate () : Boolean</span></a></h3>\\n<p>对剪辑中的每个轨道执行最小验证。如果所有轨道都有效，返回true。</p>\\n<h2 id=\\"静态方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#静态方法\\"><span>静态方法</span></a></h2>\\n<h3 id=\\"createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array\\"><span>.CreateClipsFromMorphTargetSequences ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : Array</span></a></h3>\\n<p>返回从几何体的变形目标序列(morph target sequences)创建的新动画剪辑(AnimationClip)数组，并尝试将变形目标名称分类为基于动画组的模式，如“Walk_001、Walk_002、Run_001、Run_002……”。</p>\\n<h3 id=\\"createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip\\"><span>.CreateFromMorphTargetSequence ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : AnimationClip</span></a></h3>\\n<p>返回一个由几何体变形目标数组(morph targets array)得到的新动画剪辑，接收名称和帧率参数。</p>\\n<p>说明: 帧率是必须参数, 但是动画速度可能会在AnimationAction中被animationAction.setDuration方法重写。</p>\\n<h3 id=\\"findbyname-objectorcliparray-object-name-string-animationclip\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#findbyname-objectorcliparray-object-name-string-animationclip\\"><span>.findByName ( objectOrClipArray : Object, name : String ) : AnimationClip</span></a></h3>\\n<p>根据名称搜索动画剪辑(AnimationClip), 接收一个动画剪辑数组或者一个包含名为&quot;animation&quot;的数组的网格（或几何体）作为第一个参数。</p>\\n<h3 id=\\"parse-json-object-animationclip\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#parse-json-object-animationclip\\"><span>.parse ( json : Object ) : AnimationClip</span></a></h3>\\n<p>解析剪辑的JSON表示，并返回一个动画剪辑(AnimationClip)。</p>\\n<h3 id=\\"parseanimation-animation-object-bones-array-animationclip\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#parseanimation-animation-object-bones-array-animationclip\\"><span>.parseAnimation ( animation : Object, bones : Array ) : AnimationClip</span></a></h3>\\n<p>解析动画层级格式并返回动画剪辑。</p>\\n<h3 id=\\"tojson-clip-animationclip-object\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#tojson-clip-animationclip-object\\"><span>.toJSON ( clip : AnimationClip ) : Object</span></a></h3>\\n<p>接收一个动画剪辑为参数并返回一个JSON对象.</p>\\n</iframe>","autoDesc":true}');export{u as comp,b as data};

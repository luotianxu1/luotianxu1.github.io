const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index.html-DNpdjXMH.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/01.HTML面试题.html-CCxDhQWO.js","assets/02.CSS面试题.html-CgLAnEZi.js","assets/03.JS面试题.html-D5rd61rQ.js","assets/04.VUE面试题.html-B0Sc5Gug.js","assets/05.React面试题.html-FBbV2TT2.js","assets/06.浏览器原理面试题.html-Cq8yWhdw.js","assets/07.网络面试题.html-Dp5QlEtF.js","assets/08.前端工程化面试题.html-FdNqP5Dk.js","assets/09.性能优化面试题.html-DvtXF-ge.js","assets/10.其他.html-BtZ8B6VN.js","assets/index.html-PHL57RIc.js","assets/index.html-La-GN3KX.js","assets/01.vue3-vite.html-BCgpR19h.js","assets/vue4-fyW0l5NG.js","assets/02.vue2-webpack.html-gOH9g4Za.js","assets/03.图片懒加载.html-D2lCv0jE.js","assets/04.python实现webm转mp4.html-BcdWORPF.js","assets/05.Git.html-BhSO_2um.js","assets/06.Eslint.html-DtAonehq.js","assets/07.uniapp分环境打包.html-CvUnl1KU.js","assets/08.uniapp蓝牙操作.html-FuX1w9Z5.js","assets/09.HTML.html-CotVFJ_m.js","assets/index.html-f6_uM2sB.js","assets/index.html-CTJvvcYr.js","assets/index.html-_mB4MgUA.js","assets/BFC.html-BpniV0eg.js","assets/index.html-BhL_2aGZ.js","assets/常见布局.html-BUwdAz0E.js","assets/水平垂直居中.html-CbfbNkjT.js","assets/清除浮动.html-C77T5gaN.js","assets/01.入门.html-CVnI6xHZ.js","assets/02.数据库.html-db9ouCdZ.js","assets/index.html-CKKm-ki5.js","assets/index.html-BG2ZhEsm.js","assets/移动端适配.html-BGyVUwUg.js","assets/语义化与SEO.html-B3P2oHG8.js","assets/重绘与重排.html-BzcEZ6ph.js","assets/DOM事件机制.html-DbSlQsSs.js","assets/ES6-ES11.html-n565h4gh.js","assets/index.html-Cm711kar.js","assets/Web API.html-CGnIONh1.js","assets/this.html-Ddk3oxRI.js","assets/事件循环.html-RA6IbKjd.js","assets/file8-B0mw79I_.js","assets/二进制.html-fVB_jrYO.js","assets/内存泄漏.html-B6fgC8g7.js","assets/前端模块化.html-C5dilrZx.js","assets/原型链与继承.html-CfpeSauJ.js","assets/变量提升.html-B2Wz851N.js","assets/字符串.html-BgC1UJko.js","assets/异步编程.html-DsXzIyvn.js","assets/操作符.html-kTt34cUC.js","assets/数据类型.html-Cp6C2OvP.js","assets/数组.html-DkM3Q5tf.js","assets/深拷贝与浅拷贝.html-eZhKTxgT.js","assets/类型转换.html-KRUnwFKR.js","assets/网络请求.html-B22vE2fY.js","assets/节流与防抖.html-DzfTC6nW.js","assets/解构赋值.html-CvRfXjWj.js","assets/跨域.html-WAGwgn1P.js","assets/遍历循环.html-BEu0pxKy.js","assets/闭包.html-Dh8TiULD.js","assets/01.介绍.html-BRubwHsn.js","assets/02.基础.html-D4ZfBZCA.js","assets/03.用户和用户组.html-3fuPy_y3.js","assets/04.目录与文件.html-BSN2--9E.js","assets/05.文件权限.html-BGwcytQB.js","assets/06.vi编辑器.html-CxpJxaxH.js","assets/07.yum.html-C0wKZDHN.js","assets/08.shell基础.html-CfYwD8rs.js","assets/index.html-2jsYO50r.js","assets/01.安装.html-CSlr35Bt.js","assets/02.目录结构.html-s1RCUlFP.js","assets/index.html-MJYWIIzA.js","assets/index.html-C3Gt0v3e.js","assets/react-redux.html-BRK5fcGj.js","assets/redux Toolkit.html-CGbe1KND.js","assets/redux.html-CnIgvDTC.js","assets/setState.html-rwDaKpbS.js","assets/useCallback.html-VSCzqLPB.js","assets/useContext.html-TbfrZPbY.js","assets/useDeferredValue.html-D5GgTS-W.js","assets/useEffect.html-D8ir0mXH.js","assets/useLayoutEffect.html-B8GahYww.js","assets/useMemo.html-10AHzo0A.js","assets/useReducer.html-BY1bqWEy.js","assets/useRef.html-B7ZUJCms.js","assets/useState.html-B9k_jxNC.js","assets/useTransition.html-CMczylhu.js","assets/插槽.html-CjMsDPXJ.js","assets/父子组件通信.html-DleyoFXr.js","assets/脚手架.html-_gBba9-C.js","assets/index.html-CJ6vNMP7.js","assets/接口.html-deSVGpCT.js","assets/模块和声明文件.html-C_33Zvfk.js","assets/泛型.html-BZpCiQza.js","assets/类.html-rCDNIWRn.js","assets/类型.html-BSZSzSYs.js","assets/类型守卫.html-D0sRAeKR.js","assets/类型推断与断言.html-ONP4FyLJ.js","assets/编译.html-Pu_wLm4Y.js","assets/联合类型、类型别名、交叉类型.html-CXZ5edLK.js","assets/装饰器.html-DFaZeWyi.js","assets/01.homebew安装mysql.html-dasTV5mO.js","assets/02.DDL语言.html-eYe0Q8ys.js","assets/index.html-Bs_PzcVh.js","assets/index.html-B1IeNwqW.js","assets/diff算法原理.html-iL6mT8I7.js","assets/mixin混入原理.html-DLSI6Vy4.js","assets/侦听器属性原理.html-Bz3H02u-.js","assets/入口分析.html-DuGgG6f_.js","assets/初始渲染原理.html-QkMY_K-t.js","assets/响应式数据原理.html-ejEmKeSr.js","assets/异步更新原理.html-BqIBwXJk.js","assets/模板编译原理.html-B-L7VNJK.js","assets/渲染更新原理.html-DykTMRgw.js","assets/计算属性原理.html-Z6q3Pjcp.js","assets/Git.html-hB1ZFjLu.js","assets/index.html-D15EHLc6.js","assets/index.html-3iVB550f.js","assets/垃圾回收.html-BEgJvYFE.js","assets/浏览器存储.html-BFtT9izQ.js","assets/输入URL过程.html-C4es4ZJt.js","assets/index.html-BKF-nOYi.js","assets/TCP与UDP.html-BA0kM2Ri.js","assets/WebSocket.html-B4L6d14g.js","assets/01.构造器模式.html-93Or0Dqq.js","assets/02.原型模式.html-xnQhdrCY.js","assets/03.工厂模式.html-Ba4VePyg.js","assets/04.建造者模式.html-2SIYl3FR.js","assets/05.单例模式.html-C0XOykhZ.js","assets/06.装饰器模式.html-DWPEW7Jc.js","assets/07.适配器模式.html-D-MflgCg.js","assets/08.策略模式.html-BKBqS2Pl.js","assets/09.代理模式.html-DxVRsQvB.js","assets/10.观察者模式.html-DNzQN5Gy.js","assets/11.发布订阅模式.html-CerHZBc2.js","assets/12.模块模式.html-DpjunKi4.js","assets/13.桥接模式.html-DMPovSHD.js","assets/14.组合模式.html-BhB9B7bK.js","assets/15.命令模式.html-Ch4dNHhQ.js","assets/16.模板方法模式.html-BzcIIeqn.js","assets/17.迭代器模式.html-BImMTMPl.js","assets/18.职责链模式.html-B-vvSRc6.js","assets/index.html-CdfFDAqb.js","assets/01.系统工程与信息系统基础.html-bFVdsuzz.js","assets/02.软件工程.html-upiqLizX.js","assets/03.项目管理.html-BYvptSVu.js","assets/04.软件架构设计.html-DZMg0p7J.js","assets/05.系统可靠性分析与设计.html-CAqlJ3M8.js","assets/06.信息安全.html-Cv8mPG_J.js","assets/07.安全架构设计.html-B7lo_5Z0.js","assets/08.计算机系统基础.html-ByBdw1Jp.js","assets/09.嵌入式系统.html-DCiXNvJ1.js","assets/10.计算机网络.html-Do8uBKVk.js","assets/11.数据库系统.html-mpr2Fhcm.js","assets/index.html-CQXPA-sT.js","assets/Lod.html-Bspi75yv.js","assets/八叉树检测.html-J63qkwoL.js","assets/BufferGeometry.html-BcktIWy3.js","assets/Cure.html-C4Re-j_2.js","assets/二十面缓冲几何体.html-5Nno07x9.js","assets/八面缓冲几何体.html-D4x0Klbt.js","assets/凸包几何体.html-BSoJZvA0.js","assets/十二面缓冲几何体.html-BSiOFJmR.js","assets/四面缓冲几何体.html-FKL5UFFE.js","assets/圆形缓冲几何体.html-DhJ1YKkp.js","assets/圆柱缓冲几何体.html-3ihlfXQ2.js","assets/圆环缓冲几何体(TorusGeometry).html-BsIw0z77.js","assets/圆环缓冲几何体.html-BSYCIkgn.js","assets/圆环缓冲扭结几何体.html-D1WgMs35.js","assets/圆锥缓冲几何体.html-CcIZixFG.js","assets/多面缓冲几何体.html-Dv2GszMQ.js","assets/平面缓冲几何体.html-SzlpIIBH.js","assets/形状缓冲几何体.html-C8vjbfa1.js","assets/挤压缓冲几何体.html-CR8QS8hU.js","assets/曲线.html-DXPVOoHC.js","assets/曲线路径.html-CVDuL3es.js","assets/球缓冲几何体.html-BUsUt_bQ.js","assets/立方缓冲几何体.html-CaxOpSuw.js","assets/管道缓冲几何体.html-C9FRTVCR.js","assets/网格几何体.html-DF3L5csb.js","assets/车削缓冲几何体.html-K2VtIGRN.js","assets/边缘几何体.html-ljDNRxqC.js","assets/DefaultLoadingManager.html-CSxT7PcG.js","assets/LoadingManager.html-zJth_2BN.js","assets/AnimationAction.html-CXnigVtb.js","assets/AnimationClip.html-Ji3Cgk_I.js","assets/AnimationMixer.html-DGSoNEix.js","assets/光线投射.html-BJgliyUX.js","assets/基本场景.html-D3Ec69MT.js","assets/时钟.html-Dpzj1AbD.js","assets/轨道控制器.html-BnrvAn7t.js","assets/摄像机.html-Ck6rAQzR.js","assets/摄像机阵列.html-Dju-vSul.js","assets/正交相机.html-BRdVlu1m.js","assets/立体相机.html-hMhOtamP.js","assets/立方相机.html-D9sHlsKv.js","assets/透视相机.html-BQkY4IDx.js","assets/Lambert网格材质.html-BMnX8dHf.js","assets/MeshDistanceMaterial.html-oy0bcM3H.js","assets/Phong网格材质.html-BhuAEJYx.js","assets/原始着色器材质.html-CjR1ZbdT.js","assets/基础线条材质.html-BiGj4gSC.js","assets/基础网格材质.html-DbabRisY.js","assets/材质.html-Dlp1Ohyz.js","assets/材质捕捉纹理材质.html--eHe-8V1.js","assets/标准网格材质.html-D5dLyIFL.js","assets/法线网格材质.html-BIx9POxM.js","assets/深度网格材质.html-Dny0rqNS.js","assets/点材质.html-BsraL1Pn.js","assets/点精灵材质.html-DRjpQ1L0.js","assets/物理网格材质.html-ByzR8G1Q.js","assets/着色器材质.html-nSItUnlX.js","assets/虚线材质.html-BGNlS5dM.js","assets/阴影材质.html-CSXKPvpY.js","assets/WebGLRenderer.html-CoP0-SbX.js","assets/Light.html-PzXPt4am.js","assets/半球光.html-Dtz9Gj2q.js","assets/平行光.html-Bojvg7br.js","assets/平面光光源.html-D-ZQzy6L.js","assets/点光源.html-FRB1d6XK.js","assets/环境光.html-DDCDM2go.js","assets/聚光灯.html-DQIxwxNl.js","assets/404.html-D76Ken5J.js","assets/index.html-BZBfmIbQ.js","assets/index.html-4vfH5yPL.js","assets/index.html-Db35VtGZ.js","assets/index.html-E0GDAwCq.js","assets/index.html-BF1ku7pQ.js","assets/index.html-GZtaGSIo.js","assets/index.html-unJ9lZ0d.js","assets/index.html-qtdFyCST.js","assets/index.html-DGaX9jbX.js","assets/index.html-CSA_9byT.js","assets/index.html-OjNBA0Ec.js","assets/index.html-CeW3F0O6.js","assets/index.html-B40lblQ-.js","assets/index.html-D4pv8l9L.js","assets/index.html-BNxNiY-q.js","assets/index.html-CRx5jzBs.js","assets/index.html-Cuz049Gg.js","assets/index.html-COFh6fjq.js","assets/index.html-E92dgbIW.js","assets/index.html-DyhJpMed.js","assets/index.html-DLc9SLb-.js","assets/index.html-DYMaEJio.js","assets/index.html-LoFbykeY.js","assets/index.html-DTpJyvnc.js","assets/index.html-C0sr5O4R.js","assets/index.html-DhEfyRYN.js","assets/index.html-D5Vyl3xy.js","assets/index.html-C1Ajo34q.js","assets/index.html-Brwhk3iJ.js","assets/index.html-q_DvOI4t.js","assets/index.html-B9B8Mdls.js","assets/index.html-CaeYtJu-.js","assets/index.html-C9Pj6PO3.js","assets/index.html-D1iK_JKY.js","assets/index.html-C7Mg9Enz.js","assets/index.html-CZxQNQj1.js","assets/index.html-DYkM_jz2.js","assets/index.html-_V8nqAV4.js","assets/index.html-C09IrzRI.js","assets/index.html-CbGONWuz.js","assets/index.html-WeClRYyN.js","assets/index.html-DZk113jk.js","assets/index.html-BkrXxbmp.js","assets/index.html-DirGAEZy.js","assets/index.html-BWFVaKeq.js","assets/index.html-DP5Lp6Bk.js","assets/index.html-jbLkCY-a.js","assets/index.html-n7nvH_tD.js","assets/index.html-_G-0-Zpe.js","assets/index.html-0rNkVwA6.js","assets/index.html-7E9-W2J_.js","assets/index.html-gqXsn8HA.js","assets/index.html-bB5vZngD.js","assets/index.html-B0zARVCV.js","assets/index.html-CG4qOL00.js","assets/index.html-DJoWEuxG.js","assets/index.html-hyjm7Cac.js","assets/index.html-C45iJDFO.js","assets/index.html-DL4iSRHF.js","assets/index.html-B_isvnc8.js","assets/index.html-3x6_WClB.js","assets/index.html-BppZL79U.js","assets/index.html-B1Re-ppu.js","assets/index.html-BG-brsrq.js","assets/index.html-ksZold7C.js","assets/index.html-Bk32Br0W.js","assets/index.html-ipF4eTpY.js","assets/index.html-BlpwB6hL.js","assets/index.html-DpA7V89c.js","assets/index.html-TzTuxuK8.js","assets/index.html-CwgH3TIm.js","assets/index.html-BQJqq2sZ.js","assets/index.html-CYyxUPg3.js","assets/index.html-DIlo9Kih.js","assets/index.html-uzdGuQad.js","assets/index.html-CGWVilss.js","assets/index.html-CCDFGWQb.js","assets/index.html-DKy8N_Zp.js","assets/index.html-CZgodxCt.js","assets/index.html-CPkUxTWC.js","assets/index.html-zMka4L_P.js","assets/index.html-CSdKO2YH.js","assets/index.html-NkSneNNn.js","assets/index.html-CE6tHPb8.js","assets/index.html-DaQrOPTS.js","assets/index.html-CYeOZMMl.js","assets/index.html-CIUjEQWh.js","assets/index.html-38b67JPI.js","assets/index.html-CU1to3FW.js","assets/index.html-DtcNF7Vs.js","assets/index.html-H9oA-CaW.js","assets/index.html-D27zt0Bf.js","assets/index.html-DTHOct4A.js","assets/index.html-CVit26-p.js","assets/index.html-C1D_wu_-.js","assets/index.html-CXLrYG23.js","assets/index.html-CA-_jNUW.js","assets/index.html-bqFFWmjw.js","assets/index.html-Dx-bnTRu.js","assets/index.html-kkv1diS2.js","assets/index.html-Bs80QJ7l.js","assets/index.html-DIeQqsjD.js","assets/index.html-CKyH-dxc.js","assets/index.html-C6syucPV.js","assets/index.html-CDhaLB3v.js","assets/index.html-DwhLNUCY.js","assets/index.html-r8QKRWFe.js","assets/index.html-BWFBZHki.js","assets/index.html-CIwBS8vs.js","assets/index.html-BvITSKrY.js","assets/index.html-CenTPi6L.js","assets/index.html-cwLxWGRm.js","assets/index.html-eXVV4GdG.js","assets/index.html-D0TKY_Tm.js","assets/index.html-B0k3K15r.js","assets/index.html-DHJwqJ13.js","assets/index.html-B30TAlEP.js","assets/index.html-lsl_AFa0.js","assets/index.html-C3NIneHc.js","assets/index.html-BDZasdnY.js","assets/index.html-Dtrx9M88.js","assets/index.html--YqCTUsR.js","assets/index.html-DCps7XFk.js","assets/index.html-DuEHaAio.js","assets/index.html-5e1swOQ1.js","assets/index.html-CB3pd4IR.js","assets/index.html-CxgiWyYU.js","assets/index.html-DHTkPuJc.js","assets/index.html-B2iGZHea.js","assets/index.html-p-ZkBbST.js","assets/index.html-JzdytXEk.js","assets/index.html-CvOG0uEg.js","assets/index.html-aiWwdZ_f.js","assets/index.html-D5X2qbHN.js","assets/index.html-CX8zd0e0.js","assets/index.html-CLVhQQ-U.js","assets/index.html-DzhYZwli.js","assets/index.html-Czs7I53I.js","assets/index.html-BQXflX6a.js","assets/index.html-AJ1DsWQ5.js","assets/index.html-DZbqJMJX.js","assets/index.html-BCdIIpJa.js","assets/index.html-Czq-bIFd.js","assets/IFrame-D0JvK1U1.js"])))=>i.map(i=>d[i]);
var eo=Object.defineProperty;var to=(s,i,a)=>i in s?eo(s,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):s[i]=a;var Ge=(s,i,a)=>to(s,typeof i!="symbol"?i+"":i,a);/**
* @vue/shared v3.5.4
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function Xt(s){const i=Object.create(null);for(const a of s.split(","))i[a]=1;return a=>a in i}const bs={},Va=[],Oi=()=>{},lo=()=>!1,Rn=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),Zt=s=>s.startsWith("onUpdate:"),Os=Object.assign,sl=(s,i)=>{const a=s.indexOf(i);a>-1&&s.splice(a,1)},ho=Object.prototype.hasOwnProperty,os=(s,i)=>ho.call(s,i),ss=Array.isArray,Ha=s=>_e(s)==="[object Map]",_r=s=>_e(s)==="[object Set]",ns=s=>typeof s=="function",Ss=s=>typeof s=="string",la=s=>typeof s=="symbol",_s=s=>s!==null&&typeof s=="object",xr=s=>(_s(s)||ns(s))&&ns(s.then)&&ns(s.catch),wr=Object.prototype.toString,_e=s=>wr.call(s),ro=s=>_e(s).slice(8,-1),Tr=s=>_e(s)==="[object Object]",il=s=>Ss(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,$a=Xt(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),xe=s=>{const i=Object.create(null);return a=>i[a]||(i[a]=s(a))},po=/-(\w)/g,pi=xe(s=>s.replace(po,(i,a)=>a?a.toUpperCase():"")),ko=/\B([A-Z])/g,Fa=xe(s=>s.replace(ko,"-$1").toLowerCase()),jn=xe(s=>s.charAt(0).toUpperCase()+s.slice(1)),Ue=xe(s=>s?`on${jn(s)}`:""),ea=(s,i)=>!Object.is(s,i),We=(s,...i)=>{for(let a=0;a<s.length;a++)s[a](...i)},Lr=(s,i,a,n=!1)=>{Object.defineProperty(s,i,{configurable:!0,enumerable:!1,writable:n,value:a})},oo=s=>{const i=parseFloat(s);return isNaN(i)?s:i},co=s=>{const i=Ss(s)?Number(s):NaN;return isNaN(i)?s:i};let sh;const Rr=()=>sh||(sh=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function al(s){if(ss(s)){const i={};for(let a=0;a<s.length;a++){const n=s[a],e=Ss(n)?yo(n):al(n);if(e)for(const t in e)i[t]=e[t]}return i}else if(Ss(s)||_s(s))return s}const Bo=/;(?![^(]*\))/g,Ao=/:([^]+)/,go=/\/\*[^]*?\*\//g;function yo(s){const i={};return s.replace(go,"").split(Bo).forEach(a=>{if(a){const n=a.split(Ao);n.length>1&&(i[n[0].trim()]=n[1].trim())}}),i}function nl(s){let i="";if(Ss(s))i=s;else if(ss(s))for(let a=0;a<s.length;a++){const n=nl(s[a]);n&&(i+=n+" ")}else if(_s(s))for(const a in s)s[a]&&(i+=a+" ");return i.trim()}const uo="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Eo=Xt(uo);function jr(s){return!!s||s===""}const Or=s=>!!(s&&s.__v_isRef===!0),mo=s=>Ss(s)?s:s==null?"":ss(s)||_s(s)&&(s.toString===wr||!ns(s.toString))?Or(s)?mo(s.value):JSON.stringify(s,Sr,2):String(s),Sr=(s,i)=>Or(i)?Sr(s,i.value):Ha(i)?{[`Map(${i.size})`]:[...i.entries()].reduce((a,[n,e],t)=>(a[qe(n,t)+" =>"]=e,a),{})}:_r(i)?{[`Set(${i.size})`]:[...i.values()].map(a=>qe(a))}:la(i)?qe(i):_s(i)&&!ss(i)&&!Tr(i)?String(i):i,qe=(s,i="")=>{var a;return la(s)?`Symbol(${(a=s.description)!=null?a:i})`:s};/**
* @vue/reactivity v3.5.4
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Us;class vo{constructor(i=!1){this.detached=i,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=Us,!i&&Us&&(this.index=(Us.scopes||(Us.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let i,a;if(this.scopes)for(i=0,a=this.scopes.length;i<a;i++)this.scopes[i].pause();for(i=0,a=this.effects.length;i<a;i++)this.effects[i].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let i,a;if(this.scopes)for(i=0,a=this.scopes.length;i<a;i++)this.scopes[i].resume();for(i=0,a=this.effects.length;i<a;i++)this.effects[i].resume()}}run(i){if(this._active){const a=Us;try{return Us=this,i()}finally{Us=a}}}on(){Us=this}off(){Us=this.parent}stop(i){if(this._active){let a,n;for(a=0,n=this.effects.length;a<n;a++)this.effects[a].stop();for(a=0,n=this.cleanups.length;a<n;a++)this.cleanups[a]();if(this.scopes)for(a=0,n=this.scopes.length;a<n;a++)this.scopes[a].stop(!0);if(!this.detached&&this.parent&&!i){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function Ir(){return Us}function fo(s,i=!1){Us&&Us.cleanups.push(s)}let ms;const Je=new WeakSet;class Pr{constructor(i){this.fn=i,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.nextEffect=void 0,this.cleanup=void 0,this.scheduler=void 0,Us&&Us.active&&Us.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,Je.has(this)&&(Je.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||(this.flags|=8,this.nextEffect=cn,cn=this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,ih(this),Vr(this);const i=ms,a=vi;ms=this,vi=!0;try{return this.fn()}finally{Hr(this),ms=i,vi=a,this.flags&=-3}}stop(){if(this.flags&1){for(let i=this.deps;i;i=i.nextDep)ll(i);this.deps=this.depsTail=void 0,ih(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?Je.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){ft(this)&&this.run()}get dirty(){return ft(this)}}let Mr=0,cn;function el(){Mr++}function tl(){if(--Mr>0)return;let s;for(;cn;){let i=cn;for(cn=void 0;i;){const a=i.nextEffect;if(i.nextEffect=void 0,i.flags&=-9,i.flags&1)try{i.trigger()}catch(n){s||(s=n)}i=a}}if(s)throw s}function Vr(s){for(let i=s.deps;i;i=i.nextDep)i.version=-1,i.prevActiveLink=i.dep.activeLink,i.dep.activeLink=i}function Hr(s){let i,a=s.depsTail;for(let n=a;n;n=n.prevDep)n.version===-1?(n===a&&(a=n.prevDep),ll(n),Fo(n)):i=n,n.dep.activeLink=n.prevActiveLink,n.prevActiveLink=void 0;s.deps=i,s.depsTail=a}function ft(s){for(let i=s.deps;i;i=i.nextDep)if(i.dep.version!==i.version||i.dep.computed&&$r(i.dep.computed)||i.dep.version!==i.version)return!0;return!!s._dirty}function $r(s){if(s.flags&4&&!(s.flags&16)||(s.flags&=-17,s.globalVersion===mn))return;s.globalVersion=mn;const i=s.dep;if(s.flags|=2,i.version>0&&!s.isSSR&&!ft(s)){s.flags&=-3;return}const a=ms,n=vi;ms=s,vi=!0;try{Vr(s);const e=s.fn(s._value);(i.version===0||ea(e,s._value))&&(s._value=e,i.version++)}catch(e){throw i.version++,e}finally{ms=a,vi=n,Hr(s),s.flags&=-3}}function ll(s){const{dep:i,prevSub:a,nextSub:n}=s;if(a&&(a.nextSub=n,s.prevSub=void 0),n&&(n.prevSub=a,s.nextSub=void 0),i.subs===s&&(i.subs=a),!i.subs&&i.computed){i.computed.flags&=-5;for(let e=i.computed.deps;e;e=e.nextDep)ll(e)}}function Fo(s){const{prevDep:i,nextDep:a}=s;i&&(i.nextDep=a,s.prevDep=void 0),a&&(a.prevDep=i,s.nextDep=void 0)}let vi=!0;const Nr=[];function ha(){Nr.push(vi),vi=!1}function ra(){const s=Nr.pop();vi=s===void 0?!0:s}function ih(s){const{cleanup:i}=s;if(s.cleanup=void 0,i){const a=ms;ms=void 0;try{i()}finally{ms=a}}}let mn=0;class we{constructor(i){this.computed=i,this.version=0,this.activeLink=void 0,this.subs=void 0}track(i){if(!ms||!vi||ms===this.computed)return;let a=this.activeLink;if(a===void 0||a.sub!==ms)a=this.activeLink={dep:this,sub:ms,version:this.version,nextDep:void 0,prevDep:void 0,nextSub:void 0,prevSub:void 0,prevActiveLink:void 0},ms.deps?(a.prevDep=ms.depsTail,ms.depsTail.nextDep=a,ms.depsTail=a):ms.deps=ms.depsTail=a,ms.flags&4&&zr(a);else if(a.version===-1&&(a.version=this.version,a.nextDep)){const n=a.nextDep;n.prevDep=a.prevDep,a.prevDep&&(a.prevDep.nextDep=n),a.prevDep=ms.depsTail,a.nextDep=void 0,ms.depsTail.nextDep=a,ms.depsTail=a,ms.deps===a&&(ms.deps=n)}return a}trigger(i){this.version++,mn++,this.notify(i)}notify(i){el();try{for(let a=this.subs;a;a=a.prevSub)a.sub.notify()}finally{tl()}}}function zr(s){const i=s.dep.computed;if(i&&!s.dep.subs){i.flags|=20;for(let n=i.deps;n;n=n.nextDep)zr(n)}const a=s.dep.subs;a!==s&&(s.prevSub=a,a&&(a.nextSub=s)),s.dep.subs=s}const ye=new WeakMap,ua=Symbol(""),Ft=Symbol(""),vn=Symbol("");function Ns(s,i,a){if(vi&&ms){let n=ye.get(s);n||ye.set(s,n=new Map);let e=n.get(a);e||n.set(a,e=new we),e.track()}}function Ui(s,i,a,n,e,t){const l=ye.get(s);if(!l){mn++;return}const r=p=>{p&&p.trigger()};if(el(),i==="clear")l.forEach(r);else{const p=ss(s),k=p&&il(a);if(p&&a==="length"){const d=Number(n);l.forEach((o,c)=>{(c==="length"||c===vn||!la(c)&&c>=d)&&r(o)})}else switch(a!==void 0&&r(l.get(a)),k&&r(l.get(vn)),i){case"add":p?k&&r(l.get("length")):(r(l.get(ua)),Ha(s)&&r(l.get(Ft)));break;case"delete":p||(r(l.get(ua)),Ha(s)&&r(l.get(Ft)));break;case"set":Ha(s)&&r(l.get(ua));break}}tl()}function Co(s,i){var a;return(a=ye.get(s))==null?void 0:a.get(i)}function La(s){const i=ds(s);return i===s?i:(Ns(i,"iterate",vn),fi(s)?i:i.map(Ws))}function hl(s){return Ns(s=ds(s),"iterate",vn),s}const bo={__proto__:null,[Symbol.iterator](){return Ke(this,Symbol.iterator,Ws)},concat(...s){return La(this).concat(...s.map(i=>ss(i)?La(i):i))},entries(){return Ke(this,"entries",s=>(s[1]=Ws(s[1]),s))},every(s,i){return Hi(this,"every",s,i,void 0,arguments)},filter(s,i){return Hi(this,"filter",s,i,a=>a.map(Ws),arguments)},find(s,i){return Hi(this,"find",s,i,Ws,arguments)},findIndex(s,i){return Hi(this,"findIndex",s,i,void 0,arguments)},findLast(s,i){return Hi(this,"findLast",s,i,Ws,arguments)},findLastIndex(s,i){return Hi(this,"findLastIndex",s,i,void 0,arguments)},forEach(s,i){return Hi(this,"forEach",s,i,void 0,arguments)},includes(...s){return Ye(this,"includes",s)},indexOf(...s){return Ye(this,"indexOf",s)},join(s){return La(this).join(s)},lastIndexOf(...s){return Ye(this,"lastIndexOf",s)},map(s,i){return Hi(this,"map",s,i,void 0,arguments)},pop(){return hn(this,"pop")},push(...s){return hn(this,"push",s)},reduce(s,...i){return ah(this,"reduce",s,i)},reduceRight(s,...i){return ah(this,"reduceRight",s,i)},shift(){return hn(this,"shift")},some(s,i){return Hi(this,"some",s,i,void 0,arguments)},splice(...s){return hn(this,"splice",s)},toReversed(){return La(this).toReversed()},toSorted(s){return La(this).toSorted(s)},toSpliced(...s){return La(this).toSpliced(...s)},unshift(...s){return hn(this,"unshift",s)},values(){return Ke(this,"values",Ws)}};function Ke(s,i,a){const n=hl(s),e=n[i]();return n!==s&&!fi(s)&&(e._next=e.next,e.next=()=>{const t=e._next();return t.value&&(t.value=a(t.value)),t}),e}const Do=Array.prototype;function Hi(s,i,a,n,e,t){const l=hl(s),r=l!==s&&!fi(s),p=l[i];if(p!==Do[i]){const o=p.apply(s,t);return r?Ws(o):o}let k=a;l!==s&&(r?k=function(o,c){return a.call(this,Ws(o),c,s)}:a.length>2&&(k=function(o,c){return a.call(this,o,c,s)}));const d=p.call(l,k,n);return r&&e?e(d):d}function ah(s,i,a,n){const e=hl(s);let t=a;return e!==s&&(fi(s)?a.length>3&&(t=function(l,r,p){return a.call(this,l,r,p,s)}):t=function(l,r,p){return a.call(this,l,Ws(r),p,s)}),e[i](t,...n)}function Ye(s,i,a){const n=ds(s);Ns(n,"iterate",vn);const e=n[i](...a);return(e===-1||e===!1)&&dl(a[0])?(a[0]=ds(a[0]),n[i](...a)):e}function hn(s,i,a=[]){ha(),el();const n=ds(s)[i].apply(s,a);return tl(),ra(),n}const _o=Xt("__proto__,__v_isRef,__isVue"),Gr=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(la));function xo(s){la(s)||(s=String(s));const i=ds(this);return Ns(i,"has",s),i.hasOwnProperty(s)}class Ur{constructor(i=!1,a=!1){this._isReadonly=i,this._isShallow=a}get(i,a,n){const e=this._isReadonly,t=this._isShallow;if(a==="__v_isReactive")return!e;if(a==="__v_isReadonly")return e;if(a==="__v_isShallow")return t;if(a==="__v_raw")return n===(e?t?$o:Kr:t?Jr:qr).get(i)||Object.getPrototypeOf(i)===Object.getPrototypeOf(n)?i:void 0;const l=ss(i);if(!e){let p;if(l&&(p=bo[a]))return p;if(a==="hasOwnProperty")return xo}const r=Reflect.get(i,a,js(i)?i:n);return(la(a)?Gr.has(a):_o(a))||(e||Ns(i,"get",a),t)?r:js(r)?l&&il(a)?r:r.value:_s(r)?e?pa(r):On(r):r}}class Wr extends Ur{constructor(i=!1){super(!1,i)}set(i,a,n,e){let t=i[a];if(!this._isShallow){const p=va(t);if(!fi(n)&&!va(n)&&(t=ds(t),n=ds(n)),!ss(i)&&js(t)&&!js(n))return p?!1:(t.value=n,!0)}const l=ss(i)&&il(a)?Number(a)<i.length:os(i,a),r=Reflect.set(i,a,n,js(i)?i:e);return i===ds(e)&&(l?ea(n,t)&&Ui(i,"set",a,n):Ui(i,"add",a,n)),r}deleteProperty(i,a){const n=os(i,a);i[a];const e=Reflect.deleteProperty(i,a);return e&&n&&Ui(i,"delete",a,void 0),e}has(i,a){const n=Reflect.has(i,a);return(!la(a)||!Gr.has(a))&&Ns(i,"has",a),n}ownKeys(i){return Ns(i,"iterate",ss(i)?"length":ua),Reflect.ownKeys(i)}}class wo extends Ur{constructor(i=!1){super(!0,i)}set(i,a){return!0}deleteProperty(i,a){return!0}}const To=new Wr,Lo=new wo,Ro=new Wr(!0);const rl=s=>s,Te=s=>Reflect.getPrototypeOf(s);function Zn(s,i,a=!1,n=!1){s=s.__v_raw;const e=ds(s),t=ds(i);a||(ea(i,t)&&Ns(e,"get",i),Ns(e,"get",t));const{has:l}=Te(e),r=n?rl:a?ol:Ws;if(l.call(e,i))return r(s.get(i));if(l.call(e,t))return r(s.get(t));s!==e&&s.get(i)}function se(s,i=!1){const a=this.__v_raw,n=ds(a),e=ds(s);return i||(ea(s,e)&&Ns(n,"has",s),Ns(n,"has",e)),s===e?a.has(s):a.has(s)||a.has(e)}function ie(s,i=!1){return s=s.__v_raw,!i&&Ns(ds(s),"iterate",ua),Reflect.get(s,"size",s)}function nh(s,i=!1){!i&&!fi(s)&&!va(s)&&(s=ds(s));const a=ds(this);return Te(a).has.call(a,s)||(a.add(s),Ui(a,"add",s,s)),this}function eh(s,i,a=!1){!a&&!fi(i)&&!va(i)&&(i=ds(i));const n=ds(this),{has:e,get:t}=Te(n);let l=e.call(n,s);l||(s=ds(s),l=e.call(n,s));const r=t.call(n,s);return n.set(s,i),l?ea(i,r)&&Ui(n,"set",s,i):Ui(n,"add",s,i),this}function th(s){const i=ds(this),{has:a,get:n}=Te(i);let e=a.call(i,s);e||(s=ds(s),e=a.call(i,s)),n&&n.call(i,s);const t=i.delete(s);return e&&Ui(i,"delete",s,void 0),t}function lh(){const s=ds(this),i=s.size!==0,a=s.clear();return i&&Ui(s,"clear",void 0,void 0),a}function ae(s,i){return function(n,e){const t=this,l=t.__v_raw,r=ds(l),p=i?rl:s?ol:Ws;return!s&&Ns(r,"iterate",ua),l.forEach((k,d)=>n.call(e,p(k),p(d),t))}}function ne(s,i,a){return function(...n){const e=this.__v_raw,t=ds(e),l=Ha(t),r=s==="entries"||s===Symbol.iterator&&l,p=s==="keys"&&l,k=e[s](...n),d=a?rl:i?ol:Ws;return!i&&Ns(t,"iterate",p?Ft:ua),{next(){const{value:o,done:c}=k.next();return c?{value:o,done:c}:{value:r?[d(o[0]),d(o[1])]:d(o),done:c}},[Symbol.iterator](){return this}}}}function Ji(s){return function(...i){return s==="delete"?!1:s==="clear"?void 0:this}}function jo(){const s={get(t){return Zn(this,t)},get size(){return ie(this)},has:se,add:nh,set:eh,delete:th,clear:lh,forEach:ae(!1,!1)},i={get(t){return Zn(this,t,!1,!0)},get size(){return ie(this)},has:se,add(t){return nh.call(this,t,!0)},set(t,l){return eh.call(this,t,l,!0)},delete:th,clear:lh,forEach:ae(!1,!0)},a={get(t){return Zn(this,t,!0)},get size(){return ie(this,!0)},has(t){return se.call(this,t,!0)},add:Ji("add"),set:Ji("set"),delete:Ji("delete"),clear:Ji("clear"),forEach:ae(!0,!1)},n={get(t){return Zn(this,t,!0,!0)},get size(){return ie(this,!0)},has(t){return se.call(this,t,!0)},add:Ji("add"),set:Ji("set"),delete:Ji("delete"),clear:Ji("clear"),forEach:ae(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(t=>{s[t]=ne(t,!1,!1),a[t]=ne(t,!0,!1),i[t]=ne(t,!1,!0),n[t]=ne(t,!0,!0)}),[s,a,i,n]}const[Oo,So,Io,Po]=jo();function pl(s,i){const a=i?s?Po:Io:s?So:Oo;return(n,e,t)=>e==="__v_isReactive"?!s:e==="__v_isReadonly"?s:e==="__v_raw"?n:Reflect.get(os(a,e)&&e in n?a:n,e,t)}const Mo={get:pl(!1,!1)},Vo={get:pl(!1,!0)},Ho={get:pl(!0,!1)};const qr=new WeakMap,Jr=new WeakMap,Kr=new WeakMap,$o=new WeakMap;function No(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function zo(s){return s.__v_skip||!Object.isExtensible(s)?0:No(ro(s))}function On(s){return va(s)?s:kl(s,!1,To,Mo,qr)}function Yr(s){return kl(s,!1,Ro,Vo,Jr)}function pa(s){return kl(s,!0,Lo,Ho,Kr)}function kl(s,i,a,n,e){if(!_s(s)||s.__v_raw&&!(i&&s.__v_isReactive))return s;const t=e.get(s);if(t)return t;const l=zo(s);if(l===0)return s;const r=new Proxy(s,l===2?n:a);return e.set(s,r),r}function Na(s){return va(s)?Na(s.__v_raw):!!(s&&s.__v_isReactive)}function va(s){return!!(s&&s.__v_isReadonly)}function fi(s){return!!(s&&s.__v_isShallow)}function dl(s){return s?!!s.__v_raw:!1}function ds(s){const i=s&&s.__v_raw;return i?ds(i):s}function Go(s){return!os(s,"__v_skip")&&Object.isExtensible(s)&&Lr(s,"__v_skip",!0),s}const Ws=s=>_s(s)?On(s):s,ol=s=>_s(s)?pa(s):s;function js(s){return s?s.__v_isRef===!0:!1}function W(s){return Qr(s,!1)}function Ls(s){return Qr(s,!0)}function Qr(s,i){return js(s)?s:new Uo(s,i)}class Uo{constructor(i,a){this.dep=new we,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=a?i:ds(i),this._value=a?i:Ws(i),this.__v_isShallow=a}get value(){return this.dep.track(),this._value}set value(i){const a=this._rawValue,n=this.__v_isShallow||fi(i)||va(i);i=n?i:ds(i),ea(i,a)&&(this._rawValue=i,this._value=n?i:Ws(i),this.dep.trigger())}}function Ea(s){return js(s)?s.value:s}const Wo={get:(s,i,a)=>i==="__v_raw"?s:Ea(Reflect.get(s,i,a)),set:(s,i,a,n)=>{const e=s[i];return js(e)&&!js(a)?(e.value=a,!0):Reflect.set(s,i,a,n)}};function Xr(s){return Na(s)?s:new Proxy(s,Wo)}class qo{constructor(i){this.__v_isRef=!0,this._value=void 0;const a=this.dep=new we,{get:n,set:e}=i(a.track.bind(a),a.trigger.bind(a));this._get=n,this._set=e}get value(){return this._value=this._get()}set value(i){this._set(i)}}function Zr(s){return new qo(s)}class Jo{constructor(i,a,n){this._object=i,this._key=a,this._defaultValue=n,this.__v_isRef=!0,this._value=void 0}get value(){const i=this._object[this._key];return this._value=i===void 0?this._defaultValue:i}set value(i){this._object[this._key]=i}get dep(){return Co(ds(this._object),this._key)}}class Ko{constructor(i){this._getter=i,this.__v_isRef=!0,this.__v_isReadonly=!0,this._value=void 0}get value(){return this._value=this._getter()}}function an(s,i,a){return js(s)?s:ns(s)?new Ko(s):_s(s)&&arguments.length>1?Yo(s,i,a):W(s)}function Yo(s,i,a){const n=s[i];return js(n)?n:new Jo(s,i,a)}class Qo{constructor(i,a,n){this.fn=i,this.setter=a,this._value=void 0,this.dep=new we(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=mn-1,this.effect=this,this.__v_isReadonly=!a,this.isSSR=n}notify(){this.flags|=16,ms!==this&&this.dep.notify()}get value(){const i=this.dep.track();return $r(this),i&&(i.version=this.dep.version),this._value}set value(i){this.setter&&this.setter(i)}}function Xo(s,i,a=!1){let n,e;return ns(s)?n=s:(n=s.get,e=s.set),new Qo(n,e,a)}const ee={},ue=new WeakMap;let Aa;function Zo(s,i=!1,a=Aa){if(a){let n=ue.get(a);n||ue.set(a,n=[]),n.push(s)}}function s2(s,i,a=bs){const{immediate:n,deep:e,once:t,scheduler:l,augmentJob:r,call:p}=a,k=b=>e?b:fi(b)||e===!1||e===0?na(b,1):na(b);let d,o,c,A,y=!1,m=!1;if(js(s)?(o=()=>s.value,y=fi(s)):Na(s)?(o=()=>k(s),y=!0):ss(s)?(m=!0,y=s.some(b=>Na(b)||fi(b)),o=()=>s.map(b=>{if(js(b))return b.value;if(Na(b))return k(b);if(ns(b))return p?p(b,2):b()})):ns(s)?i?o=p?()=>p(s,2):s:o=()=>{if(c){ha();try{c()}finally{ra()}}const b=Aa;Aa=d;try{return p?p(s,3,[A]):s(A)}finally{Aa=b}}:o=Oi,i&&e){const b=o,O=e===!0?1/0:e;o=()=>na(b(),O)}const f=Ir(),v=()=>{d.stop(),f&&sl(f.effects,d)};if(t)if(i){const b=i;i=(...O)=>{b(...O),v()}}else{const b=o;o=()=>{b(),v()}}let C=m?new Array(s.length).fill(ee):ee;const E=b=>{if(!(!(d.flags&1)||!d.dirty&&!b))if(i){const O=d.run();if(e||y||(m?O.some((U,P)=>ea(U,C[P])):ea(O,C))){c&&c();const U=Aa;Aa=d;try{const P=[O,C===ee?void 0:m&&C[0]===ee?[]:C,A];p?p(i,3,P):i(...P),C=O}finally{Aa=U}}}else d.run()};return r&&r(E),d=new Pr(o),d.scheduler=l?()=>l(E,!1):E,A=b=>Zo(b,!1,d),c=d.onStop=()=>{const b=ue.get(d);if(b){if(p)p(b,4);else for(const O of b)O();ue.delete(d)}},i?n?E(!0):C=d.run():l?l(E.bind(null,!0),!0):d.run(),v.pause=d.pause.bind(d),v.resume=d.resume.bind(d),v.stop=v,v}function na(s,i=1/0,a){if(i<=0||!_s(s)||s.__v_skip||(a=a||new Set,a.has(s)))return s;if(a.add(s),i--,js(s))na(s.value,i,a);else if(ss(s))for(let n=0;n<s.length;n++)na(s[n],i,a);else if(_r(s)||Ha(s))s.forEach(n=>{na(n,i,a)});else if(Tr(s)){for(const n in s)na(s[n],i,a);for(const n of Object.getOwnPropertySymbols(s))Object.prototype.propertyIsEnumerable.call(s,n)&&na(s[n],i,a)}return s}/**
* @vue/runtime-core v3.5.4
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Sn(s,i,a,n){try{return n?s(...n):s()}catch(e){In(e,i,a)}}function Fi(s,i,a,n){if(ns(s)){const e=Sn(s,i,a,n);return e&&xr(e)&&e.catch(t=>{In(t,i,a)}),e}if(ss(s)){const e=[];for(let t=0;t<s.length;t++)e.push(Fi(s[t],i,a,n));return e}}function In(s,i,a,n=!0){const e=i?i.vnode:null,{errorHandler:t,throwUnhandledErrorInProduction:l}=i&&i.appContext.config||bs;if(i){let r=i.parent;const p=i.proxy,k=`https://vuejs.org/error-reference/#runtime-${a}`;for(;r;){const d=r.ec;if(d){for(let o=0;o<d.length;o++)if(d[o](s,p,k)===!1)return}r=r.parent}if(t){ha(),Sn(t,null,10,[s,p,k]),ra();return}}i2(s,a,e,n,l)}function i2(s,i,a,n=!0,e=!1){if(e)throw s;console.error(s)}let fn=!1,Ct=!1;const qs=[];let Ri=0;const za=[];let Zi=null,Oa=0;const sp=Promise.resolve();let cl=null;function Si(s){const i=cl||sp;return s?i.then(this?s.bind(this):s):i}function a2(s){let i=fn?Ri+1:0,a=qs.length;for(;i<a;){const n=i+a>>>1,e=qs[n],t=Fn(e);t<s||t===s&&e.flags&2?i=n+1:a=n}return i}function Le(s){if(!(s.flags&1)){const i=Fn(s),a=qs[qs.length-1];!a||!(s.flags&2)&&i>=Fn(a)?qs.push(s):qs.splice(a2(i),0,s),s.flags|=1,ip()}}function ip(){!fn&&!Ct&&(Ct=!0,cl=sp.then(ap))}function n2(s){ss(s)?za.push(...s):Zi&&s.id===-1?Zi.splice(Oa+1,0,s):s.flags&1||(za.push(s),s.flags|=1),ip()}function hh(s,i,a=fn?Ri+1:0){for(;a<qs.length;a++){const n=qs[a];if(n&&n.flags&2){if(s&&n.id!==s.uid)continue;qs.splice(a,1),a--,n.flags&4&&(n.flags&=-2),n(),n.flags&=-2}}}function Ee(s){if(za.length){const i=[...new Set(za)].sort((a,n)=>Fn(a)-Fn(n));if(za.length=0,Zi){Zi.push(...i);return}for(Zi=i,Oa=0;Oa<Zi.length;Oa++){const a=Zi[Oa];a.flags&4&&(a.flags&=-2),a.flags&8||a(),a.flags&=-2}Zi=null,Oa=0}}const Fn=s=>s.id==null?s.flags&2?-1:1/0:s.id;function ap(s){Ct=!1,fn=!0;try{for(Ri=0;Ri<qs.length;Ri++){const i=qs[Ri];i&&!(i.flags&8)&&(i.flags&4&&(i.flags&=-2),Sn(i,i.i,i.i?15:14),i.flags&=-2)}}finally{for(;Ri<qs.length;Ri++){const i=qs[Ri];i&&(i.flags&=-2)}Ri=0,qs.length=0,Ee(),fn=!1,cl=null,(qs.length||za.length)&&ap()}}let Ai=null,np=null;function me(s){const i=Ai;return Ai=s,np=s&&s.type.__scopeId||null,i}function e2(s,i=Ai,a){if(!i||s._n)return s;const n=(...e)=>{n._d&&Eh(-1);const t=me(i);let l;try{l=s(...e)}finally{me(t),n._d&&Eh(1)}return l};return n._n=!0,n._c=!0,n._d=!0,n}function ji(s,i,a,n){const e=s.dirs,t=i&&i.dirs;for(let l=0;l<e.length;l++){const r=e[l];t&&(r.oldValue=t[l].value);let p=r.dir[n];p&&(ha(),Fi(p,a,8,[s.el,r,s,i]),ra())}}const t2=Symbol("_vte"),ep=s=>s.__isTeleport,sa=Symbol("_leaveCb"),te=Symbol("_enterCb");function tp(){const s={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ys(()=>{s.isMounted=!0}),op(()=>{s.isUnmounting=!0}),s}const di=[Function,Array],lp={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:di,onEnter:di,onAfterEnter:di,onEnterCancelled:di,onBeforeLeave:di,onLeave:di,onAfterLeave:di,onLeaveCancelled:di,onBeforeAppear:di,onAppear:di,onAfterAppear:di,onAppearCancelled:di},hp=s=>{const i=s.subTree;return i.component?hp(i.component):i},l2={name:"BaseTransition",props:lp,setup(s,{slots:i}){const a=nn(),n=tp();return()=>{const e=i.default&&Bl(i.default(),!0);if(!e||!e.length)return;const t=rp(e),l=ds(s),{mode:r}=l;if(n.isLeaving)return Qe(t);const p=rh(t);if(!p)return Qe(t);let k=Cn(p,l,n,a,c=>k=c);p.type!==ti&&fa(p,k);const d=a.subTree,o=d&&rh(d);if(o&&o.type!==ti&&!ga(p,o)&&hp(a).type!==ti){const c=Cn(o,l,n,a);if(fa(o,c),r==="out-in"&&p.type!==ti)return n.isLeaving=!0,c.afterLeave=()=>{n.isLeaving=!1,a.job.flags&8||a.update(),delete c.afterLeave},Qe(t);r==="in-out"&&p.type!==ti&&(c.delayLeave=(A,y,m)=>{const f=pp(n,o);f[String(o.key)]=o,A[sa]=()=>{y(),A[sa]=void 0,delete k.delayedLeave},k.delayedLeave=m})}return t}}};function rp(s){let i=s[0];if(s.length>1){for(const a of s)if(a.type!==ti){i=a;break}}return i}const h2=l2;function pp(s,i){const{leavingVNodes:a}=s;let n=a.get(i.type);return n||(n=Object.create(null),a.set(i.type,n)),n}function Cn(s,i,a,n,e){const{appear:t,mode:l,persisted:r=!1,onBeforeEnter:p,onEnter:k,onAfterEnter:d,onEnterCancelled:o,onBeforeLeave:c,onLeave:A,onAfterLeave:y,onLeaveCancelled:m,onBeforeAppear:f,onAppear:v,onAfterAppear:C,onAppearCancelled:E}=i,b=String(s.key),O=pp(a,s),U=(V,w)=>{V&&Fi(V,n,9,w)},P=(V,w)=>{const $=w[1];U(V,w),ss(V)?V.every(j=>j.length<=1)&&$():V.length<=1&&$()},Y={mode:l,persisted:r,beforeEnter(V){let w=p;if(!a.isMounted)if(t)w=f||p;else return;V[sa]&&V[sa](!0);const $=O[b];$&&ga(s,$)&&$.el[sa]&&$.el[sa](),U(w,[V])},enter(V){let w=k,$=d,j=o;if(!a.isMounted)if(t)w=v||k,$=C||d,j=E||o;else return;let X=!1;const Bs=V[te]=Fs=>{X||(X=!0,Fs?U(j,[V]):U($,[V]),Y.delayedLeave&&Y.delayedLeave(),V[te]=void 0)};w?P(w,[V,Bs]):Bs()},leave(V,w){const $=String(s.key);if(V[te]&&V[te](!0),a.isUnmounting)return w();U(c,[V]);let j=!1;const X=V[sa]=Bs=>{j||(j=!0,w(),Bs?U(m,[V]):U(y,[V]),V[sa]=void 0,O[$]===s&&delete O[$])};O[$]=s,A?P(A,[V,X]):X()},clone(V){const w=Cn(V,i,a,n,e);return e&&e(w),w}};return Y}function Qe(s){if(Pn(s))return s=ta(s),s.children=null,s}function rh(s){if(!Pn(s))return ep(s.type)&&s.children?rp(s.children):s;const{shapeFlag:i,children:a}=s;if(a){if(i&16)return a[0];if(i&32&&ns(a.default))return a.default()}}function fa(s,i){s.shapeFlag&6&&s.component?(s.transition=i,fa(s.component.subTree,i)):s.shapeFlag&128?(s.ssContent.transition=i.clone(s.ssContent),s.ssFallback.transition=i.clone(s.ssFallback)):s.transition=i}function Bl(s,i=!1,a){let n=[],e=0;for(let t=0;t<s.length;t++){let l=s[t];const r=a==null?l.key:String(a)+String(l.key!=null?l.key:t);l.type===ei?(l.patchFlag&128&&e++,n=n.concat(Bl(l.children,i,r))):(i||l.type!==ti)&&n.push(r!=null?ta(l,{key:r}):l)}if(e>1)for(let t=0;t<n.length;t++)n[t].patchFlag=-2;return n}/*! #__NO_SIDE_EFFECTS__ */function S(s,i){return ns(s)?Os({name:s.name},i,{setup:s}):s}function Al(s){s.ids=[s.ids[0]+s.ids[2]+++"-",0,0]}function ve(s,i,a,n,e=!1){if(ss(s)){s.forEach((y,m)=>ve(y,i&&(ss(i)?i[m]:i),a,n,e));return}if(Ga(n)&&!e)return;const t=n.shapeFlag&4?vl(n.component):n.el,l=e?null:t,{i:r,r:p}=s,k=i&&i.r,d=r.refs===bs?r.refs={}:r.refs,o=r.setupState,c=ds(o),A=o===bs?()=>!1:y=>os(c,y);if(k!=null&&k!==p&&(Ss(k)?(d[k]=null,A(k)&&(o[k]=null)):js(k)&&(k.value=null)),ns(p))Sn(p,r,12,[l,d]);else{const y=Ss(p),m=js(p);if(y||m){const f=()=>{if(s.f){const v=y?A(p)?o[p]:d[p]:p.value;e?ss(v)&&sl(v,t):ss(v)?v.includes(t)||v.push(t):y?(d[p]=[t],A(p)&&(o[p]=d[p])):(p.value=[t],s.k&&(d[s.k]=p.value))}else y?(d[p]=l,A(p)&&(o[p]=l)):m&&(p.value=l,s.k&&(d[s.k]=l))};l?(f.id=-1,ni(f,a)):f()}}}let ph=!1;const Ra=()=>{ph||(console.error("Hydration completed but contains mismatches."),ph=!0)},r2=s=>s.namespaceURI.includes("svg")&&s.tagName!=="foreignObject",p2=s=>s.namespaceURI.includes("MathML"),le=s=>{if(s.nodeType===1){if(r2(s))return"svg";if(p2(s))return"mathml"}},Pa=s=>s.nodeType===8;function k2(s){const{mt:i,p:a,o:{patchProp:n,createText:e,nextSibling:t,parentNode:l,remove:r,insert:p,createComment:k}}=s,d=(E,b)=>{if(!b.hasChildNodes()){a(null,E,b),Ee(),b._vnode=E;return}o(b.firstChild,E,null,null,null),Ee(),b._vnode=E},o=(E,b,O,U,P,Y=!1)=>{Y=Y||!!b.dynamicChildren;const V=Pa(E)&&E.data==="[",w=()=>m(E,b,O,U,P,V),{type:$,ref:j,shapeFlag:X,patchFlag:Bs}=b;let Fs=E.nodeType;b.el=E,Bs===-2&&(Y=!1,b.dynamicChildren=null);let q=null;switch($){case ma:Fs!==3?b.children===""?(p(b.el=e(""),l(E),E),q=E):q=w():(E.data!==b.children&&(Ra(),E.data=b.children),q=t(E));break;case ti:C(E)?(q=t(E),v(b.el=E.content.firstChild,E,O)):Fs!==8||V?q=w():q=t(E);break;case An:if(V&&(E=t(E),Fs=E.nodeType),Fs===1||Fs===3){q=E;const is=!b.children.length;for(let K=0;K<b.staticCount;K++)is&&(b.children+=q.nodeType===1?q.outerHTML:q.data),K===b.staticCount-1&&(b.anchor=q),q=t(q);return V?t(q):q}else w();break;case ei:V?q=y(E,b,O,U,P,Y):q=w();break;default:if(X&1)(Fs!==1||b.type.toLowerCase()!==E.tagName.toLowerCase())&&!C(E)?q=w():q=c(E,b,O,U,P,Y);else if(X&6){b.slotScopeIds=P;const is=l(E);if(V?q=f(E):Pa(E)&&E.data==="teleport start"?q=f(E,E.data,"teleport end"):q=t(E),i(b,is,null,O,U,le(is),Y),Ga(b)){let K;V?(K=Is(ei),K.anchor=q?q.previousSibling:is.lastChild):K=E.nodeType===3?Sp(""):Is("div"),K.el=E,b.component.subTree=K}}else X&64?Fs!==8?q=w():q=b.type.hydrate(E,b,O,U,P,Y,s,A):X&128&&(q=b.type.hydrate(E,b,O,U,le(l(E)),P,Y,s,o))}return j!=null&&ve(j,null,U,b),q},c=(E,b,O,U,P,Y)=>{Y=Y||!!b.dynamicChildren;const{type:V,props:w,patchFlag:$,shapeFlag:j,dirs:X,transition:Bs}=b,Fs=V==="input"||V==="option";if(Fs||$!==-1){X&&ji(b,null,O,"created");let q=!1;if(C(E)){q=bp(U,Bs)&&O&&O.vnode.props&&O.vnode.props.appear;const K=E.content.firstChild;q&&Bs.beforeEnter(K),v(K,E,O),b.el=E=K}if(j&16&&!(w&&(w.innerHTML||w.textContent))){let K=A(E.firstChild,b,E,O,U,P,Y);for(;K;){he(E,1)||Ra();const us=K;K=K.nextSibling,r(us)}}else j&8&&E.textContent!==b.children&&(he(E,0)||Ra(),E.textContent=b.children);if(w){if(Fs||!Y||$&48){const K=E.tagName.includes("-");for(const us in w)(Fs&&(us.endsWith("value")||us==="indeterminate")||Rn(us)&&!$a(us)||us[0]==="."||K)&&n(E,us,null,w[us],void 0,O)}else if(w.onClick)n(E,"onClick",null,w.onClick,void 0,O);else if($&4&&Na(w.style))for(const K in w.style)w.style[K]}let is;(is=w&&w.onVnodeBeforeMount)&&oi(is,O,b),X&&ji(b,null,O,"beforeMount"),((is=w&&w.onVnodeMounted)||X||q)&&Rp(()=>{is&&oi(is,O,b),q&&Bs.enter(E),X&&ji(b,null,O,"mounted")},U)}return E.nextSibling},A=(E,b,O,U,P,Y,V)=>{V=V||!!b.dynamicChildren;const w=b.children,$=w.length;for(let j=0;j<$;j++){const X=V?w[j]:w[j]=Bi(w[j]),Bs=X.type===ma;E?(Bs&&!V&&j+1<$&&Bi(w[j+1]).type===ma&&(p(e(E.data.slice(X.children.length)),O,t(E)),E.data=X.children),E=o(E,X,U,P,Y,V)):Bs&&!X.children?p(X.el=e(""),O):(he(O,1)||Ra(),a(null,X,O,null,U,P,le(O),Y))}return E},y=(E,b,O,U,P,Y)=>{const{slotScopeIds:V}=b;V&&(P=P?P.concat(V):V);const w=l(E),$=A(t(E),b,w,O,U,P,Y);return $&&Pa($)&&$.data==="]"?t(b.anchor=$):(Ra(),p(b.anchor=k("]"),w,$),$)},m=(E,b,O,U,P,Y)=>{if(he(E.parentElement,1)||Ra(),b.el=null,Y){const $=f(E);for(;;){const j=t(E);if(j&&j!==$)r(j);else break}}const V=t(E),w=l(E);return r(E),a(null,b,w,V,O,U,le(w),P),V},f=(E,b="[",O="]")=>{let U=0;for(;E;)if(E=t(E),E&&Pa(E)&&(E.data===b&&U++,E.data===O)){if(U===0)return t(E);U--}return E},v=(E,b,O)=>{const U=b.parentNode;U&&U.replaceChild(E,b);let P=O;for(;P;)P.vnode.el===b&&(P.vnode.el=P.subTree.el=E),P=P.parent},C=E=>E.nodeType===1&&E.tagName.toLowerCase()==="template";return[d,o]}const kh="data-allow-mismatch",d2={0:"text",1:"children",2:"class",3:"style",4:"attribute"};function he(s,i){if(i===0||i===1)for(;s&&!s.hasAttribute(kh);)s=s.parentElement;const a=s&&s.getAttribute(kh);if(a==null)return!1;if(a==="")return!0;{const n=a.split(",");return i===0&&n.includes("children")?!0:a.split(",").includes(d2[i])}}function o2(s,i){if(Pa(s)&&s.data==="["){let a=1,n=s.nextSibling;for(;n;){if(n.nodeType===1)i(n);else if(Pa(n))if(n.data==="]"){if(--a===0)break}else n.data==="["&&a++;n=n.nextSibling}}else i(s)}const Ga=s=>!!s.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function gl(s){ns(s)&&(s={loader:s});const{loader:i,loadingComponent:a,errorComponent:n,delay:e=200,hydrate:t,timeout:l,suspensible:r=!0,onError:p}=s;let k=null,d,o=0;const c=()=>(o++,k=null,A()),A=()=>{let y;return k||(y=k=i().catch(m=>{if(m=m instanceof Error?m:new Error(String(m)),p)return new Promise((f,v)=>{p(m,()=>f(c()),()=>v(m),o+1)});throw m}).then(m=>y!==k&&k?k:(m&&(m.__esModule||m[Symbol.toStringTag]==="Module")&&(m=m.default),d=m,m)))};return S({name:"AsyncComponentWrapper",__asyncLoader:A,__asyncHydrate(y,m,f){const v=t?()=>{const C=t(f,E=>o2(y,E));C&&(m.bum||(m.bum=[])).push(C)}:f;d?v():A().then(()=>!m.isUnmounted&&v())},get __asyncResolved(){return d},setup(){const y=Ms;if(Al(y),d)return()=>Xe(d,y);const m=E=>{k=null,In(E,y,13,!n)};if(r&&y.suspense||Vn)return A().then(E=>()=>Xe(E,y)).catch(E=>(m(E),()=>n?Is(n,{error:E}):null));const f=W(!1),v=W(),C=W(!!e);return e&&setTimeout(()=>{C.value=!1},e),l!=null&&setTimeout(()=>{if(!f.value&&!v.value){const E=new Error(`Async component timed out after ${l}ms.`);m(E),v.value=E}},l),A().then(()=>{f.value=!0,y.parent&&Pn(y.parent.vnode)&&Le(y.parent.update)}).catch(E=>{m(E),v.value=E}),()=>{if(f.value&&d)return Xe(d,y);if(v.value&&n)return Is(n,{error:v.value});if(a&&!C.value)return Is(a)}}})}function Xe(s,i){const{ref:a,props:n,children:e,ce:t}=i.vnode,l=Is(s,n,e);return l.ref=a,l.ce=t,delete i.vnode.ce,l}const Pn=s=>s.type.__isKeepAlive;function c2(s,i){kp(s,"a",i)}function B2(s,i){kp(s,"da",i)}function kp(s,i,a=Ms){const n=s.__wdc||(s.__wdc=()=>{let e=a;for(;e;){if(e.isDeactivated)return;e=e.parent}return s()});if(Re(i,n,a),a){let e=a.parent;for(;e&&e.parent;)Pn(e.parent.vnode)&&A2(n,i,a,e),e=e.parent}}function A2(s,i,a,n){const e=Re(i,s,n,!0);Ca(()=>{sl(n[i],e)},a)}function Re(s,i,a=Ms,n=!1){if(a){const e=a[s]||(a[s]=[]),t=i.__weh||(i.__weh=(...l)=>{ha();const r=Mn(a),p=Fi(i,a,s,l);return r(),ra(),p});return n?e.unshift(t):e.push(t),t}}const qi=s=>(i,a=Ms)=>{(!Vn||s==="sp")&&Re(s,(...n)=>i(...n),a)},g2=qi("bm"),ys=qi("m"),y2=qi("bu"),dp=qi("u"),op=qi("bum"),Ca=qi("um"),u2=qi("sp"),E2=qi("rtg"),m2=qi("rtc");function v2(s,i=Ms){Re("ec",s,i)}const cp="components";function gi(s,i){return F2(cp,s,!0,i)||s}const f2=Symbol.for("v-ndc");function F2(s,i,a=!0,n=!1){const e=Ai||Ms;if(e){const t=e.type;if(s===cp){const r=rc(t,!1);if(r&&(r===i||r===pi(i)||r===jn(pi(i))))return t}const l=dh(e[s]||t[s],i)||dh(e.appContext[s],i);return!l&&n?t:l}}function dh(s,i){return s&&(s[i]||s[pi(i)]||s[jn(pi(i))])}const bt=s=>s?Ip(s)?vl(s):bt(s.parent):null,Bn=Os(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>bt(s.parent),$root:s=>bt(s.root),$host:s=>s.ce,$emit:s=>s.emit,$options:s=>yl(s),$forceUpdate:s=>s.f||(s.f=()=>{Le(s.update)}),$nextTick:s=>s.n||(s.n=Si.bind(s.proxy)),$watch:s=>z2.bind(s)}),Ze=(s,i)=>s!==bs&&!s.__isScriptSetup&&os(s,i),C2={get({_:s},i){if(i==="__v_skip")return!0;const{ctx:a,setupState:n,data:e,props:t,accessCache:l,type:r,appContext:p}=s;let k;if(i[0]!=="$"){const A=l[i];if(A!==void 0)switch(A){case 1:return n[i];case 2:return e[i];case 4:return a[i];case 3:return t[i]}else{if(Ze(n,i))return l[i]=1,n[i];if(e!==bs&&os(e,i))return l[i]=2,e[i];if((k=s.propsOptions[0])&&os(k,i))return l[i]=3,t[i];if(a!==bs&&os(a,i))return l[i]=4,a[i];Dt&&(l[i]=0)}}const d=Bn[i];let o,c;if(d)return i==="$attrs"&&Ns(s.attrs,"get",""),d(s);if((o=r.__cssModules)&&(o=o[i]))return o;if(a!==bs&&os(a,i))return l[i]=4,a[i];if(c=p.config.globalProperties,os(c,i))return c[i]},set({_:s},i,a){const{data:n,setupState:e,ctx:t}=s;return Ze(e,i)?(e[i]=a,!0):n!==bs&&os(n,i)?(n[i]=a,!0):os(s.props,i)||i[0]==="$"&&i.slice(1)in s?!1:(t[i]=a,!0)},has({_:{data:s,setupState:i,accessCache:a,ctx:n,appContext:e,propsOptions:t}},l){let r;return!!a[l]||s!==bs&&os(s,l)||Ze(i,l)||(r=t[0])&&os(r,l)||os(n,l)||os(Bn,l)||os(e.config.globalProperties,l)},defineProperty(s,i,a){return a.get!=null?s._.accessCache[i]=0:os(a,"value")&&this.set(s,i,a.value,null),Reflect.defineProperty(s,i,a)}};function oh(s){return ss(s)?s.reduce((i,a)=>(i[a]=null,i),{}):s}let Dt=!0;function b2(s){const i=yl(s),a=s.proxy,n=s.ctx;Dt=!1,i.beforeCreate&&ch(i.beforeCreate,s,"bc");const{data:e,computed:t,methods:l,watch:r,provide:p,inject:k,created:d,beforeMount:o,mounted:c,beforeUpdate:A,updated:y,activated:m,deactivated:f,beforeDestroy:v,beforeUnmount:C,destroyed:E,unmounted:b,render:O,renderTracked:U,renderTriggered:P,errorCaptured:Y,serverPrefetch:V,expose:w,inheritAttrs:$,components:j,directives:X,filters:Bs}=i;if(k&&D2(k,n,null),l)for(const is in l){const K=l[is];ns(K)&&(n[is]=K.bind(a))}if(e){const is=e.call(a,a);_s(is)&&(s.data=On(is))}if(Dt=!0,t)for(const is in t){const K=t[is],us=ns(K)?K.bind(a,a):ns(K.get)?K.get.bind(a,a):Oi,wi=!ns(K)&&ns(K.set)?K.set.bind(a):Oi,ki=F({get:us,set:wi});Object.defineProperty(n,is,{enumerable:!0,configurable:!0,get:()=>ki.value,set:Ps=>ki.value=Ps})}if(r)for(const is in r)Bp(r[is],n,a,is);if(p){const is=ns(p)?p.call(a):p;Reflect.ownKeys(is).forEach(K=>{yi(K,is[K])})}d&&ch(d,s,"c");function q(is,K){ss(K)?K.forEach(us=>is(us.bind(a))):K&&is(K.bind(a))}if(q(g2,o),q(ys,c),q(y2,A),q(dp,y),q(c2,m),q(B2,f),q(v2,Y),q(m2,U),q(E2,P),q(op,C),q(Ca,b),q(u2,V),ss(w))if(w.length){const is=s.exposed||(s.exposed={});w.forEach(K=>{Object.defineProperty(is,K,{get:()=>a[K],set:us=>a[K]=us})})}else s.exposed||(s.exposed={});O&&s.render===Oi&&(s.render=O),$!=null&&(s.inheritAttrs=$),j&&(s.components=j),X&&(s.directives=X),V&&Al(s)}function D2(s,i,a=Oi){ss(s)&&(s=_t(s));for(const n in s){const e=s[n];let t;_s(e)?"default"in e?t=fs(e.from||n,e.default,!0):t=fs(e.from||n):t=fs(e),js(t)?Object.defineProperty(i,n,{enumerable:!0,configurable:!0,get:()=>t.value,set:l=>t.value=l}):i[n]=t}}function ch(s,i,a){Fi(ss(s)?s.map(n=>n.bind(i.proxy)):s.bind(i.proxy),i,a)}function Bp(s,i,a,n){let e=n.includes(".")?wp(a,n):()=>a[n];if(Ss(s)){const t=i[s];ns(t)&&ts(e,t)}else if(ns(s))ts(e,s.bind(a));else if(_s(s))if(ss(s))s.forEach(t=>Bp(t,i,a,n));else{const t=ns(s.handler)?s.handler.bind(a):i[s.handler];ns(t)&&ts(e,t,s)}}function yl(s){const i=s.type,{mixins:a,extends:n}=i,{mixins:e,optionsCache:t,config:{optionMergeStrategies:l}}=s.appContext,r=t.get(i);let p;return r?p=r:!e.length&&!a&&!n?p=i:(p={},e.length&&e.forEach(k=>fe(p,k,l,!0)),fe(p,i,l)),_s(i)&&t.set(i,p),p}function fe(s,i,a,n=!1){const{mixins:e,extends:t}=i;t&&fe(s,t,a,!0),e&&e.forEach(l=>fe(s,l,a,!0));for(const l in i)if(!(n&&l==="expose")){const r=_2[l]||a&&a[l];s[l]=r?r(s[l],i[l]):i[l]}return s}const _2={data:Bh,props:Ah,emits:Ah,methods:dn,computed:dn,beforeCreate:Gs,created:Gs,beforeMount:Gs,mounted:Gs,beforeUpdate:Gs,updated:Gs,beforeDestroy:Gs,beforeUnmount:Gs,destroyed:Gs,unmounted:Gs,activated:Gs,deactivated:Gs,errorCaptured:Gs,serverPrefetch:Gs,components:dn,directives:dn,watch:w2,provide:Bh,inject:x2};function Bh(s,i){return i?s?function(){return Os(ns(s)?s.call(this,this):s,ns(i)?i.call(this,this):i)}:i:s}function x2(s,i){return dn(_t(s),_t(i))}function _t(s){if(ss(s)){const i={};for(let a=0;a<s.length;a++)i[s[a]]=s[a];return i}return s}function Gs(s,i){return s?[...new Set([].concat(s,i))]:i}function dn(s,i){return s?Os(Object.create(null),s,i):i}function Ah(s,i){return s?ss(s)&&ss(i)?[...new Set([...s,...i])]:Os(Object.create(null),oh(s),oh(i??{})):i}function w2(s,i){if(!s)return i;if(!i)return s;const a=Os(Object.create(null),s);for(const n in i)a[n]=Gs(s[n],i[n]);return a}function Ap(){return{app:null,config:{isNativeTag:lo,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let T2=0;function L2(s,i){return function(n,e=null){ns(n)||(n=Os({},n)),e!=null&&!_s(e)&&(e=null);const t=Ap(),l=new WeakSet,r=[];let p=!1;const k=t.app={_uid:T2++,_component:n,_props:e,_container:null,_context:t,_instance:null,version:kc,get config(){return t.config},set config(d){},use(d,...o){return l.has(d)||(d&&ns(d.install)?(l.add(d),d.install(k,...o)):ns(d)&&(l.add(d),d(k,...o))),k},mixin(d){return t.mixins.includes(d)||t.mixins.push(d),k},component(d,o){return o?(t.components[d]=o,k):t.components[d]},directive(d,o){return o?(t.directives[d]=o,k):t.directives[d]},mount(d,o,c){if(!p){const A=k._ceVNode||Is(n,e);return A.appContext=t,c===!0?c="svg":c===!1&&(c=void 0),o&&i?i(A,d):s(A,d,c),p=!0,k._container=d,d.__vue_app__=k,vl(A.component)}},onUnmount(d){r.push(d)},unmount(){p&&(Fi(r,k._instance,16),s(null,k._container),delete k._container.__vue_app__)},provide(d,o){return t.provides[d]=o,k},runWithContext(d){const o=Ua;Ua=k;try{return d()}finally{Ua=o}}};return k}}let Ua=null;function yi(s,i){if(Ms){let a=Ms.provides;const n=Ms.parent&&Ms.parent.provides;n===a&&(a=Ms.provides=Object.create(n)),a[s]=i}}function fs(s,i,a=!1){const n=Ms||Ai;if(n||Ua){const e=Ua?Ua._context.provides:n?n.parent==null?n.vnode.appContext&&n.vnode.appContext.provides:n.parent.provides:void 0;if(e&&s in e)return e[s];if(arguments.length>1)return a&&ns(i)?i.call(n&&n.proxy):i}}const gp={},yp=()=>Object.create(gp),up=s=>Object.getPrototypeOf(s)===gp;function R2(s,i,a,n=!1){const e={},t=yp();s.propsDefaults=Object.create(null),Ep(s,i,e,t);for(const l in s.propsOptions[0])l in e||(e[l]=void 0);a?s.props=n?e:Yr(e):s.type.props?s.props=e:s.props=t,s.attrs=t}function j2(s,i,a,n){const{props:e,attrs:t,vnode:{patchFlag:l}}=s,r=ds(e),[p]=s.propsOptions;let k=!1;if((n||l>0)&&!(l&16)){if(l&8){const d=s.vnode.dynamicProps;for(let o=0;o<d.length;o++){let c=d[o];if(je(s.emitsOptions,c))continue;const A=i[c];if(p)if(os(t,c))A!==t[c]&&(t[c]=A,k=!0);else{const y=pi(c);e[y]=xt(p,r,y,A,s,!1)}else A!==t[c]&&(t[c]=A,k=!0)}}}else{Ep(s,i,e,t)&&(k=!0);let d;for(const o in r)(!i||!os(i,o)&&((d=Fa(o))===o||!os(i,d)))&&(p?a&&(a[o]!==void 0||a[d]!==void 0)&&(e[o]=xt(p,r,o,void 0,s,!0)):delete e[o]);if(t!==r)for(const o in t)(!i||!os(i,o))&&(delete t[o],k=!0)}k&&Ui(s.attrs,"set","")}function Ep(s,i,a,n){const[e,t]=s.propsOptions;let l=!1,r;if(i)for(let p in i){if($a(p))continue;const k=i[p];let d;e&&os(e,d=pi(p))?!t||!t.includes(d)?a[d]=k:(r||(r={}))[d]=k:je(s.emitsOptions,p)||(!(p in n)||k!==n[p])&&(n[p]=k,l=!0)}if(t){const p=ds(a),k=r||bs;for(let d=0;d<t.length;d++){const o=t[d];a[o]=xt(e,p,o,k[o],s,!os(k,o))}}return l}function xt(s,i,a,n,e,t){const l=s[a];if(l!=null){const r=os(l,"default");if(r&&n===void 0){const p=l.default;if(l.type!==Function&&!l.skipFactory&&ns(p)){const{propsDefaults:k}=e;if(a in k)n=k[a];else{const d=Mn(e);n=k[a]=p.call(null,i),d()}}else n=p;e.ce&&e.ce._setProp(a,n)}l[0]&&(t&&!r?n=!1:l[1]&&(n===""||n===Fa(a))&&(n=!0))}return n}const O2=new WeakMap;function mp(s,i,a=!1){const n=a?O2:i.propsCache,e=n.get(s);if(e)return e;const t=s.props,l={},r=[];let p=!1;if(!ns(s)){const d=o=>{p=!0;const[c,A]=mp(o,i,!0);Os(l,c),A&&r.push(...A)};!a&&i.mixins.length&&i.mixins.forEach(d),s.extends&&d(s.extends),s.mixins&&s.mixins.forEach(d)}if(!t&&!p)return _s(s)&&n.set(s,Va),Va;if(ss(t))for(let d=0;d<t.length;d++){const o=pi(t[d]);gh(o)&&(l[o]=bs)}else if(t)for(const d in t){const o=pi(d);if(gh(o)){const c=t[d],A=l[o]=ss(c)||ns(c)?{type:c}:Os({},c),y=A.type;let m=!1,f=!0;if(ss(y))for(let v=0;v<y.length;++v){const C=y[v],E=ns(C)&&C.name;if(E==="Boolean"){m=!0;break}else E==="String"&&(f=!1)}else m=ns(y)&&y.name==="Boolean";A[0]=m,A[1]=f,(m||os(A,"default"))&&r.push(o)}}const k=[l,r];return _s(s)&&n.set(s,k),k}function gh(s){return s[0]!=="$"&&!$a(s)}const vp=s=>s[0]==="_"||s==="$stable",ul=s=>ss(s)?s.map(Bi):[Bi(s)],S2=(s,i,a)=>{if(i._n)return i;const n=e2((...e)=>ul(i(...e)),a);return n._c=!1,n},fp=(s,i,a)=>{const n=s._ctx;for(const e in s){if(vp(e))continue;const t=s[e];if(ns(t))i[e]=S2(e,t,n);else if(t!=null){const l=ul(t);i[e]=()=>l}}},Fp=(s,i)=>{const a=ul(i);s.slots.default=()=>a},Cp=(s,i,a)=>{for(const n in i)(a||n!=="_")&&(s[n]=i[n])},I2=(s,i,a)=>{const n=s.slots=yp();if(s.vnode.shapeFlag&32){const e=i._;e?(Cp(n,i,a),a&&Lr(n,"_",e,!0)):fp(i,n)}else i&&Fp(s,i)},P2=(s,i,a)=>{const{vnode:n,slots:e}=s;let t=!0,l=bs;if(n.shapeFlag&32){const r=i._;r?a&&r===1?t=!1:Cp(e,i,a):(t=!i.$stable,fp(i,e)),l=i}else i&&(Fp(s,i),l={default:1});if(t)for(const r in e)!vp(r)&&l[r]==null&&delete e[r]},ni=Rp;function M2(s){return V2(s,k2)}function V2(s,i){const a=Rr();a.__VUE__=!0;const{insert:n,remove:e,patchProp:t,createElement:l,createText:r,createComment:p,setText:k,setElementText:d,parentNode:o,nextSibling:c,setScopeId:A=Oi,insertStaticContent:y}=s,m=(g,u,D,T=null,x=null,L=null,N=void 0,M=null,I=!!u.dynamicChildren)=>{if(g===u)return;g&&!ga(g,u)&&(T=_(g),Ps(g,x,L,!0),g=null),u.patchFlag===-2&&(I=!1,u.dynamicChildren=null);const{type:R,ref:Z,shapeFlag:G}=u;switch(R){case ma:f(g,u,D,T);break;case ti:v(g,u,D,T);break;case An:g==null&&C(u,D,T,N);break;case ei:j(g,u,D,T,x,L,N,M,I);break;default:G&1?O(g,u,D,T,x,L,N,M,I):G&6?X(g,u,D,T,x,L,N,M,I):(G&64||G&128)&&R.process(g,u,D,T,x,L,N,M,I,J)}Z!=null&&x&&ve(Z,g&&g.ref,L,u||g,!u)},f=(g,u,D,T)=>{if(g==null)n(u.el=r(u.children),D,T);else{const x=u.el=g.el;u.children!==g.children&&k(x,u.children)}},v=(g,u,D,T)=>{g==null?n(u.el=p(u.children||""),D,T):u.el=g.el},C=(g,u,D,T)=>{[g.el,g.anchor]=y(g.children,u,D,T,g.el,g.anchor)},E=({el:g,anchor:u},D,T)=>{let x;for(;g&&g!==u;)x=c(g),n(g,D,T),g=x;n(u,D,T)},b=({el:g,anchor:u})=>{let D;for(;g&&g!==u;)D=c(g),e(g),g=D;e(u)},O=(g,u,D,T,x,L,N,M,I)=>{u.type==="svg"?N="svg":u.type==="math"&&(N="mathml"),g==null?U(u,D,T,x,L,N,M,I):V(g,u,x,L,N,M,I)},U=(g,u,D,T,x,L,N,M)=>{let I,R;const{props:Z,shapeFlag:G,transition:Q,dirs:as}=g;if(I=g.el=l(g.type,L,Z&&Z.is,Z),G&8?d(I,g.children):G&16&&Y(g.children,I,null,T,x,st(g,L),N,M),as&&ji(g,null,T,"created"),P(I,g,g.scopeId,N,T),Z){for(const Cs in Z)Cs!=="value"&&!$a(Cs)&&t(I,Cs,null,Z[Cs],L,T);"value"in Z&&t(I,"value",null,Z.value,L),(R=Z.onVnodeBeforeMount)&&oi(R,T,g)}as&&ji(g,null,T,"beforeMount");const rs=bp(x,Q);rs&&Q.beforeEnter(I),n(I,u,D),((R=Z&&Z.onVnodeMounted)||rs||as)&&ni(()=>{R&&oi(R,T,g),rs&&Q.enter(I),as&&ji(g,null,T,"mounted")},x)},P=(g,u,D,T,x)=>{if(D&&A(g,D),T)for(let L=0;L<T.length;L++)A(g,T[L]);if(x){let L=x.subTree;if(u===L||Lp(L.type)&&(L.ssContent===u||L.ssFallback===u)){const N=x.vnode;P(g,N,N.scopeId,N.slotScopeIds,x.parent)}}},Y=(g,u,D,T,x,L,N,M,I=0)=>{for(let R=I;R<g.length;R++){const Z=g[R]=M?ia(g[R]):Bi(g[R]);m(null,Z,u,D,T,x,L,N,M)}},V=(g,u,D,T,x,L,N)=>{const M=u.el=g.el;let{patchFlag:I,dynamicChildren:R,dirs:Z}=u;I|=g.patchFlag&16;const G=g.props||bs,Q=u.props||bs;let as;if(D&&oa(D,!1),(as=Q.onVnodeBeforeUpdate)&&oi(as,D,u,g),Z&&ji(u,g,D,"beforeUpdate"),D&&oa(D,!0),(G.innerHTML&&Q.innerHTML==null||G.textContent&&Q.textContent==null)&&d(M,""),R?w(g.dynamicChildren,R,M,D,T,st(u,x),L):N||K(g,u,M,null,D,T,st(u,x),L,!1),I>0){if(I&16)$(M,G,Q,D,x);else if(I&2&&G.class!==Q.class&&t(M,"class",null,Q.class,x),I&4&&t(M,"style",G.style,Q.style,x),I&8){const rs=u.dynamicProps;for(let Cs=0;Cs<rs.length;Cs++){const As=rs[Cs],si=G[As],Hs=Q[As];(Hs!==si||As==="value")&&t(M,As,si,Hs,x,D)}}I&1&&g.children!==u.children&&d(M,u.children)}else!N&&R==null&&$(M,G,Q,D,x);((as=Q.onVnodeUpdated)||Z)&&ni(()=>{as&&oi(as,D,u,g),Z&&ji(u,g,D,"updated")},T)},w=(g,u,D,T,x,L,N)=>{for(let M=0;M<u.length;M++){const I=g[M],R=u[M],Z=I.el&&(I.type===ei||!ga(I,R)||I.shapeFlag&70)?o(I.el):D;m(I,R,Z,null,T,x,L,N,!0)}},$=(g,u,D,T,x)=>{if(u!==D){if(u!==bs)for(const L in u)!$a(L)&&!(L in D)&&t(g,L,u[L],null,x,T);for(const L in D){if($a(L))continue;const N=D[L],M=u[L];N!==M&&L!=="value"&&t(g,L,M,N,x,T)}"value"in D&&t(g,"value",u.value,D.value,x)}},j=(g,u,D,T,x,L,N,M,I)=>{const R=u.el=g?g.el:r(""),Z=u.anchor=g?g.anchor:r("");let{patchFlag:G,dynamicChildren:Q,slotScopeIds:as}=u;as&&(M=M?M.concat(as):as),g==null?(n(R,D,T),n(Z,D,T),Y(u.children||[],D,Z,x,L,N,M,I)):G>0&&G&64&&Q&&g.dynamicChildren?(w(g.dynamicChildren,Q,D,x,L,N,M),(u.key!=null||x&&u===x.subTree)&&Dp(g,u,!0)):K(g,u,D,Z,x,L,N,M,I)},X=(g,u,D,T,x,L,N,M,I)=>{u.slotScopeIds=M,g==null?u.shapeFlag&512?x.ctx.activate(u,D,T,N,I):Bs(u,D,T,x,L,N,I):Fs(g,u,I)},Bs=(g,u,D,T,x,L,N)=>{const M=g.component=nc(g,T,x);if(Pn(g)&&(M.ctx.renderer=J),ec(M,!1,N),M.asyncDep){if(x&&x.registerDep(M,q,N),!g.el){const I=M.subTree=Is(ti);v(null,I,u,D)}}else q(M,g,u,D,x,L,N)},Fs=(g,u,D)=>{const T=u.component=g.component;if(J2(g,u,D))if(T.asyncDep&&!T.asyncResolved){is(T,u,D);return}else T.next=u,T.update();else u.el=g.el,T.vnode=u},q=(g,u,D,T,x,L,N)=>{const M=()=>{if(g.isMounted){let{next:G,bu:Q,u:as,parent:rs,vnode:Cs}=g;{const ii=_p(g);if(ii){G&&(G.el=Cs.el,is(g,G,N)),ii.asyncDep.then(()=>{g.isUnmounted||M()});return}}let As=G,si;oa(g,!1),G?(G.el=Cs.el,is(g,G,N)):G=Cs,Q&&We(Q),(si=G.props&&G.props.onVnodeBeforeUpdate)&&oi(si,rs,G,Cs),oa(g,!0);const Hs=it(g),Ei=g.subTree;g.subTree=Hs,m(Ei,Hs,o(Ei.el),_(Ei),g,x,L),G.el=Hs.el,As===null&&K2(g,Hs.el),as&&ni(as,x),(si=G.props&&G.props.onVnodeUpdated)&&ni(()=>oi(si,rs,G,Cs),x)}else{let G;const{el:Q,props:as}=u,{bm:rs,m:Cs,parent:As,root:si,type:Hs}=g,Ei=Ga(u);if(oa(g,!1),rs&&We(rs),!Ei&&(G=as&&as.onVnodeBeforeMount)&&oi(G,As,u),oa(g,!0),Q&&Es){const ii=()=>{g.subTree=it(g),Es(Q,g.subTree,g,x,null)};Ei&&Hs.__asyncHydrate?Hs.__asyncHydrate(Q,g,ii):ii()}else{si.ce&&si.ce._injectChildStyle(Hs);const ii=g.subTree=it(g);m(null,ii,D,T,g,x,L),u.el=ii.el}if(Cs&&ni(Cs,x),!Ei&&(G=as&&as.onVnodeMounted)){const ii=u;ni(()=>oi(G,As,ii),x)}(u.shapeFlag&256||As&&Ga(As.vnode)&&As.vnode.shapeFlag&256)&&g.a&&ni(g.a,x),g.isMounted=!0,u=D=T=null}};g.scope.on();const I=g.effect=new Pr(M);g.scope.off();const R=g.update=I.run.bind(I),Z=g.job=I.runIfDirty.bind(I);Z.i=g,Z.id=g.uid,I.scheduler=()=>Le(Z),oa(g,!0),R()},is=(g,u,D)=>{u.component=g;const T=g.vnode.props;g.vnode=u,g.next=null,j2(g,u.props,T,D),P2(g,u.children,D),ha(),hh(g),ra()},K=(g,u,D,T,x,L,N,M,I=!1)=>{const R=g&&g.children,Z=g?g.shapeFlag:0,G=u.children,{patchFlag:Q,shapeFlag:as}=u;if(Q>0){if(Q&128){wi(R,G,D,T,x,L,N,M,I);return}else if(Q&256){us(R,G,D,T,x,L,N,M,I);return}}as&8?(Z&16&&Vs(R,x,L),G!==R&&d(D,G)):Z&16?as&16?wi(R,G,D,T,x,L,N,M,I):Vs(R,x,L,!0):(Z&8&&d(D,""),as&16&&Y(G,D,T,x,L,N,M,I))},us=(g,u,D,T,x,L,N,M,I)=>{g=g||Va,u=u||Va;const R=g.length,Z=u.length,G=Math.min(R,Z);let Q;for(Q=0;Q<G;Q++){const as=u[Q]=I?ia(u[Q]):Bi(u[Q]);m(g[Q],as,D,null,x,L,N,M,I)}R>Z?Vs(g,x,L,!0,!1,G):Y(u,D,T,x,L,N,M,I,G)},wi=(g,u,D,T,x,L,N,M,I)=>{let R=0;const Z=u.length;let G=g.length-1,Q=Z-1;for(;R<=G&&R<=Q;){const as=g[R],rs=u[R]=I?ia(u[R]):Bi(u[R]);if(ga(as,rs))m(as,rs,D,null,x,L,N,M,I);else break;R++}for(;R<=G&&R<=Q;){const as=g[G],rs=u[Q]=I?ia(u[Q]):Bi(u[Q]);if(ga(as,rs))m(as,rs,D,null,x,L,N,M,I);else break;G--,Q--}if(R>G){if(R<=Q){const as=Q+1,rs=as<Z?u[as].el:T;for(;R<=Q;)m(null,u[R]=I?ia(u[R]):Bi(u[R]),D,rs,x,L,N,M,I),R++}}else if(R>Q)for(;R<=G;)Ps(g[R],x,L,!0),R++;else{const as=R,rs=R,Cs=new Map;for(R=rs;R<=Q;R++){const ai=u[R]=I?ia(u[R]):Bi(u[R]);ai.key!=null&&Cs.set(ai.key,R)}let As,si=0;const Hs=Q-rs+1;let Ei=!1,ii=0;const ln=new Array(Hs);for(R=0;R<Hs;R++)ln[R]=0;for(R=as;R<=G;R++){const ai=g[R];if(si>=Hs){Ps(ai,x,L,!0);continue}let Li;if(ai.key!=null)Li=Cs.get(ai.key);else for(As=rs;As<=Q;As++)if(ln[As-rs]===0&&ga(ai,u[As])){Li=As;break}Li===void 0?Ps(ai,x,L,!0):(ln[Li-rs]=R+1,Li>=ii?ii=Li:Ei=!0,m(ai,u[Li],D,null,x,L,N,M,I),si++)}const Xl=Ei?H2(ln):Va;for(As=Xl.length-1,R=Hs-1;R>=0;R--){const ai=rs+R,Li=u[ai],Zl=ai+1<Z?u[ai+1].el:T;ln[R]===0?m(null,Li,D,Zl,x,L,N,M,I):Ei&&(As<0||R!==Xl[As]?ki(Li,D,Zl,2):As--)}}},ki=(g,u,D,T,x=null)=>{const{el:L,type:N,transition:M,children:I,shapeFlag:R}=g;if(R&6){ki(g.component.subTree,u,D,T);return}if(R&128){g.suspense.move(u,D,T);return}if(R&64){N.move(g,u,D,J);return}if(N===ei){n(L,u,D);for(let G=0;G<I.length;G++)ki(I[G],u,D,T);n(g.anchor,u,D);return}if(N===An){E(g,u,D);return}if(T!==2&&R&1&&M)if(T===0)M.beforeEnter(L),n(L,u,D),ni(()=>M.enter(L),x);else{const{leave:G,delayLeave:Q,afterLeave:as}=M,rs=()=>n(L,u,D),Cs=()=>{G(L,()=>{rs(),as&&as()})};Q?Q(L,rs,Cs):Cs()}else n(L,u,D)},Ps=(g,u,D,T=!1,x=!1)=>{const{type:L,props:N,ref:M,children:I,dynamicChildren:R,shapeFlag:Z,patchFlag:G,dirs:Q,cacheIndex:as}=g;if(G===-2&&(x=!1),M!=null&&ve(M,null,D,g,!0),as!=null&&(u.renderCache[as]=void 0),Z&256){u.ctx.deactivate(g);return}const rs=Z&1&&Q,Cs=!Ga(g);let As;if(Cs&&(As=N&&N.onVnodeBeforeUnmount)&&oi(As,u,g),Z&6)Ti(g.component,D,T);else{if(Z&128){g.suspense.unmount(D,T);return}rs&&ji(g,null,u,"beforeUnmount"),Z&64?g.type.remove(g,u,D,J,T):R&&!R.hasOnce&&(L!==ei||G>0&&G&64)?Vs(R,u,D,!1,!0):(L===ei&&G&384||!x&&Z&16)&&Vs(I,u,D),T&&Zs(g)}(Cs&&(As=N&&N.onVnodeUnmounted)||rs)&&ni(()=>{As&&oi(As,u,g),rs&&ji(g,null,u,"unmounted")},D)},Zs=g=>{const{type:u,el:D,anchor:T,transition:x}=g;if(u===ei){Vi(D,T);return}if(u===An){b(g);return}const L=()=>{e(D),x&&!x.persisted&&x.afterLeave&&x.afterLeave()};if(g.shapeFlag&1&&x&&!x.persisted){const{leave:N,delayLeave:M}=x,I=()=>N(D,L);M?M(g.el,L,I):I()}else L()},Vi=(g,u)=>{let D;for(;g!==u;)D=c(g),e(g),g=D;e(u)},Ti=(g,u,D)=>{const{bum:T,scope:x,job:L,subTree:N,um:M,m:I,a:R}=g;yh(I),yh(R),T&&We(T),x.stop(),L&&(L.flags|=8,Ps(N,g,u,D)),M&&ni(M,u),ni(()=>{g.isUnmounted=!0},u),u&&u.pendingBranch&&!u.isUnmounted&&g.asyncDep&&!g.asyncResolved&&g.suspenseId===u.pendingId&&(u.deps--,u.deps===0&&u.resolve())},Vs=(g,u,D,T=!1,x=!1,L=0)=>{for(let N=L;N<g.length;N++)Ps(g[N],u,D,T,x)},_=g=>{if(g.shapeFlag&6)return _(g.component.subTree);if(g.shapeFlag&128)return g.suspense.next();const u=c(g.anchor||g.el),D=u&&u[t2];return D?c(D):u};let z=!1;const H=(g,u,D)=>{g==null?u._vnode&&Ps(u._vnode,null,null,!0):m(u._vnode||null,g,u,null,null,null,D),u._vnode=g,z||(z=!0,hh(),Ee(),z=!1)},J={p:m,um:Ps,m:ki,r:Zs,mt:Bs,mc:Y,pc:K,pbc:w,n:_,o:s};let ps,Es;return i&&([ps,Es]=i(J)),{render:H,hydrate:ps,createApp:L2(H,ps)}}function st({type:s,props:i},a){return a==="svg"&&s==="foreignObject"||a==="mathml"&&s==="annotation-xml"&&i&&i.encoding&&i.encoding.includes("html")?void 0:a}function oa({effect:s,job:i},a){a?(s.flags|=32,i.flags|=4):(s.flags&=-33,i.flags&=-5)}function bp(s,i){return(!s||s&&!s.pendingBranch)&&i&&!i.persisted}function Dp(s,i,a=!1){const n=s.children,e=i.children;if(ss(n)&&ss(e))for(let t=0;t<n.length;t++){const l=n[t];let r=e[t];r.shapeFlag&1&&!r.dynamicChildren&&((r.patchFlag<=0||r.patchFlag===32)&&(r=e[t]=ia(e[t]),r.el=l.el),!a&&r.patchFlag!==-2&&Dp(l,r)),r.type===ma&&(r.el=l.el)}}function H2(s){const i=s.slice(),a=[0];let n,e,t,l,r;const p=s.length;for(n=0;n<p;n++){const k=s[n];if(k!==0){if(e=a[a.length-1],s[e]<k){i[n]=e,a.push(n);continue}for(t=0,l=a.length-1;t<l;)r=t+l>>1,s[a[r]]<k?t=r+1:l=r;k<s[a[t]]&&(t>0&&(i[n]=a[t-1]),a[t]=n)}}for(t=a.length,l=a[t-1];t-- >0;)a[t]=l,l=i[l];return a}function _p(s){const i=s.subTree.component;if(i)return i.asyncDep&&!i.asyncResolved?i:_p(i)}function yh(s){if(s)for(let i=0;i<s.length;i++)s[i].flags|=8}const $2=Symbol.for("v-scx"),N2=()=>fs($2);function xp(s,i){return El(s,null,i)}function ts(s,i,a){return El(s,i,a)}function El(s,i,a=bs){const{immediate:n,deep:e,flush:t,once:l}=a,r=Os({},a);let p;if(Vn)if(t==="sync"){const c=N2();p=c.__watcherHandles||(c.__watcherHandles=[])}else if(!i||n)r.once=!0;else return{stop:Oi,resume:Oi,pause:Oi};const k=Ms;r.call=(c,A,y)=>Fi(c,k,A,y);let d=!1;t==="post"?r.scheduler=c=>{ni(c,k&&k.suspense)}:t!=="sync"&&(d=!0,r.scheduler=(c,A)=>{A?c():Le(c)}),r.augmentJob=c=>{i&&(c.flags|=4),d&&(c.flags|=2,k&&(c.id=k.uid,c.i=k))};const o=s2(s,i,r);return p&&p.push(o),o}function z2(s,i,a){const n=this.proxy,e=Ss(s)?s.includes(".")?wp(n,s):()=>n[s]:s.bind(n,n);let t;ns(i)?t=i:(t=i.handler,a=i);const l=Mn(this),r=El(e,t.bind(n),a);return l(),r}function wp(s,i){const a=i.split(".");return()=>{let n=s;for(let e=0;e<a.length&&n;e++)n=n[a[e]];return n}}const G2=(s,i)=>i==="modelValue"||i==="model-value"?s.modelModifiers:s[`${i}Modifiers`]||s[`${pi(i)}Modifiers`]||s[`${Fa(i)}Modifiers`];function U2(s,i,...a){if(s.isUnmounted)return;const n=s.vnode.props||bs;let e=a;const t=i.startsWith("update:"),l=t&&G2(n,i.slice(7));l&&(l.trim&&(e=a.map(d=>Ss(d)?d.trim():d)),l.number&&(e=a.map(oo)));let r,p=n[r=Ue(i)]||n[r=Ue(pi(i))];!p&&t&&(p=n[r=Ue(Fa(i))]),p&&Fi(p,s,6,e);const k=n[r+"Once"];if(k){if(!s.emitted)s.emitted={};else if(s.emitted[r])return;s.emitted[r]=!0,Fi(k,s,6,e)}}function Tp(s,i,a=!1){const n=i.emitsCache,e=n.get(s);if(e!==void 0)return e;const t=s.emits;let l={},r=!1;if(!ns(s)){const p=k=>{const d=Tp(k,i,!0);d&&(r=!0,Os(l,d))};!a&&i.mixins.length&&i.mixins.forEach(p),s.extends&&p(s.extends),s.mixins&&s.mixins.forEach(p)}return!t&&!r?(_s(s)&&n.set(s,null),null):(ss(t)?t.forEach(p=>l[p]=null):Os(l,t),_s(s)&&n.set(s,l),l)}function je(s,i){return!s||!Rn(i)?!1:(i=i.slice(2).replace(/Once$/,""),os(s,i[0].toLowerCase()+i.slice(1))||os(s,Fa(i))||os(s,i))}function it(s){const{type:i,vnode:a,proxy:n,withProxy:e,propsOptions:[t],slots:l,attrs:r,emit:p,render:k,renderCache:d,props:o,data:c,setupState:A,ctx:y,inheritAttrs:m}=s,f=me(s);let v,C;try{if(a.shapeFlag&4){const b=e||n,O=b;v=Bi(k.call(O,b,d,o,A,c,y)),C=r}else{const b=i;v=Bi(b.length>1?b(o,{attrs:r,slots:l,emit:p}):b(o,null)),C=i.props?r:W2(r)}}catch(b){gn.length=0,In(b,s,1),v=Is(ti)}let E=v;if(C&&m!==!1){const b=Object.keys(C),{shapeFlag:O}=E;b.length&&O&7&&(t&&b.some(Zt)&&(C=q2(C,t)),E=ta(E,C,!1,!0))}return a.dirs&&(E=ta(E,null,!1,!0),E.dirs=E.dirs?E.dirs.concat(a.dirs):a.dirs),a.transition&&fa(E,a.transition),v=E,me(f),v}const W2=s=>{let i;for(const a in s)(a==="class"||a==="style"||Rn(a))&&((i||(i={}))[a]=s[a]);return i},q2=(s,i)=>{const a={};for(const n in s)(!Zt(n)||!(n.slice(9)in i))&&(a[n]=s[n]);return a};function J2(s,i,a){const{props:n,children:e,component:t}=s,{props:l,children:r,patchFlag:p}=i,k=t.emitsOptions;if(i.dirs||i.transition)return!0;if(a&&p>=0){if(p&1024)return!0;if(p&16)return n?uh(n,l,k):!!l;if(p&8){const d=i.dynamicProps;for(let o=0;o<d.length;o++){const c=d[o];if(l[c]!==n[c]&&!je(k,c))return!0}}}else return(e||r)&&(!r||!r.$stable)?!0:n===l?!1:n?l?uh(n,l,k):!0:!!l;return!1}function uh(s,i,a){const n=Object.keys(i);if(n.length!==Object.keys(s).length)return!0;for(let e=0;e<n.length;e++){const t=n[e];if(i[t]!==s[t]&&!je(a,t))return!0}return!1}function K2({vnode:s,parent:i},a){for(;i;){const n=i.subTree;if(n.suspense&&n.suspense.activeBranch===s&&(n.el=s.el),n===s)(s=i.vnode).el=a,i=i.parent;else break}}const Lp=s=>s.__isSuspense;function Rp(s,i){i&&i.pendingBranch?ss(s)?i.effects.push(...s):i.effects.push(s):n2(s)}const ei=Symbol.for("v-fgt"),ma=Symbol.for("v-txt"),ti=Symbol.for("v-cmt"),An=Symbol.for("v-stc"),gn=[];let hi=null;function H6(s=!1){gn.push(hi=s?null:[])}function Y2(){gn.pop(),hi=gn[gn.length-1]||null}let bn=1;function Eh(s){bn+=s,s<0&&hi&&(hi.hasOnce=!0)}function Q2(s){return s.dynamicChildren=bn>0?hi||Va:null,Y2(),bn>0&&hi&&hi.push(s),s}function $6(s,i,a,n,e,t){return Q2(Op(s,i,a,n,e,t,!0))}function wt(s){return s?s.__v_isVNode===!0:!1}function ga(s,i){return s.type===i.type&&s.key===i.key}const jp=({key:s})=>s??null,Be=({ref:s,ref_key:i,ref_for:a})=>(typeof s=="number"&&(s=""+s),s!=null?Ss(s)||js(s)||ns(s)?{i:Ai,r:s,k:i,f:!!a}:s:null);function Op(s,i=null,a=null,n=0,e=null,t=s===ei?0:1,l=!1,r=!1){const p={__v_isVNode:!0,__v_skip:!0,type:s,props:i,key:i&&jp(i),ref:i&&Be(i),scopeId:np,slotScopeIds:null,children:a,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:t,patchFlag:n,dynamicProps:e,dynamicChildren:null,appContext:null,ctx:Ai};return r?(ml(p,a),t&128&&s.normalize(p)):a&&(p.shapeFlag|=Ss(a)?8:16),bn>0&&!l&&hi&&(p.patchFlag>0||t&6)&&p.patchFlag!==32&&hi.push(p),p}const Is=X2;function X2(s,i=null,a=null,n=0,e=null,t=!1){if((!s||s===f2)&&(s=ti),wt(s)){const r=ta(s,i,!0);return a&&ml(r,a),bn>0&&!t&&hi&&(r.shapeFlag&6?hi[hi.indexOf(s)]=r:hi.push(r)),r.patchFlag=-2,r}if(pc(s)&&(s=s.__vccOpts),i){i=Z2(i);let{class:r,style:p}=i;r&&!Ss(r)&&(i.class=nl(r)),_s(p)&&(dl(p)&&!ss(p)&&(p=Os({},p)),i.style=al(p))}const l=Ss(s)?1:Lp(s)?128:ep(s)?64:_s(s)?4:ns(s)?2:0;return Op(s,i,a,n,e,l,t,!0)}function Z2(s){return s?dl(s)||up(s)?Os({},s):s:null}function ta(s,i,a=!1,n=!1){const{props:e,ref:t,patchFlag:l,children:r,transition:p}=s,k=i?sc(e||{},i):e,d={__v_isVNode:!0,__v_skip:!0,type:s.type,props:k,key:k&&jp(k),ref:i&&i.ref?a&&t?ss(t)?t.concat(Be(i)):[t,Be(i)]:Be(i):t,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:r,target:s.target,targetStart:s.targetStart,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:i&&s.type!==ei?l===-1?16:l|16:l,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:p,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&ta(s.ssContent),ssFallback:s.ssFallback&&ta(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce};return p&&n&&fa(d,p.clone(d)),d}function Sp(s=" ",i=0){return Is(ma,null,s,i)}function N6(s,i){const a=Is(An,null,s);return a.staticCount=i,a}function Bi(s){return s==null||typeof s=="boolean"?Is(ti):ss(s)?Is(ei,null,s.slice()):typeof s=="object"?ia(s):Is(ma,null,String(s))}function ia(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:ta(s)}function ml(s,i){let a=0;const{shapeFlag:n}=s;if(i==null)i=null;else if(ss(i))a=16;else if(typeof i=="object")if(n&65){const e=i.default;e&&(e._c&&(e._d=!1),ml(s,e()),e._c&&(e._d=!0));return}else{a=32;const e=i._;!e&&!up(i)?i._ctx=Ai:e===3&&Ai&&(Ai.slots._===1?i._=1:(i._=2,s.patchFlag|=1024))}else ns(i)?(i={default:i,_ctx:Ai},a=32):(i=String(i),n&64?(a=16,i=[Sp(i)]):a=8);s.children=i,s.shapeFlag|=a}function sc(...s){const i={};for(let a=0;a<s.length;a++){const n=s[a];for(const e in n)if(e==="class")i.class!==n.class&&(i.class=nl([i.class,n.class]));else if(e==="style")i.style=al([i.style,n.style]);else if(Rn(e)){const t=i[e],l=n[e];l&&t!==l&&!(ss(t)&&t.includes(l))&&(i[e]=t?[].concat(t,l):l)}else e!==""&&(i[e]=n[e])}return i}function oi(s,i,a,n=null){Fi(s,i,7,[a,n])}const ic=Ap();let ac=0;function nc(s,i,a){const n=s.type,e=(i?i.appContext:s.appContext)||ic,t={uid:ac++,vnode:s,type:n,parent:i,appContext:e,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new vo(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:i?i.provides:Object.create(e.provides),ids:i?i.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:mp(n,e),emitsOptions:Tp(n,e),emit:null,emitted:null,propsDefaults:bs,inheritAttrs:n.inheritAttrs,ctx:bs,data:bs,props:bs,attrs:bs,slots:bs,refs:bs,setupState:bs,setupContext:null,suspense:a,suspenseId:a?a.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return t.ctx={_:t},t.root=i?i.root:t,t.emit=U2.bind(null,t),s.ce&&s.ce(t),t}let Ms=null;const nn=()=>Ms||Ai;let Fe,Tt;{const s=Rr(),i=(a,n)=>{let e;return(e=s[a])||(e=s[a]=[]),e.push(n),t=>{e.length>1?e.forEach(l=>l(t)):e[0](t)}};Fe=i("__VUE_INSTANCE_SETTERS__",a=>Ms=a),Tt=i("__VUE_SSR_SETTERS__",a=>Vn=a)}const Mn=s=>{const i=Ms;return Fe(s),s.scope.on(),()=>{s.scope.off(),Fe(i)}},mh=()=>{Ms&&Ms.scope.off(),Fe(null)};function Ip(s){return s.vnode.shapeFlag&4}let Vn=!1;function ec(s,i=!1,a=!1){i&&Tt(i);const{props:n,children:e}=s.vnode,t=Ip(s);R2(s,n,t,i),I2(s,e,a);const l=t?tc(s,i):void 0;return i&&Tt(!1),l}function tc(s,i){const a=s.type;s.accessCache=Object.create(null),s.proxy=new Proxy(s.ctx,C2);const{setup:n}=a;if(n){const e=s.setupContext=n.length>1?hc(s):null,t=Mn(s);ha();const l=Sn(n,s,0,[s.props,e]);if(ra(),t(),xr(l)){if(Ga(s)||Al(s),l.then(mh,mh),i)return l.then(r=>{vh(s,r,i)}).catch(r=>{In(r,s,0)});s.asyncDep=l}else vh(s,l,i)}else Pp(s,i)}function vh(s,i,a){ns(i)?s.type.__ssrInlineRender?s.ssrRender=i:s.render=i:_s(i)&&(s.setupState=Xr(i)),Pp(s,a)}let fh;function Pp(s,i,a){const n=s.type;if(!s.render){if(!i&&fh&&!n.render){const e=n.template||yl(s).template;if(e){const{isCustomElement:t,compilerOptions:l}=s.appContext.config,{delimiters:r,compilerOptions:p}=n,k=Os(Os({isCustomElement:t,delimiters:r},l),p);n.render=fh(e,k)}}s.render=n.render||Oi}{const e=Mn(s);ha();try{b2(s)}finally{ra(),e()}}}const lc={get(s,i){return Ns(s,"get",""),s[i]}};function hc(s){const i=a=>{s.exposed=a||{}};return{attrs:new Proxy(s.attrs,lc),slots:s.slots,emit:s.emit,expose:i}}function vl(s){return s.exposed?s.exposeProxy||(s.exposeProxy=new Proxy(Xr(Go(s.exposed)),{get(i,a){if(a in i)return i[a];if(a in Bn)return Bn[a](s)},has(i,a){return a in i||a in Bn}})):s.proxy}function rc(s,i=!0){return ns(s)?s.displayName||s.name:s.name||i&&s.__name}function pc(s){return ns(s)&&"__vccOpts"in s}const F=(s,i)=>Xo(s,i,Vn);function h(s,i,a){const n=arguments.length;return n===2?_s(i)&&!ss(i)?wt(i)?Is(s,null,[i]):Is(s,i):Is(s,null,i):(n>3?a=Array.prototype.slice.call(arguments,2):n===3&&wt(a)&&(a=[a]),Is(s,i,a))}const kc="3.5.4";/**
* @vue/runtime-dom v3.5.4
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Lt;const Fh=typeof window<"u"&&window.trustedTypes;if(Fh)try{Lt=Fh.createPolicy("vue",{createHTML:s=>s})}catch{}const Mp=Lt?s=>Lt.createHTML(s):s=>s,dc="http://www.w3.org/2000/svg",oc="http://www.w3.org/1998/Math/MathML",Gi=typeof document<"u"?document:null,Ch=Gi&&Gi.createElement("template"),cc={insert:(s,i,a)=>{i.insertBefore(s,a||null)},remove:s=>{const i=s.parentNode;i&&i.removeChild(s)},createElement:(s,i,a,n)=>{const e=i==="svg"?Gi.createElementNS(dc,s):i==="mathml"?Gi.createElementNS(oc,s):a?Gi.createElement(s,{is:a}):Gi.createElement(s);return s==="select"&&n&&n.multiple!=null&&e.setAttribute("multiple",n.multiple),e},createText:s=>Gi.createTextNode(s),createComment:s=>Gi.createComment(s),setText:(s,i)=>{s.nodeValue=i},setElementText:(s,i)=>{s.textContent=i},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>Gi.querySelector(s),setScopeId(s,i){s.setAttribute(i,"")},insertStaticContent(s,i,a,n,e,t){const l=a?a.previousSibling:i.lastChild;if(e&&(e===t||e.nextSibling))for(;i.insertBefore(e.cloneNode(!0),a),!(e===t||!(e=e.nextSibling)););else{Ch.innerHTML=Mp(n==="svg"?`<svg>${s}</svg>`:n==="mathml"?`<math>${s}</math>`:s);const r=Ch.content;if(n==="svg"||n==="mathml"){const p=r.firstChild;for(;p.firstChild;)r.appendChild(p.firstChild);r.removeChild(p)}i.insertBefore(r,a)}return[l?l.nextSibling:i.firstChild,a?a.previousSibling:i.lastChild]}},Ki="transition",rn="animation",Ka=Symbol("_vtc"),Vp={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Hp=Os({},lp,Vp),Bc=s=>(s.displayName="Transition",s.props=Hp,s),Ya=Bc((s,{slots:i})=>h(h2,$p(s),i)),ca=(s,i=[])=>{ss(s)?s.forEach(a=>a(...i)):s&&s(...i)},bh=s=>s?ss(s)?s.some(i=>i.length>1):s.length>1:!1;function $p(s){const i={};for(const j in s)j in Vp||(i[j]=s[j]);if(s.css===!1)return i;const{name:a="v",type:n,duration:e,enterFromClass:t=`${a}-enter-from`,enterActiveClass:l=`${a}-enter-active`,enterToClass:r=`${a}-enter-to`,appearFromClass:p=t,appearActiveClass:k=l,appearToClass:d=r,leaveFromClass:o=`${a}-leave-from`,leaveActiveClass:c=`${a}-leave-active`,leaveToClass:A=`${a}-leave-to`}=s,y=Ac(e),m=y&&y[0],f=y&&y[1],{onBeforeEnter:v,onEnter:C,onEnterCancelled:E,onLeave:b,onLeaveCancelled:O,onBeforeAppear:U=v,onAppear:P=C,onAppearCancelled:Y=E}=i,V=(j,X,Bs)=>{Xi(j,X?d:r),Xi(j,X?k:l),Bs&&Bs()},w=(j,X)=>{j._isLeaving=!1,Xi(j,o),Xi(j,A),Xi(j,c),X&&X()},$=j=>(X,Bs)=>{const Fs=j?P:C,q=()=>V(X,j,Bs);ca(Fs,[X,q]),Dh(()=>{Xi(X,j?p:t),Ni(X,j?d:r),bh(Fs)||_h(X,n,m,q)})};return Os(i,{onBeforeEnter(j){ca(v,[j]),Ni(j,t),Ni(j,l)},onBeforeAppear(j){ca(U,[j]),Ni(j,p),Ni(j,k)},onEnter:$(!1),onAppear:$(!0),onLeave(j,X){j._isLeaving=!0;const Bs=()=>w(j,X);Ni(j,o),Ni(j,c),zp(),Dh(()=>{j._isLeaving&&(Xi(j,o),Ni(j,A),bh(b)||_h(j,n,f,Bs))}),ca(b,[j,Bs])},onEnterCancelled(j){V(j,!1),ca(E,[j])},onAppearCancelled(j){V(j,!0),ca(Y,[j])},onLeaveCancelled(j){w(j),ca(O,[j])}})}function Ac(s){if(s==null)return null;if(_s(s))return[at(s.enter),at(s.leave)];{const i=at(s);return[i,i]}}function at(s){return co(s)}function Ni(s,i){i.split(/\s+/).forEach(a=>a&&s.classList.add(a)),(s[Ka]||(s[Ka]=new Set)).add(i)}function Xi(s,i){i.split(/\s+/).forEach(n=>n&&s.classList.remove(n));const a=s[Ka];a&&(a.delete(i),a.size||(s[Ka]=void 0))}function Dh(s){requestAnimationFrame(()=>{requestAnimationFrame(s)})}let gc=0;function _h(s,i,a,n){const e=s._endId=++gc,t=()=>{e===s._endId&&n()};if(a)return setTimeout(t,a);const{type:l,timeout:r,propCount:p}=Np(s,i);if(!l)return n();const k=l+"end";let d=0;const o=()=>{s.removeEventListener(k,c),t()},c=A=>{A.target===s&&++d>=p&&o()};setTimeout(()=>{d<p&&o()},r+1),s.addEventListener(k,c)}function Np(s,i){const a=window.getComputedStyle(s),n=y=>(a[y]||"").split(", "),e=n(`${Ki}Delay`),t=n(`${Ki}Duration`),l=xh(e,t),r=n(`${rn}Delay`),p=n(`${rn}Duration`),k=xh(r,p);let d=null,o=0,c=0;i===Ki?l>0&&(d=Ki,o=l,c=t.length):i===rn?k>0&&(d=rn,o=k,c=p.length):(o=Math.max(l,k),d=o>0?l>k?Ki:rn:null,c=d?d===Ki?t.length:p.length:0);const A=d===Ki&&/\b(transform|all)(,|$)/.test(n(`${Ki}Property`).toString());return{type:d,timeout:o,propCount:c,hasTransform:A}}function xh(s,i){for(;s.length<i.length;)s=s.concat(s);return Math.max(...i.map((a,n)=>wh(a)+wh(s[n])))}function wh(s){return s==="auto"?0:Number(s.slice(0,-1).replace(",","."))*1e3}function zp(){return document.body.offsetHeight}function yc(s,i,a){const n=s[Ka];n&&(i=(i?[i,...n]:[...n]).join(" ")),i==null?s.removeAttribute("class"):a?s.setAttribute("class",i):s.className=i}const Th=Symbol("_vod"),uc=Symbol("_vsh"),Ec=Symbol(""),mc=/(^|;)\s*display\s*:/;function vc(s,i,a){const n=s.style,e=Ss(a);let t=!1;if(a&&!e){if(i)if(Ss(i))for(const l of i.split(";")){const r=l.slice(0,l.indexOf(":")).trim();a[r]==null&&Ae(n,r,"")}else for(const l in i)a[l]==null&&Ae(n,l,"");for(const l in a)l==="display"&&(t=!0),Ae(n,l,a[l])}else if(e){if(i!==a){const l=n[Ec];l&&(a+=";"+l),n.cssText=a,t=mc.test(a)}}else i&&s.removeAttribute("style");Th in s&&(s[Th]=t?n.display:"",s[uc]&&(n.display="none"))}const Lh=/\s*!important$/;function Ae(s,i,a){if(ss(a))a.forEach(n=>Ae(s,i,n));else if(a==null&&(a=""),i.startsWith("--"))s.setProperty(i,a);else{const n=fc(s,i);Lh.test(a)?s.setProperty(Fa(n),a.replace(Lh,""),"important"):s[n]=a}}const Rh=["Webkit","Moz","ms"],nt={};function fc(s,i){const a=nt[i];if(a)return a;let n=pi(i);if(n!=="filter"&&n in s)return nt[i]=n;n=jn(n);for(let e=0;e<Rh.length;e++){const t=Rh[e]+n;if(t in s)return nt[i]=t}return i}const jh="http://www.w3.org/1999/xlink";function Oh(s,i,a,n,e,t=Eo(i)){n&&i.startsWith("xlink:")?a==null?s.removeAttributeNS(jh,i.slice(6,i.length)):s.setAttributeNS(jh,i,a):a==null||t&&!jr(a)?s.removeAttribute(i):s.setAttribute(i,t?"":la(a)?String(a):a)}function Fc(s,i,a,n){if(i==="innerHTML"||i==="textContent"){a!=null&&(s[i]=i==="innerHTML"?Mp(a):a);return}const e=s.tagName;if(i==="value"&&e!=="PROGRESS"&&!e.includes("-")){const l=e==="OPTION"?s.getAttribute("value")||"":s.value,r=a==null?s.type==="checkbox"?"on":"":String(a);(l!==r||!("_value"in s))&&(s.value=r),a==null&&s.removeAttribute(i),s._value=a;return}let t=!1;if(a===""||a==null){const l=typeof s[i];l==="boolean"?a=jr(a):a==null&&l==="string"?(a="",t=!0):l==="number"&&(a=0,t=!0)}try{s[i]=a}catch{}t&&s.removeAttribute(i)}function Cc(s,i,a,n){s.addEventListener(i,a,n)}function bc(s,i,a,n){s.removeEventListener(i,a,n)}const Sh=Symbol("_vei");function Dc(s,i,a,n,e=null){const t=s[Sh]||(s[Sh]={}),l=t[i];if(n&&l)l.value=n;else{const[r,p]=_c(i);if(n){const k=t[i]=Tc(n,e);Cc(s,r,k,p)}else l&&(bc(s,r,l,p),t[i]=void 0)}}const Ih=/(?:Once|Passive|Capture)$/;function _c(s){let i;if(Ih.test(s)){i={};let n;for(;n=s.match(Ih);)s=s.slice(0,s.length-n[0].length),i[n[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):Fa(s.slice(2)),i]}let et=0;const xc=Promise.resolve(),wc=()=>et||(xc.then(()=>et=0),et=Date.now());function Tc(s,i){const a=n=>{if(!n._vts)n._vts=Date.now();else if(n._vts<=a.attached)return;Fi(Lc(n,a.value),i,5,[n])};return a.value=s,a.attached=wc(),a}function Lc(s,i){if(ss(i)){const a=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{a.call(s),s._stopped=!0},i.map(n=>e=>!e._stopped&&n&&n(e))}else return i}const Ph=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,Rc=(s,i,a,n,e,t)=>{const l=e==="svg";i==="class"?yc(s,n,l):i==="style"?vc(s,a,n):Rn(i)?Zt(i)||Dc(s,i,a,n,t):(i[0]==="."?(i=i.slice(1),!0):i[0]==="^"?(i=i.slice(1),!1):jc(s,i,n,l))?(Fc(s,i,n),!s.tagName.includes("-")&&(i==="value"||i==="checked"||i==="selected")&&Oh(s,i,n,l,t,i!=="value")):(i==="true-value"?s._trueValue=n:i==="false-value"&&(s._falseValue=n),Oh(s,i,n,l))};function jc(s,i,a,n){if(n)return!!(i==="innerHTML"||i==="textContent"||i in s&&Ph(i)&&ns(a));if(i==="spellcheck"||i==="draggable"||i==="translate"||i==="form"||i==="list"&&s.tagName==="INPUT"||i==="type"&&s.tagName==="TEXTAREA")return!1;if(i==="width"||i==="height"){const e=s.tagName;if(e==="IMG"||e==="VIDEO"||e==="CANVAS"||e==="SOURCE")return!1}return Ph(i)&&Ss(a)?!1:!!(i in s||s._isVueCE&&(/[A-Z]/.test(i)||!Ss(a)))}const Gp=new WeakMap,Up=new WeakMap,Ce=Symbol("_moveCb"),Mh=Symbol("_enterCb"),Oc=s=>(delete s.props.mode,s),Sc=Oc({name:"TransitionGroup",props:Os({},Hp,{tag:String,moveClass:String}),setup(s,{slots:i}){const a=nn(),n=tp();let e,t;return dp(()=>{if(!e.length)return;const l=s.moveClass||`${s.name||"v"}-move`;if(!Hc(e[0].el,a.vnode.el,l))return;e.forEach(Pc),e.forEach(Mc);const r=e.filter(Vc);zp(),r.forEach(p=>{const k=p.el,d=k.style;Ni(k,l),d.transform=d.webkitTransform=d.transitionDuration="";const o=k[Ce]=c=>{c&&c.target!==k||(!c||/transform$/.test(c.propertyName))&&(k.removeEventListener("transitionend",o),k[Ce]=null,Xi(k,l))};k.addEventListener("transitionend",o)})}),()=>{const l=ds(s),r=$p(l);let p=l.tag||ei;if(e=[],t)for(let k=0;k<t.length;k++){const d=t[k];d.el&&d.el instanceof Element&&(e.push(d),fa(d,Cn(d,r,n,a)),Gp.set(d,d.el.getBoundingClientRect()))}t=i.default?Bl(i.default()):[];for(let k=0;k<t.length;k++){const d=t[k];d.key!=null&&fa(d,Cn(d,r,n,a))}return Is(p,null,t)}}}),Ic=Sc;function Pc(s){const i=s.el;i[Ce]&&i[Ce](),i[Mh]&&i[Mh]()}function Mc(s){Up.set(s,s.el.getBoundingClientRect())}function Vc(s){const i=Gp.get(s),a=Up.get(s),n=i.left-a.left,e=i.top-a.top;if(n||e){const t=s.el.style;return t.transform=t.webkitTransform=`translate(${n}px,${e}px)`,t.transitionDuration="0s",s}}function Hc(s,i,a){const n=s.cloneNode(),e=s[Ka];e&&e.forEach(r=>{r.split(/\s+/).forEach(p=>p&&n.classList.remove(p))}),a.split(/\s+/).forEach(r=>r&&n.classList.add(r)),n.style.display="none";const t=i.nodeType===1?i:i.parentNode;t.appendChild(n);const{hasTransform:l}=Np(n);return t.removeChild(n),l}const $c=Os({patchProp:Rc},cc);let tt,Vh=!1;function Nc(){return tt=Vh?tt:M2($c),Vh=!0,tt}const zc=(...s)=>{const i=Nc().createApp(...s),{mount:a}=i;return i.mount=n=>{const e=Uc(n);if(e)return a(e,!0,Gc(e))},i};function Gc(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function Uc(s){return Ss(s)?document.querySelector(s):s}var Hn=s=>/^[a-z][a-z0-9+.-]*:/.test(s)||s.startsWith("//"),Wc=/.md((\?|#).*)?$/,Oe=(s,i="/")=>Hn(s)||s.startsWith("/")&&!s.startsWith(i)&&!Wc.test(s),ba=s=>/^(https?:)?\/\//.test(s),Hh=s=>{if(!s||s.endsWith("/"))return s;let i=s.replace(/(^|\/)README.md$/i,"$1index.html");return i.endsWith(".md")?i=i.substring(0,i.length-3)+".html":i.endsWith(".html")||(i=i+".html"),i.endsWith("/index.html")&&(i=i.substring(0,i.length-10)),i},qc="http://.",Jc=(s,i)=>{if(!s.startsWith("/")&&i){const a=i.slice(0,i.lastIndexOf("/"));return Hh(new URL(`${a}/${s}`,qc).pathname)}return Hh(s)},Kc=(s,i)=>{const a=Object.keys(s).sort((n,e)=>{const t=e.split("/").length-n.split("/").length;return t!==0?t:e.length-n.length});for(const n of a)if(i.startsWith(n))return n;return"/"},Yc=/(#|\?)/,Wp=s=>{const[i,...a]=s.split(Yc);return{pathname:i,hashAndQueries:a.join("")}},Qc=["link","meta","script","style","noscript","template"],Xc=["title","base"],Zc=([s,i,a])=>Xc.includes(s)?s:Qc.includes(s)?s==="meta"&&i.name?`${s}.${i.name}`:s==="template"&&i.id?`${s}.${i.id}`:JSON.stringify([s,Object.entries(i).map(([n,e])=>typeof e=="boolean"?e?[n,""]:null:[n,e]).filter(n=>n!=null).sort(([n],[e])=>n.localeCompare(e)),a]):null,s8=s=>{const i=new Set,a=[];return s.forEach(n=>{const e=Zc(n);e&&!i.has(e)&&(i.add(e),a.push(n))}),a},i8=s=>s[0]==="/"?s:`/${s}`,qp=s=>s[s.length-1]==="/"||s.endsWith(".html")?s:`${s}/`,fl=s=>s[s.length-1]==="/"?s.slice(0,-1):s,Jp=s=>s[0]==="/"?s.slice(1):s,en=s=>Object.prototype.toString.call(s)==="[object Object]",Ts=s=>typeof s=="string";const a8="modulepreload",n8=function(s){return"/"+s},$h={},B=function(i,a,n){let e=Promise.resolve();if(a&&a.length>0){document.getElementsByTagName("link");const t=document.querySelector("meta[property=csp-nonce]"),l=(t==null?void 0:t.nonce)||(t==null?void 0:t.getAttribute("nonce"));e=Promise.all(a.map(r=>{if(r=n8(r),r in $h)return;$h[r]=!0;const p=r.endsWith(".css"),k=p?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${k}`))return;const d=document.createElement("link");if(d.rel=p?"stylesheet":a8,p||(d.as="script",d.crossOrigin=""),d.href=r,l&&d.setAttribute("nonce",l),document.head.appendChild(d),p)return new Promise((o,c)=>{d.addEventListener("load",o),d.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${r}`)))})}))}return e.then(()=>i()).catch(t=>{const l=new Event("vite:preloadError",{cancelable:!0});if(l.payload=t,window.dispatchEvent(l),!l.defaultPrevented)throw t})},e8=JSON.parse("{}"),t8=Object.fromEntries([["/",{loader:()=>B(()=>import("./index.html-DNpdjXMH.js"),__vite__mapDeps([0,1])),meta:{t:"博客主页",i:"home"}}],["/interview/01.HTML%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./01.HTML面试题.html-CCxDhQWO.js"),__vite__mapDeps([2,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["html"],n:!0,r:{minutes:20.26,words:6077},t:"HTML面试题",i:"markdown",O:1,y:"a"}}],["/interview/02.CSS%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./02.CSS面试题.html-CgLAnEZi.js"),__vite__mapDeps([3,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["css"],n:!0,r:{minutes:32.28,words:9684},t:"CSS面试题",i:"markdown",O:2,y:"a"}}],["/interview/03.JS%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./03.JS面试题.html-D5rd61rQ.js"),__vite__mapDeps([4,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["Javascript"],n:!0,r:{minutes:72.52,words:21756},t:"JS面试题",i:"markdown",O:3,y:"a"}}],["/interview/04.VUE%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./04.VUE面试题.html-B0Sc5Gug.js"),__vite__mapDeps([5,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["Vue"],n:!0,r:{minutes:77.75,words:23325},t:"Vue面试题",i:"markdown",O:4,y:"a"}}],["/interview/05.React%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./05.React面试题.html-FBbV2TT2.js"),__vite__mapDeps([6,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["React"],n:!0,r:{minutes:36.32,words:10895},t:"React面试题",i:"markdown",O:5,y:"a"}}],["/interview/06.%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./06.浏览器原理面试题.html-Cq8yWhdw.js"),__vite__mapDeps([7,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["浏览器原理"],n:!0,r:{minutes:43.25,words:12974},t:"浏览器原理面试题",i:"markdown",O:6,y:"a"}}],["/interview/07.%E7%BD%91%E7%BB%9C%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./07.网络面试题.html-Dp5QlEtF.js"),__vite__mapDeps([8,1])),meta:{d:16768512e5,l:"2023年2月20日",c:["面试"],g:["网络"],n:!0,r:{minutes:39.53,words:11859},t:"计算机网络面试题",i:"markdown",O:7,y:"a"}}],["/interview/08.%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./08.前端工程化面试题.html-FdNqP5Dk.js"),__vite__mapDeps([9,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["前端工程化"],n:!0,r:{minutes:14.21,words:4262},t:"前端工程化面试题",i:"markdown",O:8,y:"a"}}],["/interview/09.%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E9%9D%A2%E8%AF%95%E9%A2%98.html",{loader:()=>B(()=>import("./09.性能优化面试题.html-DvtXF-ge.js"),__vite__mapDeps([10,1])),meta:{d:1676592e6,l:"2023年2月17日",c:["面试"],g:["性能优化"],n:!0,r:{minutes:20.18,words:6055},t:"性能优化面试题",i:"markdown",O:9,y:"a"}}],["/interview/10.%E5%85%B6%E4%BB%96.html",{loader:()=>B(()=>import("./10.其他.html-BtZ8B6VN.js"),__vite__mapDeps([11,1])),meta:{d:16768512e5,l:"2023年2月20日",c:["面试"],g:["其他"],n:!0,r:{minutes:8.39,words:2518},t:"其他",i:"markdown",O:10,y:"a"}}],["/interview/",{loader:()=>B(()=>import("./index.html-PHL57RIc.js"),__vite__mapDeps([12,1])),meta:{t:"面试",i:"markdown"}}],["/other/",{loader:()=>B(()=>import("./index.html-La-GN3KX.js"),__vite__mapDeps([13,1])),meta:{t:"目录",i:"markdown"}}],["/project/01.vue3-vite.html",{loader:()=>B(()=>import("./01.vue3-vite.html-BCgpR19h.js"),__vite__mapDeps([14,15,1])),meta:{d:17260992e5,l:"2024年9月12日",c:["项目"],g:["vue3"],e:`<h2>一、通过脚手架初始化项目</h2>
<h3>1.下载项目</h3>
<div class="language-npm line-numbers-mode" data-highlighter="shiki" data-ext="npm" data-title="npm" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm create vue@3</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:8.26,words:2477},t:"vue3+vite基础模板",i:"vue",O:1,y:"a"}}],["/project/02.vue2-webpack.html",{loader:()=>B(()=>import("./02.vue2-webpack.html-gOH9g4Za.js"),__vite__mapDeps([16,15,1])),meta:{d:17260992e5,l:"2024年9月12日",c:["项目"],g:["vue2"],e:`<h2>一、通过脚手架初始化项目</h2>
<h3>1.下载脚手架</h3>
<div class="language-npm line-numbers-mode" data-highlighter="shiki" data-ext="npm" data-title="npm" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>npm install -g @vue/cli</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:9.18,words:2753},t:"vue2+webpack基础模板",i:"vue",O:2,y:"a"}}],["/project/03.%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD.html",{loader:()=>B(()=>import("./03.图片懒加载.html-D2lCv0jE.js"),__vite__mapDeps([17,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["项目"],g:["懒加载"],e:`<h2>自定义指令</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * v-lazy</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> * 图片懒加载</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> */</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> copy</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Directive</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    mounted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> HTMLImageElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> imgSrc</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">src</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> ''</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> observer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> IntersectionObserver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(([{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">isIntersecting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }]) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">            // 元素出现在可视区域和离开可视区域触发</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">isIntersecting</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 加载图片</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">src</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> imgSrc</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 停止观察</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                observer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">unobserve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        observer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">observe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> copy</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.51,words:152},t:"图片懒加载",i:"markdown",O:3,y:"a"}}],["/project/04.python%E5%AE%9E%E7%8E%B0webm%E8%BD%ACmp4.html",{loader:()=>B(()=>import("./04.python实现webm转mp4.html-BcdWORPF.js"),__vite__mapDeps([18,1])),meta:{d:16766784e5,l:"2023年2月18日",c:["其他"],g:["其他"],e:`<h2>官网下载ffmeg</h2>
<p><a href="https://ffmpeg.org/download.html" target="_blank" rel="noopener noreferrer">ffmpeg</a></p>
<h2>代码</h2>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tkinter </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> tk</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">wind</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Tk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">wind.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"800x400"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">wind.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"视频转码"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">title_lab</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(wind,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"视频转码"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">title_lab.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">350</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">textlab</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(wind, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"请输入视频地址:"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">fg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"blue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">textlab.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">text_entry</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(wind, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">text_entry.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mzlab</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(wind, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"请输入新视频名称:"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">fg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"blue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mzlab.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mz_entry</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(wind, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">bg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"white"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mz_entry.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">#下面是引用了一个执行转码的方法，并声明执行结果</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> getTextInput</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">():</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> lianjie </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> text_entry.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mz </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mz_entry.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mz </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> mz </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '.mp4'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ff </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '/ffmpeg-master-latest-win64-gpl/bin/ffmpeg.exe'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ff1 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">getcwd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ff </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ff1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">ff</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> result </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> eval</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">repr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(ff).</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'/'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ff </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'//'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'/'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> cmd </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ff </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' -i '</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">lianjie</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">' -c:v libx264 -c:a aac -strict experimental '</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">+</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">mz</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(cmd) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:  </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">#判断执行结果并进行转码</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Tk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test1.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"200x100"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test1.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  title_lab</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(test1,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"视频转码成功"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  title_lab.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test1.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">mainloop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Tk</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test2.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"200x100"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test2.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">""</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  title_lab</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(test2,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"视频转码失败"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  title_lab.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  test2.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">mainloop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">tk.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(wind,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">text</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"提交"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">font</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"仿宋 20 bold"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">fg</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"blue"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">command</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">getTextInput) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">#将信息提交给上面的getTextInput方法</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">btn.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">place</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">350</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">300</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">wind.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF">mainloop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.05,words:316},t:"python实现webm转mp4",i:"python",O:4,y:"a"}}],["/project/05.Git.html",{loader:()=>B(()=>import("./05.Git.html-BhSO_2um.js"),__vite__mapDeps([19,1])),meta:{d:16867872e5,l:"2023年6月15日",c:["git"],g:["git"],e:`<h2>代码没有变化 git显示有差异</h2>
<p>切到源码的根目录下</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> --add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> core.filemode</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.14,words:43},t:"Git相关",i:"git",O:5,y:"a"}}],["/project/06.Eslint.html",{loader:()=>B(()=>import("./06.Eslint.html-DtAonehq.js"),__vite__mapDeps([20,1])),meta:{d:16867872e5,l:"2023年6月15日",c:["eslint"],g:["eslint"],e:`<h2>Delete <code>␍</code>eslint(prettier/prettier)</h2>
<p>罪魁祸首是git的一个配置属性：core.autocrlf</p>
<p>由于历史原因，windows下和linux下的文本文件的换行符不一致。</p>
<p>Windows在换行的时候，同时使用了回车符CR(carriage-return character)和换行符LF(linefeed character)
而Mac和Linux系统，仅仅使用了换行符LF
老版本的Mac系统使用的是回车符CR</p>
<h3>配置.prettierrc文件</h3>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">"endOfLine"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "auto"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.58,words:174},t:"Eslint",i:"eslint",O:6,y:"a"}}],["/project/07.uniapp%E5%88%86%E7%8E%AF%E5%A2%83%E6%89%93%E5%8C%85.html",{loader:()=>B(()=>import("./07.uniapp分环境打包.html-CvUnl1KU.js"),__vite__mapDeps([21,1])),meta:{d:16889472e5,l:"2023年7月10日",c:["uniapp"],g:["uniapp"],e:`<h2>修改package.json文件</h2>
<div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> "uni-app"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> : {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  "scripts"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">   "prewx"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "title"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"测试版小程序"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "env"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_PLATFORM"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"mp-weixin"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_BASE_URL"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://xxx.xxxx.com"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_BASE_APPID"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"xxxx"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_BASE_NAME"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"xxxxx"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">          }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    "prodwx"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "title"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"正式版小程序"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        "env"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_PLATFORM"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"mp-weixin"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_BASE_URL"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"https://xxx.xxxx.com"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_BASE_APPID"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"自定义appid，可以是不同的小程序id"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            "UNI_BASE_NAME"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"自定义appid，可以是不同的小程序id"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.99,words:298},t:"uniapp分环境打包",i:"uniapp",O:7,y:"a"}}],["/project/08.uniapp%E8%93%9D%E7%89%99%E6%93%8D%E4%BD%9C.html",{loader:()=>B(()=>import("./08.uniapp蓝牙操作.html-FuX1w9Z5.js"),__vite__mapDeps([22,1])),meta:{d:16932672e5,l:"2023年8月29日",c:["uniapp"],g:["蓝牙"],e:`<h2>总体思路</h2>
<ol>
<li>初始化：打开蓝牙模块</li>
<li>搜寻：检测附近存在的设备</li>
<li>连接：找到目标设备进行</li>
<li>监听：开启监听功能，接收其他设备传过来的数据</li>
<li>发送指令：不管发送数据还是读取数据，都可以理解为向外发送指令</li>
</ol>
<h2>初始化阶段</h2>
<p>使用<a href="https://uniapp.dcloud.net.cn/api/system/bluetooth.html#openbluetoothadapter" target="_blank" rel="noopener noreferrer">uni.openBluetoothAdapter</a>这个 api 就可以初始化蓝牙模块。其他蓝牙相关 API 必须在 uni.openBluetoothAdapter 调用之后使用。否则 API 会返回错误（ errCode=10000 ）。</p>`,r:{minutes:15.88,words:4765},t:"uniapp蓝牙",i:"uniapp",O:8,y:"a"}}],["/project/09.HTML.html",{loader:()=>B(()=>import("./09.HTML.html-CotVFJ_m.js"),__vite__mapDeps([23,1])),meta:{d:17025984e5,l:"2023年12月15日",c:["html"],g:["html"],e:`<h2>css 省略号</h2>
<h3>单行溢出显示省略号</h3>

<h3>多行溢出显示省略号</h3>

<h3>省略号显示在文本前</h3>

<h2>换行</h2>
<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">wordBreak:"</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">break-all</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">";</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.74,words:221},t:"HTML",i:"html",O:9,y:"a"}}],["/project/",{loader:()=>B(()=>import("./index.html-f6_uM2sB.js"),__vite__mapDeps([24,1])),meta:{t:"项目",i:"markdown"}}],["/study/",{loader:()=>B(()=>import("./index.html-CTJvvcYr.js"),__vite__mapDeps([25,1])),meta:{t:"基础",i:"markdown"}}],["/threejs/",{loader:()=>B(()=>import("./index.html-_mB4MgUA.js"),__vite__mapDeps([26,1])),meta:{t:"threejs",i:"markdown"}}],["/study/CSS/BFC.html",{loader:()=>B(()=>import("./BFC.html-BpniV0eg.js"),__vite__mapDeps([27,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["CSS"],g:["BFC"],e:`<h2>什么是BFC</h2>
<p>Formatting context 是 W3C CSS2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。最常见的 Formatting context 有 Block fomatting context (简称BFC)和 Inline formatting context (简称IFC)。Block formatting context直译为"块级格式化上下文"。它是一个独立的渲染区域，只有Block-level box参与， 它规定了内部的Block-level Box如何布局，并且与这个区域外部毫不相干。通俗地讲，BFC是一个容器，用于管理块级元素。</p>`,r:{minutes:4.63,words:1389},t:"BFC",i:"css",O:2,y:"a"}}],["/study/CSS/",{loader:()=>B(()=>import("./index.html-BhL_2aGZ.js"),__vite__mapDeps([28,1])),meta:{t:"CSS",i:"css"}}],["/study/CSS/%E5%B8%B8%E8%A7%81%E5%B8%83%E5%B1%80.html",{loader:()=>B(()=>import("./常见布局.html-BUwdAz0E.js"),__vite__mapDeps([29,1])),meta:{d:16775424e5,l:"2023年2月28日",c:["CSS"],g:["布局"],e:`<h2>单列布局</h2>


<h2>两列自适应布局</h2>
<p>两列自适应布局是指一列由内容撑开，另一列撑满剩余宽度的布局方式</p>



<h2>三栏布局</h2>
<p>中间列自适应宽度，旁边两侧固定宽度</p>

<blockquote>
<p>缺点</p>
</blockquote>
<ul>
<li>center 部分的最小宽度不能小于 left 部分的宽度，否则会 left 部分掉到下一行</li>
<li>如果其中一列内容高度拉长，其他两列的背景并不会自动填充。</li>
</ul>

<h2>等高布局</h2>
<p>等高布局是指子元素在父元素中高度相等的布局方式</p>`,r:{minutes:3.09,words:928},t:"常见布局",i:"css",O:3,y:"a"}}],["/study/CSS/%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD.html",{loader:()=>B(()=>import("./水平垂直居中.html-CbfbNkjT.js"),__vite__mapDeps([30,1])),meta:{d:16773696e5,l:"2023年2月26日",c:["CSS"],g:["布局"],e:`<h2>定位(absolute) + 负margin</h2>
<div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">.wp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    position: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">relative</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">.box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    position: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66">absolute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    top: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    left: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    margin-left: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">-50</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    margin-top: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">-50</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">px</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.25,words:674},t:"水平垂直居中",i:"css",O:1,y:"a"}}],["/study/CSS/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8.html",{loader:()=>B(()=>import("./清除浮动.html-C77T5gaN.js"),__vite__mapDeps([31,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["CSS"],g:["清除浮动"],e:`<h2>特点</h2>
<p>浮动的特点，可以用八个字总结：脱标、贴边、字围和收缩。</p>
<p>为了更好说明，请看下图：
当框 1 向左浮动时，它脱离文档流（脱标）并且向左移动（贴边），直到它的左边缘碰到包含框的左边缘。因为它不再处于文档流中，所以它不占据空间，实际上覆盖住了框 2，使框 2 从视图中消失。如果框 2 中有文字，就会围着框 1 排开（字围）。</p>
<p>如果把所有三个框都向左浮动，那么框 1 向左浮动直到碰到包含框，另外两个框向左浮动直到碰到前一个浮动框。</p>
<figure><img src="/img/study/css/float.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:3.84,words:1151},t:"清除浮动",i:"css",O:4,y:"a"}}],["/study/Express/01.%E5%85%A5%E9%97%A8.html",{loader:()=>B(()=>import("./01.入门.html-CVnI6xHZ.js"),__vite__mapDeps([32,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Vue"],g:["express"],e:`<h2>初始化项目</h2>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> init</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -y</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.47,words:142},t:"入门",i:"vue",O:1,y:"a"}}],["/study/Express/02.%E6%95%B0%E6%8D%AE%E5%BA%93.html",{loader:()=>B(()=>import("./02.数据库.html-db9ouCdZ.js"),__vite__mapDeps([33,1])),meta:{d:17186688e5,l:"2024年6月18日",c:["Vue"],g:["express"],r:{minutes:.05,words:16},t:"数据库",i:"vue",O:2,y:"a"}}],["/study/Express/",{loader:()=>B(()=>import("./index.html-CKKm-ki5.js"),__vite__mapDeps([34,1])),meta:{t:"Express",i:"vue"}}],["/study/HTML/",{loader:()=>B(()=>import("./index.html-BG2ZhEsm.js"),__vite__mapDeps([35,1])),meta:{t:"HTML",i:"html"}}],["/study/HTML/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D.html",{loader:()=>B(()=>import("./移动端适配.html-BGyVUwUg.js"),__vite__mapDeps([36,1])),meta:{d:16772832e5,l:"2023年2月25日",c:["HTML"],g:["移动端"],e:`<h2>移动端适配的目的</h2>
<p>通常我们在 pc 上看到的页面都是比较大的，在 pc 上访问页面是正常显示的，默认是不会被缩放的，除非是手动进行了缩放，页面才会被放大比例或者是缩小比例显示。但是在移动端是不一样的，如果将一个 pc 端的页面放到手机端进行访问，那么可能出现页面挤到一起、布局错乱或者出现横向滚动条的情况，我们给用户带来不好的体验。还有在屏幕尺寸大小不同的手机上进行访问页面时，页面显示的效果不能合理的展示，我们期望的是在手机屏幕较大时显示的内容比较大一些，手机屏幕小的时候页面的内容也会缩小进行自适应。</p>
<p>因此，移动端适配的目的是在不同尺寸的设备上，页面达到合理的展示（自适应）或者说是能够保持统一效果。</p>`,r:{minutes:9.19,words:2758},t:"移动端适配",i:"html",O:2,y:"a"}}],["/study/HTML/%E8%AF%AD%E4%B9%89%E5%8C%96%E4%B8%8ESEO.html",{loader:()=>B(()=>import("./语义化与SEO.html-B3P2oHG8.js"),__vite__mapDeps([37,1])),meta:{d:16772832e5,l:"2023年2月25日",c:["HTML"],g:["语义化"],e:`<h2>语义化</h2>
<h3>理解</h3>
<p>Web语义化是指使用恰当语义的html标签、class类名等内容，让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。语义化的web页面一方面可以让机器在更少的人类干预情况下收集并研究网页的信息，从而可以读懂网页的内容，然后将收集汇总的信息进行分析，结果为人类所用；另一方面它可以让开发人员读懂结构和用户以及屏幕阅读器（如果访客有视障）能够读懂内容。 简单来说就是利于 SEO，便于阅读维护理解。</p>
<figure><img src="/img/study/html/seo.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:4.48,words:1344},t:"语义化与SEO",i:"html",O:1,y:"a"}}],["/study/HTML/%E9%87%8D%E7%BB%98%E4%B8%8E%E9%87%8D%E6%8E%92.html",{loader:()=>B(()=>import("./重绘与重排.html-BzcEZ6ph.js"),__vite__mapDeps([38,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["HTML"],g:["页面渲染"],e:`<h2>重绘与回流</h2>
<ul>
<li>重绘：当我们对 DOM 的修改导致了样式的变化、却并未影响其几何属性（比如修改了颜色或背景色）时，浏览器不需重新计算元素的几何属性、直接为该元素绘制新的样式（跳过了上图所示的回流环节）。</li>
<li>重排：当我们对 DOM 的修改引发了 DOM 几何尺寸的变化（比如修改元素的宽、高或隐藏元素等）时，浏览器需要重新计算元素的几何属性（其他元素的几何属性和位置也会因此受到影响），然后再将计算的结果绘制出来。这个过程就是重排</li>
</ul>
<p>我们知道，当网页生成的时候，至少会渲染一次。在用户访问的过程中，还会不断重新渲染。重新渲染会重复重排+重绘或者只有重绘。
重排必定会发生重绘，重绘不一定会引发重排。重绘和重排会在我们设置节点样式时频繁出现，同时也会很大程度上影响性能。重排所需的成本比重绘高的多，改变父节点里的子节点很可能会导致父节点的一系列回流。</p>`,r:{minutes:2.36,words:707},t:"重绘与重排",i:"html",O:3,y:"a"}}],["/study/Javascript/DOM%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6.html",{loader:()=>B(()=>import("./DOM事件机制.html-DbSlQsSs.js"),__vite__mapDeps([39,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["事件机制"],e:`<h2>DOM 事件级别</h2>
<p>DOM 级别一共可以分为四个级别：DOM0 级、DOM1 级、DOM2 级和 DOM3 级。而 DOM 事件分为 3 个级别：DOM 0 级事件处理，DOM 2 级事件处理和 DOM 3 级事件处理。由于 DOM 1 级中没有事件的相关内容，所以没有 DOM 1 级事件。</p>
<h3>DOM 0 级事件</h3>
<p>el.onclick=function(){}</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 例1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> btn</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'btn'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onclick</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.05,words:2114},t:"DOM事件机制",i:"javascript",O:22,y:"a"}}],["/study/Javascript/ES6-ES11.html",{loader:()=>B(()=>import("./ES6-ES11.html-n565h4gh.js"),__vite__mapDeps([40,1])),meta:{d:16775424e5,l:"2023年2月28日",c:["Javascript"],g:["ES6-ES11"],e:`<h2>一、ES6 新特性（2015）</h2>
<h3>1. let 和 const</h3>
<p>在 ES6 中，新增了 let 和 const 关键字，其中 let 主要用来声明变量，而 const 通常用来声明常量。let、const 相对于 var 关键字有以下特点：</p>
<figure><img src="/img/study/javascript/let.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>这里主要介绍其中的四点：</p>
<h4>（1）重新赋值</h4>`,r:{minutes:42.11,words:12634},t:"ES6-ES11",i:"javascript",O:10,y:"a"}}],["/study/Javascript/",{loader:()=>B(()=>import("./index.html-Cm711kar.js"),__vite__mapDeps([41,1])),meta:{t:"Javascript",i:"javascript"}}],["/study/Javascript/Web%20API.html",{loader:()=>B(()=>import("./Web API.html-CGnIONh1.js"),__vite__mapDeps([42,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["Web API"],e:`<p>在 Web API 中，有非常有用的对象、属性和函数可用于执行小到访问 DOM 这样的小任务，大到处理音频、视频这样的复杂任务。常见的 API 有 Canvas、Web Worker、History、Fetch 等。下面就来看一些不常见但很实用的 Web API！</p>
<h2>1. Web Audio API</h2>
<p>Audio API 允许我们在 Web 上操作音频流，它可以用于 Web 上的音频源添加效果和过滤器。音频源可以来自<code>&lt;audio&gt;</code>、视频/音频源文件或音频网络流。</p>
<p>下面来看一个例子：</p>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;Web APIs&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">header</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"web-api-cnt"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"web-api-card"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"web-api-card-head"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                Demo - Audio</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"web-api-card-body"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"error"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"close"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">audio</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> controls</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> src</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"./audio.mp3"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"audio"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">audio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> onclick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">audioFromAudioFile</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;Init&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> onclick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">audioFromAudioFile</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">play</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;Play&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> onclick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">audioFromAudioFile</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pause</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;Pause&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> onclick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">audioFromAudioFile</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stop</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;Stop&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;Vol: &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> onchange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">audioFromAudioFile</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">changeVolume</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"range"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"vol"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"2"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> step</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0.01"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;Pan: &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">input</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> onchange</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">audioFromAudioFile</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">changePan</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379">()</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"range"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"panner"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> min</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"-1"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"1"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> step</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0.01"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"0"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> /&gt;&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> l</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">log</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> audioFromAudioFile</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> audioContext</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> volNode</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> pannerNode</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> mediaSource</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Init"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                audioContext</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> AudioContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                mediaSource</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> audioContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">createMediaElementSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">audio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                volNode</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> audioContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">createGain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                volNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">gain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                pannerNode</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> StereoPannerNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">audioContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">pan</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                mediaSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">volNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">pannerNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">connect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">audioContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">destination</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "此设备不支持 Web Audio API"</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">classList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">remove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"close"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            audio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> pause</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            audio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">pause</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            audio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> changeVolume</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            volNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">gain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Vol Range:"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> changePan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            pannerNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">gain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            l</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"Pan Range:"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            play</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            pause</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            stop</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            changePan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            changeVolume</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:10.04,words:3012},t:"Web API",i:"javascript",O:17,y:"a"}}],["/study/Javascript/this.html",{loader:()=>B(()=>import("./this.html-Ddk3oxRI.js"),__vite__mapDeps([43,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["Javascript"],g:["this"],e:`<h2>1. 执行上下文</h2>
<p>关于 this，还得从执行上下文说起。在执行上下文中，包含了变量环境、词法环境、外部环境、this：</p>
<figure><img src="/img/study/javascript/this.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>实际上，this 是和执行上下文绑定的，也就是说每个执行上下文都有一个 this，下面就来看看执行上下文的相关概念。</p>
<h3>（1）执行上下文概念</h3>
<p>执行上下文是评估和执行 JavaScript 代码的环境的抽象概念，当 JavaSciprt 代码在运行时，其运行在执行上下文中。JavaScript 中有三种执行上下文类型:</p>`,r:{minutes:11.66,words:3498},t:"this",i:"javascript",O:12,y:"a"}}],["/study/Javascript/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF.html",{loader:()=>B(()=>import("./事件循环.html-RA6IbKjd.js"),__vite__mapDeps([44,45,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["事件循环"],e:`<h2>1. 异步执行原理</h2>
<h3>（1）单线程的JavaScript</h3>
<p>我们知道，JavaScript是一种单线程语言，它主要用来与用户互动，以及操作DOM。</p>
<p>JavaScript 有同步和异步的概念，这就解决了代码阻塞的问题：</p>
<ul>
<li>同步：如果在一个函数返回的时候，调用者就能够得到预期结果，那么这个函数就是同步的；</li>
<li>异步：如果在函数返回的时候，调用者还不能够得到预期结果，而是需要在将来通过一定的手段得到，那么这个函数就是异步的。</li>
</ul>
<p>那单线程有什么好处呢？</p>
<ul>
<li>在 JS 运行的时候可能会阻止 UI 渲染，这说明了两个线程是互斥的。这是因为 JS 可以修改 DOM，如果在 JS 执行的时候 UI 线程还在工作，就可能导致不能安全的渲染 UI。</li>
<li>得益于 JS 是单线程运行的，可以达到节省内存，节约上下文切换时间的好处。</li>
</ul>`,r:{minutes:13.66,words:4099},t:"事件循环",i:"javascript",O:16,y:"a"}}],["/study/Javascript/%E4%BA%8C%E8%BF%9B%E5%88%B6.html",{loader:()=>B(()=>import("./二进制.html-fVB_jrYO.js"),__vite__mapDeps([46,45,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["Javascript"],g:["二进制"],e:`<p>JavaScript 提供了一些 API 来处理文件或原始文件数据，例如：File、Blob、FileReader、ArrayBuffer、base64 等。下面就来看看它们都是如何使用的，它们之间又有何区别和联系。</p>
<figure><img src="/img/study/javascript/erjinzhi.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h2>1. Blob</h2>
<p>Blob 全称为 binary large object ，即二进制大对象，它是 JavaScript 中的一个对象，表示原始的类似文件的数据。下面是 MDN 中对 Blob 的解释：</p>`,r:{minutes:20.27,words:6080},t:"二进制",i:"javascript",O:14,y:"a"}}],["/study/Javascript/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html",{loader:()=>B(()=>import("./内存泄漏.html-B6fgC8g7.js"),__vite__mapDeps([47,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["内存泄漏"],e:`<p>SPA（单页应用程序）的兴起，促使我们更加关注与内存相关的 JavaScript 编码实践。如果应用使用的内存越来越多，就会严重影响性能，甚至导致浏览器的崩溃。下面就来看看 JavaScript 中常见的内存泄漏以及如何避免内存泄漏。</p>
<h2>一、什么是内存泄漏？</h2>
<p>JavaScript 就是所谓的垃圾回收语言之一，垃圾回收语言通过定期检查哪些先前分配的内存仍然可以从应用程序的其他部分“访问”来帮助开发人员管理内存。垃圾回收语言中泄漏的主要原因是不需要的引用。如果你的 JavaScript 应用程序经常发生崩溃、高延迟和性能差，那么一个潜在的原因可能是内存泄漏。</p>`,r:{minutes:11.19,words:3358},t:"内存泄漏",i:"javascript",O:19,y:"a"}}],["/study/Javascript/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96.html",{loader:()=>B(()=>import("./前端模块化.html-C5dilrZx.js"),__vite__mapDeps([48,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["前端模块化"],e:`<h2>1. 模块概述</h2>
<h3>（1）概念</h3>
<p>由于代码之间会发生大量交互，如果结构不合理，这些代码就会变得难以维护、难以测试、难以调试。而使用模块化就解决了这些问题，模块化的特点如下：</p>
<ul>
<li>可重用性：当应用被组织成模块时，可以方便的在其他地方重用这些模块，避免编写重复代码，从而加快开发流程；</li>
<li>可读性：当应用变得越来越复杂时，如果在一个文件中编写所有功能，代码会变得难以阅读。如果使用模块设计应用，每个功能都分布在各自的模块中，代码就会更加清晰、易读；</li>
<li>可维护性：软件的美妙之处在于进化，从长远来看，我们需要不断为应用增加新的功能。当应用被结构化为模块时，可以轻松添加或删除功能。除此之外，修复错误也是软件维护的一部分，使用模块就可以更快速地定位问题。</li>
</ul>`,r:{minutes:23.06,words:6917},t:"前端模块化",i:"javascript",O:18,y:"a"}}],["/study/Javascript/%E5%8E%9F%E5%9E%8B%E9%93%BE%E4%B8%8E%E7%BB%A7%E6%89%BF.html",{loader:()=>B(()=>import("./原型链与继承.html-CfpeSauJ.js"),__vite__mapDeps([49,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["Javascript"],g:["原型"],e:`<h2>构造函数</h2>
<p>构造函数模式的目的就是为了创建一个自定义类，并且创建这个类的实例。构造函数模式中拥有了类和实例的概念，并且实例和实例之间是相互独立的，即实例识别。</p>
<p>构造函数就是一个普通的函数，创建方式和普通函数没有区别，不同的是构造函数习惯上首字母大写。另外就是调用方式的不同，普通函数是直接调用，而构造函数需要使用 new 关键字来调用。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">gender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> name</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> age</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gender</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> gender</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sayName</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        alert</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> per</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'孙悟空'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'男'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">gender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> name</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> age</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">gender</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> gender</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> dog</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'旺财'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'雄'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">per</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//当我们直接在页面中打印一个对象时，事件上是输出的对象的toString()方法的返回值</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dog</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:9.97,words:2991},t:"原型链与继承",i:"javascript",O:11,y:"a"}}],["/study/Javascript/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87.html",{loader:()=>B(()=>import("./变量提升.html-B2Wz851N.js"),__vite__mapDeps([50,1])),meta:{d:16775424e5,l:"2023年2月28日",c:["Javascript"],g:["变量提升"],e:`<p>在 ECMAScript6 中，新增了 let 和 const 关键字用来声明变量。在前端面试中也常被问到 let、const和 var 的区别，这就涉及到了变量提升、暂时性死区等知识点。下面就来看看什么是变量提升和暂时性死区。</p>
<h2>1. 什么变量提升？</h2>
<p>先来看看MDN中对变量提升的描述：</p>
<blockquote>
<p>变量提升（Hoisting）被认为是， Javascript中执行上下文 （特别是创建和执行阶段）工作方式的一种认识。在 ECMAScript® 2015 Language Specification 之前的JavaScript文档中找不到变量提升（Hoisting）这个词。</p>
</blockquote>`,r:{minutes:14.83,words:4448},t:"变量提升",i:"javascript",O:9,y:"a"}}],["/study/Javascript/%E5%AD%97%E7%AC%A6%E4%B8%B2.html",{loader:()=>B(()=>import("./字符串.html-BgC1UJko.js"),__vite__mapDeps([51,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Javascript"],g:["字符串"],e:`<h2>1. 获取字符串长度</h2>
<p>JavaScript 中的字符串有一个 length 属性，该属性可以用来获取字符串的长度：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'hello'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">str</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 输出结果：5</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:15.51,words:4654},t:"字符串",i:"javascript",O:3,y:"a"}}],["/study/Javascript/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B.html",{loader:()=>B(()=>import("./异步编程.html-DsXzIyvn.js"),__vite__mapDeps([52,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["异步编程"],e:`<p>浏览器中的 JavaScript 程序是典型的事件驱动型程序，即它们会等待用户触发后才真正的执行，而基于的 JavaScript 的服务器通常要等待客户端通过网络发送请求，然后才能执行。这种异步编程在 JavaScript 是很常见的，下面就来介绍几个异步编程的重要特性，它们可以使编写异步代码更容易。</p>
<p>本文将按照异步编程的出现时间来归纳整理：</p>
<figure><img src="/img/study/javascript/promise2.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:36.58,words:10975},t:"异步编程",i:"javascript",O:15,y:"a"}}],["/study/Javascript/%E6%93%8D%E4%BD%9C%E7%AC%A6.html",{loader:()=>B(()=>import("./操作符.html-kTt34cUC.js"),__vite__mapDeps([53,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Javascript"],g:["操作符"],e:`<h2>一、一元操作符</h2>
<p>操作符可以根据他们期待的操作符个数来分类，多数的 JavaScript 操作符都是二元操作符，二元操作符可以将两个表达式合成一个更复杂的表达式。JavaScript 也支持一元操作符，这些操作符可以将一个表达式转化为另一个更复杂的表达式。同时，JavaScript 中也有一个三元操作符，就是条件操作符（?:），它用于将三个表达式组成一个表达式。下面就先来看看一元操作符。</p>
<p>一元操作符具有以下特点：</p>
<ul>
<li>最简单的操作符，用来操作一个表达式；</li>
<li>具有高优先级和右结合性；</li>
<li>在必要时将操作数自动转化为数值。</li>
</ul>`,r:{minutes:25.44,words:7632},t:"操作符",i:"javascript",O:5,y:"a"}}],["/study/Javascript/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html",{loader:()=>B(()=>import("./数据类型.html-Cp6C2OvP.js"),__vite__mapDeps([54,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["Javascript"],g:["数据类型"],e:`<h2>有哪些数据类型</h2>
<p>JavaScript 共有八种数据类型，分别是 Undefined、Nul、Boolean、Number、String、Object、Symbol、Biglnt</p>
<p>其中 Symbol 和 Biglnt 是 ES6 中新增的数据类型：</p>
<ul>
<li>Symbol 代表创建后独一无二且不可变的数据类型，它主要是为了解决可能出现的全局变量冲突的问题。</li>
<li>Biglnt 是一种数字类型的数据，它可以表示任意精度格式的整数，使用 BigInt 可以安全地存储和操作大整数，即使这个数已经超出了 Number 能够表示的安全整数范围。</li>
</ul>`,r:{minutes:11.09,words:3327},t:"数据类型",i:"javascript",O:1,y:"a"}}],["/study/Javascript/%E6%95%B0%E7%BB%84.html",{loader:()=>B(()=>import("./数组.html-DkM3Q5tf.js"),__vite__mapDeps([55,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Javascript"],g:["数组"],e:`<h2>一、数组基础</h2>
<h3>1. 数组概述</h3>
<p>数组是我们最常用的数据类型之一，ECMAScript 数组跟其他语言的数组一样，都是一组有序的数据，但跟其他语言不同的是，数组中每个槽位可以存储任意类型的数据。除此之外，ECMAScript 数组的长度也是动态的，会随着数据的增删而改变。</p>
<p>数组是被等分为许多小块的连续内存段，每个小块都和一个整数关联，可以通过这个整数快速访问对应的小块。除此之外，数组拥有一个 length 属性，该属性表示的并不是数组元素的数量，而是指数组元素的最高序号加 1。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:37.59,words:11276},t:"数组",i:"javascript",O:2,y:"a"}}],["/study/Javascript/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D.html",{loader:()=>B(()=>import("./深拷贝与浅拷贝.html-eZhKTxgT.js"),__vite__mapDeps([56,1])),meta:{d:16775424e5,l:"2023年2月28日",c:["Javascript"],g:["深拷贝与浅拷贝"],e:`<h2>1.浅拷贝</h2>
<p>浅拷贝是指，一个新的对象对原始对象的属性值进行精确地拷贝，如果拷贝的是基本数据类型，拷贝的就是基本数据类型的值，如果是引用数据类型，拷贝的就是内存地址。如果其中一个对象的引用内存地址发生改变，另一个对象也会发生变化。</p>
<h3>（1）直接赋值</h3>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> arr1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> arr2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> arr1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">new2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">arr1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//  [0, 2, 3]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">arr1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//  [0, 2, 3]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">arr1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> arr2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//  true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:8.21,words:2462},t:"深拷贝与浅拷贝",i:"javascript",O:7,y:"a"}}],["/study/Javascript/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html",{loader:()=>B(()=>import("./类型转换.html-KRUnwFKR.js"),__vite__mapDeps([57,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Javascript"],g:["类型转换"],e:`<h2>1. 什么是类型转换？</h2>
<p>Javascript 是一种弱类型语言，这意味着变量是没有明确类型的，而是由 JavaScript 引擎在编译时隐式完成。类型转换是将一种数据类型转换为另一种数据类型，例如：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "twenty"</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // =&gt; "20twenty"</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"10"</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "10"</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // =&gt; 100 </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "x"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:14.85,words:4456},t:"类型转换",i:"javascript",O:4,y:"a"}}],["/study/Javascript/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82.html",{loader:()=>B(()=>import("./网络请求.html-B22vE2fY.js"),__vite__mapDeps([58,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["ajax"],e:`<h2>Ajax</h2>
<h3>什么是 Ajax</h3>
<p>Ajax 是一种异步请求数据的 web 开发技术，对于改善用户的体验和页面性能很有帮助。简单地说，在不需要重新刷新页面的情况下，Ajax 通过异步请求加载后台数据，并在网页上呈现出来。常见运用场景有表单验证是否登入成功、百度搜索下拉框提示和快递单号查询等等。</p>
<h3>原理</h3>
<p>在解释 Ajax 原理之前，我们不妨先举个“领导想找小李汇报一下工作”例子，领导想找小李问点事，就委托秘书去叫小李，自己就接着做其他事情，直到秘书告诉他小李已经到了，最后小李跟领导汇报工作。</p>
<figure><img src="/img/study/javascript/ajax.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:5.58,words:1673},t:"网络请求",i:"javascript",O:21,y:"a"}}],["/study/Javascript/%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96.html",{loader:()=>B(()=>import("./节流与防抖.html-DzfTC6nW.js"),__vite__mapDeps([59,1])),meta:{d:16776288e5,l:"2023年3月1日",c:["Javascript"],g:["节流与防抖"],e:`<h2>节流</h2>
<p>一个函数执行一次后，只有大于设定的执行周期后才会执行第二次。 有个需要频繁触发函数，出于优化性能角度，在规定时间内，只让函数触发的第一次生效，后面不生效。</p>
<h3>实现</h3>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 时间戳 立即执行</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> throttle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">awit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> old</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> that</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> args</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> arguments</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> now</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> newDate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">valueOf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">now</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> old</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">that</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            old</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> now</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 使用定时器 第一次不执行，最后一次调用会执行</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> throttle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> timeout</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> that</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> args</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> arguments</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            timeout</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">that</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                timeout</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> null</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">wait</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.65,words:494},t:"节流与防抖",i:"javascript",O:10,y:"a"}}],["/study/Javascript/%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC.html",{loader:()=>B(()=>import("./解构赋值.html-CvRfXjWj.js"),__vite__mapDeps([60,1])),meta:{d:16775424e5,l:"2023年2月28日",c:["Javascript"],g:["解构赋值"],e:`<h2>一、基本概念</h2>
<p>为什么需要解构呢，先来看一个例子</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> student</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ZhangSan'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    age</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 18</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    scores</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        math</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        english</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 85</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        chinese</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> displayInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'name:'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'math:'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">scores</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'english:'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">scores</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">english</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'chinese:'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">scores</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">chinese</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">displayInfo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.95,words:1786},t:"解构赋值",i:"javascript",O:8,y:"a"}}],["/study/Javascript/%E8%B7%A8%E5%9F%9F.html",{loader:()=>B(()=>import("./跨域.html-WAGwgn1P.js"),__vite__mapDeps([61,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Javascript"],g:["跨域"],e:`<h2>为什么跨域</h2>
<p>为什么会出现跨域问题呢？那就不得不讲浏览器的同源策略了，它规定了协议号-域名-端口号这三者必须都相同才符合同源策略</p>
<figure><img src="/img/study/javascript/cross.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>如有有一个不相同，就会出现跨域问题，不符合同源策略导致的后果有</p>
<ul>
<li>LocalStorge、SessionStorge、Cookie 等浏览器内存无法跨域访问</li>
<li>DOM 节点无法跨域操作</li>
<li>Ajax 请求无法跨域请求</li>
</ul>`,r:{minutes:8.18,words:2453},t:"跨域",i:"javascript",O:20,y:"a"}}],["/study/Javascript/%E9%81%8D%E5%8E%86%E5%BE%AA%E7%8E%AF.html",{loader:()=>B(()=>import("./遍历循环.html-BEu0pxKy.js"),__vite__mapDeps([62,1])),meta:{d:16777152e5,l:"2023年3月2日",c:["Javascript"],g:["遍历"],e:`<h2>一、数组遍历方法</h2>
<h3>1. forEach()</h3>
<p>forEach 方法用于调用数组的每个元素，并将元素传递给回调函数。数组中的每个值都会调用回调函数。其语法如下：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">forEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">currentValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">), </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">thisValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:13.22,words:3965},t:"遍历循环",i:"javascript",O:6,y:"a"}}],["/study/Javascript/%E9%97%AD%E5%8C%85.html",{loader:()=>B(()=>import("./闭包.html-Dh8TiULD.js"),__vite__mapDeps([63,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["Javascript"],g:["闭包"],e:`<h2>1. 作用域</h2>
<p>对于多数编程语言，最基本的功能就是能够存储变量当中的值、并且允许我们对这个变量的值进行访问和修改。那么有了变量之后，应该把它放在哪里、程序如何找到它们？是否需要提前约定好一套存储变量、访问变量的规则？答案是肯定的，这套规则就是作用域。</p>
<p>说到作用域那就不得不先说一说编译原理。</p>
<p>JavaScript 引擎进行编译的步骤和传统的编译语言非常相似，在传统的编译语言中，程序中的代码在执行之后会经历三个步骤：词法分析、语法分析、代码生成：</p>
<ul>
<li>词法分析：这个阶段会将源代码拆成最小的、不可再分的词法单元（token）。比如代码 var name = 'hello'；通常会被分解成 var 、name、=、hello、; 这五个词法单元。代码中的空格在 JavaScript 中是被直接忽略的。</li>
<li>语法分析：这个过程是将上一步生成的 token 数据，根据语法规则转为 AST。如果源码符合语法规则，这一步就会顺利完成。如果源码存在语法错误，这一步就会终止，并抛出一个“语法错误”。</li>
<li>代码生成：这一步就是将 AST 转化为可执行代码，简单来说就是将 var name = 'hello'; 的 AST 转化为一组机器指令，用来创建一个 name 变量（需要给 name 分配内存），并将一个值储存在 name 中。</li>
</ul>`,r:{minutes:14.22,words:4265},t:"闭包",i:"javascript",O:13,y:"a"}}],["/study/Linux/01.%E4%BB%8B%E7%BB%8D.html",{loader:()=>B(()=>import("./01.介绍.html-BRubwHsn.js"),__vite__mapDeps([64,1])),meta:{d:17157312e5,l:"2024年5月15日",c:["Linux"],g:["Linux"],e:`<h2>Linux</h2>
<ul>
<li>linux 是一套免费使用和自由传播到类 Unix 操作系统</li>
<li>在服务器端领域和嵌入式领域有非常广泛的应用</li>
</ul>
<h2>版本</h2>
<p>分为内核版本和发型版本</p>
<ul>
<li>kemei</li>
<li>各个厂商惠制作自己的发型版本
<ul>
<li>redhat</li>
<li>CentOS</li>
<li>ubuntu</li>
<li>fedora</li>
</ul>
</li>
</ul>
<h2>Linux 与 Windows 的不同</h2>
<ul>
<li>Linux 严格区分大小写</li>
<li>Linux 中所有内容以文件形式保存，包括硬件、用户和文件</li>
<li>Linux 不靠扩展名区分文件类型，是靠权限来区分，但是有一些约定的扩展名，是给管理员看的
<ul>
<li>压缩包 .gz .bz2 .tar .tgz</li>
<li>二进制文件 .rpm</li>
<li>网页文件 .html .php</li>
<li>脚本文件 .sh</li>
<li>配置文件 .conf</li>
</ul>
</li>
<li>Windows 下的程序不能直接在 Linux 中安装和运行</li>
<li>Linux 更多实用字符界面
<ul>
<li>占用的系统资源更少</li>
<li>减少了出错和被攻击的可能行，会让系统更稳定</li>
</ul>
</li>
</ul>`,r:{minutes:.82,words:246},t:"介绍",i:"linux",O:1,y:"a"}}],["/study/Linux/02.%E5%9F%BA%E7%A1%80.html",{loader:()=>B(()=>import("./02.基础.html-D4ZfBZCA.js"),__vite__mapDeps([65,1])),meta:{d:17174592e5,l:"2024年6月4日",c:["Linux"],g:["Linux"],e:`<h2>目录结构</h2>
<table>
<thead>
<tr>
<th style="text-align:left">目录</th>
<th style="text-align:center">用途</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/</td>
<td style="text-align:center">根目录</td>
</tr>
<tr>
<td style="text-align:left">/bin</td>
<td style="text-align:center">普通的基本命令，如 ls、chmod 等，一般的用户也都可以使用</td>
</tr>
<tr>
<td style="text-align:left">/boot</td>
<td style="text-align:center">这里存放的是启动 Linux 时使用的一些核心文件，启动目录，启动相关文件</td>
</tr>
<tr>
<td style="text-align:left">/dev</td>
<td style="text-align:center">该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的</td>
</tr>
<tr>
<td style="text-align:left">/etc</td>
<td style="text-align:center">存放所有的系统管理所需要的配置文件和子目录</td>
</tr>
<tr>
<td style="text-align:left">/home</td>
<td style="text-align:center">普通用户的家目录，可以操作</td>
</tr>
<tr>
<td style="text-align:left">/lib</td>
<td style="text-align:center">系统库保存目录</td>
</tr>
<tr>
<td style="text-align:left">/media</td>
<td style="text-align:center">U 盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下</td>
</tr>
<tr>
<td style="text-align:left">/mnt</td>
<td style="text-align:center">移动设备挂载目录</td>
</tr>
<tr>
<td style="text-align:left">/opt</td>
<td style="text-align:center">这是给主机额外安装软件所摆放的目录。比如你安装一个 ORACLE 数据库则就可以放到这个目录下,默认是空的</td>
</tr>
<tr>
<td style="text-align:left">/proc</td>
<td style="text-align:center">正在运行的内核信息映射、主要输出进行信息、内存资源信息和磁盘分析信息等</td>
</tr>
<tr>
<td style="text-align:left">/root</td>
<td style="text-align:center">超级用户的家目录，可以操作</td>
</tr>
<tr>
<td style="text-align:left">/sbin</td>
<td style="text-align:center">基本的系统命令，如 shutdown、reboot，用于启动系统，只有管理员才可以运行</td>
</tr>
<tr>
<td style="text-align:left">/sys</td>
<td style="text-align:center">系统设备等驱动程序信息</td>
</tr>
<tr>
<td style="text-align:left">/tmp</td>
<td style="text-align:center">临时目录，可以操作</td>
</tr>
<tr>
<td style="text-align:left">/user/bin</td>
<td style="text-align:center">是你在后期安装的一些软件的运行脚本</td>
</tr>
<tr>
<td style="text-align:left">/user/sbin</td>
<td style="text-align:center">放置一些用户安装的系统管理的必备程序</td>
</tr>
<tr>
<td style="text-align:left">/var</td>
<td style="text-align:center">这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件</td>
</tr>
</tbody>
</table>`,r:{minutes:4.06,words:1219},t:"基础",i:"linux",O:2,y:"a"}}],["/study/Linux/03.%E7%94%A8%E6%88%B7%E5%92%8C%E7%94%A8%E6%88%B7%E7%BB%84.html",{loader:()=>B(()=>import("./03.用户和用户组.html-3fuPy_y3.js"),__vite__mapDeps([66,1])),meta:{d:17161632e5,l:"2024年5月20日",c:["Linux"],g:["Linux"],e:`<h2>用户和用户组</h2>
<ul>
<li>使用操作系统的人都是用户</li>
<li>用户组是具有相同系统权限的一组用户</li>
</ul>
<h2>配置文件</h2>
<h3>/ect/group</h3>
<ul>
<li>/etc/group 存储当前系统中所有用户信息</li>
<li>root 组编好为 0</li>
<li>1-499 为系统预留的编号 预留给安装的软件和服务的</li>
<li>用户手动创建的用户组从 500 开始</li>
<li>组密码占位符都是 x</li>
<li>如果组内只有高一个用户，而且用户名和组名相同的话，是可以省略用户名的</li>
</ul>`,r:{minutes:5.44,words:1633},t:"用户和用户组",i:"linux",O:3,y:"a"}}],["/study/Linux/04.%E7%9B%AE%E5%BD%95%E4%B8%8E%E6%96%87%E4%BB%B6.html",{loader:()=>B(()=>import("./04.目录与文件.html-BSN2--9E.js"),__vite__mapDeps([67,1])),meta:{d:17157312e5,l:"2024年5月15日",c:["Linux"],g:["Linux"],e:`<h2>cd</h2>
<p>命令用于改变当前工作目录的命令，切换到指定的路径。</p>
<p>若目录名称省略，则变换至使用者的 home 目录 (也就是刚 login 时所在的目录)。</p>
<p><code>~</code>也表示为 home 目录 的意思，<code>.</code>则是表示目前所在的目录，<code>..</code>则表示目前目录位置的上一层目录。</p>
<h4>语法</h4>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">cd</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [dirName]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:26.97,words:8092},t:"目录与文件",i:"linux",O:4,y:"a"}}],["/study/Linux/05.%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90.html",{loader:()=>B(()=>import("./05.文件权限.html-BGwcytQB.js"),__vite__mapDeps([68,1])),meta:{d:17161632e5,l:"2024年5月20日",c:["Linux"],g:["Linux"],e:`<h2>文件权限</h2>
<p>在 Linux 中我们可以使用 ll 或者 ls –l 命令来显示一个文件的属性以及文件所属的用户和组，如：</p>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[root@www /]# ls -l</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">total</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 64</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dr-xr-xr-x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">   2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4096</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Dec</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 14</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  2012</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> bin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">dr-xr-xr-x</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">   4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> root</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4096</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> Apr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 19</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  2012</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> boot</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.24,words:2171},t:"文件权限",i:"linux",O:5,y:"a"}}],["/study/Linux/06.vi%E7%BC%96%E8%BE%91%E5%99%A8.html",{loader:()=>B(()=>import("./06.vi编辑器.html-CxpJxaxH.js"),__vite__mapDeps([69,1])),meta:{d:17159904e5,l:"2024年5月18日",c:["Linux"],g:["Linux"],e:`<h2>vi 编辑器</h2>
<ul>
<li>VI visual interface（可视化接口）</li>
<li>Linux 中的编辑器，类似于 windows 中的记事本</li>
<li>VIM 是 VI 编辑器的升级版</li>
<li>不需要鼠标，只用键盘就可以</li>
</ul>
<figure><img src="/img/study/linux/vim.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h2>操作模式</h2>
<h3>命令模式</h3>
<p>用户刚刚启动 vi/vim，便进入了命令模式。</p>`,r:{minutes:8.51,words:2552},t:"vi编辑器",i:"linux",O:6,y:"a"}}],["/study/Linux/07.yum.html",{loader:()=>B(()=>import("./07.yum.html-C0wKZDHN.js"),__vite__mapDeps([70,1])),meta:{d:17175456e5,l:"2024年6月5日",c:["Linux"],g:["Linux"],e:`<p>yum（ Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。</p>
<p>基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p>
<p>yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。</p>
<h2>语法</h2>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">yum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [options] [command] [package ...]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:1.2,words:359},t:"yum",i:"linux",O:7,y:"a"}}],["/study/Linux/08.shell%E5%9F%BA%E7%A1%80.html",{loader:()=>B(()=>import("./08.shell基础.html-CfYwD8rs.js"),__vite__mapDeps([71,1])),meta:{d:17162496e5,l:"2024年5月21日",c:["Linux"],g:["Linux"],e:`<h2>shell 基础</h2>
<ul>
<li>shell 是一个命令行解释器，它为用户提供了一个向 Linux 内核发动亲故以便运行程序的界面系统级程序</li>
<li>用户可以用 Shell 来启动、挂起、停止或者编写一些程序</li>
<li>shell 还是一个功能相当强大的编程语言，易编写、易调试、灵活性较强</li>
<li>shell 是解释执行的脚本语言，在 shell 中可以直接调用 Linux 系统命令</li>
</ul>
<h3>echo</h3>
<ul>
<li>输出命令</li>
<li>-e 激活转义字符</li>
</ul>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> hello</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">echo</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "a\\tb"</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.4,words:2221},t:"shell基础",i:"linux",O:8,y:"a"}}],["/study/Linux/",{loader:()=>B(()=>import("./index.html-2jsYO50r.js"),__vite__mapDeps([72,1])),meta:{t:"Linux",i:"linux"}}],["/study/Nginx/01.%E5%AE%89%E8%A3%85.html",{loader:()=>B(()=>import("./01.安装.html-CSlr35Bt.js"),__vite__mapDeps([73,1])),meta:{d:17175456e5,l:"2024年6月5日",c:["Nginx"],g:["Nginx"],e:`<h2>安装</h2>
<h3>源码安装</h3>
<h4>官网</h4>
<p><a href="https://nginx.org/en/download.html" target="_blank" rel="noopener noreferrer">https://nginx.org/en/download.html</a></p>
<figure><img src="/img/study/nginx/nginx.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h4>解压 Nginx 包</h4>`,r:{minutes:1.86,words:558},t:"安装",i:"nginx",O:1,y:"a"}}],["/study/Nginx/02.%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html",{loader:()=>B(()=>import("./02.目录结构.html-s1RCUlFP.js"),__vite__mapDeps([74,1])),meta:{d:1717632e6,l:"2024年6月6日",c:["Nginx"],g:["Nginx"],e:`<h2>目录结构</h2>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[root@localhost ~]# tree /usr/local/nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">/usr/local/nginx</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> client_body_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                 # POST 大文件暂存目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> conf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                             # Nginx所有配置文件的目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fastcgi.conf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                 # fastcgi相关参数的配置文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fastcgi.conf.default</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">         # fastcgi.conf的原始备份文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fastcgi_params</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">               # fastcgi的参数文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fastcgi_params.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> koi-utf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> koi-win</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mime.types</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                   # 媒体类型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> mime.types.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx.conf</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                   #这是Nginx默认的主配置文件，日常使用和修改的文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx.conf.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> scgi_params</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                  # scgi相关参数文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> scgi_params.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> uwsgi_params</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                 # uwsgi相关参数文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> uwsgi_params.default</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> win-utf</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> fastcgi_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                     # fastcgi临时数据目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> html</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                             # Nginx默认站点目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 50x.html</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                     # 错误页面优雅替代显示文件，例如出现502错误时会调用此页面</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> index.html</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                   # 默认的首页文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> logs</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                             # Nginx日志目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> access.log</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                   # 访问日志文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> error.log</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                    # 错误日志文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx.pid</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                    # pid文件，Nginx进程启动后，会把所有进程的ID号写到此文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> proxy_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                       # 临时目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> sbin</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                             # Nginx 可执行文件目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">   └──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> nginx</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                        # Nginx 二进制可执行程序</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> scgi_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                        # 临时目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">└──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> uwsgi_temp</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                       # 临时目录</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.89,words:1168},t:"目录结构",i:"nginx",O:2,y:"a"}}],["/study/Nginx/",{loader:()=>B(()=>import("./index.html-MJYWIIzA.js"),__vite__mapDeps([75,1])),meta:{t:"Nginx",i:"nginx"}}],["/study/React/",{loader:()=>B(()=>import("./index.html-C3Gt0v3e.js"),__vite__mapDeps([76,1])),meta:{t:"React",i:"react"}}],["/study/React/react-redux.html",{loader:()=>B(()=>import("./react-redux.html-BRK5fcGj.js"),__vite__mapDeps([77,1])),meta:{d:17064864e5,l:"2024年1月29日",c:["react"],g:["redux"],e:`<h2>index.js</h2>
<p>src 目录下 index.jsx</p>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> React</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'react'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ReactDOM</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'react-dom/client'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ConfigProvider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'antd'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> zhCN</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'antd/locale/zh_CN'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> Vote</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './views/Vote'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> store</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './store'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">Provider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'react-redux'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> root</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> ReactDOM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">createRoot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'root'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ConfigProvider</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> locale</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">zhCN</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Provider</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> store</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">store</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Vote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Vote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Provider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">ConfigProvider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.57,words:470},t:"react-redux",i:"react",O:16,y:"a"}}],["/study/React/redux%20Toolkit.html",{loader:()=>B(()=>import("./redux Toolkit.html-CGbe1KND.js"),__vite__mapDeps([78,1])),meta:{d:17064864e5,l:"2024年1月29日",c:["react"],g:["redux"],e:`<h2>基础流程</h2>
<p>src 目录下创建 store 文件夹,store 目录下创建 index.js</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">configureStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '@reduxjs/toolkit'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> counterSlice</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './features/counterSlice.ts'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// configureStore创建一个redux数据</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> store</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> configureStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 合并多个Slice</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    reducer</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        counter</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> counterSlice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> store</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.76,words:829},t:"redux Toolkit",i:"react",O:17,y:"a"}}],["/study/React/redux.html",{loader:()=>B(()=>import("./redux.html-CnIgvDTC.js"),__vite__mapDeps([79,1])),meta:{d:17064864e5,l:"2024年1月29日",c:["react"],g:["redux"],e:`<h2>基础</h2>
<h3>index.js</h3>
<p>在 Src 目录下新建 store 文件夹 /src/store/index.js</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">createStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'redux'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> initial</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    supNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    oppNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reducer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> reducer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">state</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> initial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 浅拷贝，不直接修改容器中的状态,而是在return 时再修改</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    state</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">...</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    switch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">action</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'VOTE_SUP'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">supNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">++</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        case</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'VOTE_OPP'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">oppNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">++</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            break</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> state</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> store</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> createStore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">reducer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> store</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.05,words:914},t:"redux",i:"react",O:15,y:"a"}}],["/study/React/setState.html",{loader:()=>B(()=>import("./setState.html-rwDaKpbS.js"),__vite__mapDeps([80,1])),meta:{d:1705968e6,l:"2024年1月23日",c:["React"],g:["setState"],e:`<h2>用法</h2>
<h3>基本用法</h3>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">key</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:8.04,words:2411},t:"setState",i:"react",O:4,y:"a"}}],["/study/React/useCallback.html",{loader:()=>B(()=>import("./useCallback.html-VSCzqLPB.js"),__vite__mapDeps([81,1])),meta:{d:17060544e5,l:"2024年1月24日",c:["React"],g:["Hook"],e:`<h2>定义</h2>
<p>useCallback 是对 useMemo 的特化，它可以返回一个缓存版本的函数，只有当它的依赖项改变时，函数才会被重新创建。这意味着如果依赖没有改变，函数引用保持不变，从而避免了因函数引用改变导致的不必要的重新渲染。</p>
<h2>为什么需要 useCallback</h2>
<p>想象这个场景：你有一个 React.memo 化的子组件，该子组件接受一个父组件传递的函数作为 prop。如果父组件重新渲染，而且这个函数是在父组件的函数体内定义的，那么每次父组件渲染时，都会为子组件传递一个新的函数实例。这可能会导致子组件不必要地重新渲染，即使该函数的实际内容没有任何变化。</p>`,r:{minutes:5.34,words:1603},t:"useCallback",i:"react",O:12,y:"a"}}],["/study/React/useContext.html",{loader:()=>B(()=>import("./useContext.html-TbfrZPbY.js"),__vite__mapDeps([82,1])),meta:{d:17060544e5,l:"2024年1月24日",c:["React"],g:["Hook"],e:`<h2>基础用法</h2>
<h3>创建 Context</h3>
<p>首先，我们需要使用 React.createContext 创建一个 context 对象：</p>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> MyContext</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">createContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">defaultValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:3.13,words:940},t:"useContext",i:"react",O:7,y:"a"}}],["/study/React/useDeferredValue.html",{loader:()=>B(()=>import("./useDeferredValue.html-D5GgTS-W.js"),__vite__mapDeps([83,1])),meta:{d:17061408e5,l:"2024年1月25日",c:["React"],g:["Hook"],e:`<h2>useTransition 和 useDeferredValue 的差异</h2>
<ul>
<li>useTransition 主要关注点是状态的过渡。它允许开发者控制某个更新的延迟更新，还提供了过渡标识，让开发者能够添加过渡反馈。</li>
<li>useDeferredValue 主要关注点是单个值的延迟更新。它允许你把特定状态的更新标记为低优先级。</li>
</ul>
<p>如果你想提供过渡反馈，就用 useTransition，如果不需要提供过渡反馈，用 useDeferredValue 就可以。</p>
<h2>基础使用</h2>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> deferredValue</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useDeferredValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">someValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:3.91,words:1174},t:"useDeferredValue",i:"react",O:14,y:"a"}}],["/study/React/useEffect.html",{loader:()=>B(()=>import("./useEffect.html-D8ir0mXH.js"),__vite__mapDeps([84,1])),meta:{d:1705968e6,l:"2024年1月23日",c:["React"],g:["Hook"],e:`<h2>定义</h2>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">useEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:3.62,words:1085},t:"useEffect",i:"react",O:9,y:"a"}}],["/study/React/useLayoutEffect.html",{loader:()=>B(()=>import("./useLayoutEffect.html-B8GahYww.js"),__vite__mapDeps([85,1])),meta:{d:1705968e6,l:"2024年1月23日",c:["React"],g:["Hook"],e:`<h2>useEffect vs useLayoutEffect</h2>
<p>useEffect 和 useLayoutEffect 的区别仅有一个：</p>
<ul>
<li>useEffect 执行时机是在 React 的渲染和提交阶段之后；</li>
<li>useLayoutEffect 执行时机是在 React 的提交阶段之后，但在浏览器实际绘制屏幕之前。</li>
</ul>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> React</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">useEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">useLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">useRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'react'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> BoxComparison</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">heightEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">setHeightEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">heightLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">setHeightLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> refEffect</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> refLayoutEffect</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    useEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">refEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            setHeightEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">refEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">offsetWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }, [])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    useLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">refLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            setHeightLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">refLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">offsetWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }, [])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;使用 useEffect&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    ref</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">refEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    style</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">={{
                        width: '200px',
                        height: '50px',
                        background: 'lightgray',
                    }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    这是一个方块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    style</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">={{
                        width: '100px',
                        height: \`\${heightEffect}px\`,
                        background: 'red',
                        marginTop: '10px',
                    }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    红色方块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> style</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">={{ marginTop: '30px' }}&gt;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF">                &lt;h2&gt;使用</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF"> useLayoutEffect&lt;/h2&gt;</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF">                &lt;div</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    ref</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">refLayoutEffect</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    style</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">={{
                        width: '200px',
                        height: '50px',
                        background: 'lightgray',
                    }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    这是一个方块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">                    style</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">={{
                        width: '100px',
                        height: \`\${heightLayoutEffect}px\`,
                        background: 'blue',
                        marginTop: '10px',
                    }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    蓝色方块</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">        &lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> BoxComparison</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4,words:1201},t:"useLayoutEffect",i:"react",O:10,y:"a"}}],["/study/React/useMemo.html",{loader:()=>B(()=>import("./useMemo.html-10AHzo0A.js"),__vite__mapDeps([86,1])),meta:{d:17060544e5,l:"2024年1月24日",c:["React"],g:["Hook"],e:`<h2>定义</h2>
<p>它的核心目的是通过缓存计算结果，避免在组件渲染时进行不必要的重复计算，从而优化性能。这意味着只有当其依赖项发生变化时，useMemo 才会重新计算这个值，否则它将重用之前的结果。</p>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cachedValue</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useMemo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">calculateValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:4.36,words:1308},t:"useMemo",i:"react",O:11,y:"a"}}],["/study/React/useReducer.html",{loader:()=>B(()=>import("./useReducer.html-BY1bqWEy.js"),__vite__mapDeps([87,1])),meta:{d:17060544e5,l:"2024年1月24日",c:["React"],g:["Hook"],e:`<h2>基础用法</h2>
<p>与 useState 相似，useReducer 也是 React 的 Hook，而且也只能放在组件最顶层使用。与前者不同的地方在于，它是通过 action 来更新状态的，使状态更新逻辑更具可读性。</p>
<p>useReducer 接收三个参数：</p>
<ul>
<li>reducer 函数：指定如何更新状态的还原函数，它必须是纯函数，以 state 和 dispatch 为参数，并返回下一个状态。</li>
<li>初始状态：初始状态的计算值。</li>
<li>（可选的）初始化参数：用于返回初始状态。如果未指定，初始状态将设置为 initialArg；如果有指定，初始状态将被设置为调用 init(initialArg)的结果。</li>
</ul>`,r:{minutes:4.89,words:1467},t:"useReducer",i:"react",O:6,y:"a"}}],["/study/React/useRef.html",{loader:()=>B(()=>import("./useRef.html-B7ZUJCms.js"),__vite__mapDeps([88,1])),meta:{d:1705968e6,l:"2024年1月23日",c:["React"],g:["Hook"],e:`<h2>定义</h2>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 定义</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> inputRef</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 使用</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">inputRef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">current</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.86,words:1459},t:"useRef",i:"react",O:8,y:"a"}}],["/study/React/useState.html",{loader:()=>B(()=>import("./useState.html-B9k_jxNC.js"),__vite__mapDeps([89,1])),meta:{d:1705968e6,l:"2024年1月23日",c:["React"],g:["Hook"],e:`<h2>基本用法</h2>
<p>useState 主要用于给组件添加状态变量。注意，我们只能在组件的顶层或自定义的 Hooks 中调用 useState。</p>
<h2>初始化</h2>
<h3>基础定义</h3>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">setAge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">42</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:2.64,words:791},t:"useState",i:"react",O:5,y:"a"}}],["/study/React/useTransition.html",{loader:()=>B(()=>import("./useTransition.html-CMczylhu.js"),__vite__mapDeps([90,1])),meta:{d:17061408e5,l:"2024年1月25日",c:["React"],g:["Hook"],e:`<h2>定义</h2>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">isPending</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">startTransition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> useTransition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:3.28,words:984},t:"useTransition",i:"react",O:13,y:"a"}}],["/study/React/%E6%8F%92%E6%A7%BD.html",{loader:()=>B(()=>import("./插槽.html-CjMsDPXJ.js"),__vite__mapDeps([91,1])),meta:{d:1703376e6,l:"2023年12月24日",c:["React"],g:["插槽"],e:`<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> React</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'react'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> ReactDOM</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'react-dom/client'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> DemoOne</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './views/DemoOne'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> DemoTwo</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './views/DemoTwo'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> root</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> ReactDOM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">createRoot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'root'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">root</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoOne</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            title</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'我是标题'</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'box'</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            style</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">={{ fontSize: '20px' }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;哈哈哈哈哈哈哈哈哈&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;呵呵呵呵呵呵呵&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoOne</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoOne</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            title</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'我是标题'</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'box'</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">            style</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF">={{ fontSize: '20px' }}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;12312312312312&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoOne</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoOne</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> title</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'我是标题'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoOne</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoTwo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> slot</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'footer'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;我是页脚&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> slot</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'header'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;我是页眉&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        &lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">DemoTwo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &lt;/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.81,words:243},t:"插槽",i:"react",O:3,y:"a"}}],["/study/React/%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1.html",{loader:()=>B(()=>import("./父子组件通信.html-DleyoFXr.js"),__vite__mapDeps([92,1])),meta:{d:1703376e6,l:"2023年12月24日",c:["React"],g:["父子组件通信"],e:`<h2>类组件</h2>
<h3>父子组件通信</h3>
<div class="language-jsx line-numbers-mode" data-highlighter="shiki" data-ext="jsx" data-title="jsx" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vote.jsx</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> React</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'react'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> VoteMain</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './VoteMain'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> VoteFooter</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './VoteFooter'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Vote</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B"> React</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Component</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    state</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        supNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">        oppNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    change</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">supNum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">oppNum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ===</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'sup'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">            this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">                supNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> supNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            })</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            oppNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> oppNum</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        let</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">supNum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">oppNum</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">state</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'vote-box'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'header'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'title'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;React&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> className</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'num'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">supNum</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> oppNum</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">span</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">VoteMain</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> supNum</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">supNum</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> oppNum</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">oppNum</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">VoteMain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">                &lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">VoteFooter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> change</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">{</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">change</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD">}</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;&lt;/</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">VoteFooter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD"> default</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> Vote</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.28,words:983},t:"父子组件通信",i:"react",O:2,y:"a"}}],["/study/React/%E8%84%9A%E6%89%8B%E6%9E%B6.html",{loader:()=>B(()=>import("./脚手架.html-_gBba9-C.js"),__vite__mapDeps([93,1])),meta:{d:1703376e6,l:"2023年12月24日",c:["React"],g:["脚手架"],e:`<h2>安装脚手架</h2>
<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">npm</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> create-react-app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> -g</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:1.29,words:387},t:"脚手架",i:"react",O:1,y:"a"}}],["/study/Typescript/",{loader:()=>B(()=>import("./index.html-CJ6vNMP7.js"),__vite__mapDeps([94,1])),meta:{t:"Typescript",i:"typescript"}}],["/study/Typescript/%E6%8E%A5%E5%8F%A3.html",{loader:()=>B(()=>import("./接口.html-deSVGpCT.js"),__vite__mapDeps([95,1])),meta:{d:1702512e6,l:"2023年12月14日",c:["Typescript"],g:["接口"],e:`<p>在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（implement）。</p>
<p>TypeScript 中的接口是一个非常灵活的概念，除了可用于[对类的一部分行为进行抽象]以外，也常用于对「对象的形状（Shape）」进行描述。</p>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> string</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    age</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> number</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> tom</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'Tom'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    age</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.87,words:1160},t:"接口",i:"typescript",O:5,y:"a"}}],["/study/Typescript/%E6%A8%A1%E5%9D%97%E5%92%8C%E5%A3%B0%E6%98%8E%E6%96%87%E4%BB%B6.html",{loader:()=>B(()=>import("./模块和声明文件.html-C_33Zvfk.js"),__vite__mapDeps([96,1])),meta:{d:1702512e6,l:"2023年12月14日",c:["Typescript"],g:["模块和声明文件"],e:`<h2>全局模块</h2>
<p>在默认情况下，当你开始在一个新的 TypeScript 文件中写下代码时，它处于全局命名空间中</p>
<p>使用全局变量空间是危险的，因为它会与文件内的代码命名冲突。我们推荐使用下文中将要提到的文件模块</p>
<p>foo.ts</p>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> foo</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 123</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:2.21,words:662},t:"模块和声明文件",i:"typescript",O:10,y:"a"}}],["/study/Typescript/%E6%B3%9B%E5%9E%8B.html",{loader:()=>B(()=>import("./泛型.html-BZpCiQza.js"),__vite__mapDeps([97,1])),meta:{d:1702512e6,l:"2023年12月14日",c:["Typescript"],g:["泛型"],e:`<p>泛型（Generics）是允许同一个函数接受不同类型参数的一种模板。相比于使用 any 类型，使用泛型来创建可复用的组件要更好，因为泛型会保留参数类型。</p>
<h2>泛型接口</h2>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> GenericIdentityFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">arg</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> T</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:9.49,words:2848},t:"泛型",i:"typescript",O:6,y:"a"}}],["/study/Typescript/%E7%B1%BB.html",{loader:()=>B(()=>import("./类.html-rCDNIWRn.js"),__vite__mapDeps([98,1])),meta:{d:1702512e6,l:"2023年12月14日",c:["Typescript"],g:["类"],e:`<h2>类的定义</h2>
<p>在面向对象语言中，类是一种面向对象计算机编程语言的构造，是创建对象的蓝图，描述了所创建的对象共同的属性和方法。在 TypeScript 中，我们可以通过 Class 关键字来定义一个类：</p>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">  name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">!:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//如果初始属性没赋值就需要加上!</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">_name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> _name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> void</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> p1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"hello"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">p1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.49,words:1048},t:"类",i:"typescript",O:7,y:"a"}}],["/study/Typescript/%E7%B1%BB%E5%9E%8B.html",{loader:()=>B(()=>import("./类型.html-BSZSzSYs.js"),__vite__mapDeps([99,1])),meta:{d:17024256e5,l:"2023年12月13日",c:["Typescript"],g:["类型"],e:`<h2>基础类型</h2>
<h3>boolean 类型</h3>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> boolean</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:11.4,words:3419},t:"类型",i:"typescript",O:1,y:"a"}}],["/study/Typescript/%E7%B1%BB%E5%9E%8B%E5%AE%88%E5%8D%AB.html",{loader:()=>B(()=>import("./类型守卫.html-D0sRAeKR.js"),__vite__mapDeps([100,1])),meta:{d:17024256e5,l:"2023年12月13日",c:["Typescript"],g:["类型守卫"],e:`<h2>in 关键字</h2>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Admin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> string</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    privileges</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">interface</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> string</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    startDate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Date</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">type</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UnknownEmployee</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Employee</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Admin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> printEmployeeInformation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">emp</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> UnknownEmployee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Name: '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'privileges'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Privileges: '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">privileges</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'startDate'</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Start Date: '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> emp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">startDate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.82,words:247},t:"类型守卫",i:"typescript",O:3,y:"a"}}],["/study/Typescript/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E4%B8%8E%E6%96%AD%E8%A8%80.html",{loader:()=>B(()=>import("./类型推断与断言.html-ONP4FyLJ.js"),__vite__mapDeps([101,1])),meta:{d:17024256e5,l:"2023年12月13日",c:["Typescript"],g:["类型推断与断言"],e:`<h2>类型推断</h2>
<p>在很多情况下，TypeScript 会根据上下文环境自动推断出变量的类型，无须我们再写明类型注解。因此，上面的示例可以简化为如下所示内容：</p>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> str</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'this is string'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 等价 let str: string = 'this is string'; 下面类似</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> num</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 等价</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> bool</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 等价</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> str</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'this is string'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 不等价</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> num</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 不等价</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">  const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> bool</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 不等价</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.41,words:1023},t:"类型推断与断言",i:"typescript",O:2,y:"a"}}],["/study/Typescript/%E7%BC%96%E8%AF%91.html",{loader:()=>B(()=>import("./编译.html-Pu_wLm4Y.js"),__vite__mapDeps([102,1])),meta:{d:1702512e6,l:"2023年12月14日",c:["Typescript"],g:["编译"],e:`<h2>tsconfig.json 的作用</h2>
<ul>
<li>用于标识 TypeScript 项目的根路径；</li>
<li>用于配置 TypeScript 编译器；</li>
<li>用于指定编译的文件。</li>
</ul>
<h2>tsconfig.json 重要字段</h2>
<ul>
<li>files - 设置要编译的文件的名称；</li>
<li>include - 设置需要进行编译的文件，支持路径模式匹配；</li>
<li>exclude - 设置无需进行编译的文件，支持路径模式匹配；</li>
<li>compilerOptions - 设置与编译流程相关的选项。</li>
</ul>`,r:{minutes:2.65,words:794},t:"编译",i:"typescript",O:9,y:"a"}}],["/study/Typescript/%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D%E3%80%81%E4%BA%A4%E5%8F%89%E7%B1%BB%E5%9E%8B.html",{loader:()=>B(()=>import("./联合类型、类型别名、交叉类型.html-CXZ5edLK.js"),__vite__mapDeps([103,1])),meta:{d:1702512e6,l:"2023年12月14日",c:["Typescript"],g:["联合类型、类型别名、交叉类型"],e:`<h2>联合类型</h2>
<p>联合类型表示取值可以为多种类型中的一种，使用 | 分隔每个类型。</p>
<div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> myFavoriteNumber</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> string</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF"> |</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> number</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">myFavoriteNumber</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'seven'</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // OK</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">myFavoriteNumber</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // OK</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.41,words:424},t:"联合类型、类型别名、交叉类型",i:"typescript",O:4,y:"a"}}],["/study/Typescript/%E8%A3%85%E9%A5%B0%E5%99%A8.html",{loader:()=>B(()=>import("./装饰器.html-DFaZeWyi.js"),__vite__mapDeps([104,1])),meta:{d:1702512e6,l:"2023年12月14日",c:["Typescript"],g:["装饰器"],e:`<h2>装饰器是什么</h2>
<ul>
<li>它是一个表达式</li>
<li>该表达式被执行后，返回一个函数</li>
<li>函数的入参分别为 target、name 和 descriptor</li>
<li>执行该函数后，可能返回 descriptor 对象，用于配置 target 对象</li>
</ul>
<h2>装饰器的分类</h2>
<ul>
<li>类装饰器（Class decorators）</li>
<li>属性装饰器（Property decorators）</li>
<li>方法装饰器（Method decorators）</li>
<li>参数装饰器（Parameter decorators）</li>
</ul>`,r:{minutes:2.44,words:733},t:"装饰器",i:"typescript",O:8,y:"a"}}],["/study/mysql/01.homebew%E5%AE%89%E8%A3%85mysql.html",{loader:()=>B(()=>import("./01.homebew安装mysql.html-dasTV5mO.js"),__vite__mapDeps([105,1])),meta:{d:16979328e5,l:"2023年10月22日",c:["Mysql"],g:["Mysql"],e:`
<p>安装</p>
<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>brew install mysql</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:.4,words:121},t:"homeBrew安装mysql",i:"mysql",O:1,y:"a"}}],["/study/mysql/02.DDL%E8%AF%AD%E8%A8%80.html",{loader:()=>B(()=>import("./02.DDL语言.html-eYe0Q8ys.js"),__vite__mapDeps([106,1])),meta:{d:1744707905e3,c:["Mysql"],g:["Mysql"],e:`<h2>数据库</h2>
<h3>查询</h3>
<div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">SHOW DATABASES</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div>`,r:{minutes:1.22,words:366},t:"DDL语言",i:"mysql",O:2,y:"a"}}],["/study/mysql/",{loader:()=>B(()=>import("./index.html-Bs_PzcVh.js"),__vite__mapDeps([107,1])),meta:{t:"Mysql",i:"mysql"}}],["/study/vue/",{loader:()=>B(()=>import("./index.html-B1IeNwqW.js"),__vite__mapDeps([108,1])),meta:{t:"Vue",i:"vue"}}],["/study/vue/diff%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./diff算法原理.html-iL6mT8I7.js"),__vite__mapDeps([109,1])),meta:{d:16943904e5,l:"2023年9月11日",c:["Vue"],g:["diff算法原理"],e:`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vue实例化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '#app'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 123</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    template</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \`&lt;div id="a"&gt;hello {{a}}&lt;/div&gt;\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.56,words:1668},t:"diff算法原理",i:"vue",O:7,y:"a"}}],["/study/vue/mixin%E6%B7%B7%E5%85%A5%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./mixin混入原理.html-DLSI6Vy4.js"),__vite__mapDeps([110,1])),meta:{d:16943904e5,l:"2023年9月11日",c:["Vue"],g:["mixin混入原理"],e:`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">mixin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  created</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"我是全局混入"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vue实例化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "#app"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">b</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 456</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } } },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      aa</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">      bb</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    };</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">  created</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"我是自己的"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">  template</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \`&lt;div id="a"&gt;hello 这是我自己写的Vue{{name}}</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">          &lt;/div&gt;\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">});</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.37,words:711},t:"mixin混入原理",i:"vue",O:8,y:"a"}}],["/study/vue/%E4%BE%A6%E5%90%AC%E5%99%A8%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./侦听器属性原理.html-Bz3H02u-.js"),__vite__mapDeps([111,1])),meta:{d:16943904e5,l:"2023年9月11日",c:["Vue"],g:["侦听器属性原理"],e:`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vue实例化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '#app'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            aa</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            bb</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    template</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \`&lt;div id="a"&gt;hello 这是我自己写的Vue{{name}}&lt;/div&gt;\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    methods</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        doSomething</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    watch</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        aa</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">newVal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">oldVal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">newVal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // aa: {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //   handle(newVal， oldVal) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //     console.log(newVal);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //   },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //   deep: true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // aa: 'doSomething',</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // aa: [{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //   handle(newVal， oldVal) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //     console.log(newVal);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //   },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //   deep: true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // }]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">aa</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1111</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.95,words:885},t:"侦听器属性原理",i:"vue",O:9,y:"a"}}],["/study/vue/%E5%85%A5%E5%8F%A3%E5%88%86%E6%9E%90.html",{loader:()=>B(()=>import("./入口分析.html-DuGgG6f_.js"),__vite__mapDeps([112,1])),meta:{d:16932672e5,l:"2023年8月29日",c:["Vue"],g:["入口"],e:`<h2>一、主入口分析</h2>
<h3>package.json</h3>
<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"scripts"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // ...</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">    "build"</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "node scripts/build.js"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.93,words:878},t:"入口分析",i:"vue",O:1,y:"a"}}],["/study/vue/%E5%88%9D%E5%A7%8B%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./初始渲染原理.html-QkMY_K-t.js"),__vite__mapDeps([113,1])),meta:{d:16933536e5,l:"2023年8月30日",c:["Vue"],g:["渲染原理"],e:`<h2>一、组件挂载入口</h2>
<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// src/init.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">initState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './state'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">compileToFunctions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> './compiler/index'</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">export</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> initMixin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">_init</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 这里的this代表调用_init方法的对象(实例对象)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        //  this.$options就是用户new Vue的时候传入的属性</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$options</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> options</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 初始化状态</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        initState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 如果有el属性 进行模板渲染</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">$options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$mount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">$options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 这块代码在源码里面的位置其实是放在entry-runtime-with-compiler.js里面</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 代表的是Vue源码里面包含了compile编译功能 这个和runtime-only版本需要区分开</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">$mount</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> options</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">$options</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        el</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">querySelector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 如果不存在render属性</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">            // 如果存在template属性</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> template</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">                // 如果不存在render和template 但是存在el属性 直接将模板赋值到el所在的外层html结构（就是el本身 并不是父元素）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">                template</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outerHTML</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">            // 最终需要把tempalte模板转化成render函数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">                const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> render</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> compileToFunctions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">                options</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">render</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> render</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 将当前组件实例挂载到真实的el节点上面</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> mountComponent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.02,words:1506},t:"初始渲染原理",i:"vue",O:4,y:"a"}}],["/study/vue/%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./响应式数据原理.html-ejEmKeSr.js"),__vite__mapDeps([114,1])),meta:{d:16933536e5,l:"2023年8月30日",c:["Vue"],g:["响应式数据"],e:`<h2>一、数据初始化</h2>
<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '#app'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">],</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            name</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '123'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.46,words:1637},t:"响应式数据原理",i:"vue",O:2,y:"a"}}],["/study/vue/%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./异步更新原理.html-BqIBwXJk.js"),__vite__mapDeps([115,1])),meta:{d:169344e7,l:"2023年8月31日",c:["Vue"],g:["渲染原理"],e:`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vue实例化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '#app'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 123</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // render(h) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //   return h('div',{id:'a'},'hello')</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    template</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \`&lt;div id="a"&gt;hello {{a}}&lt;/div&gt;\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 当我们每一次改变数据的时候  渲染watcher都会执行一次 这个是影响性能的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.26,words:677},t:"异步更新原理",i:"vue",O:6,y:"a"}}],["/study/vue/%E6%A8%A1%E6%9D%BF%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./模板编译原理.html-B-L7VNJK.js"),__vite__mapDeps([116,1])),meta:{d:16933536e5,l:"2023年8月30日",c:["Vue"],g:["模板编译"],e:`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vue实例化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '#app'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 111</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // render(h) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //   return h('div',{id:'a'},'hello')</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // template:\`&lt;div id="a"&gt;hello&lt;/div&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:6.41,words:1922},t:"模板编译原理",i:"vue",O:3,y:"a"}}],["/study/vue/%E6%B8%B2%E6%9F%93%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./渲染更新原理.html-DykTMRgw.js"),__vite__mapDeps([117,1])),meta:{d:16933536e5,l:"2023年8月30日",c:["Vue"],g:["渲染原理"],e:`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vue实例化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '#app'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            a</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 123</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // render(h) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //   return h('div',{id:'a'},'hello')</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    template</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \`&lt;div id="a"&gt;hello {{a}}&lt;/div&gt;\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 我们在这里模拟更新</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">a</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 456</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 此方法是刷新视图的核心</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">_update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">_render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.01,words:2103},t:"渲染更新原理",i:"vue",O:5,y:"a"}}],["/study/vue/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86.html",{loader:()=>B(()=>import("./计算属性原理.html-Z6q3Pjcp.js"),__vite__mapDeps([118,1])),meta:{d:16949952e5,l:"2023年9月18日",c:["Vue"],g:["计算属性原理"],e:`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Vue实例化</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> vm</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Vue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    el</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '#app'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            aa</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            bb</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">            cc</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // render(h) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //   return h('div',{id:'a'},'hello')</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    template</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> \`&lt;div id="a"&gt;hello 这是我自己写的Vue{{computedName}}{{cc}}&lt;/div&gt;\`</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    computed</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        computedName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">aa</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">bb</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 当我们每一次改变数据的时候  渲染watcher都会执行一次 这个是影响性能的</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">cc</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">vm</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3,words:899},t:"计算属性原理",i:"vue",O:10,y:"a"}}],["/study/%E5%B7%A5%E7%A8%8B%E5%8C%96/Git.html",{loader:()=>B(()=>import("./Git.html-hB1ZFjLu.js"),__vite__mapDeps([119,1])),meta:{d:16775424e5,l:"2023年2月28日",c:["git"],g:["git"],e:`<h2>一、Git 基本概念</h2>
<h3>1. Git 历史</h3>
<p>Git 是最流行的分布式版本控制系统（Distributed Version Control System，简称 DVCS）。它由 Linus Torvalds 创建，当时非常需要一个快速、高效和大规模分布式的源代码管理系统，用于管理 Linux 源代码。</p>
<p>由于 Linus 对几乎所有现有的源代码管理系统抱有强烈的反感，因此他决定编写自己的源代码管理系列。2005 年 4 月，Git 就诞生了。到了 2005 年 7 月，维护工作就交给了 Junio Hamano，自此他就一直在维护这个项目。</p>`,r:{minutes:24.97,words:7492},t:"Git",i:"javascript",O:1,y:"a"}}],["/study/%E5%B7%A5%E7%A8%8B%E5%8C%96/",{loader:()=>B(()=>import("./index.html-D15EHLc6.js"),__vite__mapDeps([120,1])),meta:{t:"工程化",i:"javascript"}}],["/study/%E6%B5%8F%E8%A7%88%E5%99%A8/",{loader:()=>B(()=>import("./index.html-3iVB550f.js"),__vite__mapDeps([121,1])),meta:{t:"浏览器",i:"liulanqi"}}],["/study/%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html",{loader:()=>B(()=>import("./垃圾回收.html-BEgJvYFE.js"),__vite__mapDeps([122,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["浏览器"],g:["垃圾回收"],e:`<h2>V8 引擎</h2>
<p>V8 是用 C++编写的 Google 开源高性能 Javascript 和 WebAssembly 引擎，它用于 Chrome 和 Node.js 等
它实现 ECMScript 和 WebAssembly，并可以跨平台运行
V8 可以独立运行，也可以嵌入到任何 C++应用程序中</p>
<figure><img src="/img/interview/v8.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<ul>
<li>JS 引擎比较广泛采用的就是可达性中的标记清除算法，当然类似于 V8 引擎为了进行更好的优化，他在算法的实现细节上也会结合一些其他的算法。</li>
<li>标记整理和标记清除相似，不同的式回收期间同时会将保留的存储对象搬运汇集到连续的内存空间，从而整合空闲空间，避免内存碎片化。</li>
<li>分代收集，对象被分成两组：“新的”和“旧的”。许多对象出现，完成他们的工作并很快死去，他们可以很快被清理。那些长期存活的对象会变得“老旧”，而且被检查的频次也会减少。</li>
<li>增量收集，如果有许多对象，并且我们试图一次遍历并标记整个对象集，则可能需要一些时间，并在执行过程中带来明显的延迟。所以引擎试图将垃圾收集工作分成几部分来做，然后将这几部分会逐一进行处理，这样会有许多微笑的延迟而不是一个大的延迟。</li>
</ul>`,r:{minutes:22.31,words:6692},t:"垃圾回收",i:"liulanqi",O:3,y:"a"}}],["/study/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AD%98%E5%82%A8.html",{loader:()=>B(()=>import("./浏览器存储.html-BFtT9izQ.js"),__vite__mapDeps([123,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["浏览器"],g:["存储"],e:`<h2>cookie</h2>
<h3>什么是cookie</h3>
<p>cookie指某些网站为了辨别用户身份而储存在用户本地终端上的数据(通常经过加密)。 cookie是服务端生成，客户端进行维护和存储，存储在内存或者磁盘中。通过cookie,可以让服务器知道请求是来源哪个客户端，就可以进行客户端状态的维护，比如登陆后刷新，请求头就会携带登陆时response header中的Set-Cookie,Web服务器接到请求时也能读出cookie的值，根据cookie值的内容就可以判断和恢复一些用户的信息状态。</p>
<p>典型的应用场景有：</p>
<ol>
<li>记住密码，下次自动登录。</li>
<li>购物车功能。</li>
<li>记录用户浏览数据，进行商品（广告）推荐。</li>
</ol>`,r:{minutes:8.25,words:2474},t:"浏览器存储",i:"liulanqi",O:2,y:"a"}}],["/study/%E6%B5%8F%E8%A7%88%E5%99%A8/%E8%BE%93%E5%85%A5URL%E8%BF%87%E7%A8%8B.html",{loader:()=>B(()=>import("./输入URL过程.html-C4es4ZJt.js"),__vite__mapDeps([124,1])),meta:{d:16771104e5,l:"2023年2月23日",c:["浏览器"],g:["页面渲染"],e:`<h2>大致流程</h2>
<ol>
<li>URL解析</li>
<li>DNS查询</li>
<li>TCP连接</li>
<li>处理请求</li>
<li>接受响应</li>
<li>渲染页面</li>
</ol>
<h2>一、URL解析</h2>
<p>URL（Uniform Resource Locator），统一资源定位符，用于定位互联网上资源，俗称网址。
比如 <a href="http://www.w3school.com.cn/html/index.asp" target="_blank" rel="noopener noreferrer">http://www.w3school.com.cn/html/index.asp</a>，遵守以下的语法规则：</p>`,r:{minutes:8.65,words:2596},t:"输入URL过程",i:"liulanqi",O:1,y:"a"}}],["/study/%E7%BD%91%E7%BB%9C/",{loader:()=>B(()=>import("./index.html-BKF-nOYi.js"),__vite__mapDeps([125,1])),meta:{t:"网络",i:"wangluo"}}],["/study/%E7%BD%91%E7%BB%9C/TCP%E4%B8%8EUDP.html",{loader:()=>B(()=>import("./TCP与UDP.html-BA0kM2Ri.js"),__vite__mapDeps([126,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["网络"],g:["TCP/IP"],e:`<h2>1.TCP和UDP的既念及特点</h2>
<p>TCP和UDP都是传输层协议，他们都属于TCP/IP协议族：</p>
<h3>UDP</h3>
<p>UDP的全称是用户数据报协议，在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。在OS模型中，在传输层，处于P协议的上一层。UDP有不提供数据包分组、组装和不能对数据包进行排序的缺点，也就是说，当报文发送之后，是无法得知其是否安全完整到达的。</p>
<p>它的特点如下：</p>
<ul>
<li>面向无连接
首先UDP是不需要和TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工，不会对数据报文进行任何拆分和拼接操作。
具体来说就是：
<ul>
<li>在发送端，应用层将数据传递给传输层的UDP协议，UDP只会给数据增加一个UDP头标识下是UDP协议，然后就传递给网络层了</li>
<li>在接收端，网络层将数据传递给传输层，UDP只去除P报文头就传递给应用层，不会任何拼接操作</li>
</ul>
</li>
<li>有单播，多播，广播的功能
UDP不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说UDP提供了单播，多播，广播的功能。</li>
<li>面向报文
发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付P层。UDP对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界。因此，应用程序必须选择合适大小的报文</li>
<li>不可靠性
首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。并且收到什么数据就传递什么数据，并且也不会备份数据，发送数据也不会关心对方是否已经正确接收到数据了。
再者网络环境时好时坏，但是UDP因为没有拥塞控制，一直会以恒定的速度发送数据。即使网络条件不好，也不会对发送速率进行调整。这样实现的弊端就是在网络条件不好的情况下可能会导致丢包，但是优点也很明显，在某些实时性要求高的场景（比如电话会议）就需要使用UDP而不是TCP。</li>
<li>头部开销小，传输数据报文时是很高效的
UDP头部包含了以下几个数据：
<ul>
<li>两个十六位的端口号，分别为源端口（何选字段）和目标端口</li>
<li>整个数据报文的长度</li>
<li>整个数据报文的检验和(PV4可选字段)，该字段用于发现头部信息和数据中的错误</li>
</ul>
</li>
</ul>`,r:{minutes:22.38,words:6714},t:"TCP/UDP",i:"wangluo",O:2,y:"a"}}],["/study/%E7%BD%91%E7%BB%9C/WebSocket.html",{loader:()=>B(()=>import("./WebSocket.html-B4L6d14g.js"),__vite__mapDeps([127,1])),meta:{d:1677456e6,l:"2023年2月27日",c:["网络"],g:["WebSocket"],e:`<h2>对WebSocket的理解</h2>
<p>WebSocket是HTML5提供的一种浏览器与服务器进行全双工通讯的网络技术，属于应用层协议。它基于TCP传输协议，并复用HTTP的握手通道。浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。</p>
<p>WebSocket的出现就解决了半双工通信的弊端。它最大的特点是：服务器可以向客户端主动推动消息，客户端也可以主动向服务器推送消息。</p>
<p>WebSocket原理：客户端向WebSocket服务器通知(notify)一个带有所有接收者ID(recipientsIDs)的事件(event),，服务器接收后立即通知所有活跃的(active)客户端，只有D在接收者ID序列中的客户端才会处理这个事件。</p>`,r:{minutes:4.25,words:1274},t:"WebSocket",i:"wangluo",O:3,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%E6%9E%84%E9%80%A0%E5%99%A8%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./01.构造器模式.html-93Or0Dqq.js"),__vite__mapDeps([128,1])),meta:{d:17169408e5,l:"2024年5月29日",c:["设计模式"],g:["构造器模式"],e:`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// var employee1 = {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     name: 'kerwin',</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     age: 100,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// var employee2 = {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     name: 'kerwin2',</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     age: 200,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> name</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> age</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">say</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '-'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> employee1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'kerwin'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> employee2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'kerwin2'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">employee1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">employee2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.25,words:75},t:"构造器模式",i:"sheji",O:1,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./02.原型模式.html-xnQhdrCY.js"),__vite__mapDeps([129,1])),meta:{d:17169408e5,l:"2024年5月29日",c:["设计模式"],g:["原型模式"],e:`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// var employee1 = {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     name: 'kerwin',</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     age: 100,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// var employee2 = {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     name: 'kerwin2',</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//     age: 200,</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> name</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> age</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">say</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> '-'</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">age</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> employee1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'kerwin'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> employee2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Employee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'kerwin2'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">employee1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">employee2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.33,words:99},t:"原型模式",i:"sheji",O:2,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/03.%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./03.工厂模式.html-Ba4VePyg.js"),__vite__mapDeps([130,1])),meta:{d:17169408e5,l:"2024年5月29日",c:["设计模式"],g:["工厂模式"],e:`<h2>定义</h2>
<p>工厂模式可以将对象的创建过程封装在工厂类中，使得消费者（使用者）和生产者（实现者）解耦。通过工厂模式，消费者不需要直接使用 new 关键字来创建对象，而是通过调用工厂类的方法来获取所需的对象。
就是根据不同的输入返回不同的实例，一般用来创建同一类对象，它的主要思想就是将对象的创建与对象的实现分离。</p>
<figure><img src="/img/designPattern/工厂模式.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>在工厂模式中，工厂充当了一个生产标准规格商品的地方。它接收参数（原料），根据\`参数的不同选择实例化合适的对象（特定规格的产品），并将其返回给使用者。</p>`,r:{minutes:8.12,words:2435},t:"工厂模式",i:"sheji",O:3,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./04.建造者模式.html-2SIYl3FR.js"),__vite__mapDeps([131,1])),meta:{d:17169408e5,l:"2024年5月29日",c:["设计模式"],g:["建造者模式"],e:`<ul>
<li>建造者模式属于创建型模式的一种，提供一种创建复杂对象的方式。它将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示</li>
<li>建造者模式是一步一步的创建一个复杂的对象，它允许用户只通过指定复杂的对象的类型和内容就可以构建它们，用户不需要指定内部的具体构造细节</li>
</ul>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Navbar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'navbar-init'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    getData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'navbar-getData'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'navbar-111'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'navbar-render'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'list-init'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    getData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'list-getData'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Promise</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">((</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">            setTimeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">                resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'list-111'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">            }, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'list-render'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> Creator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    async</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> startBuild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        await</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        await</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        await</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> builder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> op</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Creator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">op</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">startBuild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Navbar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">op</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">startBuild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> List</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.12,words:336},t:"建造者模式",i:"sheji",O:4,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./05.单例模式.html-C0XOykhZ.js"),__vite__mapDeps([132,1])),meta:{d:17169408e5,l:"2024年5月29日",c:["设计模式"],g:["单例模式"],e:`<h2>定义</h2>
<p>单例模式 （Singleton Pattern），保证一个类只有一个实例，并提供一个访问它的全局访问点。也就是说，第二次使用同一个类创建新对象的时候，应该得到与第一次创建的对象完全相同的对象。</p>
<figure><img src="/img/designPattern/单例模式.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<ul>
<li>重点：
<ul>
<li>单一实例：确保只创建一个类的实例。</li>
<li>全局访问点：提供一个全局可访问的接口用于访问该实例。</li>
<li>自我管理：单例类通常自己负责管理它的创建和生命周期</li>
</ul>
</li>
</ul>`,r:{minutes:4.9,words:1469},t:"单例模式",i:"sheji",O:5,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/06.%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./06.装饰器模式.html-DWPEW7Jc.js"),__vite__mapDeps([133,1])),meta:{d:17170272e5,l:"2024年5月30日",c:["设计模式"],g:["装饰器模式"],e:`<ul>
<li>装饰器模式能够很好的对已有功能进行拓展，这样不会更改原有的代码，对其他的业务产生影响，这方便我们再较少的改动下对软件功能进行拓展</li>
</ul>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">before</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">beforeFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> _this</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 先进行前置函数调用</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        beforeFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">arguments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 再执行原函数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> _this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">arguments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">after</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">afterFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> _this</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 先执行原函数</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> result</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> _this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">arguments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 再执行后置函数</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        afterFn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">apply</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">arguments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> result</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'111111'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> test1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> test</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">before</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'000000'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">after</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'222222'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">test1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 000000</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 111111</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 222222</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.58,words:174},t:"装饰器模式",i:"sheji",O:6,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./07.适配器模式.html-D-MflgCg.js"),__vite__mapDeps([134,1])),meta:{d:17170272e5,l:"2024年5月30日",c:["设计模式"],g:["适配器模式"],e:`<ul>
<li>将一个类的接口转换成客户希望的另一个接口。适配器模式让那些接口不兼容的类可以一起工作</li>
</ul>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TencentMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'开始渲染腾讯地图'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> BaiduMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'开始渲染百度地图'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TencentAdapater</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> TencentMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> renderMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    map</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">display</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">renderMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> TencentAdapater</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">renderMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> BaiduMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">())</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.36,words:109},t:"适配器模式",i:"sheji",O:7,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/08.%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./08.策略模式.html-BKBqS2Pl.js"),__vite__mapDeps([135,1])),meta:{d:17170272e5,l:"2024年5月30日",c:["设计模式"],g:["策略模式"],e:`<h2>定义</h2>
<p>策略模式（Strategy Pattern）指的是定义一系列的算法，把它们一个个封装起来，并且使它们可以互相替换。封装的策略算法一般是独立的，策略模式根据输入来调整采用哪个算法。⽬的就是将策略的实现和使用分离。</p>
<p>策略模式中主要有下面概念：</p>
<ul>
<li>Context ：封装上下文，根据需要调用需要的策略，屏蔽外界对策略的直接调用，只对外提供一个接口，根据需要调用对应的策略</li>
<li>Strategy ：策略，含有具体的算法，其方法的外观相同，因此可以互相代替</li>
<li>StrategyMap ：所有策略的合集，供封装上下文调用</li>
</ul>`,r:{minutes:2.46,words:738},t:"策略模式",i:"sheji",O:8,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./09.代理模式.html-DxVRsQvB.js"),__vite__mapDeps([136,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["代理模式"],e:`<h2>定义</h2>
<p>代理模式 （Proxy Pattern）又称委托模式，它为目标对象创造了一个代理对象，以控制对目标对象的访问。</p>
<p>代理模式的关键是，当客户不⽅便直接访问⼀个对象或者不满⾜需要时，提供⼀个替身对象来控制这个对象的访问，客户实际上访问的是替身对象 。</p>
<figure><img src="/img/designPattern/代理模式.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>这种结构可以实现在调用目标对象前和调用后进行一些预操作和后操作，从而实现新的功能或者扩展目标的功能。</p>`,r:{minutes:4.11,words:1232},t:"代理模式",i:"sheji",O:9,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./10.观察者模式.html-DNzQN5Gy.js"),__vite__mapDeps([137,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["观察者模式"],e:`<h2>定义</h2>
<p>观察者模式（Observer Pattern）定义了一种一对多的关系，当⼀个对象的状态发⽣改变时，所有依赖于它的对象都将得到通知，使得它们能够自动更新自己。</p>
<p>在前端开发中，观察者模式是一种常用的设计模式，用于建立对象之间的一对多依赖关系。在观察者模式中，有两种主要角色：观察者（Observer）和被观察者（Subject）。</p>
<p>观察者（Observer）：  观察者是订阅了被观察者的状态变化，并在状态变化时进行相应操作的对象。在前端开发中，观察者通常是一些 UI 组件或模块，它们会监听某个数据或状态的变化。</p>
<p>被观察者（Subject）：  被观察者是维护一组观察者对象列表，并提供注册、移除和通知观察者的方法。当被观察者的状态发生改变时，会通知所有订阅者进行相应的更新操作。</p>`,r:{minutes:2.61,words:783},t:"观察者模式",i:"sheji",O:10,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/11.%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./11.发布订阅模式.html-CerHZBc2.js"),__vite__mapDeps([138,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["发布订阅模式"],e:`<h2>定义</h2>
<p>发布-订阅是⼀种消息范式，消息的发送者（称为发布者）不会将消息直接发送给特定的接收者（称为订阅者）。⽽是将发布的消息分为不同的类别，⽆需了解哪些订阅者（如果有的话）,同样的，订阅者可以表达对⼀个或多个类别的兴趣，只接收感兴趣的消息，⽆需了解哪些发布者存在。</p>
<figure><img src="/img/designPattern/发布订阅模式.png" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h2>优缺点</h2>
<h3>优点</h3>
<ul>
<li>解耦：发布-订阅模式可以使发布者和订阅者之间解耦，它们互不依赖于彼此的具体实现，从而降低组件之间的耦合度。</li>
<li>异步：发布-订阅模式支持异步操作，发布者可以在任何时间发布事件，订阅者也可以在适当的时间订阅事件。这种异步机制非常灵活，适用于需要非阻塞操作的场景。</li>
<li>动态：发布-订阅模式支持动态添加新的订阅者和取消订阅者，使得系统更加灵活和可扩展。</li>
<li>可复用性：通过发布-订阅模式可以实现事件的广播，可以让多个订阅者同时接收相同的事件消息，提高了代码的可复用性。</li>
</ul>`,r:{minutes:2.08,words:625},t:"发布订阅模式",i:"sheji",O:11,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/12.%E6%A8%A1%E5%9D%97%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./12.模块模式.html-DpjunKi4.js"),__vite__mapDeps([139,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["模块模式"],e:`<ul>
<li>模块话模式最初被定义为在传统软件工程中为类提供私有和公共封装的一种方法</li>
<li>能够使一个单独的对象拥有公共/私有的方法和变量，从而屏蔽来自全局作用域的特殊部分。这可以减少我们的函数名与在页面中其他脚本区域内定义的函数名冲突的可能性</li>
</ul>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> obj</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> count</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        increse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ++</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">count</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        decrese</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> --</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">count</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.55,words:164},t:"模块模式",i:"sheji",O:12,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./13.桥接模式.html-DMPovSHD.js"),__vite__mapDeps([140,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["桥接模式"],e:`<p>桥接模式：将抽象部分与它的实现部分分离，使它们都可以独立地变化
使用场景：一个类存在两个或多个独立变化的维度，且这两个或多个维度都需要进行扩展</p>
<p>优点：
把抽象与实现隔离开，有助于独立地管理各组成部分</p>
<p>缺点：
每使用一个桥接元素都要增加一次函数调用，这对应用程序的性能会有一些负面影响（提高了系统的复杂程度）</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> Aniations</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    bounce</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'弹跳显示'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        hide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'弹跳隐藏'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    slide</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'滑动显示'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        hide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'滑动隐藏'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    rotate</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'旋转显示'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        hide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'旋转隐藏'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Toast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">animation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> ele</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">animation</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> animation</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Toast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">animation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Toast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hide</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">animation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">hide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ele</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> taost1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Toast</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'div1'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Aniations</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">bounce</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">taost1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">show</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.79,words:238},t:"桥接模式",i:"sheji",O:13,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./14.组合模式.html-BhB9B7bK.js"),__vite__mapDeps([141,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["组合模式"],e:`<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Folder</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">folder</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> folder</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">res</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">scan</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'扫描文件夹'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">scan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">    this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> file</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">scan</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'开始扫描文件'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">file</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> rootFolder</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'root'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> htmlFolder</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'html'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> cssFolder</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'css'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> jsFolder</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Folder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'js'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> html4</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'html4'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> html5</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'html5'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> css2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'css2'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> css3</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'css3'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> es5</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'es5'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> es6</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> File</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'es6'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rootFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">htmlFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rootFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cssFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rootFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">jsFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">htmlFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">html4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">htmlFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">html5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cssFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">css2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cssFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">css3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">jsFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">es5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">jsFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">es6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rootFolder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">scan</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.47,words:140},t:"组合模式",i:"sheji",O:14,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./15.命令模式.html-Ch4dNHhQ.js"),__vite__mapDeps([142,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["组合模式"],e:`<ul>
<li>
<p>有时候需要向某些对象发送请求，但是并不知道请求的接收者是谁，也不知道被请求的操作是什么。需要一种松耦合的方式来设计程序，使得发送者和接收者能够消除彼此之间的耦合关系</p>
</li>
<li>
<p>命令模式由三种角色构成：</p>
<ul>
<li>发布者<code>invoker</code>(发出命令，调用命令对象，不知道如何执行与谁执行)</li>
<li>接收者<code>receiver</code>(提供对应接口处理请求，不知道谁发起请求)</li>
<li>命令对象<code>command</code>(接收命令，调用接收者对应接口处理发布者的请求)</li>
</ul>
</li>
</ul>`,r:{minutes:.81,words:242},t:"组合模式",i:"sheji",O:15,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./16.模板方法模式.html-BzcIIeqn.js"),__vite__mapDeps([143,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["模板方法模式"],e:`<ul>
<li>模板方法模式由两部分组成，第一部分是抽象父类，第二部分是具体的实现子类。通常在抽象父类中封装了子类的算法逻辑，包括实现一些公共方法以及封装子类中所有方法的执行顺序。子类通过继承这个抽象类，也继承了整个算法结构，并且可以选择重写父类的方法。</li>
</ul>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Container</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">params</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {}) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    var</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> F</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    F</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> list</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> await</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B"> this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    F</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">getData</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        params</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">getData</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ||</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            throw</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'必须传入getData'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">    F</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">prototype</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'render'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> F</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Myclass</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Container</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    getData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'获取nowplaying'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Myclass</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.95,words:286},t:"模板方法模式",i:"sheji",O:16,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./17.迭代器模式.html-BImMTMPl.js"),__vite__mapDeps([144,1])),meta:{d:17171136e5,l:"2024年5月31日",c:["设计模式"],g:["模板方法模式"],e:`<p>迭代器模式是指提供一种方法顺序访问一个聚合对象中的各个元素，而又不需要暴露该对象的内部表示。迭代器模式可以把迭代的过程从业务逻辑中分出来，在使用迭代器模式之后，即使不关心对象的内部构造，也可以按顺序访问其中的每个元素。</p>
<ul>
<li>为遍历不同数据结构的“集合”提供统一的接口</li>
<li>能遍历访问“集合数据中的项”，不关心项的数据结构</li>
</ul>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">var</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> kerwinEach</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        callback</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">kerwinEach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">([</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">22</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">33</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">44</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">], </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> oli</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'li'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    oli</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHTML</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> value</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">oli</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.68,words:203},t:"模板方法模式",i:"sheji",O:17,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/18.%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F.html",{loader:()=>B(()=>import("./18.职责链模式.html-B-vvSRc6.js"),__vite__mapDeps([145,1])),meta:{d:17173728e5,l:"2024年6月3日",c:["设计模式"],g:["职责链模式"],e:`<p>使多个对象都有机会处理请求，从而避免了请求的发送者与多个接收者直接的耦合关系，将这些接收者链接成一条链，顺着这条链传递该请求，直到找到能处理该请求的对象。</p>
<p>在责任链模式中，每个处理对象都包含对下一个处理对象的引用。当一个对象接收到请求后，它会根据条件决定是自己处理这个请求，还是将其传递给链中的下一个对象。这样，请求在链中传递，直到被处理或者整个链都无法处理该请求。</p>
<p>这种模式常用于处理不同种类的请求或在不同条件下需要不同处理的场景，例如不同级别的日志记录器、不同类型的事件处理等。责任链模式可以有效地减少对象间的耦合，并提高系统的灵活性和可扩展性</p>
<h2>优缺点</h2>`,r:{minutes:3.25,words:976},t:"职责链模式",i:"sheji",O:18,y:"a"}}],["/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-CdfFDAqb.js"),__vite__mapDeps([146,1])),meta:{t:"设计模式",i:"sheji"}}],["/study/%E8%BD%AF%E8%80%83/01.%E7%B3%BB%E7%BB%9F%E5%B7%A5%E7%A8%8B%E4%B8%8E%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80.html",{loader:()=>B(()=>import("./01.系统工程与信息系统基础.html-bFVdsuzz.js"),__vite__mapDeps([147,1])),meta:{d:17194464e5,l:"2024年6月27日",c:["软考"],g:["软考"],e:`<h2>概念</h2>
<ul>
<li>【系统工程】是一种组织管理技术。</li>
<li>【系统工程】是为了最好的实现系统的母的，对系统的组成要素、组织结构、信息流、控制机构进行分析研究的科学方法。</li>
<li>【系统工程】从整体出发、从系统观念出发，以求【整体最有】。</li>
<li>【系统工程】利用计算机作为工具，对系统的结构、元素、信息和反馈等进行分析，以达到最优规划、最优设计、最优管理和最优控制的目的。</li>
<li>【系统工程方法】是一种现代的科学决策方法。</li>
</ul>
<h2>系统工程方法</h2>
<h3>1、霍尔三维结构 “硬科学”方法论</h3>
<h4>逻辑维：解决问题的逻辑过程</h4>`,r:{minutes:12.9,words:3869},t:"系统工程与信息系统基础",i:"sheji",O:1,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/02.%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B.html",{loader:()=>B(()=>import("./02.软件工程.html-upiqLizX.js"),__vite__mapDeps([148,1])),meta:{d:17197056e5,l:"2024年6月30日",c:["软考"],g:["软考"],e:`<h2>软件过程模型</h2>
<h3>瀑布模型</h3>
<p>【特点】</p>
<ul>
<li>严格区分阶段，每个阶段因果关系紧密相连</li>
<li>只适合需求明确的项目</li>
</ul>
<p>【缺点】</p>
<ul>
<li>软件需求完整性、正确性难确定</li>
<li>严格串行化，很长时间才能看到结果</li>
<li>瀑布模型要求每个阶段一次性完全解决该阶段工作，这不现实</li>
</ul>
<h3>原型模型</h3>
<p>适合需求不明确的项目</p>
<p>原型模型两个阶段</p>
<ol>
<li>原型开发阶段</li>
<li>目标软件开发阶段</li>
</ol>`,r:{minutes:12.85,words:3854},t:"软件工程",i:"sheji",O:2,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/03.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86.html",{loader:()=>B(()=>import("./03.项目管理.html-BYvptSVu.js"),__vite__mapDeps([149,1])),meta:{d:17200512e5,l:"2024年7月4日",c:["软考"],g:["软考"],e:`<h2>盈亏平衡分析</h2>
<ul>
<li>【正常情况下】销售额=固定成本+可变成本+税费+利润</li>
<li>【盈亏平衡时】销售额=固定成本+可变成本+税费</li>
</ul>
<figure><img src="/img/softExamination/16.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h2>进度管理</h2>
<figure><img src="/img/softExamination/17.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:3.69,words:1106},t:"项目管理",i:"sheji",O:3,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/04.%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html",{loader:()=>B(()=>import("./04.软件架构设计.html-DZMg0p7J.js"),__vite__mapDeps([150,1])),meta:{d:17201376e5,l:"2024年7月5日",c:["软考"],g:["软考"],e:`<h2>软件架构的概念</h2>
<p>软件架构 = 软件体系结构</p>
<p>架构设计就是需求分配，即将满足需求的职责分配到组件上</p>
<h2>架构的本质</h2>
<ol>
<li>软件架构为软件系统提供了一个结构、行为和属性的高级抽象</li>
<li>软件架构风格是特定应用领域的惯用模式，架构定义一个词汇表和一组约束</li>
</ol>
<h2>架构的作用</h2>
<ol>
<li>软件架构是项目干系人进行交流的手段</li>
<li>软件架构是可传递和可复用的模型，通过研究软件架构可能预测软件的质量</li>
<li>软件架构使推理和控制的更改更加简单，有助于循序渐进的原型设计，可以作为培训的基础</li>
</ol>`,r:{minutes:27.52,words:8256},t:"软件架构设计",i:"sheji",O:4,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/05.%E7%B3%BB%E7%BB%9F%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1.html",{loader:()=>B(()=>import("./05.系统可靠性分析与设计.html-CAqlJ3M8.js"),__vite__mapDeps([151,1])),meta:{d:17203968e5,l:"2024年7月8日",c:["软考"],g:["软考"],e:`<h2>可靠性相关概念</h2>
<ul>
<li>可靠性是软件系统在应用或系统错误面前，在意外或错误使用的情况下维持软件系统的功能特性的基本能力</li>
<li>可用性是系统能够正常运行的事件比例</li>
</ul>
<p>软件可靠性 ≠ 硬件可靠性</p>
<ul>
<li>复杂性：软件复杂性比硬件高，大部分失效来自于软件失效</li>
<li>物理退化：硬件失效主要是物理退化所致，软件不存在物理退化</li>
<li>唯一性：软件是唯一的，每个COPY版本都一样，而两个硬件不可能完全一样</li>
<li>版本更新周期：硬件较慢，软件较快</li>
</ul>
<h2>可靠性指标</h2>`,r:{minutes:1.23,words:369},t:"系统可靠性分析与设计",i:"sheji",O:5,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/06.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8.html",{loader:()=>B(()=>import("./06.信息安全.html-Cv8mPG_J.js"),__vite__mapDeps([152,1])),meta:{d:17203968e5,l:"2024年7月8日",c:["软考"],g:["软考"],e:`<h2>信息安全基础</h2>
<p>信息安全包括5个基本要素</p>
<figure><img src="/img/softExamination/125.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>信息安全的范围包括设备安全、数据安全、内容安全和行为安全</p>
<h3>网络安全漏洞</h3>
<ol>
<li>物理安全性</li>
<li>软件安全漏洞</li>
<li>不兼容使用安全漏洞</li>
<li>选择合适的安全哲理</li>
</ol>
<h3>网络安全威胁</h3>`,r:{minutes:3.24,words:972},t:"信息安全",i:"sheji",O:6,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/07.%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html",{loader:()=>B(()=>import("./07.安全架构设计.html-B7lo_5Z0.js"),__vite__mapDeps([153,1])),meta:{d:17204832e5,l:"2024年7月9日",c:["软考"],g:["软考"],e:`<h2>概述</h2>
<figure><img src="/img/softExamination/134.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<p>被动攻击：手机信息为主，破坏保密性
主动攻击：主动攻击的类别主要有：中断（破坏可用性），篡改（破坏完整性），伪造（破坏真实性）</p>
<p><img src="/img/softExamination/135.jpg" alt=" " loading="lazy">
<img src="/img/softExamination/136.jpg" alt=" " loading="lazy">
<img src="/img/softExamination/137.jpg" alt=" " loading="lazy"></p>`,r:{minutes:5.94,words:1781},t:"安全架构设计",i:"sheji",O:7,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/08.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80.html",{loader:()=>B(()=>import("./08.计算机系统基础.html-ByBdw1Jp.js"),__vite__mapDeps([154,1])),meta:{d:17204832e5,l:"2024年7月9日",c:["软考"],g:["软考"],e:`<h2>计算机系统概述</h2>
<figure><img src="/img/softExamination/145.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h2>计算机组成结构</h2>
<figure><img src="/img/softExamination/146.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h2>存储系统</h2>
<h3>层次化存储结构</h3>`,r:{minutes:5.69,words:1707},t:"计算机系统基础",i:"sheji",O:8,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/09.%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F.html",{loader:()=>B(()=>import("./09.嵌入式系统.html-DCiXNvJ1.js"),__vite__mapDeps([155,1])),meta:{d:17208288e5,l:"2024年7月13日",c:["软考"],g:["软考"],e:`<h2>基本概念</h2>
<ul>
<li>嵌入式系统是以应用为中心、以计算机技术为基础，并将可配置与可剪裁的软、硬件集成于一体的专用计算机系统，需要满足应用对功能、可靠性、成本、体积和功耗等方面的严格要求。</li>
<li>从计算机角度看，嵌入式系统是指嵌入各种设备及应用产品内部的计算机系统。它主要完成信号控制的功能，体积小、结构紧凑，可作为一个部件埋藏于所控制的装置中。</li>
<li>一般嵌入式系统由嵌入式处理器、相关支撑硬件、嵌入式操作系统、支撑软件以及应用软件组成。</li>
</ul>
<figure><img src="/img/softExamination/171.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>`,r:{minutes:10,words:2999},t:"嵌入式系统",i:"sheji",O:9,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/10.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html",{loader:()=>B(()=>import("./10.计算机网络.html-Do8uBKVk.js"),__vite__mapDeps([156,1])),meta:{d:17210016e5,l:"2024年7月15日",c:["软考"],g:["软考"],e:`<h2>计算机网络概述</h2>
<p>计算机网络功能</p>
<ul>
<li>数据通信</li>
<li>资源共享</li>
<li>管理集中化</li>
<li>实现分布式处理</li>
<li>负载均衡</li>
</ul>
<p>计算机网络可以极大扩展计算机系统的功能及其应用范围，提高可靠性，在为用户提供方便的同时，减少整体系统费用，降低了系统性价比</p>
<h3>计算机网络性能指标</h3>
<p>计算机网络性能指标可以从速率、带宽、吞吐量和时延等不同方面来度量计算及网络的性能</p>
<h4>时延</h4>
<p>时延是指数据（一个报文、分组甚至比特）从网络（或链路）的一端传送到另外一端传送到另一端所需的时间。时延是个很重要的性能指标，它由时也被称为延迟或迟延。网络中的时延由以下几个不同部分组成，如发送时延、传播时延、处理时延、排队时延等组成</p>`,r:{minutes:8.57,words:2571},t:"计算机网路",i:"sheji",O:10,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/11.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F.html",{loader:()=>B(()=>import("./11.数据库系统.html-mpr2Fhcm.js"),__vite__mapDeps([157,1])),meta:{d:1721088e6,l:"2024年7月16日",c:["软考"],g:["软考"],e:`<h2>数据库模式</h2>
<figure><img src="/img/softExamination/186.jpg" alt=" " tabindex="0" loading="lazy"><figcaption> </figcaption></figure>
<h3>关系表类型</h3>
<ul>
<li>基本关系（通常又称为基本表或基表）：实际存在的表，实际存储数据的逻辑表示</li>
<li>查询表:查询结果对应的表</li>
<li>视图表：由基表或其他视图表导出的表，本身不独立存储，数据库只存放它的定义，常称为虚表</li>
</ul>
<h3>数据库视图</h3>
<p>他是一个虚拟表（逻辑上的表），其内容由查询定义（仅保存SQL查询语句）。同真实的表一样，视图包含一系列带有名称的列和行数据。但是，视图并没有真正存储这些数据，而是通过查询原始表动态生成所需要的数据</p>`,r:{minutes:8.4,words:2520},t:"数据库系统",i:"sheji",O:11,y:"a"}}],["/study/%E8%BD%AF%E8%80%83/",{loader:()=>B(()=>import("./index.html-CQXPA-sT.js"),__vite__mapDeps([158,1])),meta:{t:"软考",i:"sheji"}}],["/threejs/%E5%85%B6%E4%BB%96/Lod.html",{loader:()=>B(()=>import("./Lod.html-Bspi75yv.js"),__vite__mapDeps([159,1])),meta:{d:168264e7,l:"2023年4月28日",c:["threejs"],g:["Lod"],e:`<iframe url="https://luotainxu-demo.netlify.app/#/threejs/other/lod">
<h2 id="添加-lod" tabindex="-1"><a class="header-anchor" href="#添加-lod"><span>添加 Lod</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 多层次细节展示</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    wireframe</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> lod</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">LOD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">SphereGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">22</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">22</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    lod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addLevel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">lod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">lod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></iframe>`,r:{minutes:.26,words:79},t:"Lod",i:"markdown",O:2,y:"a"}}],["/threejs/%E5%85%B6%E4%BB%96/%E5%85%AB%E5%8F%89%E6%A0%91%E6%A3%80%E6%B5%8B.html",{loader:()=>B(()=>import("./八叉树检测.html-J63qkwoL.js"),__vite__mapDeps([160,1])),meta:{d:168264e7,l:"2023年4月28日",c:["threejs"],g:["八叉树检测"],e:`<iframe url="https://luotainxu-demo.netlify.app/#/threejs/other/octree">
<h2 id="添加场景" tabindex="-1"><a class="header-anchor" href="#添加场景"><span>添加场景</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">scene</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">background</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0x88ccee</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加相机" tabindex="-1"><a class="header-anchor" href="#添加相机"><span>添加相机</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> camera</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PerspectiveCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    70</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    webgl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">offsetWidth</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> webgl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">offsetHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    0.001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    1000</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加渲染器" tabindex="-1"><a class="header-anchor" href="#添加渲染器"><span>添加渲染器</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> renderer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">WebGLRenderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">antialias</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">webgl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">offsetWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">webgl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">offsetHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setPixelRatio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">devicePixelRatio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shadowMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">enabled</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shadowMap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">type</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">VSMShadowMap</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">outputEncoding</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">sRGBEncoding</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">toneMapping</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ACESFilmicToneMapping</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加时钟" tabindex="-1"><a class="header-anchor" href="#添加时钟"><span>添加时钟</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> clock</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Clock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2 id="创建一个平面" tabindex="-1"><a class="header-anchor" href="#创建一个平面"><span>创建一个平面</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> planeGeometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PlaneGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> planeMaterial</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffffff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    side</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">DoubleSide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> plane</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">planeGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">planeMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">plane</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">receiveShadow</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">plane</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">PI</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建立方体叠楼梯的效果</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> boxGeometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BoxGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> boxMaterial</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> box</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">boxGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">boxMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.15</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.15</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">z</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    plane</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> group</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">plane</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建一个-octree" tabindex="-1"><a class="header-anchor" href="#创建一个-octree"><span>创建一个 octree</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> worldOctree</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Octree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">worldOctree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">fromGraphNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">group</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建一个人的碰撞体" tabindex="-1"><a class="header-anchor" href="#创建一个人的碰撞体"><span>创建一个人的碰撞体</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> playerCollider</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.35</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.35</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">),</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    0.35</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建物体" tabindex="-1"><a class="header-anchor" href="#创建物体"><span>创建物体</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建一个平面</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsuleBodyGeometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PlaneGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsuleBodyMaterial</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x0000ff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    side</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">DoubleSide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsuleBody</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsuleBodyGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsuleBodyMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建一个胶囊物体</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsuleGeometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">CapsuleGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.35</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsuleMaterial</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    side</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">DoubleSide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsule</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsuleGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsuleMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.85</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 将相机作为胶囊的子元素，就可以实现跟随</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lookAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 控制旋转上下的空3d对象</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsuleBodyControl</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Object3D</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleBodyControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsuleBodyControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsuleBody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置相关常量" tabindex="-1"><a class="header-anchor" href="#设置相关常量"><span>设置相关常量</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 设置重力</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> gravity</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">9.8</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 玩家的速度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> playerVelocity</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 方向向量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> playerDirection</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 玩家是否在地面上</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> playerOnFloor</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 键盘按下事件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> keyStates</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    KeyW</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    KeyA</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    KeyS</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    KeyD</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    Space</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    isDown</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="人物碰撞检测" tabindex="-1"><a class="header-anchor" href="#人物碰撞检测"><span>人物碰撞检测</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> playerCollisions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> result</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> worldOctree</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">capsuleIntersect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">playerCollider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    playerOnFloor</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        playerOnFloor</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">normal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ></span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerCollider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">translate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">normal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiplyScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">result</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">depth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新人物" tabindex="-1"><a class="header-anchor" href="#更新人物"><span>更新人物</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> updatePlayer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">deltaTime</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> damping</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.05</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">playerOnFloor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">isDown</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ||</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">            playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addScaledVector</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">damping</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> gravity</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> deltaTime</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 计算玩家移动的距离</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> playerMoveDistance</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">clone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiplyScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">deltaTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    playerCollider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">translate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">playerMoveDistance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 将胶囊的位置进行设置</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    playerCollider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getCenter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 进行碰撞检测</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    playerCollisions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重置人物" tabindex="-1"><a class="header-anchor" href="#重置人物"><span>重置人物</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> resetPlayer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerCollider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2.35</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerCollider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3.35</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerCollider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">radius</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.35</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerDirection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置键盘事件" tabindex="-1"><a class="header-anchor" href="#设置键盘事件"><span>设置键盘事件</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 根据键盘按下的键来更新键盘的状态</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "keydown"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  event</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">   keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75">code</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> keyof</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">   keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">isDown</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "keyup"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  event</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">   keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E06C75">code</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> keyof</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD"> typeof</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">   keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">isDown</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "mousedown"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">   // 锁定鼠标指针</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">   document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">requestPointerLock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> )</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic"> // 根据鼠标在屏幕移动，来旋转胶囊</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">  "mousemove"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">  event</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> =></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">   capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">movementX</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.003</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">   capsuleBodyControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">movementY</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.003</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">   if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleBodyControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ></span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">PI</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    capsuleBodyControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">PI</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">   } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">else</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleBodyControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">PI</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    capsuleBodyControl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">rotation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">PI</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 8</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">  },</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">  false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> )</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据键盘状态更新玩家速度" tabindex="-1"><a class="header-anchor" href="#根据键盘状态更新玩家速度"><span>根据键盘状态更新玩家速度</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 根据键盘状态更新玩家速度</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> controlPlayer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">delta</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B"> number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //获取胶囊的正前面方向</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> capsuleFront</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getWorldDirection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">capsuleFront</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'KeyW'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerDirection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">z</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 计算玩家的速度</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleFront</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiplyScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">delta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'KeyS'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerDirection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">z</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 计算玩家的速度</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleFront</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiplyScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">delta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'KeyA'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerDirection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 侧方的方向，正前面的方向和胶囊的正上方求叉积，求出侧方的方向</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        capsuleFront</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cross</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">up</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 计算玩家的速度</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleFront</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiplyScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">delta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'KeyD'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerDirection</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 侧方的方向，正前面的方向和胶囊的正上方求叉积，求出侧方的方向</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        capsuleFront</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">cross</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">up</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">        // 计算玩家的速度</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">capsuleFront</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiplyScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">delta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">keyStates</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Space'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">]) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        playerVelocity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 15</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="render-函数" tabindex="-1"><a class="header-anchor" href="#render-函数"><span>render 函数</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> renderScene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> delta</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> clock</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getDelta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    updatePlayer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">delta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    controlPlayer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">delta</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    resetPlayer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    requestAnimationFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">renderScene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></iframe>`,r:{minutes:2.78,words:833},t:"八叉树检测",i:"markdown",O:1,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/BufferGeometry.html",{loader:()=>B(()=>import("./BufferGeometry.html-BcktIWy3.js"),__vite__mapDeps([161,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["几何体"],e:`<h2>BufferGeometry</h2>
<p>是面片、线或点几何体的有效表述。包括顶点位置，面片索引、法相量、颜色值、UV 坐标和自定义缓存属性值。使用 BufferGeometry 可以有效减少向 GPU 传输上述数据所需的开销。</p>
<h2>代码示例</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BufferGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建一个简单的矩形. 在这里我们左上和右下顶点被复制了两次。 // 因为在两个三角面片里，这两个顶点都需要被用到。 </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> vertices</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> Float32Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( [ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ] ); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// itemSize = 3 因为每个顶点都是一个三元组。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'position'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BufferAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">vertices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) ); </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } ); </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:5.57,words:1672},t:"BufferGeometry",i:"markdown",O:23,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/Cure.html",{loader:()=>B(()=>import("./Cure.html-C4Re-j_2.js"),__vite__mapDeps([162,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["几何体"],e:`<h2>Curve</h2>
<p>用于创建包含插值方法的Curve对象的抽象基类。 有关Curve的数组，请参见<a href="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/CurePath.html" target="_blank">CurePath</a>。</p>
<h2>构造函数</h2>
<h3>Curve()</h3>
<p>创建一个 Curve.</p>
<h2>属性</h2>
<h3>.arcLengthDivisions : Integer</h3>
<p>确定.GetLength计算曲线的累积分段长度时的分段量。 为确保.getSpacedPoints等方法时的精度，如果曲线非常大，建议增加.arcLengthDivisions。默认值为200</p>`,r:{minutes:2.25,words:675},t:"Cure",i:"markdown",O:24,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E4%BA%8C%E5%8D%81%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./二十面缓冲几何体.html-5Nno07x9.js"),__vite__mapDeps([163,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>IcosahedronGeometry</h2>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/geometry/icosahedronGeometry">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="radius-float" tabindex="-1"><a class="header-anchor" href="#radius-float"><span>radius : Float</span></a></h3>
<p>二十面体的半径，默认为1</p>
<h3 id="detail-integer" tabindex="-1"><a class="header-anchor" href="#detail-integer"><span>detail : Integer</span></a></h3>
<p>默认值为0。将这个值设为一个大于0的数将会为它增加一些顶点，使其不再是一个二十面体。当这个值大于1的时候，实际上它将变成一个球体</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>.parameters : Object</span></a></h3>
<p>一个包含着构造函数中每个参数的对象。在对象实例化之后，对该属性的任何修改都不会改变这个几何体</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
</iframe>`,r:{minutes:.69,words:208},t:"IcosahedronGeometry(二十面缓冲几何体)",i:"markdown",O:7,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%85%AB%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./八面缓冲几何体.html-D4x0Klbt.js"),__vite__mapDeps([164,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>OctahedronGeometry</h2>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/geometry/octahedronGeometry">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="radius-float" tabindex="-1"><a class="header-anchor" href="#radius-float"><span>radius : Float</span></a></h3>
<p>八面体的半径，默认值为1</p>
<h3 id="detail-integer" tabindex="-1"><a class="header-anchor" href="#detail-integer"><span>detail : Integer</span></a></h3>
<p>默认值为0，将这个值设为一个大于0的数将会为它增加一些顶点，使其不再是一个八面体</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>.parameters : Object</span></a></h3>
<p>一个包含着构造函数中每个参数的对象。在对象实例化之后，对该属性的任何修改都不会改变这个几何体</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
</iframe>`,r:{minutes:.62,words:185},t:"OctahedronGeometry(八面缓冲几何体)",i:"markdown",O:9,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%87%B8%E5%8C%85%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./凸包几何体.html-BSoJZvA0.js"),__vite__mapDeps([165,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>ConvexGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">ConvexGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> "three/examples/jsm/geometries/ConvexGeometry"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> ConvexGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">points</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.23,words:68},t:"ConvexGeometry(凸包几何体)",i:"markdown",O:20,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%8D%81%E4%BA%8C%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./十二面缓冲几何体.html-BSiOFJmR.js"),__vite__mapDeps([166,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>DodecahedronGeometry</h2>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/geometry/dodecahedronGeometry">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="radius-float" tabindex="-1"><a class="header-anchor" href="#radius-float"><span>radius : Float</span></a></h3>
<p>十二面体的半径，默认值为1</p>
<h3 id="detail-integer" tabindex="-1"><a class="header-anchor" href="#detail-integer"><span>detail : Integer</span></a></h3>
<p>默认值为0。将这个值设为一个大于0的数将会为它增加一些顶点，使其不再是一个十二面体</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>.parameters : Object</span></a></h3>
<p>一个包含着构造函数中每个参数的对象。在对象实例化之后，对该属性的任何修改都不会改变这个几何体。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
</iframe>`,r:{minutes:.63,words:188},t:"DodecahedronGeometry(十二面缓冲几何体)",i:"markdown",O:5,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9B%9B%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./四面缓冲几何体.html-FKL5UFFE.js"),__vite__mapDeps([167,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>TetrahedronGeometry</h2>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/geometry/tetrahedronGeometry">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="radius-float" tabindex="-1"><a class="header-anchor" href="#radius-float"><span>radius : Float</span></a></h3>
<p>四面体的半径，默认值为1</p>
<h3 id="detail-integer" tabindex="-1"><a class="header-anchor" href="#detail-integer"><span>detail : Integer</span></a></h3>
<p>默认值为0。将这个值设为一个大于0的数将会为它增加一些顶点，使其不再是一个四面体</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>.parameters : Object</span></a></h3>
<p>一个包含着构造函数中每个参数的对象。在对象实例化之后，对该属性的任何修改都不会改变这个几何体</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html">PolyhedronGeometry</RouteLink></p>
</iframe>`,r:{minutes:.62,words:185},t:"TetrahedronGeometry(四面缓冲几何体)",i:"markdown",O:15,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E5%BD%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./圆形缓冲几何体.html-DhJ1YKkp.js"),__vite__mapDeps([168,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>CircleGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">CircleGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> circle</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">circle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.73,words:219},t:"CircleGeometry(圆形缓冲几何体)",i:"markdown",O:2,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E6%9F%B1%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./圆柱缓冲几何体.html-3ihlfXQ2.js"),__vite__mapDeps([169,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>CylinderGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">CylinderGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cylinder</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cylinder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.02,words:307},t:"CylinderGeometry(圆柱缓冲几何体)",i:"markdown",O:4,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E7%8E%AF%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93(TorusGeometry).html",{loader:()=>B(()=>import("./圆环缓冲几何体(TorusGeometry).html-BsIw0z77.js"),__vite__mapDeps([170,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>TorusGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">TorusGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> torus</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">torus</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.75,words:225},t:"TorusGeometry(圆环缓冲几何体)",i:"markdown",O:16,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E7%8E%AF%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./圆环缓冲几何体.html-BSYCIkgn.js"),__vite__mapDeps([171,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>RingGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">RingGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">side</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">DoubleSide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.75,words:224},t:"RingGeometry(圆环缓冲几何体)",i:"markdown",O:12,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E7%8E%AF%E7%BC%93%E5%86%B2%E6%89%AD%E7%BB%93%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./圆环缓冲扭结几何体.html-D1WgMs35.js"),__vite__mapDeps([172,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>TorusKnotGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">TorusKnotGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> torusKnot</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">torusKnot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.84,words:251},t:"TorusKnotGeometry(圆环缓冲扭结几何体)",i:"markdown",O:17,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E9%94%A5%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./圆锥缓冲几何体.html-CcIZixFG.js"),__vite__mapDeps([173,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>圆锥缓冲几何体ConeGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ConeGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cone</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cone</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.05,words:315},t:"ConeGeometry(圆锥缓冲几何体)",i:"markdown",O:3,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./多面缓冲几何体.html-Dv2GszMQ.js"),__vite__mapDeps([174,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>PolyhedronGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> verticesOfCube</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">    -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> indicesOfFaces</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,    </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PolyhedronGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">verticesOfCube</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">indicesOfFaces</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.87,words:260},t:"PolyhedronGeometry(多面缓冲几何体)",i:"markdown",O:11,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%B9%B3%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./平面缓冲几何体.html-SzlpIIBH.js"),__vite__mapDeps([175,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>PlaneGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PlaneGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">side</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">DoubleSide</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> plane</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">plane</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.68,words:204},t:"PlaneGeometry(平面缓冲几何体)",i:"markdown",O:10,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%BD%A2%E7%8A%B6%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./形状缓冲几何体.html-C8vjbfa1.js"),__vite__mapDeps([176,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>ShapeGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> heartShape</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">moveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bezierCurveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bezierCurveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bezierCurveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 15.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 19</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bezierCurveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 15.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 11</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bezierCurveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">bezierCurveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ShapeGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">heartShape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) ;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.85,words:255},t:"ShapeGeometry(形状缓冲几何体)",i:"markdown",O:13,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E6%8C%A4%E5%8E%8B%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./挤压缓冲几何体.html-CR8QS8hU.js"),__vite__mapDeps([177,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>ExtrudeGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> length</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#E5C07B">    width</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> shape</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">moveTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lineTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lineTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lineTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lineTo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> extrudeSettings</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    steps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    depth</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    bevelEnabled</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    bevelThickness</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    bevelSize</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    bevelOffset</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    bevelSegments</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">ExtrudeGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">shape</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">extrudeSettings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.3,words:389},t:"ExtrudeGeometry(挤压缓冲几何体)",i:"markdown",O:21,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E6%9B%B2%E7%BA%BF.html",{loader:()=>B(()=>import("./曲线.html-DXPVOoHC.js"),__vite__mapDeps([178,1])),meta:{d:16789248e5,l:"2023年3月16日",c:["threejs"],g:["几何体"],e:`<h2>CatmullRomCurve3</h2>
<p>使用Catmull-Rom算法， 从一系列的点创建一条平滑的三维样条曲线。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> curve</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">CatmullRomCurve3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( [</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ),</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ),</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ),</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ),</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">] );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> points</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> curve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getPoints</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BufferGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setFromPoints</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">points</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">LineBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> curveObject</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.82,words:246},t:"CatmullRomCurve3(曲线)",i:"markdown",O:22,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E6%9B%B2%E7%BA%BF%E8%B7%AF%E5%BE%84.html",{loader:()=>B(()=>import("./曲线路径.html-CVDuL3es.js"),__vite__mapDeps([179,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["几何体"],e:`<h2>CurePath</h2>
<p>一个扩展了Curve的抽象基类。CurvePath仅仅是一个已连接的曲线的数组，但保留了曲线的API。</p>
<h2>构造函数</h2>
<h3>CurvePath()</h3>
<p>构造函数中不传入参数。</p>
<h2>属性</h2>
<p>共有属性请参见其基类<a href="/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/Cure.html" target="_blank">Cure</a>。</p>
<h3>.curves : Array</h3>
<p>Curves数组。</p>
<h3>.autoClose : Boolean</h3>`,r:{minutes:.76,words:228},t:"曲线路径（CurvePath）",i:"markdown",O:25,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%90%83%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./球缓冲几何体.html-BUsUt_bQ.js"),__vite__mapDeps([180,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>SphereGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">SphereGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">15</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">16</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> sphere</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">sphere</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.89,words:266},t:"SphereGeometry(球缓冲几何体)",i:"markdown",O:14,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%AB%8B%E6%96%B9%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./立方缓冲几何体.html-CaxOpSuw.js"),__vite__mapDeps([181,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>BoxGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BoxGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( {</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">} );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cube</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cube</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.75,words:225},t:"BoxGeometry(立方缓冲几何体)",i:"markdown",O:1,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%AE%A1%E9%81%93%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./管道缓冲几何体.html-C9FRTVCR.js"),__vite__mapDeps([182,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>TubeGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B"> CustomSinCurve</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> extends</span><span style="--shiki-light:#50A14F;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B">Curve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    constructor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">scale</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">        super</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">        this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scale</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> scale</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    getPoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">optionalTarget</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> tx</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 3</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1.5</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> ty</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">PI</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> t</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> tz</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> optionalTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">tx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">ty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">tz</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">).</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">multiplyScalar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">scale</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> path</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> CustomSinCurve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">TubeGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">8</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.96,words:287},t:"TubeGeometry(管道缓冲几何体)",i:"markdown",O:18,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%BD%91%E6%A0%BC%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./网格几何体.html-DF3L5csb.js"),__vite__mapDeps([183,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>WireframeGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">SphereGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> wireframe</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">WireframeGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> line</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">LineSegments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">wireframe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">depthTest</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">opacity</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.25</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">transparent</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.34,words:103},t:"WireframeGeometry(网格几何体)",i:"markdown",O:19,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E8%BD%A6%E5%89%8A%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./车削缓冲几何体.html-K2VtIGRN.js"),__vite__mapDeps([184,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>LatheGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> points</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> [];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> ++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> points</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">push</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">Math</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">sin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> *</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0.2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, ( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">LatheGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">points</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> lathe</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">lathe</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.87,words:262},t:"LatheGeometry(车削缓冲几何体)",i:"markdown",O:8,y:"a"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E8%BE%B9%E7%BC%98%E5%87%A0%E4%BD%95%E4%BD%93.html",{loader:()=>B(()=>import("./边缘几何体.html-ljDNRxqC.js"),__vite__mapDeps([185,1])),meta:{d:16784064e5,l:"2023年3月10日",c:["threejs"],g:["几何体"],e:`<h2>EdgesGeometry</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BoxGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> edges</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">EdgesGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> line</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">LineSegments</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">    edges</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">LineBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffffff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.62,words:186},t:"EdgesGeometry(边缘几何体)",i:"markdown",O:6,y:"a"}}],["/threejs/%E5%8A%A0%E8%BD%BD%E5%99%A8/DefaultLoadingManager.html",{loader:()=>B(()=>import("./DefaultLoadingManager.html-CSxT7PcG.js"),__vite__mapDeps([186,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["加载器"],e:`<h2>DefaultLoadingManager</h2>
<p>LoadingManager是一个全局实例, 当其他加载器没有指定加载管理器时，它将被其他大多数的加载器设为默认的加载管理器。</p>
<p>LoadingManager对于大多数加载器来说已经足够了，但有时您可能需要单独设置加载管理器，例如纹理、模型加载器。</p>
<h2>代码示例</h2>
<p>你可以选择性的为你的管理器设置 onStart, onLoad, onProgress, onError 这些方法。 当你的加载器使用默认加载管理器时，这些方法都将被应用到加载器上。</p>
<p>请注意，个人的加载器的不应具有类似上面类似的命名函数，以避免混淆。因为这些函数时用于显示有关加载总体状态的信息，而不是处理已加载的数据。</p>`,r:{minutes:1.06,words:318},t:"DefaultLoadingManager",i:"markdown",O:2,y:"a"}}],["/threejs/%E5%8A%A0%E8%BD%BD%E5%99%A8/LoadingManager.html",{loader:()=>B(()=>import("./LoadingManager.html-zJth_2BN.js"),__vite__mapDeps([187,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["加载器"],e:`<h2>LoadingManager</h2>
<p>其功能是处理并跟踪已加载和待处理的数据。如果未手动设置加强管理器，则会为加载器创建和使用默认全局实例加载器管理器 - 请参阅<a href="/threejs/%E5%8A%A0%E8%BD%BD%E5%99%A8/DefaultLoadingManager.html" target="_blank">DefaultLoadingManager</a>.</p>
<p>一般来说，默认的加载管理器已足够使用了，但有时候也需要设置单独的加载器 - 例如，如果你想为对象和纹理显示单独的加载条。</p>
<h2>代码示例</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> manager</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">LoadingManager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onStart</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">itemsLoaded</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">itemsTotal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'Started loading file: '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            url</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            '.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Loaded '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            itemsLoaded</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            ' of '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            itemsTotal</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            ' files.'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onLoad</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'Loading complete!'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onProgress</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">itemsLoaded</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">itemsTotal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">        'Loading file: '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            url</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            '.</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">Loaded '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            itemsLoaded</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            ' of '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">            itemsTotal</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">            ' files.'</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">onError</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'There was an error loading '</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> loader</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">OBJLoader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">manager</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">loader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'file.obj'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    //</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">})</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.49,words:1048},t:"LoadingManager",i:"markdown",O:1,y:"a"}}],["/threejs/%E5%8A%A8%E7%94%BB/AnimationAction.html",{loader:()=>B(()=>import("./AnimationAction.html-CXnigVtb.js"),__vite__mapDeps([188,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["动画"],e:`<h2>AnimationAction</h2>
<p>AnimationActions 用来调度存储在AnimationClips中的动画。</p>
<p>说明: AnimationAction的大多数方法都可以链式调用</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/animation">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="animationaction-mixer-animationmixer-clip-animationclip-localroot-object3d" tabindex="-1"><a class="header-anchor" href="#animationaction-mixer-animationmixer-clip-animationclip-localroot-object3d"><span>AnimationAction( mixer : AnimationMixer, clip : AnimationClip, localRoot : Object3D )</span></a></h3>
<ul>
<li>mixer - 被此动作控制的 <em>动画混合器</em></li>
<li>clip - <em>动画剪辑</em> 保存了此动作当中的动画数据</li>
<li>localRoot - 动作执行的根对象</li>
</ul>
<p>说明: 不要直接调用这个构造函数，而应该先用AnimationMixer.clipAction实例化一个AnimationAction，因为这个方法提供了缓存以提高性能。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<h3 id="clampwhenfinished-boolean" tabindex="-1"><a class="header-anchor" href="#clampwhenfinished-boolean"><span>.clampWhenFinished : Boolean</span></a></h3>
<p>如果 clampWhenFinished 值设为true, 那么动画将在最后一帧之后自动暂停（paused）</p>
<p>如果 clampWhenFinished 值为false, enabled 属性值将在动作的最后一次循环完成之后自动改为false, 那么这个动作以后就不会再执行。</p>
<p>默认值为false</p>
<p>说明: 动作如果被中断了，clampWhenFinished将无效 (只有当最后一次循环执行完毕之后才能起效）</p>
<h3 id="enabled-boolean" tabindex="-1"><a class="header-anchor" href="#enabled-boolean"><span>.enabled : Boolean</span></a></h3>
<p>enabled 值设为false会禁用动作, 也就是无效.默认值是true</p>
<p>当enabled被重新置为true, 动画将从当前时间（time）继续 (将 enabled 置为 false 不会重置此次动作)</p>
<p>说明: 将enabled置为true不会让动画自动重新开始。只有满足以下条件时才会马上重新开始: 暂停（paused）值为false, 同时动作没有失效 (执行停止(stop)命令或重置(reset)命令， 且权重(weight)和时间比例(timeScale)都不能为0</p>
<h3 id="loop-number" tabindex="-1"><a class="header-anchor" href="#loop-number"><span>.loop : Number</span></a></h3>
<p>循环模式 (可以通过setLoop改变)。默认值是 THREE.LoopRepeat (重复repetitions次数无穷)</p>
<p>必须是以下值之一：</p>
<ul>
<li>THREE.LoopOnce - 只执行一次</li>
<li>THREE.LoopRepeat - 重复次数为repetitions的值, 且每次循环结束时候将回到起始动作开始下一次循环。</li>
<li>THREE.LoopPingPong - 重复次数为repetitions的值, 且像乒乓球一样在起始点与结束点之间来回循环。</li>
</ul>
<h3 id="paused-boolean" tabindex="-1"><a class="header-anchor" href="#paused-boolean"><span>.paused : Boolean</span></a></h3>
<p>paused置为true会通过将动作的有效时间比例改为0来使动作暂停执行。默认值是false</p>
<h3 id="repetitions-number" tabindex="-1"><a class="header-anchor" href="#repetitions-number"><span>.repetitions : Number</span></a></h3>
<p>整个动作过程动画剪辑（AnimationClip）执行的次数，可以通过setLoop修改。默认值是Infinity</p>
<p>如果循环模式（loop mode）值被设置为THREE.LoopOnce，repetitions值将会无效。</p>
<h3 id="time-number" tabindex="-1"><a class="header-anchor" href="#time-number"><span>.time : Number</span></a></h3>
<p>动作开始的时间点 (单位是秒, 从0开始计时).</p>
<p>这个值被限定在 0到clip.duration(根据循环状态)范围之内. 可以通过改变时间比例（timeScale) (使用 setEffectiveTimeScale 或者 setDuration)来将它相对于全局的混合器缩放.</p>
<h3 id="timescale-number" tabindex="-1"><a class="header-anchor" href="#timescale-number"><span>.timeScale : Number</span></a></h3>
<p>时间(time)的比例因子. 值为0时会使动画暂停。值为负数时动画会反向执行。默认值是1。</p>
<p>关于timeScale属性/方法 (不同于 time) 有: getEffectiveTimeScale, halt, paused, setDuration, setEffectiveTimeScale, stopWarping, syncWith, warp.</p>
<h3 id="weight-number" tabindex="-1"><a class="header-anchor" href="#weight-number"><span>.weight : Number</span></a></h3>
<p>动作的影响程度 (取值范围[0, 1]). 0 (无影响)到1（完全影响）之间的值可以用来混合多个动作。默认值是1</p>
<p>关于weight的属性/方法有: crossFadeFrom, crossFadeTo, enabled, fadeIn, fadeOut, getEffectiveWeight, setEffectiveWeight, stopFading.</p>
<h3 id="zeroslopeatend-boolean" tabindex="-1"><a class="header-anchor" href="#zeroslopeatend-boolean"><span>.zeroSlopeAtEnd : Boolean</span></a></h3>
<p>启用平滑插值，无须单独剪辑开始、循环和结束。默认值是true</p>
<h3 id="zeroslopeatstart-boolean" tabindex="-1"><a class="header-anchor" href="#zeroslopeatstart-boolean"><span>.zeroSlopeAtStart : Boolean</span></a></h3>
<p>启用平滑插值，无须单独剪辑开始、循环和结束。默认值是true</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<h3 id="crossfadefrom-fadeoutaction-animationaction-durationinseconds-number-warpboolean-boolean-this" tabindex="-1"><a class="header-anchor" href="#crossfadefrom-fadeoutaction-animationaction-durationinseconds-number-warpboolean-boolean-this"><span>.crossFadeFrom ( fadeOutAction : AnimationAction, durationInSeconds : Number, warpBoolean : Boolean ) : this</span></a></h3>
<p>在传入的时间段内，让此动作淡入(fade in),同时让另一个动作淡出。此方法可链式调用。</p>
<p>如果warpBoolean值是true, 额外的 warping (时间比例的渐变)将会被应用。</p>
<p>说明: 与 fadeIn/fadeOut一样, 淡入淡出动作开始/结束时的权重是1.</p>
<h3 id="crossfadeto-fadeinaction-animationaction-durationinseconds-number-warpboolean-boolean-this" tabindex="-1"><a class="header-anchor" href="#crossfadeto-fadeinaction-animationaction-durationinseconds-number-warpboolean-boolean-this"><span>.crossFadeTo ( fadeInAction : AnimationAction, durationInSeconds : Number, warpBoolean : Boolean ) : this</span></a></h3>
<p>在传入的时间段内, 让此动作淡出（fade out），同时让另一个动作淡入。此方法可链式调用。</p>
<p>如果warpBoolean值是true, 额外的 warping (时间比例的渐变)将会被应用。</p>
<p>说明: 与 fadeIn/fadeOut一样, 淡入淡出动作开始/结束时的权重是1.</p>
<h3 id="fadein-durationinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#fadein-durationinseconds-number-this"><span>.fadeIn ( durationInSeconds : Number ) : this</span></a></h3>
<p>在传入的时间间隔内，逐渐将此动作的权重（weight）由0升到1。此方法可链式调用。</p>
<h3 id="fadeout-durationinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#fadeout-durationinseconds-number-this"><span>.fadeOut ( durationInSeconds : Number ) : this</span></a></h3>
<p>在传入的时间间隔内，逐渐将此动作的权重（weight）由1降至0。此方法可链式调用。</p>
<h3 id="geteffectivetimescale-number" tabindex="-1"><a class="header-anchor" href="#geteffectivetimescale-number"><span>.getEffectiveTimeScale () : Number</span></a></h3>
<p>返回有效时间比例(考虑当前的变形状态和paused值).</p>
<h3 id="geteffectiveweight-number" tabindex="-1"><a class="header-anchor" href="#geteffectiveweight-number"><span>.getEffectiveWeight () : number</span></a></h3>
<p>返回影响权重(考虑当前淡入淡出状态和enabled的值).</p>
<h3 id="getclip-animationclip" tabindex="-1"><a class="header-anchor" href="#getclip-animationclip"><span>.getClip () : AnimationClip</span></a></h3>
<p>返回存有此动作的动画数据的剪辑</p>
<h3 id="getmixer-animationmixer" tabindex="-1"><a class="header-anchor" href="#getmixer-animationmixer"><span>.getMixer () : AnimationMixer</span></a></h3>
<p>返回负责完成此动作的混合器</p>
<h3 id="getroot-object3d" tabindex="-1"><a class="header-anchor" href="#getroot-object3d"><span>.getRoot () : Object3D</span></a></h3>
<p>返回执行此动作的根对象</p>
<h3 id="halt-durationinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#halt-durationinseconds-number-this"><span>.halt ( durationInSeconds : Number ) : this</span></a></h3>
<p>在传入的时间间隔内，通过从当前值开始逐渐降低时间比例(timeScale)使动画逐渐减速至0。此方法可链式调用。</p>
<h3 id="isrunning-boolean" tabindex="-1"><a class="header-anchor" href="#isrunning-boolean"><span>.isRunning () : Boolean</span></a></h3>
<p>返回当前此动作的时间(time)是否正在流逝</p>
<p>除了在混合器中被激活之外 (参见isScheduled)必须满足以下条件才会返回true: paused值等于false, enabled值为true, timeScale值不为0, 而且没有安排延时启动(startAt).</p>
<p>说明 isRunning 为true并不意味着此动画一定会切实地被看到。仅当权重(weight)被设置为非零值时才是这种情况。</p>
<h3 id="isscheduled-boolean" tabindex="-1"><a class="header-anchor" href="#isscheduled-boolean"><span>.isScheduled () : Boolean</span></a></h3>
<p>如果动作是在混合器中被激活的，返回true。</p>
<p>说明: 这并不意味着动画正在执行中 (需要额外判断isRunning值)</p>
<h3 id="play-this" tabindex="-1"><a class="header-anchor" href="#play-this"><span>.play () : this</span></a></h3>
<p>让混合器激活动作。此方法可链式调用。</p>
<p>说明: 激活动作并不意味着动画会立刻开始: 如果动作在此之前已经完成（到达最后一次循环的结尾），或者如果已经设置了延时 启动(通过 startAt)，则必须先执行重置操作（reset）。 一些其它的设置项 (paused=true, enabled=false, weight=0, timeScale=0) 也可以阻止动画的开始。</p>
<h3 id="reset-this" tabindex="-1"><a class="header-anchor" href="#reset-this"><span>.reset () : this</span></a></h3>
<p>重置动作。此方法可链式调用。</p>
<p>该方法会将暂停值 paused 设为false, 启用值enabled 设为true,时间值 time设为0, 中断任何预定的淡入淡出和变形, 以及移除内部循环次数以及延迟启动。</p>
<p>说明: 停止方法stop内调用了重置方法（reset）, 但是 .reset不会调用 .stop。 这就表示: 如果你想要这两者, 重置并且停止, 不要调用reset; 而应该调用stop。</p>
<h3 id="setduration-durationinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#setduration-durationinseconds-number-this"><span>.setDuration ( durationInSeconds : Number ) : this</span></a></h3>
<p>设置单此循环的持续时间(通过调整时间比例（timeScale）以及停用所有的变形)。此方法可以链式调用。</p>
<h3 id="seteffectivetimescale-timescale-number-this" tabindex="-1"><a class="header-anchor" href="#seteffectivetimescale-timescale-number-this"><span>.setEffectiveTimeScale ( timeScale : Number ) : this</span></a></h3>
<p>设置时间比例（timeScale）以及停用所有的变形)。 此方法可以链式调用。</p>
<p>如果暂停 （paused）值为false, 有效的时间比例(一个内部属性) 也会被设为该值; 否则有效时间比例 (直接影响当前动画 将会被设为0.</p>
<p>说明: 如果时间比例.timeScale 被此方法设为0，暂停值paused不会被自动改为true。</p>
<h3 id="seteffectiveweight-weight-number-this" tabindex="-1"><a class="header-anchor" href="#seteffectiveweight-weight-number-this"><span>.setEffectiveWeight ( weight : Number ) : this</span></a></h3>
<p>设置权重（weight）以及停止所有淡入淡出。该方法可以链式调用。</p>
<p>如果启用属性（enabled）为true, 那么有效权重(一个内部属性) 也会被设为该值; 否则有效权重 (直接影响当前动画)将会被设为0.</p>
<p>说明: 如果该方法将权重weight值设为0，启用值enabled不会被自动改为false。</p>
<h3 id="setloop-loopmode-number-repetitions-number-this" tabindex="-1"><a class="header-anchor" href="#setloop-loopmode-number-repetitions-number-this"><span>.setLoop ( loopMode : Number, repetitions : Number ) : this</span></a></h3>
<p>设置循环（loop mode）及循环重复次数（repetitions）。改方法可被链式调用。</p>
<h3 id="startat-starttimeinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#startat-starttimeinseconds-number-this"><span>.startAt ( startTimeInSeconds : Number ) : this</span></a></h3>
<p>定义延时启动的事件 (通常会传入AnimationMixer.time + deltaTimeInSeconds)。 该方法可以链式调用。</p>
<p>说明: 如果 startAt方法是和play方法一起链式调用, 或者动画已经在混合器中被激活 (通过先行调用play, 同时没有停止或重置)，动画将仅在给定时间开始.</p>
<h3 id="stop-this" tabindex="-1"><a class="header-anchor" href="#stop-this"><span>.stop () : this</span></a></h3>
<p>让混合器停止动作。该方法可以被链式调用。</p>
<p>动作会马上停止以及完全[page:.reset 重置].</p>
<p>说明: 你可以通过mixer.stopAllAction在一个混合器中一举停止所有处于激活态的动作。</p>
<h3 id="stopfading-this" tabindex="-1"><a class="header-anchor" href="#stopfading-this"><span>.stopFading () : this</span></a></h3>
<p>停止动作中所有预定的淡入淡出（fading）。该方法可以被链式调用。</p>
<h3 id="stopwarping-this" tabindex="-1"><a class="header-anchor" href="#stopwarping-this"><span>.stopWarping () : this</span></a></h3>
<p>停用动作中所有预定的变形warping。该方法可被链式调用。</p>
<h3 id="syncwith-otheraction-animationaction-this" tabindex="-1"><a class="header-anchor" href="#syncwith-otheraction-animationaction-this"><span>.syncWith ( otherAction : AnimationAction ) : this</span></a></h3>
<p>将此动作与传入的其它动作同步。此方法可被链式调用。</p>
<p>同步是通过将动作的时间(time)或时间比例(timeScale)与另一动作设置一致来实现的 (停用所有预定的变形)。</p>
<p>说明: 另一动作的 time 和 timeScale未来变化将不会被检测到.</p>
<h3 id="warp-starttimescale-number-endtimescale-number-durationinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#warp-starttimescale-number-endtimescale-number-durationinseconds-number-this"><span>.warp ( startTimeScale : Number, endTimeScale : Number, durationInSeconds : Number ) : this</span></a></h3>
<p>在传入的事件间隔内，通过逐渐将时间比例timeScale由startTimeScale修改至endTimeScale来改变回放速度。该方法可被链式调用。</p>
<h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件"><span>事件</span></a></h2>
<p>有两个事件分别表示了单次循环的结束和全部动作的结束，你可以这样对它们做出响应:</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mixer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'loop'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) { …} );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">mixer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'finished'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> ) { …} );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div></iframe>`,r:{minutes:7.56,words:2269},t:"AnimationAction",i:"markdown",O:3,y:"a"}}],["/threejs/%E5%8A%A8%E7%94%BB/AnimationClip.html",{loader:()=>B(()=>import("./AnimationClip.html-Ji3Cgk_I.js"),__vite__mapDeps([189,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["动画"],e:`<h2>AnimationClip</h2>
<p>动画剪辑（AnimationClip）是一个可重用的关键帧轨道集，它代表动画。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/animation">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<p>AnimationClip( name : String, duration : Number, tracks : Array )</p>
<ul>
<li>name - 此剪辑的名称</li>
<li>duration - 持续时间 (单位秒). 如果传入负数, 持续时间将会从传入的数组中计算得到。</li>
<li>tracks - 一个由关键帧轨道（KeyframeTracks）组成的数组。</li>
</ul>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<h3 id="duration-number" tabindex="-1"><a class="header-anchor" href="#duration-number"><span>.duration : Number</span></a></h3>
<p>剪辑的持续时间 (单位秒). 可以通过resetDuration从轨道数组（tracks）计算出来。</p>
<h3 id="name-string" tabindex="-1"><a class="header-anchor" href="#name-string"><span>.name : String</span></a></h3>
<p>剪辑的名称. 调用findByName根据名称搜索某个剪辑</p>
<h3 id="tracks-array" tabindex="-1"><a class="header-anchor" href="#tracks-array"><span>.tracks : Array</span></a></h3>
<p>一个包含该剪辑中有动画的所有属性的关键帧轨道（KeyframeTrack）的数组。</p>
<h3 id="uuid-string" tabindex="-1"><a class="header-anchor" href="#uuid-string"><span>.uuid : String</span></a></h3>
<p>剪辑实例的UUID，自动分配且不可编辑。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<h3 id="clone-animationclip" tabindex="-1"><a class="header-anchor" href="#clone-animationclip"><span>.clone () : AnimationClip</span></a></h3>
<h3 id="optimize-this" tabindex="-1"><a class="header-anchor" href="#optimize-this"><span>.optimize () : this</span></a></h3>
<p>通过移除等效的顺序键（在变形目标序列中很常见）来优化每一个轨道</p>
<h3 id="resetduration-this" tabindex="-1"><a class="header-anchor" href="#resetduration-this"><span>.resetDuration () : this</span></a></h3>
<p>将剪辑的持续时间（duration）设为最长的关键帧轨道(KeyframeTrack)的持续时间。</p>
<h3 id="tojson-object" tabindex="-1"><a class="header-anchor" href="#tojson-object"><span>.toJSON () : Object</span></a></h3>
<p>Returns a JSON object representing the serialized animation clip.</p>
<h3 id="trim-this" tabindex="-1"><a class="header-anchor" href="#trim-this"><span>.trim () : this</span></a></h3>
<p>修剪所有的轨道到该剪辑的持续时间。</p>
<h3 id="validate-boolean" tabindex="-1"><a class="header-anchor" href="#validate-boolean"><span>.validate () : Boolean</span></a></h3>
<p>对剪辑中的每个轨道执行最小验证。如果所有轨道都有效，返回true。</p>
<h2 id="静态方法" tabindex="-1"><a class="header-anchor" href="#静态方法"><span>静态方法</span></a></h2>
<h3 id="createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array" tabindex="-1"><a class="header-anchor" href="#createclipsfrommorphtargetsequences-name-string-morphtargetsequence-array-fps-number-noloop-boolean-array"><span>.CreateClipsFromMorphTargetSequences ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : Array</span></a></h3>
<p>返回从几何体的变形目标序列(morph target sequences)创建的新动画剪辑(AnimationClip)数组，并尝试将变形目标名称分类为基于动画组的模式，如“Walk_001、Walk_002、Run_001、Run_002……”。</p>
<h3 id="createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip" tabindex="-1"><a class="header-anchor" href="#createfrommorphtargetsequence-name-string-morphtargetsequence-array-fps-number-noloop-boolean-animationclip"><span>.CreateFromMorphTargetSequence ( name : String, morphTargetSequence : Array, fps : Number, noLoop : Boolean ) : AnimationClip</span></a></h3>
<p>返回一个由几何体变形目标数组(morph targets array)得到的新动画剪辑，接收名称和帧率参数。</p>
<p>说明: 帧率是必须参数, 但是动画速度可能会在AnimationAction中被animationAction.setDuration方法重写。</p>
<h3 id="findbyname-objectorcliparray-object-name-string-animationclip" tabindex="-1"><a class="header-anchor" href="#findbyname-objectorcliparray-object-name-string-animationclip"><span>.findByName ( objectOrClipArray : Object, name : String ) : AnimationClip</span></a></h3>
<p>根据名称搜索动画剪辑(AnimationClip), 接收一个动画剪辑数组或者一个包含名为&quot;animation&quot;的数组的网格（或几何体）作为第一个参数。</p>
<h3 id="parse-json-object-animationclip" tabindex="-1"><a class="header-anchor" href="#parse-json-object-animationclip"><span>.parse ( json : Object ) : AnimationClip</span></a></h3>
<p>解析剪辑的JSON表示，并返回一个动画剪辑(AnimationClip)。</p>
<h3 id="parseanimation-animation-object-bones-array-animationclip" tabindex="-1"><a class="header-anchor" href="#parseanimation-animation-object-bones-array-animationclip"><span>.parseAnimation ( animation : Object, bones : Array ) : AnimationClip</span></a></h3>
<p>解析动画层级格式并返回动画剪辑。</p>
<h3 id="tojson-clip-animationclip-object" tabindex="-1"><a class="header-anchor" href="#tojson-clip-animationclip-object"><span>.toJSON ( clip : AnimationClip ) : Object</span></a></h3>
<p>接收一个动画剪辑为参数并返回一个JSON对象.</p>
</iframe>`,r:{minutes:1.95,words:584},t:"AnimationClip",i:"markdown",O:2,y:"a"}}],["/threejs/%E5%8A%A8%E7%94%BB/AnimationMixer.html",{loader:()=>B(()=>import("./AnimationMixer.html-DGSoNEix.js"),__vite__mapDeps([190,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["动画"],e:`<h2>AnimationMixer</h2>
<p>动画混合器是用于场景中特定对象的动画的播放器。当场景中的多个对象独立动画时，每个对象都可以使用同一个动画混合器。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/animation">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="animationmixer-rootobject-object3d" tabindex="-1"><a class="header-anchor" href="#animationmixer-rootobject-object3d"><span>AnimationMixer( rootObject : Object3D )</span></a></h3>
<ul>
<li>rootObject - 混合器播放的动画所属的对象</li>
</ul>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<h3 id="time-number" tabindex="-1"><a class="header-anchor" href="#time-number"><span>.time : Number</span></a></h3>
<p>全局的混合器时间(单位秒; 混合器创建的时刻记作0时刻)</p>
<h3 id="timescale-number" tabindex="-1"><a class="header-anchor" href="#timescale-number"><span>.timeScale : Number</span></a></h3>
<p>全局时间(mixer time)的比例因子</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<h2 id="clipaction-clip-animationclip-optionalroot-object3d-animationaction" tabindex="-1"><a class="header-anchor" href="#clipaction-clip-animationclip-optionalroot-object3d-animationaction"><span>.clipAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction</span></a></h2>
<p>返回所传入的剪辑参数的AnimationAction, 根对象参数可选，默认值为混合器的默认根对象。第一个参数可以是动画剪辑(AnimationClip)对象或者动画剪辑的名称。</p>
<p>如果不存在符合传入的剪辑和根对象这两个参数的动作, 该方法将会创建一个。传入相同的参数多次调用将会返回同一个剪辑实例。</p>
<h2 id="existingaction-clip-animationclip-optionalroot-object3d-animationaction" tabindex="-1"><a class="header-anchor" href="#existingaction-clip-animationclip-optionalroot-object3d-animationaction"><span>.existingAction (clip : AnimationClip, optionalRoot : Object3D) : AnimationAction</span></a></h2>
<p>返回传入剪辑的已有AnimationAction, 根对象参数可选，默认值为混合器的默认根对象。</p>
<p>第一个参数可以是动画剪辑(AnimationClip)对象或者动画剪辑的名称。</p>
<h2 id="getroot-object3d" tabindex="-1"><a class="header-anchor" href="#getroot-object3d"><span>.getRoot () : Object3D</span></a></h2>
<p>返回混合器的根对象</p>
<h2 id="stopallaction-this" tabindex="-1"><a class="header-anchor" href="#stopallaction-this"><span>.stopAllAction () : this</span></a></h2>
<p>停用混合器上所有预定的动作</p>
<h2 id="update-deltatimeinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#update-deltatimeinseconds-number-this"><span>.update (deltaTimeInSeconds : Number) : this</span></a></h2>
<p>推进混合器时间并更新动画</p>
<p>通常在渲染循环中完成, 传入按照混合器的时间比例(timeScale)缩放过的clock.getDelta</p>
<h2 id="settime-timeinseconds-number-this" tabindex="-1"><a class="header-anchor" href="#settime-timeinseconds-number-this"><span>.setTime (timeInSeconds : Number) : this</span></a></h2>
<p>设置全局混合器到一个给定的时间，并相应地更新动画。</p>
<p>当你需要在一个动画里跳转到一个精确的时间，该函数将是十分有用的。输入的参数将会被混合器的timeScale进行缩放。</p>
<h2 id="uncacheclip-clip-animationclip-undefined" tabindex="-1"><a class="header-anchor" href="#uncacheclip-clip-animationclip-undefined"><span>.uncacheClip (clip : AnimationClip) : undefined</span></a></h2>
<p>释放剪辑的所有内存资源</p>
<h2 id="uncacheroot-root-object3d-undefined" tabindex="-1"><a class="header-anchor" href="#uncacheroot-root-object3d-undefined"><span>.uncacheRoot (root : Object3D) : undefined</span></a></h2>
<p>释放根对象的所有内存资源</p>
<h2 id="uncacheaction-clip-animationclip-optionalroot-object3d-undefined" tabindex="-1"><a class="header-anchor" href="#uncacheaction-clip-animationclip-optionalroot-object3d-undefined"><span>.uncacheAction (clip : AnimationClip, optionalRoot : Object3D) : undefined</span></a></h2>
<p>释放动作的所有内存资源</p>
</iframe>`,r:{minutes:1.69,words:508},t:"AnimationMixer",i:"markdown",O:1,y:"a"}}],["/threejs/%E5%9F%BA%E7%A1%80/%E5%85%89%E7%BA%BF%E6%8A%95%E5%B0%84.html",{loader:()=>B(()=>import("./光线投射.html-BJgliyUX.js"),__vite__mapDeps([191,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["射线检测"],e:`<h2>光线投射 Raycaster</h2>
<p>这个类用于进行 raycasting（光线投射）。 光线投射用于进行鼠标拾取（在三维空间中计算出鼠标移过了什么物体）。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/base/raycaster">
<h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> raycaster</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Raycaster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> pointer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Vector2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> onPointerMove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 将鼠标位置归一化为设备坐标。x 和 y 方向的取值范围是 (-1 to +1)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    pointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">x</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">clientX</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    pointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">y</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">event</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">clientY</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">*</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> +</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 通过摄像机和鼠标位置更新射线</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    raycaster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setFromCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">pointer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 计算物体和射线的焦点</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> intersects</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> raycaster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">intersectObjects</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">children</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">let</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> &#x3C;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> intersects</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">        intersects</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">].</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">addEventListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'pointermove'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">onPointerMove</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">requestAnimationFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2>
<h2 id="origin-vector3" tabindex="-1"><a class="header-anchor" href="#origin-vector3"><span>origin : Vector3</span></a></h2>
<p>origin —— 光线投射的原点向量。</p>
<h2 id="direction-vector3" tabindex="-1"><a class="header-anchor" href="#direction-vector3"><span>direction : Vector3</span></a></h2>
<p>direction —— 向射线提供方向的方向向量，应当被标准化。</p>
<h2 id="near-float" tabindex="-1"><a class="header-anchor" href="#near-float"><span>near : Float</span></a></h2>
<p>near —— 返回的所有结果比 near 远。near 不能为负值，其默认值为 0。</p>
<h2 id="far-float" tabindex="-1"><a class="header-anchor" href="#far-float"><span>far : Float</span></a></h2>
<p>far —— 返回的所有结果都比 far 近。far 不能小于 near，其默认值为 Infinity（正无穷。）</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<h3 id="far-float-1" tabindex="-1"><a class="header-anchor" href="#far-float-1"><span>.far : Float</span></a></h3>
<p>raycaster 的远距离因数（投射远点）。这个值表明哪些对象可以基于该距离而被 raycaster 所丢弃。 这个值不应当为负，并且应当比 near 属性大。</p>
<h3 id="near-float-1" tabindex="-1"><a class="header-anchor" href="#near-float-1"><span>.near : Float</span></a></h3>
<p>raycaster 的近距离因数（投射近点）。这个值表明哪些对象可以基于该距离而被 raycaster 所丢弃。 这个值不应当为负，并且应当比 far 属性小。</p>
<h3 id="camera-camera" tabindex="-1"><a class="header-anchor" href="#camera-camera"><span>.camera : Camera</span></a></h3>
<p>当光线投射到依赖于视图的对象时，如精灵。该字段可以手动设置，也可以在调用“setfromamera”时设置。默认为空。</p>
<h3 id="layers-layers" tabindex="-1"><a class="header-anchor" href="#layers-layers"><span>.layers : Layers</span></a></h3>
<p>Used by Raycaster to selectively ignore 3D objects when performing intersection tests. The following code example ensures that only 3D objects on layer 1 will be honored by the instance of Raycaster.</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">raycaster</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">layers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">object</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">layers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">enable</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="params-object" tabindex="-1"><a class="header-anchor" href="#params-object"><span>.params : Object</span></a></h3>
<p>具有以下属性的对象：</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Line</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">threshold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> LOD</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Points</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: { </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">threshold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> Sprite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">: {}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ray-ray" tabindex="-1"><a class="header-anchor" href="#ray-ray"><span>.ray : Ray</span></a></h3>
<p>用于进行光线投射的Ray（射线）。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<h3 id="set-origin-vector3-direction-vector3-undefined" tabindex="-1"><a class="header-anchor" href="#set-origin-vector3-direction-vector3-undefined"><span>.set ( origin : Vector3, direction : Vector3 ) : undefined</span></a></h3>
<p>origin —— 光线投射的原点向量。
direction —— 为光线提供方向的标准化方向向量。</p>
<p>使用一个新的原点和方向来更新射线。</p>
<h3 id="setfromcamera-coords-vector2-camera-camera-undefined" tabindex="-1"><a class="header-anchor" href="#setfromcamera-coords-vector2-camera-camera-undefined"><span>.setFromCamera ( coords : Vector2, camera : Camera ) : undefined</span></a></h3>
<p>coords —— 在标准化设备坐标中鼠标的二维坐标 —— X分量与Y分量应当在-1到1之间。</p>
<p>camera —— 射线所来源的摄像机。</p>
<p>使用一个新的原点和方向来更新射线。</p>
<h3 id="intersectobject-object-object3d-recursive-boolean-optionaltarget-array-array" tabindex="-1"><a class="header-anchor" href="#intersectobject-object-object3d-recursive-boolean-optionaltarget-array-array"><span>.intersectObject ( object : Object3D, recursive : Boolean, optionalTarget : Array ) : Array</span></a></h3>
<p>object —— 检查与射线相交的物体。</p>
<p>recursive —— 若为true，则同时也会检查所有的后代。否则将只会检查对象本身。默认值为true。</p>
<p>optionalTarget — （可选）设置结果的目标数组。如果不设置这个值，则一个新的Array会被实例化；如果设置了这个值，则在每次调用之前必须清空这个数组（例如：array.length = 0;）。</p>
<p>检测所有在射线与物体之间，包括或不包括后代的相交部分。返回结果时，相交部分将按距离进行排序，最近的位于第一个。</p>
<p>该方法返回一个包含有交叉部分的数组:</p>
<div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[ { distance, point, face, faceIndex, object }, ... ]</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><ul>
<li>distance —— 射线投射原点和相交部分之间的距离。</li>
<li>point —— 相交部分的点（世界坐标）</li>
<li>face —— 相交的面</li>
<li>faceIndex —— 相交的面的索引</li>
<li>object —— 相交的物体</li>
<li>uv —— 相交部分的点的UV坐标。</li>
<li>uv2 —— Second set of U,V coordinates at point of intersection</li>
<li>instanceId – The index number of the instance where the ray intersects the InstancedMesh</li>
</ul>
<p>当计算这条射线是否和物体相交的时候，Raycaster将传入的对象委托给raycast方法。 这将可以让mesh对于光线投射的响应不同于lines和pointclouds。</p>
<p>请注意：对于网格来说，面必须朝向射线的原点，以便其能够被检测到。 用于交互的射线穿过面的背侧时，将不会被检测到。如果需要对物体中面的两侧进行光线投射， 你需要将material中的side属性设置为THREE.DoubleSide。</p>
<h3 id="intersectobjects-objects-array-recursive-boolean-optionaltarget-array-array" tabindex="-1"><a class="header-anchor" href="#intersectobjects-objects-array-recursive-boolean-optionaltarget-array-array"><span>.intersectObjects ( objects : Array, recursive : Boolean, optionalTarget : Array ) : Array</span></a></h3>
<p>objects —— 检测和射线相交的一组物体。</p>
<p>recursive —— 若为true，则同时也会检测所有物体的后代。否则将只会检测对象本身的相交部分。默认值为true。</p>
<p>optionalTarget —— （可选）设置结果的目标数组。如果不设置这个值，则一个新的Array会被实例化；如果设置了这个值，则在每次调用之前必须清空这个数组（例如：array.length = 0;）。</p>
<p>检测所有在射线与这些物体之间，包括或不包括后代的相交部分。返回结果时，相交部分将按距离进行排序，最近的位于第一个），相交部分和.intersectObject所返回的格式是相同的。</p>
</iframe>`,r:{minutes:3.99,words:1198},t:"光线投射Raycaster",i:"markdown",O:3,y:"a"}}],["/threejs/%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E5%9C%BA%E6%99%AF.html",{loader:()=>B(()=>import("./基本场景.html-D3Ec69MT.js"),__vite__mapDeps([192,1])),meta:{d:16782336e5,l:"2023年3月8日",c:["threejs"],g:["场景"],e:`<iframe url="https://luotainxu-demo.netlify.app/#/threejs/base">
<h2 id="创建一个场景" tabindex="-1"><a class="header-anchor" href="#创建一个场景"><span>创建一个场景</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建场景</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> scene</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建相机" tabindex="-1"><a class="header-anchor" href="#创建相机"><span>创建相机</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建相机</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> camera</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PerspectiveCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    75</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerWidth</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    1000</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建渲染器" tabindex="-1"><a class="header-anchor" href="#创建渲染器"><span>创建渲染器</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建渲染器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> renderer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">WebGLRenderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建几何体" tabindex="-1"><a class="header-anchor" href="#创建几何体"><span>创建几何体</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建几何体</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BoxGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 创建材质</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// 根据材质和几何体创建物体</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cube</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="将几何体添加到场景中" tabindex="-1"><a class="header-anchor" href="#将几何体添加到场景中"><span>将几何体添加到场景中</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cube</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div></div></div><h2 id="将场景添加到页面中" tabindex="-1"><a class="header-anchor" href="#将场景添加到页面中"><span>将场景添加到页面中</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> body</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'webgl'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">domElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="渲染" tabindex="-1"><a class="header-anchor" href="#渲染"><span>渲染</span></a></h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> renderScene</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    requestAnimationFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">renderScene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h2>
<div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    &#x3C;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"webgl"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"webgl"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">>&#x3C;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">div</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">template</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"ts"</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> setup</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    import</span><span style="--shiki-light:#E45649;--shiki-dark:#D19A66"> *</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD"> as</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75"> THREE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'three'</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">    onMounted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(() </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        init</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 创建场景</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> scene</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 创建相机</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> camera</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PerspectiveCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        75</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerWidth</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        0.1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">        1000</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">z</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 创建渲染器</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> renderer</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">WebGLRenderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">setSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">innerHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 创建几何体</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">BoxGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 创建材质</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">({ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0x00ff00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> })</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 根据材质和几何体创建物体</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cube</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">    // 添加物体</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">    scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cube</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> init</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> body</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">'webgl'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">            return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">domElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        renderScene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">    const</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> renderScene</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> () </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">=></span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">        requestAnimationFrame</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">renderScene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">        renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">></span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&#x3C;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">style</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> scoped</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> lang</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379">"scss"</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">></span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66">    .webgl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">        height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">&#x3C;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">></span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></iframe>`,r:{minutes:1.04,words:312},t:"基本场景",i:"markdown",O:1,y:"a"}}],["/threejs/%E5%9F%BA%E7%A1%80/%E6%97%B6%E9%92%9F.html",{loader:()=>B(()=>import("./时钟.html-Dpzj1AbD.js"),__vite__mapDeps([193,1])),meta:{d:16782336e5,l:"2023年3月8日",c:["threejs"],g:["Clock"],e:`<iframe url="https://luotainxu-demo.netlify.app/#/threejs/base/clock">
<h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2>
<h3 id="autostart-booean" tabindex="-1"><a class="header-anchor" href="#autostart-booean"><span>autoStart : Booean</span></a></h3>
<p>(可选) 是否要在第一次调用 .getDelta() 时自动开启时钟。默认值是 true。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<h3 id="autostart-boolean" tabindex="-1"><a class="header-anchor" href="#autostart-boolean"><span>.autoStart : Boolean</span></a></h3>
<p>如果设置为 true，则在第一次调用 .getDelta() 时开启时钟。默认值是 true。</p>
<h3 id="starttime-float" tabindex="-1"><a class="header-anchor" href="#starttime-float"><span>.startTime : Float</span></a></h3>
<p>存储时钟最后一次调用 start 方法的时间。默认值是 0。</p>
<h3 id="oldtime-float" tabindex="-1"><a class="header-anchor" href="#oldtime-float"><span>.oldTime : Float</span></a></h3>
<p>存储时钟最后一次调用 start, .getElapsedTime() 或 .getDelta() 方法的时间。默认值是 0。</p>
<h3 id="elapsedtime-float" tabindex="-1"><a class="header-anchor" href="#elapsedtime-float"><span>.elapsedTime : Float</span></a></h3>
<p>保存时钟运行的总时长。默认值是 0。</p>
<h3 id="running-boolean" tabindex="-1"><a class="header-anchor" href="#running-boolean"><span>.running : Boolean</span></a></h3>
<p>判断时钟是否在运行。默认值是 false。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<h3 id="start-undefined" tabindex="-1"><a class="header-anchor" href="#start-undefined"><span>.start () : undefined</span></a></h3>
<p>启动时钟。同时将 startTime 和 oldTime 设置为当前时间。 设置 elapsedTime 为 0，并且设置 running 为 true.</p>
<h3 id="stop-undefined" tabindex="-1"><a class="header-anchor" href="#stop-undefined"><span>.stop () : undefined</span></a></h3>
<p>停止时钟。同时将 oldTime 设置为当前时间。</p>
<h3 id="getelapsedtime-float" tabindex="-1"><a class="header-anchor" href="#getelapsedtime-float"><span>.getElapsedTime () : Float</span></a></h3>
<p>获取自时钟启动后的秒数，同时将 .oldTime 设置为当前时间。
如果 .autoStart 设置为 true 且时钟并未运行，则该方法同时启动时钟。</p>
<h3 id="getdelta-float" tabindex="-1"><a class="header-anchor" href="#getdelta-float"><span>.getDelta () : Float</span></a></h3>
<p>获取自 .oldTime 设置后到当前的秒数。 同时将 .oldTime 设置为当前时间。
如果 .autoStart 设置为 true 且时钟并未运行，则该方法同时启动时钟。</p>
</iframe>`,r:{minutes:1.03,words:310},t:"时钟",i:"markdown",O:2,y:"a"}}],["/threejs/%E6%8E%A7%E5%88%B6%E5%99%A8/%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8.html",{loader:()=>B(()=>import("./轨道控制器.html-BnrvAn7t.js"),__vite__mapDeps([194,1])),meta:{d:16782336e5,l:"2023年3月8日",c:["threejs"],g:["轨道控制器"],e:`<iframe url="https://luotainxu-demo.netlify.app/#/threejs/controls/orbitControls">
<h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2>
<h3 id="object-camera" tabindex="-1"><a class="header-anchor" href="#object-camera"><span>object : Camera</span></a></h3>
<p>（必须）将要被控制的相机。该相机不允许是其他任何对象的子级，除非该对象是场景自身。</p>
<h3 id="domelement-htmldomelement" tabindex="-1"><a class="header-anchor" href="#domelement-htmldomelement"><span>domElement : HTMLDOMElement</span></a></h3>
<p>用于事件监听的 HTML 元素。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<h3 id="autorotate-boolean" tabindex="-1"><a class="header-anchor" href="#autorotate-boolean"><span>.autoRotate : Boolean</span></a></h3>
<p>将其设为 true，以自动围绕目标旋转。</p>
<h3 id="autorotatespeed-float" tabindex="-1"><a class="header-anchor" href="#autorotatespeed-float"><span>.autoRotateSpeed : Float</span></a></h3>
<p>当.autoRotate 为 true 时，围绕目标旋转的速度将有多快，默认值为 2.0，相当于在 60fps 时每旋转一周需要 30 秒。</p>
<h3 id="dampingfactor-float" tabindex="-1"><a class="header-anchor" href="#dampingfactor-float"><span>.dampingFactor : Float</span></a></h3>
<p>当.enableDamping 设置为 true 的时候，阻尼惯性有多大。 默认值为 0.05.</p>
<h3 id="domelement-htmldomelement-1" tabindex="-1"><a class="header-anchor" href="#domelement-htmldomelement-1"><span>.domElement : HTMLDOMElement</span></a></h3>
<p>该 HTMLDOMElement 用于监听鼠标/触摸事件，该属性必须在构造函数中传入。在此处改变它将不会设置新的事件监听。</p>
<h3 id="enabled-boolean" tabindex="-1"><a class="header-anchor" href="#enabled-boolean"><span>.enabled : Boolean</span></a></h3>
<p>当设置为 false 时，控制器将不会响应用户的操作。默认值为 true。</p>
<h3 id="enabledamping-boolean" tabindex="-1"><a class="header-anchor" href="#enabledamping-boolean"><span>.enableDamping : Boolean</span></a></h3>
<p>将其设置为 true 以启用阻尼（惯性），这将给控制器带来重量感。默认值为 false。</p>
<h3 id="enablepan-boolean" tabindex="-1"><a class="header-anchor" href="#enablepan-boolean"><span>.enablePan : Boolean</span></a></h3>
<p>启用或禁用摄像机平移，默认为 true。</p>
<h3 id="enablerotate-boolean" tabindex="-1"><a class="header-anchor" href="#enablerotate-boolean"><span>.enableRotate : Boolean</span></a></h3>
<p>启用或禁用摄像机水平或垂直旋转。默认值为 true。
请注意，可以通过将 polar angle 或者 azimuth angle 的 min 和 max 设置为相同的值来禁用单个轴， 这将使得水平旋转或垂直旋转固定为所设置的值。</p>
<h3 id="enablezoom-boolean" tabindex="-1"><a class="header-anchor" href="#enablezoom-boolean"><span>.enableZoom : Boolean</span></a></h3>
<p>启用或禁用摄像机的缩放。</p>
<h3 id="keypanspeed-float" tabindex="-1"><a class="header-anchor" href="#keypanspeed-float"><span>.keyPanSpeed : Float</span></a></h3>
<p>当使用键盘按键的时候，相机平移的速度有多快。默认值为每次按下按键时平移 7 像素。</p>
<h3 id="keys-object" tabindex="-1"><a class="header-anchor" href="#keys-object"><span>.keys : Object</span></a></h3>
<p>这一对象包含了用于控制相机平移的按键代码的引用。默认值为 4 个箭头（方向）键。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">controls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">keys</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    LEFT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ArrowLeft'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">//left arrow</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    UP</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ArrowUp'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// up arrow</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    RIGHT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ArrowRight'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// right arrow</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    BOTTOM</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379"> 'ArrowDown'</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// down arrow</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maxazimuthangle-float" tabindex="-1"><a class="header-anchor" href="#maxazimuthangle-float"><span>.maxAzimuthAngle : Float</span></a></h3>
<p>你能够水平旋转的角度上限。如果设置，其有效值范围为[-2 * Math.PI，2 * Math.PI]，且旋转角度的上限和下限差值小于 2 * Math.PI。默认值为无穷大</p>
<h3 id="maxdistance-float" tabindex="-1"><a class="header-anchor" href="#maxdistance-float"><span>.maxDistance : Float</span></a></h3>
<p>你能够将相机向外移动多少（仅适用于 PerspectiveCamera），其默认值为 Infinity。</p>
<h3 id="maxpolarangle-float" tabindex="-1"><a class="header-anchor" href="#maxpolarangle-float"><span>.maxPolarAngle : Float</span></a></h3>
<p>你能够垂直旋转的角度的上限，范围是 0 到 Math.PI，其默认值为 Math.PI。</p>
<h3 id="maxzoom-float" tabindex="-1"><a class="header-anchor" href="#maxzoom-float"><span>.maxZoom : Float</span></a></h3>
<p>你能够将相机缩小多少（仅适用于 OrthographicCamera），其默认值为 Infinity。</p>
<h3 id="minazimuthangle-float" tabindex="-1"><a class="header-anchor" href="#minazimuthangle-float"><span>.minAzimuthAngle : Float</span></a></h3>
<p>你能够水平旋转的角度下限。如果设置，其有效值范围为[-2 * Math.PI，2 * Math.PI]，且旋转角度的上限和下限差值小于 2 * Math.PI。默认值为无穷大。</p>
<h3 id="mindistance-float" tabindex="-1"><a class="header-anchor" href="#mindistance-float"><span>.minDistance : Float</span></a></h3>
<p>你能够将相机向内移动多少（仅适用于 PerspectiveCamera），其默认值为 0。</p>
<h3 id="minpolarangle-float" tabindex="-1"><a class="header-anchor" href="#minpolarangle-float"><span>.minPolarAngle : Float</span></a></h3>
<p>你能够垂直旋转的角度的下限，范围是 0 到 Math.PI，其默认值为 0。</p>
<h3 id="minzoom-float" tabindex="-1"><a class="header-anchor" href="#minzoom-float"><span>.minZoom : Float</span></a></h3>
<p>你能够将相机放大多少（仅适用于 OrthographicCamera），其默认值为 0。</p>
<h3 id="mousebuttons-object" tabindex="-1"><a class="header-anchor" href="#mousebuttons-object"><span>.mouseButtons : Object</span></a></h3>
<p>该对象包含由控件所使用的鼠标操作的引用。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">controls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">mouseButtons</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    LEFT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MOUSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">ROTATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    MIDDLE</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MOUSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">DOLLY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    RIGHT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">MOUSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">PAN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-camera-1" tabindex="-1"><a class="header-anchor" href="#object-camera-1"><span>.object : Camera</span></a></h3>
<p>正被控制的摄像机。</p>
<h3 id="panspeed-float" tabindex="-1"><a class="header-anchor" href="#panspeed-float"><span>.panSpeed : Float</span></a></h3>
<p>位移的速度，其默认值为 1。</p>
<h3 id="position0-vector3" tabindex="-1"><a class="header-anchor" href="#position0-vector3"><span>.position0 : Vector3</span></a></h3>
<p>由.saveState 和.reset 方法在内部使用。</p>
<h3 id="rotatespeed-float" tabindex="-1"><a class="header-anchor" href="#rotatespeed-float"><span>.rotateSpeed : Float</span></a></h3>
<p>旋转的速度，其默认值为 1。</p>
<h3 id="screenspacepanning-boolean" tabindex="-1"><a class="header-anchor" href="#screenspacepanning-boolean"><span>.screenSpacePanning : Boolean</span></a></h3>
<p>定义当平移的时候摄像机的位置将如何移动。如果为 true，摄像机将在屏幕空间内平移。 否则，摄像机将在与摄像机向上方向垂直的平面中平移。当使用 OrbitControls 时， 默认值为 true；当使用 MapControls 时，默认值为 false。</p>
<h3 id="target0-vector3" tabindex="-1"><a class="header-anchor" href="#target0-vector3"><span>.target0 : Vector3</span></a></h3>
<p>由.saveState 和.reset 方法在内部使用。</p>
<h3 id="target-vector3" tabindex="-1"><a class="header-anchor" href="#target-vector3"><span>.target : Vector3</span></a></h3>
<p>控制器的焦点，.object 的轨道围绕它运行。 它可以在任何时候被手动更新，以更改控制器的焦点。</p>
<h3 id="touches-object" tabindex="-1"><a class="header-anchor" href="#touches-object"><span>.touches : Object</span></a></h3>
<p>该对象包含由控件所使用的触摸操作的引用。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre v-pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">controls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">touches</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    ONE</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TOUCH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">ROTATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">    TWO</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">TOUCH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75">DOLLY_PAN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zoom0-float" tabindex="-1"><a class="header-anchor" href="#zoom0-float"><span>.zoom0 : Float</span></a></h3>
<p>由.saveState和.reset方法在内部使用。</p>
<h3 id="zoomspeed-float" tabindex="-1"><a class="header-anchor" href="#zoomspeed-float"><span>.zoomSpeed : Float</span></a></h3>
<p>摄像机缩放的速度，其默认值为1。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<h3 id="dispose-undefined" tabindex="-1"><a class="header-anchor" href="#dispose-undefined"><span>.dispose () : undefined</span></a></h3>
<p>移除所有的事件监听。</p>
<h3 id="getazimuthalangle-radians" tabindex="-1"><a class="header-anchor" href="#getazimuthalangle-radians"><span>.getAzimuthalAngle () : radians</span></a></h3>
<p>获得当前的水平旋转，单位为弧度。</p>
<h3 id="getpolarangle-radians" tabindex="-1"><a class="header-anchor" href="#getpolarangle-radians"><span>.getPolarAngle () : radians</span></a></h3>
<p>获得当前的垂直旋转，单位为弧度。</p>
<h3 id="getdistance-float" tabindex="-1"><a class="header-anchor" href="#getdistance-float"><span>.getDistance () : Float</span></a></h3>
<p>返回从相机到目标的距离。</p>
<h3 id="listentokeyevents-domelement-htmldomelement-undefined" tabindex="-1"><a class="header-anchor" href="#listentokeyevents-domelement-htmldomelement-undefined"><span>.listenToKeyEvents ( domElement : HTMLDOMElement ) : undefined</span></a></h3>
<p>为指定的DOM元素添加按键监听。推荐将window作为指定的DOM元素。</p>
<h3 id="reset-undefined" tabindex="-1"><a class="header-anchor" href="#reset-undefined"><span>.reset () : undefined</span></a></h3>
<p>将控制器重置为上次调用.saveState时的状态，或者初始状态。</p>
<h3 id="savestate-undefined" tabindex="-1"><a class="header-anchor" href="#savestate-undefined"><span>.saveState () : undefined</span></a></h3>
<p>保存当前控制器的状态。这一状态可在之后由.reset所恢复。</p>
<h3 id="stoplistentokeyevents-undefined" tabindex="-1"><a class="header-anchor" href="#stoplistentokeyevents-undefined"><span>.stopListenToKeyEvents () : undefined</span></a></h3>
<p>删除之前用.listenToKeyEvents()定义的键事件监听器</p>
<h3 id="update-boolean" tabindex="-1"><a class="header-anchor" href="#update-boolean"><span>.update () : Boolean</span></a></h3>
<p>更新控制器。必须在摄像机的变换发生任何手动改变后调用， 或如果.autoRotate或.enableDamping被设置时，在update循环里调用。</p>
</iframe>`,r:{minutes:3.95,words:1184},t:"OrbitControls（轨道控制器）",i:"markdown",O:1,y:"a"}}],["/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%91%84%E5%83%8F%E6%9C%BA.html",{loader:()=>B(()=>import("./摄像机.html-Ck6rAQzR.js"),__vite__mapDeps([195,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["摄像机"],e:`<h2>构造函数</h2>
<h3>Camera()</h3>
<p>创建一个新的Camera（摄像机）。注意：这个类并不是被直接调用的；你所想要的或许是一个 PerspectiveCamera（透视摄像机）或者 OrthographicCamera（正交摄像机）。</p>
<h2>属性</h2>
<p>共有属性请参见其基类Object3D</p>
<h3>.isCamera : Boolean</h3>
<p>Read-only标志，用于检查给定对象是否为Camera类型。</p>
<h3>.layers : Layers</h3>
<p>摄像机是一个layers的成员. 这是一个从Object3D继承而来的属性。</p>`,r:{minutes:1.11,words:334},t:"Camera（摄像机）",i:"markdown",O:1,y:"a"}}],["/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%91%84%E5%83%8F%E6%9C%BA%E9%98%B5%E5%88%97.html",{loader:()=>B(()=>import("./摄像机阵列.html-Dju-vSul.js"),__vite__mapDeps([196,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["摄像机"],e:`<h2>ArrayCamera</h2>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/camera/arrayCamera">
<h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2>
<h3 id="arraycamera-array-array" tabindex="-1"><a class="header-anchor" href="#arraycamera-array-array"><span>ArrayCamera( array : Array )</span></a></h3>
<p>一个包含多个摄像机的数组。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E9%80%8F%E8%A7%86%E7%9B%B8%E6%9C%BA.html">PerspectiveCamera</RouteLink>。</p>
<h3 id="cameras-array" tabindex="-1"><a class="header-anchor" href="#cameras-array"><span>.cameras : Array</span></a></h3>
<p>摄像机数组。</p>
<h3 id="isarraycamera-boolean" tabindex="-1"><a class="header-anchor" href="#isarraycamera-boolean"><span>.isArrayCamera : Boolean</span></a></h3>
<p>Read-only flag to check if a given object is of type ArrayCamera.</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E9%80%8F%E8%A7%86%E7%9B%B8%E6%9C%BA.html">PerspectiveCamera</RouteLink>。</p>
</iframe>`,r:{minutes:.39,words:116},t:"ArrayCamera（摄像机阵列）",i:"markdown",O:6,y:"a"}}],["/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%AD%A3%E4%BA%A4%E7%9B%B8%E6%9C%BA.html",{loader:()=>B(()=>import("./正交相机.html-BRdVlu1m.js"),__vite__mapDeps([197,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["摄像机"],e:`<h2>PerspectiveCamera</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> camera</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">OrthographicCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2,words:600},t:"OrthographicCamera（正交相机）",i:"markdown",O:3,y:"a"}}],["/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E7%AB%8B%E4%BD%93%E7%9B%B8%E6%9C%BA.html",{loader:()=>B(()=>import("./立体相机.html-hMhOtamP.js"),__vite__mapDeps([198,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["摄像机"],e:`<h2>StereoCamera</h2>
<h2>构造器</h2>
<h3>StereoCamera()</h3>
<h2>属性</h2>
<h3>.aspect : Float</h3>
<p>默认值是1.</p>
<h3>.eyeSep : Float</h3>
<p>默认值是0.064.</p>
<h3>.cameraL : PerspectiveCamera</h3>
<p>左摄像机，它被加入到了layer 1中 —— 需要被左摄像机渲染的物体也应当要加入到这一层中。</p>
<h3>.cameraR : PerspectiveCamera</h3>
<p>右摄像机，它被加入到了layer 2中 —— 需要被右摄像机渲染的物体也应当要加入到这一层中。</p>`,r:{minutes:.46,words:139},t:"StereoCamera（立体相机）",i:"markdown",O:5,y:"a"}}],["/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E7%AB%8B%E6%96%B9%E7%9B%B8%E6%9C%BA.html",{loader:()=>B(()=>import("./立方相机.html-D9sHlsKv.js"),__vite__mapDeps([199,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["摄像机"],e:`<h2>CubeCamera</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Create cube render target</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cubeRenderTarget</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">WebGLCubeRenderTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">128</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">generateMipmaps</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">minFilter</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">LinearMipmapLinearFilter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Create cube camera</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> cubeCamera</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">CubeCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cubeRenderTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">cubeCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Create car</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> chromeMaterial</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">MeshLambertMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 0xffffff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">envMap</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B"> cubeRenderTarget</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">texture</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> } );</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> car</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">carGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">chromeMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Update the render target cube</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">visible</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cubeCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">copy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">cubeCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">update</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic">// Render the scene</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">car</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">visible</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">renderer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">render</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.77,words:232},t:"CubeCamera（立方相机）",i:"markdown",O:4,y:"a"}}],["/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E9%80%8F%E8%A7%86%E7%9B%B8%E6%9C%BA.html",{loader:()=>B(()=>import("./透视相机.html-BQkY4IDx.js"),__vite__mapDeps([200,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["摄像机"],e:`<h2>PerspectiveCamera</h2>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> camera</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PerspectiveCamera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">45</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> /</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.74,words:821},t:"PerspectiveCamera（透视相机）",i:"markdown",O:2,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/Lambert%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./Lambert网格材质.html-BMnX8dHf.js"),__vite__mapDeps([201,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshLambertMaterial</h2>
<p>一种非光泽表面的材质，没有镜面高光。</p>
<p>该材质使用基于非物理的Lambertian模型来计算反射率。 这可以很好地模拟一些表面（例如未经处理的木材或石材），但不能模拟具有镜面高光的光泽表面（例如涂漆木材）。</p>
<p>由于反射率和光照模型的简单性，MeshPhongMaterial，MeshStandardMaterial或者MeshPhysicalMaterial 上使用这种材质时会以一些图形精度为代价，得到更高的性能。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/meshLambertMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<p>属性color例外，其可以作为十六进制字符串传递，默认情况下为 0xffffff（白色），内部调用Color.set(color)。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
<h3 id="alphamap-texture" tabindex="-1"><a class="header-anchor" href="#alphamap-texture"><span>.alphaMap : Texture</span></a></h3>
<p>alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null。</p>
<p>仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效。</p>
<h3 id="aomap-texture" tabindex="-1"><a class="header-anchor" href="#aomap-texture"><span>.aoMap : Texture</span></a></h3>
<p>该纹理的红色通道用作环境遮挡贴图。默认值为null。aoMap需要第二组UV。</p>
<h3 id="aomapintensity-float" tabindex="-1"><a class="header-anchor" href="#aomapintensity-float"><span>.aoMapIntensity : Float</span></a></h3>
<p>环境遮挡效果的强度。默认值为1。零是不遮挡效果。</p>
<h3 id="bumpmap-texture" tabindex="-1"><a class="header-anchor" href="#bumpmap-texture"><span>.bumpMap : Texture</span></a></h3>
<p>用于创建凹凸贴图的纹理。黑色和白色值映射到与光照相关的感知深度。凹凸实际上不会影响对象的几何形状，只影响光照。如果定义了法线贴图，则将忽略该贴图。</p>
<h3 id="bumpscale-float" tabindex="-1"><a class="header-anchor" href="#bumpscale-float"><span>.bumpScale : Float</span></a></h3>
<p>凹凸贴图会对材质产生多大影响。典型范围是0-1。默认值为1。</p>
<h3 id="color-color" tabindex="-1"><a class="header-anchor" href="#color-color"><span>.color : Color</span></a></h3>
<p>材质的颜色(Color)，默认值为白色 (0xffffff)。</p>
<h3 id="combine-integer" tabindex="-1"><a class="header-anchor" href="#combine-integer"><span>.combine : Integer</span></a></h3>
<p>如何将表面颜色的结果与环境贴图（如果有）结合起来。</p>
<p>选项为THREE.MultiplyOperation（默认值），THREE.MixOperation， THREE.AddOperation。如果选择多个，则使用.reflectivity在两种颜色之间进行混合。</p>
<h3 id="displacementmap-texture" tabindex="-1"><a class="header-anchor" href="#displacementmap-texture"><span>.displacementMap : Texture</span></a></h3>
<p>位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象， 以及充当真实的几何体。位移纹理是指：网格的所有顶点被映射为图像中每个像素的值（白色是最高的），并且被重定位。</p>
<h3 id="displacementscale-float" tabindex="-1"><a class="header-anchor" href="#displacementscale-float"><span>.displacementScale : Float</span></a></h3>
<p>位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为1。</p>
<h3 id="displacementbias-float" tabindex="-1"><a class="header-anchor" href="#displacementbias-float"><span>.displacementBias : Float</span></a></h3>
<p>位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为0。</p>
<h3 id="emissive-color" tabindex="-1"><a class="header-anchor" href="#emissive-color"><span>.emissive : Color</span></a></h3>
<p>材质的放射（光）颜色，基本上是不受其他光照影响的固有颜色。默认为黑色。</p>
<h3 id="emissivemap-texture" tabindex="-1"><a class="header-anchor" href="#emissivemap-texture"><span>.emissiveMap : Texture</span></a></h3>
<p>设置放射（发光）贴图。默认值为null。放射贴图颜色由放射颜色和强度所调节。 如果你有一个放射贴图，请务必将放射颜色设置为黑色以外的其他颜色。</p>
<h3 id="emissiveintensity-float" tabindex="-1"><a class="header-anchor" href="#emissiveintensity-float"><span>.emissiveIntensity : Float</span></a></h3>
<p>放射光强度。调节发光颜色。默认为1。</p>
<h3 id="envmap-texture" tabindex="-1"><a class="header-anchor" href="#envmap-texture"><span>.envMap : Texture</span></a></h3>
<p>环境贴图。默认值为null。</p>
<h3 id="flatshading-boolean" tabindex="-1"><a class="header-anchor" href="#flatshading-boolean"><span>.flatShading : Boolean</span></a></h3>
<p>定义材质是否使用平面着色进行渲染。默认值为false。</p>
<h3 id="fog-boolean" tabindex="-1"><a class="header-anchor" href="#fog-boolean"><span>.fog : Boolean</span></a></h3>
<p>材质是否受雾影响。默认为true。</p>
<h3 id="lightmap-texture" tabindex="-1"><a class="header-anchor" href="#lightmap-texture"><span>.lightMap : Texture</span></a></h3>
<p>光照贴图。默认值为null。lightMap需要第二组UV。</p>
<h3 id="lightmapintensity-float" tabindex="-1"><a class="header-anchor" href="#lightmapintensity-float"><span>.lightMapIntensity : Float</span></a></h3>
<p>烘焙光的强度。默认值为1。</p>
<h3 id="map-texture" tabindex="-1"><a class="header-anchor" href="#map-texture"><span>.map : Texture</span></a></h3>
<p>颜色贴图。可以选择包括一个alpha通道，通常与.transparent 或.alphaTest。默认为null。</p>
<h3 id="normalmap-texture" tabindex="-1"><a class="header-anchor" href="#normalmap-texture"><span>.normalMap : Texture</span></a></h3>
<p>用于创建法线贴图的纹理。RGB值会影响每个像素片段的曲面法线，并更改颜色照亮的方式。法线贴图不会改变曲面的实际形状，只会改变光照。 In case the material has a normal map authored using the left handed convention, the y component of normalScale should be negated to compensate for the different handedness.</p>
<h3 id="normalmaptype-integer" tabindex="-1"><a class="header-anchor" href="#normalmaptype-integer"><span>.normalMapType : Integer</span></a></h3>
<p>法线贴图的类型。</p>
<p>选项为THREE.TangentSpaceNormalMap（默认）和THREE.ObjectSpaceNormalMap。</p>
<h3 id="normalscale-vector2" tabindex="-1"><a class="header-anchor" href="#normalscale-vector2"><span>.normalScale : Vector2</span></a></h3>
<p>法线贴图对材质的影响程度。典型范围是0-1。默认值是Vector2设置为（1,1）。</p>
<h3 id="reflectivity-float" tabindex="-1"><a class="header-anchor" href="#reflectivity-float"><span>.reflectivity : Float</span></a></h3>
<p>环境贴图对表面的影响程度; 见.combine。默认值为1，有效范围介于0（无反射）和1（完全反射）之间。</p>
<h3 id="refractionratio-float" tabindex="-1"><a class="header-anchor" href="#refractionratio-float"><span>.refractionRatio : Float</span></a></h3>
<p>空气的折射率（IOR）（约为1）除以材质的折射率。它与环境映射模式THREE.CubeRefractionMapping 和THREE.EquirectangularRefractionMapping一起使用。 The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of the material. It is used with environment mapping mode THREE.CubeRefractionMapping. 折射率不应超过1。默认值为0.98。</p>
<h3 id="specularmap-texture" tabindex="-1"><a class="header-anchor" href="#specularmap-texture"><span>.specularMap : Texture</span></a></h3>
<p>材质使用的高光贴图。默认值为null。</p>
<h3 id="wireframe-boolean" tabindex="-1"><a class="header-anchor" href="#wireframe-boolean"><span>.wireframe : Boolean</span></a></h3>
<p>将几何体渲染为线框。默认值为false（即渲染为平面多边形）。</p>
<h3 id="wireframelinecap-string" tabindex="-1"><a class="header-anchor" href="#wireframelinecap-string"><span>.wireframeLinecap : String</span></a></h3>
<p>定义线两端的外观。可选值为 'butt'，'round' 和 'square'。默认为'round'。</p>
<p>该属性对应2D Canvas lineJoin属性， 并且会被WebGL渲染器忽略。</p>
<h3 id="wireframelinejoin-string" tabindex="-1"><a class="header-anchor" href="#wireframelinejoin-string"><span>.wireframeLinejoin : String</span></a></h3>
<p>定义线连接节点的样式。可选值为 'round', 'bevel' 和 'miter'。默认值为 'round'。</p>
<p>该属性对应2D Canvas lineJoin属性， 并且会被WebGL渲染器忽略。</p>
<h3 id="wireframelinewidth-float" tabindex="-1"><a class="header-anchor" href="#wireframelinewidth-float"><span>.wireframeLinewidth : Float</span></a></h3>
<p>控制线框宽度。默认值为1。</p>
<p>由于OpenGL Core Profile与 大多数平台上WebGL渲染器的限制，无论如何设置该值，线宽始终为1。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:4.84,words:1452},t:"MeshLambertMaterial(Lambert网格材质)",i:"markdown",O:6,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/MeshDistanceMaterial.html",{loader:()=>B(()=>import("./MeshDistanceMaterial.html-oy0bcM3H.js"),__vite__mapDeps([202,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshDistanceMaterial</h2>
<p>MeshDistanceMaterial 在内部用于使用PointLight来实现阴影映射。 也可以用于通过将MeshDistanceMaterial实例指定给Object3D.customDistanceMaterial，来自定义物体阴影投射。 下列示例演示了这一方法，以确保物体的透明部分不投射阴影。</p>
<h2>构造器</h2>
<h3>parameters : Object</h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>`,r:{minutes:1.86,words:557},t:"MeshDistanceMaterial",i:"markdown",O:5,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/Phong%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./Phong网格材质.html-BhuAEJYx.js"),__vite__mapDeps([203,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshPhongMaterial</h2>
<p>一种用于具有镜面高光的光泽表面的材质。</p>
<p>该材质使用非物理的Blinn-Phong模型来计算反射率。 与MeshLambertMaterial中使用的Lambertian模型不同，该材质可以模拟具有镜面高光的光泽表面（例如涂漆木材）。</p>
<p>在MeshStandardMaterial或MeshPhysicalMaterial上使用此材质时，性能通常会更高 ，但会牺牲一些图形精度。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/meshPhongMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<p>属性color例外，其可以作为十六进制字符串传递，默认情况下为 0xffffff（白色），内部调用Color.set(color)。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
<h3 id="alphamap-texture" tabindex="-1"><a class="header-anchor" href="#alphamap-texture"><span>.alphaMap : Texture</span></a></h3>
<p>alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null。</p>
<p>仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效。</p>
<h3 id="aomap-texture" tabindex="-1"><a class="header-anchor" href="#aomap-texture"><span>.aoMap : Texture</span></a></h3>
<p>该纹理的红色通道用作环境遮挡贴图。默认值为null。aoMap需要第二组UV。</p>
<h3 id="aomapintensity-float" tabindex="-1"><a class="header-anchor" href="#aomapintensity-float"><span>.aoMapIntensity : Float</span></a></h3>
<p>环境遮挡效果的强度。默认值为1。零是不遮挡效果。</p>
<h3 id="bumpmap-texture" tabindex="-1"><a class="header-anchor" href="#bumpmap-texture"><span>.bumpMap : Texture</span></a></h3>
<p>用于创建凹凸贴图的纹理。黑色和白色值映射到与光照相关的感知深度。凹凸实际上不会影响对象的几何形状，只影响光照。如果定义了法线贴图，则将忽略该贴图。</p>
<h3 id="bumpscale-float" tabindex="-1"><a class="header-anchor" href="#bumpscale-float"><span>.bumpScale : Float</span></a></h3>
<p>凹凸贴图会对材质产生多大影响。典型范围是0-1。默认值为1。</p>
<h3 id="color-color" tabindex="-1"><a class="header-anchor" href="#color-color"><span>.color : Color</span></a></h3>
<p>材质的颜色(Color)，默认值为白色 (0xffffff)。</p>
<h3 id="combine-integer" tabindex="-1"><a class="header-anchor" href="#combine-integer"><span>.combine : Integer</span></a></h3>
<p>如何将表面颜色的结果与环境贴图（如果有）结合起来。</p>
<p>选项为THREE.MultiplyOperation（默认值），THREE.MixOperation， THREE.AddOperation。如果选择多个，则使用.reflectivity在两种颜色之间进行混合。</p>
<h3 id="displacementmap-texture" tabindex="-1"><a class="header-anchor" href="#displacementmap-texture"><span>.displacementMap : Texture</span></a></h3>
<p>位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象， 以及充当真实的几何体。位移纹理是指：网格的所有顶点被映射为图像中每个像素的值（白色是最高的），并且被重定位。</p>
<h3 id="displacementscale-float" tabindex="-1"><a class="header-anchor" href="#displacementscale-float"><span>.displacementScale : Float</span></a></h3>
<p>位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为1。</p>
<h3 id="displacementbias-float" tabindex="-1"><a class="header-anchor" href="#displacementbias-float"><span>.displacementBias : Float</span></a></h3>
<p>位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为0。</p>
<h3 id="emissive-color" tabindex="-1"><a class="header-anchor" href="#emissive-color"><span>.emissive : Color</span></a></h3>
<p>材质的放射（光）颜色，基本上是不受其他光照影响的固有颜色。默认为黑色。</p>
<h3 id="emissivemap-texture" tabindex="-1"><a class="header-anchor" href="#emissivemap-texture"><span>.emissiveMap : Texture</span></a></h3>
<p>设置放射（发光）贴图。默认值为null。放射贴图颜色由放射颜色和强度所调节。 如果你有一个放射贴图，请务必将放射颜色设置为黑色以外的其他颜色。</p>
<h3 id="emissiveintensity-float" tabindex="-1"><a class="header-anchor" href="#emissiveintensity-float"><span>.emissiveIntensity : Float</span></a></h3>
<p>放射光强度。调节发光颜色。默认为1。</p>
<h3 id="envmap-texture" tabindex="-1"><a class="header-anchor" href="#envmap-texture"><span>.envMap : Texture</span></a></h3>
<p>环境贴图。默认值为null。</p>
<h3 id="flatshading-boolean" tabindex="-1"><a class="header-anchor" href="#flatshading-boolean"><span>.flatShading : Boolean</span></a></h3>
<p>定义材质是否使用平面着色进行渲染。默认值为false。</p>
<h3 id="fog-boolean" tabindex="-1"><a class="header-anchor" href="#fog-boolean"><span>.fog : Boolean</span></a></h3>
<p>材质是否受雾影响。默认为true。</p>
<h3 id="lightmap-texture" tabindex="-1"><a class="header-anchor" href="#lightmap-texture"><span>.lightMap : Texture</span></a></h3>
<p>光照贴图。默认值为null。lightMap需要第二组UV。</p>
<h3 id="lightmapintensity-float" tabindex="-1"><a class="header-anchor" href="#lightmapintensity-float"><span>.lightMapIntensity : Float</span></a></h3>
<p>烘焙光的强度。默认值为1。</p>
<h3 id="map-texture" tabindex="-1"><a class="header-anchor" href="#map-texture"><span>.map : Texture</span></a></h3>
<p>颜色贴图。可以选择包括一个alpha通道，通常与.transparent 或.alphaTest。默认为null。 纹理贴图颜色由漫反射颜色.color调节。</p>
<h3 id="normalmap-texture" tabindex="-1"><a class="header-anchor" href="#normalmap-texture"><span>.normalMap : Texture</span></a></h3>
<p>用于创建法线贴图的纹理。RGB值会影响每个像素片段的曲面法线，并更改颜色照亮的方式。法线贴图不会改变曲面的实际形状，只会改变光照。 In case the material has a normal map authored using the left handed convention, the y component of normalScale should be negated to compensate for the different handedness.</p>
<h3 id="normalmaptype-integer" tabindex="-1"><a class="header-anchor" href="#normalmaptype-integer"><span>.normalMapType : Integer</span></a></h3>
<p>法线贴图的类型。</p>
<p>选项为THREE.TangentSpaceNormalMap（默认）和THREE.ObjectSpaceNormalMap。</p>
<h3 id="normalscale-vector2" tabindex="-1"><a class="header-anchor" href="#normalscale-vector2"><span>.normalScale : Vector2</span></a></h3>
<p>法线贴图对材质的影响程度。典型范围是0-1。默认值是Vector2设置为（1,1）。</p>
<h3 id="reflectivity-float" tabindex="-1"><a class="header-anchor" href="#reflectivity-float"><span>.reflectivity : Float</span></a></h3>
<p>环境贴图对表面的影响程度; 见.combine。默认值为1，有效范围介于0（无反射）和1（完全反射）之间。</p>
<h3 id="refractionratio-float" tabindex="-1"><a class="header-anchor" href="#refractionratio-float"><span>.refractionRatio : Float</span></a></h3>
<p>空气的折射率（IOR）（约为1）除以材质的折射率。它与环境映射模式THREE.CubeRefractionMapping 和THREE.EquirectangularRefractionMapping一起使用。 The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of the material. It is used with environment mapping mode THREE.CubeRefractionMapping. 折射率不应超过1。默认值为0.98。</p>
<h3 id="shininess-float" tabindex="-1"><a class="header-anchor" href="#shininess-float"><span>.shininess : Float</span></a></h3>
<p>.specular高亮的程度，越高的值越闪亮。默认值为 30。</p>
<h3 id="specular-color" tabindex="-1"><a class="header-anchor" href="#specular-color"><span>.specular : Color</span></a></h3>
<p>材质的高光颜色。默认值为0x111111（深灰色）的颜色Color。</p>
<p>这定义了材质的光泽度和光泽的颜色。</p>
<h3 id="specularmap-texture" tabindex="-1"><a class="header-anchor" href="#specularmap-texture"><span>.specularMap : Texture</span></a></h3>
<p>镜面反射贴图值会影响镜面高光以及环境贴图对表面的影响程度。默认值为null。</p>
<h3 id="wireframe-boolean" tabindex="-1"><a class="header-anchor" href="#wireframe-boolean"><span>.wireframe : Boolean</span></a></h3>
<p>将几何体渲染为线框。默认值为false（即渲染为平面多边形）。</p>
<h3 id="wireframelinecap-string" tabindex="-1"><a class="header-anchor" href="#wireframelinecap-string"><span>.wireframeLinecap : String</span></a></h3>
<p>定义线两端的外观。可选值为 'butt'，'round' 和 'square'。默认为'round'。</p>
<p>该属性对应2D Canvas lineJoin属性， 并且会被WebGL渲染器忽略。</p>
<h3 id="wireframelinejoin-string" tabindex="-1"><a class="header-anchor" href="#wireframelinejoin-string"><span>.wireframeLinejoin : String</span></a></h3>
<p>定义线连接节点的样式。可选值为 'round', 'bevel' 和 'miter'。默认值为 'round'。</p>
<p>该属性对应2D Canvas lineJoin属性， 并且会被WebGL渲染器忽略。</p>
<h3 id="wireframelinewidth-float" tabindex="-1"><a class="header-anchor" href="#wireframelinewidth-float"><span>.wireframeLinewidth : Float</span></a></h3>
<p>控制线框宽度。默认值为1。</p>
<p>由于OpenGL Core Profile与 大多数平台上WebGL渲染器的限制，无论如何设置该值，线宽始终为1。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:5.05,words:1516},t:"MeshPhongMaterial(Phong网格材质)",i:"markdown",O:9,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E5%8E%9F%E5%A7%8B%E7%9D%80%E8%89%B2%E5%99%A8%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./原始着色器材质.html-CjR1ZbdT.js"),__vite__mapDeps([204,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>RawShaderMaterial</h2>
<p>此类的工作方式与ShaderMaterial类似，不同之处在于内置的uniforms和attributes的定义不会自动添加到GLSL shader代码中。</p>
<h2>构造器</h2>
<h3>parameters : Object</h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。 材质的任何属性都可以从此处传入(包括从Material继承的任何属性)。</p>
<h2>属性</h2>
<p>共有属性请参见其基类<a href="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html" target="_blank">Material</a>和<a href="/threejs/%E6%9D%90%E8%B4%A8/%E7%9D%80%E8%89%B2%E5%99%A8%E6%9D%90%E8%B4%A8.html" target="_blank">ShaderMaterial</a>。</p>`,r:{minutes:.6,words:179},t:"RawShaderMaterial(原始着色器材质)",i:"markdown",O:13,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%9D%A1%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./基础线条材质.html-BiGj4gSC.js"),__vite__mapDeps([205,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>LineBasicMaterial</h2>
<p>一种用于绘制线框样式几何体的材质</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/lineBasicMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<p>属性color例外，其可以作为十六进制字符串传递，默认情况下为 0xffffff（白色），内部调用Color.set(color)</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
<h3 id="color-color" tabindex="-1"><a class="header-anchor" href="#color-color"><span>.color : Color</span></a></h3>
<p>材质的颜色(Color)，默认值为白色 (0xffffff)</p>
<h3 id="fog-boolean" tabindex="-1"><a class="header-anchor" href="#fog-boolean"><span>.fog : Boolean</span></a></h3>
<p>材质是否受雾影响。默认为true</p>
<h3 id="linewidth-float" tabindex="-1"><a class="header-anchor" href="#linewidth-float"><span>.linewidth : Float</span></a></h3>
<p>控制线宽。默认值为 1。</p>
<p>由于OpenGL Core Profile与 大多数平台上WebGL渲染器的限制，无论如何设置该值，线宽始终为1</p>
<h3 id="linecap-string" tabindex="-1"><a class="header-anchor" href="#linecap-string"><span>.linecap : String</span></a></h3>
<p>定义线两端的样式。可选值为 'butt', 'round' 和 'square'。默认值为 'round'</p>
<p>该属性对应2D Canvas lineCap属性， 并且会被WebGL渲染器忽略</p>
<h3 id="linejoin-string" tabindex="-1"><a class="header-anchor" href="#linejoin-string"><span>.linejoin : String</span></a></h3>
<p>定义线连接节点的样式。可选值为 'round', 'bevel' 和 'miter'。默认值为 'round'</p>
<p>该属性对应2D Canvas lineJoin属性， 并且会被WebGL渲染器忽略</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:1.11,words:334},t:"LineBasicMaterial(基础线条材质)",i:"markdown",O:1,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E5%9F%BA%E7%A1%80%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./基础网格材质.html-DbabRisY.js"),__vite__mapDeps([206,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshBasicMaterial</h2>
<p>一个以简单着色（平面或线框）方式来绘制几何体的材质。这种材质不受光照的影响。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/meshBasicMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<p>属性color例外，其可以作为十六进制字符串传递，默认情况下为 0xffffff（白色），内部调用Color.set(color)</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
<h3 id="alphamap-texture" tabindex="-1"><a class="header-anchor" href="#alphamap-texture"><span>.alphaMap : Texture</span></a></h3>
<p>alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null</p>
<p>仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效</p>
<h3 id="aomap-texture" tabindex="-1"><a class="header-anchor" href="#aomap-texture"><span>.aoMap : Texture</span></a></h3>
<p>该纹理的红色通道用作环境遮挡贴图。默认值为null。aoMap需要第二组UV</p>
<h3 id="aomapintensity-float" tabindex="-1"><a class="header-anchor" href="#aomapintensity-float"><span>.aoMapIntensity : Float</span></a></h3>
<p>环境遮挡效果的强度。默认值为1。零是不遮挡效果</p>
<h3 id="color-color" tabindex="-1"><a class="header-anchor" href="#color-color"><span>.color : Color</span></a></h3>
<p>材质的颜色(Color)，默认值为白色 (0xffffff)</p>
<h3 id="combine-integer" tabindex="-1"><a class="header-anchor" href="#combine-integer"><span>.combine : Integer</span></a></h3>
<p>如何将表面颜色的结果与环境贴图（如果有）结合起来</p>
<p>选项为THREE.MultiplyOperation（默认值），THREE.MixOperation， THREE.AddOperation。如果选择多个，则使用.reflectivity在两种颜色之间进行混合</p>
<h3 id="envmap-texture" tabindex="-1"><a class="header-anchor" href="#envmap-texture"><span>.envMap : Texture</span></a></h3>
<p>环境贴图。默认值为null。</p>
<h3 id="fog-boolean" tabindex="-1"><a class="header-anchor" href="#fog-boolean"><span>.fog : Boolean</span></a></h3>
<p>材质是否受雾影响。默认为true。</p>
<h3 id="lightmap-texture" tabindex="-1"><a class="header-anchor" href="#lightmap-texture"><span>.lightMap : Texture</span></a></h3>
<p>光照贴图。默认值为null。lightMap需要第二组UV。</p>
<h3 id="lightmapintensity-float" tabindex="-1"><a class="header-anchor" href="#lightmapintensity-float"><span>.lightMapIntensity : Float</span></a></h3>
<p>烘焙光的强度。默认值为1。</p>
<h3 id="map-texture" tabindex="-1"><a class="header-anchor" href="#map-texture"><span>.map : Texture</span></a></h3>
<p>颜色贴图。可以选择包括一个alpha通道，通常与.transparent 或.alphaTest。默认为null。</p>
<h3 id="reflectivity-float" tabindex="-1"><a class="header-anchor" href="#reflectivity-float"><span>.reflectivity : Float</span></a></h3>
<p>环境贴图对表面的影响程度; 见.combine。默认值为1，有效范围介于0（无反射）和1（完全反射）之间。</p>
<h3 id="refractionratio-float" tabindex="-1"><a class="header-anchor" href="#refractionratio-float"><span>.refractionRatio : Float</span></a></h3>
<p>空气的折射率（IOR）（约为1）除以材质的折射率。它与环境映射模式THREE.CubeRefractionMapping 和THREE.EquirectangularRefractionMapping一起使用。 The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of the material. It is used with environment mapping mode THREE.CubeRefractionMapping. 折射率不应超过1。默认值为0.98。</p>
<h3 id="specularmap-texture" tabindex="-1"><a class="header-anchor" href="#specularmap-texture"><span>.specularMap : Texture</span></a></h3>
<p>材质使用的高光贴图。默认值为null。</p>
<h3 id="wireframe-boolean" tabindex="-1"><a class="header-anchor" href="#wireframe-boolean"><span>.wireframe : Boolean</span></a></h3>
<p>将几何体渲染为线框。默认值为false（即渲染为平面多边形）。</p>
<h3 id="wireframelinecap-string" tabindex="-1"><a class="header-anchor" href="#wireframelinecap-string"><span>.wireframeLinecap : String</span></a></h3>
<p>定义线两端的外观。可选值为 'butt'，'round' 和 'square'。默认为'round'。</p>
<p>该属性对应2D Canvas lineJoin属性， 并且会被WebGL渲染器忽略。</p>
<h3 id="wireframelinejoin-string" tabindex="-1"><a class="header-anchor" href="#wireframelinejoin-string"><span>.wireframeLinejoin : String</span></a></h3>
<p>定义线连接节点的样式。可选值为 'round', 'bevel' 和 'miter'。默认值为 'round'。</p>
<p>该属性对应2D Canvas lineJoin属性， 并且会被WebGL渲染器忽略。</p>
<h3 id="wireframelinewidth-float" tabindex="-1"><a class="header-anchor" href="#wireframelinewidth-float"><span>.wireframeLinewidth : Float</span></a></h3>
<p>控制线框宽度。默认值为1。</p>
<p>由于OpenGL Core Profile与大多数平台上WebGL渲染器的限制， 无论如何设置该值，线宽始终为1。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:2.69,words:806},t:"MeshBasicMaterial(基础网格材质)",i:"markdown",O:3,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./材质.html-Dlp1Ohyz.js"),__vite__mapDeps([207,1])),meta:{d:16792704e5,l:"2023年3月20日",c:["threejs"],g:["材质"],e:`<h2>Material</h2>
<p>材质的抽象基类。</p>
<p>材质描述了对象objects的外观。它们的定义方式与渲染器无关， 因此，如果您决定使用不同的渲染器，不必重写材质。</p>
<p>所有其他材质类型都继承了以下属性和方法（尽管它们可能具有不同的默认值）。</p>
<h2>构造函数</h2>
<h3>Material()</h3>
<p>该方法创建一个通用材质。</p>
<h2>属性</h2>
<h3>.alphaTest : Float</h3>
<p>设置运行alphaTest时要使用的alpha值。如果不透明度低于此值，则不会渲染材质。默认值为0。</p>
<h3>.alphaToCoverage : Boolean</h3>`,r:{minutes:6.51,words:1952},t:"Material(材质)",i:"markdown",O:17,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8%E6%8D%95%E6%8D%89%E7%BA%B9%E7%90%86%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./材质捕捉纹理材质.html--eHe-8V1.js"),__vite__mapDeps([208,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshMatcapMaterial</h2>
<p>MeshMatcapMaterial 由一个材质捕捉（MatCap，或光照球（Lit Sphere））纹理所定义，其编码了材质的颜色与明暗。</p>
<p>由于mapcap图像文件编码了烘焙过的光照，因此MeshMatcapMaterial 不对灯光作出反应。 它将会投射阴影到一个接受阴影的物体上(and shadow clipping works)，但不会产生自身阴影或是接受阴影。</p>
<h2>构造器</h2>
<h3>parameters : Object</h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>`,r:{minutes:2.98,words:894},t:"MeshMatcapMaterial(材质捕捉纹理材质)",i:"markdown",O:7,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E6%A0%87%E5%87%86%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./标准网格材质.html-D5dLyIFL.js"),__vite__mapDeps([209,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshStandardMaterial</h2>
<p>一种基于物理的标准材质，使用Metallic-Roughness工作流程。</p>
<p>基于物理的渲染（PBR）最近已成为许多3D应用程序的标准，例如Unity， Unreal和 3D Studio Max。</p>
<p>这种方法与旧方法的不同之处在于，不使用近似值来表示光与表面的相互作用，而是使用物理上正确的模型。 我们的想法是，不是在特定照明下调整材质以使其看起来很好，而是可以创建一种材质，能够“正确”地应对所有光照场景。</p>
<p>在实践中，该材质提供了比MeshLambertMaterial 或MeshPhongMaterial 更精确和逼真的结果，代价是计算成本更高。</p>`,r:{minutes:5.59,words:1678},t:"MeshStandardMaterial(标准网格材质)",i:"markdown",O:11,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E6%B3%95%E7%BA%BF%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./法线网格材质.html-BIx9POxM.js"),__vite__mapDeps([210,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshNormalMaterial</h2>
<p>一种把法向量映射到RGB颜色的材质。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/meshNormalMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
<h3 id="bumpmap-texture" tabindex="-1"><a class="header-anchor" href="#bumpmap-texture"><span>.bumpMap : Texture</span></a></h3>
<p>用于创建凹凸贴图的纹理。黑色和白色值映射到与光照相关的感知深度。凹凸实际上不会影响对象的几何形状，只影响光照。如果定义了法线贴图，则将忽略该贴图。</p>
<h3 id="bumpscale-float" tabindex="-1"><a class="header-anchor" href="#bumpscale-float"><span>.bumpScale : Float</span></a></h3>
<p>凹凸贴图会对材质产生多大影响。典型范围是0-1。默认值为1。</p>
<h3 id="displacementmap-texture" tabindex="-1"><a class="header-anchor" href="#displacementmap-texture"><span>.displacementMap : Texture</span></a></h3>
<p>位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象， 以及充当真实的几何体。位移纹理是指：网格的所有顶点被映射为图像中每个像素的值（白色是最高的），并且被重定位。</p>
<h3 id="displacementscale-float" tabindex="-1"><a class="header-anchor" href="#displacementscale-float"><span>.displacementScale : Float</span></a></h3>
<p>位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为1。</p>
<h3 id="displacementbias-float" tabindex="-1"><a class="header-anchor" href="#displacementbias-float"><span>.displacementBias : Float</span></a></h3>
<p>位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为0。</p>
<h3 id="flatshading-boolean" tabindex="-1"><a class="header-anchor" href="#flatshading-boolean"><span>.flatShading : Boolean</span></a></h3>
<p>定义材质是否使用平面着色进行渲染。默认值为false。</p>
<h3 id="normalmap-texture" tabindex="-1"><a class="header-anchor" href="#normalmap-texture"><span>.normalMap : Texture</span></a></h3>
<p>用于创建法线贴图的纹理。RGB值会影响每个像素片段的曲面法线，并更改颜色照亮的方式。法线贴图不会改变曲面的实际形状，只会改变光照。 In case the material has a normal map authored using the left handed convention, the y component of normalScale should be negated to compensate for the different handedness.</p>
<h3 id="normalmaptype-integer" tabindex="-1"><a class="header-anchor" href="#normalmaptype-integer"><span>.normalMapType : Integer</span></a></h3>
<p>法线贴图的类型。</p>
<p>选项为THREE.TangentSpaceNormalMap（默认）和THREE.ObjectSpaceNormalMap。</p>
<h3 id="normalscale-vector2" tabindex="-1"><a class="header-anchor" href="#normalscale-vector2"><span>.normalScale : Vector2</span></a></h3>
<p>法线贴图对材质的影响程度。典型范围是0-1。默认值是Vector2设置为（1,1）。</p>
<h3 id="wireframe-boolean" tabindex="-1"><a class="header-anchor" href="#wireframe-boolean"><span>.wireframe : Boolean</span></a></h3>
<p>将几何体渲染为线框。默认值为false（即渲染为平滑着色）。</p>
<h3 id="wireframelinewidth-float" tabindex="-1"><a class="header-anchor" href="#wireframelinewidth-float"><span>.wireframeLinewidth : Float</span></a></h3>
<p>控制线框宽度。默认值为1。</p>
<p>由于OpenGL Core Profile与大多数平台上WebGL渲染器的限制，无论如何设置该值，线宽始终为1。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:2.17,words:651},t:"MeshNormalMaterial(法线网格材质)",i:"markdown",O:8,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E6%B7%B1%E5%BA%A6%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./深度网格材质.html-Dny0rqNS.js"),__vite__mapDeps([211,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshDepthMaterial</h2>
<p>一种按深度绘制几何体的材质。深度基于相机远近平面。白色最近，黑色最远。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/meshDepthMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
<h3 id="alphamap-texture" tabindex="-1"><a class="header-anchor" href="#alphamap-texture"><span>.alphaMap : Texture</span></a></h3>
<p>alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null</p>
<p>仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效</p>
<h3 id="depthpacking-constant" tabindex="-1"><a class="header-anchor" href="#depthpacking-constant"><span>.depthPacking : Constant</span></a></h3>
<p>depth packing的编码。默认为BasicDepthPacking。</p>
<h3 id="displacementmap-texture" tabindex="-1"><a class="header-anchor" href="#displacementmap-texture"><span>.displacementMap : Texture</span></a></h3>
<p>位移贴图会影响网格顶点的位置，与仅影响材质的光照和阴影的其他贴图不同，移位的顶点可以投射阴影，阻挡其他对象，以及充当真实的几何体。 位移纹理是指：网格的所有顶点被映射为图像中每个像素的值（白色是最高的），并且被重定位。</p>
<h3 id="displacementscale-float" tabindex="-1"><a class="header-anchor" href="#displacementscale-float"><span>.displacementScale : Float</span></a></h3>
<p>位移贴图对网格的影响程度（黑色是无位移，白色是最大位移）。如果没有设置位移贴图，则不会应用此值。默认值为1。</p>
<h3 id="displacementbias-float" tabindex="-1"><a class="header-anchor" href="#displacementbias-float"><span>.displacementBias : Float</span></a></h3>
<p>位移贴图在网格顶点上的偏移量。如果没有设置位移贴图，则不会应用此值。默认值为0。</p>
<h3 id="map-texture" tabindex="-1"><a class="header-anchor" href="#map-texture"><span>.map : Texture</span></a></h3>
<p>颜色贴图。可以选择包括一个alpha通道，通常与.transparent 或.alphaTest。默认为null。</p>
<h3 id="wireframe-boolean" tabindex="-1"><a class="header-anchor" href="#wireframe-boolean"><span>.wireframe : Boolean</span></a></h3>
<p>将几何体渲染为线框。默认值为false（即渲染为平滑着色）。</p>
<h3 id="wireframelinewidth-float" tabindex="-1"><a class="header-anchor" href="#wireframelinewidth-float"><span>.wireframeLinewidth : Float</span></a></h3>
<p>控制线框宽度。默认值为1。</p>
<p>由于OpenGL Core Profile 与大多数平台上WebGL渲染器限制，无论如何设置该值，线宽始终为1。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:1.9,words:571},t:"MeshDepthMaterial(深度网格材质)",i:"markdown",O:4,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E7%82%B9%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./点材质.html-BsraL1Pn.js"),__vite__mapDeps([212,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>PointsMaterial</h2>
<p>Points使用的默认材质。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/pointsMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。 材质的任何属性都可以从此处传入(包括从Material继承的任何属性)。</p>
<p>属性color例外，其可以作为十六进制字符串传递，默认情况下为 0xffffff（白色），内部调用Color.set(color)。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink>。</p>
<h3 id="alphamap-texture" tabindex="-1"><a class="header-anchor" href="#alphamap-texture"><span>.alphaMap : Texture</span></a></h3>
<p>alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null。</p>
<p>仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效。</p>
<h3 id="color-color" tabindex="-1"><a class="header-anchor" href="#color-color"><span>.color : Color</span></a></h3>
<p>材质的颜色(Color)，默认值为白色 (0xffffff)。</p>
<h3 id="fog-boolean" tabindex="-1"><a class="header-anchor" href="#fog-boolean"><span>.fog : Boolean</span></a></h3>
<p>材质是否受雾影响。默认为true。</p>
<h3 id="map-texture" tabindex="-1"><a class="header-anchor" href="#map-texture"><span>.map : Texture</span></a></h3>
<p>使用来自Texture的数据设置点的颜色。可以选择包括一个alpha通道，通常与 .transparent或.alphaTest。</p>
<h3 id="size-number" tabindex="-1"><a class="header-anchor" href="#size-number"><span>.size : Number</span></a></h3>
<p>设置点的大小。默认值为1.0。
Will be capped if it exceeds the hardware dependent parameter gl.ALIASED_POINT_SIZE_RANGE.</p>
<h3 id="sizeattenuation-boolean" tabindex="-1"><a class="header-anchor" href="#sizeattenuation-boolean"><span>.sizeAttenuation : Boolean</span></a></h3>
<p>指定点的大小是否因相机深度而衰减。（仅限透视摄像头。）默认为true。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:1.33,words:400},t:"PointsMaterial(点材质)",i:"markdown",O:16,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E7%82%B9%E7%B2%BE%E7%81%B5%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./点精灵材质.html-DRjpQ1L0.js"),__vite__mapDeps([213,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>SpriteMaterial</h2>
<p>一种使用Sprite的材质。</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/spriteMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<p>属性color例外，其可以作为十六进制字符串传递，默认情况下为 0xffffff（白色）， 内部调用Color.set(color)。 SpriteMaterials不会被Material.clippingPlanes裁剪。</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
<h3 id="alphamap-texture" tabindex="-1"><a class="header-anchor" href="#alphamap-texture"><span>.alphaMap : Texture</span></a></h3>
<p>alpha贴图是一张灰度纹理，用于控制整个表面的不透明度。（黑色：完全透明；白色：完全不透明）。 默认值为null。</p>
<p>仅使用纹理的颜色，忽略alpha通道（如果存在）。 对于RGB和RGBA纹理，WebGL渲染器在采样此纹理时将使用绿色通道， 因为在DXT压缩和未压缩RGB 565格式中为绿色提供了额外的精度。 Luminance-only以及luminance/alpha纹理也仍然有效。</p>
<h3 id="color-color" tabindex="-1"><a class="header-anchor" href="#color-color"><span>.color : Color</span></a></h3>
<p>材质的颜色(Color)，默认值为白色 (0xffffff)。 .map会和 color 相乘。</p>
<h3 id="fog-boolean" tabindex="-1"><a class="header-anchor" href="#fog-boolean"><span>.fog : Boolean</span></a></h3>
<p>材质是否受雾影响。默认为true。</p>
<h3 id="isspritematerial-boolean" tabindex="-1"><a class="header-anchor" href="#isspritematerial-boolean"><span>.isSpriteMaterial : Boolean</span></a></h3>
<p>Read-only标志，用于检查给定对象是否为SpriteMaterial类型。</p>
<h3 id="map-texture" tabindex="-1"><a class="header-anchor" href="#map-texture"><span>.map : Texture</span></a></h3>
<p>颜色贴图。可以选择包括一个alpha通道，通常与.transparent 或.alphaTest。默认为null。</p>
<h3 id="rotation-radians" tabindex="-1"><a class="header-anchor" href="#rotation-radians"><span>.rotation : Radians</span></a></h3>
<p>sprite的转动，以弧度为单位。默认值为0。</p>
<h3 id="sizeattenuation-boolean" tabindex="-1"><a class="header-anchor" href="#sizeattenuation-boolean"><span>.sizeAttenuation : Boolean</span></a></h3>
<p>精灵的大小是否会被相机深度衰减。（仅限透视摄像头。）默认为true。</p>
<h3 id="transparent-boolean" tabindex="-1"><a class="header-anchor" href="#transparent-boolean"><span>.transparent : Boolean</span></a></h3>
<p>定义此材质是否透明。默认值为 true。</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html">Material</RouteLink></p>
</iframe>`,r:{minutes:1.46,words:437},t:"SpriteMaterial(点精灵材质)",i:"markdown",O:16,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E7%89%A9%E7%90%86%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./物理网格材质.html-ByzR8G1Q.js"),__vite__mapDeps([214,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>MeshPhysicalMaterial</h2>
<p>MeshStandardMaterial 的扩展，提供了更高级的基于物理的渲染属性：</p>
<ul>
<li>Clearcoat: 有些类似于车漆，碳纤，被水打湿的表面的材质需要在面上再增加一个透明的，具有一定反光特性的面。而且这个面说不定有一定的起伏与粗糙度。Clearcoat 可以在不需要重新创建一个透明的面的情况下做到类似的效果。</li>
<li>基于物理的透明度:.opacity 属性有一些限制:在透明度比较高的时候，反射也随之减少。使用基于物理的透光性.transmission 属性可以让一些很薄的透明表面，例如玻璃，变得更真实一些。</li>
<li>高级光线反射: 为非金属材质提供了更多更灵活的光线反射。</li>
<li>Sheen: 可用于表示布料和织物材料。</li>
</ul>`,r:{minutes:4.35,words:1305},t:"MeshPhysicalMaterial(物理网格材质)",i:"markdown",O:10,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E7%9D%80%E8%89%B2%E5%99%A8%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./着色器材质.html-nSItUnlX.js"),__vite__mapDeps([215,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>ShaderMaterial</h2>
<p>使用自定义 shader 渲染的材质。 shader 是一个用 GLSL 编写的小程序 ，在 GPU 上运行。 您可能需要使用自定义 shader，如果你要：</p>
<ul>
<li>要实现内置 materials 之外的效果。</li>
<li>将许多对象组合成单个 BufferGeometry 以提高性能。</li>
</ul>
<p>使用 ShaderMaterial 时需要注意以下注意事项：</p>
<ul>
<li>ShaderMaterial 只有使用 WebGLRenderer 才可以绘制正常， 因为 vertexShader 和 fragmentShader 属性中 GLSL 代码必须使用 WebGL 来编译并运行在 GPU 中。</li>
<li>从 THREE r72 开始，不再支持在 ShaderMaterial 中直接分配属性。 必须使用 BufferGeometry 实例，使用 BufferAttribute 实例来定义自定义属性。</li>
<li>从 THREE r77 开始，WebGLRenderTarget 或 WebGLCubeRenderTarget 实例不再被用作 uniforms。 必须使用它们的 texture 属性。</li>
<li>内置 attributes 和 uniforms 与代码一起传递到 shaders。 如果您不希望 WebGLProgram 向 shader 代码添加任何内容，则可以使用 RawShaderMaterial 而不是此类。</li>
<li>您可以使用指令#pragma unroll_loop_start，#pragma unroll_loop_end 以便通过 shader 预处理器在 GLSL 中展开 for 循环。 该指令必须放在循环的正上方。循环格式必须与定义的标准相对应。
<ul>
<li>循环必须标准化 normalized。</li>
<li>循环变量必须是 i。</li>
</ul>
</li>
</ul>`,r:{minutes:7.02,words:2106},t:"ShaderMaterial(着色器材质)",i:"markdown",O:14,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E8%99%9A%E7%BA%BF%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./虚线材质.html-BGNlS5dM.js"),__vite__mapDeps([216,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>LineDashedMaterial</h2>
<p>一种用于绘制虚线样式几何体的材质</p>
<iframe url="https://luotainxu-demo.netlify.app/#/threejs/material/lineDashedMaterial">
<h2 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器"><span>构造器</span></a></h2>
<h3 id="parameters-object" tabindex="-1"><a class="header-anchor" href="#parameters-object"><span>parameters : Object</span></a></h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%9D%A1%E6%9D%90%E8%B4%A8.html">LineBasicMaterial</RouteLink>继承的任何属性)</p>
<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2>
<p>共有属性请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%9D%A1%E6%9D%90%E8%B4%A8.html">LineBasicMaterial</RouteLink></p>
<h3 id="dashsize-number" tabindex="-1"><a class="header-anchor" href="#dashsize-number"><span>.dashSize : number</span></a></h3>
<p>虚线的大小，是指破折号和间隙之和。默认值为 3</p>
<h3 id="gapsize-number" tabindex="-1"><a class="header-anchor" href="#gapsize-number"><span>.gapSize : number</span></a></h3>
<p>间隙的大小，默认值为 1。</p>
<h3 id="islinedashedmaterial-boolean" tabindex="-1"><a class="header-anchor" href="#islinedashedmaterial-boolean"><span>.isLineDashedMaterial : Boolean</span></a></h3>
<p>Read-only标志，用于检查给定对象是否为LineDashedMaterial类型</p>
<h3 id="scale-number" tabindex="-1"><a class="header-anchor" href="#scale-number"><span>.scale : number</span></a></h3>
<p>线条中虚线部分的占比。默认值为 1</p>
<h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2>
<p>共有方法请参见其基类<RouteLink to="/threejs/%E6%9D%90%E8%B4%A8/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%9D%A1%E6%9D%90%E8%B4%A8.html">LineBasicMaterial</RouteLink></p>
</iframe>`,r:{minutes:.76,words:227},t:"LineDashedMaterial(虚线材质)",i:"markdown",O:2,y:"a"}}],["/threejs/%E6%9D%90%E8%B4%A8/%E9%98%B4%E5%BD%B1%E6%9D%90%E8%B4%A8.html",{loader:()=>B(()=>import("./阴影材质.html-CSXKPvpY.js"),__vite__mapDeps([217,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["threejs"],g:["材质"],e:`<h2>ShadowMaterial</h2>
<p>此材质可以接收阴影，但在其他方面完全透明。</p>
<h2>构造器</h2>
<h3>parameters : Object</h3>
<p>parameters - (可选)用于定义材质外观的对象，具有一个或多个属性。材质的任何属性都可以从此处传入(包括从Material继承的任何属性)</p>
<h2>属性</h2>
<p>共有属性请参见其基类<a href="/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html" target="_blank">Material</a></p>
<h3>.color : Color</h3>`,r:{minutes:.59,words:176},t:"ShadowMaterial(阴影材质)",i:"markdown",O:15,y:"a"}}],["/threejs/%E6%B8%B2%E6%9F%93%E5%99%A8/WebGLRenderer.html",{loader:()=>B(()=>import("./WebGLRenderer.html-CoP0-SbX.js"),__vite__mapDeps([218,1])),meta:{d:1680048e6,l:"2023年3月29日",c:["threejs"],g:["渲染器"],e:`<h2>WebGLRenderer</h2>
<h2>构造器</h2>
<h3>WebGLRenderer( parameters : Object )</h3>
<p>parameters - (可选) 该对象的属性定义了渲染器的行为。也可以完全不传参数。在所有情况下，当缺少参数时，它将采用合理的默认值。 以下是合法参数：</p>
<ul>
<li>canvas - 一个供渲染器绘制其输出的canvas 它和下面的domElement属性对应。 如果没有传这个参数，会创建一个新canvas</li>
<li>context - 可用于将渲染器附加到已有的渲染环境(RenderingContext)中。默认值是null</li>
<li>precision - 着色器精度. 可以是 "highp", "mediump" 或者 "lowp". 如果设备支持，默认为"highp"</li>
<li>alpha - 控制默认的清除alpha值。当设置为true时，值为0。否则就是1。默认为false</li>
<li>premultipliedAlpha - renderer是否假设颜色有 premultiplied alpha. 默认为true</li>
<li>antialias - 是否执行抗锯齿。默认为false.</li>
<li>stencil - 绘图缓存是否有一个至少8位的模板缓存(stencil buffer)。默认为true</li>
<li>preserveDrawingBuffer -是否保留缓直到手动清除或被覆盖。 默认false.</li>
<li>powerPreference - 提示用户代理怎样的配置更适用于当前WebGL环境。 可能是"high-performance", "low-power" 或 "default"。默认是"default". 详见WebGL spec</li>
<li>failIfMajorPerformanceCaveat - 检测渲染器是否会因性能过差而创建失败。默认为false。详见 WebGL spec for details.</li>
<li>depth - 绘图缓存是否有一个至少6位的深度缓存(depth buffer )。 默认是true.</li>
<li>logarithmicDepthBuffer - 是否使用对数深度缓存。如果要在单个场景中处理巨大的比例差异，就有必要使用。</li>
</ul>`,r:{minutes:9.46,words:2838},t:"WebGLRenderer",i:"markdown",O:1,y:"a"}}],["/threejs/%E7%81%AF%E5%85%89/Light.html",{loader:()=>B(()=>import("./Light.html-PzXPt4am.js"),__vite__mapDeps([219,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["灯光"],e:`<h2>Light</h2>
<p>光源的基类 - 所有其他的光类型都继承了该类描述的属性和方法。</p>
<h2>构造器</h2>
<h3>color : Integer</h3>
<p>color - (可选参数) 16进制表示光的颜色。 缺省值 0xffffff (白色)。</p>
<h3>intensity : Float</h3>
<p>intensity - (可选参数) 光照强度。 缺省值 1。</p>
<h2>属性</h2>
<p>公共属性请查看基类Object3D。</p>
<h3>.color : Color</h3>
<p>光源的颜色。如果构造的时候没有传递，默认会创建一个新的 Color 并设置为白色。</p>`,r:{minutes:.94,words:283},t:"Light",i:"markdown",O:7,y:"a"}}],["/threejs/%E7%81%AF%E5%85%89/%E5%8D%8A%E7%90%83%E5%85%89.html",{loader:()=>B(()=>import("./半球光.html-Dtz9Gj2q.js"),__vite__mapDeps([220,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["灯光"],e:`<h2>HemisphereLight</h2>
<p>光源直接放置于场景之上，光照颜色从天空光线颜色渐变到地面光线颜色。</p>
<p>半球光不能投射阴影。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> light</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">HemisphereLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0xffffbb</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0x080820</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">light</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.06,words:319},t:"HemisphereLight(半球光)",i:"markdown",O:3,y:"a"}}],["/threejs/%E7%81%AF%E5%85%89/%E5%B9%B3%E8%A1%8C%E5%85%89.html",{loader:()=>B(()=>import("./平行光.html-Bojvg7br.js"),__vite__mapDeps([221,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["灯光"],e:`<h2>DirectionalLight</h2>
<p>平行光是沿着特定方向发射的光。这种光的表现像是无限远,从它发出的光线都是平行的。常常用平行光来模拟太阳光 的效果; 太阳足够远，因此我们可以认为太阳的位置是无限远，所以我们认为从太阳发出的光线也都是平行的。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> directionalLight</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">DirectionalLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0xffffff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0.5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">directionalLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.55,words:465},t:"DirectionalLight(平行光)",i:"markdown",O:2,y:"a"}}],["/threejs/%E7%81%AF%E5%85%89/%E5%B9%B3%E9%9D%A2%E5%85%89%E5%85%89%E6%BA%90.html",{loader:()=>B(()=>import("./平面光光源.html-D-ZQzy6L.js"),__vite__mapDeps([222,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["灯光"],e:`<h2>RectAreaLight</h2>
<p>平面光光源从一个矩形平面上均匀地发射光线。这种光源可以用来模拟像明亮的窗户或者条状灯光光源。</p>
<p>注意事项:</p>
<ul>
<li>不支持阴影。</li>
<li>只支持 MeshStandardMaterial 和 MeshPhysicalMaterial 两种材质。</li>
<li>你必须在你的场景中加入 RectAreaLightUniformsLib ，并调用init()。</li>
</ul>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> width</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> height</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> intensity</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> rectLight</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">RectAreaLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0xffffff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">intensity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">,  </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rectLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">rectLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">lookAt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">rectLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">rectLightHelper</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF"> RectAreaLightHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">rectLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">rectLightHelper</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1,words:300},t:"RectAreaLight(平面光光源)",i:"markdown",O:5,y:"a"}}],["/threejs/%E7%81%AF%E5%85%89/%E7%82%B9%E5%85%89%E6%BA%90.html",{loader:()=>B(()=>import("./点光源.html-FRB1d6XK.js"),__vite__mapDeps([223,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["灯光"],e:`<h2>PointLight</h2>
<p>从一个点向各个方向发射的光源。一个常见的例子是模拟一个灯泡发出的光。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> light</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">PointLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">light</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">light</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.46,words:439},t:"PointLight(点光源)",i:"markdown",O:4,y:"a"}}],["/threejs/%E7%81%AF%E5%85%89/%E7%8E%AF%E5%A2%83%E5%85%89.html",{loader:()=>B(()=>import("./环境光.html-DDCDM2go.js"),__vite__mapDeps([224,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["灯光"],e:`<h2>AmbientLight</h2>
<p>创建一个环境光对象。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> light</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">AmbientLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0x404040</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">light</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.55,words:166},t:"AmbientLight(环境光)",i:"markdown",O:1,y:"a"}}],["/threejs/%E7%81%AF%E5%85%89/%E8%81%9A%E5%85%89%E7%81%AF.html",{loader:()=>B(()=>import("./聚光灯.html-DQIxwxNl.js"),__vite__mapDeps([225,1])),meta:{d:16788384e5,l:"2023年3月15日",c:["threejs"],g:["灯光"],e:`<h2>SpotLight</h2>
<p>光线从一个点沿一个方向射出，随着光线照射的变远，光线圆锥体的尺寸也逐渐增大。创建一个新的聚光灯。</p>
<div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> spotLight</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">SpotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">0xffffff</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">position</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66">100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">map</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">TextureLoader</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">load</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">castShadow</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mapSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">width</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">mapSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">height</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 1024</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">near</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 500</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">far</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 4000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">shadow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B">camera</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75">fov</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B">scene</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF">add</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75">spotLight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF"> );</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.52,words:756},t:"SpotLight(聚光灯)",i:"markdown",O:6,y:"a"}}],["/404.html",{loader:()=>B(()=>import("./404.html-D76Ken5J.js"),__vite__mapDeps([226,1])),meta:{t:""}}],["/threejs/%E5%85%B6%E4%BB%96/",{loader:()=>B(()=>import("./index.html-BZBfmIbQ.js"),__vite__mapDeps([227,1])),meta:{t:"其他"}}],["/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/",{loader:()=>B(()=>import("./index.html-4vfH5yPL.js"),__vite__mapDeps([228,1])),meta:{t:"几何体"}}],["/threejs/%E5%8A%A0%E8%BD%BD%E5%99%A8/",{loader:()=>B(()=>import("./index.html-Db35VtGZ.js"),__vite__mapDeps([229,1])),meta:{t:"加载器"}}],["/threejs/%E5%8A%A8%E7%94%BB/",{loader:()=>B(()=>import("./index.html-E0GDAwCq.js"),__vite__mapDeps([230,1])),meta:{t:"动画"}}],["/threejs/%E5%9F%BA%E7%A1%80/",{loader:()=>B(()=>import("./index.html-BF1ku7pQ.js"),__vite__mapDeps([231,1])),meta:{t:"基础"}}],["/threejs/%E6%8E%A7%E5%88%B6%E5%99%A8/",{loader:()=>B(()=>import("./index.html-GZtaGSIo.js"),__vite__mapDeps([232,1])),meta:{t:"控制器"}}],["/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/",{loader:()=>B(()=>import("./index.html-unJ9lZ0d.js"),__vite__mapDeps([233,1])),meta:{t:"摄像机"}}],["/threejs/%E6%9D%90%E8%B4%A8/",{loader:()=>B(()=>import("./index.html-qtdFyCST.js"),__vite__mapDeps([234,1])),meta:{t:"材质"}}],["/threejs/%E6%B8%B2%E6%9F%93%E5%99%A8/",{loader:()=>B(()=>import("./index.html-DGaX9jbX.js"),__vite__mapDeps([235,1])),meta:{t:"渲染器"}}],["/threejs/%E7%81%AF%E5%85%89/",{loader:()=>B(()=>import("./index.html-CSA_9byT.js"),__vite__mapDeps([236,1])),meta:{t:"灯光"}}],["/category/",{loader:()=>B(()=>import("./index.html-OjNBA0Ec.js"),__vite__mapDeps([237,1])),meta:{t:"分类",I:!1}}],["/category/%E9%9D%A2%E8%AF%95/",{loader:()=>B(()=>import("./index.html-CeW3F0O6.js"),__vite__mapDeps([238,1])),meta:{t:"面试 分类",I:!1}}],["/category/%E9%A1%B9%E7%9B%AE/",{loader:()=>B(()=>import("./index.html-B40lblQ-.js"),__vite__mapDeps([239,1])),meta:{t:"项目 分类",I:!1}}],["/category/%E5%85%B6%E4%BB%96/",{loader:()=>B(()=>import("./index.html-D4pv8l9L.js"),__vite__mapDeps([240,1])),meta:{t:"其他 分类",I:!1}}],["/category/git/",{loader:()=>B(()=>import("./index.html-BNxNiY-q.js"),__vite__mapDeps([241,1])),meta:{t:"git 分类",I:!1}}],["/category/eslint/",{loader:()=>B(()=>import("./index.html-CRx5jzBs.js"),__vite__mapDeps([242,1])),meta:{t:"eslint 分类",I:!1}}],["/category/uniapp/",{loader:()=>B(()=>import("./index.html-Cuz049Gg.js"),__vite__mapDeps([243,1])),meta:{t:"uniapp 分类",I:!1}}],["/category/html/",{loader:()=>B(()=>import("./index.html-COFh6fjq.js"),__vite__mapDeps([244,1])),meta:{t:"html 分类",I:!1}}],["/category/css/",{loader:()=>B(()=>import("./index.html-E92dgbIW.js"),__vite__mapDeps([245,1])),meta:{t:"CSS 分类",I:!1}}],["/category/vue/",{loader:()=>B(()=>import("./index.html-DyhJpMed.js"),__vite__mapDeps([246,1])),meta:{t:"Vue 分类",I:!1}}],["/category/html/",{loader:()=>B(()=>import("./index.html-COFh6fjq.js"),__vite__mapDeps([244,1])),meta:{t:"HTML 分类",I:!1}}],["/category/javascript/",{loader:()=>B(()=>import("./index.html-DLc9SLb-.js"),__vite__mapDeps([247,1])),meta:{t:"Javascript 分类",I:!1}}],["/category/linux/",{loader:()=>B(()=>import("./index.html-DYMaEJio.js"),__vite__mapDeps([248,1])),meta:{t:"Linux 分类",I:!1}}],["/category/nginx/",{loader:()=>B(()=>import("./index.html-LoFbykeY.js"),__vite__mapDeps([249,1])),meta:{t:"Nginx 分类",I:!1}}],["/category/react/",{loader:()=>B(()=>import("./index.html-DTpJyvnc.js"),__vite__mapDeps([250,1])),meta:{t:"react 分类",I:!1}}],["/category/react/",{loader:()=>B(()=>import("./index.html-DTpJyvnc.js"),__vite__mapDeps([250,1])),meta:{t:"React 分类",I:!1}}],["/category/typescript/",{loader:()=>B(()=>import("./index.html-C0sr5O4R.js"),__vite__mapDeps([251,1])),meta:{t:"Typescript 分类",I:!1}}],["/category/mysql/",{loader:()=>B(()=>import("./index.html-DhEfyRYN.js"),__vite__mapDeps([252,1])),meta:{t:"Mysql 分类",I:!1}}],["/category/%E6%B5%8F%E8%A7%88%E5%99%A8/",{loader:()=>B(()=>import("./index.html-D5Vyl3xy.js"),__vite__mapDeps([253,1])),meta:{t:"浏览器 分类",I:!1}}],["/category/%E7%BD%91%E7%BB%9C/",{loader:()=>B(()=>import("./index.html-C1Ajo34q.js"),__vite__mapDeps([254,1])),meta:{t:"网络 分类",I:!1}}],["/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-Brwhk3iJ.js"),__vite__mapDeps([255,1])),meta:{t:"设计模式 分类",I:!1}}],["/category/%E8%BD%AF%E8%80%83/",{loader:()=>B(()=>import("./index.html-q_DvOI4t.js"),__vite__mapDeps([256,1])),meta:{t:"软考 分类",I:!1}}],["/category/threejs/",{loader:()=>B(()=>import("./index.html-B9B8Mdls.js"),__vite__mapDeps([257,1])),meta:{t:"threejs 分类",I:!1}}],["/tag/",{loader:()=>B(()=>import("./index.html-CaeYtJu-.js"),__vite__mapDeps([258,1])),meta:{t:"标签",I:!1}}],["/tag/html/",{loader:()=>B(()=>import("./index.html-C9Pj6PO3.js"),__vite__mapDeps([259,1])),meta:{t:"标签: html",I:!1}}],["/tag/css/",{loader:()=>B(()=>import("./index.html-D1iK_JKY.js"),__vite__mapDeps([260,1])),meta:{t:"标签: css",I:!1}}],["/tag/javascript/",{loader:()=>B(()=>import("./index.html-C7Mg9Enz.js"),__vite__mapDeps([261,1])),meta:{t:"标签: Javascript",I:!1}}],["/tag/vue/",{loader:()=>B(()=>import("./index.html-CZxQNQj1.js"),__vite__mapDeps([262,1])),meta:{t:"标签: Vue",I:!1}}],["/tag/react/",{loader:()=>B(()=>import("./index.html-DYkM_jz2.js"),__vite__mapDeps([263,1])),meta:{t:"标签: React",I:!1}}],["/tag/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86/",{loader:()=>B(()=>import("./index.html-_V8nqAV4.js"),__vite__mapDeps([264,1])),meta:{t:"标签: 浏览器原理",I:!1}}],["/tag/%E7%BD%91%E7%BB%9C/",{loader:()=>B(()=>import("./index.html-C09IrzRI.js"),__vite__mapDeps([265,1])),meta:{t:"标签: 网络",I:!1}}],["/tag/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",{loader:()=>B(()=>import("./index.html-CbGONWuz.js"),__vite__mapDeps([266,1])),meta:{t:"标签: 前端工程化",I:!1}}],["/tag/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",{loader:()=>B(()=>import("./index.html-WeClRYyN.js"),__vite__mapDeps([267,1])),meta:{t:"标签: 性能优化",I:!1}}],["/tag/%E5%85%B6%E4%BB%96/",{loader:()=>B(()=>import("./index.html-DZk113jk.js"),__vite__mapDeps([268,1])),meta:{t:"标签: 其他",I:!1}}],["/tag/vue3/",{loader:()=>B(()=>import("./index.html-BkrXxbmp.js"),__vite__mapDeps([269,1])),meta:{t:"标签: vue3",I:!1}}],["/tag/vue2/",{loader:()=>B(()=>import("./index.html-DirGAEZy.js"),__vite__mapDeps([270,1])),meta:{t:"标签: vue2",I:!1}}],["/tag/%E6%87%92%E5%8A%A0%E8%BD%BD/",{loader:()=>B(()=>import("./index.html-BWFVaKeq.js"),__vite__mapDeps([271,1])),meta:{t:"标签: 懒加载",I:!1}}],["/tag/git/",{loader:()=>B(()=>import("./index.html-DP5Lp6Bk.js"),__vite__mapDeps([272,1])),meta:{t:"标签: git",I:!1}}],["/tag/eslint/",{loader:()=>B(()=>import("./index.html-jbLkCY-a.js"),__vite__mapDeps([273,1])),meta:{t:"标签: eslint",I:!1}}],["/tag/uniapp/",{loader:()=>B(()=>import("./index.html-n7nvH_tD.js"),__vite__mapDeps([274,1])),meta:{t:"标签: uniapp",I:!1}}],["/tag/%E8%93%9D%E7%89%99/",{loader:()=>B(()=>import("./index.html-_G-0-Zpe.js"),__vite__mapDeps([275,1])),meta:{t:"标签: 蓝牙",I:!1}}],["/tag/bfc/",{loader:()=>B(()=>import("./index.html-0rNkVwA6.js"),__vite__mapDeps([276,1])),meta:{t:"标签: BFC",I:!1}}],["/tag/%E5%B8%83%E5%B1%80/",{loader:()=>B(()=>import("./index.html-7E9-W2J_.js"),__vite__mapDeps([277,1])),meta:{t:"标签: 布局",I:!1}}],["/tag/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/",{loader:()=>B(()=>import("./index.html-gqXsn8HA.js"),__vite__mapDeps([278,1])),meta:{t:"标签: 清除浮动",I:!1}}],["/tag/express/",{loader:()=>B(()=>import("./index.html-bB5vZngD.js"),__vite__mapDeps([279,1])),meta:{t:"标签: express",I:!1}}],["/tag/%E7%A7%BB%E5%8A%A8%E7%AB%AF/",{loader:()=>B(()=>import("./index.html-B0zARVCV.js"),__vite__mapDeps([280,1])),meta:{t:"标签: 移动端",I:!1}}],["/tag/%E8%AF%AD%E4%B9%89%E5%8C%96/",{loader:()=>B(()=>import("./index.html-CG4qOL00.js"),__vite__mapDeps([281,1])),meta:{t:"标签: 语义化",I:!1}}],["/tag/%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93/",{loader:()=>B(()=>import("./index.html-DJoWEuxG.js"),__vite__mapDeps([282,1])),meta:{t:"标签: 页面渲染",I:!1}}],["/tag/%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/",{loader:()=>B(()=>import("./index.html-hyjm7Cac.js"),__vite__mapDeps([283,1])),meta:{t:"标签: 事件机制",I:!1}}],["/tag/es6-es11/",{loader:()=>B(()=>import("./index.html-C45iJDFO.js"),__vite__mapDeps([284,1])),meta:{t:"标签: ES6-ES11",I:!1}}],["/tag/web-api/",{loader:()=>B(()=>import("./index.html-DL4iSRHF.js"),__vite__mapDeps([285,1])),meta:{t:"标签: Web API",I:!1}}],["/tag/this/",{loader:()=>B(()=>import("./index.html-B_isvnc8.js"),__vite__mapDeps([286,1])),meta:{t:"标签: this",I:!1}}],["/tag/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/",{loader:()=>B(()=>import("./index.html-3x6_WClB.js"),__vite__mapDeps([287,1])),meta:{t:"标签: 事件循环",I:!1}}],["/tag/%E4%BA%8C%E8%BF%9B%E5%88%B6/",{loader:()=>B(()=>import("./index.html-BppZL79U.js"),__vite__mapDeps([288,1])),meta:{t:"标签: 二进制",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/",{loader:()=>B(()=>import("./index.html-B1Re-ppu.js"),__vite__mapDeps([289,1])),meta:{t:"标签: 内存泄漏",I:!1}}],["/tag/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96/",{loader:()=>B(()=>import("./index.html-BG-brsrq.js"),__vite__mapDeps([290,1])),meta:{t:"标签: 前端模块化",I:!1}}],["/tag/%E5%8E%9F%E5%9E%8B/",{loader:()=>B(()=>import("./index.html-ksZold7C.js"),__vite__mapDeps([291,1])),meta:{t:"标签: 原型",I:!1}}],["/tag/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/",{loader:()=>B(()=>import("./index.html-Bk32Br0W.js"),__vite__mapDeps([292,1])),meta:{t:"标签: 变量提升",I:!1}}],["/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{loader:()=>B(()=>import("./index.html-ipF4eTpY.js"),__vite__mapDeps([293,1])),meta:{t:"标签: 字符串",I:!1}}],["/tag/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/",{loader:()=>B(()=>import("./index.html-BlpwB6hL.js"),__vite__mapDeps([294,1])),meta:{t:"标签: 异步编程",I:!1}}],["/tag/%E6%93%8D%E4%BD%9C%E7%AC%A6/",{loader:()=>B(()=>import("./index.html-DpA7V89c.js"),__vite__mapDeps([295,1])),meta:{t:"标签: 操作符",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",{loader:()=>B(()=>import("./index.html-TzTuxuK8.js"),__vite__mapDeps([296,1])),meta:{t:"标签: 数据类型",I:!1}}],["/tag/%E6%95%B0%E7%BB%84/",{loader:()=>B(()=>import("./index.html-CwgH3TIm.js"),__vite__mapDeps([297,1])),meta:{t:"标签: 数组",I:!1}}],["/tag/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D/",{loader:()=>B(()=>import("./index.html-BQJqq2sZ.js"),__vite__mapDeps([298,1])),meta:{t:"标签: 深拷贝与浅拷贝",I:!1}}],["/tag/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",{loader:()=>B(()=>import("./index.html-CYyxUPg3.js"),__vite__mapDeps([299,1])),meta:{t:"标签: 类型转换",I:!1}}],["/tag/ajax/",{loader:()=>B(()=>import("./index.html-DIlo9Kih.js"),__vite__mapDeps([300,1])),meta:{t:"标签: ajax",I:!1}}],["/tag/%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96/",{loader:()=>B(()=>import("./index.html-uzdGuQad.js"),__vite__mapDeps([301,1])),meta:{t:"标签: 节流与防抖",I:!1}}],["/tag/%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/",{loader:()=>B(()=>import("./index.html-CGWVilss.js"),__vite__mapDeps([302,1])),meta:{t:"标签: 解构赋值",I:!1}}],["/tag/%E8%B7%A8%E5%9F%9F/",{loader:()=>B(()=>import("./index.html-CCDFGWQb.js"),__vite__mapDeps([303,1])),meta:{t:"标签: 跨域",I:!1}}],["/tag/%E9%81%8D%E5%8E%86/",{loader:()=>B(()=>import("./index.html-DKy8N_Zp.js"),__vite__mapDeps([304,1])),meta:{t:"标签: 遍历",I:!1}}],["/tag/%E9%97%AD%E5%8C%85/",{loader:()=>B(()=>import("./index.html-CZgodxCt.js"),__vite__mapDeps([305,1])),meta:{t:"标签: 闭包",I:!1}}],["/tag/linux/",{loader:()=>B(()=>import("./index.html-CPkUxTWC.js"),__vite__mapDeps([306,1])),meta:{t:"标签: Linux",I:!1}}],["/tag/nginx/",{loader:()=>B(()=>import("./index.html-zMka4L_P.js"),__vite__mapDeps([307,1])),meta:{t:"标签: Nginx",I:!1}}],["/tag/redux/",{loader:()=>B(()=>import("./index.html-CSdKO2YH.js"),__vite__mapDeps([308,1])),meta:{t:"标签: redux",I:!1}}],["/tag/setstate/",{loader:()=>B(()=>import("./index.html-NkSneNNn.js"),__vite__mapDeps([309,1])),meta:{t:"标签: setState",I:!1}}],["/tag/hook/",{loader:()=>B(()=>import("./index.html-CE6tHPb8.js"),__vite__mapDeps([310,1])),meta:{t:"标签: Hook",I:!1}}],["/tag/%E6%8F%92%E6%A7%BD/",{loader:()=>B(()=>import("./index.html-DaQrOPTS.js"),__vite__mapDeps([311,1])),meta:{t:"标签: 插槽",I:!1}}],["/tag/%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/",{loader:()=>B(()=>import("./index.html-CYeOZMMl.js"),__vite__mapDeps([312,1])),meta:{t:"标签: 父子组件通信",I:!1}}],["/tag/%E8%84%9A%E6%89%8B%E6%9E%B6/",{loader:()=>B(()=>import("./index.html-CIUjEQWh.js"),__vite__mapDeps([313,1])),meta:{t:"标签: 脚手架",I:!1}}],["/tag/%E6%8E%A5%E5%8F%A3/",{loader:()=>B(()=>import("./index.html-38b67JPI.js"),__vite__mapDeps([314,1])),meta:{t:"标签: 接口",I:!1}}],["/tag/%E6%A8%A1%E5%9D%97%E5%92%8C%E5%A3%B0%E6%98%8E%E6%96%87%E4%BB%B6/",{loader:()=>B(()=>import("./index.html-CU1to3FW.js"),__vite__mapDeps([315,1])),meta:{t:"标签: 模块和声明文件",I:!1}}],["/tag/%E6%B3%9B%E5%9E%8B/",{loader:()=>B(()=>import("./index.html-DtcNF7Vs.js"),__vite__mapDeps([316,1])),meta:{t:"标签: 泛型",I:!1}}],["/tag/%E7%B1%BB/",{loader:()=>B(()=>import("./index.html-H9oA-CaW.js"),__vite__mapDeps([317,1])),meta:{t:"标签: 类",I:!1}}],["/tag/%E7%B1%BB%E5%9E%8B/",{loader:()=>B(()=>import("./index.html-D27zt0Bf.js"),__vite__mapDeps([318,1])),meta:{t:"标签: 类型",I:!1}}],["/tag/%E7%B1%BB%E5%9E%8B%E5%AE%88%E5%8D%AB/",{loader:()=>B(()=>import("./index.html-DTHOct4A.js"),__vite__mapDeps([319,1])),meta:{t:"标签: 类型守卫",I:!1}}],["/tag/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E4%B8%8E%E6%96%AD%E8%A8%80/",{loader:()=>B(()=>import("./index.html-CVit26-p.js"),__vite__mapDeps([320,1])),meta:{t:"标签: 类型推断与断言",I:!1}}],["/tag/%E7%BC%96%E8%AF%91/",{loader:()=>B(()=>import("./index.html-C1D_wu_-.js"),__vite__mapDeps([321,1])),meta:{t:"标签: 编译",I:!1}}],["/tag/%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D%E3%80%81%E4%BA%A4%E5%8F%89%E7%B1%BB%E5%9E%8B/",{loader:()=>B(()=>import("./index.html-CXLrYG23.js"),__vite__mapDeps([322,1])),meta:{t:"标签: 联合类型、类型别名、交叉类型",I:!1}}],["/tag/%E8%A3%85%E9%A5%B0%E5%99%A8/",{loader:()=>B(()=>import("./index.html-CA-_jNUW.js"),__vite__mapDeps([323,1])),meta:{t:"标签: 装饰器",I:!1}}],["/tag/mysql/",{loader:()=>B(()=>import("./index.html-bqFFWmjw.js"),__vite__mapDeps([324,1])),meta:{t:"标签: Mysql",I:!1}}],["/tag/diff%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/",{loader:()=>B(()=>import("./index.html-Dx-bnTRu.js"),__vite__mapDeps([325,1])),meta:{t:"标签: diff算法原理",I:!1}}],["/tag/mixin%E6%B7%B7%E5%85%A5%E5%8E%9F%E7%90%86/",{loader:()=>B(()=>import("./index.html-kkv1diS2.js"),__vite__mapDeps([326,1])),meta:{t:"标签: mixin混入原理",I:!1}}],["/tag/%E4%BE%A6%E5%90%AC%E5%99%A8%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86/",{loader:()=>B(()=>import("./index.html-Bs80QJ7l.js"),__vite__mapDeps([327,1])),meta:{t:"标签: 侦听器属性原理",I:!1}}],["/tag/%E5%85%A5%E5%8F%A3/",{loader:()=>B(()=>import("./index.html-DIeQqsjD.js"),__vite__mapDeps([328,1])),meta:{t:"标签: 入口",I:!1}}],["/tag/%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/",{loader:()=>B(()=>import("./index.html-CKyH-dxc.js"),__vite__mapDeps([329,1])),meta:{t:"标签: 渲染原理",I:!1}}],["/tag/%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE/",{loader:()=>B(()=>import("./index.html-C6syucPV.js"),__vite__mapDeps([330,1])),meta:{t:"标签: 响应式数据",I:!1}}],["/tag/%E6%A8%A1%E6%9D%BF%E7%BC%96%E8%AF%91/",{loader:()=>B(()=>import("./index.html-CDhaLB3v.js"),__vite__mapDeps([331,1])),meta:{t:"标签: 模板编译",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86/",{loader:()=>B(()=>import("./index.html-DwhLNUCY.js"),__vite__mapDeps([332,1])),meta:{t:"标签: 计算属性原理",I:!1}}],["/tag/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/",{loader:()=>B(()=>import("./index.html-r8QKRWFe.js"),__vite__mapDeps([333,1])),meta:{t:"标签: 垃圾回收",I:!1}}],["/tag/%E5%AD%98%E5%82%A8/",{loader:()=>B(()=>import("./index.html-BWFBZHki.js"),__vite__mapDeps([334,1])),meta:{t:"标签: 存储",I:!1}}],["/tag/tcpip/",{loader:()=>B(()=>import("./index.html-CIwBS8vs.js"),__vite__mapDeps([335,1])),meta:{t:"标签: TCP/IP",I:!1}}],["/tag/websocket/",{loader:()=>B(()=>import("./index.html-BvITSKrY.js"),__vite__mapDeps([336,1])),meta:{t:"标签: WebSocket",I:!1}}],["/tag/%E6%9E%84%E9%80%A0%E5%99%A8%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-CenTPi6L.js"),__vite__mapDeps([337,1])),meta:{t:"标签: 构造器模式",I:!1}}],["/tag/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-cwLxWGRm.js"),__vite__mapDeps([338,1])),meta:{t:"标签: 原型模式",I:!1}}],["/tag/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-eXVV4GdG.js"),__vite__mapDeps([339,1])),meta:{t:"标签: 工厂模式",I:!1}}],["/tag/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-D0TKY_Tm.js"),__vite__mapDeps([340,1])),meta:{t:"标签: 建造者模式",I:!1}}],["/tag/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-B0k3K15r.js"),__vite__mapDeps([341,1])),meta:{t:"标签: 单例模式",I:!1}}],["/tag/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-DHJwqJ13.js"),__vite__mapDeps([342,1])),meta:{t:"标签: 装饰器模式",I:!1}}],["/tag/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-B30TAlEP.js"),__vite__mapDeps([343,1])),meta:{t:"标签: 适配器模式",I:!1}}],["/tag/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-lsl_AFa0.js"),__vite__mapDeps([344,1])),meta:{t:"标签: 策略模式",I:!1}}],["/tag/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-C3NIneHc.js"),__vite__mapDeps([345,1])),meta:{t:"标签: 代理模式",I:!1}}],["/tag/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-BDZasdnY.js"),__vite__mapDeps([346,1])),meta:{t:"标签: 观察者模式",I:!1}}],["/tag/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-Dtrx9M88.js"),__vite__mapDeps([347,1])),meta:{t:"标签: 发布订阅模式",I:!1}}],["/tag/%E6%A8%A1%E5%9D%97%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html--YqCTUsR.js"),__vite__mapDeps([348,1])),meta:{t:"标签: 模块模式",I:!1}}],["/tag/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-DCps7XFk.js"),__vite__mapDeps([349,1])),meta:{t:"标签: 桥接模式",I:!1}}],["/tag/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-DuEHaAio.js"),__vite__mapDeps([350,1])),meta:{t:"标签: 组合模式",I:!1}}],["/tag/%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-5e1swOQ1.js"),__vite__mapDeps([351,1])),meta:{t:"标签: 模板方法模式",I:!1}}],["/tag/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/",{loader:()=>B(()=>import("./index.html-CB3pd4IR.js"),__vite__mapDeps([352,1])),meta:{t:"标签: 职责链模式",I:!1}}],["/tag/%E8%BD%AF%E8%80%83/",{loader:()=>B(()=>import("./index.html-CxgiWyYU.js"),__vite__mapDeps([353,1])),meta:{t:"标签: 软考",I:!1}}],["/tag/lod/",{loader:()=>B(()=>import("./index.html-DHTkPuJc.js"),__vite__mapDeps([354,1])),meta:{t:"标签: Lod",I:!1}}],["/tag/%E5%85%AB%E5%8F%89%E6%A0%91%E6%A3%80%E6%B5%8B/",{loader:()=>B(()=>import("./index.html-B2iGZHea.js"),__vite__mapDeps([355,1])),meta:{t:"标签: 八叉树检测",I:!1}}],["/tag/%E5%87%A0%E4%BD%95%E4%BD%93/",{loader:()=>B(()=>import("./index.html-p-ZkBbST.js"),__vite__mapDeps([356,1])),meta:{t:"标签: 几何体",I:!1}}],["/tag/%E5%8A%A0%E8%BD%BD%E5%99%A8/",{loader:()=>B(()=>import("./index.html-JzdytXEk.js"),__vite__mapDeps([357,1])),meta:{t:"标签: 加载器",I:!1}}],["/tag/%E5%8A%A8%E7%94%BB/",{loader:()=>B(()=>import("./index.html-CvOG0uEg.js"),__vite__mapDeps([358,1])),meta:{t:"标签: 动画",I:!1}}],["/tag/%E5%B0%84%E7%BA%BF%E6%A3%80%E6%B5%8B/",{loader:()=>B(()=>import("./index.html-aiWwdZ_f.js"),__vite__mapDeps([359,1])),meta:{t:"标签: 射线检测",I:!1}}],["/tag/%E5%9C%BA%E6%99%AF/",{loader:()=>B(()=>import("./index.html-D5X2qbHN.js"),__vite__mapDeps([360,1])),meta:{t:"标签: 场景",I:!1}}],["/tag/clock/",{loader:()=>B(()=>import("./index.html-CX8zd0e0.js"),__vite__mapDeps([361,1])),meta:{t:"标签: Clock",I:!1}}],["/tag/%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8/",{loader:()=>B(()=>import("./index.html-CLVhQQ-U.js"),__vite__mapDeps([362,1])),meta:{t:"标签: 轨道控制器",I:!1}}],["/tag/%E6%91%84%E5%83%8F%E6%9C%BA/",{loader:()=>B(()=>import("./index.html-DzhYZwli.js"),__vite__mapDeps([363,1])),meta:{t:"标签: 摄像机",I:!1}}],["/tag/%E6%9D%90%E8%B4%A8/",{loader:()=>B(()=>import("./index.html-Czs7I53I.js"),__vite__mapDeps([364,1])),meta:{t:"标签: 材质",I:!1}}],["/tag/%E6%B8%B2%E6%9F%93%E5%99%A8/",{loader:()=>B(()=>import("./index.html-BQXflX6a.js"),__vite__mapDeps([365,1])),meta:{t:"标签: 渲染器",I:!1}}],["/tag/%E7%81%AF%E5%85%89/",{loader:()=>B(()=>import("./index.html-AJ1DsWQ5.js"),__vite__mapDeps([366,1])),meta:{t:"标签: 灯光",I:!1}}],["/article/",{loader:()=>B(()=>import("./index.html-DZbqJMJX.js"),__vite__mapDeps([367,1])),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>B(()=>import("./index.html-BCdIIpJa.js"),__vite__mapDeps([368,1])),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>B(()=>import("./index.html-Czq-bIFd.js"),__vite__mapDeps([369,1])),meta:{t:"时间轴",I:!1}}]]);/*!
  * vue-router v4.4.4
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const Sa=typeof document<"u";function Kp(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function l8(s){return s.__esModule||s[Symbol.toStringTag]==="Module"||s.default&&Kp(s.default)}const gs=Object.assign;function lt(s,i){const a={};for(const n in i){const e=i[n];a[n]=Ci(e)?e.map(s):s(e)}return a}const yn=()=>{},Ci=Array.isArray,Yp=/#/g,h8=/&/g,r8=/\//g,p8=/=/g,k8=/\?/g,Qp=/\+/g,d8=/%5B/g,o8=/%5D/g,Xp=/%5E/g,c8=/%60/g,Zp=/%7B/g,B8=/%7C/g,sk=/%7D/g,A8=/%20/g;function Fl(s){return encodeURI(""+s).replace(B8,"|").replace(d8,"[").replace(o8,"]")}function g8(s){return Fl(s).replace(Zp,"{").replace(sk,"}").replace(Xp,"^")}function Rt(s){return Fl(s).replace(Qp,"%2B").replace(A8,"+").replace(Yp,"%23").replace(h8,"%26").replace(c8,"`").replace(Zp,"{").replace(sk,"}").replace(Xp,"^")}function y8(s){return Rt(s).replace(p8,"%3D")}function u8(s){return Fl(s).replace(Yp,"%23").replace(k8,"%3F")}function E8(s){return s==null?"":u8(s).replace(r8,"%2F")}function Dn(s){try{return decodeURIComponent(""+s)}catch{}return""+s}const m8=/\/$/,v8=s=>s.replace(m8,"");function ht(s,i,a="/"){let n,e={},t="",l="";const r=i.indexOf("#");let p=i.indexOf("?");return r<p&&r>=0&&(p=-1),p>-1&&(n=i.slice(0,p),t=i.slice(p+1,r>-1?r:i.length),e=s(t)),r>-1&&(n=n||i.slice(0,r),l=i.slice(r,i.length)),n=b8(n??i,a),{fullPath:n+(t&&"?")+t+l,path:n,query:e,hash:Dn(l)}}function f8(s,i){const a=i.query?s(i.query):"";return i.path+(a&&"?")+a+(i.hash||"")}function Nh(s,i){return!i||!s.toLowerCase().startsWith(i.toLowerCase())?s:s.slice(i.length)||"/"}function F8(s,i,a){const n=i.matched.length-1,e=a.matched.length-1;return n>-1&&n===e&&Qa(i.matched[n],a.matched[e])&&ik(i.params,a.params)&&s(i.query)===s(a.query)&&i.hash===a.hash}function Qa(s,i){return(s.aliasOf||s)===(i.aliasOf||i)}function ik(s,i){if(Object.keys(s).length!==Object.keys(i).length)return!1;for(const a in s)if(!C8(s[a],i[a]))return!1;return!0}function C8(s,i){return Ci(s)?zh(s,i):Ci(i)?zh(i,s):s===i}function zh(s,i){return Ci(i)?s.length===i.length&&s.every((a,n)=>a===i[n]):s.length===1&&s[0]===i}function b8(s,i){if(s.startsWith("/"))return s;if(!s)return i;const a=i.split("/"),n=s.split("/"),e=n[n.length-1];(e===".."||e===".")&&n.push("");let t=a.length-1,l,r;for(l=0;l<n.length;l++)if(r=n[l],r!==".")if(r==="..")t>1&&t--;else break;return a.slice(0,t).join("/")+"/"+n.slice(l).join("/")}const zi={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0};var _n;(function(s){s.pop="pop",s.push="push"})(_n||(_n={}));var un;(function(s){s.back="back",s.forward="forward",s.unknown=""})(un||(un={}));function D8(s){if(!s)if(Sa){const i=document.querySelector("base");s=i&&i.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),v8(s)}const _8=/^[^#]+#/;function x8(s,i){return s.replace(_8,"#")+i}function w8(s,i){const a=document.documentElement.getBoundingClientRect(),n=s.getBoundingClientRect();return{behavior:i.behavior,left:n.left-a.left-(i.left||0),top:n.top-a.top-(i.top||0)}}const Se=()=>({left:window.scrollX,top:window.scrollY});function T8(s){let i;if("el"in s){const a=s.el,n=typeof a=="string"&&a.startsWith("#"),e=typeof a=="string"?n?document.getElementById(a.slice(1)):document.querySelector(a):a;if(!e)return;i=w8(e,s)}else i=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(i):window.scrollTo(i.left!=null?i.left:window.scrollX,i.top!=null?i.top:window.scrollY)}function Gh(s,i){return(history.state?history.state.position-i:-1)+s}const jt=new Map;function L8(s,i){jt.set(s,i)}function R8(s){const i=jt.get(s);return jt.delete(s),i}let j8=()=>location.protocol+"//"+location.host;function ak(s,i){const{pathname:a,search:n,hash:e}=i,t=s.indexOf("#");if(t>-1){let r=e.includes(s.slice(t))?s.slice(t).length:1,p=e.slice(r);return p[0]!=="/"&&(p="/"+p),Nh(p,"")}return Nh(a,s)+n+e}function O8(s,i,a,n){let e=[],t=[],l=null;const r=({state:c})=>{const A=ak(s,location),y=a.value,m=i.value;let f=0;if(c){if(a.value=A,i.value=c,l&&l===y){l=null;return}f=m?c.position-m.position:0}else n(A);e.forEach(v=>{v(a.value,y,{delta:f,type:_n.pop,direction:f?f>0?un.forward:un.back:un.unknown})})};function p(){l=a.value}function k(c){e.push(c);const A=()=>{const y=e.indexOf(c);y>-1&&e.splice(y,1)};return t.push(A),A}function d(){const{history:c}=window;c.state&&c.replaceState(gs({},c.state,{scroll:Se()}),"")}function o(){for(const c of t)c();t=[],window.removeEventListener("popstate",r),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",r),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:p,listen:k,destroy:o}}function Uh(s,i,a,n=!1,e=!1){return{back:s,current:i,forward:a,replaced:n,position:window.history.length,scroll:e?Se():null}}function S8(s){const{history:i,location:a}=window,n={value:ak(s,a)},e={value:i.state};e.value||t(n.value,{back:null,current:n.value,forward:null,position:i.length-1,replaced:!0,scroll:null},!0);function t(p,k,d){const o=s.indexOf("#"),c=o>-1?(a.host&&document.querySelector("base")?s:s.slice(o))+p:j8()+s+p;try{i[d?"replaceState":"pushState"](k,"",c),e.value=k}catch(A){console.error(A),a[d?"replace":"assign"](c)}}function l(p,k){const d=gs({},i.state,Uh(e.value.back,p,e.value.forward,!0),k,{position:e.value.position});t(p,d,!0),n.value=p}function r(p,k){const d=gs({},e.value,i.state,{forward:p,scroll:Se()});t(d.current,d,!0);const o=gs({},Uh(n.value,p,null),{position:d.position+1},k);t(p,o,!1),n.value=p}return{location:n,state:e,push:r,replace:l}}function I8(s){s=D8(s);const i=S8(s),a=O8(s,i.state,i.location,i.replace);function n(t,l=!0){l||a.pauseListeners(),history.go(t)}const e=gs({location:"",base:s,go:n,createHref:x8.bind(null,s)},i,a);return Object.defineProperty(e,"location",{enumerable:!0,get:()=>i.location.value}),Object.defineProperty(e,"state",{enumerable:!0,get:()=>i.state.value}),e}function P8(s){return typeof s=="string"||s&&typeof s=="object"}function nk(s){return typeof s=="string"||typeof s=="symbol"}const ek=Symbol("");var Wh;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(Wh||(Wh={}));function Xa(s,i){return gs(new Error,{type:s,[ek]:!0},i)}function $i(s,i){return s instanceof Error&&ek in s&&(i==null||!!(s.type&i))}const qh="[^/]+?",M8={sensitive:!1,strict:!1,start:!0,end:!0},V8=/[.+*?^${}()[\]/\\]/g;function H8(s,i){const a=gs({},M8,i),n=[];let e=a.start?"^":"";const t=[];for(const k of s){const d=k.length?[]:[90];a.strict&&!k.length&&(e+="/");for(let o=0;o<k.length;o++){const c=k[o];let A=40+(a.sensitive?.25:0);if(c.type===0)o||(e+="/"),e+=c.value.replace(V8,"\\$&"),A+=40;else if(c.type===1){const{value:y,repeatable:m,optional:f,regexp:v}=c;t.push({name:y,repeatable:m,optional:f});const C=v||qh;if(C!==qh){A+=10;try{new RegExp(`(${C})`)}catch(b){throw new Error(`Invalid custom RegExp for param "${y}" (${C}): `+b.message)}}let E=m?`((?:${C})(?:/(?:${C}))*)`:`(${C})`;o||(E=f&&k.length<2?`(?:/${E})`:"/"+E),f&&(E+="?"),e+=E,A+=20,f&&(A+=-8),m&&(A+=-20),C===".*"&&(A+=-50)}d.push(A)}n.push(d)}if(a.strict&&a.end){const k=n.length-1;n[k][n[k].length-1]+=.7000000000000001}a.strict||(e+="/?"),a.end?e+="$":a.strict&&(e+="(?:/|$)");const l=new RegExp(e,a.sensitive?"":"i");function r(k){const d=k.match(l),o={};if(!d)return null;for(let c=1;c<d.length;c++){const A=d[c]||"",y=t[c-1];o[y.name]=A&&y.repeatable?A.split("/"):A}return o}function p(k){let d="",o=!1;for(const c of s){(!o||!d.endsWith("/"))&&(d+="/"),o=!1;for(const A of c)if(A.type===0)d+=A.value;else if(A.type===1){const{value:y,repeatable:m,optional:f}=A,v=y in k?k[y]:"";if(Ci(v)&&!m)throw new Error(`Provided param "${y}" is an array but it is not repeatable (* or + modifiers)`);const C=Ci(v)?v.join("/"):v;if(!C)if(f)c.length<2&&(d.endsWith("/")?d=d.slice(0,-1):o=!0);else throw new Error(`Missing required param "${y}"`);d+=C}}return d||"/"}return{re:l,score:n,keys:t,parse:r,stringify:p}}function $8(s,i){let a=0;for(;a<s.length&&a<i.length;){const n=i[a]-s[a];if(n)return n;a++}return s.length<i.length?s.length===1&&s[0]===80?-1:1:s.length>i.length?i.length===1&&i[0]===80?1:-1:0}function tk(s,i){let a=0;const n=s.score,e=i.score;for(;a<n.length&&a<e.length;){const t=$8(n[a],e[a]);if(t)return t;a++}if(Math.abs(e.length-n.length)===1){if(Jh(n))return 1;if(Jh(e))return-1}return e.length-n.length}function Jh(s){const i=s[s.length-1];return s.length>0&&i[i.length-1]<0}const N8={type:0,value:""},z8=/[a-zA-Z0-9_]/;function G8(s){if(!s)return[[]];if(s==="/")return[[N8]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function i(A){throw new Error(`ERR (${a})/"${k}": ${A}`)}let a=0,n=a;const e=[];let t;function l(){t&&e.push(t),t=[]}let r=0,p,k="",d="";function o(){k&&(a===0?t.push({type:0,value:k}):a===1||a===2||a===3?(t.length>1&&(p==="*"||p==="+")&&i(`A repeatable param (${k}) must be alone in its segment. eg: '/:ids+.`),t.push({type:1,value:k,regexp:d,repeatable:p==="*"||p==="+",optional:p==="*"||p==="?"})):i("Invalid state to consume buffer"),k="")}function c(){k+=p}for(;r<s.length;){if(p=s[r++],p==="\\"&&a!==2){n=a,a=4;continue}switch(a){case 0:p==="/"?(k&&o(),l()):p===":"?(o(),a=1):c();break;case 4:c(),a=n;break;case 1:p==="("?a=2:z8.test(p)?c():(o(),a=0,p!=="*"&&p!=="?"&&p!=="+"&&r--);break;case 2:p===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+p:a=3:d+=p;break;case 3:o(),a=0,p!=="*"&&p!=="?"&&p!=="+"&&r--,d="";break;default:i("Unknown state");break}}return a===2&&i(`Unfinished custom RegExp for param "${k}"`),o(),l(),e}function U8(s,i,a){const n=H8(G8(s.path),a),e=gs(n,{record:s,parent:i,children:[],alias:[]});return i&&!e.record.aliasOf==!i.record.aliasOf&&i.children.push(e),e}function W8(s,i){const a=[],n=new Map;i=Qh({strict:!1,end:!0,sensitive:!1},i);function e(o){return n.get(o)}function t(o,c,A){const y=!A,m=q8(o);m.aliasOf=A&&A.record;const f=Qh(i,o),v=[m];if("alias"in o){const b=typeof o.alias=="string"?[o.alias]:o.alias;for(const O of b)v.push(gs({},m,{components:A?A.record.components:m.components,path:O,aliasOf:A?A.record:m}))}let C,E;for(const b of v){const{path:O}=b;if(c&&O[0]!=="/"){const U=c.record.path,P=U[U.length-1]==="/"?"":"/";b.path=c.record.path+(O&&P+O)}if(C=U8(b,c,f),A?A.alias.push(C):(E=E||C,E!==C&&E.alias.push(C),y&&o.name&&!Yh(C)&&l(o.name)),lk(C)&&p(C),m.children){const U=m.children;for(let P=0;P<U.length;P++)t(U[P],C,A&&A.children[P])}A=A||C}return E?()=>{l(E)}:yn}function l(o){if(nk(o)){const c=n.get(o);c&&(n.delete(o),a.splice(a.indexOf(c),1),c.children.forEach(l),c.alias.forEach(l))}else{const c=a.indexOf(o);c>-1&&(a.splice(c,1),o.record.name&&n.delete(o.record.name),o.children.forEach(l),o.alias.forEach(l))}}function r(){return a}function p(o){const c=Y8(o,a);a.splice(c,0,o),o.record.name&&!Yh(o)&&n.set(o.record.name,o)}function k(o,c){let A,y={},m,f;if("name"in o&&o.name){if(A=n.get(o.name),!A)throw Xa(1,{location:o});f=A.record.name,y=gs(Kh(c.params,A.keys.filter(E=>!E.optional).concat(A.parent?A.parent.keys.filter(E=>E.optional):[]).map(E=>E.name)),o.params&&Kh(o.params,A.keys.map(E=>E.name))),m=A.stringify(y)}else if(o.path!=null)m=o.path,A=a.find(E=>E.re.test(m)),A&&(y=A.parse(m),f=A.record.name);else{if(A=c.name?n.get(c.name):a.find(E=>E.re.test(c.path)),!A)throw Xa(1,{location:o,currentLocation:c});f=A.record.name,y=gs({},c.params,o.params),m=A.stringify(y)}const v=[];let C=A;for(;C;)v.unshift(C.record),C=C.parent;return{name:f,path:m,params:y,matched:v,meta:K8(v)}}s.forEach(o=>t(o));function d(){a.length=0,n.clear()}return{addRoute:t,resolve:k,removeRoute:l,clearRoutes:d,getRoutes:r,getRecordMatcher:e}}function Kh(s,i){const a={};for(const n of i)n in s&&(a[n]=s[n]);return a}function q8(s){return{path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:void 0,beforeEnter:s.beforeEnter,props:J8(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},mods:{},components:"components"in s?s.components||null:s.component&&{default:s.component}}}function J8(s){const i={},a=s.props||!1;if("component"in s)i.default=a;else for(const n in s.components)i[n]=typeof a=="object"?a[n]:a;return i}function Yh(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function K8(s){return s.reduce((i,a)=>gs(i,a.meta),{})}function Qh(s,i){const a={};for(const n in s)a[n]=n in i?i[n]:s[n];return a}function Y8(s,i){let a=0,n=i.length;for(;a!==n;){const t=a+n>>1;tk(s,i[t])<0?n=t:a=t+1}const e=Q8(s);return e&&(n=i.lastIndexOf(e,n-1)),n}function Q8(s){let i=s;for(;i=i.parent;)if(lk(i)&&tk(s,i)===0)return i}function lk({record:s}){return!!(s.name||s.components&&Object.keys(s.components).length||s.redirect)}function X8(s){const i={};if(s===""||s==="?")return i;const n=(s[0]==="?"?s.slice(1):s).split("&");for(let e=0;e<n.length;++e){const t=n[e].replace(Qp," "),l=t.indexOf("="),r=Dn(l<0?t:t.slice(0,l)),p=l<0?null:Dn(t.slice(l+1));if(r in i){let k=i[r];Ci(k)||(k=i[r]=[k]),k.push(p)}else i[r]=p}return i}function Xh(s){let i="";for(let a in s){const n=s[a];if(a=y8(a),n==null){n!==void 0&&(i+=(i.length?"&":"")+a);continue}(Ci(n)?n.map(t=>t&&Rt(t)):[n&&Rt(n)]).forEach(t=>{t!==void 0&&(i+=(i.length?"&":"")+a,t!=null&&(i+="="+t))})}return i}function Z8(s){const i={};for(const a in s){const n=s[a];n!==void 0&&(i[a]=Ci(n)?n.map(e=>e==null?null:""+e):n==null?n:""+n)}return i}const s3=Symbol(""),Zh=Symbol(""),Ie=Symbol(""),Cl=Symbol(""),Ot=Symbol("");function pn(){let s=[];function i(n){return s.push(n),()=>{const e=s.indexOf(n);e>-1&&s.splice(e,1)}}function a(){s=[]}return{add:i,list:()=>s.slice(),reset:a}}function aa(s,i,a,n,e,t=l=>l()){const l=n&&(n.enterCallbacks[e]=n.enterCallbacks[e]||[]);return()=>new Promise((r,p)=>{const k=c=>{c===!1?p(Xa(4,{from:a,to:i})):c instanceof Error?p(c):P8(c)?p(Xa(2,{from:i,to:c})):(l&&n.enterCallbacks[e]===l&&typeof c=="function"&&l.push(c),r())},d=t(()=>s.call(n&&n.instances[e],i,a,k));let o=Promise.resolve(d);s.length<3&&(o=o.then(k)),o.catch(c=>p(c))})}function rt(s,i,a,n,e=t=>t()){const t=[];for(const l of s)for(const r in l.components){let p=l.components[r];if(!(i!=="beforeRouteEnter"&&!l.instances[r]))if(Kp(p)){const d=(p.__vccOpts||p)[i];d&&t.push(aa(d,a,n,l,r,e))}else{let k=p();t.push(()=>k.then(d=>{if(!d)throw new Error(`Couldn't resolve component "${r}" at "${l.path}"`);const o=l8(d)?d.default:d;l.mods[r]=d,l.components[r]=o;const A=(o.__vccOpts||o)[i];return A&&aa(A,a,n,l,r,e)()}))}}return t}function sr(s){const i=fs(Ie),a=fs(Cl),n=F(()=>{const p=Ea(s.to);return i.resolve(p)}),e=F(()=>{const{matched:p}=n.value,{length:k}=p,d=p[k-1],o=a.matched;if(!d||!o.length)return-1;const c=o.findIndex(Qa.bind(null,d));if(c>-1)return c;const A=ir(p[k-2]);return k>1&&ir(d)===A&&o[o.length-1].path!==A?o.findIndex(Qa.bind(null,p[k-2])):c}),t=F(()=>e.value>-1&&e3(a.params,n.value.params)),l=F(()=>e.value>-1&&e.value===a.matched.length-1&&ik(a.params,n.value.params));function r(p={}){return n3(p)?i[Ea(s.replace)?"replace":"push"](Ea(s.to)).catch(yn):Promise.resolve()}return{route:n,href:F(()=>n.value.href),isActive:t,isExactActive:l,navigate:r}}const i3=S({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:sr,setup(s,{slots:i}){const a=On(sr(s)),{options:n}=fs(Ie),e=F(()=>({[ar(s.activeClass,n.linkActiveClass,"router-link-active")]:a.isActive,[ar(s.exactActiveClass,n.linkExactActiveClass,"router-link-exact-active")]:a.isExactActive}));return()=>{const t=i.default&&i.default(a);return s.custom?t:h("a",{"aria-current":a.isExactActive?s.ariaCurrentValue:null,href:a.href,onClick:a.navigate,class:e.value},t)}}}),a3=i3;function n3(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const i=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(i))return}return s.preventDefault&&s.preventDefault(),!0}}function e3(s,i){for(const a in i){const n=i[a],e=s[a];if(typeof n=="string"){if(n!==e)return!1}else if(!Ci(e)||e.length!==n.length||n.some((t,l)=>t!==e[l]))return!1}return!0}function ir(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const ar=(s,i,a)=>s??i??a,t3=S({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:i,slots:a}){const n=fs(Ot),e=F(()=>s.route||n.value),t=fs(Zh,0),l=F(()=>{let k=Ea(t);const{matched:d}=e.value;let o;for(;(o=d[k])&&!o.components;)k++;return k}),r=F(()=>e.value.matched[l.value]);yi(Zh,F(()=>l.value+1)),yi(s3,r),yi(Ot,e);const p=W();return ts(()=>[p.value,r.value,s.name],([k,d,o],[c,A,y])=>{d&&(d.instances[o]=k,A&&A!==d&&k&&k===c&&(d.leaveGuards.size||(d.leaveGuards=A.leaveGuards),d.updateGuards.size||(d.updateGuards=A.updateGuards))),k&&d&&(!A||!Qa(d,A)||!c)&&(d.enterCallbacks[o]||[]).forEach(m=>m(k))},{flush:"post"}),()=>{const k=e.value,d=s.name,o=r.value,c=o&&o.components[d];if(!c)return nr(a.default,{Component:c,route:k});const A=o.props[d],y=A?A===!0?k.params:typeof A=="function"?A(k):A:null,f=h(c,gs({},y,i,{onVnodeUnmounted:v=>{v.component.isUnmounted&&(o.instances[d]=null)},ref:p}));return nr(a.default,{Component:f,route:k})||f}}});function nr(s,i){if(!s)return null;const a=s(i);return a.length===1?a[0]:a}const l3=t3;function h3(s){const i=W8(s.routes,s),a=s.parseQuery||X8,n=s.stringifyQuery||Xh,e=s.history,t=pn(),l=pn(),r=pn(),p=Ls(zi);let k=zi;Sa&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=lt.bind(null,_=>""+_),o=lt.bind(null,E8),c=lt.bind(null,Dn);function A(_,z){let H,J;return nk(_)?(H=i.getRecordMatcher(_),J=z):J=_,i.addRoute(J,H)}function y(_){const z=i.getRecordMatcher(_);z&&i.removeRoute(z)}function m(){return i.getRoutes().map(_=>_.record)}function f(_){return!!i.getRecordMatcher(_)}function v(_,z){if(z=gs({},z||p.value),typeof _=="string"){const u=ht(a,_,z.path),D=i.resolve({path:u.path},z),T=e.createHref(u.fullPath);return gs(u,D,{params:c(D.params),hash:Dn(u.hash),redirectedFrom:void 0,href:T})}let H;if(_.path!=null)H=gs({},_,{path:ht(a,_.path,z.path).path});else{const u=gs({},_.params);for(const D in u)u[D]==null&&delete u[D];H=gs({},_,{params:o(u)}),z.params=o(z.params)}const J=i.resolve(H,z),ps=_.hash||"";J.params=d(c(J.params));const Es=f8(n,gs({},_,{hash:g8(ps),path:J.path})),g=e.createHref(Es);return gs({fullPath:Es,hash:ps,query:n===Xh?Z8(_.query):_.query||{}},J,{redirectedFrom:void 0,href:g})}function C(_){return typeof _=="string"?ht(a,_,p.value.path):gs({},_)}function E(_,z){if(k!==_)return Xa(8,{from:z,to:_})}function b(_){return P(_)}function O(_){return b(gs(C(_),{replace:!0}))}function U(_){const z=_.matched[_.matched.length-1];if(z&&z.redirect){const{redirect:H}=z;let J=typeof H=="function"?H(_):H;return typeof J=="string"&&(J=J.includes("?")||J.includes("#")?J=C(J):{path:J},J.params={}),gs({query:_.query,hash:_.hash,params:J.path!=null?{}:_.params},J)}}function P(_,z){const H=k=v(_),J=p.value,ps=_.state,Es=_.force,g=_.replace===!0,u=U(H);if(u)return P(gs(C(u),{state:typeof u=="object"?gs({},ps,u.state):ps,force:Es,replace:g}),z||H);const D=H;D.redirectedFrom=z;let T;return!Es&&F8(n,J,H)&&(T=Xa(16,{to:D,from:J}),ki(J,J,!0,!1)),(T?Promise.resolve(T):w(D,J)).catch(x=>$i(x)?$i(x,2)?x:wi(x):K(x,D,J)).then(x=>{if(x){if($i(x,2))return P(gs({replace:g},C(x.to),{state:typeof x.to=="object"?gs({},ps,x.to.state):ps,force:Es}),z||D)}else x=j(D,J,!0,g,ps);return $(D,J,x),x})}function Y(_,z){const H=E(_,z);return H?Promise.reject(H):Promise.resolve()}function V(_){const z=Vi.values().next().value;return z&&typeof z.runWithContext=="function"?z.runWithContext(_):_()}function w(_,z){let H;const[J,ps,Es]=r3(_,z);H=rt(J.reverse(),"beforeRouteLeave",_,z);for(const u of J)u.leaveGuards.forEach(D=>{H.push(aa(D,_,z))});const g=Y.bind(null,_,z);return H.push(g),Vs(H).then(()=>{H=[];for(const u of t.list())H.push(aa(u,_,z));return H.push(g),Vs(H)}).then(()=>{H=rt(ps,"beforeRouteUpdate",_,z);for(const u of ps)u.updateGuards.forEach(D=>{H.push(aa(D,_,z))});return H.push(g),Vs(H)}).then(()=>{H=[];for(const u of Es)if(u.beforeEnter)if(Ci(u.beforeEnter))for(const D of u.beforeEnter)H.push(aa(D,_,z));else H.push(aa(u.beforeEnter,_,z));return H.push(g),Vs(H)}).then(()=>(_.matched.forEach(u=>u.enterCallbacks={}),H=rt(Es,"beforeRouteEnter",_,z,V),H.push(g),Vs(H))).then(()=>{H=[];for(const u of l.list())H.push(aa(u,_,z));return H.push(g),Vs(H)}).catch(u=>$i(u,8)?u:Promise.reject(u))}function $(_,z,H){r.list().forEach(J=>V(()=>J(_,z,H)))}function j(_,z,H,J,ps){const Es=E(_,z);if(Es)return Es;const g=z===zi,u=Sa?history.state:{};H&&(J||g?e.replace(_.fullPath,gs({scroll:g&&u&&u.scroll},ps)):e.push(_.fullPath,ps)),p.value=_,ki(_,z,H,g),wi()}let X;function Bs(){X||(X=e.listen((_,z,H)=>{if(!Ti.listening)return;const J=v(_),ps=U(J);if(ps){P(gs(ps,{replace:!0}),J).catch(yn);return}k=J;const Es=p.value;Sa&&L8(Gh(Es.fullPath,H.delta),Se()),w(J,Es).catch(g=>$i(g,12)?g:$i(g,2)?(P(g.to,J).then(u=>{$i(u,20)&&!H.delta&&H.type===_n.pop&&e.go(-1,!1)}).catch(yn),Promise.reject()):(H.delta&&e.go(-H.delta,!1),K(g,J,Es))).then(g=>{g=g||j(J,Es,!1),g&&(H.delta&&!$i(g,8)?e.go(-H.delta,!1):H.type===_n.pop&&$i(g,20)&&e.go(-1,!1)),$(J,Es,g)}).catch(yn)}))}let Fs=pn(),q=pn(),is;function K(_,z,H){wi(_);const J=q.list();return J.length?J.forEach(ps=>ps(_,z,H)):console.error(_),Promise.reject(_)}function us(){return is&&p.value!==zi?Promise.resolve():new Promise((_,z)=>{Fs.add([_,z])})}function wi(_){return is||(is=!_,Bs(),Fs.list().forEach(([z,H])=>_?H(_):z()),Fs.reset()),_}function ki(_,z,H,J){const{scrollBehavior:ps}=s;if(!Sa||!ps)return Promise.resolve();const Es=!H&&R8(Gh(_.fullPath,0))||(J||!H)&&history.state&&history.state.scroll||null;return Si().then(()=>ps(_,z,Es)).then(g=>g&&T8(g)).catch(g=>K(g,_,z))}const Ps=_=>e.go(_);let Zs;const Vi=new Set,Ti={currentRoute:p,listening:!0,addRoute:A,removeRoute:y,clearRoutes:i.clearRoutes,hasRoute:f,getRoutes:m,resolve:v,options:s,push:b,replace:O,go:Ps,back:()=>Ps(-1),forward:()=>Ps(1),beforeEach:t.add,beforeResolve:l.add,afterEach:r.add,onError:q.add,isReady:us,install(_){const z=this;_.component("RouterLink",a3),_.component("RouterView",l3),_.config.globalProperties.$router=z,Object.defineProperty(_.config.globalProperties,"$route",{enumerable:!0,get:()=>Ea(p)}),Sa&&!Zs&&p.value===zi&&(Zs=!0,b(e.location).catch(ps=>{}));const H={};for(const ps in zi)Object.defineProperty(H,ps,{get:()=>p.value[ps],enumerable:!0});_.provide(Ie,z),_.provide(Cl,Yr(H)),_.provide(Ot,p);const J=_.unmount;Vi.add(_),_.unmount=function(){Vi.delete(_),Vi.size<1&&(k=zi,X&&X(),X=null,p.value=zi,Zs=!1,is=!1),J()}}};function Vs(_){return _.reduce((z,H)=>z.then(()=>V(H)),Promise.resolve())}return Ti}function r3(s,i){const a=[],n=[],e=[],t=Math.max(i.matched.length,s.matched.length);for(let l=0;l<t;l++){const r=i.matched[l];r&&(s.matched.find(k=>Qa(k,r))?n.push(r):a.push(r));const p=s.matched[l];p&&(i.matched.find(k=>Qa(k,p))||e.push(p))}return[a,n,e]}function Da(){return fs(Ie)}function Ii(s){return fs(Cl)}var bl=Symbol(""),_i=()=>{const s=fs(bl);if(!s)throw new Error("useClientData() is called without provider.");return s},p3=()=>_i().pageComponent,xs=()=>_i().pageData,cs=()=>_i().pageFrontmatter,k3=()=>_i().pageHead,hk=()=>_i().pageLang,d3=()=>_i().pageLayout,Pi=()=>_i().routeLocale,o3=()=>_i().routePath,c3=()=>_i().routes,rk=()=>_i().siteData,tn=()=>_i().siteLocaleData,B3=Symbol(""),St=Ls(e8),Wa=Ls(t8),pk=(s,i)=>{const a=Jc(s,i);if(Wa.value[a])return a;const n=encodeURI(a);if(Wa.value[n])return n;const e=St.value[a]||St.value[n];return e||a},ui=(s,i)=>{const{pathname:a,hashAndQueries:n}=Wp(s),e=pk(a,i),t=e+n;return Wa.value[e]?{...Wa.value[e],path:t,notFound:!1}:{...Wa.value["/404.html"],path:t,notFound:!0}},A3=(s,i)=>{const{pathname:a,hashAndQueries:n}=Wp(s);return pk(a,i)+n},g3=s=>{if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget){const i=s.currentTarget.getAttribute("target");if(i!=null&&i.match(/\b_blank\b/i))return}return s.preventDefault(),!0}},Rs=S({name:"RouteLink",props:{to:{type:String,required:!0},active:Boolean,activeClass:{type:String,default:"route-link-active"}},slots:Object,setup(s,{slots:i}){const a=Da(),n=Ii(),e=F(()=>s.to.startsWith("#")||s.to.startsWith("?")?s.to:`/${A3(s.to,n.path).substring(1)}`);return()=>{var t;return h("a",{class:["route-link",{[s.activeClass]:s.active}],href:e.value,onClick:(l={})=>{g3(l)&&a.push(s.to).catch()}},(t=i.default)==null?void 0:t.call(i))}}}),y3=S({name:"AutoLink",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:i}){const a=an(s,"config"),n=Ii(),e=rk(),t=F(()=>Hn(a.value.link)),l=F(()=>a.value.target||(t.value?"_blank":void 0)),r=F(()=>l.value==="_blank"),p=F(()=>!t.value&&!r.value),k=F(()=>a.value.rel||(r.value?"noopener noreferrer":null)),d=F(()=>a.value.ariaLabel??a.value.text),o=F(()=>{if(a.value.exact)return!1;const A=Object.keys(e.value.locales);return A.length?A.every(y=>y!==a.value.link):a.value.link!=="/"}),c=F(()=>p.value?a.value.activeMatch?(a.value.activeMatch instanceof RegExp?a.value.activeMatch:new RegExp(a.value.activeMatch,"u")).test(n.path):o.value?n.path.startsWith(a.value.link):n.path===a.value.link:!1);return()=>{const{before:A,after:y,default:m}=i,f=(m==null?void 0:m(a.value))||[A==null?void 0:A(a.value),a.value.text,y==null?void 0:y(a.value)];return p.value?h(Rs,{class:"auto-link",to:a.value.link,active:c.value,"aria-label":d.value},()=>f):h("a",{class:"auto-link external-link",href:a.value.link,"aria-label":d.value,rel:k.value,target:l.value},f)}}}),Pe=S({name:"ClientOnly",setup(s,i){const a=W(!1);return ys(()=>{a.value=!0}),()=>{var n,e;return a.value?(e=(n=i.slots).default)==null?void 0:e.call(n):null}}}),kk=S({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(s){const i=p3(),a=F(()=>{if(!s.path)return i.value;const n=ui(s.path);return gl(()=>n.loader().then(({comp:e})=>e))});return()=>h(a.value)}}),u3="Layout",E3="en-US",Ba=On({resolveLayouts:s=>s.reduce((i,a)=>({...i,...a.layouts}),{}),resolvePageHead:(s,i,a)=>{const n=Ts(i.description)?i.description:a.description,e=[...Array.isArray(i.head)?i.head:[],...a.head,["title",{},s],["meta",{name:"description",content:n}]];return s8(e)},resolvePageHeadTitle:(s,i)=>[s.title,i.title].filter(a=>!!a).join(" | "),resolvePageLang:(s,i)=>s.lang||i.lang||E3,resolvePageLayout:(s,i)=>{const a=Ts(s.frontmatter.layout)?s.frontmatter.layout:u3;if(!i[a])throw new Error(`[vuepress] Cannot resolve layout: ${a}`);return i[a]},resolveRouteLocale:(s,i)=>Kc(s,decodeURI(i)),resolveSiteLocaleData:({base:s,locales:i,...a},n)=>{var e;return{...a,...i[n],head:[...((e=i[n])==null?void 0:e.head)??[],...a.head??[]]}}}),xi=(s={})=>s,vs=s=>ba(s)?s:`/${Jp(s)}`;const m3=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),v3=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"})),ka=s=>{const i=Pi();return F(()=>s[i.value]??{})};var li=Uint8Array,Ma=Uint16Array,f3=Int32Array,dk=new li([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ok=new li([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),F3=new li([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ck=function(s,i){for(var a=new Ma(31),n=0;n<31;++n)a[n]=i+=1<<s[n-1];for(var e=new f3(a[30]),n=1;n<30;++n)for(var t=a[n];t<a[n+1];++t)e[t]=t-a[n]<<5|n;return{b:a,r:e}},Bk=ck(dk,2),Ak=Bk.b,C3=Bk.r;Ak[28]=258,C3[258]=28;var b3=ck(ok,0),D3=b3.b,It=new Ma(32768);for(var Ds=0;Ds<32768;++Ds){var Yi=(Ds&43690)>>1|(Ds&21845)<<1;Yi=(Yi&52428)>>2|(Yi&13107)<<2,Yi=(Yi&61680)>>4|(Yi&3855)<<4,It[Ds]=((Yi&65280)>>8|(Yi&255)<<8)>>1}var En=function(s,i,a){for(var n=s.length,e=0,t=new Ma(i);e<n;++e)s[e]&&++t[s[e]-1];var l=new Ma(i);for(e=1;e<i;++e)l[e]=l[e-1]+t[e-1]<<1;var r;if(a){r=new Ma(1<<i);var p=15-i;for(e=0;e<n;++e)if(s[e])for(var k=e<<4|s[e],d=i-s[e],o=l[s[e]-1]++<<d,c=o|(1<<d)-1;o<=c;++o)r[It[o]>>p]=k}else for(r=new Ma(n),e=0;e<n;++e)s[e]&&(r[e]=It[l[s[e]-1]++]>>15-s[e]);return r},$n=new li(288);for(var Ds=0;Ds<144;++Ds)$n[Ds]=8;for(var Ds=144;Ds<256;++Ds)$n[Ds]=9;for(var Ds=256;Ds<280;++Ds)$n[Ds]=7;for(var Ds=280;Ds<288;++Ds)$n[Ds]=8;var gk=new li(32);for(var Ds=0;Ds<32;++Ds)gk[Ds]=5;var _3=En($n,9,1),x3=En(gk,5,1),pt=function(s){for(var i=s[0],a=1;a<s.length;++a)s[a]>i&&(i=s[a]);return i},mi=function(s,i,a){var n=i/8|0;return(s[n]|s[n+1]<<8)>>(i&7)&a},kt=function(s,i){var a=i/8|0;return(s[a]|s[a+1]<<8|s[a+2]<<16)>>(i&7)},w3=function(s){return(s+7)/8|0},yk=function(s,i,a){return(i==null||i<0)&&(i=0),(a==null||a>s.length)&&(a=s.length),new li(s.subarray(i,a))},T3=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],ci=function(s,i,a){var n=new Error(i||T3[s]);if(n.code=s,Error.captureStackTrace&&Error.captureStackTrace(n,ci),!a)throw n;return n},L3=function(s,i,a,n){var e=s.length,t=0;if(!e||i.f&&!i.l)return a||new li(0);var l=!a,r=l||i.i!=2,p=i.i;l&&(a=new li(e*3));var k=function(ps){var Es=a.length;if(ps>Es){var g=new li(Math.max(Es*2,ps));g.set(a),a=g}},d=i.f||0,o=i.p||0,c=i.b||0,A=i.l,y=i.d,m=i.m,f=i.n,v=e*8;do{if(!A){d=mi(s,o,1);var C=mi(s,o+1,3);if(o+=3,C)if(C==1)A=_3,y=x3,m=9,f=5;else if(C==2){var U=mi(s,o,31)+257,P=mi(s,o+10,15)+4,Y=U+mi(s,o+5,31)+1;o+=14;for(var V=new li(Y),w=new li(19),$=0;$<P;++$)w[F3[$]]=mi(s,o+$*3,7);o+=P*3;for(var j=pt(w),X=(1<<j)-1,Bs=En(w,j,1),$=0;$<Y;){var Fs=Bs[mi(s,o,X)];o+=Fs&15;var E=Fs>>4;if(E<16)V[$++]=E;else{var q=0,is=0;for(E==16?(is=3+mi(s,o,3),o+=2,q=V[$-1]):E==17?(is=3+mi(s,o,7),o+=3):E==18&&(is=11+mi(s,o,127),o+=7);is--;)V[$++]=q}}var K=V.subarray(0,U),us=V.subarray(U);m=pt(K),f=pt(us),A=En(K,m,1),y=En(us,f,1)}else ci(1);else{var E=w3(o)+4,b=s[E-4]|s[E-3]<<8,O=E+b;if(O>e){p&&ci(0);break}r&&k(c+b),a.set(s.subarray(E,O),c),i.b=c+=b,i.p=o=O*8,i.f=d;continue}if(o>v){p&&ci(0);break}}r&&k(c+131072);for(var wi=(1<<m)-1,ki=(1<<f)-1,Ps=o;;Ps=o){var q=A[kt(s,o)&wi],Zs=q>>4;if(o+=q&15,o>v){p&&ci(0);break}if(q||ci(2),Zs<256)a[c++]=Zs;else if(Zs==256){Ps=o,A=null;break}else{var Vi=Zs-254;if(Zs>264){var $=Zs-257,Ti=dk[$];Vi=mi(s,o,(1<<Ti)-1)+Ak[$],o+=Ti}var Vs=y[kt(s,o)&ki],_=Vs>>4;Vs||ci(3),o+=Vs&15;var us=D3[_];if(_>3){var Ti=ok[_];us+=kt(s,o)&(1<<Ti)-1,o+=Ti}if(o>v){p&&ci(0);break}r&&k(c+131072);var z=c+Vi;if(c<us){var H=t-us,J=Math.min(us,z);for(H+c<0&&ci(3);c<J;++c)a[c]=n[H+c]}for(;c<z;++c)a[c]=a[c-us]}}i.l=A,i.p=Ps,i.b=c,i.f=d,A&&(d=1,i.m=m,i.d=y,i.n=f)}while(!d);return c!=a.length&&l?yk(a,0,c):a.subarray(0,c)},R3=new li(0),j3=function(s,i){return((s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31)&&ci(6,"invalid zlib data"),(s[1]>>5&1)==+!i&&ci(6,"invalid zlib data: "+(s[1]&32?"need":"unexpected")+" dictionary"),(s[1]>>3&4)+2};function O3(s,i){return L3(s.subarray(j3(s,i),-4),{i:2},i,i)}var Pt=typeof TextDecoder<"u"&&new TextDecoder,S3=0;try{Pt.decode(R3,{stream:!0}),S3=1}catch{}var I3=function(s){for(var i="",a=0;;){var n=s[a++],e=(n>127)+(n>223)+(n>239);if(a+e>s.length)return{s:i,r:yk(s,a-1)};e?e==3?(n=((n&15)<<18|(s[a++]&63)<<12|(s[a++]&63)<<6|s[a++]&63)-65536,i+=String.fromCharCode(55296|n>>10,56320|n&1023)):e&1?i+=String.fromCharCode((n&31)<<6|s[a++]&63):i+=String.fromCharCode((n&15)<<12|(s[a++]&63)<<6|s[a++]&63):i+=String.fromCharCode(n)}};function P3(s,i){{for(var a=new li(s.length),n=0;n<s.length;++n)a[n]=s.charCodeAt(n);return a}for(var e=s.length,n=0;n<e;++n);}function M3(s,i){var a;if(Pt)return Pt.decode(s);var n=I3(s),e=n.s,a=n.r;return a.length&&ci(8),e}const er=s=>{const i=atob(s);return M3(O3(P3(i)))},Ks=(s,i)=>{var n;const a=(n=(i==null?void 0:i._instance)||nn())==null?void 0:n.appContext.components;return a?s in a||pi(s)in a||jn(pi(s))in a:!1},uk=s=>new Promise(i=>setTimeout(i,s)),Ek=s=>typeof s<"u",dt=s=>typeof s=="number",Mt=Array.isArray,Za=(s,i)=>Ts(s)&&s.startsWith(i),V3=(s,i)=>Ts(s)&&s.endsWith(i),Nn=Object.entries,bi=Object.keys,H3=Object.values,Dl=s=>{if(s){if(typeof s=="number")return new Date(s);const i=Date.parse(s.toString());if(!Number.isNaN(i))return new Date(i)}return null},Me=s=>Za(s,"/");function _a(s){return Ir()?(fo(s),!0):!1}function Qs(s){return typeof s=="function"?s():Ea(s)}const zn=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const $3=Object.prototype.toString,N3=s=>$3.call(s)==="[object Object]",Wi=()=>{},Vt=z3();function z3(){var s,i;return zn&&((s=window==null?void 0:window.navigator)==null?void 0:s.userAgent)&&(/iP(?:ad|hone|od)/.test(window.navigator.userAgent)||((i=window==null?void 0:window.navigator)==null?void 0:i.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function _l(s,i){function a(...n){return new Promise((e,t)=>{Promise.resolve(s(()=>i.apply(this,n),{fn:i,thisArg:this,args:n})).then(e).catch(t)})}return a}const mk=s=>s();function G3(s,i={}){let a,n,e=Wi;const t=r=>{clearTimeout(r),e(),e=Wi};return r=>{const p=Qs(s),k=Qs(i.maxWait);return a&&t(a),p<=0||k!==void 0&&k<=0?(n&&(t(n),n=null),Promise.resolve(r())):new Promise((d,o)=>{e=i.rejectOnCancel?o:d,k&&!n&&(n=setTimeout(()=>{a&&t(a),n=null,d(r())},k)),a=setTimeout(()=>{n&&t(n),n=null,d(r())},p)})}}function U3(...s){let i=0,a,n=!0,e=Wi,t,l,r,p,k;!js(s[0])&&typeof s[0]=="object"?{delay:l,trailing:r=!0,leading:p=!0,rejectOnCancel:k=!1}=s[0]:[l,r=!0,p=!0,k=!1]=s;const d=()=>{a&&(clearTimeout(a),a=void 0,e(),e=Wi)};return c=>{const A=Qs(l),y=Date.now()-i,m=()=>t=c();return d(),A<=0?(i=Date.now(),m()):(y>A&&(p||!n)?(i=Date.now(),m()):r&&(t=new Promise((f,v)=>{e=k?v:f,a=setTimeout(()=>{i=Date.now(),n=!0,f(m()),d()},Math.max(0,A-y))})),!p&&!a&&(a=setTimeout(()=>n=!0,A)),n=!1,t)}}function W3(s=mk){const i=W(!0);function a(){i.value=!1}function n(){i.value=!0}const e=(...t)=>{i.value&&s(...t)};return{isActive:pa(i),pause:a,resume:n,eventFilter:e}}function q3(s){let i;function a(){return i||(i=s()),i}return a.reset=async()=>{const n=i;i=void 0,n&&await n},a}function J3(s){return nn()}function K3(...s){if(s.length!==1)return an(...s);const i=s[0];return typeof i=="function"?pa(Zr(()=>({get:i,set:Wi}))):W(i)}function vk(s,i=200,a={}){return _l(G3(i,a),s)}function Y3(s,i=200,a=!1,n=!0,e=!1){return _l(U3(i,a,n,e),s)}function Q3(s,i,a={}){const{eventFilter:n=mk,...e}=a;return ts(s,_l(n,i),e)}function X3(s,i,a={}){const{eventFilter:n,...e}=a,{eventFilter:t,pause:l,resume:r,isActive:p}=W3(n);return{stop:Q3(s,i,{...e,eventFilter:t}),pause:l,resume:r,isActive:p}}function Ve(s,i=!0,a){J3()?ys(s,a):i?s():Si(s)}function Z3(s,i,a={}){const{immediate:n=!0}=a,e=W(!1);let t=null;function l(){t&&(clearTimeout(t),t=null)}function r(){e.value=!1,l()}function p(...k){l(),e.value=!0,t=setTimeout(()=>{e.value=!1,t=null,s(...k)},Qs(i))}return n&&(e.value=!0,zn&&p()),_a(r),{isPending:pa(e),start:p,stop:r}}function xn(s=!1,i={}){const{truthyValue:a=!0,falsyValue:n=!1}=i,e=js(s),t=W(s);function l(r){if(arguments.length)return t.value=r,t.value;{const p=Qs(a);return t.value=t.value===p?Qs(n):p,t.value}}return e?l:[t,l]}function ri(s){var i;const a=Qs(s);return(i=a==null?void 0:a.$el)!=null?i:a}const Di=zn?window:void 0,fk=zn?window.document:void 0,Fk=zn?window.navigator:void 0;function ws(...s){let i,a,n,e;if(typeof s[0]=="string"||Array.isArray(s[0])?([a,n,e]=s,i=Di):[i,a,n,e]=s,!i)return Wi;Array.isArray(a)||(a=[a]),Array.isArray(n)||(n=[n]);const t=[],l=()=>{t.forEach(d=>d()),t.length=0},r=(d,o,c,A)=>(d.addEventListener(o,c,A),()=>d.removeEventListener(o,c,A)),p=ts(()=>[ri(i),Qs(e)],([d,o])=>{if(l(),!d)return;const c=N3(o)?{...o}:o;t.push(...a.flatMap(A=>n.map(y=>r(d,A,y,c))))},{immediate:!0,flush:"post"}),k=()=>{p(),l()};return _a(k),k}let tr=!1;function sB(s,i,a={}){const{window:n=Di,ignore:e=[],capture:t=!0,detectIframe:l=!1}=a;if(!n)return Wi;Vt&&!tr&&(tr=!0,Array.from(n.document.body.children).forEach(c=>c.addEventListener("click",Wi)),n.document.documentElement.addEventListener("click",Wi));let r=!0;const p=c=>e.some(A=>{if(typeof A=="string")return Array.from(n.document.querySelectorAll(A)).some(y=>y===c.target||c.composedPath().includes(y));{const y=ri(A);return y&&(c.target===y||c.composedPath().includes(y))}}),d=[ws(n,"click",c=>{const A=ri(s);if(!(!A||A===c.target||c.composedPath().includes(A))){if(c.detail===0&&(r=!p(c)),!r){r=!0;return}i(c)}},{passive:!0,capture:t}),ws(n,"pointerdown",c=>{const A=ri(s);r=!p(c)&&!!(A&&!c.composedPath().includes(A))},{passive:!0}),l&&ws(n,"blur",c=>{setTimeout(()=>{var A;const y=ri(s);((A=n.document.activeElement)==null?void 0:A.tagName)==="IFRAME"&&!(y!=null&&y.contains(n.document.activeElement))&&i(c)},0)})].filter(Boolean);return()=>d.forEach(c=>c())}function iB(){const s=W(!1),i=nn();return i&&ys(()=>{s.value=!0},i),s}function Gn(s){const i=iB();return F(()=>(i.value,!!s()))}function xl(s,i={}){const{window:a=Di}=i,n=Gn(()=>a&&"matchMedia"in a&&typeof a.matchMedia=="function");let e;const t=W(!1),l=k=>{t.value=k.matches},r=()=>{e&&("removeEventListener"in e?e.removeEventListener("change",l):e.removeListener(l))},p=xp(()=>{n.value&&(r(),e=a.matchMedia(Qs(s)),"addEventListener"in e?e.addEventListener("change",l):e.addListener(l),t.value=e.matches)});return _a(()=>{p(),r(),e=void 0}),t}function lr(s,i={}){const{controls:a=!1,navigator:n=Fk}=i,e=Gn(()=>n&&"permissions"in n);let t;const l=typeof s=="string"?{name:s}:s,r=W(),p=()=>{t&&(r.value=t.state)},k=q3(async()=>{if(e.value){if(!t)try{t=await n.permissions.query(l),ws(t,"change",p),p()}catch{r.value="prompt"}return t}});return k(),a?{state:r,isSupported:e,query:k}:r}function aB(s={}){const{navigator:i=Fk,read:a=!1,source:n,copiedDuring:e=1500,legacy:t=!1}=s,l=Gn(()=>i&&"clipboard"in i),r=lr("clipboard-read"),p=lr("clipboard-write"),k=F(()=>l.value||t),d=W(""),o=W(!1),c=Z3(()=>o.value=!1,e);function A(){l.value&&v(r.value)?i.clipboard.readText().then(C=>{d.value=C}):d.value=f()}k.value&&a&&ws(["copy","cut"],A);async function y(C=Qs(n)){k.value&&C!=null&&(l.value&&v(p.value)?await i.clipboard.writeText(C):m(C),d.value=C,o.value=!0,c.start())}function m(C){const E=document.createElement("textarea");E.value=C??"",E.style.position="absolute",E.style.opacity="0",document.body.appendChild(E),E.select(),document.execCommand("copy"),E.remove()}function f(){var C,E,b;return(b=(E=(C=document==null?void 0:document.getSelection)==null?void 0:C.call(document))==null?void 0:E.toString())!=null?b:""}function v(C){return C==="granted"||C==="prompt"}return{isSupported:k,text:d,copied:o,copy:y}}const re=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},pe="__vueuse_ssr_handlers__",nB=eB();function eB(){return pe in re||(re[pe]=re[pe]||{}),re[pe]}function tB(s,i){return nB[s]||i}function lB(s){return s==null?"any":s instanceof Set?"set":s instanceof Map?"map":s instanceof Date?"date":typeof s=="boolean"?"boolean":typeof s=="string"?"string":typeof s=="object"?"object":Number.isNaN(s)?"any":"number"}const hB={boolean:{read:s=>s==="true",write:s=>String(s)},object:{read:s=>JSON.parse(s),write:s=>JSON.stringify(s)},number:{read:s=>Number.parseFloat(s),write:s=>String(s)},any:{read:s=>s,write:s=>String(s)},string:{read:s=>s,write:s=>String(s)},map:{read:s=>new Map(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s.entries()))},set:{read:s=>new Set(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s))},date:{read:s=>new Date(s),write:s=>s.toISOString()}},hr="vueuse-storage";function xa(s,i,a,n={}){var e;const{flush:t="pre",deep:l=!0,listenToStorageChanges:r=!0,writeDefaults:p=!0,mergeDefaults:k=!1,shallow:d,window:o=Di,eventFilter:c,onError:A=w=>{console.error(w)},initOnMounted:y}=n,m=(d?Ls:W)(typeof i=="function"?i():i);if(!a)try{a=tB("getDefaultStorage",()=>{var w;return(w=Di)==null?void 0:w.localStorage})()}catch(w){A(w)}if(!a)return m;const f=Qs(i),v=lB(f),C=(e=n.serializer)!=null?e:hB[v],{pause:E,resume:b}=X3(m,()=>U(m.value),{flush:t,deep:l,eventFilter:c});o&&r&&Ve(()=>{ws(o,"storage",Y),ws(o,hr,V),y&&Y()}),y||Y();function O(w,$){o&&o.dispatchEvent(new CustomEvent(hr,{detail:{key:s,oldValue:w,newValue:$,storageArea:a}}))}function U(w){try{const $=a.getItem(s);if(w==null)O($,null),a.removeItem(s);else{const j=C.write(w);$!==j&&(a.setItem(s,j),O($,j))}}catch($){A($)}}function P(w){const $=w?w.newValue:a.getItem(s);if($==null)return p&&f!=null&&a.setItem(s,C.write(f)),f;if(!w&&k){const j=C.read($);return typeof k=="function"?k(j,f):v==="object"&&!Array.isArray(j)?{...f,...j}:j}else return typeof $!="string"?$:C.read($)}function Y(w){if(!(w&&w.storageArea!==a)){if(w&&w.key==null){m.value=f;return}if(!(w&&w.key!==s)){E();try{(w==null?void 0:w.newValue)!==C.write(m.value)&&(m.value=P(w))}catch($){A($)}finally{w?Si(b):b()}}}}function V(w){Y(w.detail)}return m}function rB(s){return xl("(prefers-color-scheme: dark)",s)}function pB(s,i,a={}){const{window:n=Di,...e}=a;let t;const l=Gn(()=>n&&"ResizeObserver"in n),r=()=>{t&&(t.disconnect(),t=void 0)},p=F(()=>Array.isArray(s)?s.map(o=>ri(o)):[ri(s)]),k=ts(p,o=>{if(r(),l.value&&n){t=new ResizeObserver(i);for(const c of o)c&&t.observe(c,e)}},{immediate:!0,flush:"post"}),d=()=>{r(),k()};return _a(d),{isSupported:l,stop:d}}function kB(s,i={width:0,height:0},a={}){const{window:n=Di,box:e="content-box"}=a,t=F(()=>{var o,c;return(c=(o=ri(s))==null?void 0:o.namespaceURI)==null?void 0:c.includes("svg")}),l=W(i.width),r=W(i.height),{stop:p}=pB(s,([o])=>{const c=e==="border-box"?o.borderBoxSize:e==="content-box"?o.contentBoxSize:o.devicePixelContentBoxSize;if(n&&t.value){const A=ri(s);if(A){const y=A.getBoundingClientRect();l.value=y.width,r.value=y.height}}else if(c){const A=Array.isArray(c)?c:[c];l.value=A.reduce((y,{inlineSize:m})=>y+m,0),r.value=A.reduce((y,{blockSize:m})=>y+m,0)}else l.value=o.contentRect.width,r.value=o.contentRect.height},a);Ve(()=>{const o=ri(s);o&&(l.value="offsetWidth"in o?o.offsetWidth:i.width,r.value="offsetHeight"in o?o.offsetHeight:i.height)});const k=ts(()=>ri(s),o=>{l.value=o?i.width:0,r.value=o?i.height:0});function d(){p(),k()}return{width:l,height:r,stop:d}}const rr=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function wl(s,i={}){const{document:a=fk,autoExit:n=!1}=i,e=F(()=>{var v;return(v=ri(s))!=null?v:a==null?void 0:a.querySelector("html")}),t=W(!1),l=F(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(v=>a&&v in a||e.value&&v in e.value)),r=F(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(v=>a&&v in a||e.value&&v in e.value)),p=F(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(v=>a&&v in a||e.value&&v in e.value)),k=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(v=>a&&v in a),d=Gn(()=>e.value&&a&&l.value!==void 0&&r.value!==void 0&&p.value!==void 0),o=()=>k?(a==null?void 0:a[k])===e.value:!1,c=()=>{if(p.value){if(a&&a[p.value]!=null)return a[p.value];{const v=e.value;if((v==null?void 0:v[p.value])!=null)return!!v[p.value]}}return!1};async function A(){if(!(!d.value||!t.value)){if(r.value)if((a==null?void 0:a[r.value])!=null)await a[r.value]();else{const v=e.value;(v==null?void 0:v[r.value])!=null&&await v[r.value]()}t.value=!1}}async function y(){if(!d.value||t.value)return;c()&&await A();const v=e.value;l.value&&(v==null?void 0:v[l.value])!=null&&(await v[l.value](),t.value=!0)}async function m(){await(t.value?A():y())}const f=()=>{const v=c();(!v||v&&o())&&(t.value=v)};return ws(a,rr,f,!1),ws(()=>ri(e),rr,f,!1),n&&_a(A),{isSupported:d,isFullscreen:t,enter:y,exit:A,toggle:m}}function ot(s){return typeof Window<"u"&&s instanceof Window?s.document.documentElement:typeof Document<"u"&&s instanceof Document?s.documentElement:s}function z6(s,i,a={}){const{window:n=Di}=a;return xa(s,i,n==null?void 0:n.localStorage,a)}function Ck(s){const i=window.getComputedStyle(s);if(i.overflowX==="scroll"||i.overflowY==="scroll"||i.overflowX==="auto"&&s.clientWidth<s.scrollWidth||i.overflowY==="auto"&&s.clientHeight<s.scrollHeight)return!0;{const a=s.parentNode;return!a||a.tagName==="BODY"?!1:Ck(a)}}function dB(s){const i=s||window.event,a=i.target;return Ck(a)?!1:i.touches.length>1?!0:(i.preventDefault&&i.preventDefault(),!1)}const ct=new WeakMap;function Tl(s,i=!1){const a=W(i);let n=null,e="";ts(K3(s),r=>{const p=ot(Qs(r));if(p){const k=p;if(ct.get(k)||ct.set(k,k.style.overflow),k.style.overflow!=="hidden"&&(e=k.style.overflow),k.style.overflow==="hidden")return a.value=!0;if(a.value)return k.style.overflow="hidden"}},{immediate:!0});const t=()=>{const r=ot(Qs(s));!r||a.value||(Vt&&(n=ws(r,"touchmove",p=>{dB(p)},{passive:!1})),r.style.overflow="hidden",a.value=!0)},l=()=>{const r=ot(Qs(s));!r||!a.value||(Vt&&(n==null||n()),r.style.overflow=e,ct.delete(r),a.value=!1)};return _a(l),F({get(){return a.value},set(r){r?t():l()}})}function bk(s,i,a={}){const{window:n=Di}=a;return xa(s,i,n==null?void 0:n.sessionStorage,a)}let oB=0;function cB(s,i={}){const a=W(!1),{document:n=fk,immediate:e=!0,manual:t=!1,id:l=`vueuse_styletag_${++oB}`}=i,r=W(s);let p=()=>{};const k=()=>{if(!n)return;const o=n.getElementById(l)||n.createElement("style");o.isConnected||(o.id=l,i.media&&(o.media=i.media),n.head.appendChild(o)),!a.value&&(p=ts(r,c=>{o.textContent=c},{immediate:!0}),a.value=!0)},d=()=>{!n||!a.value||(p(),n.head.removeChild(n.getElementById(l)),a.value=!1)};return e&&!t&&Ve(k),t||_a(d),{id:l,css:r,unload:d,load:k,isLoaded:pa(a)}}function BB(s={}){const{window:i=Di,behavior:a="auto"}=s;if(!i)return{x:W(0),y:W(0)};const n=W(i.scrollX),e=W(i.scrollY),t=F({get(){return n.value},set(r){scrollTo({left:r,behavior:a})}}),l=F({get(){return e.value},set(r){scrollTo({top:r,behavior:a})}});return ws(i,"scroll",()=>{n.value=i.scrollX,e.value=i.scrollY},{capture:!1,passive:!0}),{x:t,y:l}}function AB(s={}){const{window:i=Di,initialWidth:a=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:e=!0,includeScrollbar:t=!0}=s,l=W(a),r=W(n),p=()=>{i&&(t?(l.value=i.innerWidth,r.value=i.innerHeight):(l.value=i.document.documentElement.clientWidth,r.value=i.document.documentElement.clientHeight))};if(p(),Ve(p),ws("resize",p,{passive:!0}),e){const k=xl("(orientation: portrait)");ts(k,()=>p())}return{width:l,height:r}}var gB=S({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(s){const i=F(()=>{const n=["font-icon icon"],e=`iconfont icon-${s.icon}`;return n.push(e),n}),a=F(()=>{const n={};return s.color&&(n.color=s.color),s.size&&(n["font-size"]=Number.isNaN(Number(s.size))?s.size:`${s.size}px`),bi(n).length?n:null});return()=>s.icon?h("span",{key:s.icon,class:i.value,style:a.value}):null}});const Dk=({type:s="info",text:i="",vertical:a,color:n},{slots:e})=>{var t;return h("span",{class:["vp-badge",s,{diy:n}],style:{verticalAlign:a??!1,backgroundColor:n??!1}},((t=e.default)==null?void 0:t.call(e))??i)};Dk.displayName="Badge";const _k=({title:s,desc:i="",logo:a,background:n,color:e,link:t})=>{const l=[a?h("img",{class:"vp-card-logo",src:vs(a),loading:"lazy","no-view":""}):null,h("div",{class:"vp-card-content"},[h("div",{class:"vp-card-title",innerHTML:s}),h("hr"),h("div",{class:"vp-card-desc",innerHTML:i})])],r={};return n&&(r.background=n),e&&(r.color=e),t?Oe(t)?h("a",{class:"vp-card",href:t,target:"_blank",style:r},l):h(Rs,{to:t,class:"vp-card",style:r},()=>l):h("div",{class:"vp-card",style:r},l)};_k.displayName="VPCard";const yB=xi({enhance:({app:s})=>{Ks("FontIcon")||s.component("FontIcon",gB),Ks("Badge")||s.component("Badge",Dk),Ks("VPCard")||s.component("VPCard",_k)},setup:()=>{cB(`@import url("//at.alicdn.com/t/c/font_3926889_b8rlrco9u97.css");
`)},rootComponents:[]}),uB=Object.freeze(Object.defineProperty({__proto__:null,default:yB},Symbol.toStringTag,{value:"Module"})),pr=async(s,i)=>{const{path:a,query:n}=s.currentRoute.value,{scrollBehavior:e}=s.options;s.options.scrollBehavior=void 0,await s.replace({path:a,query:n,hash:i}),s.options.scrollBehavior=e},EB=({headerLinkSelector:s,headerAnchorSelector:i,delay:a,offset:n=5})=>{const e=Da();ws("scroll",vk(()=>{var y,m;const l=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(l-0)<n){pr(e,"");return}const p=window.innerHeight+l,k=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),d=Math.abs(k-p)<n,o=Array.from(document.querySelectorAll(s)),A=Array.from(document.querySelectorAll(i)).filter(f=>o.some(v=>v.hash===f.hash));for(let f=0;f<A.length;f++){const v=A[f],C=A[f+1],E=l>=(((y=v.parentElement)==null?void 0:y.offsetTop)??0)-n,b=!C||l<(((m=C.parentElement)==null?void 0:m.offsetTop)??0)-n;if(!(E&&b))continue;const U=decodeURIComponent(e.currentRoute.value.hash),P=decodeURIComponent(v.hash);if(U===P)return;if(d){for(let Y=f+1;Y<A.length;Y++)if(U===decodeURIComponent(A[Y].hash))return}pr(e,P);return}},a))},mB=".vp-sidebar-link, .vp-toc-link",vB=".header-anchor",fB=200,FB=5,CB=xi({setup(){EB({headerLinkSelector:mB,headerAnchorSelector:vB,delay:fB,offset:FB})}}),bB=Object.freeze(Object.defineProperty({__proto__:null,default:CB},Symbol.toStringTag,{value:"Module"}));let xk=s=>Ts(s.title)?{title:s.title}:null;const wk=Symbol(""),DB=s=>{xk=s},_B=()=>fs(wk),xB=s=>{s.provide(wk,xk)};var wB={"/":{title:"目录",empty:"暂无目录"}};const TB=S({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(s){const i=_B(),a=ka(wB),n=xs(),e=c3(),t=rk(),r=Ls(Nn(e.value).map(([k,{meta:d}])=>{const o=i(d);if(!o)return null;const c=k.split("/").length;return{level:V3(k,"/")?c-2:c-1,base:k.replace(/\/[^/]+\/?$/,"/"),path:k,...o}}).filter(k=>en(k)&&Ts(k.title))),p=F(()=>{const k=s.base?i8(qp(s.base)):n.value.path.replace(/\/[^/]+$/,"/"),d=k.split("/").length-2,o=[];return r.value.filter(({level:c,path:A})=>{if(!Za(A,k)||A===k)return!1;if(k==="/"){const y=bi(t.value.locales).filter(m=>m!=="/");if(A==="/404.html"||y.some(m=>Za(A,m)))return!1}return c-d<=s.level}).sort(({title:c,level:A,order:y},{title:m,level:f,order:v})=>{const C=A-f;return C||(dt(y)?dt(v)?y>0?v>0?y-v:-1:v<0?y-v:1:y:dt(v)?v:c.localeCompare(m))}).forEach(c=>{var m;const{base:A,level:y}=c;switch(y-d){case 1:{o.push(c);break}case 2:{const f=o.find(v=>v.path===A);f&&(f.children??(f.children=[])).push(c);break}default:{const f=o.find(v=>v.path===A.replace(/\/[^/]+\/$/,"/"));if(f){const v=(m=f.children)==null?void 0:m.find(C=>C.path===A);v&&(v.children??(v.children=[])).push(c)}}}}),o});return()=>{const k=p.value.some(d=>d.children);return h("div",{class:["vp-catalog-wrapper",{index:s.index}]},[s.hideHeading?null:h("h2",{class:"vp-catalog-main-title"},a.value.title),p.value.length?h(s.index?"ol":"ul",{class:["vp-catalogs",{deep:k}]},p.value.map(({children:d=[],title:o,path:c,content:A})=>{const y=h(Rs,{class:"vp-catalog-title",to:c},()=>A?h(A):o);return h("li",{class:"vp-catalog"},k?[h("h3",{id:o,class:["vp-catalog-child-title",{"has-children":d.length}]},[h("a",{href:`#${o}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),y]),d.length?h(s.index?"ol":"ul",{class:"vp-child-catalogs"},d.map(({children:m=[],content:f,path:v,title:C})=>h("li",{class:"vp-child-catalog"},[h("div",{class:["vp-catalog-sub-title",{"has-children":m.length}]},[h("a",{href:`#${C}`,class:"vp-catalog-header-anchor"},"#"),h(Rs,{class:"vp-catalog-title",to:v},()=>f?h(f):C)]),m.length?h(s.index?"ol":"div",{class:s.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},m.map(({content:E,path:b,title:O})=>s.index?h("li",{class:"vp-sub-catalog"},h(Rs,{to:b},()=>E?h(E):O)):h(Rs,{class:"vp-sub-catalog-link",to:b},()=>E?h(E):O))):null]))):null]:h("div",{class:"vp-catalog-child-title"},y))})):h("p",{class:"vp-empty-catalog"},a.value.empty)])}}}),LB=xi({enhance:({app:s})=>{xB(s),Ks("Catalog",s)||s.component("Catalog",TB)}}),RB=Object.freeze(Object.defineProperty({__proto__:null,default:LB},Symbol.toStringTag,{value:"Module"}));var jB={"/":{backToTop:"返回顶部"}};const OB=S({name:"BackToTop",setup(){const s=cs(),i=ka(jB),a=Ls(),{height:n}=kB(a),{height:e}=AB(),{y:t}=BB(),l=F(()=>s.value.backToTop!==!1&&t.value>100),r=F(()=>t.value/(n.value-e.value)*100);return ys(()=>{a.value=document.body}),()=>h(Ya,{name:"back-to-top"},()=>l.value?h("button",{type:"button",class:"vp-back-to-top-button","aria-label":i.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[h("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":r.value},h("svg",h("circle",{cx:"26",cy:"26",r:"24",fill:"none",stroke:"currentColor","stroke-width":"4","stroke-dasharray":`${Math.PI*r.value*.48} ${Math.PI*(100-r.value)*.48}`}))),h("div",{class:"back-to-top-icon"})]):null)}}),SB=xi({rootComponents:[OB]}),IB=Object.freeze(Object.defineProperty({__proto__:null,default:SB},Symbol.toStringTag,{value:"Module"}));/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const ks={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:s=>{const i=ks.isStarted();s=Bt(s,ks.settings.minimum,1),ks.status=s===1?null:s;const a=ks.render(!i),n=a.querySelector(ks.settings.barSelector),e=ks.settings.speed,t=ks.settings.easing;return a.offsetWidth,PB(l=>{ke(n,{transform:"translate3d("+kr(s)+"%,0,0)",transition:"all "+e+"ms "+t}),s===1?(ke(a,{transition:"none",opacity:"1"}),a.offsetWidth,setTimeout(()=>{ke(a,{transition:"all "+e+"ms linear",opacity:"0"}),setTimeout(()=>{ks.remove(),l()},e)},e)):setTimeout(()=>l(),e)}),ks},isStarted:()=>typeof ks.status=="number",start:()=>{ks.status||ks.set(0);const s=()=>{setTimeout(()=>{ks.status&&(ks.trickle(),s())},ks.settings.trickleSpeed)};return ks.settings.trickle&&s(),ks},done:s=>!s&&!ks.status?ks:ks.inc(.3+.5*Math.random()).set(1),inc:s=>{let i=ks.status;return i?(typeof s!="number"&&(s=(1-i)*Bt(Math.random()*i,.1,.95)),i=Bt(i+s,0,.994),ks.set(i)):ks.start()},trickle:()=>ks.inc(Math.random()*ks.settings.trickleRate),render:s=>{if(ks.isRendered())return document.getElementById("nprogress");dr(document.documentElement,"nprogress-busy");const i=document.createElement("div");i.id="nprogress",i.innerHTML=ks.settings.template;const a=i.querySelector(ks.settings.barSelector),n=s?"-100":kr(ks.status||0),e=document.querySelector(ks.settings.parent);return ke(a,{transition:"all 0 linear",transform:"translate3d("+n+"%,0,0)"}),e!==document.body&&dr(e,"nprogress-custom-parent"),e==null||e.appendChild(i),i},remove:()=>{or(document.documentElement,"nprogress-busy"),or(document.querySelector(ks.settings.parent),"nprogress-custom-parent");const s=document.getElementById("nprogress");s&&MB(s)},isRendered:()=>!!document.getElementById("nprogress")},Bt=(s,i,a)=>s<i?i:s>a?a:s,kr=s=>(-1+s)*100,PB=function(){const s=[];function i(){const a=s.shift();a&&a(i)}return function(a){s.push(a),s.length===1&&i()}}(),ke=function(){const s=["Webkit","O","Moz","ms"],i={};function a(l){return l.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(r,p){return p.toUpperCase()})}function n(l){const r=document.body.style;if(l in r)return l;let p=s.length;const k=l.charAt(0).toUpperCase()+l.slice(1);let d;for(;p--;)if(d=s[p]+k,d in r)return d;return l}function e(l){return l=a(l),i[l]??(i[l]=n(l))}function t(l,r,p){r=e(r),l.style[r]=p}return function(l,r){for(const p in r){const k=r[p];k!==void 0&&Object.prototype.hasOwnProperty.call(r,p)&&t(l,p,k)}}}(),Tk=(s,i)=>(typeof s=="string"?s:Ll(s)).indexOf(" "+i+" ")>=0,dr=(s,i)=>{const a=Ll(s),n=a+i;Tk(a,i)||(s.className=n.substring(1))},or=(s,i)=>{const a=Ll(s);if(!Tk(s,i))return;const n=a.replace(" "+i+" "," ");s.className=n.substring(1,n.length-1)},Ll=s=>(" "+(s.className||"")+" ").replace(/\s+/gi," "),MB=s=>{s&&s.parentNode&&s.parentNode.removeChild(s)},VB=()=>{ys(()=>{const s=Da(),i=new Set;i.add(s.currentRoute.value.path),s.beforeEach(a=>{i.has(a.path)||ks.start()}),s.afterEach(a=>{i.add(a.path),ks.done()})})},HB=xi({setup(){VB()}}),$B=Object.freeze(Object.defineProperty({__proto__:null,default:HB},Symbol.toStringTag,{value:"Module"})),NB=JSON.parse('{"encrypt":{"config":{"/interview/":["$2a$10$PX9eYvbKvrtTTBFVX6b3muF2mFL3W06pI0QfvcgcyPgN7MGzU4dCG"]}},"author":{"name":"罗天旭","url":"https://luotianxu1.github.io","email":"1265062404@qq.com"},"headerDepth":2,"logo":"https://theme-hope-assets.vuejs.press/logo.svg","repo":"vuepress-theme-hope/vuepress-theme-hope","repoDisplay":true,"navbarAutoHide":"mobile","hideSiteNameOnMobile":true,"themeColor":true,"darkmode":"switch","fullscreen":true,"navbarLayout":{"start":["Brand"],"center":["Links"],"end":["Search","Outlook","Repo"]},"breadcrumb":true,"breadcrumbIcon":true,"prevLink":true,"nextLink":true,"titleIcon":true,"pageInfo":["Author","Original","Date","Category","Tag","ReadingTime","Word"],"lastUpdated":true,"contributors":true,"editLink":false,"footer":"","copyright":"Copyright © <罗天旭>","displayFooter":true,"home":"/","toc":true,"print":true,"docsDir":"docs","blog":{"name":"罗天旭","intro":"https://github.com/luotianxu1","avatar":"/img/author/author.jpg","description":"搬砖","medias":{"Github":"https://github.com/luotianxu1"},"sidebarDisplay":"mobile","timeline":"昨日不在","articlePerPage":10,"articleInfo":["Author","Original","Date","PageView","Category","Tag","ReadingTime"]},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"主页","icon":"zhuye","prefix":"/","link":"/"},{"text":"基础","icon":"zaixianxuexi","prefix":"/study/","link":"/study/"},{"text":"面试","icon":"mianshi","prefix":"/interview/","link":"/interview/"},{"text":"threejs","icon":"threejs","prefix":"/threejs/","link":"/threejs/"},{"text":"项目","icon":"xiangmu","prefix":"/project/","link":"/project/"},{"text":"其他","icon":"qita","prefix":"/other/","link":"/other/"},{"text":"Github主页","icon":"github","link":"https://github.com/luotianxu1/"}],"sidebar":{"/study/":[{"text":"基础","icon":"zaixianxuexi","children":"structure"}],"/interview/":[{"text":"面试","icon":"mianshi","children":"structure"}],"/threejs/":[{"text":"threejs","icon":"threejs","children":"structure"}],"/project/":[{"text":"项目","icon":"xiangmu","children":"structure"}],"/other/":[{"text":"其他","icon":"qita","children":"structure"}]}}}}'),zB=W(NB),Lk=()=>zB,Rk=Symbol(""),GB=()=>{const s=fs(Rk);if(!s)throw new Error("useThemeLocaleData() is called without provider.");return s},UB=(s,i)=>{const{locales:a,...n}=s;return{...n,...a==null?void 0:a[i]}},WB=xi({enhance({app:s}){const i=Lk(),a=s._context.provides[bl],n=F(()=>UB(i.value,a.routeLocale.value));s.provide(Rk,n),Object.defineProperties(s.config.globalProperties,{$theme:{get(){return i.value}},$themeLocale:{get(){return n.value}}})}}),qB=Object.freeze(Object.defineProperty({__proto__:null,default:WB},Symbol.toStringTag,{value:"Module"})),JB=/language-(shellscript|shell|bash|sh|zsh)/,KB=({delay:s=500,duration:i=2e3,locales:a,selector:n,showInMobile:e,ignoreSelector:t=[],transform:l})=>{const r=xl("(max-width: 419px)"),p=F(()=>!r.value||e),k=ka(a),d=xs(),o=f=>{var C;if(f.hasAttribute("copy-code-registered"))return;const v=document.createElement("button");v.type="button",v.classList.add("vp-copy-code-button"),v.setAttribute("aria-label",k.value.copy),v.setAttribute("data-copied",k.value.copied),(C=f.parentElement)==null||C.insertBefore(v,f),f.setAttribute("copy-code-registered","")};ts(()=>[d.value.path,p.value],async()=>{document.body.classList.toggle("copy-code-disabled",!p.value),p.value&&(await Si(),await uk(s),document.querySelectorAll(n.join(",")).forEach(o))},{immediate:!0});const{copy:A}=aB({legacy:!0}),y=new WeakMap,m=(f,v,C)=>{const E=v.cloneNode(!0);t.length&&E.querySelectorAll(t.join(",")).forEach(O=>O.remove()),l&&l(E);let b=E.textContent||"";JB.test(f.className)&&(b=b.replace(/^ *(\$|>) /gm,"")),A(b).then(()=>{if(i<=0)return;C.classList.add("copied"),clearTimeout(y.get(C));const O=setTimeout(()=>{C.classList.remove("copied"),C.blur(),y.delete(C)},i);y.set(C,O)})};ws("click",f=>{const v=f.target;if(p.value&&v.matches('div[class*="language-"] > button.vp-copy-code-button')){const C=v.parentElement,E=v.nextElementSibling;if(!C||!E)return;m(C,E,v)}})};var YB={"/":{copy:"复制代码",copied:"已复制"}},QB=['.theme-hope-content div[class*="language-"] pre'];const XB=xi({setup:()=>{KB({selector:QB,locales:YB,duration:2e3,delay:500,showInMobile:!1})}}),ZB=Object.freeze(Object.defineProperty({__proto__:null,default:XB},Symbol.toStringTag,{value:"Module"})),de=xa("VUEPRESS_CODE_TAB_STORE",{});var sA=S({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:i}){const a=W(s.active),n=Ls([]),e=()=>{s.tabId&&(de.value[s.tabId]=s.data[a.value].id)},t=(k=a.value)=>{a.value=k<n.value.length-1?k+1:0,n.value[a.value].focus()},l=(k=a.value)=>{a.value=k>0?k-1:n.value.length-1,n.value[a.value].focus()},r=(k,d)=>{k.key===" "||k.key==="Enter"?(k.preventDefault(),a.value=d):k.key==="ArrowRight"?(k.preventDefault(),t()):k.key==="ArrowLeft"&&(k.preventDefault(),l()),s.tabId&&(de.value[s.tabId]=s.data[a.value].id)},p=()=>{if(s.tabId){const k=s.data.findIndex(({id:d})=>de.value[s.tabId]===d);if(k!==-1)return k}return s.active};return ys(()=>{a.value=p(),ts(()=>de.value[s.tabId],(k,d)=>{if(s.tabId&&k!==d){const o=s.data.findIndex(({id:c})=>c===k);o!==-1&&(a.value=o)}})}),()=>s.data.length?h("div",{class:"vp-code-tabs"},[h("div",{class:"vp-code-tabs-nav",role:"tablist"},s.data.map(({id:k},d)=>{const o=d===a.value;return h("button",{type:"button",ref:c=>{c&&(n.value[d]=c)},class:["vp-code-tab-nav",{active:o}],role:"tab","aria-controls":`codetab-${s.id}-${d}`,"aria-selected":o,onClick:()=>{a.value=d,e()},onKeydown:c=>r(c,d)},i[`title${d}`]({value:k,isActive:o}))})),s.data.map(({id:k},d)=>{const o=d===a.value;return h("div",{class:["vp-code-tab",{active:o}],id:`codetab-${s.id}-${d}`,role:"tabpanel","aria-expanded":o},[h("div",{class:"vp-code-tab-title"},i[`title${d}`]({value:k,isActive:o})),i[`tab${d}`]({value:k,isActive:o})])})]):null}});const jk=({active:s=!1},{slots:i})=>{var a;return h("div",{class:["code-group-item",{active:s}],"aria-selected":s},(a=i.default)==null?void 0:a.call(i))};jk.displayName="CodeGroupItem";const iA=S({name:"CodeGroup",slots:Object,setup(s,{slots:i}){const a=W(-1),n=Ls([]),e=(r=a.value)=>{a.value=r<n.value.length-1?r+1:0,n.value[a.value].focus()},t=(r=a.value)=>{a.value=r>0?r-1:n.value.length-1,n.value[a.value].focus()},l=(r,p)=>{r.key===" "||r.key==="Enter"?(r.preventDefault(),a.value=p):r.key==="ArrowRight"?(r.preventDefault(),e(p)):r.key==="ArrowLeft"&&(r.preventDefault(),t(p))};return()=>{var p;const r=(((p=i.default)==null?void 0:p.call(i))||[]).filter(k=>k.type.name==="CodeGroupItem").map(k=>(k.props===null&&(k.props={}),k));return r.length===0?null:(a.value<0||a.value>r.length-1?(a.value=r.findIndex(k=>"active"in k.props),a.value===-1&&(a.value=0)):r.forEach((k,d)=>{k.props.active=d===a.value}),h("div",{class:"code-group"},[h("div",{class:"code-group-nav"},r.map((k,d)=>{const o=d===a.value;return h("button",{type:"button",ref:c=>{c&&(n.value[d]=c)},class:["code-group-nav-tab",{active:o}],"aria-pressed":o,"aria-expanded":o,onClick:()=>{a.value=d},onKeydown:c=>l(c,d)},k.props.title)})),r]))}}}),ls=({name:s="",color:i="currentColor",ariaLabel:a},{attrs:n,slots:e})=>{var t;return h("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:i,"aria-label":a??`${s} icon`,...n},(t=e.default)==null?void 0:t.call(e))};ls.displayName="IconBase";const Ok=({size:s=48,stroke:i=4,wrapper:a=!0,height:n=2*s})=>{const e=h("svg",{xmlns:"http://www.w3.org/2000/svg",width:s,height:s,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[h("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),h("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":i,"stroke-linecap":"round"},[h("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),h("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return a?h("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${n}px`},e):e};Ok.displayName="LoadingIcon";const He=(s,{slots:i})=>{var a;return(a=i.default)==null?void 0:a.call(i)},aA=s=>ba(s)?s:`https://github.com/${s}`,Rl=(s="")=>!ba(s)||/github\.com/.test(s)?"GitHub":/bitbucket\.org/.test(s)?"Bitbucket":/gitlab\.com/.test(s)?"GitLab":/gitee\.com/.test(s)?"Gitee":null,Sk=()=>h(ls,{name:"github"},()=>h("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));Sk.displayName="GitHubIcon";const Ik=()=>h(ls,{name:"gitee"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Ik.displayName="GiteeIcon";const Pk=()=>h(ls,{name:"bitbucket"},()=>h("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));Pk.displayName="BitbucketIcon";const Mk=()=>h(ls,{name:"source"},()=>h("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));Mk.displayName="SourceIcon";const nA=({link:s,type:i=Rl(s??"")})=>{if(!i)return null;const a=i.toLowerCase();return h(a==="bitbucket"?Pk:a==="github"?Sk:a==="gitlab"?"GitLab":a==="gitee"?Ik:Mk)};function eA(){const s=W(!1),i=nn();return i&&ys(()=>{s.value=!0},i),s}function tA(s){return eA(),F(()=>!!s())}const lA=()=>tA(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),hA=()=>{const s=lA();return F(()=>s.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},rA=s=>[/\((ipad);[-\w),; ]+apple/i,/applecoremedia\/[\w.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i].some(i=>i.test(s)),pA=s=>[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/cfnetwork\/.+darwin/i].some(i=>i.test(s)),kA=s=>[/(mac os x) ?([\w. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i].some(i=>i.test(s)),dA=(s,i=0)=>{let a=3735928559^i,n=1103547991^i;for(let e=0,t;e<s.length;e++)t=s.charCodeAt(e),a=Math.imul(a^t,2654435761),n=Math.imul(n^t,1597334677);return a=Math.imul(a^a>>>16,2246822507),a^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(a^a>>>13,3266489909),4294967296*(2097151&n)+(a>>>0)},Un=(s,i)=>dA(s)%i;let oA=class{constructor(){Ge(this,"containerElement");Ge(this,"messageElements",{});const i="message-container",a=document.getElementById(i);a?this.containerElement=a:(this.containerElement=document.createElement("div"),this.containerElement.id=i,document.body.appendChild(this.containerElement))}pop(i,a=2e3){const n=document.createElement("div"),e=Date.now();return n.className="message move-in",n.innerHTML=i,this.containerElement.appendChild(n),this.messageElements[e]=n,a>0&&setTimeout(()=>{this.close(e)},a),e}close(i){if(i){const a=this.messageElements[i];a.classList.remove("move-in"),a.classList.add("move-out"),a.addEventListener("animationend",()=>{a.remove(),delete this.messageElements[i]})}else bi(this.messageElements).forEach(a=>this.close(Number(a)))}destroy(){document.body.removeChild(this.containerElement)}};const Vk=/#.*$/u,cA=s=>{const i=Vk.exec(s);return i?i[0]:""},cr=s=>decodeURI(s).replace(Vk,"").replace(/\/index\.html$/iu,"/").replace(/\/(README|index)\.md$/iu,"/").replace(/\.(?:html|md)$/iu,""),Hk=(s,i)=>{if(!Ek(i))return!1;const a=cr(s.path),n=cr(i),e=cA(i);return e?e===s.hash&&(!n||a===n):a===n};var BA=s=>Object.prototype.toString.call(s)==="[object Object]",wn=s=>typeof s=="string";const $k=Array.isArray,Br=s=>BA(s)&&wn(s.name),Tn=(s,i=!1)=>s?$k(s)?s.map(a=>wn(a)?{name:a}:Br(a)?a:null).filter(a=>a!==null):wn(s)?[{name:s}]:Br(s)?[s]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${i?"":"| false"} | undefined\`, but got`,s),[]):[],Nk=(s,i)=>{if(s){if($k(s)&&s.every(wn))return s;if(wn(s))return[s];console.error(`Expect ${i} to be \`string[] | string | undefined\`, but got`,s)}return[]},zk=s=>Nk(s,"category"),Gk=s=>Nk(s,"tag"),AA='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',gA='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var yA={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const At=yA,Ar={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},uA=(s,i,a)=>{const n=document.createElement(s);return en(i)&&bi(i).forEach(e=>{if(e.indexOf("data"))n[e]=i[e];else{const t=e.replace("data","");n.dataset[t]=i[e]}}),n},jl=s=>({...At,...s,jsLib:Array.from(new Set([...At.jsLib??[],...s.jsLib??[]])),cssLib:Array.from(new Set([...At.cssLib??[],...s.cssLib??[]]))}),qa=(s,i)=>{if(Ek(s[i]))return s[i];const a=new Promise(n=>{var t;const e=document.createElement("script");e.src=i,(t=document.querySelector("body"))==null||t.appendChild(e),e.onload=()=>{n()}});return s[i]=a,a},EA=(s,i)=>{if(i.css&&Array.from(s.childNodes).every(a=>a.nodeName!=="STYLE")){const a=uA("style",{innerHTML:i.css});s.appendChild(a)}},mA=(s,i,a)=>{const n=a.getScript();if(n&&Array.from(i.childNodes).every(e=>e.nodeName!=="SCRIPT")){const e=document.createElement("script");e.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${s} .vp-code-demo-display').shadowRoot;
${n}}`)),i.appendChild(e)}},vA=["html","js","css"],fA=s=>{const i=bi(s),a={html:[],js:[],css:[],isLegal:!1};return vA.forEach(n=>{const e=i.filter(t=>Ar[n].types.includes(t));if(e.length){const t=e[0];a[n]=[s[t].replace(/^\n|\n$/g,""),Ar[n].map[t]??t]}}),a.isLegal=(!a.html.length||a.html[1]==="none")&&(!a.js.length||a.js[1]==="none")&&(!a.css.length||a.css[1]==="none"),a},Uk=s=>s.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),Wk=s=>`<div id="app">
${Uk(s)}
</div>`,FA=s=>`${s.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,CA=s=>s.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),qk=s=>`(function(exports){var module={};module.exports=exports;${s};return module.exports.__esModule.exports.default:module.exports;})({})`,bA=(s,i)=>{const a=jl(i),n=s.js[0]??"";return{...a,html:Uk(s.html[0]??""),js:n,css:s.css[0]??"",isLegal:s.isLegal,getScript:()=>{var e;return a.useBabel?((e=window.Babel.transform(n,{presets:["es2015"]}))==null?void 0:e.code)??"":n}}},DA=/<template>([\s\S]+)<\/template>/u,_A=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,xA=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,wA=(s,i)=>{const a=jl(i),n=s.html[0]??"",e=DA.exec(n),t=_A.exec(n),l=xA.exec(n),r=(e==null?void 0:e[1].replace(/^\n|\n$/g,""))??"",[p="",k=""]=t?[t[4].replace(/^\n|\n$/g,""),t[3]]:[],[d="",o=""]=l?[l[4].replace(/^\n|\n$/g,""),l[3]]:[],c=k===""&&(o===""||o==="css");return{...a,html:Wk(r),js:CA(p),css:d,isLegal:c,jsLib:[a.vue,...a.jsLib],getScript:()=>{var y,m;const A=i.useBabel?((m=(y=window.Babel)==null?void 0:y.transform(p,{presets:["es2015"]}))==null?void 0:m.code)??"":p.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${qk(A)};appOptions.template=\`${r.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},TA=(s,i)=>{var e;const a=jl(i),n=s.js[0]??"";return{...a,html:Wk(""),js:FA(n),css:s.css[0]??((e=s.js[0])==null?void 0:e.replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim())??"",isLegal:s.isLegal,jsLib:[a.react,a.reactDOM,...a.jsLib],jsx:!0,getScript:()=>{var l,r;const t=((r=(l=window.Babel)==null?void 0:l.transform(n,{presets:["es2015","react"]}))==null?void 0:r.code)??"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${qk(t)}))`}}},Ja={},LA=s=>Promise.all([qa(Ja,s.babel),qa(Ja,s.react),qa(Ja,s.reactDOM)]),RA=s=>{const i=[qa(Ja,s.vue)];return s.useBabel&&i.push(qa(Ja,s.babel)),Promise.all(i)},jA=s=>s.useBabel?qa(Ja,s.babel):Promise.resolve();var OA=S({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(s,{slots:i}){const[a,n]=xn(!1),e=Ls(),t=Ls(),l=W("0"),r=W(!1),p=F(()=>JSON.parse(s.config?er(s.config):"{}")),k=F(()=>{const y=JSON.parse(er(s.code));return fA(y)}),d=F(()=>s.type==="react"?TA(k.value,p.value):s.type==="vue"?wA(k.value,p.value):bA(k.value,p.value)),o=F(()=>d.value.isLegal),c=(y=!1)=>{const m=e.value.attachShadow({mode:"open"}),f=document.createElement("div");f.classList.add("code-demo-app"),m.appendChild(f),o.value?(y&&(f.innerHTML=d.value.html),EA(m,d.value),mA(s.id,m,d.value),l.value="0"):l.value="auto",r.value=!0},A=()=>{switch(s.type){case"react":return LA(d.value).then(()=>c());case"vue":return RA(d.value).then(()=>c());default:return jA(d.value).then(()=>c(!0))}};return ws("beforeprint",()=>{n(!0)}),ys(()=>{setTimeout(()=>{A()},800)}),()=>{var y;return h("div",{class:"vp-code-demo",id:s.id},[h("div",{class:"vp-code-demo-header"},[d.value.isLegal?h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",a.value?"down":"end"],onClick:()=>{l.value=a.value?"0":`${t.value.clientHeight+13.8}px`,n()}}):null,s.title?h("span",{class:"vp-code-demo-title"},decodeURIComponent(s.title)):null,d.value.isLegal&&d.value.jsfiddle!==!1?h("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[h("input",{type:"hidden",name:"html",value:d.value.html}),h("input",{type:"hidden",name:"js",value:d.value.js}),h("input",{type:"hidden",name:"css",value:d.value.css}),h("input",{type:"hidden",name:"wrap",value:"1"}),h("input",{type:"hidden",name:"panel_js",value:"3"}),h("input",{type:"hidden",name:"resources",value:[...d.value.cssLib,...d.value.jsLib].join(",")}),h("button",{type:"submit",class:"jsfiddle-button",innerHTML:gA,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!d.value.isLegal||d.value.codepen!==!1?h("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[h("input",{type:"hidden",name:"data",value:JSON.stringify({html:d.value.html,js:d.value.js,css:d.value.css,js_external:d.value.jsLib.join(";"),css_external:d.value.cssLib.join(";"),layout:d.value.codepenLayout,html_pre_processor:k.value?k.value.html[1]:"none",js_pre_processor:k.value?k.value.js[1]:d.value.jsx?"babel":"none",css_pre_processor:k.value?k.value.css[1]:"none",editors:d.value.codepenEditors})}),h("button",{type:"submit",innerHTML:AA,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),r.value?null:h(Ok,{class:"vp-code-demo-loading"}),h("div",{ref:e,class:"vp-code-demo-display",style:{display:o.value&&r.value?"block":"none"}}),h("div",{class:"vp-code-demo-code-wrapper",style:{height:l.value}},h("div",{ref:t,class:"vp-code-demo-codes"},(y=i.default)==null?void 0:y.call(i)))])}}}),SA=S({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(s,{slots:i}){const[a,n]=xn(!1),e=Ls(),t=W("0");return ws("beforeprint",()=>{n(!0)}),()=>{var l,r;return h("div",{class:"vp-md-demo",id:s.id},[h("div",{class:"vp-md-demo-header"},[h("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",a.value?"down":"end"],onClick:()=>{t.value=a.value?"0":`${e.value.clientHeight+13.8}px`,n()}}),s.title?decodeURIComponent(s.title):null]),h("div",{class:"vp-md-demo-display"},(l=i.default)==null?void 0:l.call(i)),h("div",{class:"vp-md-demo-code-wrapper",style:{height:t.value}},h("div",{ref:e,class:"vp-md-demo-codes"},(r=i.code)==null?void 0:r.call(i)))])}}});const IA=()=>{ws("beforeprint",()=>{document.querySelectorAll("details").forEach(s=>{s.open=!0})})},gt=xa("VUEPRESS_TAB_STORE",{});var PA=S({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:i}){const a=W(s.active),n=Ls([]),e=()=>{s.tabId&&(gt.value[s.tabId]=s.data[a.value].id)},t=(k=a.value)=>{a.value=k<n.value.length-1?k+1:0,n.value[a.value].focus()},l=(k=a.value)=>{a.value=k>0?k-1:n.value.length-1,n.value[a.value].focus()},r=(k,d)=>{k.key===" "||k.key==="Enter"?(k.preventDefault(),a.value=d):k.key==="ArrowRight"?(k.preventDefault(),t()):k.key==="ArrowLeft"&&(k.preventDefault(),l()),e()},p=()=>{if(s.tabId){const k=s.data.findIndex(({id:d})=>gt.value[s.tabId]===d);if(k!==-1)return k}return s.active};return ys(()=>{a.value=p(),ts(()=>gt.value[s.tabId],(k,d)=>{if(s.tabId&&k!==d){const o=s.data.findIndex(({id:c})=>c===k);o!==-1&&(a.value=o)}})}),()=>s.data.length?h("div",{class:"vp-tabs"},[h("div",{class:"vp-tabs-nav",role:"tablist"},s.data.map(({id:k},d)=>{const o=d===a.value;return h("button",{type:"button",ref:c=>{c&&(n.value[d]=c)},class:["vp-tab-nav",{active:o}],role:"tab","aria-controls":`tab-${s.id}-${d}`,"aria-selected":o,onClick:()=>{a.value=d,e()},onKeydown:c=>r(c,d)},i[`title${d}`]({value:k,isActive:o}))})),s.data.map(({id:k},d)=>{const o=d===a.value;return h("div",{class:["vp-tab",{active:o}],id:`tab-${s.id}-${d}`,role:"tabpanel","aria-expanded":o},[h("div",{class:"vp-tab-title"},i[`title${d}`]({value:k,isActive:o})),i[`tab${d}`]({value:k,isActive:o})])})]):null}});const MA=xi({enhance:({app:s})=>{s.component("CodeTabs",sA),Ks("CodeGroup",s)||s.component("CodeGroup",iA),Ks("CodeGroupItem",s)||s.component("CodeGroupItem",jk),s.component("CodeDemo",OA),s.component("MdDemo",SA),s.component("Tabs",PA)},setup:()=>{IA()}}),VA=Object.freeze(Object.defineProperty({__proto__:null,default:MA},Symbol.toStringTag,{value:"Module"})),HA=W({}),Jk=Symbol(""),$A=()=>fs(Jk),NA=s=>{s.provide(Jk,HA)},zA='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',GA=s=>Ts(s)?Array.from(document.querySelectorAll(s)):s.map(i=>Array.from(document.querySelectorAll(i))).flat(),Kk=s=>new Promise((i,a)=>{s.complete?i({type:"image",element:s,src:s.src,width:s.naturalWidth,height:s.naturalHeight,alt:s.alt,msrc:s.src}):(s.onload=()=>i(Kk(s)),s.onerror=n=>a(n))}),UA=(s,{download:i=!0,fullscreen:a=!0}={})=>{s.on("uiRegister",()=>{if(s.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(n,e)=>{const t=[];let l=-1;for(let r=0;r<e.getNumItems();r++){const p=document.createElement("div");p.className="photo-swipe-bullet",p.onclick=k=>{e.goTo(t.indexOf(k.target))},t.push(p),n.appendChild(p)}e.on("change",()=>{l>=0&&t[l].classList.remove("active"),t[e.currIndex].classList.add("active"),l=e.currIndex})}}),a){const{isSupported:n,toggle:e}=wl();n.value&&s.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{e()}})}i&&s.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(n,e)=>{n.setAttribute("download",""),n.setAttribute("target","_blank"),n.setAttribute("rel","noopener"),e.on("change",()=>{n.setAttribute("href",e.currSlide.data.src)})}})})},WA=(s,{scrollToClose:i=!0,download:a=!0,fullscreen:n=!0,...e})=>B(async()=>{const{default:t}=await import("./photoswipe.esm-GXRgw7eJ.js");return{default:t}},[]).then(({default:t})=>{let l=null;const r=s.map(p=>({html:zA,element:p,msrc:p.src}));return s.forEach((p,k)=>{const d=()=>{l==null||l.destroy(),l=new t({preloaderDelay:0,showHideAnimationType:"zoom",...e,dataSource:r,index:k,...i?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),UA(l,{download:a,fullscreen:n}),l.addFilter("thumbEl",()=>p),l.addFilter("placeholderSrc",()=>p.src),l.init()};p.getAttribute("photo-swipe")||(p.style.cursor="zoom-in",p.addEventListener("click",()=>{d()}),p.addEventListener("keypress",({key:o})=>{o==="Enter"&&d()}),p.setAttribute("photo-swipe","")),Kk(p).then(o=>{r.splice(k,1,o),l==null||l.refreshSlideContent(k)})}),i?ws("wheel",()=>{l==null||l.close()}):()=>{}}),qA=({selector:s,locales:i,delay:a=500,download:n=!0,fullscreen:e=!0,scrollToClose:t=!0})=>{const l=$A(),r=ka(i),p=xs(),k=cs();let d=null;const o=()=>{const{photoSwipe:c}=k.value;c!==!1&&Si().then(()=>uk(a)).then(async()=>{const A=Ts(c)?c:s;d=await WA(GA(A),{...l.value,...r.value,download:n,fullscreen:e,scrollToClose:t})})};ys(()=>{o(),ts(()=>[p.value.path,l.value],()=>{d==null||d(),o()})}),Ca(()=>{d==null||d()})};var JA={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const KA=".theme-hope-content :not(a) > img:not([no-view])",YA=JA,QA=800,XA=!0,ZA=!0,sg=!0,ig=xi({enhance:({app:s})=>{NA(s)},setup:()=>{qA({selector:KA,delay:QA,locales:YA,download:XA,fullscreen:ZA,scrollToClose:sg})}}),ag=Object.freeze(Object.defineProperty({__proto__:null,default:ig},Symbol.toStringTag,{value:"Module"})),ng=()=>h(ls,{name:"heading"},()=>h("path",{d:"M250.4 704.6H64V595.4h202.4l26.2-166.6H94V319.6h214.4L352 64h127.8l-43.6 255.4h211.2L691 64h126.2l-43.6 255.4H960v109.2H756.2l-24.6 166.6H930v109.2H717L672 960H545.8l43.6-255.4H376.6L333 960H206.8l43.6-255.4zm168.4-276L394 595.4h211.2l24.6-166.6h-211z"}));ng.displayName="HeadingIcon";const eg=()=>h(ls,{name:"heart"},()=>h("path",{d:"M1024 358.156C1024 195.698 892.3 64 729.844 64c-86.362 0-164.03 37.218-217.844 96.49C458.186 101.218 380.518 64 294.156 64 131.698 64 0 195.698 0 358.156 0 444.518 37.218 522.186 96.49 576H96l320 320c32 32 64 64 96 64s64-32 96-64l320-320h-.49c59.272-53.814 96.49-131.482 96.49-217.844zM841.468 481.232 517.49 805.49a2981.962 2981.962 0 0 1-5.49 5.48c-1.96-1.95-3.814-3.802-5.49-5.48L182.532 481.234C147.366 449.306 128 405.596 128 358.156 128 266.538 202.538 192 294.156 192c47.44 0 91.15 19.366 123.076 54.532L512 350.912l94.768-104.378C638.696 211.366 682.404 192 729.844 192 821.462 192 896 266.538 896 358.156c0 47.44-19.368 91.15-54.532 123.076z"}));eg.displayName="HeartIcon";const tg=()=>h(ls,{name:"history"},()=>h("path",{d:"M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zm0-896a384 384 0 1 0 384 384 384 384 0 0 0-384-384zm192 448H512a64 64 0 0 1-64-64V320a64 64 0 0 1 128 0v128h128a64 64 0 0 1 0 128z"}));tg.displayName="HistoryIcon";const lg=()=>h(ls,{name:"title"},()=>h("path",{d:"M512 256c70.656 0 134.656 28.672 180.992 75.008A254.933 254.933 0 0 1 768 512c0 83.968-41.024 157.888-103.488 204.48C688.96 748.736 704 788.48 704 832c0 105.984-86.016 192-192 192-106.048 0-192-86.016-192-192h128a64 64 0 1 0 128 0 64 64 0 0 0-64-64 255.19 255.19 0 0 1-181.056-75.008A255.403 255.403 0 0 1 256 512c0-83.968 41.024-157.824 103.488-204.544C335.04 275.264 320 235.584 320 192A192 192 0 0 1 512 0c105.984 0 192 85.952 192 192H576a64.021 64.021 0 0 0-128 0c0 35.328 28.672 64 64 64zM384 512c0 70.656 57.344 128 128 128s128-57.344 128-128-57.344-128-128-128-128 57.344-128 128z"}));lg.displayName="TitleIcon";const Ol=()=>h(ls,{name:"search"},()=>h("path",{d:"M192 480a256 256 0 1 1 512 0 256 256 0 0 1-512 0m631.776 362.496-143.2-143.168A318.464 318.464 0 0 0 768 480c0-176.736-143.264-320-320-320S128 303.264 128 480s143.264 320 320 320a318.016 318.016 0 0 0 184.16-58.592l146.336 146.368c12.512 12.48 32.768 12.48 45.28 0 12.48-12.512 12.48-32.768 0-45.28"}));Ol.displayName="SearchIcon";const Yk=()=>h("svg",{xmlns:"http://www.w3.org/2000/svg",width:"32",height:"32",preserveAspectRatio:"xMidYMid",viewBox:"0 0 100 100"},[h("circle",{cx:"28",cy:"75",r:"11",fill:"currentColor"},h("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),h("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 47a28 28 0 0 1 28 28"},h("animate",{attributeName:"stroke-opacity",begin:"0.1s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"})),h("path",{fill:"none",stroke:"#88baf0","stroke-width":"10",d:"M28 25a50 50 0 0 1 50 50"},h("animate",{attributeName:"stroke-opacity",begin:"0.2s",dur:"1s",keyTimes:"0;0.2;1",repeatCount:"indefinite",values:"0;1;1"}))]);Yk.displayName="LoadingIcon";const Qk=({hint:s})=>h("div",{class:"search-pro-result-wrapper loading"},[h(Yk),s]);Qk.displayName="SearchLoading";const hg='<svg width="20" height="20" viewBox="0 0 20 20"><path d="M10 10l5.09-5.09L10 10l5.09 5.09L10 10zm0 0L4.91 4.91 10 10l-5.09 5.09L10 10z" stroke="currentColor" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"></path></svg>';var rg={0:{"/":{0:"分",1:"类",2:":",3:" ",4:"$",5:"c",6:"o",7:"n",8:"t",9:"e",10:"n",11:"t"}},1:{"/":{0:"标",1:"签",2:":",3:" ",4:"$",5:"c",6:"o",7:"n",8:"t",9:"e",10:"n",11:"t"}}},pg={"/":{cancel:"取消",placeholder:"搜索",search:"搜索",searching:"搜索中",defaultTitle:"文档",select:"选择",navigate:"切换",autocomplete:"自动补全",exit:"关闭",queryHistory:"搜索历史",resultHistory:"历史结果",emptyHistory:"无搜索历史",emptyResult:"没有找到结果",loading:"正在加载搜索索引..."}},kg={searchDelay:150,suggestDelay:0,queryHistoryCount:5,resultHistoryCount:5,hotKeys:[{key:"k",ctrl:!0},{key:"/",ctrl:!0}],worker:"search-pro.worker.js"};const be=kg,U6=rg,Xk=be.hotKeys,Sl=pg,yt="Canceled because of new search request.",dg=()=>{const s=new Worker(`/${be.worker}`,{}),i={suggest:null,search:null,all:null};return s.addEventListener("message",({data:a})=>{const[n,e,t]=a,l=i[n];(l==null?void 0:l.id)===e&&l.resolve(t)}),s.addEventListener("error",a=>{console.error("Search Worker error:",a)}),{suggest:(a,n,e)=>new Promise((t,l)=>{var p;(p=i.suggest)==null||p.reject(new Error(yt));const r=Date.now();s.postMessage({type:"suggest",id:r,query:a,locale:n,options:e}),i.suggest={id:r,resolve:t,reject:l}}),search:(a,n,e)=>new Promise((t,l)=>{var p;(p=i.search)==null||p.reject(new Error(yt));const r=Date.now();s.postMessage({type:"search",id:r,query:a,locale:n,options:e}),i.search={id:r,resolve:t,reject:l}}),all:(a,n,e)=>new Promise((t,l)=>{var p;(p=i.all)==null||p.reject(new Error(yt));const r=Date.now();s.postMessage({type:"all",id:r,query:a,locale:n,options:e}),i.all={id:r,resolve:t,reject:l}}),terminate:()=>{s.terminate(),H3(i).forEach(a=>{a==null||a.reject(new Error("Worker has been terminated."))})}}};let og={};const Zk=Symbol(""),sd=()=>{const s=Pi(),{locales:i={},...a}=fs(Zk);return F(()=>({...a,...i[s.value]}))},cg=s=>{s.provide(Zk,og)},Bg=(s,i=!1)=>{const a=W(0),n=F(()=>s.value[a.value]),e=()=>{a.value=a.value>0?a.value-1:s.value.length-1},t=()=>{a.value=a.value<s.value.length-1?a.value+1:0};return ts(s,()=>{i||(a.value=0)}),{index:a,item:n,prev:e,next:t}},Ag=s=>s instanceof Element?document.activeElement===s&&(["TEXTAREA","SELECT","INPUT"].includes(s.tagName)||s.hasAttribute("contenteditable")):!1,gg=s=>Xk.some(i=>{const{key:a,ctrl:n=!1,shift:e=!1,alt:t=!1,meta:l=!1}=i;return a===s.key&&n===s.ctrlKey&&e===s.shiftKey&&t===s.altKey&&l===s.metaKey}),yg='<svg width="15" height="15" aria-label="Enter key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M12 3.53088v3c0 1-1 2-2 2H4M7 11.53088l-3-3 3-3"></path></g></svg>',ug='<svg width="15" height="15" aria-label="Arrow down" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 3.5v8M10.5 8.5l-3 3-3-3"></path></g></svg>',Eg='<svg width="15" height="15" aria-label="Arrow up" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M7.5 11.5v-8M10.5 6.5l-3-3-3 3"></path></g></svg>',mg='<svg width="15" height="15" aria-label="Escape key" role="img"><g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.2"><path d="M13.6167 8.936c-.1065.3583-.6883.962-1.4875.962-.7993 0-1.653-.9165-1.653-2.1258v-.5678c0-1.2548.7896-2.1016 1.653-2.1016.8634 0 1.3601.4778 1.4875 1.0724M9 6c-.1352-.4735-.7506-.9219-1.46-.8972-.7092.0246-1.344.57-1.344 1.2166s.4198.8812 1.3445.9805C8.465 7.3992 8.968 7.9337 9 8.5c.032.5663-.454 1.398-1.4595 1.398C6.6593 9.898 6 9 5.963 8.4851m-1.4748.5368c-.2635.5941-.8099.876-1.5443.876s-1.7073-.6248-1.7073-2.204v-.4603c0-1.0416.721-2.131 1.7073-2.131.9864 0 1.6425 1.031 1.5443 2.2492h-2.956"></path></g></svg>',Il=Symbol(""),vg=()=>{const s=W(!1);yi(Il,s)},fg=s=>{const i=W([]);{const a=sd(),n=xs(),e=Pi();ys(()=>{const{suggest:t,terminate:l}=dg(),r=p=>{const k=p.join(" "),{searchFilter:d,splitWord:o,suggestionsFilter:c=y=>y,...A}=a.value;k?t(k,e.value,A).then(y=>c(y,k,e.value,n.value)).then(y=>{i.value=y.length?Za(y[0],k)&&!y[0].slice(k.length).includes(" ")?y:[k,...y]:[]}).catch(y=>{console.warn(y)}):i.value=[]};ts([s,e],([p])=>r(p),{immediate:!0}),Ca(()=>{l()})})}return{suggestions:i}},ut=Xk[0];var Fg=S({name:"SearchBox",setup(){const s=ka(Sl),i=fs(Il),a=W(!1),n=F(()=>ut?[(a.value?["⌃","⇧","⌥","⌘"]:["Ctrl","Shift","Alt","Win"]).filter((e,t)=>ut[["ctrl","shift","alt","meta"][t]]),ut.key.toUpperCase()]:null);return ws("keydown",e=>{!i.value&&gg(e)&&!Ag(e.target)&&(e.preventDefault(),i.value=!0)}),ys(()=>{const{userAgent:e}=navigator;a.value=kA(e)||pA(e)||rA(e)}),()=>[h("button",{type:"button",class:"search-pro-button","aria-label":s.value.search,onClick:()=>{i.value=!0}},[h(Ol),h("div",{class:"search-pro-placeholder"},s.value.search),n.value?h("div",{class:"search-pro-key-hints"},n.value.map(e=>h("kbd",{class:"search-pro-key"},e))):null])]}});const Cg=gl({loader:()=>B(()=>import("./SearchResult-BywKza-k.js"),[]),loadingComponent:()=>{const s=ka(Sl);return h(Qk,{hint:s.value.loading})}});var bg=S({name:"SearchModal",setup(){const s=fs(Il),i=tn(),a=hA(),n=ka(Sl),e=sd(),t=W(""),l=W([]),{suggestions:r}=fg(l),p=W(!1),{index:k,prev:d,next:o}=Bg(r),c=Ls(),A=Ls(),y=(f=k.value)=>{t.value=r.value[f],p.value=!1};ws("keydown",f=>{p.value?f.key==="ArrowUp"?d():f.key==="ArrowDown"?o():f.key==="Enter"?y():f.key==="Escape"&&(p.value=!1):f.key==="Escape"&&(s.value=!1)});const m=vk(()=>{var f,v;(((v=(f=e.value).splitWord)==null?void 0:v.call(f,t.value))??Promise.resolve(t.value.split(" "))).then(C=>{l.value=C})},Math.min(be.searchDelay,be.suggestDelay));return ts(t,m,{immediate:!0}),ys(()=>{const f=Tl(document.body);ts(s,async v=>{var C;f.value=v,v&&(await Si(),(C=c.value)==null||C.focus())}),sB(A,()=>{p.value=!1}),Ca(()=>{f.value=!1})}),()=>s.value?h("div",{class:"search-pro-modal-wrapper"},[h("div",{class:"search-pro-mask",onClick:()=>{s.value=!1,t.value=""}}),h("div",{class:"search-pro-modal"},[h("div",{class:"search-pro-box"},[h("form",[h("label",{for:"search-pro","aria-label":n.value.search},h(Ol)),h("input",{ref:c,type:"search",class:"search-pro-input",id:"search-pro",placeholder:n.value.placeholder,spellcheck:"false",autocapitalize:"off",autocomplete:"off",autocorrect:"off",name:`${i.value.title}-search`,value:t.value,"aria-controls":"search-pro-results",onKeydown:f=>{const{key:v}=f;r.value.length&&(v==="Tab"?(y(),f.preventDefault()):(v==="ArrowDown"||v==="ArrowUp"||v==="Escape")&&f.preventDefault())},onInput:({target:f})=>{t.value=f.value,p.value=!0,k.value=0}}),t.value?h("button",{type:"reset",class:"search-pro-clear-button",innerHTML:hg,onClick:()=>{t.value=""}}):null,p.value&&r.value.length?h("ul",{class:"search-pro-suggestions",ref:A},r.value.map((f,v)=>h("li",{class:["search-pro-suggestion",{active:v===k.value}],onClick:()=>{y(v)}},[h("kbd",{class:"search-pro-auto-complete",title:`Tab ${n.value.autocomplete}`},"Tab"),f]))):null]),h("button",{type:"button",class:"search-pro-close-button",onClick:()=>{s.value=!1,t.value=""}},n.value.cancel)]),h(Cg,{queries:l.value,isFocusing:!p.value,onClose:()=>{s.value=!1},onUpdateQuery:f=>{t.value=f}}),a.value?null:h("div",{class:"search-pro-hints"},[h("span",{class:"search-pro-hint"},[h("kbd",{innerHTML:yg}),n.value.select]),h("span",{class:"search-pro-hint"},[h("kbd",{innerHTML:Eg}),h("kbd",{innerHTML:ug}),n.value.navigate]),h("span",{class:"search-pro-hint"},[h("kbd",{innerHTML:mg}),n.value.exit])])])]):null}}),Dg=xi({enhance({app:s}){cg(s),s.component("SearchBox",Fg)},setup(){vg()},rootComponents:[bg]});const _g=Object.freeze(Object.defineProperty({__proto__:null,default:Dg},Symbol.toStringTag,{value:"Module"})),id=()=>{const s=xs();return F(()=>s.value.readingTime??null)},ad=(s,i)=>{const{minutes:a,words:n}=s,{less1Minute:e,word:t,time:l}=i;return{time:a<1?e:l.replace("$time",Math.round(a).toString()),words:t.replace("$word",n.toString())}};var gr={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const yr={words:"",time:""},Ht=typeof gr>"u"?null:gr,nd=()=>Ht?ka(Ht):F(()=>null),xg=()=>{if(typeof Ht>"u")return F(()=>yr);const s=id(),i=nd();return F(()=>s.value&&i.value?ad(s.value,i.value):yr)},Mi=()=>Lk(),hs=()=>GB(),Ys=()=>{const s=Mi();return F(()=>!!s.value.pure)},ge=()=>null,wg="719px",Tg="1440px",Lg="false",Rg="9",wa={mobileBreakPoint:wg,pcBreakPoint:Tg,enableThemeColor:Lg,colorNumber:Rg},Pl={"/study/":[{text:"CSS",prefix:"CSS/",collapsible:!0,icon:"css",children:["水平垂直居中","BFC","常见布局","清除浮动"]},{text:"Express",prefix:"Express/",collapsible:!0,icon:"vue",children:["01.入门","02.数据库"]},{text:"HTML",prefix:"HTML/",collapsible:!0,icon:"html",children:["语义化与SEO","移动端适配","重绘与重排"]},{text:"Javascript",prefix:"Javascript/",collapsible:!0,icon:"javascript",children:["数据类型","数组","字符串","类型转换","操作符","遍历循环","深拷贝与浅拷贝","解构赋值","变量提升","ES6-ES11","节流与防抖","原型链与继承","this","闭包","二进制","异步编程","事件循环","Web API","前端模块化","内存泄漏","跨域","网络请求","DOM事件机制"]},{text:"Linux",prefix:"Linux/",collapsible:!0,icon:"linux",children:["01.介绍","02.基础","03.用户和用户组","04.目录与文件","05.文件权限","06.vi编辑器","07.yum","08.shell基础"]},{text:"Mysql",prefix:"mysql/",collapsible:!0,icon:"mysql",children:["01.homebew安装mysql","02.DDL语言"]},{text:"Nginx",prefix:"Nginx/",collapsible:!0,icon:"nginx",children:["01.安装","02.目录结构"]},{text:"React",prefix:"React/",collapsible:!0,icon:"react",children:["脚手架","父子组件通信","插槽","setState","useState","useReducer","useContext","useRef","useEffect","useLayoutEffect","useMemo","useCallback","useTransition","useDeferredValue","redux","react-redux","redux Toolkit"]},{text:"Typescript",prefix:"Typescript/",collapsible:!0,icon:"typescript",children:["类型","类型推断与断言","类型守卫","联合类型、类型别名、交叉类型","接口","泛型","类","装饰器","编译","模块和声明文件"]},{text:"Vue",prefix:"vue/",collapsible:!0,icon:"vue",children:["入口分析","响应式数据原理","模板编译原理","初始渲染原理","渲染更新原理","异步更新原理","diff算法原理","mixin混入原理","侦听器属性原理","计算属性原理"]},{text:"工程化",prefix:"工程化/",collapsible:!0,icon:"javascript",children:["Git"]},{text:"浏览器",prefix:"浏览器/",collapsible:!0,icon:"liulanqi",children:["输入URL过程","浏览器存储","垃圾回收"]},{text:"网络",prefix:"网络/",collapsible:!0,icon:"wangluo",children:["TCP与UDP","WebSocket"]},{text:"设计模式",prefix:"设计模式/",collapsible:!0,icon:"sheji",children:["01.构造器模式","02.原型模式","03.工厂模式","04.建造者模式","05.单例模式","06.装饰器模式","07.适配器模式","08.策略模式","09.代理模式","10.观察者模式","11.发布订阅模式","12.模块模式","13.桥接模式","14.组合模式","15.命令模式","16.模板方法模式","17.迭代器模式","18.职责链模式"]},{text:"软考",prefix:"软考/",collapsible:!0,icon:"sheji",children:["01.系统工程与信息系统基础","02.软件工程","03.项目管理","04.软件架构设计","05.系统可靠性分析与设计","06.信息安全","07.安全架构设计","08.计算机系统基础","09.嵌入式系统","10.计算机网络","11.数据库系统"]}],"/interview/":["01.HTML面试题","02.CSS面试题","03.JS面试题","04.VUE面试题","05.React面试题","06.浏览器原理面试题","07.网络面试题","08.前端工程化面试题","09.性能优化面试题","10.其他"],"/threejs/":[{text:"其他",prefix:"其他/",collapsible:!0,children:["八叉树检测","Lod"]},{text:"几何体",prefix:"几何体/",collapsible:!0,children:["立方缓冲几何体","圆形缓冲几何体","圆锥缓冲几何体","圆柱缓冲几何体","十二面缓冲几何体","边缘几何体","二十面缓冲几何体","车削缓冲几何体","八面缓冲几何体","平面缓冲几何体","多面缓冲几何体","圆环缓冲几何体","形状缓冲几何体","球缓冲几何体","四面缓冲几何体","圆环缓冲几何体(TorusGeometry)","圆环缓冲扭结几何体","管道缓冲几何体","网格几何体","凸包几何体","挤压缓冲几何体","曲线","BufferGeometry","Cure","曲线路径"]},{text:"加载器",prefix:"加载器/",collapsible:!0,children:["LoadingManager","DefaultLoadingManager"]},{text:"动画",prefix:"动画/",collapsible:!0,children:["AnimationMixer","AnimationClip","AnimationAction"]},{text:"基础",prefix:"基础/",collapsible:!0,children:["基本场景","时钟","光线投射"]},{text:"控制器",prefix:"控制器/",collapsible:!0,children:["轨道控制器"]},{text:"摄像机",prefix:"摄像机/",collapsible:!0,children:["摄像机","透视相机","正交相机","立方相机","立体相机","摄像机阵列"]},{text:"材质",prefix:"材质/",collapsible:!0,children:["基础线条材质","虚线材质","基础网格材质","深度网格材质","MeshDistanceMaterial","Lambert网格材质","材质捕捉纹理材质","法线网格材质","Phong网格材质","物理网格材质","标准网格材质","原始着色器材质","着色器材质","阴影材质","点材质","点精灵材质","材质"]},{text:"渲染器",prefix:"渲染器/",collapsible:!0,children:["WebGLRenderer"]},{text:"灯光",prefix:"灯光/",collapsible:!0,children:["环境光","平行光","半球光","点光源","平面光光源","聚光灯","Light"]}],"/project/":["01.vue3-vite","02.vue2-webpack","03.图片懒加载","04.python实现webm转mp4","05.Git","06.Eslint","07.uniapp分环境打包","08.uniapp蓝牙操作","09.HTML"],"/other/":[]},ed=s=>{const{icon:i="",color:a,size:n}=s,e=a||n?{}:null;return a&&(e.color=a),n&&(e.height=Number.isNaN(Number(n))?n:`${n}px`),ba(i)?h("img",{class:"icon",src:i,alt:"","no-view":"",style:e}):Me(i)?h("img",{class:"icon",src:vs(i),alt:"","aria-hidden":"","no-view":"",style:e}):h(gi("FontIcon"),s)};ed.displayName="HopeIcon";var zs=ed;const td=()=>{const s=hs();return F(()=>s.value.author)},jg="http://.",Ta=()=>{const s=Da(),i=Ii();return a=>{if(a)if(Me(a))i.path!==a&&s.push(a);else if(Hn(a))window&&window.open(a);else{const n=i.path.slice(0,i.path.lastIndexOf("/"));s.push(new URL(`${n}/${encodeURI(a)}`,jg).pathname)}}},ld=()=>{const s=cs(),i=td();return F(()=>{const{author:a}=s.value;return a?Tn(a):a===!1?[]:Tn(i.value,!1)})},Og=()=>{const s=cs(),i=fs(Symbol.for("categoryMap"));return F(()=>zk(s.value.category??s.value.categories).map(a=>{var n;return{name:a,path:((n=i==null?void 0:i.value.map[a])==null?void 0:n.path)??""}}))},Sg=()=>{const s=cs(),i=fs(Symbol.for("tagMap"));return F(()=>Gk(s.value.tag??s.value.tags).map(a=>{var n;return{name:a,path:((n=i==null?void 0:i.value.map[a])==null?void 0:n.path)??""}}))},Ig=()=>{const s=cs(),i=xs();return F(()=>{const a=Dl(s.value.date);if(a)return a;const{createdTime:n}=i.value.git??{};return n?new Date(n):null})},Pg=()=>{const s=hs(),i=xs(),a=cs(),n=ld(),e=Og(),t=Sg(),l=Ig(),r=id(),p=xg(),k=F(()=>({author:n.value,category:e.value,date:l.value,localizedDate:i.value.localizedDate,tag:t.value,isOriginal:a.value.isOriginal??!1,readingTime:r.value,readingTimeLocale:p.value,pageview:a.value.pageview??!0})),d=F(()=>a.value.pageInfo??s.value.pageInfo??null);return{info:k,items:d}},Ml=(s,i)=>"activeMatch"in i?new RegExp(i.activeMatch,"u").test(s.path):Hk(s,i.link),Vl=(s,i)=>"children"in i?!!i.prefix&&Hk(s,i.prefix)||i.children.some(a=>Vl(s,a)):Ml(s,i),$t=s=>!Oe(s)&&!Hn(s);var Js=(s=>(s.title="t",s.shortTitle="s",s.icon="i",s.index="I",s.order="O",s.breadcrumbExclude="b",s))(Js||{}),$s=(s=>(s.type="y",s.author="a",s.date="d",s.localizedDate="l",s.category="c",s.tag="g",s.isEncrypted="n",s.isOriginal="o",s.readingTime="r",s.excerpt="e",s.sticky="u",s.cover="v",s))($s||{}),hd=(s=>(s.article="a",s.home="h",s.slide="s",s.page="p",s))(hd||{});const De=(s,i=!1,a)=>{const{meta:n,path:e,notFound:t}=ui(s,a);return t?{text:e,link:e}:{text:!i&&n[Js.shortTitle]?n[Js.shortTitle]:n[Js.title]||e,link:e,...n[Js.icon]?{icon:n[Js.icon]}:{}}},ya=(s="",i="")=>Me(i)||Hn(i)?i:`${qp(s)}${i}`,rd=(s,i)=>{const a=Ts(s)?De(ya(i,s)):s.link?{...s,link:$t(s.link)?ui(ya(i,s.link)).path:s.link}:s;if("children"in a){const n=ya(i,a.prefix),e=a.children==="structure"?Pl[n]:a.children;return{...a,prefix:n,children:e.map(t=>rd(t,n))}}return{...a}},Nt=({config:s,prefix:i=""})=>s.map(a=>rd(a,i)),Mg=({config:s,routePath:i,headerDepth:a})=>{const n=bi(s).sort((e,t)=>t.length-e.length);for(const e of n)if(Za(decodeURI(i),e)){const t=s[e];return Nt({config:t==="structure"?Pl[e]:t||[],headerDepth:a,prefix:e})}return console.warn(`${decodeURI(i)} is missing sidebar config.`),[]},Vg=({config:s,headerDepth:i,routeLocale:a,routePath:n})=>s==="structure"?Nt({config:Pl[a],headerDepth:i,prefix:a}):Mt(s)?Nt({config:s,headerDepth:i}):en(s)?Mg({config:s,routePath:n,headerDepth:i}):[],pd=Symbol(""),Hg=()=>{const s=cs(),i=hs(),a=Pi(),n=o3(),e=F(()=>s.value.home?!1:s.value.sidebar??i.value.sidebar??"structure"),t=F(()=>s.value.headerDepth??i.value.headerDepth??2),l=F(()=>Vg({config:e.value,headerDepth:t.value,routeLocale:a.value,routePath:n.value}));yi(pd,l)},Hl=()=>{const s=fs(pd);if(!s)throw new Error("useSidebarItems() is called without provider.");return s},{mobileBreakPoint:$g,pcBreakPoint:Ng}=wa,ur=s=>s.endsWith("px")?Number(s.slice(0,-2)):null,Wn=()=>{const s=W(!1),i=W(!1),a=()=>{s.value=window.innerWidth<=(ur($g)??719),i.value=window.innerWidth>=(ur(Ng)??1440)};return ws("resize",a,!1),ws("orientationchange",a,!1),ys(()=>{a()}),{isMobile:s,isPC:i}},kd=Symbol(""),qn=()=>{const s=fs(kd);if(!s)throw new Error("useDarkmode() is called without provider.");return s},zg=s=>{const i=Mi(),a=rB(),n=F(()=>i.value.darkmode??"switch"),e=xa("vuepress-theme-hope-scheme","auto"),t=F(()=>{const r=n.value;return r==="disable"?!1:r==="enable"?!0:r==="auto"?a.value:r==="toggle"?e.value==="dark":e.value==="dark"||e.value==="auto"&&a.value}),l=F(()=>{const r=n.value;return r==="switch"||r==="toggle"});s.provide(kd,{canToggle:l,config:n,isDarkmode:t,status:e}),Object.defineProperties(s.config.globalProperties,{$isDarkmode:{get:()=>t.value}})},Gg=()=>{const{config:s,isDarkmode:i,status:a}=qn();xp(()=>{s.value==="disable"?a.value="light":s.value==="enable"?a.value="dark":s.value==="toggle"&&a.value==="auto"&&(a.value="light")}),ys(()=>{ts(i,n=>document.documentElement.setAttribute("data-theme",n?"dark":"light"),{immediate:!0})})};var Ug=S({name:"PageFooter",setup(){const s=Mi(),i=hs(),a=cs(),n=ld(),e=F(()=>{const{copyright:k,footer:d}=a.value;return d!==!1&&!!(k||d||i.value.displayFooter)}),t=F(()=>{const{footer:k}=a.value;return k===!1?!1:Ts(k)?k:i.value.footer??""}),l=F(()=>n.value.map(({name:k})=>k).join(", ")),r=k=>`Copyright © ${new Date().getFullYear()} ${l.value} ${k?`${k} Licensed`:""}`,p=F(()=>{const{copyright:k,license:d=""}=a.value,{license:o}=s.value,{copyright:c}=i.value;return k??(d?r(d):c??(l.value||o?r(o):!1))});return()=>e.value?h("footer",{class:"vp-footer-wrapper"},[t.value?h("div",{class:"vp-footer",innerHTML:t.value}):null,p.value?h("div",{class:"vp-copyright",innerHTML:p.value}):null]):null}}),Xs=S({name:"AutoLink",props:{config:{type:Object,required:!0}},emits:["focusout"],slots:Object,setup(s,{emit:i,slots:a}){return()=>{const{icon:n}=s.config;return h(y3,{...s,onFocusout:()=>i("focusout")},{default:a.default?()=>a.default():null,before:a.before?()=>a.before():n?()=>h(zs,{icon:n}):null,after:a.after?()=>a.after():null})}}}),Wg=S({name:"NavbarDropdown",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:i}){const a=xs(),n=an(s,"config"),e=F(()=>n.value.ariaLabel??n.value.text),t=W(!1);ts(()=>a.value.path,()=>{t.value=!1});const l=r=>{r.detail===0&&(t.value=!t.value)};return()=>{var r;return h("div",{class:["vp-dropdown-wrapper",{open:t.value}]},[h("button",{type:"button",class:"vp-dropdown-title","aria-label":e.value,onClick:l},[((r=i.title)==null?void 0:r.call(i))||[h(zs,{icon:n.value.icon}),s.config.text],h("span",{class:"arrow"}),h("ul",{class:"vp-dropdown"},n.value.children.map((p,k)=>{const d=k===n.value.children.length-1;return h("li",{class:"vp-dropdown-item"},"children"in p?[h("h4",{class:"vp-dropdown-subtitle"},p.link?h(Xs,{config:p,onFocusout:()=>{p.children.length===0&&d&&(t.value=!1)}}):p.text),h("ul",{class:"vp-dropdown-subitems"},p.children.map((o,c)=>h("li",{class:"vp-dropdown-subitem"},h(Xs,{config:o,onFocusout:()=>{c===p.children.length-1&&d&&(t.value=!1)}}))))]:h(Xs,{config:p,onFocusout:()=>{d&&(t.value=!1)}}))}))])])}}});const dd=(s,i="")=>Ts(s)?De(ya(i,s)):"children"in s?{...s,...s.link&&$t(s.link)?{link:ui(ya(i,s.link)).path}:{},children:s.children.map(a=>dd(a,ya(i,s.prefix)))}:{...s,link:$t(s.link)?ui(ya(i,s.link)).path:s.link},od=()=>{const s=hs();return F(()=>(s.value.navbar||[]).map(i=>dd(i)))},qg=()=>{const s=hs(),i=F(()=>s.value.repo),a=F(()=>i.value?aA(i.value):null),n=F(()=>i.value?Rl(i.value):null),e=F(()=>a.value?s.value.repoLabel??n.value??"Source":null);return F(()=>!a.value||!e.value||s.value.repoDisplay===!1?null:{type:n.value??"Source",label:e.value,link:a.value})};var Jg=S({name:"NavScreenMenu",props:{config:{type:Object,required:!0}},setup(s){const i=xs(),a=an(s,"config"),n=F(()=>a.value.ariaLabel??a.value.text),e=W(!1);ts(()=>i.value.path,()=>{e.value=!1});const t=(l,r)=>r[r.length-1]===l;return()=>[h("button",{type:"button",class:["vp-nav-screen-menu-title",{active:e.value}],"aria-label":n.value,onClick:()=>{e.value=!e.value}},[h("span",{class:"text"},[h(zs,{icon:a.value.icon}),s.config.text]),h("span",{class:["arrow",e.value?"down":"end"]})]),h("ul",{class:["vp-nav-screen-menu",{hide:!e.value}]},a.value.children.map(l=>h("li",{class:"vp-nav-screen-menu-item"},"children"in l?[h("h4",{class:"vp-nav-screen-menu-subtitle"},l.link?h(Xs,{config:l,onFocusout:()=>{t(l,a.value.children)&&l.children.length===0&&(e.value=!1)}}):l.text),h("ul",{class:"vp-nav-screen-menu-subitems"},l.children.map(r=>h("li",{class:"vp-nav-screen-menu-subitem"},h(Xs,{config:r,onFocusout:()=>{t(r,l.children)&&t(l,a.value.children)&&(e.value=!1)}}))))]:h(Xs,{config:l,onFocusout:()=>{t(l,a.value.children)&&(e.value=!1)}}))))]}}),Kg=S({name:"NavScreenLinks",setup(){const s=od();return()=>s.value.length?h("nav",{class:"nav-screen-links"},s.value.map(i=>h("div",{class:"navbar-links-item"},"children"in i?h(Jg,{config:i}):h(Xs,{config:i})))):null}});const cd=()=>h(ls,{name:"dark"},()=>h("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));cd.displayName="DarkIcon";const Bd=()=>h(ls,{name:"light"},()=>h("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Bd.displayName="LightIcon";const Ad=()=>h(ls,{name:"auto"},()=>h("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Ad.displayName="AutoIcon";const gd=()=>h(ls,{name:"enter-fullscreen"},()=>h("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));gd.displayName="EnterFullScreenIcon";const yd=()=>h(ls,{name:"cancel-fullscreen"},()=>h("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));yd.displayName="CancelFullScreenIcon";const ud=()=>h(ls,{name:"outlook"},()=>[h("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);ud.displayName="OutlookIcon";var Ed=S({name:"ColorModeSwitch",setup(){const{config:s,isDarkmode:i,status:a}=qn(),n=Ys(),e=()=>{s.value==="switch"?a.value={light:"dark",dark:"auto",auto:"light"}[a.value]:a.value=a.value==="light"?"dark":"light"},t=async l=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!n.value)||!l){e();return}const r=l.clientX,p=l.clientY,k=Math.hypot(Math.max(r,innerWidth-r),Math.max(p,innerHeight-p)),d=i.value;await document.startViewTransition(async()=>{e(),await Si()}).ready,i.value!==d&&document.documentElement.animate({clipPath:i.value?[`circle(${k}px at ${r}px ${p}px)`,`circle(0px at ${r}px ${p}px)`]:[`circle(0px at ${r}px ${p}px)`,`circle(${k}px at ${r}px ${p}px)`]},{duration:400,pseudoElement:i.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>h("button",{type:"button",class:"vp-color-mode-switch",id:"color-mode-switch",onClick:t},[h(Ad,{style:{display:a.value==="auto"?"block":"none"}}),h(cd,{style:{display:a.value==="dark"?"block":"none"}}),h(Bd,{style:{display:a.value==="light"?"block":"none"}})])}}),Yg=S({name:"ColorMode",setup(){const s=hs(),{canToggle:i}=qn(),a=F(()=>s.value.outlookLocales.darkmode);return()=>i.value?h("div",{class:"vp-color-mode"},[h("label",{class:"vp-color-mode-title",for:"color-mode-switch"},a.value),h(Ed)]):null}});const Er=wa.enableThemeColor==="true";var md=S({name:"ToggleFullScreenButton",setup(){const s=hs(),{isSupported:i,isFullscreen:a,toggle:n}=wl(),e=F(()=>s.value.outlookLocales.fullscreen);return()=>i?h("div",{class:"full-screen-wrapper"},[h("label",{class:"full-screen-title",for:"full-screen-switch"},e.value),h("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:a.value,onClick:()=>n()},a.value?h(yd):h(gd))]):null}}),vd=S({name:"OutlookSettings",setup(){const s=Mi(),i=Ys(),a=F(()=>!i.value&&s.value.fullscreen);return()=>h(Pe,()=>[null,h(Yg),a.value?h(md):null])}}),Qg=S({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(s,{emit:i,slots:a}){const n=xs(),{isMobile:e}=Wn(),t=Ls(),l=Tl(t);return ys(()=>{t.value=document.body,ts(e,r=>{!r&&s.show&&(l.value=!1,i("close"))}),ts(()=>n.value.path,()=>{l.value=!1,i("close")})}),Ca(()=>{l.value=!1}),()=>h(Ya,{name:"fade",onEnter:()=>{l.value=!0},onAfterLeave:()=>{l.value=!1}},()=>{var r,p;return s.show?h("div",{id:"nav-screen",class:"vp-nav-screen"},h("div",{class:"vp-nav-screen-container"},[(r=a.before)==null?void 0:r.call(a),h(Kg),h("div",{class:"vp-outlook-wrapper"},h(vd)),(p=a.after)==null?void 0:p.call(a)])):null})}}),Xg=S({name:"NavbarBrand",setup(){const s=Pi(),i=tn(),a=hs(),n=F(()=>a.value.home??s.value),e=F(()=>i.value.title),t=F(()=>a.value.navbarTitle??e.value),l=F(()=>a.value.logo?vs(a.value.logo):null),r=F(()=>a.value.logoDark?vs(a.value.logoDark):null);return()=>h(Rs,{to:n.value,class:"vp-brand"},()=>[l.value?h("img",{class:["vp-nav-logo",{light:!!r.value}],src:l.value,alt:""}):null,r.value?h("img",{class:["vp-nav-logo dark"],src:r.value,alt:""}):null,t.value?h("span",{class:["vp-site-name",{"hide-in-pad":l.value&&(a.value.hideSiteNameOnMobile??!0)}]},t.value):null])}}),Zg=S({name:"NavbarLinks",setup(){const s=od();return()=>s.value.length?h("nav",{class:"vp-nav-links"},s.value.map(i=>h("div",{class:"vp-nav-item hide-in-mobile"},"children"in i?h(Wg,{config:i}):h(Xs,{config:i})))):null}}),s4=S({name:"RepoLink",setup(){const s=qg();return()=>s.value?h("div",{class:"vp-nav-item vp-action"},h("a",{class:"vp-action-link",href:s.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":s.value.label},h(nA,{type:s.value.type,style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const fd=({active:s=!1},{emit:i})=>h("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":s}],"aria-label":"Toggle Navbar","aria-expanded":s,"aria-controls":"nav-screen",onClick:()=>i("toggle")},h("span",[h("span",{class:"vp-top"}),h("span",{class:"vp-middle"}),h("span",{class:"vp-bottom"})]));fd.displayName="ToggleNavbarButton";const zt=(s,{emit:i})=>h("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>i("toggle")},h("span",{class:"icon"}));zt.displayName="ToggleSidebarButton",zt.emits=["toggle"];var i4=S({name:"OutlookButton",setup(){const s=Mi(),i=xs(),{canToggle:a}=qn(),{isSupported:n}=wl(),e=Ys(),t=W(!1),l=F(()=>!e.value&&s.value.fullscreen&&n),r=F(()=>a.value||l.value);return ts(()=>i.value.path,()=>{t.value=!1}),()=>r.value?h("div",{class:"vp-nav-item hide-in-mobile"},a.value&&!l.value&&!Er?h(Ed):l.value&&!a.value&&!Er?h(md):h("button",{type:"button",class:["vp-outlook-button",{open:t.value}],tabindex:"-1","aria-hidden":!0},[h(ud),h("div",{class:"vp-outlook-dropdown"},h(vd))])):null}}),a4=S({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(s,{emit:i,slots:a}){const n=hs(),{isMobile:e}=Wn(),t=W(!1),l=F(()=>{const{navbarAutoHide:d="mobile"}=n.value;return d!=="none"&&(d==="always"||e.value)}),r=F(()=>n.value.navbarLayout??{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),p={Brand:Xg,Language:ge,Links:Zg,Repo:s4,Outlook:i4,Search:Ks("Docsearch")?gi("Docsearch"):Ks("SearchBox")?gi("SearchBox"):ge},k=d=>p[d]??(Ks(d)?gi(d):ge);return()=>{var d,o,c,A,y,m,f,v,C;return[h("header",{key:"navbar",id:"navbar",class:["vp-navbar",{"auto-hide":l.value}]},[h("div",{class:"vp-navbar-start"},[h(zt,{onToggle:()=>{t.value&&(t.value=!1),i("toggleSidebar")}}),(d=a.startBefore)==null?void 0:d.call(a),(o=r.value.start)==null?void 0:o.map(E=>h(k(E))),(c=a.startAfter)==null?void 0:c.call(a)]),h("div",{class:"vp-navbar-center"},[(A=a.centerBefore)==null?void 0:A.call(a),(y=r.value.center)==null?void 0:y.map(E=>h(k(E))),(m=a.centerAfter)==null?void 0:m.call(a)]),h("div",{class:"vp-navbar-end"},[(f=a.endBefore)==null?void 0:f.call(a),(v=r.value.end)==null?void 0:v.map(E=>h(k(E))),(C=a.endAfter)==null?void 0:C.call(a),h(fd,{active:t.value,onToggle:()=>{t.value=!t.value}})])]),h(Qg,{show:t.value,onClose:()=>{t.value=!1}},{before:a.screenTop?()=>a.screenTop():null,after:a.screenBottom?()=>a.screenBottom():null})]}}}),n4=S({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(s){const i=Ii();return()=>Ts(s.config.link)?h(Xs,{class:["vp-sidebar-link",{active:Ml(i,s.config)}],config:{...s.config,exact:!0}}):h("p",s,[h(zs,{icon:s.config.icon}),s.config.text])}}),e4=S({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(s,{emit:i}){const a=Ii(),n=W(!1),e=F(()=>Vl(a,s.config)),t=F(()=>Ml(a,s.config)),l=F(()=>s.open||s.config.expanded&&!n.value);return()=>{const{collapsible:r,children:p=[],icon:k,prefix:d,link:o,text:c}=s.config;return h("section",{class:"vp-sidebar-group"},[h(r?"button":"p",{class:["vp-sidebar-header",{clickable:r||o,exact:t.value,active:e.value}],...r?{type:"button",onClick:()=>{n.value=!0,i("toggle")}}:{}},[h(zs,{icon:k}),o?h(Xs,{class:"vp-sidebar-title no-external-link-icon",config:{text:c,link:o}}):h("span",{class:"vp-sidebar-title"},c),r?h("span",{class:["vp-arrow",l.value?"down":"end"]}):null]),l.value||!r?h(Fd,{key:d,config:p}):null])}}}),Fd=S({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(s){const i=Ii(),a=W(-1),n=e=>{a.value=e===a.value?-1:e};return ts(()=>i.path,()=>{const e=s.config.findIndex(t=>Vl(i,t));a.value=e},{immediate:!0,flush:"post"}),()=>h("ul",{class:"vp-sidebar-links"},s.config.map((e,t)=>h("li","children"in e?h(e4,{config:e,open:t===a.value,onToggle:()=>n(t)}):h(n4,{config:e}))))}}),t4=S({name:"SideBar",slots:Object,setup(s,{slots:i}){const a=Ii(),n=Hl(),e=Ls();return ys(()=>{ts(()=>a.hash,t=>{const l=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${a.path}${t}"]`);if(!l)return;const{top:r,height:p}=e.value.getBoundingClientRect(),{top:k,height:d}=l.getBoundingClientRect();k<r?l.scrollIntoView(!0):k+d>r+p&&l.scrollIntoView(!1)},{immediate:!0})}),()=>{var t,l,r;return h("aside",{ref:e,key:"sidebar",id:"sidebar",class:"vp-sidebar"},[(t=i.top)==null?void 0:t.call(i),((l=i.default)==null?void 0:l.call(i))??h(Fd,{config:n.value}),(r=i.bottom)==null?void 0:r.call(i)])}}}),$l=S({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(s,{slots:i}){const a=Da(),n=cs(),e=Mi(),t=hs(),{isMobile:l,isPC:r}=Wn(),p=Ys(),[k,d]=xn(!1),[o,c]=xn(!1),A=Hl(),y=W(!1),m=F(()=>s.noNavbar||n.value.navbar===!1||t.value.navbar===!1?!1:!!(t.value.logo??t.value.repo??t.value.navbar)),f=F(()=>s.noSidebar?!1:n.value.sidebar!==!1&&A.value.length!==0&&!n.value.home),v=F(()=>n.value.externalLinkIcon??e.value.externalLinkIcon??!0),C=F(()=>!s.noToc&&!n.value.home&&(n.value.toc??t.value.toc??!0)),E={x:0,y:0},b=P=>{E.x=P.changedTouches[0].clientX,E.y=P.changedTouches[0].clientY},O=P=>{const Y=P.changedTouches[0].clientX-E.x,V=P.changedTouches[0].clientY-E.y;Math.abs(Y)>Math.abs(V)*1.5&&Math.abs(Y)>40&&(Y>0&&E.x<=80?d(!0):d(!1))};let U=0;return ws("scroll",Y3(()=>{const P=window.scrollY;P<=58||P<U?y.value=!1:U+200<P&&!k.value&&(y.value=!0),U=P},300,!0)),ts(l,P=>{P||d(!1)}),ys(()=>{const P=Tl(document.body);ts(k,V=>{P.value=V});const Y=a.afterEach(()=>{d(!1)});Ca(()=>{P.value=!1,Y()})}),()=>h(Ks("GlobalEncrypt")?gi("GlobalEncrypt"):He,()=>h("div",{class:["theme-container",{"hide-navbar":y.value,"no-navbar":!m.value,"sidebar-collapsed":!l.value&&!r.value&&o.value,"sidebar-open":l.value&&k.value,"no-sidebar":!f.value&&!i.sidebar&&!i.sidebarTop&&!i.sidebarBottom,"external-link-icon":v.value,pure:p.value,"has-toc":C.value},s.containerClass,n.value.containerClass??""],onTouchStart:b,onTouchEnd:O},[m.value?h(a4,{onToggleSidebar:()=>d()},{startBefore:i.navbarStartBefore?()=>i.navbarStartBefore():null,startAfter:i.navbarStartAfter?()=>i.navbarStartAfter():null,centerBefore:i.navbarCenterBefore?()=>i.navbarCenterBefore():null,centerAfter:i.navbarCenterAfter?()=>i.navbarCenterAfter():null,endBefore:i.navbarEndBefore?()=>i.navbarEndBefore():null,endAfter:i.navbarEndAfter?()=>i.navbarEndAfter():null,screenTop:i.navScreenTop?()=>i.navScreenTop():null,screenBottom:i.navScreenBottom?()=>i.navScreenBottom():null}):null,h(Ya,{name:"fade"},()=>k.value?h("div",{class:"vp-sidebar-mask",onClick:()=>d(!1)}):null),h(Ya,{name:"fade"},()=>l.value?null:h("div",{class:"toggle-sidebar-wrapper",onClick:()=>c()},h("span",{class:["arrow",o.value?"end":"start"]}))),h(t4,{},{default:i.sidebar?()=>i.sidebar():null,top:i.sidebarTop?()=>i.sidebarTop():null,bottom:i.sidebarBottom?()=>i.sidebarBottom():null}),i.default(),h(Ug)]))}});const es=S({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(s,{slots:i}){const a=e=>{e.style.transition=`transform ${s.duration}s ease-in-out ${s.delay}s, opacity ${s.duration}s ease-in-out ${s.delay}s`,e.style.transform="translateY(-20px)",e.style.opacity="0"},n=e=>{e.style.transform="translateY(0)",e.style.opacity="1"};return()=>{const e={name:"drop",appear:s.appear,onAppear:a,onAfterAppear:n,onEnter:a,onAfterEnter:n,onBeforeLeave:a},t=()=>i.default();return s.type==="group"?h(Ic,e,t):h(Ya,e,t)}}}),sn=({custom:s})=>h(kk,{class:["theme-hope-content",{custom:s}]});sn.displayName="MarkdownContent",sn.props={custom:Boolean};const Cd=()=>h(ls,{name:"author"},()=>h("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Cd.displayName="AuthorIcon";const bd=()=>h(ls,{name:"calendar"},()=>h("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));bd.displayName="CalendarIcon";const Dd=()=>h(ls,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Dd.displayName="CategoryIcon";const _d=()=>h(ls,{name:"print"},()=>h("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));_d.displayName="PrintIcon";const xd=()=>h(ls,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));xd.displayName="TagIcon";const wd=()=>h(ls,{name:"timer"},()=>h("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));wd.displayName="TimerIcon";const Td=()=>h(ls,{name:"word"},()=>[h("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),h("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Td.displayName="WordIcon";const da=()=>{const s=hs();return F(()=>s.value.metaLocales)};var l4=S({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0}},setup(s){const i=da(),a=Ys();return()=>s.author.length?h("span",{class:"page-author-info","aria-label":`${i.value.author}${a.value?"":"🖊"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(Cd),h("span",s.author.map(n=>n.url?h("a",{class:"page-author-item",href:n.url,target:"_blank",rel:"noopener noreferrer"},n.name):h("span",{class:"page-author-item"},n.name))),h("span",{property:"author",content:s.author.map(n=>n.name).join(", ")})]):null}}),h4=S({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0}},setup(s){const i=da(),a=Ta(),n=Ys();return()=>s.category.length?h("span",{class:"page-category-info","aria-label":`${i.value.category}${n.value?"":"🌈"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(Dd),s.category.map(({name:e,path:t})=>h("span",{class:["page-category-item",{[`color${Un(e,Number(wa.colorNumber))}`]:!n.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&a(t)}},e)),h("meta",{property:"articleSection",content:s.category.map(({name:e})=>e).join(",")})]):null}}),r4=S({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""}},setup(s){const i=hk(),a=da(),n=Ys();return()=>s.date?h("span",{class:"page-date-info","aria-label":`${a.value.date}${n.value?"":"📅"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(bd),h("span",h(Pe,()=>s.localizedDate||s.date.toLocaleDateString(i.value))),h("meta",{property:"datePublished",content:s.date.toISOString()||""})]):null}}),p4=S({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(s){const i=da();return()=>s.isOriginal?h("span",{class:"page-original-info"},i.value.origin):null}}),k4=S({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const i=da(),a=Ys(),n=F(()=>{if(!s.readingTime)return null;const{minutes:e}=s.readingTime;return e<1?"PT1M":`PT${Math.round(e)}M`});return()=>{var e,t;return(e=s.readingTimeLocale)!=null&&e.time?h("span",{class:"page-reading-time-info","aria-label":`${i.value.readingTime}${a.value?"":"⌛"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(wd),h("span",(t=s.readingTimeLocale)==null?void 0:t.time),h("meta",{property:"timeRequired",content:n.value})]):null}}}),d4=S({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]}},setup(s){const i=da(),a=Ta(),n=Ys();return()=>s.tag.length?h("span",{class:"page-tag-info","aria-label":`${i.value.tag}${n.value?"":"🏷"}`,...n.value?{}:{"data-balloon-pos":"up"}},[h(xd),s.tag.map(({name:e,path:t})=>h("span",{class:["page-tag-item",{[`color${Un(e,Number(wa.colorNumber))}`]:!n.value,clickable:t}],role:t?"navigation":"",onClick:()=>{t&&a(t)}},e)),h("meta",{property:"keywords",content:s.tag.map(({name:e})=>e).join(",")})]):null}}),o4=S({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null}},setup(s){const i=da(),a=Ys();return()=>{var n,e,t;return(n=s.readingTimeLocale)!=null&&n.words?h("span",{class:"page-word-info","aria-label":`${i.value.words}${a.value?"":"🔠"}`,...a.value?{}:{"data-balloon-pos":"up"}},[h(Td),h("span",(e=s.readingTimeLocale)==null?void 0:e.words),h("meta",{property:"wordCount",content:(t=s.readingTime)==null?void 0:t.words})]):null}}}),Ld=S({name:"PageInfo",components:{AuthorInfo:l4,CategoryInfo:h4,DateInfo:r4,OriginalInfo:p4,PageViewInfo:ge,ReadingTimeInfo:k4,TagInfo:d4,WordInfo:o4},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(s){const i=Ys();return()=>s.items?h("div",{class:"page-info"},s.items.map(a=>h(gi(`${a}Info`),{...s.info,isPure:i.value}))):null}}),c4=S({name:"PrintButton",setup(){const s=Mi(),i=hs();return()=>s.value.print===!1?null:h("button",{type:"button",class:"print-button",title:i.value.metaLocales.print,onClick:()=>{window.print()}},h(_d))}}),Rd=S({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(s,{slots:i}){const a=Ii(),n=xs(),e=da(),[t,l]=xn(),r=Ls(),p=W("-1.7rem"),k=o=>{var c;(c=r.value)==null||c.scrollTo({top:o,behavior:"smooth"})},d=()=>{if(r.value){const o=document.querySelector(".vp-toc-item.active");o?p.value=`${o.getBoundingClientRect().top-r.value.getBoundingClientRect().top+r.value.scrollTop}px`:p.value="-1.7rem"}else p.value="-1.7rem"};return ys(()=>{ts(()=>a.hash,o=>{if(r.value){const c=document.querySelector(`#toc a.vp-toc-link[href$="${o}"]`);if(!c)return;const{top:A,height:y}=r.value.getBoundingClientRect(),{top:m,height:f}=c.getBoundingClientRect();m<A?k(r.value.scrollTop+m-A):m+f>A+y&&k(r.value.scrollTop+m+f-A-y)}}),ts(()=>a.fullPath,d,{flush:"post",immediate:!0})}),()=>{var y,m;const o=({title:f,level:v,slug:C})=>h(Rs,{to:`#${C}`,class:["vp-toc-link",`level${v}`],onClick:()=>{l()}},()=>f),c=(f,v)=>f.length&&v>0?h("ul",{class:"vp-toc-list"},f.map(C=>{const E=c(C.children,v-1);return[h("li",{class:["vp-toc-item",{active:a.hash===`#${C.slug}`}]},o(C)),E?h("li",E):null]})):null,A=s.items.length?c(s.items,s.headerDepth):n.value.headers?c(n.value.headers,s.headerDepth):null;return A?h("div",{class:"vp-toc-placeholder"},[h("aside",{id:"toc"},[(y=i.before)==null?void 0:y.call(i),h("div",{class:"vp-toc-header",onClick:()=>{l()}},[e.value.toc,h(c4),h("div",{class:["arrow",t.value?"down":"end"]})]),h("div",{class:["vp-toc-wrapper",t.value?"open":""],ref:r},[A,h("div",{class:"vp-toc-marker",style:{top:p.value}})]),(m=i.after)==null?void 0:m.call(i)])]):null}}}),Nl=S({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(s){const i=xs(),a=hs(),n=Ls(),e=({target:t})=>{const l=document.querySelector(t.hash);if(l){const r=()=>{l.removeAttribute("tabindex"),l.removeEventListener("blur",r)};l.setAttribute("tabindex","-1"),l.addEventListener("blur",r),l.focus(),window.scrollTo(0,0)}};return ys(()=>{ts(()=>i.value.path,()=>n.value.focus())}),()=>[h("span",{ref:n,tabindex:"-1"}),h("a",{href:`#${s.content}`,class:"vp-skip-link sr-only",onClick:e},a.value.routeLocales.skipToContent)]}});let Et=null,kn=null;const Gt={wait:()=>Et,pending:()=>{Et=new Promise(s=>{kn=s})},resolve:()=>{kn==null||kn(),Et=null,kn=null}},zl=(s,{slots:i})=>h(Ya,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:Gt.resolve,onBeforeLeave:Gt.pending},()=>i.default());zl.displayName="FadeSlideY";const B4=(s,i)=>{const a=s.replace(i,"/").split("/"),n=[];let e=fl(i);return a.forEach((t,l)=>{l!==a.length-1?(e+=`${t}/`,n.push({link:e,name:t||"Home"})):t!==""&&(e+=t,n.push({link:e,name:t}))}),n},mr=(s,i)=>s===!1?s:en(s)?{...s,link:De(s.link,!0,i).link}:Ts(s)?De(s,!0,i):null,Ut=(s,i,a)=>{const n=s.findIndex(t=>t.link===i);if(n!==-1){const t=s[n+a];return t?t.link?t:"prefix"in t&&!ui(t.prefix).notFound?{...t,link:t.prefix}:null:null}for(const t of s)if("children"in t){const l=Ut(t.children,i,a);if(l)return l}const e=s.findIndex(t=>"prefix"in t&&t.prefix===i);if(e!==-1){const t=s[e+a];return t?t.link?t:"prefix"in t&&!ui(t.prefix).notFound?{...t,link:t.prefix}:null:null}return null},A4=()=>{const s=cs(),i=hs(),a=Hl(),n=Ii(),e=F(()=>{const l=mr(s.value.prev,n.path);return l===!1?null:l??(i.value.prevLink===!1?null:Ut(a.value,n.path,-1))}),t=F(()=>{const l=mr(s.value.next,n.path);return l===!1?null:l??(i.value.nextLink===!1?null:Ut(a.value,n.path,1))});return{prevLink:e,nextLink:t}},Wt=(s,{slots:i})=>{var o,c;const{bgImage:a,bgImageDark:n,bgImageStyle:e,color:t,description:l,image:r,imageDark:p,header:k,features:d=[]}=s;return h("div",{class:"vp-feature-wrapper"},[a?h("div",{class:["vp-feature-bg",{light:n}],style:[{"background-image":`url(${a})`},e]}):null,n?h("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${n})`},e]}):null,h("div",{class:"vp-feature",style:t?{color:t}:{}},[((o=i.image)==null?void 0:o.call(i,s))??[r?h("img",{class:["vp-feature-image",{light:p}],src:vs(r),alt:""}):null,p?h("img",{class:"vp-feature-image dark",src:vs(p),alt:""}):null],((c=i.info)==null?void 0:c.call(i,s))??[k?h("h2",{class:"vp-feature-header"},k):null,l?h("p",{class:"vp-feature-description",innerHTML:l}):null],d.length?h("div",{class:"vp-features"},d.map(({icon:A,title:y,details:m,link:f})=>{const v=[h("h3",{class:"vp-feature-title"},[h(zs,{icon:A}),h("span",{innerHTML:y})]),h("p",{class:"vp-feature-details",innerHTML:m})];return f?Oe(f)?h("a",{class:"vp-feature-item link",href:f,"aria-label":y,target:"_blank"},v):h(Rs,{class:"vp-feature-item link",to:f,"aria-label":y},()=>v):h("div",{class:"vp-feature-item"},v)})):null])])};Wt.displayName="FeaturePanel";var g4=S({name:"HeroInfo",slots:Object,setup(s,{slots:i}){const a=cs(),n=tn(),e=F(()=>a.value.heroFullScreen??!1),t=F(()=>{const{heroText:k,tagline:d}=a.value;return{text:k??n.value.title??"Hello",tagline:d??n.value.description??"",isFullScreen:e.value}}),l=F(()=>{const{heroText:k,heroImage:d,heroImageDark:o,heroAlt:c,heroImageStyle:A}=a.value;return{image:d?vs(d):null,imageDark:o?vs(o):null,imageStyle:A,alt:c??k??"",isFullScreen:e.value}}),r=F(()=>{const{bgImage:k,bgImageDark:d,bgImageStyle:o}=a.value;return{image:Ts(k)?vs(k):null,imageDark:Ts(d)?vs(d):null,bgStyle:o,isFullScreen:e.value}}),p=F(()=>a.value.actions??[]);return()=>{var k,d,o;return h("header",{class:["vp-hero-info-wrapper",{fullscreen:e.value}]},[((k=i.bg)==null?void 0:k.call(i,r.value))??[r.value.image?h("div",{class:["vp-hero-mask",{light:r.value.imageDark}],style:[{"background-image":`url(${r.value.image})`},r.value.bgStyle]}):null,r.value.imageDark?h("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${r.value.imageDark})`},r.value.bgStyle]}):null],h("div",{class:"vp-hero-info"},[((d=i.logo)==null?void 0:d.call(i,l.value))??h(es,{appear:!0,type:"group"},()=>{const{image:c,imageDark:A,imageStyle:y,alt:m}=l.value;return[c?h("img",{key:"light",class:["vp-hero-image",{light:A}],style:y,src:c,alt:m}):null,A?h("img",{key:"dark",class:"vp-hero-image dark",style:y,src:A,alt:m}):null]}),((o=i.info)==null?void 0:o.call(i,t.value))??h("div",{class:"vp-hero-infos"},[t.value.text?h(es,{appear:!0,delay:.04},()=>h("h1",{id:"main-title",class:"vp-hero-title"},t.value.text)):null,t.value.tagline?h(es,{appear:!0,delay:.08},()=>h("p",{id:"main-description",innerHTML:t.value.tagline})):null,p.value.length?h(es,{appear:!0,delay:.12},()=>h("p",{class:"vp-hero-actions"},p.value.map(c=>h(Xs,{class:["vp-hero-action",c.type??"default","no-external-link-icon"],config:c},c.icon?{before:()=>h(zs,{icon:c.icon})}:{})))):null])])])}}});const jd=(s,{slots:i})=>{var c,A,y;const{bgImage:a,bgImageDark:n,bgImageStyle:e,color:t,description:l,image:r,imageDark:p,header:k,highlights:d=[],type:o="un-order"}=s;return h("div",{class:"vp-highlight-wrapper",style:t?{color:t}:{}},[a?h("div",{class:["vp-highlight-bg",{light:n}],style:[{"background-image":`url(${a})`},e]}):null,n?h("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${n})`},e]}):null,h("div",{class:"vp-highlight"},[((c=i.image)==null?void 0:c.call(i,s))??[r?h("img",{class:["vp-highlight-image",{light:p}],src:vs(r),alt:""}):null,p?h("img",{class:"vp-highlight-image dark",src:vs(p),alt:""}):null],((A=i.info)==null?void 0:A.call(i,s))??[h("div",{class:"vp-highlight-info-wrapper"},h("div",{class:"vp-highlight-info"},[k?h("h2",{class:"vp-highlight-header",innerHTML:k}):null,l?h("p",{class:"vp-highlight-description",innerHTML:l}):null,((y=i.highlights)==null?void 0:y.call(i,d))??h(o==="order"?"ol":o==="no-order"?"dl":"ul",{class:"vp-highlights"},d.map(({icon:m,title:f,details:v,link:C})=>{const E=[h(o==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[m?h(zs,{class:"vp-highlight-icon",icon:m}):null,h("span",{innerHTML:f})]),v?h(o==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:v}):null];return h(o==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:C}]},C?Oe(C)?h("a",{class:"vp-highlight-item link",href:C,"aria-label":f,target:"_blank"},E):h(Rs,{class:"vp-highlight-item link",to:C,"aria-label":f},()=>E):h("div",{class:"vp-highlight-item"},E))}))]))]])])};jd.displayName="HighlightPanel";var y4=S({name:"HomePage",slots:Object,setup(s,{slots:i}){const a=cs(),n=F(()=>{const{features:t}=a.value;return Mt(t)?t:null}),e=F(()=>{const{highlights:t}=a.value;return Mt(t)?t:null});return()=>{var t,l,r,p;return h("main",{id:"main-content",class:"vp-page vp-project-home","aria-labelledby":a.value.heroText===null?"":"main-title"},[(t=i.top)==null?void 0:t.call(i),h(g4),((l=e.value)==null?void 0:l.map(k=>"features"in k?h(Wt,k):h(jd,k)))??(n.value?h(es,{appear:!0,delay:.24},()=>h(Wt,{features:n.value})):null),(r=i.center)==null?void 0:r.call(i),h(es,{appear:!0,delay:.32},()=>h(sn)),(p=i.bottom)==null?void 0:p.call(i)])}}}),u4=S({name:"BreadCrumb",setup(){const s=xs(),i=Pi(),a=cs(),n=hs(),e=Ls([]),t=F(()=>(a.value.breadcrumb??n.value.breadcrumb??!0)&&e.value.length>1),l=F(()=>a.value.breadcrumbIcon??n.value.breadcrumbIcon??!0),r=()=>{const p=B4(s.value.path,i.value).map(({link:k,name:d})=>{const{path:o,meta:c,notFound:A}=ui(k);return A||c[Js.breadcrumbExclude]?null:{title:c[Js.shortTitle]||c[Js.title]||d,icon:c[Js.icon],path:o}}).filter(k=>k!==null);p.length>1&&(e.value=p)};return ys(()=>{ts(()=>s.value.path,r,{immediate:!0})}),()=>h("nav",{class:["vp-breadcrumb",{disable:!t.value}]},t.value?h("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},e.value.map((p,k)=>h("li",{class:{"is-active":e.value.length-1===k},property:"itemListElement",typeof:"ListItem"},[h(Rs,{to:p.path,property:"item",typeof:"WebPage"},()=>[l.value?h(zs,{icon:p.icon}):null,h("span",{property:"name"},p.title||"Unknown")]),h("meta",{property:"position",content:k+1})]))):[])}}),E4=S({name:"PageNav",setup(){const s=hs(),i=Ta(),{prevLink:a,nextLink:n}=A4();return ws("keydown",e=>{e.altKey&&(e.key==="ArrowRight"?n.value&&(i(n.value.link),e.preventDefault()):e.key==="ArrowLeft"&&a.value&&(i(a.value.link),e.preventDefault()))}),()=>a.value||n.value?h("nav",{class:"vp-page-nav"},[a.value?h(Xs,{class:"prev",config:a.value},()=>{var e,t;return[h("div",{class:"hint"},[h("span",{class:"arrow start"}),s.value.metaLocales.prev]),h("div",{class:"link"},[h(zs,{icon:(e=a.value)==null?void 0:e.icon}),(t=a.value)==null?void 0:t.text])]}):null,n.value?h(Xs,{class:"next",config:n.value},()=>{var e,t;return[h("div",{class:"hint"},[s.value.metaLocales.next,h("span",{class:"arrow end"})]),h("div",{class:"link"},[(e=n.value)==null?void 0:e.text,h(zs,{icon:(t=n.value)==null?void 0:t.icon})])]}):null]):null}});const m4=()=>{const s=hs(),i=xs(),a=cs();return F(()=>{var n;return a.value.contributors??s.value.contributors??!0?((n=i.value.git)==null?void 0:n.contributors)??null:null})},v4={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},f4=({docsRepo:s,docsBranch:i,docsDir:a,filePathRelative:n,editLinkPattern:e})=>{if(!n)return null;const t=Rl(s);let l;return e?l=e:t!==null&&(l=v4[t]),l?l.replace(/:repo/u,ba(s)?s:`https://github.com/${s}`).replace(/:branch/u,i).replace(/:path/u,Jp(`${fl(a)}/${n}`)):null},F4=()=>{const s=hs(),i=xs(),a=cs();return F(()=>{const{repo:n,docsRepo:e=n,docsBranch:t="main",docsDir:l="",editLink:r,editLinkPattern:p=""}=s.value;if(!(a.value.editLink??r??!0)||!e)return null;const k=f4({docsRepo:e,docsBranch:t,docsDir:l,editLinkPattern:p,filePathRelative:i.value.filePathRelative});return k?{text:s.value.metaLocales.editLink,link:k}:null})},C4=()=>{const s=tn(),i=hs(),a=xs(),n=cs();return F(()=>{var e,t;return!(n.value.lastUpdated??i.value.lastUpdated??!0)||!((e=a.value.git)!=null&&e.updatedTime)?null:new Date((t=a.value.git)==null?void 0:t.updatedTime).toLocaleString(s.value.lang)})};var b4=S({name:"PageTitle",setup(){const s=xs(),i=cs(),a=hs(),{info:n,items:e}=Pg();return()=>h("div",{class:"vp-page-title"},[h("h1",[a.value.titleIcon===!1?null:h(zs,{icon:i.value.icon}),s.value.title]),h(Ld,{info:n.value,...e.value===null?{}:{items:e.value}}),h("hr")])}});const Od=()=>h(ls,{name:"edit"},()=>[h("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),h("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);Od.displayName="EditIcon";var D4=S({name:"PageMeta",setup(){const s=hs(),i=F4(),a=C4(),n=m4();return()=>{var t;const{metaLocales:e}=s.value;return h("footer",{class:"vp-page-meta"},[i.value?h("div",{class:"vp-meta-item edit-link"},h(Xs,{class:"vp-meta-label",config:i.value},{before:()=>h(Od)})):null,h("div",{class:"vp-meta-item git-info"},[a.value?h("div",{class:"update-time"},[h("span",{class:"vp-meta-label"},`${e.lastUpdated}: `),h(Pe,()=>h("span",{class:"vp-meta-info"},a.value))]):null,(t=n.value)!=null&&t.length?h("div",{class:"contributors"},[h("span",{class:"vp-meta-label"},`${e.contributors}: `),n.value.map(({email:l,name:r},p)=>[h("span",{class:"vp-meta-info",title:`email: ${l}`},r),p!==n.value.length-1?",":""])]):null])])}}}),_4=S({name:"NormalPage",slots:Object,setup(s,{slots:i}){const a=cs(),{isDarkmode:n}=qn(),e=hs(),t=F(()=>a.value.toc??e.value.toc??!0),l=F(()=>a.value.headerDepth??e.value.headerDepth??2);return()=>h("main",{id:"main-content",class:"vp-page"},h(Ks("LocalEncrypt")?gi("LocalEncrypt"):He,()=>{var r,p,k,d;return[(r=i.top)==null?void 0:r.call(i),a.value.cover?h("div",{class:"page-cover"},h("img",{src:vs(a.value.cover),alt:"","no-view":""})):null,h(u4),h(b4),t.value?h(Rd,{headerDepth:l.value},{before:i.tocBefore?()=>i.tocBefore():null,after:i.tocAfter?()=>i.tocAfter():null}):null,(p=i.contentBefore)==null?void 0:p.call(i),h(sn),(k=i.contentAfter)==null?void 0:k.call(i),h(D4),h(E4),Ks("CommentService")?h(gi("CommentService"),{darkmode:n.value}):null,(d=i.bottom)==null?void 0:d.call(i)]}))}}),x4=S({name:"PortfolioHero",slots:Object,setup(s,{slots:i}){const a=td(),n=cs(),e=W(0),t=F(()=>{var c;return((c=n.value.titles)==null?void 0:c[e.value])??""}),l=W(""),r=F(()=>{const{name:c,avatar:A,avatarDark:y,avatarAlt:m,avatarStyle:f}=n.value;return{name:c??a.value.name,avatar:A?vs(A):null,avatarDark:y?vs(y):null,avatarStyle:f,alt:(m||c)??""}}),p=F(()=>{const{bgImage:c,bgImageDark:A,bgImageStyle:y}=n.value;return{image:Ts(c)?vs(c):null,imageDark:Ts(A)?vs(A):null,bgStyle:y}}),k=F(()=>{const{welcome:c,name:A,titles:y,medias:m}=n.value;return{name:A??a.value.name,welcome:c??"👋 Hi There, I'm",title:l.value,titles:y??[],medias:m??[]}}),d=()=>{l.value="";let c=0,A=!1;const y=async()=>{if(!A)if(l.value+=t.value[c],c+=1,await Si(),c<t.value.length)setTimeout(()=>{y()},150);else{const m=k.value.titles.length;setTimeout(()=>{e.value=m<=1||e.value===k.value.titles.length-1?0:e.value+1},1e3)}};return y(),()=>{A=!0}};let o;return ys(()=>{ts(t,()=>{o==null||o(),o=d()},{immediate:!0})}),()=>{var c,A,y;return h("section",{id:"portfolio",class:["vp-portfolio",{bg:p.value.image}]},[((c=i.bg)==null?void 0:c.call(i,p.value))??[p.value.image?h("div",{class:["vp-portfolio-mask",{light:p.value.imageDark}],style:[{background:`url(${p.value.image}) center/cover no-repeat`},p.value.bgStyle]}):null,p.value.imageDark?h("div",{class:"vp-portfolio-mask dark",style:[{background:`url(${p.value.imageDark}) center/cover no-repeat`},p.value.bgStyle]}):null],((A=i.avatar)==null?void 0:A.call(i,r.value))??h("div",{class:"vp-portfolio-avatar"},[h(es,{delay:.04},()=>{const{avatarDark:m,name:f,alt:v,avatarStyle:C}=r.value;return[h("img",{key:"light",class:{light:m},src:r.value.avatar,title:f,alt:v,style:C}),m?h("img",{key:"dark",class:"dark",src:m,title:f,alt:v,style:C}):null]})]),h("div",{class:"vp-portfolio-container"},((y=i.info)==null?void 0:y.call(i,k.value))??h("div",{class:"vp-portfolio-info"},[h(es,{appear:!0,delay:.08},()=>h("h6",{class:"vp-portfolio-welcome"},k.value.welcome)),h(es,{appear:!0,delay:.12},()=>h("h1",{class:"vp-portfolio-name",id:"main-title"},k.value.name)),h(es,{appear:!0,delay:.16},()=>h("h2",{class:"vp-portfolio-title"},l.value)),h(es,{appear:!0,delay:.2},()=>k.value.medias.length?h("div",{class:"vp-portfolio-medias"},k.value.medias.map(({name:m,url:f,icon:v})=>h("a",{class:"vp-portfolio-media",href:f,rel:"noopener noreferrer",target:"_blank",title:m},h(zs,{icon:v})))):Ks("SocialMedias")?h(gi("SocialMedias")):null)]))])}}}),w4=S({name:"PortfolioHome",setup(){const s=cs(),i=F(()=>s.value.content??"portfolio");return()=>h("main",{id:"main-content",class:"vp-page vp-portfolio-home","aria-labelledby":"main-title"},[h(x4),i.value==="none"?null:h("div",{},h(es,{appear:!0,delay:.24},()=>h(sn,{class:{"vp-portfolio-content":i.value==="portfolio"}})))])}}),T4=S({name:"Layout",slots:Object,setup(s,{slots:i}){const a=Mi(),n=hs(),e=xs(),t=cs(),l=Ys(),{isMobile:r}=Wn(),p=F(()=>{var k,d;return((k=n.value.blog)==null?void 0:k.sidebarDisplay)??((d=a.value.blog)==null?void 0:d.sidebarDisplay)??"mobile"});return()=>[h(Nl),h($l,{},{default:()=>{var k;return((k=i.default)==null?void 0:k.call(i))??(t.value.portfolio?h(w4):t.value.home?h(y4):h(l.value?He:zl,()=>h(_4,{key:e.value.path},{top:i.top?()=>i.top():null,bottom:i.bottom?()=>i.bottom():null,contentBefore:i.contentBefore?()=>i.contentBefore():null,contentAfter:i.contentAfter?()=>i.contentAfter():null,tocBefore:i.tocBefore?()=>i.tocBefore():null,tocAfter:i.tocAfter?()=>i.tocAfter():null})))},navScreenBottom:p.value==="none"&&Ks("BloggerInfo")?()=>h(gi("BloggerInfo")):null,sidebar:!r.value&&p.value==="always"&&Ks("BloggerInfo")?()=>h(gi("BloggerInfo")):null})]}}),L4=S({name:"NotFoundHint",setup(){const s=hs(),i=()=>{const a=s.value.routeLocales.notFoundMsg;return a[Math.floor(Math.random()*a.length)]};return()=>h("div",{class:"not-found-hint"},[h("p",{class:"error-code"},"404"),h("h1",{class:"error-title"},s.value.routeLocales.notFoundTitle),h("p",{class:"error-hint"},i())])}}),R4=S({name:"NotFound",slots:Object,setup(s,{slots:i}){const a=Da(),n=Pi(),e=hs();return()=>[h(Nl),h($l,{noSidebar:!0},()=>{var t;return h("main",{id:"main-content",class:"vp-page not-found"},((t=i.default)==null?void 0:t.call(i))??[h(L4),h("div",{class:"actions"},[h("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},e.value.routeLocales.back),h("button",{type:"button",class:"action-button",onClick:()=>{a.push(e.value.home??n.value)}},e.value.routeLocales.home)])])})]}});const j4={Github:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>'},O4={category:{"/":{path:"/category/",map:{面试:{path:"/category/%E9%9D%A2%E8%AF%95/",indexes:[0,1,2,3,4,5,6,7,8,9]},项目:{path:"/category/%E9%A1%B9%E7%9B%AE/",indexes:[10,11,12]},其他:{path:"/category/%E5%85%B6%E4%BB%96/",indexes:[13]},git:{path:"/category/git/",indexes:[14,15]},eslint:{path:"/category/eslint/",indexes:[16]},uniapp:{path:"/category/uniapp/",indexes:[17,18]},html:{path:"/category/html/",indexes:[19]},CSS:{path:"/category/css/",indexes:[20,21,22,23]},Vue:{path:"/category/vue/",indexes:[24,25,26,27,28,29,30,31,32,33,34,35]},HTML:{path:"/category/html/",indexes:[36,37,38]},Javascript:{path:"/category/javascript/",indexes:[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61]},Linux:{path:"/category/linux/",indexes:[62,63,64,65,66,67,68,69]},Nginx:{path:"/category/nginx/",indexes:[70,71]},react:{path:"/category/react/",indexes:[72,73,74]},React:{path:"/category/react/",indexes:[75,76,77,78,79,80,81,82,83,84,85,86,87,88]},Typescript:{path:"/category/typescript/",indexes:[89,90,91,92,93,94,95,96,97,98]},Mysql:{path:"/category/mysql/",indexes:[99,100]},浏览器:{path:"/category/%E6%B5%8F%E8%A7%88%E5%99%A8/",indexes:[101,102,103]},网络:{path:"/category/%E7%BD%91%E7%BB%9C/",indexes:[104,105]},设计模式:{path:"/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",indexes:[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123]},软考:{path:"/category/%E8%BD%AF%E8%80%83/",indexes:[124,125,126,127,128,129,130,131,132,133,134]},threejs:{path:"/category/threejs/",indexes:[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201]}}}},tag:{"/":{path:"/tag/",map:{html:{path:"/tag/html/",indexes:[19,2]},css:{path:"/tag/css/",indexes:[3]},Javascript:{path:"/tag/javascript/",indexes:[4]},Vue:{path:"/tag/vue/",indexes:[5]},React:{path:"/tag/react/",indexes:[6]},浏览器原理:{path:"/tag/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86/",indexes:[7]},网络:{path:"/tag/%E7%BD%91%E7%BB%9C/",indexes:[0]},前端工程化:{path:"/tag/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",indexes:[8]},性能优化:{path:"/tag/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/",indexes:[9]},其他:{path:"/tag/%E5%85%B6%E4%BB%96/",indexes:[1,13]},vue3:{path:"/tag/vue3/",indexes:[10]},vue2:{path:"/tag/vue2/",indexes:[11]},懒加载:{path:"/tag/%E6%87%92%E5%8A%A0%E8%BD%BD/",indexes:[12]},git:{path:"/tag/git/",indexes:[14,15]},eslint:{path:"/tag/eslint/",indexes:[16]},uniapp:{path:"/tag/uniapp/",indexes:[18]},蓝牙:{path:"/tag/%E8%93%9D%E7%89%99/",indexes:[17]},BFC:{path:"/tag/bfc/",indexes:[22]},布局:{path:"/tag/%E5%B8%83%E5%B1%80/",indexes:[21,23]},清除浮动:{path:"/tag/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/",indexes:[20]},express:{path:"/tag/express/",indexes:[24,25]},移动端:{path:"/tag/%E7%A7%BB%E5%8A%A8%E7%AB%AF/",indexes:[37]},语义化:{path:"/tag/%E8%AF%AD%E4%B9%89%E5%8C%96/",indexes:[38]},页面渲染:{path:"/tag/%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93/",indexes:[36,103]},事件机制:{path:"/tag/%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6/",indexes:[45]},"ES6-ES11":{path:"/tag/es6-es11/",indexes:[53]},"Web API":{path:"/tag/web-api/",indexes:[46]},this:{path:"/tag/this/",indexes:[57]},事件循环:{path:"/tag/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/",indexes:[47]},二进制:{path:"/tag/%E4%BA%8C%E8%BF%9B%E5%88%B6/",indexes:[58]},内存泄漏:{path:"/tag/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/",indexes:[48]},前端模块化:{path:"/tag/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96/",indexes:[49]},原型:{path:"/tag/%E5%8E%9F%E5%9E%8B/",indexes:[59]},变量提升:{path:"/tag/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87/",indexes:[54]},字符串:{path:"/tag/%E5%AD%97%E7%AC%A6%E4%B8%B2/",indexes:[39]},异步编程:{path:"/tag/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/",indexes:[50]},操作符:{path:"/tag/%E6%93%8D%E4%BD%9C%E7%AC%A6/",indexes:[40]},数据类型:{path:"/tag/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/",indexes:[60]},数组:{path:"/tag/%E6%95%B0%E7%BB%84/",indexes:[41]},深拷贝与浅拷贝:{path:"/tag/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D/",indexes:[55]},类型转换:{path:"/tag/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",indexes:[42]},ajax:{path:"/tag/ajax/",indexes:[51]},节流与防抖:{path:"/tag/%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96/",indexes:[52]},解构赋值:{path:"/tag/%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC/",indexes:[56]},跨域:{path:"/tag/%E8%B7%A8%E5%9F%9F/",indexes:[43]},遍历:{path:"/tag/%E9%81%8D%E5%8E%86/",indexes:[44]},闭包:{path:"/tag/%E9%97%AD%E5%8C%85/",indexes:[61]},Linux:{path:"/tag/linux/",indexes:[62,63,64,65,66,67,68,69]},Nginx:{path:"/tag/nginx/",indexes:[70,71]},redux:{path:"/tag/redux/",indexes:[72,73,74]},setState:{path:"/tag/setstate/",indexes:[81]},Hook:{path:"/tag/hook/",indexes:[75,76,77,78,79,80,82,83,84,85]},插槽:{path:"/tag/%E6%8F%92%E6%A7%BD/",indexes:[86]},父子组件通信:{path:"/tag/%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/",indexes:[87]},脚手架:{path:"/tag/%E8%84%9A%E6%89%8B%E6%9E%B6/",indexes:[88]},接口:{path:"/tag/%E6%8E%A5%E5%8F%A3/",indexes:[89]},模块和声明文件:{path:"/tag/%E6%A8%A1%E5%9D%97%E5%92%8C%E5%A3%B0%E6%98%8E%E6%96%87%E4%BB%B6/",indexes:[90]},泛型:{path:"/tag/%E6%B3%9B%E5%9E%8B/",indexes:[91]},类:{path:"/tag/%E7%B1%BB/",indexes:[92]},类型:{path:"/tag/%E7%B1%BB%E5%9E%8B/",indexes:[96]},类型守卫:{path:"/tag/%E7%B1%BB%E5%9E%8B%E5%AE%88%E5%8D%AB/",indexes:[97]},类型推断与断言:{path:"/tag/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E4%B8%8E%E6%96%AD%E8%A8%80/",indexes:[98]},编译:{path:"/tag/%E7%BC%96%E8%AF%91/",indexes:[93]},"联合类型、类型别名、交叉类型":{path:"/tag/%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D%E3%80%81%E4%BA%A4%E5%8F%89%E7%B1%BB%E5%9E%8B/",indexes:[94]},装饰器:{path:"/tag/%E8%A3%85%E9%A5%B0%E5%99%A8/",indexes:[95]},Mysql:{path:"/tag/mysql/",indexes:[99,100]},diff算法原理:{path:"/tag/diff%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86/",indexes:[27]},mixin混入原理:{path:"/tag/mixin%E6%B7%B7%E5%85%A5%E5%8E%9F%E7%90%86/",indexes:[28]},侦听器属性原理:{path:"/tag/%E4%BE%A6%E5%90%AC%E5%99%A8%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86/",indexes:[29]},入口:{path:"/tag/%E5%85%A5%E5%8F%A3/",indexes:[35]},渲染原理:{path:"/tag/%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86/",indexes:[30,31,34]},响应式数据:{path:"/tag/%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE/",indexes:[32]},模板编译:{path:"/tag/%E6%A8%A1%E6%9D%BF%E7%BC%96%E8%AF%91/",indexes:[33]},计算属性原理:{path:"/tag/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86/",indexes:[26]},垃圾回收:{path:"/tag/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6/",indexes:[101]},存储:{path:"/tag/%E5%AD%98%E5%82%A8/",indexes:[102]},"TCP/IP":{path:"/tag/tcpip/",indexes:[104]},WebSocket:{path:"/tag/websocket/",indexes:[105]},构造器模式:{path:"/tag/%E6%9E%84%E9%80%A0%E5%99%A8%E6%A8%A1%E5%BC%8F/",indexes:[119]},原型模式:{path:"/tag/%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F/",indexes:[120]},工厂模式:{path:"/tag/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/",indexes:[121]},建造者模式:{path:"/tag/%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/",indexes:[122]},单例模式:{path:"/tag/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/",indexes:[123]},装饰器模式:{path:"/tag/%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F/",indexes:[116]},适配器模式:{path:"/tag/%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F/",indexes:[117]},策略模式:{path:"/tag/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/",indexes:[118]},代理模式:{path:"/tag/%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/",indexes:[107]},观察者模式:{path:"/tag/%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/",indexes:[108]},发布订阅模式:{path:"/tag/%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F/",indexes:[109]},模块模式:{path:"/tag/%E6%A8%A1%E5%9D%97%E6%A8%A1%E5%BC%8F/",indexes:[110]},桥接模式:{path:"/tag/%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/",indexes:[111]},组合模式:{path:"/tag/%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F/",indexes:[112,113]},模板方法模式:{path:"/tag/%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F/",indexes:[114,115]},职责链模式:{path:"/tag/%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F/",indexes:[106]},软考:{path:"/tag/%E8%BD%AF%E8%80%83/",indexes:[124,125,126,127,128,129,130,131,132,133,134]},Lod:{path:"/tag/lod/",indexes:[135]},八叉树检测:{path:"/tag/%E5%85%AB%E5%8F%89%E6%A0%91%E6%A3%80%E6%B5%8B/",indexes:[136]},几何体:{path:"/tag/%E5%87%A0%E4%BD%95%E4%BD%93/",indexes:[138,139,140,153,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198]},加载器:{path:"/tag/%E5%8A%A0%E8%BD%BD%E5%99%A8/",indexes:[141,142]},动画:{path:"/tag/%E5%8A%A8%E7%94%BB/",indexes:[143,144,145]},射线检测:{path:"/tag/%E5%B0%84%E7%BA%BF%E6%A3%80%E6%B5%8B/",indexes:[154]},场景:{path:"/tag/%E5%9C%BA%E6%99%AF/",indexes:[199]},Clock:{path:"/tag/clock/",indexes:[200]},轨道控制器:{path:"/tag/%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8/",indexes:[201]},摄像机:{path:"/tag/%E6%91%84%E5%83%8F%E6%9C%BA/",indexes:[146,147,148,149,150,151]},材质:{path:"/tag/%E6%9D%90%E8%B4%A8/",indexes:[152,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177]},渲染器:{path:"/tag/%E6%B8%B2%E6%9F%93%E5%99%A8/",indexes:[137]},灯光:{path:"/tag/%E7%81%AF%E5%85%89/",indexes:[155,156,157,158,159,160,161]}}}}},Sd=["/interview/07.%E7%BD%91%E7%BB%9C%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/10.%E5%85%B6%E4%BB%96.html","/interview/01.HTML%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/02.CSS%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/03.JS%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/04.VUE%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/05.React%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/06.%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/08.%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E9%9D%A2%E8%AF%95%E9%A2%98.html","/interview/09.%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E9%9D%A2%E8%AF%95%E9%A2%98.html","/project/01.vue3-vite.html","/project/02.vue2-webpack.html","/project/03.%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD.html","/project/04.python%E5%AE%9E%E7%8E%B0webm%E8%BD%ACmp4.html","/project/05.Git.html","/study/%E5%B7%A5%E7%A8%8B%E5%8C%96/Git.html","/project/06.Eslint.html","/project/08.uniapp%E8%93%9D%E7%89%99%E6%93%8D%E4%BD%9C.html","/project/07.uniapp%E5%88%86%E7%8E%AF%E5%A2%83%E6%89%93%E5%8C%85.html","/project/09.HTML.html","/study/CSS/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8.html","/study/CSS/%E5%B8%B8%E8%A7%81%E5%B8%83%E5%B1%80.html","/study/CSS/BFC.html","/study/CSS/%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD.html","/study/Express/01.%E5%85%A5%E9%97%A8.html","/study/Express/02.%E6%95%B0%E6%8D%AE%E5%BA%93.html","/study/vue/%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86.html","/study/vue/diff%E7%AE%97%E6%B3%95%E5%8E%9F%E7%90%86.html","/study/vue/mixin%E6%B7%B7%E5%85%A5%E5%8E%9F%E7%90%86.html","/study/vue/%E4%BE%A6%E5%90%AC%E5%99%A8%E5%B1%9E%E6%80%A7%E5%8E%9F%E7%90%86.html","/study/vue/%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86.html","/study/vue/%E5%88%9D%E5%A7%8B%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86.html","/study/vue/%E5%93%8D%E5%BA%94%E5%BC%8F%E6%95%B0%E6%8D%AE%E5%8E%9F%E7%90%86.html","/study/vue/%E6%A8%A1%E6%9D%BF%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86.html","/study/vue/%E6%B8%B2%E6%9F%93%E6%9B%B4%E6%96%B0%E5%8E%9F%E7%90%86.html","/study/vue/%E5%85%A5%E5%8F%A3%E5%88%86%E6%9E%90.html","/study/HTML/%E9%87%8D%E7%BB%98%E4%B8%8E%E9%87%8D%E6%8E%92.html","/study/HTML/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D.html","/study/HTML/%E8%AF%AD%E4%B9%89%E5%8C%96%E4%B8%8ESEO.html","/study/Javascript/%E5%AD%97%E7%AC%A6%E4%B8%B2.html","/study/Javascript/%E6%93%8D%E4%BD%9C%E7%AC%A6.html","/study/Javascript/%E6%95%B0%E7%BB%84.html","/study/Javascript/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2.html","/study/Javascript/%E8%B7%A8%E5%9F%9F.html","/study/Javascript/%E9%81%8D%E5%8E%86%E5%BE%AA%E7%8E%AF.html","/study/Javascript/DOM%E4%BA%8B%E4%BB%B6%E6%9C%BA%E5%88%B6.html","/study/Javascript/Web%20API.html","/study/Javascript/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF.html","/study/Javascript/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html","/study/Javascript/%E5%89%8D%E7%AB%AF%E6%A8%A1%E5%9D%97%E5%8C%96.html","/study/Javascript/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B.html","/study/Javascript/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82.html","/study/Javascript/%E8%8A%82%E6%B5%81%E4%B8%8E%E9%98%B2%E6%8A%96.html","/study/Javascript/ES6-ES11.html","/study/Javascript/%E5%8F%98%E9%87%8F%E6%8F%90%E5%8D%87.html","/study/Javascript/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B5%85%E6%8B%B7%E8%B4%9D.html","/study/Javascript/%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC.html","/study/Javascript/this.html","/study/Javascript/%E4%BA%8C%E8%BF%9B%E5%88%B6.html","/study/Javascript/%E5%8E%9F%E5%9E%8B%E9%93%BE%E4%B8%8E%E7%BB%A7%E6%89%BF.html","/study/Javascript/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","/study/Javascript/%E9%97%AD%E5%8C%85.html","/study/Linux/07.yum.html","/study/Linux/02.%E5%9F%BA%E7%A1%80.html","/study/Linux/08.shell%E5%9F%BA%E7%A1%80.html","/study/Linux/03.%E7%94%A8%E6%88%B7%E5%92%8C%E7%94%A8%E6%88%B7%E7%BB%84.html","/study/Linux/05.%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90.html","/study/Linux/06.vi%E7%BC%96%E8%BE%91%E5%99%A8.html","/study/Linux/01.%E4%BB%8B%E7%BB%8D.html","/study/Linux/04.%E7%9B%AE%E5%BD%95%E4%B8%8E%E6%96%87%E4%BB%B6.html","/study/Nginx/02.%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.html","/study/Nginx/01.%E5%AE%89%E8%A3%85.html","/study/React/react-redux.html","/study/React/redux%20Toolkit.html","/study/React/redux.html","/study/React/useDeferredValue.html","/study/React/useTransition.html","/study/React/useCallback.html","/study/React/useContext.html","/study/React/useMemo.html","/study/React/useReducer.html","/study/React/setState.html","/study/React/useEffect.html","/study/React/useLayoutEffect.html","/study/React/useRef.html","/study/React/useState.html","/study/React/%E6%8F%92%E6%A7%BD.html","/study/React/%E7%88%B6%E5%AD%90%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1.html","/study/React/%E8%84%9A%E6%89%8B%E6%9E%B6.html","/study/Typescript/%E6%8E%A5%E5%8F%A3.html","/study/Typescript/%E6%A8%A1%E5%9D%97%E5%92%8C%E5%A3%B0%E6%98%8E%E6%96%87%E4%BB%B6.html","/study/Typescript/%E6%B3%9B%E5%9E%8B.html","/study/Typescript/%E7%B1%BB.html","/study/Typescript/%E7%BC%96%E8%AF%91.html","/study/Typescript/%E8%81%94%E5%90%88%E7%B1%BB%E5%9E%8B%E3%80%81%E7%B1%BB%E5%9E%8B%E5%88%AB%E5%90%8D%E3%80%81%E4%BA%A4%E5%8F%89%E7%B1%BB%E5%9E%8B.html","/study/Typescript/%E8%A3%85%E9%A5%B0%E5%99%A8.html","/study/Typescript/%E7%B1%BB%E5%9E%8B.html","/study/Typescript/%E7%B1%BB%E5%9E%8B%E5%AE%88%E5%8D%AB.html","/study/Typescript/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD%E4%B8%8E%E6%96%AD%E8%A8%80.html","/study/mysql/02.DDL%E8%AF%AD%E8%A8%80.html","/study/mysql/01.homebew%E5%AE%89%E8%A3%85mysql.html","/study/%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html","/study/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AD%98%E5%82%A8.html","/study/%E6%B5%8F%E8%A7%88%E5%99%A8/%E8%BE%93%E5%85%A5URL%E8%BF%87%E7%A8%8B.html","/study/%E7%BD%91%E7%BB%9C/TCP%E4%B8%8EUDP.html","/study/%E7%BD%91%E7%BB%9C/WebSocket.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/18.%E8%81%8C%E8%B4%A3%E9%93%BE%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/09.%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/11.%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/12.%E6%A8%A1%E5%9D%97%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/13.%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/14.%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/15.%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/16.%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/17.%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/06.%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/07.%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/08.%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/01.%E6%9E%84%E9%80%A0%E5%99%A8%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/03.%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/04.%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F.html","/study/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/05.%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html","/study/%E8%BD%AF%E8%80%83/11.%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F.html","/study/%E8%BD%AF%E8%80%83/10.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html","/study/%E8%BD%AF%E8%80%83/09.%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%B3%BB%E7%BB%9F.html","/study/%E8%BD%AF%E8%80%83/07.%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html","/study/%E8%BD%AF%E8%80%83/08.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80.html","/study/%E8%BD%AF%E8%80%83/05.%E7%B3%BB%E7%BB%9F%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1.html","/study/%E8%BD%AF%E8%80%83/06.%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8.html","/study/%E8%BD%AF%E8%80%83/04.%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.html","/study/%E8%BD%AF%E8%80%83/03.%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86.html","/study/%E8%BD%AF%E8%80%83/02.%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B.html","/study/%E8%BD%AF%E8%80%83/01.%E7%B3%BB%E7%BB%9F%E5%B7%A5%E7%A8%8B%E4%B8%8E%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%9F%BA%E7%A1%80.html","/threejs/%E5%85%B6%E4%BB%96/Lod.html","/threejs/%E5%85%B6%E4%BB%96/%E5%85%AB%E5%8F%89%E6%A0%91%E6%A3%80%E6%B5%8B.html","/threejs/%E6%B8%B2%E6%9F%93%E5%99%A8/WebGLRenderer.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/BufferGeometry.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/Cure.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E6%9B%B2%E7%BA%BF%E8%B7%AF%E5%BE%84.html","/threejs/%E5%8A%A0%E8%BD%BD%E5%99%A8/DefaultLoadingManager.html","/threejs/%E5%8A%A0%E8%BD%BD%E5%99%A8/LoadingManager.html","/threejs/%E5%8A%A8%E7%94%BB/AnimationAction.html","/threejs/%E5%8A%A8%E7%94%BB/AnimationClip.html","/threejs/%E5%8A%A8%E7%94%BB/AnimationMixer.html","/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%91%84%E5%83%8F%E6%9C%BA.html","/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%91%84%E5%83%8F%E6%9C%BA%E9%98%B5%E5%88%97.html","/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E6%AD%A3%E4%BA%A4%E7%9B%B8%E6%9C%BA.html","/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E7%AB%8B%E4%BD%93%E7%9B%B8%E6%9C%BA.html","/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E7%AB%8B%E6%96%B9%E7%9B%B8%E6%9C%BA.html","/threejs/%E6%91%84%E5%83%8F%E6%9C%BA/%E9%80%8F%E8%A7%86%E7%9B%B8%E6%9C%BA.html","/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E6%9B%B2%E7%BA%BF.html","/threejs/%E5%9F%BA%E7%A1%80/%E5%85%89%E7%BA%BF%E6%8A%95%E5%B0%84.html","/threejs/%E7%81%AF%E5%85%89/Light.html","/threejs/%E7%81%AF%E5%85%89/%E5%8D%8A%E7%90%83%E5%85%89.html","/threejs/%E7%81%AF%E5%85%89/%E5%B9%B3%E8%A1%8C%E5%85%89.html","/threejs/%E7%81%AF%E5%85%89/%E5%B9%B3%E9%9D%A2%E5%85%89%E5%85%89%E6%BA%90.html","/threejs/%E7%81%AF%E5%85%89/%E7%82%B9%E5%85%89%E6%BA%90.html","/threejs/%E7%81%AF%E5%85%89/%E7%8E%AF%E5%A2%83%E5%85%89.html","/threejs/%E7%81%AF%E5%85%89/%E8%81%9A%E5%85%89%E7%81%AF.html","/threejs/%E6%9D%90%E8%B4%A8/Lambert%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/MeshDistanceMaterial.html","/threejs/%E6%9D%90%E8%B4%A8/Phong%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E5%8E%9F%E5%A7%8B%E7%9D%80%E8%89%B2%E5%99%A8%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E5%9F%BA%E7%A1%80%E7%BA%BF%E6%9D%A1%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E5%9F%BA%E7%A1%80%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E6%9D%90%E8%B4%A8%E6%8D%95%E6%8D%89%E7%BA%B9%E7%90%86%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E6%A0%87%E5%87%86%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E6%B3%95%E7%BA%BF%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E6%B7%B1%E5%BA%A6%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E7%82%B9%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E7%82%B9%E7%B2%BE%E7%81%B5%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E7%89%A9%E7%90%86%E7%BD%91%E6%A0%BC%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E7%9D%80%E8%89%B2%E5%99%A8%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E8%99%9A%E7%BA%BF%E6%9D%90%E8%B4%A8.html","/threejs/%E6%9D%90%E8%B4%A8/%E9%98%B4%E5%BD%B1%E6%9D%90%E8%B4%A8.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E4%BA%8C%E5%8D%81%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%85%AB%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%87%B8%E5%8C%85%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%8D%81%E4%BA%8C%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9B%9B%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E5%BD%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E6%9F%B1%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E7%8E%AF%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93(TorusGeometry).html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E7%8E%AF%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E7%8E%AF%E7%BC%93%E5%86%B2%E6%89%AD%E7%BB%93%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%9C%86%E9%94%A5%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%A4%9A%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%B9%B3%E9%9D%A2%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E5%BD%A2%E7%8A%B6%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E6%8C%A4%E5%8E%8B%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%90%83%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%AB%8B%E6%96%B9%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%AE%A1%E9%81%93%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E7%BD%91%E6%A0%BC%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E8%BD%A6%E5%89%8A%E7%BC%93%E5%86%B2%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/%E8%BE%B9%E7%BC%98%E5%87%A0%E4%BD%95%E4%BD%93.html","/threejs/%E5%9F%BA%E7%A1%80/%E5%9F%BA%E6%9C%AC%E5%9C%BA%E6%99%AF.html","/threejs/%E5%9F%BA%E7%A1%80/%E6%97%B6%E9%92%9F.html","/threejs/%E6%8E%A7%E5%88%B6%E5%99%A8/%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8.html"],qt=Ls(O4);pa(qt);const Id=s=>{const i=xs(),a=cs(),n=Pi();return F(()=>{var r;const e=s??((r=a.value.blog)==null?void 0:r.key)??"";if(!e)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!qt.value[e])throw new Error(`useBlogCategory: key ${e} is invalid`);const t=qt.value[e][n.value],l={path:t.path,map:{}};for(const p in t.map){const k=t.map[p];l.map[p]={path:k.path,items:[]};for(const d of k.indexes){const{path:o,meta:c}=ui(Sd[d]);l.map[p].items.push({path:o,info:c})}i.value.path===k.path&&(l.currentItems=l.map[p].items)}return l})},S4={article:{"/":{path:"/article/",indexes:[99,10,11,124,125,126,127,128,129,130,131,132,133,134,24,25,70,62,71,63,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,19,89,90,91,92,93,94,95,96,97,98,100,26,27,28,29,30,31,32,33,34,17,35,18,14,16,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,12,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,20,39,40,41,42,43,44,45,46,47,48,49,50,51,52,21,53,54,55,56,15,22,36,57,58,59,60,61,101,102,104,105,23,37,38,103,0,1,13,2,3,4,5,6,7,8,9]}},star:{"/":{path:"/star/",indexes:[]}},timeline:{"/":{path:"/timeline/",indexes:[99,10,11,124,125,126,127,128,129,130,131,132,133,134,24,25,70,62,71,63,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,19,89,90,91,92,93,94,95,96,97,98,100,26,27,28,29,30,31,32,33,34,17,35,18,14,16,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,12,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,20,39,40,41,42,43,44,45,46,47,48,49,50,51,52,21,53,54,55,56,15,22,36,57,58,59,60,61,101,102,104,105,23,37,38,103,0,1,13,2,3,4,5,6,7,8,9]}}},Jt=Ls(S4);pa(Jt);const $e=s=>{const i=cs(),a=Pi();return F(()=>{var l;const n=s??((l=i.value.blog)==null?void 0:l.key)??"";if(!n)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Jt.value[n])throw new Error(`useBlogType: key ${s} is invalid`);const e=Jt.value[n][a.value],t={path:e.path,items:[]};for(const r of e.indexes){const{path:p,meta:k}=ui(Sd[r]);t.items.push({path:p,info:k})}return t})},Gl=()=>h(ls,{name:"lock"},()=>h("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));Gl.displayName="LockIcon";var I4=[];const Pd=Symbol(""),Ul=()=>{const s=fs(Pd);if(!s)throw new Error("useTimeline() is called without provider.");return s},P4=()=>{const s=$e("timeline"),i=F(()=>{const a=[];return s.value.items.forEach(({info:n,path:e})=>{const t=Dl(n[$s.date]);if(t){const l=t.getFullYear(),r=t.getMonth()+1,p=t.getDate();(!a[0]||a[0].year!==l)&&a.unshift({year:l,items:[]}),a[0].items.push({date:`${r}/${p}`,info:n,path:e})}}),{...s.value,config:a.reverse()}});yi(Pd,i)},Md=Symbol(""),Jn=()=>{const s=fs(Md);if(!s)throw new Error("useArticles() is called without provider.");return s},M4=()=>{const s=$e("article");yi(Md,s)},Vd=Symbol.for("categoryMap"),Kn=()=>{const s=fs(Vd);if(!s)throw new Error("useCategoryMap() is called without provider.");return s},V4=()=>{const s=Id("category");yi(Vd,s)},Hd=Symbol(""),Wl=()=>{const s=fs(Hd);if(!s)throw new Error("useStars() is called without provider.");return s},H4=()=>{const s=$e("star");yi(Hd,s)},$d=Symbol.for("tagMap"),Yn=()=>{const s=fs($d);if(!s)throw new Error("useTagMap() is called without provider.");return s},$4=()=>{const s=Id("tag");yi($d,s)},N4=()=>{M4(),V4(),H4(),$4(),P4()},Qn=()=>{const s=Mi(),i=hs();return F(()=>({...s.value.blog,...i.value.blog}))},z4=s=>{const i=hs();return F(()=>{const{[$s.author]:a}=s.value;return a?Tn(a):a===!1?[]:Tn(i.value.author,!1)})},G4=s=>{const i=Kn();return F(()=>zk(s.value[$s.category]).map(a=>({name:a,path:i.value.map[a].path})))},U4=s=>{const i=Yn();return F(()=>Gk(s.value[$s.tag]).map(a=>({name:a,path:i.value.map[a].path})))},W4=s=>F(()=>{const{[$s.date]:i}=s.value;return Dl(i)}),q4=s=>{const i=an(s,"info"),a=Qn(),n=z4(i),e=G4(i),t=U4(i),l=W4(i),r=nd(),p=F(()=>({author:n.value,category:e.value,date:l.value,localizedDate:i.value[$s.localizedDate]??"",tag:t.value,isOriginal:i.value[$s.isOriginal]??!1,readingTime:i.value[$s.readingTime]??null,readingTimeLocale:i.value[$s.readingTime]&&r.value?ad(i.value[$s.readingTime],r.value):null,pageview:s.path})),k=F(()=>a.value.articleInfo);return{info:p,items:k}};var Nd=S({name:"SocialMedias",setup(){const s=Qn(),i=Ys(),a=F(()=>Nn(s.value.medias??{}).map(([n,e])=>typeof e=="string"?{name:n,icon:j4[n],link:e}:{name:n,...e}));return()=>a.value.length?h("div",{class:"vp-social-medias"},a.value.map(({name:n,icon:e,link:t})=>h("a",{class:"vp-social-media",href:t,rel:"noopener noreferrer",target:"_blank","aria-label":n||"",...i.value?{}:{"data-balloon-pos":"up"},innerHTML:ba(e)?`<img class="icon ${n}-icon" src="${e}">`:e}))):null}}),ql=S({name:"BloggerInfo",setup(){const s=Qn(),i=tn(),a=hs(),n=Jn(),e=Kn(),t=Yn(),l=Ul(),r=Ta(),p=F(()=>{var c;return s.value.name??((c=Tn(a.value.author)[0])==null?void 0:c.name)??i.value.title}),k=F(()=>s.value.avatar??a.value.logo),d=F(()=>a.value.blogLocales),o=F(()=>s.value.intro);return()=>{const{article:c,category:A,tag:y,timeline:m}=d.value,f=[[n.value.path,n.value.items.length,c],[e.value.path,bi(e.value.map).length,A],[t.value.path,bi(t.value.map).length,y],[l.value.path,l.value.items.length,m]];return h("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[h("div",{class:"vp-blogger",...o.value?{"aria-label":d.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>r(o.value)}:{}},[k.value?h("img",{class:"vp-blogger-avatar",src:vs(k.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,p.value?h("div",{class:"vp-blogger-name",property:"name"},p.value):null,s.value.description?h("div",{class:"vp-blogger-description",innerHTML:s.value.description}):null,o.value?h("meta",{property:"url",content:vs(o.value)}):null]),h("div",{class:"vp-blog-counts"},f.map(([v,C,E])=>h(Rs,{class:"vp-blog-count",to:v},()=>[h("div",{class:"count"},C),h("div",E)]))),h(Nd)])}}});const Jl=()=>h(ls,{name:"category"},()=>h("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Jl.displayName="CategoryIcon";const Kl=()=>h(ls,{name:"tag"},()=>h("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Kl.displayName="TagIcon";const Yl=()=>h(ls,{name:"timeline"},()=>h("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));Yl.displayName="TimelineIcon";const zd=()=>h(ls,{name:"slides"},()=>h("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));zd.displayName="SlideIcon";const Gd=()=>h(ls,{name:"sticky"},()=>[h("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);Gd.displayName="StickyIcon";const Ne=()=>h(ls,{name:"article"},()=>h("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));Ne.displayName="ArticleIcon";const Ud=()=>h(ls,{name:"book"},()=>h("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));Ud.displayName="BookIcon";const Wd=()=>h(ls,{name:"link"},()=>h("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));Wd.displayName="LinkIcon";const qd=()=>h(ls,{name:"project"},()=>h("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));qd.displayName="ProjectIcon";const Jd=()=>h(ls,{name:"friend"},()=>h("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));Jd.displayName="FriendIcon";const Kt=()=>h(ls,{name:"slide-down"},()=>h("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Kt.displayName="SlideDownIcon";const Kd=()=>h("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});Kd.displayName="EmptyIcon";var J4=S({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(s,{slots:i}){const a=an(s,"info"),{info:n,items:e}=q4(s);return()=>{var c,A,y;const{[Js.title]:t,[$s.type]:l,[$s.isEncrypted]:r=!1,[$s.cover]:p,[$s.excerpt]:k,[$s.sticky]:d}=a.value,o=n.value;return h("div",{class:"vp-article-wrapper"},h("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((c=i.cover)==null?void 0:c.call(i,{cover:p}))??(p?[h("img",{class:"vp-article-cover",src:vs(p),alt:"",loading:"lazy"}),h("meta",{property:"image",content:vs(p)})]:[]),d?h(Gd):null,h(Rs,{to:s.path},()=>{var m;return((m=i.title)==null?void 0:m.call(i,{title:t,isEncrypted:r,type:l}))??h("header",{class:"vp-article-title"},[r?h(Gl):null,l===hd.slide?h(zd):null,h("span",{property:"headline"},t)])}),((A=i.excerpt)==null?void 0:A.call(i,{excerpt:k}))??(k?h("div",{class:"vp-article-excerpt",innerHTML:k}):null),h("hr",{class:"vp-article-hr"}),((y=i.info)==null?void 0:y.call(i,{info:o}))??h(Ld,{info:o,...e.value?{items:e.value}:{}})]))}}}),K4=S({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(s,{emit:i}){let a;const n=hs(),e=W(""),t=F(()=>n.value.paginationLocales),l=F(()=>Math.ceil(s.total/s.perPage)),r=F(()=>!!l.value&&l.value!==1),p=F(()=>l.value<7?!1:s.current>4),k=F(()=>l.value<7?!1:s.current<l.value-3),d=F(()=>{const{current:A}=s;let y=1,m=l.value;const f=[];l.value>=7&&(A<=4&&A<l.value-3?(y=1,m=5):A>4&&A>=l.value-3?(m=l.value,y=l.value-4):l.value>7&&(y=A-2,m=A+2));for(let v=y;v<=m;v++)f.push(v);return f}),o=A=>i("updateCurrentPage",A),c=A=>{const y=parseInt(A,10);y<=l.value&&y>0?o(y):a.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${t.value.errorText.replace(/\$page/gu,l.value.toString())}`)};return ys(()=>{a=new oA}),()=>h("div",{class:"vp-pagination"},r.value?h("nav",{class:"vp-pagination-list"},[h("div",{class:"vp-pagination-number "},[s.current>1?h("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>o(s.current-1)},t.value.prev):null,p.value?[h("div",{role:"navigation",onClick:()=>o(1)},1),h("div",{class:"ellipsis"},"...")]:null,d.value.map(A=>h("div",{key:A,class:{active:s.current===A},role:"navigation",onClick:()=>o(A)},A)),k.value?[h("div",{class:"ellipsis"},"..."),h("div",{role:"navigation",onClick:()=>o(l.value)},l.value)]:null,s.current<l.value?h("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>o(s.current+1)},t.value.next):null]),h("div",{class:"vp-pagination-nav"},[h("label",{for:"navigation-text"},`${t.value.navigate}: `),h("input",{id:"navigation-text",value:e.value,onInput:({target:A})=>{e.value=A.value},onKeydown:A=>{A.key==="Enter"&&(A.preventDefault(),c(e.value))}}),h("button",{class:"vp-pagination-button",type:"button",role:"navigation",title:t.value.action,onClick:()=>c(e.value)},t.value.action)])]):[])}}),Ql=S({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(s){const i=Ii(),a=Da(),n=Qn(),e=W(1),t=F(()=>n.value.articlePerPage??10),l=F(()=>s.items.slice((e.value-1)*t.value,e.value*t.value)),r=async p=>{e.value=p;const k={...i.query};!(k.page===p.toString()||p===1&&!k.page)&&(p===1?delete k.page:k.page=p.toString(),await a.push({path:i.path,query:k}))};return ys(()=>{const{page:p}=i.query;r(p?Number(p):1),ts(e,()=>{const k=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,k)},100)})}),()=>h("div",{id:"article-list",class:"vp-article-list",role:"feed"},l.value.length?[...l.value.map(({info:p,path:k},d)=>h(es,{appear:!0,delay:d*.04},()=>h(J4,{key:k,info:p,path:k}))),h(K4,{current:e.value,perPage:t.value,total:s.items.length,onUpdateCurrentPage:r})]:h(Kd))}}),Yd=S({name:"CategoryList",setup(){const s=xs(),i=Kn();return()=>h("ul",{class:"vp-category-list"},Nn(i.value.map).sort(([,a],[,n])=>n.items.length-a.items.length).map(([a,{path:n,items:e}])=>h("li",{class:["vp-category",`color${Un(a,Number(wa.colorNumber))}`,{active:n===s.value.path}]},h(Rs,{to:n},()=>[a,h("span",{class:"count"},e.length)]))))}}),Qd=S({name:"TagList",setup(){const s=cs(),i=Yn(),a=n=>{var e;return n===((e=s.value.blog)==null?void 0:e.name)};return()=>h("ul",{class:"tag-list-wrapper"},Nn(i.value.map).sort(([,n],[,e])=>e.items.length-n.items.length).map(([n,{path:e,items:t}])=>h("li",{class:["tag",`color${Un(n,Number(wa.colorNumber))}`,{active:a(n)}]},h(Rs,{to:e},()=>[n,h("span",{class:"tag-num"},t.length)]))))}}),Y4=S({name:"TimelineList",setup(){const s=hs(),i=Ul(),a=Ta(),n=F(()=>s.value.blogLocales.timeline);return()=>h("div",{class:"timeline-list-wrapper"},[h("div",{class:"timeline-list-title",onClick:()=>a(i.value.path)},[h(Yl),h("span",{class:"num"},i.value.items.length),n.value]),h("hr"),h("div",{class:"timeline-content"},h("ul",{class:"timeline-list"},i.value.config.map(({year:e,items:t},l)=>h(es,{appear:!0,delay:.08*(l+1)},()=>h("li",[h("h3",{class:"timeline-year"},e),h("ul",{class:"timeline-year-wrapper"},t.map(({date:r,info:p,path:k})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},r),h(Rs,{class:"timeline-title",to:k},()=>p[Js.title])])))])))))])}});const Q4={article:Ne,category:Jl,tag:Kl,timeline:Yl};var Xd=S({name:"InfoList",setup(){const s=hs(),i=Jn(),a=Kn(),n=F(()=>bi(a.value.map).length),e=Wl(),t=Yn(),l=F(()=>bi(t.value.map).length),r=Ta(),p=W("article"),k=F(()=>s.value.blogLocales);return()=>h("div",{class:"vp-blog-infos"},[h("div",{class:"vp-blog-type-switcher"},Nn(Q4).map(([d,o])=>h("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{p.value=d}},h("div",{class:["icon-wrapper",{active:p.value===d}],"aria-label":k.value[d],"data-balloon-pos":"up"},h(o))))),h(es,()=>p.value==="article"?h("div",{class:"vp-star-article-wrapper"},[h("div",{class:"title",onClick:()=>r(i.value.path)},[h(Ne),h("span",{class:"num"},i.value.items.length),k.value.article]),h("hr"),e.value.items.length?h("ul",{class:"vp-star-articles"},e.value.items.map(({info:d,path:o},c)=>h(es,{appear:!0,delay:.08*(c+1)},()=>h("li",{class:"vp-star-article"},h(Rs,{to:o},()=>d[Js.title]))))):h("div",{class:"vp-star-article-empty"},k.value.empty.replace("$text",k.value.star))]):p.value==="category"?h("div",{class:"vp-category-wrapper"},[n.value?[h("div",{class:"title",onClick:()=>r(a.value.path)},[h(Jl),h("span",{class:"num"},n.value),k.value.category]),h("hr"),h(es,{delay:.04},()=>h(Yd))]:h("div",{class:"vp-category-empty"},k.value.empty.replace("$text",k.value.category))]):p.value==="tag"?h("div",{class:"vp-tag-wrapper"},[l.value?[h("div",{class:"title",onClick:()=>r(t.value.path)},[h(Kl),h("span",{class:"num"},l.value),k.value.tag]),h("hr"),h(es,{delay:.04},()=>h(Qd))]:h("div",{class:"vp-tag-empty"},k.value.empty.replace("$text",k.value.tag))]):h(es,()=>h(Y4)))])}}),ze=S({name:"BlogWrapper",slots:Object,setup(s,{slots:i}){const{isMobile:a}=Wn();return()=>[h(Nl),h($l,{noSidebar:!0,noToc:!0},{default:()=>i.default(),navScreenBottom:()=>h(ql),sidebar:a.value?()=>h(Xd):null})]}});const Xn=()=>h("aside",{class:"vp-blog-info-wrapper"},[h(es,()=>h(ql)),h(es,{delay:.04},()=>h(Xd))]);Xn.displayName="InfoPanel";var X4=S({name:"BlogPage",setup(){const s=xs(),i=cs(),a=Kn(),n=Yn();return()=>{const{key:e="",name:t=""}=i.value.blog||{},l=t?e==="category"?a.value.map[t].items:e==="tag"?n.value.map[t].items:[]:[];return h(ze,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(es,()=>e==="category"?h(Yd):e==="tag"?h(Qd):null),t?h(es,{appear:!0,delay:.24},()=>h(Ql,{key:s.value.path,items:l})):null]),h(es,{delay:.16},()=>h(Xn,{key:"blog"}))])))}}});const Z4="//theme-hope-assets.vuejs.press/hero/default.jpg";var s6=S({name:"BlogHero",slots:Object,setup(s,{slots:i}){const a=cs(),n=tn(),e=Ls(),t=F(()=>a.value.heroFullScreen??!1),l=F(()=>{const{heroText:p,heroImage:k,heroImageDark:d,heroAlt:o,heroImageStyle:c,tagline:A}=a.value;return{text:p??n.value.title??"Hello",tagline:A??"",image:k?vs(k):null,imageDark:d?vs(d):null,alt:o??p??"",imageStyle:c,isFullScreen:t.value}}),r=F(()=>{const{bgImage:p,bgImageDark:k,bgImageStyle:d}=a.value;return{image:Ts(p)?vs(p):p===!1?null:Z4,imageDark:Ts(k)?vs(k):null,bgStyle:d,isFullScreen:t.value}});return()=>{var p,k;return a.value.hero===!1?null:h("div",{ref:e,class:["vp-blog-hero",{fullscreen:t.value,"no-bg":!r.value.image}]},[((p=i.bg)==null?void 0:p.call(i,r.value))??[r.value.image?h("div",{class:["vp-blog-mask",{light:r.value.imageDark}],style:[{background:`url(${r.value.image}) center/cover no-repeat`},r.value.bgStyle]}):null,r.value.imageDark?h("div",{class:"vp-blog-mask dark",style:[{background:`url(${r.value.imageDark}) center/cover no-repeat`},r.value.bgStyle]}):null],((k=i.info)==null?void 0:k.call(i,l.value))??[h(es,{appear:!0,type:"group",delay:.04},()=>{const{image:d,imageDark:o,imageStyle:c,alt:A}=l.value;return[d?h("img",{key:"light",class:["vp-blog-hero-image",{light:o}],style:c,src:d,alt:A}):null,o?h("img",{key:"dark",class:"vp-blog-hero-image dark",style:c,src:o,alt:A}):null]}),h(es,{appear:!0,delay:.08},()=>l.value.text?h("h1",{class:"vp-blog-hero-title"},l.value.text):null),h(es,{appear:!0,delay:.12},()=>l.value.tagline?h("p",{class:"vp-blog-hero-description",innerHTML:l.value.tagline}):null)],l.value.isFullScreen?h("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:e.value.clientHeight,behavior:"smooth"})}},[h(Kt),h(Kt)]):null])}}});const i6=["link","article","book","project","friend"];var a6=S({name:"ProjectPanel",components:{ArticleIcon:Ne,BookIcon:Ud,FriendIcon:Jd,LinkIcon:Wd,ProjectIcon:qd},props:{items:{type:Array,required:!0}},setup(s){const i=Ys(),a=Ta(),n=(e="",t="icon")=>i6.includes(e)?h(gi(`${e}-icon`)):ba(e)?h("img",{class:"vp-project-image",src:e,alt:t}):Me(e)?h("img",{class:"vp-project-image",src:vs(e),alt:t}):h(zs,{icon:e});return()=>h("div",{class:"vp-project-panel"},s.items.map(({icon:e,link:t,name:l,desc:r,background:p})=>h("div",{class:["vp-project-card",{[`color${Un(l,Number(wa.colorNumber))}`]:!i.value&&!p}],...p?{style:p}:{},onClick:()=>a(t)},[n(e,l),h("div",{class:"vp-project-name"},l),h("div",{class:"vp-project-desc"},r)])))}}),n6=S({name:"BlogHomePage",setup(){const s=Jn(),i=cs(),a=F(()=>i.value.projects??[]);return()=>h("div",{class:"vp-page vp-blog-home"},[h(s6),h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[a.value.length?h(es,{appear:!0,delay:.16},()=>h(a6,{items:a.value})):null,h(es,{appear:!0,delay:.24},()=>h(Ql,{items:s.value.items}))]),h(es,{appear:!0,delay:.16},()=>h(Xn,{key:"blog"}))]),h(es,{appear:!0,delay:.28},()=>h(sn))])}});const Zd=()=>h(ze,()=>h(n6));Zd.displayName="BlogHome";var e6=Zd,t6=S({name:"ArticleType",setup(){const s=xs(),i=Pi(),a=hs(),n=Jn(),e=Wl(),t=F(()=>{const l=a.value.blogLocales;return[{text:l.all,path:n.value.path},{text:l.star,path:e.value.path},...I4.map(({key:r,path:p})=>{const k=p.replace(/^\//,i.value);return{text:l[r]??ui(k).meta[Js.title]??r,path:k}})]});return()=>h("ul",{class:"vp-article-type-wrapper"},t.value.map(l=>h("li",{class:["vp-article-type",{active:l.path===s.value.path}]},h(Rs,{to:l.path},()=>l.text))))}}),l6=S({name:"BlogPage",setup(){const s=$e(),i=cs(),a=xs(),n=Jn(),e=Wl(),t=F(()=>{const{key:l="",type:r}=i.value.blog||{};return l==="star"?e.value.items:r==="type"&&l?s.value.items:n.value.items});return()=>h(ze,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(es,()=>h(t6)),h(es,{appear:!0,delay:.24},()=>h(Ql,{key:a.value.path,items:t.value}))]),h(es,{delay:.16},()=>h(Xn,{key:"blog"}))])))}}),h6=S({name:"TimelineItems",setup(){const s=Qn(),i=hs(),a=Ul(),n=F(()=>s.value.timeline??i.value.blogLocales.timelineTitle),e=F(()=>a.value.config.map(({year:t})=>({title:t.toString(),level:2,slug:t.toString(),children:[]})));return()=>h("div",{class:"timeline-wrapper"},h("ul",{class:"timeline-content"},[h(es,()=>h("li",{class:"motto"},n.value)),h(Rd,{items:e.value}),a.value.config.map(({year:t,items:l},r)=>h(es,{appear:!0,delay:.08*(r+1),type:"group"},()=>[h("h3",{key:"title",id:t,class:"timeline-year-title"},h("span",t)),h("li",{key:"content",class:"timeline-year-list"},[h("ul",{class:"timeline-year-wrapper"},l.map(({date:p,info:k,path:d})=>h("li",{class:"timeline-item"},[h("span",{class:"timeline-date"},p),h(Rs,{class:"timeline-title",to:d},()=>k[Js.title])])))])]))]))}});const so=()=>h(ze,()=>h("div",{class:"vp-page vp-blog"},h("div",{class:"blog-page-wrapper"},[h("main",{id:"main-content",class:"vp-blog-main"},[h(es,{appear:!0,delay:.24},()=>h(h6))]),h(es,{delay:.16},()=>h(Xn,{key:"blog"}))])));so.displayName="Timeline";var r6=so,p6={};const ja="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),mt=Array.from({length:64},(s,i)=>i),oe=s=>Array(s).fill(-1),Qi=[...oe(46),0,1,...mt.slice(54,64),...oe(7),...mt.slice(2,28),...oe(6),...mt.slice(28,54),...oe(5)],vr=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],fr=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],io=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],Yt=(s,i)=>{if(i<=0||i>s.length)throw Error(`Illegal len: ${i}`);let a=0,n,e;const t=[];for(;a<i;){if(n=s[a++]&255,t.push(ja[n>>2&63]),n=(n&3)<<4,a>=i){t.push(ja[n&63]);break}if(e=s[a++]&255,n|=e>>4&15,t.push(ja[n&63]),n=(e&15)<<2,a>=i){t.push(ja[n&63]);break}e=s[a++]&255,n|=e>>6&3,t.push(ja[n&63]),t.push(ja[e&63])}return t.join("")},k6=(s,i)=>{const a=s.length;let n=0,e=0,t,l,r,p,k,d;const o=[];for(;n<a-1&&e<i&&(d=s.charCodeAt(n++),t=d<Qi.length?Qi[d]:-1,d=s.charCodeAt(n++),l=d<Qi.length?Qi[d]:-1,!(t==-1||l==-1||(k=t<<2>>>0,k|=(l&48)>>4,o.push(String.fromCharCode(k)),++e>=i||n>=a)||(d=s.charCodeAt(n++),r=d<Qi.length?Qi[d]:-1,r==-1)||(k=(l&15)<<4>>>0,k|=(r&60)>>2,o.push(String.fromCharCode(k)),++e>=i||n>=a)));)d=s.charCodeAt(n++),p=d<Qi.length?Qi[d]:-1,k=(r&3)<<6>>>0,k|=p,o.push(String.fromCharCode(k)),++e;return o.map(c=>c.charCodeAt(0))},d6=(s,i)=>{let a=null;for(typeof s=="number"&&(a=s,s=()=>null);a!==null||(a=s())!==null;)a<128?i(a&127):a<2048?(i(a>>6&31|192),i(a&63|128)):a<65536?(i(a>>12&15|224),i(a>>6&63|128),i(a&63|128)):(i(a>>18&7|240),i(a>>12&63|128),i(a>>6&63|128),i(a&63|128)),a=null},o6=(s,i)=>{let a,n=null;for(;(a=n!==null?n:s())!==null;){if(a>=55296&&a<=57343&&(n=s())!==null&&n>=56320&&n<=57343){i((a-55296)*1024+n-56320+65536),n=null;continue}i(a)}n!==null&&i(n)},c6=(s,i)=>{o6(s,function(a){d6(a,i)})},B6=typeof process=="object"&&p6.NEXT_RUNTIME==="edge"?setTimeout:typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:setTimeout,A6=s=>{const i=[];let a=0;return c6(()=>a>=s.length?null:s.charCodeAt(a++),n=>{i.push(n)}),i},Ln=(s,i,a,n)=>{let e,t=s[i],l=s[i+1];return t^=a[0],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[1],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[2],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[3],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[4],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[5],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[6],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[7],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[8],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[9],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[10],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[11],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[12],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[13],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[14],e=n[t>>>24],e+=n[256|t>>16&255],e^=n[512|t>>8&255],e+=n[768|t&255],l^=e^a[15],e=n[l>>>24],e+=n[256|l>>16&255],e^=n[512|l>>8&255],e+=n[768|l&255],t^=e^a[16],s[i]=l^a[17],s[i+1]=t,s},Ia=(s,i)=>{let a=0;for(let n=0;n<4;++n)a=a<<8|s[i]&255,i=(i+1)%s.length;return{key:a,offp:i}},Fr=(s,i,a)=>{const n=i.length,e=a.length;let t=0,l=[0,0],r;for(let p=0;p<n;p++)r=Ia(s,t),t=r.offp,i[p]=i[p]^r.key;for(let p=0;p<n;p+=2)l=Ln(l,0,i,a),i[p]=l[0],i[p+1]=l[1];for(let p=0;p<e;p+=2)l=Ln(l,0,i,a),a[p]=l[0],a[p+1]=l[1]},g6=(s,i,a,n)=>{const e=a.length,t=n.length;let l=0,r=[0,0],p;for(let k=0;k<e;k++)p=Ia(i,l),l=p.offp,a[k]=a[k]^p.key;l=0;for(let k=0;k<e;k+=2)p=Ia(s,l),l=p.offp,r[0]^=p.key,p=Ia(s,l),l=p.offp,r[1]^=p.key,r=Ln(r,0,a,n),a[k]=r[0],a[k+1]=r[1];for(let k=0;k<t;k+=2)p=Ia(s,l),l=p.offp,r[0]^=p.key,p=Ia(s,l),l=p.offp,r[1]^=p.key,r=Ln(r,0,a,n),n[k]=r[0],n[k+1]=r[1]},Cr=(s,i,a,n,e)=>{const t=io.slice(),l=t.length;if(a<4||a>31){const c=new Error(`Illegal number of rounds (4-31): ${a}`);if(n===!1)return Promise.reject(c);throw c}if(i.length!==16){const c=new Error(`Illegal salt length: ${i.length} != 16`);if(n===!1)return Promise.reject(c);throw c}a=1<<a>>>0;let r,p,k=0,d;Int32Array?(r=new Int32Array(vr),p=new Int32Array(fr)):(r=vr.slice(),p=fr.slice()),g6(i,s,r,p);const o=()=>{if(k<a){const c=Date.now();for(;k<a&&(k=k+1,Fr(s,r,p),Fr(i,r,p),!(Date.now()-c>100)););}else{for(k=0;k<64;k++)for(d=0;d<l>>1;d++)Ln(t,d<<1,r,p);const c=[];for(k=0;k<l;k++)c.push((t[k]>>24&255)>>>0),c.push((t[k]>>16&255)>>>0),c.push((t[k]>>8&255)>>>0),c.push((t[k]&255)>>>0);return n===!1?Promise.resolve(c):c}if(n===!1)return new Promise(c=>B6(()=>{o().then(c)}))};if(n===!1)return o();{let c;for(;;)if(typeof(c=o())<"u")return c||[]}},y6=s=>{try{let i;typeof window<"u"?i=window.crypto??window.msCrypto:i=globalThis.crypto;const a=new Uint32Array(s);return i==null||i.getRandomValues(a),Array.from(a)}catch{throw Error("WebCryptoAPI is not available")}},u6=(s=10)=>{if(typeof s!="number")throw Error("Illegal arguments: "+typeof s);s<4?s=4:s>31&&(s=31);const i=[];return i.push("$2a$"),s<10&&i.push("0"),i.push(s.toString()),i.push("$"),i.push(Yt(y6(16),16)),i.join("")};function E6(s,i,a,n){if(typeof s!="string"||typeof i!="string"){const A=new Error("Invalid string / salt: Not a string");if(a===!1)return Promise.reject(A);throw A}let e,t;if(i.charAt(0)!=="$"||i.charAt(1)!=="2"){const A=new Error("Invalid salt version: "+i.substring(0,2));if(a===!1)return Promise.reject(A);throw A}if(i.charAt(2)==="$")e="\0",t=3;else{if(e=i.charAt(2),e!=="a"&&e!=="b"&&e!=="y"||i.charAt(3)!=="$"){const A=Error("Invalid salt revision: "+i.substring(2,4));if(a===!1)return Promise.reject(A);throw A}t=4}if(i.charAt(t+2)>"$"){const A=new Error("Missing salt rounds");if(a===!1)return Promise.reject(A);throw A}const l=parseInt(i.substring(t,t+1),10)*10,r=parseInt(i.substring(t+1,t+2),10),p=l+r,k=i.substring(t+3,t+25);s+=e>="a"?"\0":"";const d=A6(s),o=k6(k,16),c=A=>{const y=[];return y.push("$2"),e>="a"&&y.push(e),y.push("$"),p<10&&y.push("0"),y.push(p.toString()),y.push("$"),y.push(Yt(o,o.length)),y.push(Yt(A,io.length*4-1)),y.join("")};return a===!1?Cr(d,o,p,!1).then(A=>c(A)):c(Cr(d,o,p,!0))}const m6=(s,i=10)=>{if(typeof i=="number"&&(i=u6(i)),typeof s!="string"||typeof i!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof i);return E6(s,i,!0)},Qt=(s,i)=>{if(typeof s!="string"||typeof i!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof i);return i.length!==60?!1:m6(s,i.substring(0,i.length-31))===i};var ao=S({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(s,{emit:i}){const a=cs(),n=hs(),e=W(""),t=W(!1),l=W(!1),r=F(()=>n.value.encryptLocales);let p=null;const k=()=>{p&&clearTimeout(p),t.value=!1,i("verify",e.value,l.value),Si().then(()=>{t.value=!0,p=setTimeout(()=>{t.value=!1},1e3)})};return()=>h("div",{class:["vp-decrypt-layer",{expand:s.full||a.value.home}]},h("div",{class:"vp-decrypt-modal"},[h("div",{class:["vp-decrypt-hint",{tried:t.value}]},t.value?r.value.errorHint:h(Gl,{"aria-label":r.value.iconLabel})),h("div",{class:"vp-decrypt-input"},[h("input",{type:"password",value:e.value,placeholder:r.value.placeholder,onInput:({target:d})=>{e.value=d.value},onKeydown:({key:d})=>{d==="Enter"&&k()}})]),h("div",{class:"vp-remember-password"},[h("input",{id:"remember-password",type:"checkbox",value:l.value,onChange:()=>l.value=!l.value}),h("label",{for:"remember-password"},r.value.remember)]),h("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>k()},"OK")]))}});const no=()=>{const s=Mi();return F(()=>s.value.encrypt||{})},br="VUEPRESS_HOPE_GLOBAL_TOKEN",v6=()=>{const s=no(),i=xa(br,""),a=bk(br,""),n=F(()=>{const{global:t=!1,admin:l=[]}=s.value;return t&&l.length>0}),e=F(()=>{if(n.value){if(i.value)return s.value.admin.some(t=>Qt(i.value,t));if(a.value)return s.value.admin.some(t=>Qt(a.value,t))}return!1});return{isEncrypted:n,isDecrypted:e,validate:(t,l=!1)=>{(l?i:a).value=t}}},vt=(s="",i)=>!!s&&Qt(s,i),Dr="VUEPRESS_HOPE_PATH_TOKEN",f6=()=>{const s=xs(),i=no(),a=xa(Dr,{}),n=bk(Dr,{}),e=l=>en(i.value.config)?bi(i.value.config).filter(r=>Za(decodeURI(l),r)).sort((r,p)=>p.length-r.length):[],t=l=>{const r=e(l);if(r.length>0){const{config:p={}}=i.value;return{isEncrypted:!0,isDecrypted:r.some(k=>a.value[k]&&p[k].some(d=>vt(a.value[k],d))||n.value[k]&&p[k].some(d=>vt(n.value[k],d)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:F(()=>t(s.value.path)),getStatus:t,validate:(l,r=!1)=>{const{config:p={}}=i.value,k=e(s.value.path);for(const d of k)if(p[d].filter(o=>vt(l,o))){(r?a:n).value[d]=l;break}}}};var F6=S({name:"GlobalEncrypt",slots:Object,setup(s,{slots:i}){const{isDecrypted:a,isEncrypted:n,validate:e}=v6(),t=Ys(),l=W(!1);return ys(()=>{l.value=!0}),()=>h(t.value?He:zl,()=>n.value?l.value?a.value?i.default():h(ao,{full:!0,onVerify:e}):null:i.default())}}),C6=S({name:"LocalEncrypt",slots:Object,setup(s,{slots:i}){const{status:a,validate:n}=f6(),e=W(!1);return ys(()=>{e.value=!0}),()=>{const{isEncrypted:t,isDecrypted:l}=a.value;return t?e.value?l?i.default():h(ao,{full:!0,onVerify:n}):null:i.default()}}});DB(s=>{const i=s.t,a=s.I!==!1,n=s.i;return a?{title:i,content:n?()=>[h(zs,{icon:n}),i]:null,order:s.O,index:s.I}:null});const b6=xi({enhance:({app:s,router:i})=>{const{scrollBehavior:a}=i.options;i.options.scrollBehavior=async(...n)=>(await Gt.wait(),a(...n)),zg(s),s.component("HopeIcon",zs),s.component("BloggerInfo",ql),s.component("SocialMedias",Nd),s.component("GlobalEncrypt",F6),s.component("LocalEncrypt",C6)},setup:()=>{Gg(),Hg(),N4()},layouts:{Layout:T4,NotFound:R4,BlogCategory:X4,BlogHome:e6,BlogType:l6,Timeline:r6}}),D6=Object.freeze(Object.defineProperty({__proto__:null,default:b6},Symbol.toStringTag,{value:"Module"})),_6={enhance:({app:s})=>{s.component("IFrame",gl(()=>B(()=>import("./IFrame-D0JvK1U1.js"),__vite__mapDeps([370,1]))))}},x6=Object.freeze(Object.defineProperty({__proto__:null,default:_6},Symbol.toStringTag,{value:"Module"})),ce=[m3,v3,uB,bB,RB,IB,$B,qB,ZB,VA,ag,_g,D6,x6].map(s=>s.default).filter(Boolean),w6=JSON.parse('{"base":"/","lang":"zh-CN","title":"","description":"罗天旭的博客","head":[],"locales":{}}');var on=Ls(w6),T6=I8,L6=()=>{const s=h3({history:T6(fl("/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(i,a,n)=>n||(i.hash?{el:i.hash}:{top:0})});return s.beforeResolve(async(i,a)=>{if(i.path!==a.path||a===zi){const n=ui(i.fullPath);if(n.path!==i.fullPath)return n.path;const e=await n.loader();i.meta={...n.meta,_pageChunk:e}}else i.path===a.path&&(i.meta=a.meta)}),s},R6=s=>{s.component("ClientOnly",Pe),s.component("Content",kk),s.component("RouteLink",Rs)},j6=(s,i,a)=>{const n=F(()=>i.currentRoute.value.path),e=Zr((f,v)=>({get(){return f(),i.currentRoute.value.meta._pageChunk},set(C){i.currentRoute.value.meta._pageChunk=C,v()}})),t=F(()=>Ba.resolveLayouts(a)),l=F(()=>Ba.resolveRouteLocale(on.value.locales,n.value)),r=F(()=>Ba.resolveSiteLocaleData(on.value,l.value)),p=F(()=>e.value.comp),k=F(()=>e.value.data),d=F(()=>k.value.frontmatter),o=F(()=>Ba.resolvePageHeadTitle(k.value,r.value)),c=F(()=>Ba.resolvePageHead(o.value,d.value,r.value)),A=F(()=>Ba.resolvePageLang(k.value,r.value)),y=F(()=>Ba.resolvePageLayout(k.value,t.value)),m={layouts:t,pageData:k,pageComponent:p,pageFrontmatter:d,pageHead:c,pageHeadTitle:o,pageLang:A,pageLayout:y,redirects:St,routeLocale:l,routePath:n,routes:Wa,siteData:on,siteLocaleData:r};return s.provide(bl,m),Object.defineProperties(s.config.globalProperties,{$frontmatter:{get:()=>d.value},$head:{get:()=>c.value},$headTitle:{get:()=>o.value},$lang:{get:()=>A.value},$page:{get:()=>k.value},$routeLocale:{get:()=>l.value},$site:{get:()=>on.value},$siteLocale:{get:()=>r.value},$withBase:{get:()=>vs}}),m},O6=()=>{const s=k3(),i=hk();let a=[];const n=()=>{s.value.forEach(l=>{const r=S6(l);r&&a.push(r)})},e=()=>{const l=[];return s.value.forEach(r=>{const p=I6(r);p&&l.push(p)}),l},t=()=>{document.documentElement.lang=i.value;const l=e();a.forEach((r,p)=>{const k=l.findIndex(d=>r.isEqualNode(d));k===-1?(r.remove(),delete a[p]):l.splice(k,1)}),l.forEach(r=>document.head.appendChild(r)),a=[...a.filter(r=>!!r),...l]};yi(B3,t),ys(()=>{n(),ts(s,t,{immediate:!1})})},S6=([s,i,a=""])=>{const n=Object.entries(i).map(([r,p])=>Ts(p)?`[${r}=${JSON.stringify(p)}]`:p===!0?`[${r}]`:"").join(""),e=`head > ${s}${n}`;return Array.from(document.querySelectorAll(e)).find(r=>r.innerText===a)||null},I6=([s,i,a])=>{if(!Ts(s))return null;const n=document.createElement(s);return en(i)&&Object.entries(i).forEach(([e,t])=>{Ts(t)?n.setAttribute(e,t):t===!0&&n.setAttribute(e,"")}),Ts(a)&&n.appendChild(document.createTextNode(a)),n},P6=zc,M6=async()=>{var a;const s=P6({name:"Vuepress",setup(){var t;O6();for(const l of ce)(t=l.setup)==null||t.call(l);const n=ce.flatMap(({rootComponents:l=[]})=>l.map(r=>h(r))),e=d3();return()=>[h(e.value),n]}}),i=L6();R6(s),j6(s,i,ce);for(const n of ce)await((a=n.enhance)==null?void 0:a.call(n,{app:s,router:i,siteData:on}));return s.use(i),{app:s,router:i}};M6().then(({app:s,router:i})=>{i.isReady().then(()=>{s.mount("#app")})});export{Ls as A,ys as B,sd as C,dg as D,vk as E,be as F,Ca as G,U6 as H,en as I,tg as J,hg as K,Ts as L,Sl as P,Rs as R,Op as a,N6 as b,$6 as c,M6 as createVueApp,Is as d,Sp as e,S as f,Da as g,Pi as h,ka as i,an as j,On as k,W as l,F as m,ws as n,H6 as o,ts as p,h as q,gi as r,Qk as s,mo as t,z6 as u,lg as v,e2 as w,ng as x,eg as y,xs as z};

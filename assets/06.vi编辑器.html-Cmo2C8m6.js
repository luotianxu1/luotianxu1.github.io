import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o,c,b as i}from"./app-yfkt0gmh.js";const l="/img/study/linux/vim.png",n={};function a(t,e){return o(),c("div",null,e[0]||(e[0]=[i('<h2 id="vi-编辑器" tabindex="-1"><a class="header-anchor" href="#vi-编辑器"><span>vi 编辑器</span></a></h2><ul><li>VI visual interface（可视化接口）</li><li>Linux 中的编辑器，类似于 windows 中的记事本</li><li>VIM 是 VI 编辑器的升级版</li><li>不需要鼠标，只用键盘就可以</li></ul><figure><img src="'+l+'" alt=" " tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="操作模式" tabindex="-1"><a class="header-anchor" href="#操作模式"><span>操作模式</span></a></h2><h3 id="命令模式" tabindex="-1"><a class="header-anchor" href="#命令模式"><span>命令模式</span></a></h3><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符，比如我们此时按下 i，并不会输入一个字符，i 被当作了一个命令。</p><p>以下是普通模式常用的几个命令：</p><ul><li><code>i</code> -- 切换到输入模式，在光标当前位置开始输入文本。</li><li><code>x</code> -- 删除当前光标所在处的字符。</li><li><code>:</code> -- 切换到底线命令模式，以在最底一行输入命令。</li><li><code>a</code> -- 进入插入模式，在光标下一个位置开始输入文本。</li><li><code>o</code> -- 在当前行的下方插入一个新行，并进入插入模式。</li><li><code>O</code> -- 在当前行的上方插入一个新行，并进入插入模式。</li><li><code>dd</code> -- 剪切当前行。</li><li><code>yy</code> -- 复制当前行。</li><li><code>p</code>（小写） -- 粘贴剪贴板内容到光标下方。</li><li><code>P</code>（大写）-- 粘贴剪贴板内容到光标上方。</li><li><code>u</code> -- 撤销上一次操作。</li><li><code>Ctrl + r</code> -- 重做上一次撤销的操作。</li><li><code>:w</code> -- 保存文件。</li><li><code>:q</code> -- 退出 Vim 编辑器。</li><li><code>:q!</code> -- 强制退出 Vim 编辑器，不保存修改。</li></ul><p>若想要编辑文本，只需要启动 Vim，进入了命令模式，按下 i 切换到输入模式即可。</p><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令行模式输入更多命令。</p><h3 id="输入模式" tabindex="-1"><a class="header-anchor" href="#输入模式"><span>输入模式</span></a></h3><p>在命令模式下按下 i 就进入了输入模式，使用 Esc 键可以返回到普通模式。</p><p>在输入模式中，可以使用以下按键： 字符按键以及 Shift 组合，输入字符</p><ul><li><code>ENTER</code>，回车键，换行</li><li><code>BACK SPACE</code>，退格键，删除光标前一个字符</li><li><code>DEL</code>，删除键，删除光标后一个字符</li><li><code>方向键</code>，在文本中移动光标</li><li><code>HOME/END</code>，移动光标到行首/行尾</li><li><code>Page Up/Page Down</code>，上/下翻页</li><li><code>Insert</code>，切换光标为输入/替换模式，光标将变成竖线/下划线</li><li><code>ESC</code>，退出输入模式，切换到命令模式</li></ul><h3 id="底线命令模式" tabindex="-1"><a class="header-anchor" href="#底线命令模式"><span>底线命令模式</span></a></h3><p>在命令模式下按下<code>:</code>（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li><code>:w</code>：保存文件。</li><li><code>:q</code>：退出 Vim 编辑器。</li><li><code>:wq</code>：保存文件并退出 Vim 编辑器。</li><li><code>:q!</code>：强制退出 Vim 编辑器，不保存修改。 按<code>ESC</code>键可随时退出底线命令模式。</li></ul><h2 id="按键说明" tabindex="-1"><a class="header-anchor" href="#按键说明"><span>按键说明</span></a></h2><h3 id="一般模式可用的光标移动、复制粘贴、搜索替换等" tabindex="-1"><a class="header-anchor" href="#一般模式可用的光标移动、复制粘贴、搜索替换等"><span>一般模式可用的光标移动、复制粘贴、搜索替换等</span></a></h3><h4 id="移动光标的方法" tabindex="-1"><a class="header-anchor" href="#移动光标的方法"><span>移动光标的方法</span></a></h4><ul><li><code>h</code> 或 向左箭头键(<code>←</code>):光标向左移动一个字符</li><li><code>j</code> 或 向下箭头键(<code>↓</code>):光标向下移动一个字符</li><li><code>k</code> 或 向上箭头键(<code>↑</code>):光标向上移动一个字符</li><li><code>l</code> 或 向右箭头键(<code>→</code>):光标向右移动一个字符</li><li><code>Ctrl + f</code>: 屏幕『向下』移动一页，相当于<code>Page Down</code>按键 (常用)</li><li><code>Ctrl + b</code>: 屏幕『向上』移动一页，相当于<code>Page Up</code>按键 (常用)</li><li><code>Ctrl + d</code>: 屏幕『向下』移动半页</li><li><code>Ctrl + u</code>: 屏幕『向上』移动半页</li><li><code>+</code>: 光标移动到非空格符的下一行</li><li><code>-</code>: 光标移动到非空格符的上一行</li><li><code>n&lt;space&gt;</code>: 那个<code>n</code>表示『数字』，例如<code>20</code>。按下数字后再按空格键，光标会向右移动这一行的<code>n</code>个字符。例如 <code>20&lt;space&gt;</code> 则光标会向后面移动<code>20</code>个字符距离。</li><li><code>0</code>或功能键<code>[Home]</code>: 这是数字<code>0</code>：移动到这一行的最前面字符处 (常用)</li><li><code>$</code>: 或功能键<code>[End]</code>: 移动到这一行的最后面字符处(常用)</li><li><code>H</code>: 光标移动到这个屏幕的最上方那一行的第一个字符</li><li><code>M</code>: 光标移动到这个屏幕的中央那一行的第一个字符</li><li><code>L</code>: 光标移动到这个屏幕的最下方那一行的第一个字符</li><li><code>G</code>: 移动到这个档案的最后一行(常用)</li><li><code>nG</code>: n 为数字。移动到这个档案的第<code>n</code>行。</li><li><code>gg</code>: 移动到这个档案的第一行 (常用)</li><li><code>n&lt;Enter&gt;</code>: n 为数字。光标向下移动<code>n</code>行(常用)</li></ul><h4 id="搜索替换" tabindex="-1"><a class="header-anchor" href="#搜索替换"><span>搜索替换</span></a></h4><ul><li><code>/word</code>: 向光标之下寻找一个名称为<code>word</code>的字符串。例如要在档案内搜寻<code>vbird</code>这个字符串，就输入<code>/vbird</code>即可！ (常用)</li><li><code>?word</code>: 向光标之上寻找一个字符串名称为<code>word</code>的字符串。</li><li><code>n</code>: 这个<code>n</code>是英文按键。代表重复前一个搜寻的动作。举例来说，如果刚刚我们执行<code>/vbird</code>去向下搜寻<code>vbird</code>这个字符串，则按下<code>n</code>后，会向下继续搜寻下一个名称为<code>vbird</code>的字符串。如果是执行<code>?vbird</code>的话，那么按下<code>n</code>则会向上继续搜寻名称为<code>vbird</code>的字符串！</li><li><code>N</code>: 这个<code>N</code>是英文按键。与<code>n</code>刚好相反，为『反向』进行前一个搜寻动作。 例如<code>/vbird</code>后，按下<code>N</code>则表示『向上』搜寻<code>vbird</code>。</li><li><code>:n1,n2s/word1/word2/g</code>:<code>n1</code>与<code>n2</code>为数字。在第<code>n1</code>与<code>n2</code>行之间寻找<code>word1</code>这个字符串，并将该字符串取代为<code>word2</code></li><li><code>:1,$s/word1/word2/g</code> 或<code>:%s/word1/word2/g</code>: 从第一行到最后一行寻找<code>word1</code>字符串，并将该字符串取代为<code>word2</code>！(常用)</li><li><code>:1,$s/word1/word2/gc</code> 或<code>:%s/word1/word2/gc</code>: 从第一行到最后一行寻找<code>word1</code>字符串，并将该字符串取代为<code>word2</code>！且在取代前显示提示字符给用户确认<code>confirm</code>是否需要取代！(常用)</li></ul><h4 id="删除、复制与贴上" tabindex="-1"><a class="header-anchor" href="#删除、复制与贴上"><span>删除、复制与贴上</span></a></h4><ul><li><code>x, X</code>: 在一行字当中，<code>x</code>为向后删除一个字符 (相当于<code>del</code>按键)，<code>X</code>为向前删除一个字符(相当于<code>backspace</code>亦即是退格键) (常用)</li><li><code>nx n</code>: 为数字，连续向后删除<code>n</code>个字符。</li><li><code>dd</code>: 剪切游标所在的那一整行(常用)，用<code>p/P</code>可以粘贴。</li><li><code>ndd</code>: <code>n</code>为数字。剪切光标所在的向下<code>n</code>行，例如<code>20dd</code>则是剪切20行(常用)，用<code>p/P</code>可以粘贴。</li><li><code>d1G</code>: 删除光标所在到第一行的所有数据</li><li><code>dG</code>: 删除光标所在到最后一行的所有数据</li><li><code>d$</code>: 删除游标所在处，到该行的最后一个字符</li><li><code>d0</code>: 那个是数字的0，删除游标所在处，到该行的最前面一个字符</li><li><code>yy</code>: 复制游标所在的那一行(常用)</li><li><code>nyy</code>: <code>n</code>为数字。复制光标所在的向下<code>n</code>行，例如<code>20yy</code>则是复制20行(常用)</li><li><code>y1G</code>: 复制游标所在行到第一行的所有数据</li><li><code>yG</code>:复制游标所在行到最后一行的所有数据</li><li><code>y0</code>:复制光标所在的那个字符到该行行首的所有数据</li><li><code>y$</code>:复制光标所在的那个字符到该行行尾的所有数据</li><li><code>p, P</code>: <code>p</code>为将已复制的数据在光标下一行贴上，<code>P</code>则为贴在游标上一行！ 举例来说，我目前光标在第20行，且已经复制了10行数据。则按下<code>p</code>后， 那10行数据会贴在原本的20行之后，亦即由21行开始贴。但如果是按下<code>P</code>呢？ 那么原本的第20行会被推到变成30行。 (常用)</li><li><code>J</code>: 将光标所在行与下一行的数据结合成同一行</li><li><code>c</code>: 重复删除多个数据，例如向下删除10行，[ 10cj ]</li><li><code>u</code>: 复原前一个动作。(常用)</li><li><code>[Ctrl]+r</code>: 重做上一个动作。(常用)</li><li><code>.</code>: 不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点<code>.</code>就好了！ (常用)</li></ul><h3 id="一般模式切换到编辑模式的可用的按钮说明" tabindex="-1"><a class="header-anchor" href="#一般模式切换到编辑模式的可用的按钮说明"><span>一般模式切换到编辑模式的可用的按钮说明</span></a></h3><h4 id="进入输入或取代的编辑模式" tabindex="-1"><a class="header-anchor" href="#进入输入或取代的编辑模式"><span>进入输入或取代的编辑模式</span></a></h4><ul><li><code>i</code>, <code>I</code>: 进入输入模式(Insert mode)：</li><li><code>i</code>: 为『从目前光标所在处输入』，<code>I</code>为『在目前所在行的第一个非空格符处开始输入』。 (常用)</li><li><code>a</code>, <code>A</code>: 进入输入模式(Insert mode)：<code>a</code>: 为『从目前光标所在的下一个字符处开始输入』，<code>A</code>为『从光标所在行的最后一个字符处开始输入』。(常用)</li><li><code>o</code>, <code>O</code>: 进入输入模式(Insert mode)：这是英文字母<code>o</code>的大小写。<code>o</code>为在目前光标所在的下一行处输入新的一行；<code>O</code>为在目前光标所在的上一行处输入新的一行！(常用)</li><li><code>r</code>, <code>R</code>: 进入取代模式(Replace mode)：<code>r</code> 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下<code>ESC</code>为止；(常用)</li><li><code>Esc</code>: 退出编辑模式，回到一般模式中(常用)</li></ul><h3 id="一般模式切换到指令行模式的可用的按钮说明" tabindex="-1"><a class="header-anchor" href="#一般模式切换到指令行模式的可用的按钮说明"><span>一般模式切换到指令行模式的可用的按钮说明</span></a></h3><h4 id="指令行的储存、离开等指令" tabindex="-1"><a class="header-anchor" href="#指令行的储存、离开等指令"><span>指令行的储存、离开等指令</span></a></h4><ul><li><code>:w</code>:将编辑的数据写入硬盘档案中(常用)</li><li><code>:w!</code>: 若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！</li><li><code>:q</code>:离开 vi (常用)</li><li><code>:q!</code>: 若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</li><li><code>:wq</code>: 储存后离开，若为<code>:wq!</code>则为强制储存后离开 (常用)</li><li><code>ZZ</code>: 这是大写的<code>Z</code>喔！如果修改过，保存当前文件，然后退出！效果等同于(保存并退出)</li><li><code>ZQ</code>: 不保存，强制退出。效果等同于<code>:q!</code>。</li><li><code>:w [filename]</code>:将编辑的数据储存成另一个档案（类似另存新档）</li><li><code>:r [filename]</code>: 在编辑的数据中，读入另一个档案的数据。亦即将<code>filename</code>这个档案内容加到游标所在行后面</li><li><code>:n1,n2 w [filename]</code>: 将<code>n1</code>到<code>n2</code>的内容储存成<code>filename</code>这个档案。</li></ul><h4 id="vim-环境的变更" tabindex="-1"><a class="header-anchor" href="#vim-环境的变更"><span>vim 环境的变更</span></a></h4><ul><li><code>:set nu</code>: 显示行号，设定之后，会在每一行的前缀显示该行的行号</li><li><code>:set nonu</code>: 与<code>set nu</code>相反，为取消行号！</li></ul>',36)]))}const p=d(n,[["render",a],["__file","06.vi编辑器.html.vue"]]),h=JSON.parse('{"path":"/study/Linux/06.vi%E7%BC%96%E8%BE%91%E5%99%A8.html","title":"vi编辑器","lang":"zh-CN","frontmatter":{"title":"vi编辑器","icon":"linux","order":6,"date":"2024-05-18T00:00:00.000Z","category":["Linux"],"tag":["Linux"],"description":"vi 编辑器 VI visual interface（可视化接口） Linux 中的编辑器，类似于 windows 中的记事本 VIM 是 VI 编辑器的升级版 不需要鼠标，只用键盘就可以 操作模式 命令模式 用户刚刚启动 vi/vim，便进入了命令模式。 此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符，比如我们此时按下 i，并不会输入一个...","head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/study/Linux/06.vi%E7%BC%96%E8%BE%91%E5%99%A8.html"}],["meta",{"property":"og:title","content":"vi编辑器"}],["meta",{"property":"og:description","content":"vi 编辑器 VI visual interface（可视化接口） Linux 中的编辑器，类似于 windows 中的记事本 VIM 是 VI 编辑器的升级版 不需要鼠标，只用键盘就可以 操作模式 命令模式 用户刚刚启动 vi/vim，便进入了命令模式。 此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符，比如我们此时按下 i，并不会输入一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://luotianxu1.github.io/img/study/linux/vim.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:published_time","content":"2024-05-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vi编辑器\\",\\"image\\":[\\"https://luotianxu1.github.io/img/study/linux/vim.png\\"],\\"datePublished\\":\\"2024-05-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"vi 编辑器","slug":"vi-编辑器","link":"#vi-编辑器","children":[]},{"level":2,"title":"操作模式","slug":"操作模式","link":"#操作模式","children":[{"level":3,"title":"命令模式","slug":"命令模式","link":"#命令模式","children":[]},{"level":3,"title":"输入模式","slug":"输入模式","link":"#输入模式","children":[]},{"level":3,"title":"底线命令模式","slug":"底线命令模式","link":"#底线命令模式","children":[]}]},{"level":2,"title":"按键说明","slug":"按键说明","link":"#按键说明","children":[{"level":3,"title":"一般模式可用的光标移动、复制粘贴、搜索替换等","slug":"一般模式可用的光标移动、复制粘贴、搜索替换等","link":"#一般模式可用的光标移动、复制粘贴、搜索替换等","children":[]},{"level":3,"title":"一般模式切换到编辑模式的可用的按钮说明","slug":"一般模式切换到编辑模式的可用的按钮说明","link":"#一般模式切换到编辑模式的可用的按钮说明","children":[]},{"level":3,"title":"一般模式切换到指令行模式的可用的按钮说明","slug":"一般模式切换到指令行模式的可用的按钮说明","link":"#一般模式切换到指令行模式的可用的按钮说明","children":[]}]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":8.51,"words":2552},"filePathRelative":"study/Linux/06.vi编辑器.md","localizedDate":"2024年5月18日","excerpt":"<h2>vi 编辑器</h2>\\n<ul>\\n<li>VI visual interface（可视化接口）</li>\\n<li>Linux 中的编辑器，类似于 windows 中的记事本</li>\\n<li>VIM 是 VI 编辑器的升级版</li>\\n<li>不需要鼠标，只用键盘就可以</li>\\n</ul>\\n<figure><img src=\\"/img/study/linux/vim.png\\" alt=\\" \\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption> </figcaption></figure>\\n<h2>操作模式</h2>\\n<h3>命令模式</h3>\\n<p>用户刚刚启动 vi/vim，便进入了命令模式。</p>","autoDesc":true}');export{p as comp,h as data};

import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as n,c as t,d as l,b as h}from"./app-BZCNBBDt.js";const o={};function p(r,a){const e=i("IFrame");return n(),t("div",null,[l(e,{url:"https://luotainxu-demo.netlify.app/#/threejs/controls/orbitControls"}),a[0]||(a[0]=h(`<h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2><h3 id="object-camera" tabindex="-1"><a class="header-anchor" href="#object-camera"><span>object : Camera</span></a></h3><p>（必须）将要被控制的相机。该相机不允许是其他任何对象的子级，除非该对象是场景自身。</p><h3 id="domelement-htmldomelement" tabindex="-1"><a class="header-anchor" href="#domelement-htmldomelement"><span>domElement : HTMLDOMElement</span></a></h3><p>用于事件监听的 HTML 元素。</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><h3 id="autorotate-boolean" tabindex="-1"><a class="header-anchor" href="#autorotate-boolean"><span>.autoRotate : Boolean</span></a></h3><p>将其设为 true，以自动围绕目标旋转。</p><h3 id="autorotatespeed-float" tabindex="-1"><a class="header-anchor" href="#autorotatespeed-float"><span>.autoRotateSpeed : Float</span></a></h3><p>当.autoRotate 为 true 时，围绕目标旋转的速度将有多快，默认值为 2.0，相当于在 60fps 时每旋转一周需要 30 秒。</p><h3 id="dampingfactor-float" tabindex="-1"><a class="header-anchor" href="#dampingfactor-float"><span>.dampingFactor : Float</span></a></h3><p>当.enableDamping 设置为 true 的时候，阻尼惯性有多大。 默认值为 0.05.</p><h3 id="domelement-htmldomelement-1" tabindex="-1"><a class="header-anchor" href="#domelement-htmldomelement-1"><span>.domElement : HTMLDOMElement</span></a></h3><p>该 HTMLDOMElement 用于监听鼠标/触摸事件，该属性必须在构造函数中传入。在此处改变它将不会设置新的事件监听。</p><h3 id="enabled-boolean" tabindex="-1"><a class="header-anchor" href="#enabled-boolean"><span>.enabled : Boolean</span></a></h3><p>当设置为 false 时，控制器将不会响应用户的操作。默认值为 true。</p><h3 id="enabledamping-boolean" tabindex="-1"><a class="header-anchor" href="#enabledamping-boolean"><span>.enableDamping : Boolean</span></a></h3><p>将其设置为 true 以启用阻尼（惯性），这将给控制器带来重量感。默认值为 false。</p><h3 id="enablepan-boolean" tabindex="-1"><a class="header-anchor" href="#enablepan-boolean"><span>.enablePan : Boolean</span></a></h3><p>启用或禁用摄像机平移，默认为 true。</p><h3 id="enablerotate-boolean" tabindex="-1"><a class="header-anchor" href="#enablerotate-boolean"><span>.enableRotate : Boolean</span></a></h3><p>启用或禁用摄像机水平或垂直旋转。默认值为 true。 请注意，可以通过将 polar angle 或者 azimuth angle 的 min 和 max 设置为相同的值来禁用单个轴， 这将使得水平旋转或垂直旋转固定为所设置的值。</p><h3 id="enablezoom-boolean" tabindex="-1"><a class="header-anchor" href="#enablezoom-boolean"><span>.enableZoom : Boolean</span></a></h3><p>启用或禁用摄像机的缩放。</p><h3 id="keypanspeed-float" tabindex="-1"><a class="header-anchor" href="#keypanspeed-float"><span>.keyPanSpeed : Float</span></a></h3><p>当使用键盘按键的时候，相机平移的速度有多快。默认值为每次按下按键时平移 7 像素。</p><h3 id="keys-object" tabindex="-1"><a class="header-anchor" href="#keys-object"><span>.keys : Object</span></a></h3><p>这一对象包含了用于控制相机平移的按键代码的引用。默认值为 4 个箭头（方向）键。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">controls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">keys</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    LEFT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ArrowLeft&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">//left arrow</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    UP</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ArrowUp&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// up arrow</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    RIGHT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ArrowRight&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// right arrow</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    BOTTOM</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ArrowDown&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// down arrow</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maxazimuthangle-float" tabindex="-1"><a class="header-anchor" href="#maxazimuthangle-float"><span>.maxAzimuthAngle : Float</span></a></h3><p>你能够水平旋转的角度上限。如果设置，其有效值范围为[-2 * Math.PI，2 * Math.PI]，且旋转角度的上限和下限差值小于 2 * Math.PI。默认值为无穷大</p><h3 id="maxdistance-float" tabindex="-1"><a class="header-anchor" href="#maxdistance-float"><span>.maxDistance : Float</span></a></h3><p>你能够将相机向外移动多少（仅适用于 PerspectiveCamera），其默认值为 Infinity。</p><h3 id="maxpolarangle-float" tabindex="-1"><a class="header-anchor" href="#maxpolarangle-float"><span>.maxPolarAngle : Float</span></a></h3><p>你能够垂直旋转的角度的上限，范围是 0 到 Math.PI，其默认值为 Math.PI。</p><h3 id="maxzoom-float" tabindex="-1"><a class="header-anchor" href="#maxzoom-float"><span>.maxZoom : Float</span></a></h3><p>你能够将相机缩小多少（仅适用于 OrthographicCamera），其默认值为 Infinity。</p><h3 id="minazimuthangle-float" tabindex="-1"><a class="header-anchor" href="#minazimuthangle-float"><span>.minAzimuthAngle : Float</span></a></h3><p>你能够水平旋转的角度下限。如果设置，其有效值范围为[-2 * Math.PI，2 * Math.PI]，且旋转角度的上限和下限差值小于 2 * Math.PI。默认值为无穷大。</p><h3 id="mindistance-float" tabindex="-1"><a class="header-anchor" href="#mindistance-float"><span>.minDistance : Float</span></a></h3><p>你能够将相机向内移动多少（仅适用于 PerspectiveCamera），其默认值为 0。</p><h3 id="minpolarangle-float" tabindex="-1"><a class="header-anchor" href="#minpolarangle-float"><span>.minPolarAngle : Float</span></a></h3><p>你能够垂直旋转的角度的下限，范围是 0 到 Math.PI，其默认值为 0。</p><h3 id="minzoom-float" tabindex="-1"><a class="header-anchor" href="#minzoom-float"><span>.minZoom : Float</span></a></h3><p>你能够将相机放大多少（仅适用于 OrthographicCamera），其默认值为 0。</p><h3 id="mousebuttons-object" tabindex="-1"><a class="header-anchor" href="#mousebuttons-object"><span>.mouseButtons : Object</span></a></h3><p>该对象包含由控件所使用的鼠标操作的引用。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">controls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">mouseButtons</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    LEFT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">MOUSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">ROTATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    MIDDLE</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">MOUSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">DOLLY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    RIGHT</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">MOUSE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">PAN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="object-camera-1" tabindex="-1"><a class="header-anchor" href="#object-camera-1"><span>.object : Camera</span></a></h3><p>正被控制的摄像机。</p><h3 id="panspeed-float" tabindex="-1"><a class="header-anchor" href="#panspeed-float"><span>.panSpeed : Float</span></a></h3><p>位移的速度，其默认值为 1。</p><h3 id="position0-vector3" tabindex="-1"><a class="header-anchor" href="#position0-vector3"><span>.position0 : Vector3</span></a></h3><p>由.saveState 和.reset 方法在内部使用。</p><h3 id="rotatespeed-float" tabindex="-1"><a class="header-anchor" href="#rotatespeed-float"><span>.rotateSpeed : Float</span></a></h3><p>旋转的速度，其默认值为 1。</p><h3 id="screenspacepanning-boolean" tabindex="-1"><a class="header-anchor" href="#screenspacepanning-boolean"><span>.screenSpacePanning : Boolean</span></a></h3><p>定义当平移的时候摄像机的位置将如何移动。如果为 true，摄像机将在屏幕空间内平移。 否则，摄像机将在与摄像机向上方向垂直的平面中平移。当使用 OrbitControls 时， 默认值为 true；当使用 MapControls 时，默认值为 false。</p><h3 id="target0-vector3" tabindex="-1"><a class="header-anchor" href="#target0-vector3"><span>.target0 : Vector3</span></a></h3><p>由.saveState 和.reset 方法在内部使用。</p><h3 id="target-vector3" tabindex="-1"><a class="header-anchor" href="#target-vector3"><span>.target : Vector3</span></a></h3><p>控制器的焦点，.object 的轨道围绕它运行。 它可以在任何时候被手动更新，以更改控制器的焦点。</p><h3 id="touches-object" tabindex="-1"><a class="header-anchor" href="#touches-object"><span>.touches : Object</span></a></h3><p>该对象包含由控件所使用的触摸操作的引用。</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">controls</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">touches</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    ONE</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">TOUCH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">ROTATE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    TWO</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">TOUCH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">DOLLY_PAN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zoom0-float" tabindex="-1"><a class="header-anchor" href="#zoom0-float"><span>.zoom0 : Float</span></a></h3><p>由.saveState和.reset方法在内部使用。</p><h3 id="zoomspeed-float" tabindex="-1"><a class="header-anchor" href="#zoomspeed-float"><span>.zoomSpeed : Float</span></a></h3><p>摄像机缩放的速度，其默认值为1。</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h3 id="dispose-undefined" tabindex="-1"><a class="header-anchor" href="#dispose-undefined"><span>.dispose () : undefined</span></a></h3><p>移除所有的事件监听。</p><h3 id="getazimuthalangle-radians" tabindex="-1"><a class="header-anchor" href="#getazimuthalangle-radians"><span>.getAzimuthalAngle () : radians</span></a></h3><p>获得当前的水平旋转，单位为弧度。</p><h3 id="getpolarangle-radians" tabindex="-1"><a class="header-anchor" href="#getpolarangle-radians"><span>.getPolarAngle () : radians</span></a></h3><p>获得当前的垂直旋转，单位为弧度。</p><h3 id="getdistance-float" tabindex="-1"><a class="header-anchor" href="#getdistance-float"><span>.getDistance () : Float</span></a></h3><p>返回从相机到目标的距离。</p><h3 id="listentokeyevents-domelement-htmldomelement-undefined" tabindex="-1"><a class="header-anchor" href="#listentokeyevents-domelement-htmldomelement-undefined"><span>.listenToKeyEvents ( domElement : HTMLDOMElement ) : undefined</span></a></h3><p>为指定的DOM元素添加按键监听。推荐将window作为指定的DOM元素。</p><h3 id="reset-undefined" tabindex="-1"><a class="header-anchor" href="#reset-undefined"><span>.reset () : undefined</span></a></h3><p>将控制器重置为上次调用.saveState时的状态，或者初始状态。</p><h3 id="savestate-undefined" tabindex="-1"><a class="header-anchor" href="#savestate-undefined"><span>.saveState () : undefined</span></a></h3><p>保存当前控制器的状态。这一状态可在之后由.reset所恢复。</p><h3 id="stoplistentokeyevents-undefined" tabindex="-1"><a class="header-anchor" href="#stoplistentokeyevents-undefined"><span>.stopListenToKeyEvents () : undefined</span></a></h3><p>删除之前用.listenToKeyEvents()定义的键事件监听器</p><h3 id="update-boolean" tabindex="-1"><a class="header-anchor" href="#update-boolean"><span>.update () : Boolean</span></a></h3><p>更新控制器。必须在摄像机的变换发生任何手动改变后调用， 或如果.autoRotate或.enableDamping被设置时，在update循环里调用。</p>`,88))])}const c=s(o,[["render",p],["__file","轨道控制器.html.vue"]]),m=JSON.parse(`{"path":"/threejs/%E6%8E%A7%E5%88%B6%E5%99%A8/%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8.html","title":"OrbitControls（轨道控制器）","lang":"zh-CN","frontmatter":{"title":"OrbitControls（轨道控制器）","icon":"markdown","order":1,"date":"2023-03-08T00:00:00.000Z","category":["threejs"],"tag":["轨道控制器"],"head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/threejs/%E6%8E%A7%E5%88%B6%E5%99%A8/%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8.html"}],["meta",{"property":"og:title","content":"OrbitControls（轨道控制器）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"轨道控制器"}],["meta",{"property":"article:published_time","content":"2023-03-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OrbitControls（轨道控制器）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[{"level":3,"title":"object : Camera","slug":"object-camera","link":"#object-camera","children":[]},{"level":3,"title":"domElement : HTMLDOMElement","slug":"domelement-htmldomelement","link":"#domelement-htmldomelement","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":".autoRotate : Boolean","slug":"autorotate-boolean","link":"#autorotate-boolean","children":[]},{"level":3,"title":".autoRotateSpeed : Float","slug":"autorotatespeed-float","link":"#autorotatespeed-float","children":[]},{"level":3,"title":".dampingFactor : Float","slug":"dampingfactor-float","link":"#dampingfactor-float","children":[]},{"level":3,"title":".domElement : HTMLDOMElement","slug":"domelement-htmldomelement-1","link":"#domelement-htmldomelement-1","children":[]},{"level":3,"title":".enabled : Boolean","slug":"enabled-boolean","link":"#enabled-boolean","children":[]},{"level":3,"title":".enableDamping : Boolean","slug":"enabledamping-boolean","link":"#enabledamping-boolean","children":[]},{"level":3,"title":".enablePan : Boolean","slug":"enablepan-boolean","link":"#enablepan-boolean","children":[]},{"level":3,"title":".enableRotate : Boolean","slug":"enablerotate-boolean","link":"#enablerotate-boolean","children":[]},{"level":3,"title":".enableZoom : Boolean","slug":"enablezoom-boolean","link":"#enablezoom-boolean","children":[]},{"level":3,"title":".keyPanSpeed : Float","slug":"keypanspeed-float","link":"#keypanspeed-float","children":[]},{"level":3,"title":".keys : Object","slug":"keys-object","link":"#keys-object","children":[]},{"level":3,"title":".maxAzimuthAngle : Float","slug":"maxazimuthangle-float","link":"#maxazimuthangle-float","children":[]},{"level":3,"title":".maxDistance : Float","slug":"maxdistance-float","link":"#maxdistance-float","children":[]},{"level":3,"title":".maxPolarAngle : Float","slug":"maxpolarangle-float","link":"#maxpolarangle-float","children":[]},{"level":3,"title":".maxZoom : Float","slug":"maxzoom-float","link":"#maxzoom-float","children":[]},{"level":3,"title":".minAzimuthAngle : Float","slug":"minazimuthangle-float","link":"#minazimuthangle-float","children":[]},{"level":3,"title":".minDistance : Float","slug":"mindistance-float","link":"#mindistance-float","children":[]},{"level":3,"title":".minPolarAngle : Float","slug":"minpolarangle-float","link":"#minpolarangle-float","children":[]},{"level":3,"title":".minZoom : Float","slug":"minzoom-float","link":"#minzoom-float","children":[]},{"level":3,"title":".mouseButtons : Object","slug":"mousebuttons-object","link":"#mousebuttons-object","children":[]},{"level":3,"title":".object : Camera","slug":"object-camera-1","link":"#object-camera-1","children":[]},{"level":3,"title":".panSpeed : Float","slug":"panspeed-float","link":"#panspeed-float","children":[]},{"level":3,"title":".position0 : Vector3","slug":"position0-vector3","link":"#position0-vector3","children":[]},{"level":3,"title":".rotateSpeed : Float","slug":"rotatespeed-float","link":"#rotatespeed-float","children":[]},{"level":3,"title":".screenSpacePanning : Boolean","slug":"screenspacepanning-boolean","link":"#screenspacepanning-boolean","children":[]},{"level":3,"title":".target0 : Vector3","slug":"target0-vector3","link":"#target0-vector3","children":[]},{"level":3,"title":".target : Vector3","slug":"target-vector3","link":"#target-vector3","children":[]},{"level":3,"title":".touches : Object","slug":"touches-object","link":"#touches-object","children":[]},{"level":3,"title":".zoom0 : Float","slug":"zoom0-float","link":"#zoom0-float","children":[]},{"level":3,"title":".zoomSpeed : Float","slug":"zoomspeed-float","link":"#zoomspeed-float","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":".dispose () : undefined","slug":"dispose-undefined","link":"#dispose-undefined","children":[]},{"level":3,"title":".getAzimuthalAngle () : radians","slug":"getazimuthalangle-radians","link":"#getazimuthalangle-radians","children":[]},{"level":3,"title":".getPolarAngle () : radians","slug":"getpolarangle-radians","link":"#getpolarangle-radians","children":[]},{"level":3,"title":".getDistance () : Float","slug":"getdistance-float","link":"#getdistance-float","children":[]},{"level":3,"title":".listenToKeyEvents ( domElement : HTMLDOMElement ) : undefined","slug":"listentokeyevents-domelement-htmldomelement-undefined","link":"#listentokeyevents-domelement-htmldomelement-undefined","children":[]},{"level":3,"title":".reset () : undefined","slug":"reset-undefined","link":"#reset-undefined","children":[]},{"level":3,"title":".saveState () : undefined","slug":"savestate-undefined","link":"#savestate-undefined","children":[]},{"level":3,"title":".stopListenToKeyEvents () : undefined","slug":"stoplistentokeyevents-undefined","link":"#stoplistentokeyevents-undefined","children":[]},{"level":3,"title":".update () : Boolean","slug":"update-boolean","link":"#update-boolean","children":[]}]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":3.95,"words":1184},"filePathRelative":"threejs/控制器/轨道控制器.md","localizedDate":"2023年3月8日","excerpt":"<iframe url=\\"https://luotainxu-demo.netlify.app/#/threejs/controls/orbitControls\\">\\n<h2 id=\\"构造函数\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#构造函数\\"><span>构造函数</span></a></h2>\\n<h3 id=\\"object-camera\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#object-camera\\"><span>object : Camera</span></a></h3>\\n<p>（必须）将要被控制的相机。该相机不允许是其他任何对象的子级，除非该对象是场景自身。</p>\\n<h3 id=\\"domelement-htmldomelement\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#domelement-htmldomelement\\"><span>domElement : HTMLDOMElement</span></a></h3>\\n<p>用于事件监听的 HTML 元素。</p>\\n<h2 id=\\"属性\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#属性\\"><span>属性</span></a></h2>\\n<h3 id=\\"autorotate-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#autorotate-boolean\\"><span>.autoRotate : Boolean</span></a></h3>\\n<p>将其设为 true，以自动围绕目标旋转。</p>\\n<h3 id=\\"autorotatespeed-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#autorotatespeed-float\\"><span>.autoRotateSpeed : Float</span></a></h3>\\n<p>当.autoRotate 为 true 时，围绕目标旋转的速度将有多快，默认值为 2.0，相当于在 60fps 时每旋转一周需要 30 秒。</p>\\n<h3 id=\\"dampingfactor-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#dampingfactor-float\\"><span>.dampingFactor : Float</span></a></h3>\\n<p>当.enableDamping 设置为 true 的时候，阻尼惯性有多大。 默认值为 0.05.</p>\\n<h3 id=\\"domelement-htmldomelement-1\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#domelement-htmldomelement-1\\"><span>.domElement : HTMLDOMElement</span></a></h3>\\n<p>该 HTMLDOMElement 用于监听鼠标/触摸事件，该属性必须在构造函数中传入。在此处改变它将不会设置新的事件监听。</p>\\n<h3 id=\\"enabled-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#enabled-boolean\\"><span>.enabled : Boolean</span></a></h3>\\n<p>当设置为 false 时，控制器将不会响应用户的操作。默认值为 true。</p>\\n<h3 id=\\"enabledamping-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#enabledamping-boolean\\"><span>.enableDamping : Boolean</span></a></h3>\\n<p>将其设置为 true 以启用阻尼（惯性），这将给控制器带来重量感。默认值为 false。</p>\\n<h3 id=\\"enablepan-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#enablepan-boolean\\"><span>.enablePan : Boolean</span></a></h3>\\n<p>启用或禁用摄像机平移，默认为 true。</p>\\n<h3 id=\\"enablerotate-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#enablerotate-boolean\\"><span>.enableRotate : Boolean</span></a></h3>\\n<p>启用或禁用摄像机水平或垂直旋转。默认值为 true。\\n请注意，可以通过将 polar angle 或者 azimuth angle 的 min 和 max 设置为相同的值来禁用单个轴， 这将使得水平旋转或垂直旋转固定为所设置的值。</p>\\n<h3 id=\\"enablezoom-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#enablezoom-boolean\\"><span>.enableZoom : Boolean</span></a></h3>\\n<p>启用或禁用摄像机的缩放。</p>\\n<h3 id=\\"keypanspeed-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#keypanspeed-float\\"><span>.keyPanSpeed : Float</span></a></h3>\\n<p>当使用键盘按键的时候，相机平移的速度有多快。默认值为每次按下按键时平移 7 像素。</p>\\n<h3 id=\\"keys-object\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#keys-object\\"><span>.keys : Object</span></a></h3>\\n<p>这一对象包含了用于控制相机平移的按键代码的引用。默认值为 4 个箭头（方向）键。</p>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre v-pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">controls</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">keys</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    LEFT</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 'ArrowLeft'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//left arrow</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    UP</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 'ArrowUp'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// up arrow</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    RIGHT</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 'ArrowRight'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// right arrow</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    BOTTOM</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 'ArrowDown'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// down arrow</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><h3 id=\\"maxazimuthangle-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#maxazimuthangle-float\\"><span>.maxAzimuthAngle : Float</span></a></h3>\\n<p>你能够水平旋转的角度上限。如果设置，其有效值范围为[-2 * Math.PI，2 * Math.PI]，且旋转角度的上限和下限差值小于 2 * Math.PI。默认值为无穷大</p>\\n<h3 id=\\"maxdistance-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#maxdistance-float\\"><span>.maxDistance : Float</span></a></h3>\\n<p>你能够将相机向外移动多少（仅适用于 PerspectiveCamera），其默认值为 Infinity。</p>\\n<h3 id=\\"maxpolarangle-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#maxpolarangle-float\\"><span>.maxPolarAngle : Float</span></a></h3>\\n<p>你能够垂直旋转的角度的上限，范围是 0 到 Math.PI，其默认值为 Math.PI。</p>\\n<h3 id=\\"maxzoom-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#maxzoom-float\\"><span>.maxZoom : Float</span></a></h3>\\n<p>你能够将相机缩小多少（仅适用于 OrthographicCamera），其默认值为 Infinity。</p>\\n<h3 id=\\"minazimuthangle-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#minazimuthangle-float\\"><span>.minAzimuthAngle : Float</span></a></h3>\\n<p>你能够水平旋转的角度下限。如果设置，其有效值范围为[-2 * Math.PI，2 * Math.PI]，且旋转角度的上限和下限差值小于 2 * Math.PI。默认值为无穷大。</p>\\n<h3 id=\\"mindistance-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#mindistance-float\\"><span>.minDistance : Float</span></a></h3>\\n<p>你能够将相机向内移动多少（仅适用于 PerspectiveCamera），其默认值为 0。</p>\\n<h3 id=\\"minpolarangle-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#minpolarangle-float\\"><span>.minPolarAngle : Float</span></a></h3>\\n<p>你能够垂直旋转的角度的下限，范围是 0 到 Math.PI，其默认值为 0。</p>\\n<h3 id=\\"minzoom-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#minzoom-float\\"><span>.minZoom : Float</span></a></h3>\\n<p>你能够将相机放大多少（仅适用于 OrthographicCamera），其默认值为 0。</p>\\n<h3 id=\\"mousebuttons-object\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#mousebuttons-object\\"><span>.mouseButtons : Object</span></a></h3>\\n<p>该对象包含由控件所使用的鼠标操作的引用。</p>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre v-pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">controls</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">mouseButtons</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    LEFT</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">MOUSE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">ROTATE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    MIDDLE</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">MOUSE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">DOLLY</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    RIGHT</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">MOUSE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">PAN</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><h3 id=\\"object-camera-1\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#object-camera-1\\"><span>.object : Camera</span></a></h3>\\n<p>正被控制的摄像机。</p>\\n<h3 id=\\"panspeed-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#panspeed-float\\"><span>.panSpeed : Float</span></a></h3>\\n<p>位移的速度，其默认值为 1。</p>\\n<h3 id=\\"position0-vector3\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#position0-vector3\\"><span>.position0 : Vector3</span></a></h3>\\n<p>由.saveState 和.reset 方法在内部使用。</p>\\n<h3 id=\\"rotatespeed-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#rotatespeed-float\\"><span>.rotateSpeed : Float</span></a></h3>\\n<p>旋转的速度，其默认值为 1。</p>\\n<h3 id=\\"screenspacepanning-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#screenspacepanning-boolean\\"><span>.screenSpacePanning : Boolean</span></a></h3>\\n<p>定义当平移的时候摄像机的位置将如何移动。如果为 true，摄像机将在屏幕空间内平移。 否则，摄像机将在与摄像机向上方向垂直的平面中平移。当使用 OrbitControls 时， 默认值为 true；当使用 MapControls 时，默认值为 false。</p>\\n<h3 id=\\"target0-vector3\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#target0-vector3\\"><span>.target0 : Vector3</span></a></h3>\\n<p>由.saveState 和.reset 方法在内部使用。</p>\\n<h3 id=\\"target-vector3\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#target-vector3\\"><span>.target : Vector3</span></a></h3>\\n<p>控制器的焦点，.object 的轨道围绕它运行。 它可以在任何时候被手动更新，以更改控制器的焦点。</p>\\n<h3 id=\\"touches-object\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#touches-object\\"><span>.touches : Object</span></a></h3>\\n<p>该对象包含由控件所使用的触摸操作的引用。</p>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre v-pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">controls</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">touches</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    ONE</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">TOUCH</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">ROTATE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">    TWO</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E5C07B\\">TOUCH</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">DOLLY_PAN</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><h3 id=\\"zoom0-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#zoom0-float\\"><span>.zoom0 : Float</span></a></h3>\\n<p>由.saveState和.reset方法在内部使用。</p>\\n<h3 id=\\"zoomspeed-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#zoomspeed-float\\"><span>.zoomSpeed : Float</span></a></h3>\\n<p>摄像机缩放的速度，其默认值为1。</p>\\n<h2 id=\\"方法\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#方法\\"><span>方法</span></a></h2>\\n<h3 id=\\"dispose-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#dispose-undefined\\"><span>.dispose () : undefined</span></a></h3>\\n<p>移除所有的事件监听。</p>\\n<h3 id=\\"getazimuthalangle-radians\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#getazimuthalangle-radians\\"><span>.getAzimuthalAngle () : radians</span></a></h3>\\n<p>获得当前的水平旋转，单位为弧度。</p>\\n<h3 id=\\"getpolarangle-radians\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#getpolarangle-radians\\"><span>.getPolarAngle () : radians</span></a></h3>\\n<p>获得当前的垂直旋转，单位为弧度。</p>\\n<h3 id=\\"getdistance-float\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#getdistance-float\\"><span>.getDistance () : Float</span></a></h3>\\n<p>返回从相机到目标的距离。</p>\\n<h3 id=\\"listentokeyevents-domelement-htmldomelement-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#listentokeyevents-domelement-htmldomelement-undefined\\"><span>.listenToKeyEvents ( domElement : HTMLDOMElement ) : undefined</span></a></h3>\\n<p>为指定的DOM元素添加按键监听。推荐将window作为指定的DOM元素。</p>\\n<h3 id=\\"reset-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#reset-undefined\\"><span>.reset () : undefined</span></a></h3>\\n<p>将控制器重置为上次调用.saveState时的状态，或者初始状态。</p>\\n<h3 id=\\"savestate-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#savestate-undefined\\"><span>.saveState () : undefined</span></a></h3>\\n<p>保存当前控制器的状态。这一状态可在之后由.reset所恢复。</p>\\n<h3 id=\\"stoplistentokeyevents-undefined\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#stoplistentokeyevents-undefined\\"><span>.stopListenToKeyEvents () : undefined</span></a></h3>\\n<p>删除之前用.listenToKeyEvents()定义的键事件监听器</p>\\n<h3 id=\\"update-boolean\\" tabindex=\\"-1\\"><a class=\\"header-anchor\\" href=\\"#update-boolean\\"><span>.update () : Boolean</span></a></h3>\\n<p>更新控制器。必须在摄像机的变换发生任何手动改变后调用， 或如果.autoRotate或.enableDamping被设置时，在update循环里调用。</p>\\n</iframe>"}`);export{c as comp,m as data};

import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as t,b as a}from"./app-BlTcOGK_.js";const n={};function r(h,i){return s(),t("div",null,i[0]||(i[0]=[a(`<h2 id="buffergeometry" tabindex="-1"><a class="header-anchor" href="#buffergeometry"><span>BufferGeometry</span></a></h2><p>是面片、线或点几何体的有效表述。包括顶点位置，面片索引、法相量、颜色值、UV 坐标和自定义缓存属性值。使用 BufferGeometry 可以有效减少向 GPU 传输上述数据所需的开销。</p><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> geometry</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">BufferGeometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 创建一个简单的矩形. 在这里我们左上和右下顶点被复制了两次。 // 因为在两个三角面片里，这两个顶点都需要被用到。 </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> vertices</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Float32Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( [ </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1.0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ] ); </span><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// itemSize = 3 因为每个顶点都是一个三元组。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;position&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">BufferAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">vertices</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ) ); </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> material</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MeshBasicMaterial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( { </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">color</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0xff0000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> } ); </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> mesh</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> THREE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Mesh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">geometry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">material</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> );</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h2><h3 id="buffergeometry-1" tabindex="-1"><a class="header-anchor" href="#buffergeometry-1"><span>BufferGeometry()</span></a></h3><p>创建一个新的 BufferGeometry. 同时将预置属性设置为默认值.</p><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><h3 id="attributes-object" tabindex="-1"><a class="header-anchor" href="#attributes-object"><span>.attributes : Object</span></a></h3><p>通过 hashmap 存储该几何体相关的属性，hashmap 的 id 是当前 attribute 的名称，值是相应的 buffer。 你可以通过 .setAttribute 和 .getAttribute 添加和访问与当前几何体有关的 attribute。</p><h3 id="boundingbox-box3" tabindex="-1"><a class="header-anchor" href="#boundingbox-box3"><span>.boundingBox : Box3</span></a></h3><p>当前 bufferGeometry 的外边界矩形。可以通过 .computeBoundingBox() 计算。默认值是 null。</p><h3 id="boundingsphere-sphere" tabindex="-1"><a class="header-anchor" href="#boundingsphere-sphere"><span>.boundingSphere : Sphere</span></a></h3><p>当前 bufferGeometry 的外边界球形。可以通过 .computeBoundingSphere() 计算。默认值是 null。</p><h3 id="drawrange-object" tabindex="-1"><a class="header-anchor" href="#drawrange-object"><span>.drawRange : Object</span></a></h3><p>用于判断几何体的哪个部分需要被渲染。该值不应该直接被设置，而需要通过 .setDrawRange 进行设置。 默认值为</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">Infinity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="groups-array" tabindex="-1"><a class="header-anchor" href="#groups-array"><span>.groups : Array</span></a></h3><p>将当前几何体分割成组进行渲染，每个部分都会在单独的 WebGL 的 draw call 中进行绘制。该方法可以让当前的 bufferGeometry 可以使用一个材质队列进行描述。</p><p>分割后的每个部分都是一个如下的表单：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">count</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">materialIndex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Integer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>start 表明当前 draw call 中的没有索引的几何体的几何体的第一个顶点；或者第一个三角面片的索引。 count 指明当前分割包含多少顶点（或 indices）。 materialIndex 指出当前用到的材质队列的索引。</p><p>通过 .addGroup 来增加组，而不是直接更改当前队列。</p><h3 id="id-integer" tabindex="-1"><a class="header-anchor" href="#id-integer"><span>.id : Integer</span></a></h3><p>当前 bufferGeometry 的唯一编号。</p><h3 id="index-bufferattribute" tabindex="-1"><a class="header-anchor" href="#index-bufferattribute"><span>.index : BufferAttribute</span></a></h3><p>允许顶点在多个三角面片间可以重用。这样的顶点被称为&quot;已索引的三角面片（indexed triangles)。 每个三角面片都和三个顶点的索引相关。该 attribute 因此所存储的是每个三角面片的三个顶点的索引。 如果该 attribute 没有设置过，则 renderer 假设每三个连续的位置代表一个三角面片。 默认值是 null。</p><h3 id="isbuffergeometry-boolean" tabindex="-1"><a class="header-anchor" href="#isbuffergeometry-boolean"><span>.isBufferGeometry : Boolean</span></a></h3><p>Read-only标志，用于检查给定对象是否为BufferGeometry类型。</p><h3 id="morphattributes-object" tabindex="-1"><a class="header-anchor" href="#morphattributes-object"><span>.morphAttributes : Object</span></a></h3><p>存储 BufferAttribute 的 Hashmap，存储了几何体 morph targets 的细节信息。</p><h3 id="morphtargetsrelative-boolean" tabindex="-1"><a class="header-anchor" href="#morphtargetsrelative-boolean"><span>.morphTargetsRelative : Boolean</span></a></h3><p>用于控制变形目标的行为;当设置为true时，变形目标数据被视为相对偏移量，而不是绝对位置/法线。默认为false。</p><h3 id="name-string" tabindex="-1"><a class="header-anchor" href="#name-string"><span>.name : String</span></a></h3><p>当前 bufferGeometry 实例的可选别名。默认值是空字符串。</p><h3 id="userdata-object" tabindex="-1"><a class="header-anchor" href="#userdata-object"><span>.userData : Object</span></a></h3><p>存储 BufferGeometry 的自定义数据的对象。为保持对象在克隆时完整，该对象不应该包括任何函数的引用。</p><h3 id="uuid-string" tabindex="-1"><a class="header-anchor" href="#uuid-string"><span>.uuid : String</span></a></h3><p>当前对象实例的 UUID，该值会自动被分配，且不应被修改。</p><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h3 id="setattribute-name-string-attribute-bufferattribute-this" tabindex="-1"><a class="header-anchor" href="#setattribute-name-string-attribute-bufferattribute-this"><span>.setAttribute ( name : String, attribute : BufferAttribute ) : this</span></a></h3><p>为当前几何体设置一个 attribute 属性。在类的内部，有一个存储 .attributes 的 hashmap， 通过该 hashmap，遍历 attributes 的速度会更快。而使用该方法，可以向 hashmap 内部增加 attribute。 所以，你需要使用该方法来添加 attributes。</p><h3 id="addgroup-start-integer-count-integer-materialindex-integer-undefined" tabindex="-1"><a class="header-anchor" href="#addgroup-start-integer-count-integer-materialindex-integer-undefined"><span>.addGroup ( start : Integer, count : Integer, materialIndex : Integer ) : undefined</span></a></h3><p>为当前几何体增加一个 group，详见 groups 属性。</p><h3 id="applymatrix4-matrix-matrix4-this" tabindex="-1"><a class="header-anchor" href="#applymatrix4-matrix-matrix4-this"><span>.applyMatrix4 ( matrix : Matrix4 ) : this</span></a></h3><p>用给定矩阵转换几何体的顶点坐标。</p><h3 id="center-this" tabindex="-1"><a class="header-anchor" href="#center-this"><span>.center () : this</span></a></h3><p>根据边界矩形将几何体居中。</p><h3 id="clone-buffergeometry" tabindex="-1"><a class="header-anchor" href="#clone-buffergeometry"><span>.clone () : BufferGeometry</span></a></h3><p>克隆当前的 BufferGeometry。</p><h3 id="copy-buffergeometry-buffergeometry-this" tabindex="-1"><a class="header-anchor" href="#copy-buffergeometry-buffergeometry-this"><span>.copy ( bufferGeometry : BufferGeometry ) : this</span></a></h3><p>将参数指定的 BufferGeometry 的值拷贝到当前 BufferGeometry 中。</p><h3 id="cleargroups-undefined" tabindex="-1"><a class="header-anchor" href="#cleargroups-undefined"><span>.clearGroups ( ) : undefined</span></a></h3><p>清空所有的 groups。</p><h3 id="computeboundingbox-undefined" tabindex="-1"><a class="header-anchor" href="#computeboundingbox-undefined"><span>.computeBoundingBox () : undefined</span></a></h3><p>计算当前几何体的的边界矩形，该操作会更新已有 [param:.boundingBox]。 边界矩形不会默认计算，需要调用该接口指定计算边界矩形，否则保持默认值 null。</p><h3 id="computeboundingsphere-undefined" tabindex="-1"><a class="header-anchor" href="#computeboundingsphere-undefined"><span>.computeBoundingSphere () : undefined</span></a></h3><p>计算当前几何体的的边界球形，该操作会更新已有 [param:.boundingSphere]。 边界球形不会默认计算，需要调用该接口指定计算边界球形，否则保持默认值 null。</p><h3 id="computetangents-undefined" tabindex="-1"><a class="header-anchor" href="#computetangents-undefined"><span>.computeTangents () : undefined</span></a></h3><p>计算并向该几何图形添加切线属性。</p><h3 id="computevertexnormals-undefined" tabindex="-1"><a class="header-anchor" href="#computevertexnormals-undefined"><span>.computeVertexNormals () : undefined</span></a></h3><p>通过面片法向量的平均值计算每个顶点的法向量。</p><h3 id="dispose-undefined" tabindex="-1"><a class="header-anchor" href="#dispose-undefined"><span>.dispose () : undefined</span></a></h3><p>从内存中销毁对象。 如果在运行是需要从内存中删除 BufferGeometry，则需要调用该函数。</p><h3 id="getattribute-name-string-bufferattribute" tabindex="-1"><a class="header-anchor" href="#getattribute-name-string-bufferattribute"><span>.getAttribute ( name : String ) : BufferAttribute</span></a></h3><p>返回指定名称的 attribute。</p><h3 id="getindex-bufferattribute" tabindex="-1"><a class="header-anchor" href="#getindex-bufferattribute"><span>.getIndex () : BufferAttribute</span></a></h3><p>返回缓存相关的 .index。</p><h3 id="hasattribute-name-string-boolean" tabindex="-1"><a class="header-anchor" href="#hasattribute-name-string-boolean"><span>.hasAttribute ( name : String ) : Boolean</span></a></h3><p>如果具有指定名称的属性存在，则返回true。</p><h3 id="lookat-vector-vector3-this" tabindex="-1"><a class="header-anchor" href="#lookat-vector-vector3-this"><span>.lookAt ( vector : Vector3 ) : this</span></a></h3><p>vector - 几何体所朝向的世界坐标。</p><p>旋转几何体朝向控件中的一点。该过程通常在一次处理中完成，不会循环处理。典型的用法是过通过调用 Object3D.lookAt 实时改变 mesh 朝向。</p><h3 id="normalizenormals-undefined" tabindex="-1"><a class="header-anchor" href="#normalizenormals-undefined"><span>.normalizeNormals () : undefined</span></a></h3><p>几何体中的每个法向量长度将会为 1。这样操作会更正光线在表面的效果。</p><h3 id="deleteattribute-name-string-bufferattribute" tabindex="-1"><a class="header-anchor" href="#deleteattribute-name-string-bufferattribute"><span>.deleteAttribute ( name : String ) : BufferAttribute</span></a></h3><p>删除具有指定名称的 attribute。</p><h3 id="rotatex-radians-float-this" tabindex="-1"><a class="header-anchor" href="#rotatex-radians-float-this"><span>.rotateX ( radians : Float ) : this</span></a></h3><p>在 X 轴上旋转几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。</p><h3 id="rotatey-radians-float-this" tabindex="-1"><a class="header-anchor" href="#rotatey-radians-float-this"><span>.rotateY ( radians : Float ) : this</span></a></h3><p>在 Y 轴上旋转几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。</p><h3 id="rotatez-radians-float-this" tabindex="-1"><a class="header-anchor" href="#rotatez-radians-float-this"><span>.rotateZ ( radians : Float ) : this</span></a></h3><p>在 Z 轴上旋转几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。</p><h3 id="scale-x-float-y-float-z-float-this" tabindex="-1"><a class="header-anchor" href="#scale-x-float-y-float-z-float-this"><span>.scale ( x : Float, y : Float, z : Float ) : this</span></a></h3><p>缩放几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.scale 实时旋转几何体。</p><h3 id="setindex-index-bufferattribute-this" tabindex="-1"><a class="header-anchor" href="#setindex-index-bufferattribute-this"><span>.setIndex ( index : BufferAttribute ) : this</span></a></h3><p>设置缓存的 .index。</p><h3 id="setdrawrange-start-integer-count-integer-undefined" tabindex="-1"><a class="header-anchor" href="#setdrawrange-start-integer-count-integer-undefined"><span>.setDrawRange ( start : Integer, count : Integer ) : undefined</span></a></h3><p>设置缓存的 .drawRange。详见相关属性说明。</p><h3 id="setfrompoints-points-array-this" tabindex="-1"><a class="header-anchor" href="#setfrompoints-points-array-this"><span>.setFromPoints ( points : Array ) : this</span></a></h3><p>通过点队列设置该 BufferGeometry 的 attribute。</p><h3 id="tojson-object" tabindex="-1"><a class="header-anchor" href="#tojson-object"><span>.toJSON () : Object</span></a></h3><p>返回代表该 BufferGeometry 的 JSON 对象。</p><h3 id="tononindexed-buffergeometry" tabindex="-1"><a class="header-anchor" href="#tononindexed-buffergeometry"><span>.toNonIndexed () : BufferGeometry</span></a></h3><p>返回已索引的 BufferGeometry 的非索引版本。</p><h3 id="translate-x-float-y-float-z-float-this" tabindex="-1"><a class="header-anchor" href="#translate-x-float-y-float-z-float-this"><span>.translate ( x : Float, y : Float, z : Float ) : this</span></a></h3><p>移动几何体。该操作一般在一次处理中完成，不会循环处理。典型的用法是通过调用 Object3D.rotation 实时旋转几何体。</p>`,97)]))}const d=e(n,[["render",r],["__file","BufferGeometry.html.vue"]]),k=JSON.parse(`{"path":"/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/BufferGeometry.html","title":"BufferGeometry","lang":"zh-CN","frontmatter":{"title":"BufferGeometry","icon":"markdown","order":23,"date":"2023-03-20T00:00:00.000Z","category":["threejs"],"tag":["几何体"],"description":"BufferGeometry 是面片、线或点几何体的有效表述。包括顶点位置，面片索引、法相量、颜色值、UV 坐标和自定义缓存属性值。使用 BufferGeometry 可以有效减少向 GPU 传输上述数据所需的开销。 代码示例 构造函数 BufferGeometry() 创建一个新的 BufferGeometry. 同时将预置属性设置为默认值. 属性 ...","head":[["meta",{"property":"og:url","content":"https://luotianxu1.github.io/threejs/%E5%87%A0%E4%BD%95%E4%BD%93/BufferGeometry.html"}],["meta",{"property":"og:title","content":"BufferGeometry"}],["meta",{"property":"og:description","content":"BufferGeometry 是面片、线或点几何体的有效表述。包括顶点位置，面片索引、法相量、颜色值、UV 坐标和自定义缓存属性值。使用 BufferGeometry 可以有效减少向 GPU 传输上述数据所需的开销。 代码示例 构造函数 BufferGeometry() 创建一个新的 BufferGeometry. 同时将预置属性设置为默认值. 属性 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T09:24:37.000Z"}],["meta",{"property":"article:author","content":"罗天旭"}],["meta",{"property":"article:tag","content":"几何体"}],["meta",{"property":"article:published_time","content":"2023-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T09:24:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BufferGeometry\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T09:24:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"罗天旭\\",\\"url\\":\\"https://luotianxu1.github.io\\",\\"email\\":\\"1265062404@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"BufferGeometry","slug":"buffergeometry","link":"#buffergeometry","children":[]},{"level":2,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[]},{"level":2,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[{"level":3,"title":"BufferGeometry()","slug":"buffergeometry-1","link":"#buffergeometry-1","children":[]}]},{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[{"level":3,"title":".attributes : Object","slug":"attributes-object","link":"#attributes-object","children":[]},{"level":3,"title":".boundingBox : Box3","slug":"boundingbox-box3","link":"#boundingbox-box3","children":[]},{"level":3,"title":".boundingSphere : Sphere","slug":"boundingsphere-sphere","link":"#boundingsphere-sphere","children":[]},{"level":3,"title":".drawRange : Object","slug":"drawrange-object","link":"#drawrange-object","children":[]},{"level":3,"title":".groups : Array","slug":"groups-array","link":"#groups-array","children":[]},{"level":3,"title":".id : Integer","slug":"id-integer","link":"#id-integer","children":[]},{"level":3,"title":".index : BufferAttribute","slug":"index-bufferattribute","link":"#index-bufferattribute","children":[]},{"level":3,"title":".isBufferGeometry : Boolean","slug":"isbuffergeometry-boolean","link":"#isbuffergeometry-boolean","children":[]},{"level":3,"title":".morphAttributes : Object","slug":"morphattributes-object","link":"#morphattributes-object","children":[]},{"level":3,"title":".morphTargetsRelative : Boolean","slug":"morphtargetsrelative-boolean","link":"#morphtargetsrelative-boolean","children":[]},{"level":3,"title":".name : String","slug":"name-string","link":"#name-string","children":[]},{"level":3,"title":".userData : Object","slug":"userdata-object","link":"#userdata-object","children":[]},{"level":3,"title":".uuid : String","slug":"uuid-string","link":"#uuid-string","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":".setAttribute ( name : String, attribute : BufferAttribute ) : this","slug":"setattribute-name-string-attribute-bufferattribute-this","link":"#setattribute-name-string-attribute-bufferattribute-this","children":[]},{"level":3,"title":".addGroup ( start : Integer, count : Integer, materialIndex : Integer ) : undefined","slug":"addgroup-start-integer-count-integer-materialindex-integer-undefined","link":"#addgroup-start-integer-count-integer-materialindex-integer-undefined","children":[]},{"level":3,"title":".applyMatrix4 ( matrix : Matrix4 ) : this","slug":"applymatrix4-matrix-matrix4-this","link":"#applymatrix4-matrix-matrix4-this","children":[]},{"level":3,"title":".center () : this","slug":"center-this","link":"#center-this","children":[]},{"level":3,"title":".clone () : BufferGeometry","slug":"clone-buffergeometry","link":"#clone-buffergeometry","children":[]},{"level":3,"title":".copy ( bufferGeometry : BufferGeometry ) : this","slug":"copy-buffergeometry-buffergeometry-this","link":"#copy-buffergeometry-buffergeometry-this","children":[]},{"level":3,"title":".clearGroups ( ) : undefined","slug":"cleargroups-undefined","link":"#cleargroups-undefined","children":[]},{"level":3,"title":".computeBoundingBox () : undefined","slug":"computeboundingbox-undefined","link":"#computeboundingbox-undefined","children":[]},{"level":3,"title":".computeBoundingSphere () : undefined","slug":"computeboundingsphere-undefined","link":"#computeboundingsphere-undefined","children":[]},{"level":3,"title":".computeTangents () : undefined","slug":"computetangents-undefined","link":"#computetangents-undefined","children":[]},{"level":3,"title":".computeVertexNormals () : undefined","slug":"computevertexnormals-undefined","link":"#computevertexnormals-undefined","children":[]},{"level":3,"title":".dispose () : undefined","slug":"dispose-undefined","link":"#dispose-undefined","children":[]},{"level":3,"title":".getAttribute ( name : String ) : BufferAttribute","slug":"getattribute-name-string-bufferattribute","link":"#getattribute-name-string-bufferattribute","children":[]},{"level":3,"title":".getIndex () : BufferAttribute","slug":"getindex-bufferattribute","link":"#getindex-bufferattribute","children":[]},{"level":3,"title":".hasAttribute ( name : String ) : Boolean","slug":"hasattribute-name-string-boolean","link":"#hasattribute-name-string-boolean","children":[]},{"level":3,"title":".lookAt ( vector : Vector3 ) : this","slug":"lookat-vector-vector3-this","link":"#lookat-vector-vector3-this","children":[]},{"level":3,"title":".normalizeNormals () : undefined","slug":"normalizenormals-undefined","link":"#normalizenormals-undefined","children":[]},{"level":3,"title":".deleteAttribute ( name : String ) : BufferAttribute","slug":"deleteattribute-name-string-bufferattribute","link":"#deleteattribute-name-string-bufferattribute","children":[]},{"level":3,"title":".rotateX ( radians : Float ) : this","slug":"rotatex-radians-float-this","link":"#rotatex-radians-float-this","children":[]},{"level":3,"title":".rotateY ( radians : Float ) : this","slug":"rotatey-radians-float-this","link":"#rotatey-radians-float-this","children":[]},{"level":3,"title":".rotateZ ( radians : Float ) : this","slug":"rotatez-radians-float-this","link":"#rotatez-radians-float-this","children":[]},{"level":3,"title":".scale ( x : Float, y : Float, z : Float ) : this","slug":"scale-x-float-y-float-z-float-this","link":"#scale-x-float-y-float-z-float-this","children":[]},{"level":3,"title":".setIndex ( index : BufferAttribute ) : this","slug":"setindex-index-bufferattribute-this","link":"#setindex-index-bufferattribute-this","children":[]},{"level":3,"title":".setDrawRange ( start : Integer, count : Integer ) : undefined","slug":"setdrawrange-start-integer-count-integer-undefined","link":"#setdrawrange-start-integer-count-integer-undefined","children":[]},{"level":3,"title":".setFromPoints ( points : Array ) : this","slug":"setfrompoints-points-array-this","link":"#setfrompoints-points-array-this","children":[]},{"level":3,"title":".toJSON () : Object","slug":"tojson-object","link":"#tojson-object","children":[]},{"level":3,"title":".toNonIndexed () : BufferGeometry","slug":"tononindexed-buffergeometry","link":"#tononindexed-buffergeometry","children":[]},{"level":3,"title":".translate ( x : Float, y : Float, z : Float ) : this","slug":"translate-x-float-y-float-z-float-this","link":"#translate-x-float-y-float-z-float-this","children":[]}]}],"git":{"createdTime":1726046677000,"updatedTime":1726046677000,"contributors":[{"name":"罗天旭","email":"1265062404@qq.com","commits":1}]},"readingTime":{"minutes":5.57,"words":1672},"filePathRelative":"threejs/几何体/BufferGeometry.md","localizedDate":"2023年3月20日","excerpt":"<h2>BufferGeometry</h2>\\n<p>是面片、线或点几何体的有效表述。包括顶点位置，面片索引、法相量、颜色值、UV 坐标和自定义缓存属性值。使用 BufferGeometry 可以有效减少向 GPU 传输上述数据所需的开销。</p>\\n<h2>代码示例</h2>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">const</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> geometry</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> new</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">BufferGeometry</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(); </span><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 创建一个简单的矩形. 在这里我们左上和右下顶点被复制了两次。 // 因为在两个三角面片里，这两个顶点都需要被用到。 </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">const</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> vertices</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> new</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> Float32Array</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">( [ </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">-</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">1.0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> ] ); </span><span style=\\"--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// itemSize = 3 因为每个顶点都是一个三元组。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">geometry</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">setAttribute</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">( </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">'position'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">new</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">BufferAttribute</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">( </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">vertices</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">3</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> ) ); </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">const</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> material</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> new</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">MeshBasicMaterial</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">( { </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">color</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 0xff0000</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> } ); </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">const</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> mesh</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> new</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E5C07B\\"> THREE</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">Mesh</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">( </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">geometry</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">material</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> );</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{d as comp,k as data};
